                                                                                  (byte *)".sw.vtx")
                                                                                  ,".lmp");
                                                                                  ,".lua");
                                                                                  ,".smx");
                                                                                 (byte *)".dx80.vtx"
                                                                                ".log");
                                                                               (byte *)".xbox.vtx");
                                                                              ".ini");
                                                                             (byte *)".bsp.bz2");
                                                                            ".dylib");
                                                          (uVar2,uVar3,"STEAMVIDEO_INTERFACE_V001");
                                                        (*(int **)((int)this + 0xa8),"expecting {\n"
                                                        (uVar2,uVar3,"STEAMINVENTORY_INTERFACE_V001"
                                                       "STEAMHTMLSURFACE_INTERFACE_VERSION_003");
                                                       "expecting relative tag\n");
                                                       "expecting valid tag type!!!");
                                                      (*(int **)((int)this + 0xa8),"expecting {\n");
                                                      pcVar7 = "cc_noattenuate";
                                                     "STEAMMUSICREMOTE_INTERFACE_VERSION001");
                                                     "expecting relative tag\n");
                                                     (undefined (*) [16])"V_SEQG3_");
                                                    (undefined (*) [16])"V_SEQG2_");
                                                    pcVar7 = "cc_combinedusesgender";
                                                    pcVar7 = "cc_usingcombinedfile";
                                                    pcVar7 = "cctoken";
                                                    uVar1 = FUN_10077120("CAI_BaseNPC",
                                                  ".dx90.vtx");
                                                  (*(int **)((int)this + 0xa8),"expecting {\n");
                                                  (uVar2,uVar3,"STEAMMUSIC_INTERFACE_VERSION001");
                                                  (undefined (*) [16])"V_SEQG1_");
                                                  local_108,".gcf");
                                                  local_108,".sys");
                                                  local_108,".vdf");
                                                  pcVar7 = "cctype";
                                                  uVar1 = FUN_10077120("CAI_BaseNPC",
                                                 "expecting relative tag\n");
                                                (uVar2,uVar3,"STEAMAPPLIST_INTERFACE_VERSION001");
                                                (undefined (*) [16])"V_SEQG0_");
                                                pcVar7 = "event_ramp";
                                                uVar1 = FUN_10077120("CAI_BaseNPC",
                                               ("$AlphaTestReference",&DAT_104e24b4);
                                               ("$surfaceprop",(int)&uStack8 + 3,0);
                                               ("$surfaceprop2",(int)&uStack8 + 3,0);
                                               ("$surfaceprop3",(int)&uStack8 + 3,0);
                                               ("$surfaceprop4",(int)&uStack8 + 3,0);
                                               (uint)"#GP_VIPEsc_CT_CarDriverVIP");
                                              "World textures",1,0);
                                              ("$AlphaTestReference",&DAT_104e24c0);
                                              ("$AlphaTestReference",&DAT_105f88fc);
                                              ("$AlphaTestReference",&DAT_105f8908);
                                              (uVar2,uVar3,"STEAMUGC_INTERFACE_VERSION007");
                                              (undefined (*) [16])"V_G3_");
                                              pcVar7 = "flexanimations";
                                              uVar1 = FUN_10077120("CAI_BaseNPC",
                                             ("$frame",&DAT_104e24b0);
                                             (uint)"#GP_VIPEsc_CT_CarDriver");
                                             (uint)"#GP_VIPEsc_CT_Protect");
                                             (uint)"#GP_VIPEsc_TER_CarDriverBOSS");
                                             (uint)"#GP_VIPEsc_Ter_Bodyguard");
                                             (uint)"#GP_VIPEsc_Ter_Protect");
                                             (undefined (*) [16])"V_SEQG3_"), iVar1 == 0))
                                            (undefined (*) [16])"V_G2_");
                                            pcVar7 = "relativetag";
                                            puVar3 = (uint *)FUN_102659b0((char *)&local_108,".so");
                                            uVar1 = FUN_10077120("CAI_BaseNPC",
                                           (uint)"#GP_VIPEsc_CT_CarPassengerM");
                                           (uint)"#GP_VIPEsc_TER_CarDriverM");
                                           (uint)"#GP_VIPEsc_Ter_Assault");
                                           (uint)"#GP_VIPEsc_Ter_CarPassenger");
                                          ("server_removeban",0,0);
                                          (uVar2,uVar3,"STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001");
                                          (undefined (*) [16])".blob");
                                          (undefined (*) [16])"V_G1_");
                                          pcVar7 = "flextimingtags";
                                          puVar3 = (uint *)FUN_102659b0((char *)&local_108,".dll");
                                          uVar1 = FUN_10077120("CAI_BaseNPC",
                                         "** Walked off of the CNavMesh::m_grid in ForAllAreasOverlappingExtent()\n"
                                         "Error: Sound Operator System has invalid operator KV\n");
                                         (uint)"#GP_VIPCar_CTPassenger");
                                         (uint)"#GP_VIPCar_TerPassenger");
                                         (undefined (*) [16])"V_SEQG2_");
                                        ("distance",*(undefined4 *)((int)this + 0x3c));
                                        ("offset",*(undefined4 *)((int)this + 0x38));
                                        ("theta",*(undefined4 *)((int)this + 0x44));
                                        (uVar2,uVar3,"STEAMHTTP_INTERFACE_VERSION002");
                                        (undefined (*) [16])"V_G0_");
                                        pcVar7 = "absolutetags";
                                        puVar3 = (uint *)FUN_102659b0((char *)&local_108,".cmd");
                                        uVar1 = FUN_10077120("CAI_BaseNPC",
                                       ("$AlphaTestReference",&DAT_104f61e8);
                                       ("$basetexture",&DAT_104e24ac);
                                       (undefined (*) [16])local_104,(undefined (*) [16])"V_SEQG1_")
                                      "Assertion Failed: g_StudioHdrToActivityMaps[i].nRefs == 0"),
                                      "Bad expression operator: \'%c%c\', expected C style operator"
                                      "You have been marked as AFK. You will be kicked in %i seconds\n"
                                      ("engine/defaultcubemap","CubeMap textures",1,0);
                                      ("sprites/light_glow02_add_noz","ClientEffect textures",1,0);
                                      (DAT_106466d8,&local_4c,0x3f800000,"[%s_%i]WP%i",local_24,
                                      (uVar2,uVar3,"STEAMSCREENSHOTS_INTERFACE_VERSION002");
                                      (undefined (*) [16])"V_GRIDY");
                                      pcVar7 = "sequenceduration";
                                      puVar3 = (uint *)FUN_102659b0((char *)&local_108,".bat");
                                      uVar1 = FUN_10077120("CAI_BaseNPC",
                                     "Map contains both normal func_navmesh_zone AND inverse flagged versions, this is redundant and waste of brush ents!!!! If any normal func_navmesh_zone is present, any point outside is automatically invalid!!!"
                                     "R_DrawDecalsAll: overflowing m_aBatches. Reduce # of decals in the scene.\n"
                                     "SetupClientSendTableHierarchy: missing SendTable \'%s\' (referenced by \'%s\').\n"
                                     "This Steam account is being used in another location\n");
                                     "\"%s<%i><%s><%s>\" attacked \"%s<%i><%s><%s>\" with \"%s\" (damage \"%d\") (health \"%d\") (hitgroup \"%s\")\n"
                                     (undefined (*) [16])"button"), iVar4 != 0)) {
                                     (undefined (*) [16])local_104,(undefined (*) [16])"V_SEQG0_");
                                     ,0x170,"Assertion Failed: !m_bNeedsSort"), cVar11 != '\0')) {
                                    ("cable/rope_shadowdepth","Other textures",1,0);
                                    ("dev/glow_downsample","Other textures",1,0);
                                    ("particle/screenspace_fog","ClientEffect textures",1,0);
                                    (uVar2,uVar3,"STEAMREMOTESTORAGE_INTERFACE_VERSION013");
                                    (undefined (*) [16])"V_GRIDX");
                                    ,0x119,"Assertion Failed: !m_bNeedsSort"), cVar3 != '\0')) {
                                    puVar3 = (uint *)FUN_102659b0((char *)&local_108,".com");
                                    uVar1 = FUN_10077120("CAI_BaseNPC",
                                   ("effects/flicker_128","Other textures",0,0),
                                   ("effects/frontbuffer","Other textures",1,0);
                                   ("effects/tearblur","Other textures",1,0);
                                   ("effects/tearblur2","Other textures",1,0);
                                   ("gamestats.log",&DAT_10474db0,"PROFILE"), DAT_1064aae8 == 0)) {
                                   ("gamestats.log",&DAT_105242c4,"PROFILE"), DAT_1076da40 == 0)) {
                                   (pCVar4,&DAT_1032efb8,"LOGDIR");
                                   (undefined (*) [16])"$gender");
                                   (undefined (*) [16])local_104,(undefined (*) [16])"V_G3_");
                                  "#Steam_FinishedBug_Text",1);
                                  "First character of flag specifier must be + or -.\n");
                                  "SNDDMA_InitDirect: DS: couldn\'t restore buffer for FC\n";
                                  "SNDDMA_InitDirect: DS::Lock Sound Buffer Failed for FC\n";
                                  "\x01\x02\x03\x04\x05\x06\a\b\t\n\v\f\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f"
                                  "particle/particle_smokegrenade",local_14,local_10);
                                  ("__ColorDepthWrite00","Other textures",puVar3);
                                  ("__ColorDepthWrite01","Other textures",puVar3);
                                  ("dev/desat","ClientEffect textures",1,0), piVar4 != (int *)0x0))
                                  ("effects/shockwave-1","ClientEffect textures",1,0);
                                  ("engine/lightshaft","Other textures",1,0);
                                  (local_224,"ClientEffect textures",this_00);
                                  (undefined (*) [16])"V_SECTOR");
                                  (undefined (*) [16])"V_WHODIED");
                                  (undefined (*) [16])&stack0xfffffecc,(undefined (*) [16])"V_DIR");
                                  (undefined (*) [16])&stack0xfffffecc,(undefined (*) [16])"V_DIST")
                                  (undefined (*) [16])&stack0xfffffecc,(undefined (*) [16])"V_IDIED"
                                  ,0x119,"Assertion Failed: !m_bNeedsSort");
                                  ,0x170,"Assertion Failed: !m_bNeedsSort");
                                  ,0xb4,"Assertion Failed: !m_bNeedsSort");
                                  iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_3",
                                  pcVar7 = "playoverscript";
                                  puVar3 = (uint *)FUN_102659b0((char *)&local_108,".vbs");
                                  uVar1 = FUN_10077120("CAI_BaseNPC",
                                  uVar3 = FUN_1042df20(pbVar1,(byte *)"RIGHT");
                                  uVar9 = Warning("3d surround sound initialization successful\n");
                                 "CL_ParseClassInfo_EndClasses: server and client classes for \'%s\' use different datatables (server: %s, client: %s)"
                                 "Not Respawning: %s ::STATE != PLAYER_STATE_PLANNING_POST (%s)\n");
                                 "Not Respawning: %s ::STATE != PLAYER_STATE_PLANNING_SQUAD (%s)\n")
                                 "World textures",1,0);
                                 "d:\\projects\\ti\\release\\ti_rel\\src\\game\\shared\\predictioncopy.cpp"
                                 ("media/lobby/menu_bg00.ogv",&DAT_104eefa0);
                                 ("models/props_vehicles/cars/broken_parts/blown_wheel_p1.mdl");
                                 ("models/props_vehicles/cars/broken_parts/blown_wheel_p2.mdl");
                                 ("models/props_vehicles/cars/broken_parts/blown_wheel_p3.mdl");
                                 ((CVProfile *)g_VProfCurrentProfile_exref,"lightcache miss",0);
                                 ((CVProfile *)g_VProfCurrentProfile_exref,"vertex format changes",0
                                 (undefined (*) [16])"-forcesbhsizemb "), uVar5 = extraout_ECX_00,
                                 (undefined (*) [16])"AFK for");
                                 (undefined (*) [16])local_104,(undefined (*) [16])"V_G2_");
                                "CFrameSnapshotManager::BuildSnapshotList:  infinite loop building list!!!"
                                "Cannot mix and match tag specifiers with channel name specifiers.\n"
                                "DataTable_ParseClassInfosFromBuffer: invalid class index (%d).\n");
                                "Error: Operator %s, unknown sound operator attribute %s\n",
                                "Map Error:  Static prop with bogus solid type %d! (%s)\n",
                                "SNDDMA_InitSurround: DS: couldn\'t restore buffer for 3d FL\n";
                                "SNDDMA_InitSurround: DS: couldn\'t restore buffer for FR\n";
                                "SNDDMA_InitSurround: DS::Lock Sound Buffer Failed for 3d FL\n";
                                "SNDDMA_InitSurround: DS::Lock Sound Buffer Failed for 3d FR\n";
                                "World textures",'\0');
                                "effects/lighttracer");
                                "effects/spark");
                                ("%s (%d) : %s\n",
                                ("_rt_vr_predistort",local_c,local_8,8,0,1,0x8100,0);
                                ("_rt_vr_predistort_depth",local_c,local_8,8,0x30,2,0x10c,0);
                                ("debug/debugscreenspacewireframe","Other textures",1,0),
                                ("dev/blurgaussian_3x3","Other textures",1,0);
                                ("dev/halo_add_to_screen","Other textures",1,0);
                                ("effects/flashbang_spots1","Other textures",0,0);
                                ("effects/halo","ClientEffect textures",1,0);
                                ("effects/nightvision","ClientEffect textures",1,0),
                                ("engine/defaultcubemap","CubeMap textures",1,0);
                                ("vgui/dogmarkers/attack","Other textures",1,0);
                                ("vgui/dogmarkers/waypoint","Other textures",1,0);
                                ((char *)((int)this + 0x28),"Model textures",0,0);
                                (iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_2",
                                (piVar6,"Total Slots %i, Spectators %i, Proxies %i\n",local_c,
                                (undefined (*) [16])&stack0xfffffecc,(undefined (*) [16])"V_MYNUM");
                                (undefined (*) [16])&stack0xfffffecc,(undefined (*) [16])"V_RND");
                                (undefined (*) [16])pcVar10,(undefined (*) [16])"tractor");
                                (undefined4 *)"Close event elements completed.");
                                iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_3",0x14)
                                iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_2",
                                pcVar13 = "SNDDMA_InitDirect: DS: couldn\'t restore buffer for RL\n"
                                pcVar13 = "SNDDMA_InitDirect: DS: couldn\'t restore buffer for RR\n"
                                pcVar13 = "SNDDMA_InitDirect: DS::Lock Sound Buffer Failed for RL\n"
                                pcVar14 = "characters/npc16.mdl";
                                pcVar7 = "active";
                                puVar3 = (uint *)FUN_102659b0((char *)&local_108,".exe");
                                uVar1 = FUN_10077120("CAI_BaseNPC",
                               "** Walked off of the CNavMesh::m_grid in ForAllAreasOverlappingExtent()\n"
                               "\"%s<%i><%s><%s>\" triggered \"kill assist\" against \"%s<%i><%s><%s>\" (assister_org \"%d %d %d\") (attacker_org \"%d %d %d\") (victim_org \"%d %d %d\")\n"
                               ("debug/debugwireframevertexcolor","Other textures",1,0);
                               ((CVProfile *)g_VProfCurrentProfile_exref,"ComputeDynamicLighting",0)
                               ((CVProfile *)g_VProfCurrentProfile_exref,"NumRenderables",0);
                               ((CVProfile *)g_VProfCurrentProfile_exref,"PlayerMovementTraces",0);
                               (0xc0800000,0x40800000,&local_3c,0x40000000,"effects/splashwake1",3);
                               (byte *)"Expecting element reference, didn\'t find it!");
                               (iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_3",
                               (undefined (*) [16])"-NOINITMEMORY");
                               (undefined (*) [16])"-RANDOMIZEMEMORY");
                               (undefined (*) [16])"KICKEDBYGM");
                               (undefined (*) [16])"_title");
                               (undefined (*) [16])"refuel_truck");
                               (undefined (*) [16])local_104,(undefined (*) [16])"V_G1_");
                              "%sCallChain <- CSimpleCallChainer(\"%s\", self.GetScriptScope(), true)"
                              "Client SelectWeightedSequence",0);
                              "ComputeStaticLightingForCacheEntry",0);
                              "Could not get a handle for new locator target. Too many targets in use!"
                              "Error: Could not save changes.  File is most likely read only.",0,1);
                              "Error: Operator %s Unknown sound operator attribute %s\n",
                              "Error: Operator %s, unknown sound operator attribute %s\n",
                              "Error: Operator: %s : Unknown sound operator type %s\n",pbVar4,
                              "Icon Target is using effect NODRAW and allow_nodraw_target is false!"
                              "Log Function Help: \n    log_level <channel specifiers> <level>\n    log_color <channel specifiers> <hex color>\n    log_flags <channel specifiers> <+/-flag>\nAll functions are case insensitive.\n\nA channel specifier is either:\n1) tag specifiers: +/-tag1 +/-tag2 ...      // Narrows down to channels with & without given tags.\n2) channel names: name1 name2 ...           // Lists channels by name.\n\nlevel: all, warning, error, off             // Spews anything at or above the specified level.\n                                            // \'off\' turns all spew off, \'all\' turns all spew on.\nhex color: RRGGBBAA                         // A hexadecimal color value in the order RGBA.\nflag: <+/->DoNotEcho                        // Enable/disable a flag to turn off echoing to the console.\n      <+/->ConsoleOnly                      // Enable/disable a flag to send text only to the console.\ne.g.\n    log_level +console -developer warning   // Sets minimum spew level of channels with the tag\n                                            // \'console\' but without the tag \'developer\' to \'warning\'.\n\n    log_color renderdebug bsp FFC08040      // Sets the \'renderdebug\' and \'bsp\' channels to the RGBA color (64, 128, 192, 255).\n\n    log_flags +developer +donotecho         // Turns on the LCF_DO_NOT_ECHO flag for all channels with the \'developer\' tag.\n\n"
                              "Server SelectWeightedSequence",0);
                              "effects/spark");
                              "prop_physics_multiplayer");
                              "shadow depth textures rendered",0);
                              ("$perparticleoutline",*(int *)(param_1 + 0x48) + 0x248);
                              ("_rt_WaterRefraction",uVar4,uVar4,2,0,0,0xc,1);
                              ("dev/blurfiltery_nohdr","Other textures",1,0);
                              ("effects/flashbang","ClientEffect textures",1,0);
                              ((int)this + -4,"Bad spectator password");
                              (byte *)"Expecting attribute name, didn\'t find it!");
                              (byte *)"Expecting attribute type for attribute %s, didn\'t find it!")
                              (iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_2",0x14),
                              (param_1,"Particle textures",1,0);
                              (piVar1,"Particle textures",1,0);
                              (uint *)"oldtall",param_2);
                              (undefined (*) [16])"V_MYNAME");
                              (undefined (*) [16])"_MAP__");
                              (undefined (*) [16])"tractor");
                              (undefined (*) [16])pcVar9,(undefined (*) [16])"tractor");
                              DevMsg("   %d channel(s)\n   %d bits/sample\n   %d samples/sec\n",
                              FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
                              FUN_1042dc40(param_1,(int)"icon_key_wide",param_2);
                              Msg("Unhandled Fake Entity: %s\n",local_18cc);
                              iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_2",0x14);
                              iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_3",0x17
                              iVar5 = FUN_102659a0(pbVar3,(byte *)"block_start");
                              pcVar14 = "characters/npc14.mdl";
                              pcVar7 = "synctofollowinggesture";
                              puVar3 = (uint *)FUN_102659b0((char *)&local_108,".lst");
                              uVar1 = FUN_10077120("CAI_BaseNPC",
                              uVar8 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_1",0x17
                             "#Steam_SubmittingBug_WorkingText",1);
                             "%s %02i l(%03d) c(%03d) r(%03d) rl(%03d) rr(%03d) vol(%03d) ent(%03d) pos(%6d %6d %6d) timeleft(%f) looped(%d) %50s"
                             "%s %02i l(%03d) r(%03d) vol(%03d) ent(%03d) pos(%6d %6d %6d) timeleft(%f) looped(%d) %50s"
                             "Displacement Verts",0,0);
                             "Pool %3i: (%5u-byte) blocks used:%16s (%2d%%) free:%16s (%2d%%) commit:%16s (bytes:%16s)\n"
                             ("#Purchase_Price",4,local_154,local_8,local_d4,&DAT_104ef75c);
                             ("#Purchase_Price",4,local_154,local_8,local_d4,uVar15);
                             ("debug/debugwireframevertexcolor","Other textures",1,0);
                             ("debug_physobj_recorder.txt",&DAT_10548664,0);
                             ("dev/blurfilterx_nohdr","Other textures",1,0);
                             ("dev/blurfiltery_nohdr","Other textures",1,0);
                             ("maps/*_selected_*.txt",&DAT_1045b2f8,&local_8);
                             ((CVProfile *)g_VProfCurrentProfile_exref,"BuildWorldLists",0);
                             ((CVProfile *)g_VProfCurrentProfile_exref,"ComputeLightStyles",0);
                             ((CVProfile *)g_VProfCurrentProfile_exref,"R_LightVec",0);
                             ((CVProfile *)g_VProfCurrentProfile_exref,"RenderWorld",0);
                             ((CVProfile *)g_VProfCurrentProfile_exref,"TraceRay",0);
                             ((CVProfile *)g_VProfCurrentProfile_exref,"VisCache misses",0);
                             ((CVProfile *)g_VProfCurrentProfile_exref,"ticks",0);
                             (byte *)" (cubemap)");
                             (byte *)"Error reading in array attribute \"%s\" element %d");
                             (byte *)"Expecting array attribute value, didn\'t find it!");
                             (iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_3",0x14),
                             (undefined (*) [16])"AFK for");
                             (undefined (*) [16])"\\high"), iVar2 == 0)) {
                             (undefined (*) [16])"background");
                             (undefined (*) [16])"cart-2.mdl");
                             (undefined (*) [16])local_104,(undefined (*) [16])"V_DIR");
                             (undefined (*) [16])local_104,(undefined (*) [16])"V_DIST");
                             (undefined (*) [16])local_104,(undefined (*) [16])"V_G0_");
                             (undefined (*) [16])local_104,(undefined (*) [16])"V_GRIDX");
                             (undefined (*) [16])local_104,(undefined (*) [16])"V_GRIDY");
                             (undefined (*) [16])local_104,(undefined (*) [16])"V_IDIED");
                             (undefined (*) [16])local_104,(undefined (*) [16])"V_SECTOR");
                             (undefined (*) [16])local_104,(undefined (*) [16])"V_WHODIED");
                            "#vgui_CreateDirectoryFail_Info",0,1);
                            "%*sStopping: %s : elapsed time: %f.2\n",1,&DAT_1032bf90,uVar4);
                            "** Walked off of the CNavMesh::m_grid in ForAllAreasOverlappingExtent()\n"
                            "Encountered duplicate attribute definition for attribute \"%s\"!");
                            "Error: Importing operator with same name as existing operator: %s\n",
                            "Error: Invalid SoundEntry hash %i in operator %s\n",*puVar3,
                            "Error: Operator %s Unknown sound operator attribute %s\n",
                            "Error: Operator %s, unknown sound operator attribute %s\n",
                            "Model %s exceeds maxs (%.1f %.1f %.1f vs. %.1f %.1f %.1f)\n",iVar2,
                            "Model %s exceeds mins (%.1f %.1f %.1f vs. %.1f %.1f %.1f)\n",iVar2,
                            "Trailing space on executable name! This will cause Application Verifier and ETW Heap tracing to fail!\n"
                            "materials/console/startup_loading.vtf");
                            ("#SteamStat_BestWeaponSpcl",2,local_194,local_214);
                            ("debug/debugshadowbuffer","Other textures",1,0);
                            ("effects/videofeed","ClientEffect textures",1,0);
                            ("engine/occlusionproxy","ClientEffect textures",1,0);
                            ("engine/occlusionproxy_countdraw","ClientEffect textures",1,0);
                            ("instructor_server_hint_create",0,&DAT_106402f0);
                            ("vr_distort_map_left","Pixel Shaders",0x80,0x80,0x19,0x6030c);
                            ("vr_distort_map_right","Pixel Shaders",0x80,0x80,0x19,0x6030c);
                            (&param_1,"CheckButton.DisabledBgColor",0xff37463e,piVar3);
                            (&param_1,"CheckButton.DisabledFgColor",0xff828282,piVar3);
                            (&param_1,"CheckButton.HighlightFgColor",0xff37463e,piVar3);
                            (0x13,"d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier0\\tslist.h",
                            (iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_2",0x17)
                            (local_14,"CheckButton.SelectedTextColor",*puVar6,piVar3);
                            (local_204,"VGUI textures",*(undefined4 *)((int)this + 0x1e4),
                            (piVar4,"Message \'%s\', sent to \'%s\', has invalid parameter types\n",
                            (this,"Your current chat group is \"%s\"\n",
                            (this,param_3,"FixAPI certificate length error! %i\n",param_6);
                            (uint *)"replaceSelection",(uint)(param_2 != '\0'));
                            (undefined (*) [16])"KICKEDBYGM");
                            (undefined (*) [16])"forklift");
                            (undefined2 *)((int)&local_c + 2),(byte *)"error");
                            (undefined4 *)"Lost our icon target handle returned NULL.");
                            DevWarning("R_DrawDecalsAll: Overflow of mesh builder (%d, %d, %d, %d %d), skipping this decal!\n"
                            Error("Too many vertices (%d, max: %d) or indices (%d, max: %d) in surface.\n"
                            FUN_1013aba0(&local_10,(byte *)"InitialState",(char *)local_858);
                            FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
                            FUN_1013aba0(&local_10,(byte *)"rescue_type",(char *)local_858);
                            FUN_1013aba0(&local_10,(byte *)"wander_type",(char *)local_858);
                            FUN_101f1360(&local_24,(int)"cl_autoreload");
                            iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_3",0x14);
                            iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_1",0x17);
                            iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_2",0x17);
                            iVar5 = FUN_102659a0(pbVar3,(byte *)"save_restore");
                            local_c,((float)fVar3 + fVar1) / (float)param_3,"effects/spark");
                            pcVar13 = "DS:GetCaps failed for 3d sound buffer\n";
                            pcVar13 = "SNDDMA_InitDirect: DS::Lock Sound Buffer Failed for RR\n";
                            pcVar14 = "characters/npc9.mdl";
                            pcVar15 = "Node is visible to player.";
                            pcVar5 = "command";
                            pcVar7 = "forceshortmovement";
                            puVar3 = (uint *)FUN_102659b0((char *)&local_108,".cfg");
                            uVar1 = FUN_10077120("CAI_BaseNPC",
                            uVar2 = FUN_1042df80((byte *)"WriteToCloud",param_1);
                            uVar8 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_1",0x14);
                           "<tr style=\"color:#444444\"><td>%d</td><td>%d</td><td colspan=6>Not Used</td></tr>\n"
                           "<tr><td>%d</td><td>%d</td><td>%s</td><td><i>%d%%</i></td><td>%s</td><td><i>%d%%</i></td><td>%s</td><td>%s</td></tr>\n"
                           "TacticalTV server is restricted to local spectators (class C).\n");
                           "angleOverride",local_92c,0);
                           ("SndEmitterSystem",FUN_101803b0,1,0,DAT_1077e4c0);
                           ("SndEmitterSystem",FUN_101c89d0,1,0,DAT_10673000);
                           ("SoundOperatorSystem",FUN_1003db30,1,0,DAT_10427560);
                           (byte *)"Socket created (sock: %d) (CurTime: %f) (Connectio timeout: %f)"
                           (byte *)"Traffic from %s was blocked for exceeding rate limits\n");
                           (iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_3",0x17),
                           (iVar6 = FUN_10399300((int)"TASK_",(char *)local_418,5), iVar6 == 0)) {
                           (uVar6,L"Valve001",local_530,uVar3 & 0xfffeffff,0,0,local_8,iVar7,0,0,
                           (undefined (*) [16])"-PROCESSHEAPZEROMEM");
                           (undefined (*) [16])&stack0xffffe730,(undefined (*) [16])"holiday"),
                           (undefined (*) [16])local_104,(undefined (*) [16])"V_RND");
                           ,"Video - safe mode fallback",'\x01');
                           ,"Video mode warning",'\x01');
                          "#FileOpenDialog_NewFolderPrompt","#FileOpenDialog_NewFolder_DefaultName",
                          "%f/%d Player [%s][%d][adr:%s] was sent a datagram %d bits (%8.3f bytes)\n"
                          "*** [TV-DELAY] Waiting for TacticalTV Broadcast to finish. Please Wait %f additional seconds for final score calculation."
                          "Assertion Failed: g_StudioHdrToActivityMaps[i].nRefs == 0");
                          "Error: Sound operator %s requires valid channel pointer, being called without one\n"
                          "Error: SoundEmitterSystem not initialized in engine!");
                          "Expecting quoted attribute value for attribute \"%s\", didn\'t find one!"
                          "Show Memory Usage on HUD",1);
                          "Your server needs to be restarted in order to receive the latest update.\n"
                          "[MATCHEND]winning team: %i and losing team: %i are MISSING, this is an error.\n"
                          "\n\nCTIGameRules::RoomUserLoadStateComplete received for player: %s\n",
                          "bot_allow_sub_machine_guns",1);
                          "cvars: mat_texture_limit, mat_texture_list, mat_picmip, mat_texture_list_txlod, mat_texture_list_txlod_sync"
                          "d:\\projects\\ti\\release\\ti_rel\\src\\public\\studio.cpp",0x862,
                          "keyframe_rope");
                          "scripts/sound_operator_stacks.txt");
                          "wp initial",1);
                          ("#game_server_cvar_changed",2,local_314,local_30);
                          ("B: %i G: %i H: %i HO: %i",param_1[0x122c],param_1[0x1079],
                          ((uint)uVar14 & 0xfffffbff,(int)((ulonglong)uVar14 >> 0x20),"World Verts",
                          (0x13,"d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier0\\tslist.h",
                          (iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_2",0x14),
                          (this,"Camera settings can\'t be changed during a live broadcast.\n");
                          (this,param_3,"STEAM certificate length error! %i/%i\n",param_6,0x800);
                          DevMsg("ERROR: LoadSchd (%s): (%s) Malformed AI Schedule.  Expecting \':\' after type \'HINTFLAG\'\n"
                          DevMsg("ERROR: LoadSchd (%s): (%s) Unknown hint flag type  %s!\n",param_1,
                          Error("Too many vertices (%d, max: %d) or indices (%d, max: %d) in surface.\n"
                          FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
                          FUN_101f1360(&local_24,(int)"cl_autoreload");
                          FUN_101f1360(local_14,(int)"joystick");
                          Msg("Unhandled Fake Entity: %s\n",local_18cc);
                          Warning("VOX_TouchSound didn\'t resolve virtual token %s!\n",local_248);
                          cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
                          cVar2 = FUN_1013aba0(&local_10,(byte *)"model",(char *)local_858);
                          cVar2 = FUN_1013aba0(&local_10,(byte *)"nodriving",(char *)local_858);
                          cVar2 = FUN_1013aba0(&local_10,(byte *)"randomvehicle",(char *)local_858);
                          cVar2 = FUN_1013aba0(&local_10,(byte *)"spawn_conditional_value",
                          cVar2 = FUN_1013aba0(&local_10,(byte *)"spawn_type",(char *)local_858);
                          cVar2 = FUN_1013aba0(&local_10,(byte *)"zone_stages",(char *)local_858);
                          iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_1",0x14);
                          iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_2",0x14);
                          iVar5 = FUN_102659a0(pbVar3,(byte *)"mixlayer_trigger");
                          pcVar13 = "-90 0 0";
                          pcVar13 = "90 0 0";
                          pcVar13 = "DS: failed to get 3D listener interface.";
                          pcVar14 = "characters/npc8.mdl";
                          pcVar7 = "distancetotarget";
                          pcVar8 = "command";
                          puVar3 = (uint *)FUN_102659b0((char *)&local_108,"\t");
                          uVar1 = FUN_10077120("CAI_BaseNPC",
                          uVar2 = FUN_1042df80((byte *)"AutoReload_Full",param_1);
                          uVar3 = FUN_1042df20(pbVar1,(byte *)"Defaults");
                          uVar3 = FUN_1042df20(pbVar1,(byte *)"STICK2");
                          uVar5 = (**(code **)(*piVar4 + 100))(uVar2,uVar3,"SteamController003");
                          uVar5 = Warning("ERROR: LoadSchd (%s): (%s) Bad syntax at task #%d (wasn\'t expecting %s)\n"
                          uVar8 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_1",0x17);
                         "CheckOriginInPVS:  cluster would read past end of pvs data (%i:%i)\n");
                         ("%s (%d) : %s\n",
                         (&local_8,"HybridButton.ListButtonInactiveColorAlt",piVar2);
                         (byte *)"Encountered duplicate attribute definition for attribute \"%s\"!")
                         (byte *)"Expecting quoted value for element ID, didn\'t find one!");
                         (byte *)"Steam::GetAuthSessionTicket Failed: k_HAuthTicketInvalid");
                         (byte *)"[FixAPI] Socket connection reset read error %d.");
                         (iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_3",0x14),
                         (undefined (*) [16])"background");
                         (undefined (*) [16])"glass");
                         (undefined (*) [16])local_104,(undefined (*) [16])"V_MYNUM");
                         *(undefined4 *)(iVar7 + 0x14 + local_8),"Other Verts",
                         ,"1.2.5",0x38);
                        "CStaticProp::Init:  Map error, static_prop with bogus SOLID_ flag (%d)! (%s)\n"
                        "Convars:\n\tskill:  %i\n\tnet:  rate %i update %i cmd %i latency %i msec\n\thost_thread_mode:  %i\n\tsv_alternateticks:  %i\n\tai_strong_optimizations:  %i\n\tmat_queue_mode: %i\n"
                        "Error: %s : Math expression type not currently supported in sound operator math_float_accumulate12\n"
                        "Error: %s, input_source_index %i is greater than MAX_SPLITSCREEN_CLIENTS, clamped\n"
                        "Error: Sound operator %s requires valid channel pointer, being called without one\n"
                        "Illegal termination of worker thread! Threads must negotiate an end to the thread before the CThread object is destroyed.\n"
                        "Log Function Help: \n    log_level <channel specifiers> <level>\n    log_color <channel specifiers> <hex color>\n    log_flags <channel specifiers> <+/-flag>\nAll functions are case insensitive.\n\nA channel specifier is either:\n1) tag specifiers: +/-tag1 +/-tag2 ...      // Narrows down to channels with & without given tags.\n2) channel names: name1 name2 ...           // Lists channels by name.\n\nlevel: all, warning, error, off             // Spews anything at or above the specified level.\n                                            // \'off\' turns all spew off, \'all\' turns all spew on.\nhex color: RRGGBBAA                         // A hexadecimal color value in the order RGBA.\nflag: <+/->DoNotEcho                        // Enable/disable a flag to turn off echoing to the console.\n      <+/->ConsoleOnly                      // Enable/disable a flag to send text only to the console.\ne.g.\n    log_level +console -developer warning   // Sets minimum spew level of channels with the tag\n                                            // \'console\' but without the tag \'developer\' to \'warning\'.\n\n    log_color renderdebug bsp FFC08040      // Sets the \'renderdebug\' and \'bsp\' channels to the RGBA color (64, 128, 192, 255).\n\n    log_flags +developer +donotecho         // Turns on the LCF_DO_NOT_ECHO flag for all channels with the \'developer\' tag.\n\n"
                        "The sound hardware is in use by another app.\n\nSelect Retry to try to start sound again or Cancel to run with no sound."
                        "\n\n-----------------------------------------------------------\nConsole:  (last %d bytes)\n\n"
                        "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_dma.cpp"
                        "d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier0\\threadtools.inl",
                        "d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h",
                        "model %s used as a static prop, but not compiled as a static prop\n",iVar4)
                        ("#TI_RoundStatus",5,local_54,local_2c,local_40,uVar6,local_94);
                        ("ScriptStartCameraShot",*(undefined4 *)((int)this + 900));
                        ("SoundSciptHandle ERROR",(undefined4 *)(param_1 + 0xc),&local_11c,0,1);
                        ("VideoMaterial_AttractMovie",pcVar2,&DAT_104eefa0,0);
                        ("VideoMenuMaterial_Background",pcVar5,&DAT_104eefa0,1);
                        ("d:\\projects\\ti\\release\\ti_rel\\src\\game\\shared\\predictioncopy.cpp",
                        ("debug/debugwireframevertexcolor","Other textures",1,0);
                        ("undelete.lst",&DAT_1032efb8,"DEFAULT_WRITE_PATH"), iVar2 != 0)) {
                        ((int *)((int)this + 4),"Client delta ticks out of order.\n");
                        ((int)param_1 + 4,"Server uses different class tables");
                        (DAT_106466ac,*(undefined4 *)((int)this + 0x18),"cl_spec_mode %d",iVar4);
                        (byte *)"*** You killed %s:: Damage: %i Hits: %i [Final is headshot? %s]\n")
                        (byte *)"Fatal assert failed: %s, line %d.  Application exiting.\n");
                        (local_8,"IP %s:%i, Online %s, Version %i (%s)\n",pcVar9,uVar5);
                        (piVar6,"Game Time %s, Mod \"%s\", Map \"%s\", Players %i\n",puVar8);
                        (piVar6,"Local Slots %i, Spectators %i, Proxies %i\n",local_c,
                        (piVar6,"Message \'%s\', sent to \'%s\', has an invalid parameter type\n",
                        (undefined (*) [16])"\\game\\");
                        (undefined4 *)"Instructor.LessonStart");
                        ,"Sound not available",0x10035);
                        0x170,"Assertion Failed: !m_bNeedsSort");
                        ConDMsg("Unknown token: %s\n",param_1);
                        DevMsg("ERROR: LoadSchd (%s): (%s) Malformed AI Schedule.  Expecting \':\' after type \'GOAL.\n"
                        DevMsg("ERROR: LoadSchd (%s): (%s) Unknown goal type  %s!\n",param_1,
                        FUN_1013aba0(&local_10,(byte *)"InitialState",(char *)local_858);
                        FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
                        FUN_1013aba0(&local_10,(byte *)"rescue_type",(char *)local_858);
                        FUN_1013aba0(&local_10,(byte *)"wander_type",(char *)local_858);
                        FUN_101f1360(&local_24,(int)"cl_autoreload");
                        FUN_101f1360(&local_24,(int)"ti_hud_basecolor");
                        FUN_101f1360(local_14,(int)"joystick");
                        FUN_10265920(local_148,0x104,(byte *)"%s%s.wav");
                        FUN_10265920(local_148,0x104,(byte *)"%s/sound/%s%s.wav");
                        FUN_10265920(local_74c,0x100,(byte *)"S(%s%s)");
                        FUN_1042d940(&DAT_10713f70,0x40,(byte *)"%f %f %f");
                        cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
                        cVar2 = FUN_1013aba0(&local_10,(byte *)"spawn_conditional_value",
                        cVar2 = FUN_1013aba0(&local_10,(byte *)"spawn_type",(char *)local_858);
                        cVar2 = FUN_1013aba0(&local_10,(byte *)"zone_stages",(char *)local_858);
                        iVar4 = FUN_10399410((char *)local_18cc,"info_car_spawn",0xe);
                        iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_waypoint_1",0x17);
                        iVar5 = FUN_102659a0(pbVar3,(byte *)"stop_hold");
                        iVar7 = FUN_10265c20((int)local_248,"V_",2);
                        pbVar13 = (byte *)"FlmExtrasFlyoutCheck";
                        pbVar13 = (byte *)"ScavengeCheck";
                        pcVar10 = "%s:%s[%i:%i] async load\n";
                        pcVar10 = "%s:%s[%i:%i] was resident\n";
                        pcVar13 = "DS:Query 3DBuffer for 3d front center failed";
                        pcVar14 = "characters/npc6.mdl";
                        pcVar17 = "Objective.vip_Drive_Close_To_FinalDest";
                        pcVar7 = "lockbodyfacing";
                        pcVar8 = FUN_1042c450((char *)pbVar14,(int)"FlmExtrasFlyout_");
                        puVar3 = (uint *)FUN_102659b0((char *)&local_108,"   ");
                        uVar1 = FUN_10077120("CAI_BaseNPC",
                        uVar2 = FUN_100845f0((byte *)param_1,(byte *)"cspinup");
                        uVar2 = FUN_1042df80((byte *)"AutoReload_Default",param_1);
                        uVar2 = FUN_1042df80((byte *)"AutoReload_On",param_1);
                        uVar3 = FUN_1042df20(pbVar1,(byte *)"STICK1");
                        uVar3 = FUN_1042df80(pbVar1,(byte *)"ControllerEnabled");
                        uVar5 = FUN_10399710((byte *)"Interrupts",local_418);
                        uVar8 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_1",0x14);
                       "%d %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f %.0f  %d \n"
                       "%s is specified as the \'Next Script\' and cannot be kicked out of the queue\n"
                       "(Original algorithm) Target Scalar = %4.2f  Min/Max( %4.2f, %4.2f )  Current Scalar: %4.2f"
                       "</tbody></table></div><script>$(document).ready(function(){$(\".sbhTable\").accordion( { collapsible:true, active:false } );});</script>"
                       "<table class=\"dataTable\" style=\"border:1px solid grey;text-align:right;margin:1px;width:auto;\"><tbody><tr style=\"color:white;border:1px solid grey;margin:2px\"><th>Pool&nbsp;</th><th>Size&nbsp;</th><th>Used#&nbsp;</th><th>(%%)&nbsp;</th><th>Free#&nbsp;</th><th>(%%)&nbsp;</th><th>Commit#&nbsp;</th><th>Commit mem&nbsp;</th></tr>"
                       "CAI_Navigator::MoveNormal calling SetSequence(%s) and SetActivity(%s)");
                       "Materials using the pupil proxy must have a field called $lighting which has a value of 0.5!\n"
                       "ProcessClientInfo: TacticalTV can not connect to game directly.\n");
                       "ProcessUsercmds:  Incorrect reading frame (check sending and receiving code for mismatches)!\n"
                       "Remote machine using wrong bugreporter dll. Try running with \'-remotebug\'\n"
                       "[Blobulator] Preventing deadlock in SwapFragments(). Expect visual corruptions.  Please set your Effect Detail to a lower setting.\n"
                       "[NPCCAR] BUG BUG BUG!! CAR LOST m_pCurrentWPGoal after CheckClearShorterPathToNextGoal\n"
                       "\"%s<%i><%s><%s>\" committed suicide with \"%s\" (attacker_org \"%d %d %d\")\n"
                       "\"%s<%i><%s><%s>\" committed suicide with \"world\"  (attacker_org \"%d %d %d\")\n"
                       "\"%s<%i><%s><%s>\" killed \"%s<%i><%s><%s>\" with \"%s\" (attacker_org \"%d %d %d\") (victim_org \"%d %d %d\")\n"
                       "_OnLogicBranchChanged",0.0,(int *)this,(int *)this,0.0);
                       "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\vprof_record.cpp",uVar4);
                       "d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h",
                       "d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h",0xb4
                       "unhandled input: (%s) -> (%s), from (%s,%s); target entity not found\n");
                       ("$basetexture",(int)&param_1 + 3,0);
                       ("%s (%d) : %s\n",
                       ((int)&local_10 + 2,"HybridButton.FocusDisabledColor",piVar2);
                       ((int)&local_10 + 2,"HybridButton.ListButtonActiveColor",piVar2);
                       ((int)&local_10 + 2,"HybridButton.ListButtonInactiveColor",piVar2);
                       (byte *)"EHandles differ (net) 0x%p (pred) 0x%p\n");
                       (byte *)"LocalTransfer offset miss - class: %s, DT: %s, offset: %d");
                       (byte *)"color differs (net %d %d %d %d pred %d %d %d %d)\n");
                       (byte *)"int differs (net %i pred %i) diff(%i)\n");
                       (byte *)"short differs (net %i pred %i) diff(%i)\n");
                       (undefined (*) [16])"1.0.0.0",0x800);
                       (undefined (*) [16])"_MAP__");
                       (undefined (*) [16])"npc13.mdl");
                       (undefined (*) [16])"refuel_truck");
                       (undefined (*) [16])"srctv",0x800);
                       (undefined4 *)"scripts/GameUIAnimations.txt",1);
                       ,"Assertion Failed: !m_bNeedsSort");
                       ,(undefined (*) [16])"V_MYNAME");
                       0x119,"Assertion Failed: !m_bNeedsSort");
                       0x170,"Assertion Failed: !m_bNeedsSort");
                      "%s (%d) : Assertion callstack...(NOT IMPLEMENTED IN NEW LOGGING SYSTEM.)\n");
                      "%s received AE_NPC_HURT_INTERACTION_PARTNER anim event, but it\'s not interacting with anything.\n"
                      "----------------------------------------------------------------------------------------------------------------------------------------------------\n"
                      "Client: Emitting SoundEntry: %i : %s : %s : operators: %s : seed: %i\n",
                      "Client: Received SoundEntry: %i : %s : %s : operators: %s: seed: %i\n",
                      "Error: %s : Math expression type not currently supported in sound operator math_float_accumulate12\n"
                      "NOT opened (there is too many started lessons of this type).\n");
                      "Server: Emitting SoundEntry: %i : %s : %s : operators: %s : seed: %i\n",
                      "Stack Shutdown: Stack: %s : Operator: %s\n",param_2,
                      "\t[%s] = C_BaseEntity::Instance([%s]->GetPotentialUseEntity())\n",param_2,
                      "\t[%s] = C_BaseEntity::Instance([%s]->GetUseEntity())\n",param_2,param_3);
                      "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\vprof_record.cpp",0x192);
                      &DAT_10348f08,"Channel Name","Severity","Color","Flags",&DAT_10348edc);
                      ("#L4D360UI_Scroll_Progress",3,local_108,local_88,local_188);
                      ("%s (%d) : %s\n",
                      ("-startmap",*(int *)(param_1 + 0x1c) * 0x40 + *(int *)(param_1 + 8));
                      ("debug/debugparticlewireframe","Other textures",1,0);
                      ("debug/debugwireframevertexcolor","Other textures",1,0);
                      ("debug/env_cubemap_model_translucent_no_bumps","Other textures",1,0);
                      ("media/attractvids.txt",&DAT_104eefa0,local_44,0,0,0);
                      ("models/blob/env_cubemap_model_translucent_fountain","Other textures",1,0);
                      ("models/debug/debugmesh_transparent","Other textures",1,0);
                      ("models/ihvtest/tongue_bumped","Other textures",1,0);
                      ("scripts/sound_prefetch.txt",&DAT_10323b20,&local_70,0,0,0);
                      ("sentences.m3u",&DAT_1032efb8,&DAT_10323b20);
                      ("shadertest/wireframevertexcolornocull","Other textures",1,0);
                      ("stringtable_dictionary_fallback.dct",&DAT_1032b798,param_1,0,0,0);
                      ("sv_benchmark_results.txt",&DAT_104542a4,"DEFAULT_WRITE_PATH");
                      ("textwindow_temp.html",&DAT_10528acc,"DEFAULT_WRITE_PATH");
                      ((int *)(param_1 + 4),"%s overflowed reliable buffer\n",param_1 + 0x34);
                      ((int *)(piVar1[1] + 4),"leaving splitscreen");
                      ((int)param_1 + 4,"Server uses different class tables");
                      ((int)puVar4 + 5,&DAT_1036703c,"DEFAULT_WRITE_PATH");
                      (0x13,"d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier0\\tslist.h",0x2a3)
                      (0x73,"d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier0\\tslist.h",0x2a3)
                      (DAT_106466ac,*(undefined4 *)(iVar4 + 0x18),"cl_soundscape_flush\n");
                      (DAT_10681754,iVar3,"%s,%s,%d,%d,%.3f,%d,%.3f,%d,=D%d/I$1\n",puVar5,puVar4,
                      (DAT_1068253c + 4,"%4.0f ms : %s\n",(double)((float)fVar6 * 1000.0));
                      (DAT_10730cc4,&local_24,"%02d: dur(%8.2f) amp(%8.2f) freq(%8.2f)",iVar3 + 1,
                      (DAT_10730cc4,&local_68,"%d len(%6.3f) (%6.3f %6.3f %6.3f)",param_1,
                      (DAT_10730cd0,&local_2c,0,0,local_10,uVar15,0,0x40,"%s:(%d)",uVar10);
                      (byte *)"Fatal assert failed: %s, line %d.  Application exiting.\n");
                      (iVar15,iVar17 + 100,local_30,local_24,0xff,0xff,0xff,0xff,"EXCLUDED");
                      (iVar6,"Action",local_13c,4,*(undefined4 *)(param_1 + 0x12fc),0);
                      (iVar6,&DAT_1054f200,"#GameUI_KeyButton",4,*(undefined4 *)(param_1 + 0x1300),0
                      (local_114,&DAT_1032efb8,"DEFAULT_WRITE_PATH");
                      (local_c,3,"scripts/sound_operator_stacks.txt",&DAT_10323b20);
                      (piVar6,"Message \'%s\', sent to \'%s\', has an invalid parameter type\n",
                      ConColorMsg((Color *)&local_8,"Model %s has a bad texture %s\n");
                      DevMsg("ERROR: LoadSchd (%s): (%s) Malformed AI Schedule.  Expecting \':\' after type \'PATH.\n"
                      DevMsg("ERROR: LoadSchd (%s): (%s) Unknown path type %s!\n",param_1,
                      FUN_10120c20(&local_38,(undefined (*) [16])"(itemnumber)",local_c0);
                      FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
                      FUN_101f1360(&local_24,(int)"ti_hud_basecolor");
                      FUN_101f1360(local_14,(int)"joy_vibration");
                      FUN_1037bf80(this_01,'\0',"","");
                      FUN_10380530((int)param_1,0,(byte *)"Event %s was missing tag %s for wav %s\n"
                      FUN_10383230(this_01,'\0',"","");
                      FUN_103873f0((int)param_1,0,(byte *)"Event %s was missing tag %s for wav %s\n"
                      Msg("%s checking block %d\n",iVar2,uVar12);
                      Msg("Loaded tool \'%s\'\n",uVar9);
                      Msg("TCP <- %s: connection accepted\n",pcVar6);
                      Warning("Couldn\'t parse script sequence \'%s\': expected <anim command>, found \'%s\'\n"
                      bVar5 = FUN_1013c980((int)param_1,(int)"clearmessage");
                      cVar2 = FUN_1013aba0(&local_10,(byte *)"CoverSpot",(char *)local_858);
                      cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
                      cVar2 = FUN_1013aba0(&local_10,(byte *)"model",(char *)local_858);
                      cVar2 = FUN_1013aba0(&local_10,(byte *)"nodriving",(char *)local_858);
                      cVar2 = FUN_1013aba0(&local_10,(byte *)"randomvehicle",(char *)local_858);
                      cVar2 = FUN_1013aba0(&local_10,(byte *)"spawn_conditional_value",
                      cVar2 = FUN_1013aba0(&local_10,(byte *)"spawn_type",(char *)local_858);
                      cVar2 = FUN_1013aba0(&local_10,(byte *)"targetname",(char *)local_858);
                      cVar2 = FUN_1013aba0(&local_10,(byte *)"zone_stages",(char *)local_858);
                      iVar4 = FUN_10399410((char *)local_18cc,"info_forklift_spawn",0x13);
                      iVar4 = FUN_10399410((char *)local_18cc,"info_hostage_spawn_1",0x14);
                      iVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#DeathMsg_Killed",0x40);
                      iVar5 = FUN_102659a0(pbVar2,(byte *)"invert_match");
                      iVar5 = FUN_102659a0(pbVar3,(byte *)"delay");
                      local_38 = (float)FUN_1014fb90(param_2,(int *)"effects/fleck_pill3");
                      local_40[0] = (uint *)FUN_1014fb90(param_2,(int *)"effects/fleck_pill1");
                      local_40[1] = (uint *)FUN_1014fb90(param_2,(int *)"effects/fleck_pill2");
                      pbVar13 = (byte *)"SurvivalCheck";
                      pcVar11 = "radius";
                      pcVar11 = "suppress_on_restore";
                      pcVar13 = "DS:Query 3DBuffer for 3d rear right failed";
                      pcVar14 = "characters/npc4.mdl";
                      pcVar7 = "fixedlength";
                      pcVar8 = "#DeathMsg_Killed";
                      piVar11 = (int *)FUN_10135420("hostage_entity",-1,'\x01');
                      puVar3 = (uint *)FUN_102659b0((char *)&local_108,"./././");
                      uVar1 = FUN_10077120("CAI_BaseNPC",
                      uVar2 = FUN_100845f0((byte *)param_1,(byte *)"lfomodvol");
                      uVar2 = FUN_1042df80((byte *)"HudColor_Blue",param_1);
                      uVar2 = FUN_1042df80((byte *)"HudColor_Default",param_1);
                      uVar2 = FUN_1042df80((byte *)"HudColor_Green",param_1);
                      uVar2 = FUN_1042df80((byte *)"HudColor_Orange",param_1);
                      uVar3 = (**(code **)(*this + 0x8ec))("#Radio_EnemySpotted",0xb);
                      uVar3 = (**(code **)(*this + 0x8ec))("#Radio_HealMe",0xd);
                      uVar3 = (**(code **)(*this + 0x8ec))("#Radio_TakePoint",10);
                      uVar3 = (**(code **)(*this + 0x8ec))("#Radio_TakingFire",0xc);
                      uVar3 = (**(code **)(*this + 0x8ec))("Arm this bomb!",0x12);
                      uVar3 = (**(code **)(*this + 0x8ec))("Bomb is Here",0xf);
                      uVar3 = (**(code **)(*this + 0x8ec))("Defuse this bomb!",0x11);
                      uVar3 = (**(code **)(*this + 0x8ec))("Need a breach here",0xe);
                      uVar3 = (**(code **)(*this + 0x8ec))("Plant bomb here",0x10);
                      uVar3 = (**(code **)(*this + 0x8ec))("Rally Up!",9);
                      uVar3 = FUN_1042df20(pbVar1,(byte *)"START");
                      uVar3 = FUN_1042df20(pbVar14,(byte *)"FlmScavengeFlyout");
                      uVar3 = FUN_1042df80(pbVar1,(byte *)"ControllerDisabled");
                      uVar4 = FUN_100845f0((byte *)param_1,(byte *)"Stoplight_C3");
                      uVar5 = FUN_100845f0((byte *)param_1,(byte *)"Stoplight_B1");
                      uVar5 = FUN_100845f0((byte *)param_1,(byte *)"Stoplight_B2");
                      uVar5 = FUN_100845f0((byte *)param_1,(byte *)"Stoplight_B3");
                      uVar5 = FUN_100845f0((byte *)param_1,(byte *)"Stoplight_C1");
                      uVar5 = FUN_100845f0((byte *)param_1,(byte *)"Stoplight_C2");
                      uVar5 = FUN_10399710((byte *)"HintFlags",local_418);
                     "%.2f%% of pixels above %d%% target @ %4.2f%%  Target Scalar = %4.2f  Min/Max( %4.2f, %4.2f )  Final Scalar: %4.2f"
                     "%d  %d  %.0f %.0f %.0f   %.0f %.0f %.0f   %.0f %.0f %.0f   %.0f %.0f %.0f   %s\n"
                     "%f: Player %s at [%0.2f %0.2f %0.2f] took %f damage from %s, type %s\n");
                     "%s: %s(%d), cycle: %.2f cyclerate: %.2f playbackrate: %.2f\n",local_c,pcVar9,
                     "%s\t%d\t%.3f\t%d\t%.3f\t%d\t%.3f\t%.3f\t%.2f\t%.3f\t%.3f\n",puVar15,puVar9[6],
                     "(class %s): Out-of-range value (%f) in SendPropFloat \'%s\', clamping.\n");
                     "C_ParticleSystem::ClientThink SkipToTime",0,"Particle Simulation",false,4);
                     "Fire",false,4);
                     "GetTickInterval returned bogus tick interval (%f)[%f to %f is valid range]");
                     "ProcessUsercmds:  Overflowed reading usercmd data (check sending and receiving code for mismatches)!\n"
                     "SendTable prop %s::%s is a 1-bit signed property. Use SPROP_UNSIGNED or the client will never receive a value.\n"
                     "Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\%s"
                     "[RULES] THE NEXT ROUND IS THE FINAL ROUND (%i rounds played out of total: %i)\n"
                     "simpleworldmodel_albedo",1,local_4c,0x3f800000);
                     "simpleworldmodel_lightmap",2,local_4c,0x3f800000);
                     (&local_8,"ListPanel.DisabledSelectedTextColor",
                     (&local_8,"ListPanel.SelectedTextColor",*(undefined4 *)((int)this + 0x280),
                     (&param_1,"Button.ArmedBgColor",*(undefined4 *)((int)this + 0x27c),piVar1);
                     (&param_1,"Button.ArmedTextColor",*(undefined4 *)((int)this + 0x278),piVar1);
                     (&param_1,"Button.DepressedBgColor",*(undefined4 *)((int)this + 0x27c),piVar1);
                     (&param_1,"Button.DepressedTextColor",*(undefined4 *)((int)this + 0x278),piVar1
                     (&param_1,"CheckButton.BgColor",0x969696,param_1);
                     (&param_1,"CheckButton.Border1",0x141414,piVar1);
                     (&param_1,"CheckButton.Border2",0x5a5a5a,piVar1);
                     (&param_1,"CheckButton.Check",0x141414,piVar1);
                     (&param_1,"InlineEditPanel.DashColor",*(undefined4 *)((int)this + 0x1a8),piVar2
                     (&param_1,"InlineEditPanel.FillColor",*(undefined4 *)((int)this + 0x1a4),piVar2
                     (&param_1,"SliderControl.BackgroundColor",*(undefined4 *)((int)this + 0x1fc));
                     (&param_1,"SliderControl.BackgroundFocusColor",
                     (&param_1,"SliderControl.ForegroundColor",*(undefined4 *)((int)this + 500));
                     (&param_1,"SliderControl.ForegroundFocusColor",
                     (&param_1,"SliderControl.MarkColor",*(undefined4 *)((int)this + 0x1ec));
                     (&param_1,"SliderControl.MarkFocusColor",*(undefined4 *)((int)this + 0x1f0));
                     (&param_1,"SteamCloudProgress.ColorDone",*(undefined4 *)((int)pvVar3 + 0x368));
                     (&param_1,"SteamCloudProgress.ColorDoneFade",
                     (&param_1,"SteamCloudProgress.ColorRemaining",
                     (&param_1,"SteamCloudText.Color",*(undefined4 *)((int)pvVar3 + 0x370));
                     (**(code **)(*(int *)puVar3[1] + 0xbc))("$basetexture",&DAT_104f61e0);
                     (byte *)"%s: Main: %6.2f, MainWt: %6.2f, Rdr: %6.2f, RdrWt: %6.2f (%3d fps) ");
                     (byte *)"ReplyReservationRequest");
                     (local_8,"SectionedListPanel.OutOfFocusSelectedTextColor",param_1);
                     (local_c,"SectionedListPanel.OutOfFocusSelectedBgColor",param_1);
                     *(undefined4 *)(param_1 + 0xc),0,uVar5,2,'\0',"_rt_CSMShadowDepth");
                     *(undefined4 *)(param_1 + 0xc),0,uVar6,2,'\0',"_rt_CSMShadowDummy");
                     ,"Client_Animation_Threaded",false,4);
                    "  Attempted to send %u bytes on unknown steam socket address %s\n",iVar1,pcVar6
                    " %d %llx, type(%s), psuedoAddr(%s), connected(%s), connecting(%s), relay(%s), bytesQueued(%d), packetsQueued(%d), lasterror(%s)\n"
                    "Can\'t determine username. Please set email address with bugreporter_username ConVar and run _bugreporter_restart autoselect\n"
                    "Warning: Active AI script conditions associated with an non-existant or destroyed NPC\n"
                    "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\vprof_record.cpp",0x157);
                    "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\vprof_record.cpp",0x1d5);
                    ("d:\\projects\\ti\\release\\ti_rel\\src\\engine\\cl_ents_parse.cpp",0x225,0);
                    ("d:\\projects\\ti\\release\\ti_rel\\src\\engine\\cl_ents_parse.cpp",0x28b,0);
                    ("d:\\projects\\ti\\release\\ti_rel\\src\\game\\client\\cdll_client_int.cpp",
                    ("debug/debugwireframevertexcolor","Other textures",1,0);
                    ("debug_physobj_recorder.txt",&DAT_1051c19c,0);
                    ("dev/copyfullframefb",&DAT_103236cf,1,0,*(undefined4 *)(unaff_EBP + -0x14),
                    ("dev/copyfullframefb",&DAT_103236cf,1,0,local_18,param_2,param_3,param_3,0,0,
                    ("maplist.txt",&DAT_10323770,&DAT_1032376c);
                    ("models/props_glass_shards/mirror_shard-1_small.mdl",0);
                    ("models/props_glass_shards/mirror_shard-2_small.mdl",0);
                    ("models/props_glass_shards/mirror_shard-3_small.mdl",0);
                    ("resource/key_binds.txt",&DAT_104eefa0,local_3c,0,0,0);
                    ("scripts/bugreporter_defaults.txt",0,local_34,0,0,0);
                    ("stringtable_dictionary.dct",&DAT_1032b798,param_1,0,0,0);
                    ((&PTR_s_refract_hot_vmt_106b5288)[*(int *)(param_1 + 0x24)],"Other textures",1,
                    ((CVProfile *)g_VProfCurrentProfile_exref,"AINet");
                    ((CVProfile *)g_VProfCurrentProfile_exref,"CInferno::InfernoThink (damage)",0,
                    ((CVProfile *)g_VProfCurrentProfile_exref,"CInferno::InfernoThink (spread)",0,
                    ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseAnimating::ThreadedBoneSetup",0
                    ((CVProfile *)g_VProfCurrentProfile_exref,"FilterTime",0,"FRAMERATE LIMITER",
                    ((CVProfile *)g_VProfCurrentProfile_exref,"_Host_ProcessVoice_Server",0,"Game",
                    ((int)puVar2 + 5,"DEFAULT_WRITE_PATH",local_5c,0,0,0);
                    ((int)this + -4,"No more split screen slots!");
                    (*ppcVar1[3])(*(undefined4 *)((int)this + 0xa8),"%s: unexpected token %s\n",
                    (0x13,"d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier0\\tslist.h",0x1bb);
                    (0x13,"d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier0\\tslist.h",0x2a3);
                    (0x14,0x14,0x226,0x23,0xff,0xff,0xff,0xff,"%s%s\n%s Kb    %dx%d    %s",local_10,
                    (0x73,"d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier0\\tslist.h",0x2a3);
                    (2,"resource/SlideshowDisplayScreen.res","SlideshowDisplayScreen",0);
                    (DAT_10681754,local_8,"addip 0 %i.%i.%i.%i\r\n",uVar1 & 0xff,uVar1 >> 8 & 0xff,
                    (DAT_106cb7e8,*local_8,"v %f %f %f\n",
                    (DAT_106cb7e8,param_5,"%d %f %f %f %f %f %f %f %f\n",0,(double)*pfVar1,
                    (PTR_s_voice_ban_dat_106b50f0,&DAT_1051c19c,"PROFILE");
                    (PTR_s_voice_ban_dat_106b50f0,&DAT_10528acc,"PROFILE");
                    (iVar5 = FUN_10370b30(local_25c,(byte *)"placementOrigin"), 0 < iVar5 + 1)))) {
                    (local_8,2,"scripts/soundscapes_manifest.txt",&DAT_104eefa0);
                    (local_c,2,"scripts/soundscapes_manifest.txt",&DAT_1045b2f0);
                    (param_2,param_3,0xc0,0x23,0xff,0xff,0xff,0xff,"%s%s\n%s",local_38,local_8,
                    (piVar3,0xf,"Rain simulation: %du (%d tracers)",(int)uVar12,uVar6);
                    (piVar6,"Message \'%s\' not handled by panel \'%s\'\n",puVar9,uVar8);
                    (piVar6,"Message \'%s\', sent to \'%s\', has invalid parameter types\n",puVar9,
                    *(int *)("NPC %s failed to stop properly, slamming activity\n" +
                    ,pauVar1,"VTOOLDICTIONARY003");
                    DevMsg("%s can see %s!\n");
                    DevMsg("%s failed on: %s\n");
                    DevMsg("DispInfo_DrawDecalsGroup: material is NULL decal %i.\n",uVar15);
                    DevMsg("ERROR: LoadSchd (%s): (%s) Malformed AI Schedule.  Expecting \':\' after type \'STATE.\n"
                    DevWarning(1,"AutoIKRelease (%s) got a NULL pBone %d\n",iVar3,iVar4);
                    Error("CPropCullStack::CallPropProxy - overflowed m_nNewProxyProps");
                    FUN_0041e3a0(param_1,(byte *)"LOWVIOLENCE");
                    FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
                    FUN_1017f8a0(local_94,0.0,"fx.fire_hydrant_explode",param_3,0,0);
                    FUN_1017f8a0(local_94,0.0,"fx.lamp_post_uproot",param_3,0,0);
                    FUN_1017f8a0(local_94,0.0,"fx.parking_meter_break",param_3,0,0);
                    FUN_1017f8a0(local_94,0.0,"fx.tree_uproot",param_3,0,0);
                    FUN_101f1360(local_14,(int)"joy_vibration");
                    FUN_101f1360(local_14,(int)"option_lean_method");
                    FUN_10265920(local_148,0x104,(byte *)"%s%s.wav");
                    FUN_10265920(local_148,0x104,(byte *)"%s/sound/%s%s.wav");
                    FUN_10265920(local_74c,0x100,(byte *)"S(%s%s)");
                    FUN_10265b40(local_84c," ",0x400,0xffffffff);
                    FUN_10265f50(param_1,(byte *)"LOWVIOLENCE");
                    FUN_102728c0(local_6c,"effects/halo");
                    FUN_10399710(param_1,(byte *)"LOWVIOLENCE");
                    FUN_1042d940(param_2 + 200,0x20,(byte *)"melee");
                    FUN_1042df80(param_1,(byte *)"LOWVIOLENCE");
                    LoggingSystem_Log(DAT_104c2ea8,1,"Unknown sound operator stack arg %s",pbVar2);
                    Msg("%s(%d): Hooking duplicate restored song track %s\n",
                    Msg("%s(%d): Negative delay greater than sound length for sound \'%s\'.\n",
                    Msg("Area %d has area %d on both 2-way and incoming list, should only be on one\n"
                    Msg("Couldn\'t create script object");
                    Msg("Template Connection Found: Key %s (\"%s\") in entity named \"%s\"(%d) matches entity %d\'s targetname\n"
                    Warning("Encountered a circular dependency with library %s!\n");
                    Warning("mismatching cookie from %s, client %llx, server %llx!\n",pcVar5,iVar15,
                    bVar5 = FUN_1013c980((int)param_1,(int)"boxcolor");
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"IdealSpeed",(char *)local_858);
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"NextKey",(char *)local_858);
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"SpawnChance",(char *)local_858);
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"Target2",(char *)local_858);
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"Target3",(char *)local_858);
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"spawn_conditional_value",
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"spawn_type",(char *)local_858);
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"targetname",(char *)local_858);
                    cVar2 = FUN_1013aba0(&local_10,(byte *)"zone_stages",(char *)local_858);
                    iVar4 = FUN_10399410((char *)local_18cc,"info_car_spawn",0xe);
                    iVar4 = FUN_10399410((char *)local_18cc,"info_heli_wp",0xc);
                    iVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#DeathMsg_Bash",0x40);
                    iVar5 = FUN_102659a0(pbVar2,(byte *)"stop_this_entry");
                    iVar5 = FUN_102659a0(pbVar3,(byte *)"pitch");
                    local_1c[0] = "soundlevel not supported on sub-soundscapes\n";
                    local_2c = "#PORTAL2_ButtonAction_Exit";
                    local_3c = "#TI_ReturnToLobbyQ";
                    local_40 = "#TI_ReturnToLobby";
                    pbVar13 = (byte *)"VersusSoftLock";
                    pcVar11 = "SNDLVL_";
                    pcVar11 = "origin";
                    pcVar11 = "random";
                    pcVar11 = "suppress_on_restore";
                    pcVar12 = "";
                    pcVar12 = "FCVAR_NEVER_AS_STRING";
                    pcVar13 = "DS:Query 3DBuffer for 3d rear left failed";
                    pcVar14 = "%s %s %s %s";
                    pcVar14 = "characters/npc2.mdl";
                    pcVar15 = "Do not have LOS to player";
                    pcVar15 = "Has LOS to enemy";
                    pcVar15 = "Node isn\'t clear.";
                    pcVar15 = "Not the nearest node.";
                    pcVar17 = "Objective.VIP_Escort";
                    pcVar17 = "Objective.vip_Escort_On_Foot";
                    pcVar5 = "resumecondition";
                    pcVar8 = "#DeathMsg_Bash";
                    pcVar8 = "#DeathMsg_Fire";
                    pcVar8 = "#DeathMsg_FireSelf";
                    pcVar8 = "command";
                    puVar3 = (uint *)FUN_102659b0((char *)&local_108,"~/");
                    uVar1 = FUN_10077120("CAI_BaseNPC",
                    uVar2 = FUN_100845f0((byte *)param_1,(byte *)"lfomodpitch");
                    uVar2 = FUN_100845f0((byte *)param_1,(byte *)"lforate");
                    uVar3 = FUN_1042df20(pbVar1,(byte *)"PAUSE");
                    uVar3 = FUN_1042df20(pbVar14,(byte *)"FlmSurvivalFlyout");
                    uVar3 = FUN_1042df80(pbVar1,(byte *)"VibrationEnabled");
                    uVar4 = FUN_10265f50(pbVar3,(byte *)"south-east");
                    uVar4 = FUN_10399710((byte *)param_1,(byte *)"Stoplight_A3");
                    uVar4 = FUN_10399710(pbVar3,(byte *)"south-east");
                    uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"angle");
                    uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"angles");
                    uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"maxcpulevel");
                    uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"maxgpulevel");
                    uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"mincpulevel");
                    uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"mingpulevel");
                    uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"origin");
                    uVar4 = FUN_1042df80(pbVar3,(byte *)"south-east");
                    uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"Bounce");
                    uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"PlaySound");
                    uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"Bounce");
                    uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"PlaySound");
                   "%5.1f,setpos %0.2f %0.2f %0.2f ; setang %0.2f %0.2f %0.2f,setpos %0.2f %0.2f %0.2f ; setang %0.2f %0.2f %0.2f,%3i,%3i,%4.1f,%4.1f,%5.1f\n"
                   "%s [%s] is suspected of using aimbot. (Detections: %i | Deviation: %.0f | Weapon: %s | InVehicle(%s))\n"
                   "AvgLum @ %4.2f%%  flTonemapMinAvgLum = %4.2f%%  Using %d pixels  Override(%s): %4.2f"
                   "BloomScale = %4.2f  flTonemapRate = %4.2f  mat_accelerate_adjust_exposure_down = %4.2f"
                   "CBaseVPhysicsControllable::Entity_PostSimulate",0,"Controllables(Client)",false,
                   "CCommand::Tokenize: Encountered command which overflows the tokenizer buffer.. Skipping!\n"
                   "Client Simulation",false,4);
                   "Could not contact Worldcraft to send the command: \n\n\"%s\"\n\n Worldcraft does not appear to be running."
                   "DrawTranslucentEntities",false,4);
                   "ERROR: CPooledVBAllocator_ColorMesh\'s internal mesh (vertex buffer) should have been freed!\n"
                   "Fast Path Brush Rendering",false,4);
                   "GetPVSForOrigin called with inusfficient sized pvs array, need %i bytes!");
                   "NPCVehicle_Manager",false,4);
                   "Particle/Effect_Rendering",false,4);
                   "Static_Prop_Rendering",false,4);
                   "Steam Started\n\t\t\t\tAppID: %d\t\t\tSteamID: (%llu) %d:%d:%d\n\t\t\t\tsubscribed: %s\t\t\tLicense: %d\t\t\tLanguage: %s"
                   "TIPlayer::RoundRespawn: [%s] -- UNABLE TO SPAWN, INITIAL SPAWN NOT COMPLETED.\n"
                   "TIPlayer::RoundRespawn: [%s] has been moved to: [%s] preRequipment: [%s]\n");
                   "Time,Player 1 Position,Player 2 Position,Smooth FPS,Frame FPS,Smooth MS,Frame MS,Server Frame MS\n"
                   "Worldcraft did not accept the command: \n\n\"%s\"\n\n Make sure the command is valid and that Worldcraft is still running properly."
                   "[RULES] Completed %i rounds.. incrementing match (now: %i), clearing round count\n"
                   "\n<div class=\"sbhTable\"><legend>dlmalloc mspace #%d: %u MiB allocated of %u MiB footprint</legend><pre>\n     %d:footprint     ~ %5u MiB (total space used by the mspace)\n     %d:footprint_max ~ %5u MiB (maximum total space used by the mspace)\n     %d:arena         ~ %5u MiB (non-mmapped space allocated from system)\n     %d:ordblks       ~ %5u MiB (number of free chunks)\n     %d:hblkhd        ~ %5u MiB (space in mmapped regions)\n     %d:usmblks       ~ %5u MiB (maximum total allocated space)\n     %d:uordblks      ~ %5u MiB (total allocated space)\n     %d:fordblks      ~ %5u MiB (total free space)\n     %d:keepcost      ~ %5u MiB (releasable (via malloc_trim) space)\n</pre></div>"
                   "\n\nDevice Info:\nUnsupported: %i\nPCF Sampling: %i\nDriverName: \"%s\"\nVendorID: 0x%04X, DeviceID: 0x%04X\nDriverHigh: 0x%08X, DriverLow: 0x%08X\nDXLevel: %u\n"
                   "\ndlmalloc mspace #%d. 1 MiB=2^20 bytes\n     %d:footprint     ~ %5u MiB (total space used by the mspace)\n     %d:footprint_max ~ %5u MiB (maximum total space used by the mspace)\n     %d:arena         ~ %5u MiB (non-mmapped space allocated from system)\n     %d:ordblks       ~ %5u MiB (number of free chunks)\n     %d:hblkhd        ~ %5u MiB (space in mmapped regions)\n     %d:usmblks       ~ %5u MiB (maximum total allocated space)\n     %d:uordblks      ~ %5u MiB (total allocated space)\n     %d:fordblks      ~ %5u MiB (total free space)\n     %d:keepcost      ~ %5u MiB (releasable (via malloc_trim) space)\n"
                   "area(1==%i, 2==%i) >= numareas (%i):  Check if engine->ResetPVS() was called from ClientSetupVisibility"
                   "battery:  %d%%",iVar13);
                   "you do not have a bot targetted, use bot_teleport <botname> for manual teleport\n"
                   (byte *)"Encountered read-only file. Should it be made writeable?\n\n\"%s\"\n");
                   (byte *)"Heart beat failed after %d attempts, logging out.");
                   (byte *)"No FixAPI User Persona change recieved: %llu (%s)");
                   (byte *)"Socket Consumed %d from Read buffer which has %d bytes remaining");
                   (byte *)"Socket connection timed out (max: %f) (cur: %f).");
                   (byte *)"UTIL_EmitAmbientSound:  Sentence emitted \'%s\' (ent %i)\n");
                   (byte *)"models/vehicles/airport/drivable/refuel_truck-1_part%d.mdl");
                   (cVar4 = DoNewAssertDialog("d:\\projects\\ti\\release\\ti_rel\\src\\game\\shared\\predictioncopy.cpp"
                   (iVar2 = FUN_103729f0(local_264,(byte *)"placementOrigin"), iVar2 + 1 < 1)) {
                   (int)"(Remaining materials not shown)\n");
                   (local_28 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Voice_UseLocation"),
                   *(undefined4 *)(param_1 + 0x14c),0,uVar2,2,'\0',"_rt_ShadowDummy");
                   FUN_102445a0((int)&DAT_1041a888,(byte *)"Error reading attribute \"%s\"");
                   FUN_104244c0((int)&DAT_105e8910,(byte *)"Error reading attribute \"%s\"");
                   FUN_104dba20((int)&DAT_106fe118,(byte *)"Error reading attribute \"%s\"");
                  "DSP PARSE ERROR!!! dsp_presets.txt: missing } or too many processors in preset #: %3.0f \n"
                  "Found multiple active color_correction entities with exclusive setting enabled. This is invalid.\n"
                  "Log Function Help: \n    log_level <channel specifiers> <level>\n    log_color <channel specifiers> <hex color>\n    log_flags <channel specifiers> <+/-flag>\nAll functions are case insensitive.\n\nA channel specifier is either:\n1) tag specifiers: +/-tag1 +/-tag2 ...      // Narrows down to channels with & without given tags.\n2) channel names: name1 name2 ...           // Lists channels by name.\n\nlevel: all, warning, error, off             // Spews anything at or above the specified level.\n                                            // \'off\' turns all spew off, \'all\' turns all spew on.\nhex color: RRGGBBAA                         // A hexadecimal color value in the order RGBA.\nflag: <+/->DoNotEcho                        // Enable/disable a flag to turn off echoing to the console.\n      <+/->ConsoleOnly                      // Enable/disable a flag to send text only to the console.\ne.g.\n    log_level +console -developer warning   // Sets minimum spew level of channels with the tag\n                                            // \'console\' but without the tag \'developer\' to \'warning\'.\n\n    log_color renderdebug bsp FFC08040      // Sets the \'renderdebug\' and \'bsp\' channels to the RGBA color (64, 128, 192, 255).\n\n    log_flags +developer +donotecho         // Turns on the LCF_DO_NOT_ECHO flag for all channels with the \'developer\' tag.\n\n"
                  "NOT opened (because player is dead and can_open_when_dead not set).\n");
                  "NOT opened (because this is learned and ONCE_LEARNED_NEVER_OPEN is set).\n");
                  "Note: CAI_LeadBehaviorHandler connected to a sink that isn\'t an entity. Manual fixup on load will be necessary\n"
                  "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_wave_data.cpp"
                  "open events NOT processed (there is already an open lesson of this type).\n");
                  "splitscreen_config.txt",local_30[local_c]);
                  ("ETABLE",*(int *)((int)this + 0xbc4) + iVar2,0,DAT_106b21e0,DAT_106b21e4);
                  ("Pause",this_00,this_00,0,uStack24,local_14,0xffffffff,0,0);
                  ((CVProfile *)g_VProfCurrentProfile_exref,"BotThink::AiTimer1",0,"NPCs",false,4);
                  ((CVProfile *)g_VProfCurrentProfile_exref,"CModelRenderSystem::DrawBrushModels",0,
                  ((CVProfile *)g_VProfCurrentProfile_exref,"CNPCVehicleManager::Think",0,
                  ((CVProfile *)g_VProfCurrentProfile_exref,"CStaticProp::DrawModel",0,
                  ((CVProfile *)g_VProfCurrentProfile_exref,"DrawTranslucentEntities",0,
                  ((CVProfile *)g_VProfCurrentProfile_exref,"FX_GunshipImpact",0,
                  ((CVProfile *)g_VProfCurrentProfile_exref,"R_CheckForPaintmapChanges",0,"paint",
                  ((CVProfile *)g_VProfCurrentProfile_exref,"WaitForAsyncServer",0,"AsyncServer",
                  ((CVProfile *)g_VProfCurrentProfile_exref,"_Host_RunFrame - ClientDLL_Update",0,
                  ((CVProfile *)g_VProfCurrentProfile_exref,"_Host_RunFrame_Sound",0,"Sound",false,4
                  (**(code **)(*piVar11 + 0x34))("subject");
                  (**(code **)(*piVar11 + 0x40))("classname",puVar15);
                  (**(code **)(*piVar11 + 0x40))("entityname",puVar15);
                  (**(code **)(iVar5 + 0x34))("subject",uVar10);
                  (0,"Error Connecting to Authentication System.");
                  (DAT_106466ac,*(undefined4 *)(iVar6 + 0x18),"devshots_nextmap");
                  (DAT_106466ac,0x28,"%.3f m_fEngineSpeed  ** FORWARD **",
                  (DAT_106466ac,iVar4,"Penetration %d  Damage %.0f  Distance %.0f (Surface Mat: %c)"
                  (DAT_106cb7e8,param_4,"%d %f %f %f %f %f %f %f %f\n",0,(double)local_38,
                  (DAT_10730cc4,&local_2c,"%02i enabled(%s) blocked(%s) audible(%s) speaking(%s)",
                  (DAT_10730cc4,&local_2c,"%02i speaking(%s) above_threshold(%s)",pcVar12 + iVar7,
                  (DAT_10730cc4,0,"%s stuck on object %i/%s\n","client",uVar5,uVar7);
                  (DAT_10730cc4,iVar10 + 1,"angles=%f, %f, %f",SUB84((double)*pfVar12,0),
                  (DAT_10730cc4,iVar3 + 0x15,"[%i] %f %f",iVar3,
                  (DAT_10730cc4,iVar7 + 1,"GetRenderMode()=%d",*(undefined *)((int)local_8 + 0x353))
                  (DAT_10730cc4,iVar7 + 2,"m_nRenderFX=0x%8.8X",*(undefined *)((int)local_8 + 0x352)
                  (DAT_10730cc4,iVar7,"blend=%f, color=%f,%f,%f",
                  (DAT_10730cc4,local_c,"origin=%f, %f, %f",SUB84((double)*pfVar12,0),
                  (DAT_107c09f8,param_1,"\t\t\t\"%s\" \"%s\"\r\n",pcVar2,pcVar9);
                  (piVar1,0x18,"GetSpeed() %.2f   flSpeed %.2f    iForward %d ",(double)fVar7,dVar9,
                  (piVar1,0x1a,"GetSpeed() %.2f   flSpeed %.2f    iForward %d ",(double)fVar7,dVar9,
                  (this,param_1,"StopSound:  \'%s\' stopped as \'%s\' (ent %i)\n",param_2,uVar3,
                  (this,param_1,"StopSound:  \'%s\' stopped as \'%s\' (ent %i)\n",param_2,uVar4,
                  ,"Unserialize");
                  COM_TimestampedLog("InitGameSystems - Finish");
                  COM_TimestampedLog("InitGameSystems - Start");
                  COM_TimestampedLog("ParseParticleEffects");
                  DName::operator__((DName *)&local_1c,"\'\'");
                  DName::operator__((DName *)&local_24,"::");
                  DevMsg("ERROR: LoadSchd %d (%s): (%s) Unknown shedule %s!\n",uVar11,param_1,uVar3,
                  DevMsg("ERROR: LoadSchd (%s): (%s) Malformed AI Schedule.  Expecting \':\' after type \'STATE.\n"
                  DevMsg("Too many faces with the same material in scene! Material: %s, num indices %d (max: %d)\n"
                  DevMsg(2,"Warning: Climb Node %i has different exit heights for hull %s\n",
                  DevMsg(2,"error in transition graph: %s to %s\n",pcVar9,pcVar8);
                  DevWarning("%s repositioned tag: %s : %.3f -> %.3f (%s:%s:%s)\n",iVar8,puVar11,
                  DevWarning("PropBreakableCreateAll: Could not create model %s\n",local_6ac);
                  DevWarning(2,"Too many vertex format changes in frame, whole world not rendered\n"
                  FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
                  FUN_10146100((int)"explodefx_fire_hydrant",*param_3,*(undefined4 *)(param_3 + 1),
                  FUN_10146100((int)"explodefx_parking_meter",*param_3,*(undefined4 *)(param_3 + 1),
                  FUN_1017f8a0(local_94,0.0,"fx.garbage_bin_explode",param_3,0,0);
                  FUN_1017f8a0(local_94,0.0,"fx.mailbox_explode",param_3,0,0);
                  FUN_1017f8a0(local_94,0.0,"fx.metal_crash",param_3,0,0);
                  FUN_101f1360(local_14,(int)"joy_inverty");
                  FUN_101f1360(local_14,(int)"option_duck_method");
                  FUN_1042f3d0((void *)param_1[0x98],(uint *)"command",(uint)&DAT_104eefb3);
                  Msg("%s : %s\n",*(undefined4 *)(local_c + local_8),pbVar1 + iVar4 + 1);
                  Msg("Area %d has multiple incoming connections to area %d in direction %d\n",
                  Msg("Area %d has multiple outgoing connections to area %d in direction %d\n",
                  Msg("TCP <- %s: IP address mismatch.\n",pcVar6);
                  Msg("[Map]Added [%llu] %s to available intel mode maps\n",uVar3,param_2,param_3);
                  Msg("[Map]Added [%llu] %s to available intel mode maps\n",uVar5,param_2,param_3);
                  Msg("\"%s\" ",iVar4);
                  Msg("pNextWP == NULL!\n");
                  Warning("%s(%s) found an entity that wasn\'t a logic_choreographed_scene or logic_scene_list_manager in slot %d, named %s\n"
                  Warning("failed to parse session id %s\n",pbVar1);
                  bVar5 = FUN_1013c980((int)param_1,(int)"boxsize");
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"CoverSpot",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"EngineSpin",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"IdealSpeed",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"LeftWing_BrakeFlap",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"LeftWing_BrakeFlap2",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"NextKey",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"RightWing_BrakeFlap",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"RightWing_BrakeFlap2",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"Target2",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"Target3",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
                  cVar2 = FUN_1013aba0(&local_10,(byte *)"targetname",(char *)local_858);
                  iVar4 = FUN_10061a10(local_14,(byte *)"ValveBiped.bip01_Pelvis");
                  iVar4 = FUN_10399410((char *)local_18cc,"info_forklift_spawn",0x13);
                  iVar4 = FUN_10399410((char *)local_18cc,"info_vehicle_wp",0xf);
                  iVar4 = FUN_1042d9c0(pbVar3,(byte *)"soundlevel");
                  iVar5 = FUN_102659a0(pbVar2,(byte *)"stop_oldest");
                  iVar5 = FUN_102659a0(pbVar3,(byte *)"distvar");
                  iVar6 = (**(code **)(*param_1 + 0x1c))("userid",0);
                  iVar6 = FUN_10265c20((int)*piVar8,"V_",2);
                  iVar7 = (**(code **)(*param_1 + 0x1c))("attacker",0);
                  if (param_1 != (uint *)"Stoplight_A3") {
                  in_EAX = DevMsg(2,"error in transition graph: %s to %s\n",pcVar8,pcVar7);
                  local_10 = (int *)(**(code **)(*piVar19 + 0xbc))("$basetexture",&DAT_105f8900);
                  local_14 = (int *)(**(code **)(*param_2 + 0xbc))("$basetexture",&DAT_104e24b8);
                  local_20 = (int *)(**(code **)(*piVar17 + 0xbc))("$basetexture",&DAT_105f88f4);
                  local_30 = (int *)(**(code **)(*piVar19 + 0xbc))("$frame",&DAT_105f8904);
                  local_34 = (int *)(**(code **)(*piVar17 + 0xbc))("$frame",&DAT_105f88f8);
                  local_c = (int *)(**(code **)(*param_2 + 0xbc))("$frame",&DAT_104e24bc);
                  pbVar9 = (byte *)"FCVAR_NEVER_AS_STRING";
                  pcVar10 = "#TI_Game_Swap_ToTer";
                  pcVar10 = "false";
                  pcVar11 = "position";
                  pcVar11 = "soundlevel";
                  pcVar13 = "DS:Query 3DBuffer for 3d front right failed";
                  pcVar13 = "Not Respawning: %s ::STATE != PLAYER_STATE_PLANNING_POST\n";
                  pcVar14 = "#TI_Score_EscortedTheBOSS";
                  pcVar14 = "#TI_Score_EscortedTheVIP";
                  pcVar14 = "#TI_Score_EscortedTheVIP_XMAS";
                  pcVar14 = "characters/npc15.mdl";
                  pcVar15 = "Hint takes NPC close to Enemy";
                  pcVar17 = "        qsort [0x%x, 0x%x]   done %d   this %d\n";
                  pcVar17 = "Objective.VIP_Case_Secured_CT";
                  pcVar17 = "Objective.VIP_Case_Secured_TER";
                  pcVar17 = "Objective.VIP_Kill";
                  pcVar18 = "";
                  pcVar4 = "";
                  pcVar4 = "RecursiveLoadFromBuffer:  got conditional between key and value";
                  pcVar5 = "loopcount";
                  pcVar6 = "dsp_volume";
                  pcVar8 = "#DeathMsg_Knife";
                  pcVar8 = "#DeathMsg_Pet";
                  pcVar9 = "Console";
                  pcVar9 = "cracker";
                  pcVar9 = "explode_crackers-1";
                  pcVar9 = "explodefx_lamp_post";
                  pcVar9 = "explodefx_tree_uproot";
                  pcVar9 = "impact_fx_cereal";
                  pcVar9 = "scalesettings";
                  piVar7 = (int *)FUN_10135420("info_node_link",-1,'\x01');
                  puVar10 = FUN_100b10f0(local_15c,(byte *)"FKID_%i");
                  puVar3 = (uint *)FUN_102659b0((char *)&local_108,"addons/");
                  puVar4 = FUN_10021180(local_114,(byte *)"AFK for %i seconds.");
                  uVar1 = FUN_10077120("CAI_BaseNPC",
                  uVar16 = (**(code **)(*piVar17 + 0xa0))("FCVAR_NEVER_AS_STRING");
                  uVar2 = FUN_100845f0((byte *)param_1,(byte *)"lfotype");
                  uVar3 = FUN_1042df20(pbVar1,(byte *)"R_TRIGGER");
                  uVar3 = FUN_1042df20(pbVar14,(byte *)"FlmVersusFlyout");
                  uVar3 = FUN_1042df80(pbVar1,(byte *)"ExitToMainMenu");
                  uVar3 = FUN_1042df80(pbVar1,(byte *)"Options");
                  uVar3 = FUN_1042df80(pbVar1,(byte *)"VibrationDisabled");
                  uVar4 = FUN_10265f50(pbVar3,(byte *)"south");
                  uVar4 = FUN_10399710(pbVar3,(byte *)"south");
                  uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"nodamageforces");
                  uVar4 = FUN_1042df80(pbVar3,(byte *)"south");
                  uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"Flicker");
                  uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"SetString");
                  uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"Flicker");
                  uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"SetString");
                  uVar7 = FUN_1042df80(pbVar10,(byte *)"replace");
                 "%.2f                                                                             %.2f                                                                           %.2f"
                 "%3i fps -- inp(%3.1f) sv(%3.1f) cl(%3.1f) render(%3.1f) snd(%3.1f) cl_dll(%3.1f) exec(%3.1f) ents(%d) ticks(%d)"
                 "%s:  frame %s Kb  /  total %s Kb ( picmip1 = %s Kb, picmip2 = %s Kb )  /  shown %s Kb"
                 "*** [TV-DELAY] Waiting for TacticalTV Broadcast to finish. Waiting %f additional seconds for final score calculation.\n"
                 "// NOTE:  THIS FILE IS AUTOMATICALLY REGENERATED, \r\n//DO NOT EDIT THIS HEADER, YOUR COMMENTS WILL BE LOST IF YOU DO\r\n// Multiplayer options script\r\n//\r\n// Format:\r\n//  Version [float]\r\n//  Options description followed by \r\n//  Options defaults\r\n//\r\n// Option description syntax:\r\n//\r\n//  \"cvar\" { \"Prompt\" { type [ type info ] } { default } }\r\n//\r\n//  type = \r\n//   BOOL   (a yes/no toggle)\r\n//   STRING\r\n//   NUMBER\r\n//   LIST\r\n//\r\n// type info:\r\n// BOOL                 no type info\r\n// NUMBER       min max range, use -1 -1 for no limits\r\n// STRING       no type info\r\n// LIST          delimited list of options value pairs\r\n//\r\n//\r\n// default depends on type\r\n// BOOL is \"0\" or \"1\"\r\n// NUMBER is \"value\"\r\n// STRING is \"value\"\r\n// LIST is \"index\", where index \"0\" is the first element of the list\r\n\r\n\r\n"
                 "Assertion Failed: g_StudioHdrToActivityMaps[i].nRefs == 0");
                 "Avg FPS %3i, Frame MS %5.1f, Frame Server MS %5.1f",local_48,
                 "BaseCombatWeapon_HideThink");
                 "CClientShadowMgr::UpdateProjectedTextureInternal",0,"Shadow Depth Texturing",false
                 "CL_RegisterResources:  host_state.worldmodel/GetBaseLocalClient().GetModel( 1 )==NULL\n"
                 "CLagCompensationManager",false,4);
                 "CViewRender::DrawTranslucentWorldAndDetailPropsInLeaves",0,"World Rendering",false
                 "CViewRender::DrawTranslucentWorldInLeaves",0,"World Rendering",false,4);
                 "Cascade %u: Total AABB Cull Checks: %u, Passed: %u, Total World AABB Cull Checks: %u, Passed: %u"
                 "DataTable_CreateClientClassInfosFromServerClasses:  No serverGameDLL loaded!");
                 "DiscardStaticLightmapData: Surface Lighting data aliased.\n";
                 "DiscardStaticLightmapData: Surface Lighting data out of order.\n";
                 "Dynamic_Light_Rendering",false,4);
                 "EntityMessageBegin:  New message started before matching call to EndMessage.\n ");
                 "Fast Path Model Rendering",false,4);
                 "Invalid format for element ID encountered for attribute \"%s\"";
                 "Model textures",1);
                 "NavContext");
                 "Particle/Effect_Rendering",false,4);
                 "Received a remote bug request from rcon client, but not running with \'-remotebug\'. Ignoring.\n"
                 "Refresh");
                 "Shadow Depth Texturing",false,4);
                 "String tables must be powers of two in size!, %i is not a power of 2 [%s]\n");
                 "String tables user data bits restricted to %i bits, requested %i is too large\n");
                 "String tables user data size restricted to %i bytes, requested %i is too large\n")
                 "THEN token in response had a target \'%s\', but lacked any further info.\n");
                 "This server is password protected for console access. Must send PASS command\n\r",
                 "Tools",false,4);
                 "UserMessageBegin:  New message started before matching call to EndMessage.\n ");
                 "\n%s\nMap: %s\nPlayers: %i (%i bots) / %i humans\nBuild: %d\nServer Number: %i\n\n"
                 "effects/bluespark");
                 "pos:  %.02f %.02f %.02f   (%s)",SUB84((double)local_1c,0),
                 ((pcVar12 = (char *)FUN_10268930(pvVar6,(uint *)"command",(uint)&DAT_103236cf),
                 ((pcVar12 = (char *)FUN_1039db00(pvVar6,(uint *)"command",(uint)&DAT_1043677a),
                 ((pcVar12 = (char *)FUN_1042f3d0(pvVar6,(uint *)"command",(uint)&DAT_104eefb3),
                 (DevWarning("PropBreakableCreateAll: Could not create model %s\n",local_6b4),
                 (FUN_102868b0((int)piVar7,"player_vipescorted","#TI_Score_EscortedPlayer",
                 (byte *)"FixAPI User Persona change recieved: { %d (%s) } - { %llu (%s) }");
                 (byte *)"HKEY_CURRENT_USER\\Software\\Valve\\Steam\\Apps\\%d\\Cloud");
                 (byte *)"\nMemory\nmemusage( %d %% )\ntotPhys Mb(%.2f)\nfreeVirt Mb(%.2f)\n");
                 (byte *)"entity %s being destroyed before dynamic model callback is complete!!\n");
                 (byte *)"fps:  435  var: 4.091 ms  ping: 533 ms lerp 112.3 ms   0/0 offline");
                 (piVar2 = (int *)(*(code *)param_1)("EngineTraceServer004",0),
                 (piVar2 = (int *)(*(code *)param_1)("VEngineServerStringTable001",0),
                 (piVar2 = (int *)(*(code *)param_1)("XboxSystemInterface002",0),
                 (piVar2 = (int *)(**(code **)(*DAT_106a5e74 + 0x44))("sv_cheats"),
                 (uVar3 = FUN_10399710(pbVar5,(byte *)"ai_network"), uVar3 != 0)) &&
                 (uVar5 = FUN_10314280(DAT_10693b08,(uint *)"assign_bomb",'\x01'),
                 ,"BaseCombatWeapon_HideThink");
                 ,"GameInstructor",false,4);
                 ,"Video mode error",'\0');
                 FUN_10146100((int)"playerroll_water",local_90,local_88,local_28,local_20,(int *)0x0
                 FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting \'}\', didn\'t find it!");
                 FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting \'}\', didn\'t find it!");
                 FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting \'}\', didn\'t find it!");
                "CKeyValuesTokenReader::SeekBackOneToken: It is only possible to seek back one token at a time"
                "Didn\'t draw shadow hierarchy.. bad shadow texcoords probably going to happen..grab Brian!\n"
                "Out of thread ids. Decrease the number of threads or increase MAX_THREAD_IDS\n");
                ("ConversionMode","#TextEntry_ConversionMode",&DAT_103236cf,param_1,piVar2,0);
                ("ConversionMode","#TextEntry_ConversionMode",&DAT_1043677a,param_1,piVar2,0);
                ("ConversionMode","#TextEntry_ConversionMode",&DAT_104eefb3,param_1,piVar2,0);
                ("ETABLE",*(int *)(iVar1 + 0xbc4) + iVar2,0,DAT_106b21e0,DAT_106b21e4);
                ("InPass",param_1,param_1,0,uStack24,local_14,0xffffffff,0,0);
                ("Language","#TextEntry_Language",&DAT_103236cf,param_1,piVar2,0);
                ("Language","#TextEntry_Language",&DAT_1043677a,param_1,piVar2,0);
                ("Language","#TextEntry_Language",&DAT_104eefb3,param_1,piVar2,0);
                ("SentenceMode","#TextEntry_SentenceMode",&DAT_103236cf,param_1,local_8,0);
                ("SentenceMode","#TextEntry_SentenceMode",&DAT_1043677a,param_1,local_8,0);
                ("SentenceMode","#TextEntry_SentenceMode",&DAT_104eefb3,param_1,local_8,0);
                ("[ no resource file associated with dialog ]");
                ("d:\\projects\\ti\\release\\ti_rel\\src\\game\\client\\cdll_client_int.cpp",0xcc7,0
                ("d:\\projects\\ti\\release\\ti_rel\\src\\public\\studio.cpp",0x862,
                ("models/props_misc/riot_shield-1.mdl","models/props_misc/riot_shield-1_HELD.mdl");
                ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::CullReceiver",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::UpdateBrushShadow",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"CEngineVGui::Simulate",0,"VGUI_Simulate",
                ((CVProfile *)g_VProfCurrentProfile_exref,"CModelRenderSystem::DrawModels",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"CNPCPlane::Think",0,"NPC_Vehicles",false,
                ((CVProfile *)g_VProfCurrentProfile_exref,"CNPCVehicle::Think",0,"NPC_Vehicles",
                ((CVProfile *)g_VProfCurrentProfile_exref,"CParticleSystemMgr::DrawRenderCache",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"CSprite::GetToolRecordingState",0,"Tools"
                ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::PlayerMove",0,"Player"
                ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseAnimating::RecordBones",0,"Tools",
                ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseEntity::GetToolRecordingState",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseFlex::GetToolRecordingState",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"C_BasePlayer::GetToolRecordingState",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"C_GameInstructor::UpdateInactiveLesson",0
                ((CVProfile *)g_VProfCurrentProfile_exref,"EndUpdateLightmaps",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"FX_GunshotSlimeSplash",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"FinishSignonState_New",0,"Steam",false,4)
                ((CVProfile *)g_VProfCurrentProfile_exref,"FrameUpdatePostEntityThink",0,
                ((CVProfile *)g_VProfCurrentProfile_exref,"StartLagCompensation",0,"Networking",
                ((CVProfile *)g_VProfCurrentProfile_exref,"VGui_DrawHud",0,"VGUI",false,4);
                ((CVProfile *)g_VProfCurrentProfile_exref,"_Host_RunFrame_Sound",0,"Sound",false,4);
                ((int *)(DAT_1068253c + 4),"Client ping times:\n");
                ((piVar2 = (int *)(*(code *)param_1)("BlackBoxVersion001",0), _DAT_106466e8 = piVar2
                ((piVar2 = (int *)(*(code *)param_1)("VModelInfoServer002",0), DAT_106466c4 = piVar2
                ((uVar4 = FUN_100612d0(piVar5,"func_tracktrain"), (char)uVar4 == '\0' &&
                (*(int **)((int)this + 0xa8),"expecting more tokens!");
                (*(undefined4 *)((int)this + 500),"avatar",&DAT_104eefb3,0x12,
                (**(code **)(*piVar3 + 0x40))("networkid",local_5c);
                (**(code **)(*piVar6 + 0x94))("EngineForce","800000");
                (**(code **)(*piVar6 + 0x94))("VehicleScript","scripts/vehicles/smallcar.txt");
                (**(code **)(*piVar6 + 0x94))("WheelDamp",&DAT_1049cdec);
                (**(code **)(*piVar6 + 0x94))("WheelFriction",&DAT_10438794);
                (**(code **)(*piVar6 + 0x94))("WheelFrictionAngular",&DAT_104f278c);
                (**(code **)(*piVar6 + 0x94))("WheelRadius",&DAT_104fa94c);
                (**(code **)(*piVar6 + 0x94))("WheelSpring",&DAT_10469128);
                (**(code **)(*piVar6 + 0x94))("WheelSpringLength",&DAT_1049bd98);
                (**(code **)(*piVar6 + 0x94))("WheelTurnSpeed",&DAT_104fa9b0);
                (**(code **)(*this + 0xac))("flashbang",param_4,param_5);
                (**(code **)(iVar1 + 0x78))(this,"TacticalTV Master \"%s\", delay %.0f\n",uVar5);
                (DAT_106466ac,*(undefined4 *)((int)this + 0x18),"devshots_nextmap");
                (DAT_106466ac,0,"Fog Volume %s found at position (%f %f %f)",local_114,
                (DAT_106466ac,0x25,"Actual Push Force  %.2f",SUB84(dVar4,0),
                (DAT_106466ac,1,"%s stuck on object %i/%s\n","server",uVar3,uVar6);
                (DAT_106466ac,1,"Fog: %s, post process: %s, color correct: %s",puVar6,puVar7,puVar9)
                (DAT_106466ac,9,"DMSpawns: %i",*(undefined4 *)(param_1 + 0x4bb4));
                (DAT_106466b4,DAT_1064aae8,"[GS %s - %7.2f] %s",local_8c,(double)*DAT_10646018,
                (DAT_106466b4,iVar3,"sv_benchmark := %.2f\n",(double)((float)fVar4 - fVar1));
                (DAT_10681754,uVar4,"vidmem total: %0.3fMB\n",(double)local_8);
                (DAT_106cb7e8,uVar4,"%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",puVar6 + -0x49,puVar6[-8],
                (DAT_10730cc4,&local_1c,"%15s %27s (%s / %s)  %14s","totals:",&DAT_104eefb3,local_5c
                (DAT_10730cc4,0x14,"VIP State %d",*(undefined4 *)(param_1 + 0x398c));
                (DAT_10730ce4,DAT_1076da40,"[GS %s - %7.2f] %s",local_8c,
                (DAT_107c09f8,*(undefined4 *)(param_1 + 0x250),"%3i, %3i, %5.1f\n",iVar2,*piVar1,
                (DAT_107c09f8,param_1,"\t\t{ \"%i\" }\r\n",(int)*(float *)(iVar4 + 0x3f8) != 0);
                (DAT_107c0a60,local_38[0x6a],2,0x2a,0,0xff,0,0xff,"Particle Performance Metric : %d"
                (DAT_107c0a60,param_1[0x6a],2,iVar13,0xff,0xff,0xff,0xff,"name: %s",&local_90);
                (PTR_PTR_10415bc0,*(undefined4 *)(local_18._0_4_ + iVar1 * 4),"dsp_player %i\n",
                (PTR_PTR_10415bc0,*(undefined4 *)(local_18._0_4_ + iVar1 * 4),"room_type %i\n",
                (bVar2 = FUN_100a6de0(this_00,"point_viewcontrol_survivor"), bVar2)))))))) {
                (iVar2,"CHANNELLIST",local_50._0_4_ + iVar3,0,DAT_10417880,DAT_10417884);
                (iVar9 = FUN_102659b0(pcVar14,"game.cfg"), iVar9 == 0)) && (param_2 == '\0')) {
                (param_1,"LIGHTSTYLE",&local_110,0,DAT_10417818,DAT_1041781c);
                (param_1,"LIGHTSTYLE",&local_4c,0,DAT_10417818,DAT_1041781c);
                (pauVar5,"CHANNELLIST",local_c4,0,DAT_10417880,DAT_10417884);
                (piVar2 = (int *)(*(code *)param_1)("GAMEEVENTSMANAGER002",0), DAT_106466d0 = piVar2
                (piVar2 = (int *)(*(code *)param_1)("IEngineSoundServer003",0),
                (piVar2 = (int *)(*(code *)param_1)("StaticPropMgrServer002",0),
                (piVar6,"The server operator has added you to the banned list.\n");
                (ppvVar10,"GameHeader",local_4d0,0,DAT_104177e8,DAT_104177ec);
                *(char **)(&stack0xffffffcc + iVar2) = "RCON Cmd: recv error (%s)\n";
                ,"scripts/soundscapes_manifest.txt",puVar6);
                ,"scripts/soundscapes_manifest.txt",puVar7);
                ConColorMsg((Color *)&local_8,"Bound \"%s\" to key %s\n",puVar11,uVar4);
                ConMsg("removeid:  filter removed for %s\n",local_5c);
                DAT_106466d8 = (*(code *)param_1)("VDebugOverlay004",0);
                DAT_106466f4 = (**(code **)(*DAT_106a5e74 + 0x44))("sv_maxreplay");
                DAT_10646718 = (**(code **)(*DAT_106a5e74 + 0x44))("commentary");
                DAT_106ac778 = (*local_24)("Hammer001",0);
                DName::operator_((DName *)&local_10,"volatile");
                DName::operator__((DName *)&local_10," volatile");
                DevMsg("%s firing output OnConditionsTimeout (%f seconds)\n",puVar6);
                DevMsg("%s is current best at: %f\n",uVar7);
                DevMsg("%s waiting... %f\n",pcVar5);
                DevMsg("CBasePlayerControllable - No Free Slots\n");
                DevMsg("Creating compressed version of file %s (%d -> %d)\n",piVar1 + 1);
                DevMsg("Failed to create dynamic link (%d <--> %d)\n",piVar9[0xee],piVar9[0xef]);
                DevMsg("FindCarOrPlayer::Found a car\n");
                DevMsg("Parsing LayerTriggers:\n");
                DevMsg("Parsing MixLayers:\n");
                DevMsg("Reliable TE %s -> %s\n",uVar1,uVar6);
                DevMsg("TE Full: (%u)/(%i)\n",uVar12,iVar3);
                DevMsg("Too many faces with the same material in scene! Material: %s, num indices %d (max: %d)\n"
                DevMsg("Warning! Client listens to event \'%s\' unknown by server.\n",
                DevWarning("PropBreakableCreateAll: Could not create model %s\n",local_6b4);
                DevWarning(1,"AutoIKRelease (%s) got an out of range bone %d (%d)\n",iVar3,iVar4,
                FUN_1003ef70(&local_218,(byte *)"%i (wc:%i; z:%i)");
                FUN_1003ef70(&local_218,(byte *)"%i (z:%i)");
                FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
                FUN_10146100((int)"explodefx_electronics_large",*param_3,
                FUN_10146100((int)"explodefx_electronics_small",*param_3,
                FUN_10146100((int)"explodefx_glass_small",*param_3,*(undefined4 *)(param_3 + 1),
                FUN_10146100((int)"explodefx_metal_small",*param_3,*(undefined4 *)(param_3 + 1),
                FUN_10146100((int)"explodefx_plastic_black",*param_3,local_48,local_44,local_3c,
                FUN_10146100((int)"explodefx_plastic_white",*param_3,local_48,local_44,local_3c,
                FUN_10146100((int)"explodefx_printer",*param_3,*(undefined4 *)(param_3 + 1),local_44
                FUN_10146100((int)"explodefx_wood_gibs_large",*param_3,*(undefined4 *)(param_3 + 1),
                FUN_10146100((int)"explodefx_wood_gibs_small",*param_3,*(undefined4 *)(param_3 + 1),
                FUN_10146100((int)"fx_glasswindow_break",*param_3,*(undefined4 *)(param_3 + 1),
                FUN_101f1360(&local_24,(int)"net_graph");
                FUN_101f1360(local_14,(int)"joy_inverty");
                FUN_101f1360(local_14,(int)"option_duck_method");
                FUN_101f3700((int)this,3,"You are no longer marked as Away from Keyboard.\n",
                FUN_101f54b0((byte *)"[AFK] %s is being idle kicked\n");
                FUN_101f54b0((byte *)"[AFK] %s no longer marked as IDLE.\n");
                FUN_101f54b0((byte *)"[AFK] %s now IDLE.\n");
                FUN_10265f30((int)&stack0xfffffe8c,"V_MYNUM");
                FUN_10265f30((int)&stack0xfffffeac,"V_MYNAME");
                FUN_10268930((void *)param_1[0x99],(uint *)"command",(uint)&DAT_103236cf);
                FUN_102868b0((int)piVar3,"player_vipescort",pcVar14,0);
                FUN_10399150(local_178,0x40,(byte *)"info_player_%s_%s%d");
                FUN_10399150(local_204,0x200,(byte *)"%s.vmt");
                FUN_1039db00((void *)param_1[0x99],(uint *)"command",(uint)&DAT_1043677a);
                FUN_1042f3d0((void *)param_1[0x99],(uint *)"command",(uint)&DAT_104eefb3);
                FUN_10431960(pvVar3,(uint *)"Avatar",uVar5);
                FUN_104319f0(local_20,(uint *)"column2",pcVar9);
                LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414058,0)," %i");
                Msg("%s:%s\n",iVar16,iVar4);
                Msg("* SV_BroadcastVoiceData:  Doesn\'t hear player.  Dropping %d bytes from %s (%s) to %s (%s)\n"
                Msg("* SV_BroadcastVoiceData: Sending %d bits (%d bytes) from %s (%s) to %s (%s).  Proximity %s.\n"
                Msg("CNavArea::PostLoad: Corrupt navigation data. Missing Hiding Spot\n");
                Msg("GameEventListener2 callback in list that should NOT be - %s!\n",uVar9);
                Msg("Radius found %s, dist %.2f\n",uVar4);
                Msg("Unable to determine where to set default bug parameter \'%s\', ignoring...\n",
                Msg("[Map]Added [%llu] %s to available FFA maps\n",uVar3,param_2,param_3);
                Msg("[Map]Added [%llu] %s to available FFA maps\n",uVar5,param_2,param_3);
                Msg("removing %d (%d): %s : %5.3f (%.3f)\n",iVar6,this[0xf],pcVar5,dVar10);
                Msg("weapon: %i has new validated bits: %i skin: %i\n",local_2c,piVar5,uVar7);
                Msg("weapon: %i has no subitems, so clearing addonbits (and skin)\n",uVar7);
                Warning("Bad overlay basis at (%f %f %f)!\n",(double)(float)piVar9[0x18]);
                Warning("CToolFrameworkInternal::LoadToolsFromLibrary:  Dll \'%s\' initialization phase failed.\n"
                Warning("Callback for event \"%s\" is NULL!!!\n",uVar9);
                Warning("Need to rebuild map to get bumped lighting on material %s\n",uVar3);
                Warning("Server error - failed to handle reservation request.\n");
                Warning("Unknown modifier in whitelist file: %s.\n",
                _DAT_1064671c = (**(code **)(*DAT_106a5e74 + 0x44))("host_thread_mode");
                _ExitOnFatalAssert("d:\\projects\\ti\\release\\ti_rel\\src\\game\\shared\\predictioncopy.cpp"
                bVar5 = FUN_1013c980((int)param_1,(int)"holdtime");
                cVar2 = FUN_1013aba0(&local_10,(byte *)"IdealSpeed",(char *)local_858);
                cVar2 = FUN_1013aba0(&local_10,(byte *)"NextKey",(char *)local_858);
                cVar2 = FUN_1013aba0(&local_10,(byte *)"SpawnChance",(char *)local_858);
                cVar2 = FUN_1013aba0(&local_10,(byte *)"Squad",(char *)local_858);
                cVar2 = FUN_1013aba0(&local_10,(byte *)"Stage",(char *)local_858);
                cVar2 = FUN_1013aba0(&local_10,(byte *)"Target2",(char *)local_858);
                cVar2 = FUN_1013aba0(&local_10,(byte *)"Target3",(char *)local_858);
                cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
                cVar2 = FUN_1013aba0(&local_10,(byte *)"targetname",(char *)local_858);
                iVar3 = FUN_1008c000(param_1,(byte *)"hinge_to_parent");
                iVar4 = FUN_10061a10(param_1,(byte *)"ValveBiped.bip01_Pelvis");
                iVar4 = FUN_10399410((char *)local_18cc,"info_heli_wp",0xc);
                iVar4 = FUN_10399410((char *)local_18cc,"info_plane_wp",0xd);
                iVar5 = FUN_102659a0(pbVar2,(byte *)"center");
                iVar5 = FUN_102659a0(pbVar2,(byte *)"match_substring");
                iVar5 = FUN_102659a0(pbVar2,(byte *)"subtract_first_from_last");
                iVar5 = FUN_102659a0(pbVar3,(byte *)"facing");
                iVar7 = FUN_103fd956(pcVar9,(int)"%f %f %f");
                iVar8 = FUN_10399410(pcVar12,"THEM",4);
                iVar8 = FUN_10399410(pcVar6,"BOTH",4);
                iVar9 = FUN_102f2265((char *)pbVar1,(int)"$%llx");
                local_c = FUN_10267f50(this,"DoPaste");
                local_c = FUN_1039d370(this,"DoPaste");
                local_c = FUN_1042ea30(this,"DoPaste");
                local_d8 = "sprites/flashlight_halo.vmt";
                local_e0 = "sprites/flashlight_beam.vmt";
                pDVar5 = (DName *)DName::DName((DName *)local_58,"::");
                pbVar3 = (byte *)FUN_1042f3d0(param_1,(uint *)"Binding",(uint)&DAT_104eefb3);
                pbVar5 = (byte *)FUN_1042f3d0(this_00,(uint *)"Binding",(uint)&DAT_104eefb3);
                pcVar10 = "#GP_VIPEsc_CT_CarPassenger";
                pcVar10 = "#TI_Game_Swap_ToCT";
                pcVar10 = "true";
                pcVar10 = "unknown";
                pcVar11 = "attenuation";
                pcVar11 = "random";
                pcVar11 = "rndwave";
                pcVar13 = "#GP_VIPEsc_CT_CarDriverVIP";
                pcVar13 = "DS:Query 3DBuffer for 3d front left failed";
                pcVar13 = "Hostage_%d.Scared";
                pcVar13 = "Hostage_%d.Scared_Running";
                pcVar13 = "SquadDesc_CT_CarPassenger";
                pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_CT_VIPCarDriver",
                pcVar14 = "#TI_Score_CTCaseNoVIP";
                pcVar14 = "#TI_Score_CTCaseNoVIP_XMAS";
                pcVar14 = "characters/npc13.mdl";
                pcVar15 = "Hint isn\'t in NPC\'s aimcone";
                pcVar15 = "Hint isn\'t visible to NPC.";
                pcVar15 = "Node isn\'t visible to NPC.";
                pcVar15 = "Node isn\'t visible to player.";
                pcVar18 = "";
                pcVar18 = "Server did not approve grace request, retrying...\n";
                pcVar20 = "#TI_Score_BOSSKill";
                pcVar20 = "#TI_Score_VIPKill";
                pcVar28 = "Current Target";
                pcVar28 = "Other Memory";
                pcVar3 = "";
                pcVar3 = "prop_door_rotating";
                pcVar4 = "";
                pcVar4 = "FCVAR_NEVER_AS_STRING";
                pcVar4 = "RecursiveLoadFromBuffer:  got } in key";
                pcVar4 = "intel";
                pcVar6 = "";
                pcVar7 = "Console";
                pcVar7 = "Soundmixer";
                pcVar7 = "intel";
                pcVar8 = "";
                pcVar8 = "#DeathMsg_Explosion";
                pcVar9 = "";
                pcVar9 = "Bot";
                pcVar9 = "GetCurSchedule() == NULL";
                pcVar9 = "cereal";
                pcVar9 = "columnpc2";
                pcVar9 = "columnpct2";
                pcVar9 = "explodefx_garbage";
                pcVar9 = "explodefx_mailbox";
                pcVar9 = "impact_fx_chipsround";
                pcVar9 = "scene_ramp";
                piVar2 = FUN_10232e10(this,(int)param_1,"Attribute",1);
                piVar9 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("explain_heal_teammate",0,0);
                ppcVar7 = FUN_1010b690(&param_2,"cable/cable.vmt");
                ppcVar7 = FUN_1010b690(&param_2,"cable/chain.vmt");
                ppcVar7 = FUN_1010b690(&param_2,"cable/rope.vmt");
                puVar10 = FUN_100b10f0(local_15c,(byte *)"FKID_%i");
                puVar3 = (uint *)FUN_102659b0((char *)&local_108,"gamemodes/");
                puVar3 = FUN_10021180(local_2b0,(byte *)"(startsolid): %s");
                puVar9 = FUN_10267f50(pvVar8,"CanBeDefaultButton");
                puVar9 = FUN_10267f50(pvVar8,"FindDefaultButton");
                puVar9 = FUN_1039d370(pvVar8,"CanBeDefaultButton");
                puVar9 = FUN_1039d370(pvVar8,"FindDefaultButton");
                puVar9 = FUN_1042ea30(pvVar8,"CanBeDefaultButton");
                puVar9 = FUN_1042ea30(pvVar8,"FindDefaultButton");
                uVar1 = FUN_0041e3a0(param_1,(byte *)"GAMECONSOLE");
                uVar1 = FUN_10077120("CAI_BaseNPC",
                uVar1 = FUN_10265ef0(param_1,(byte *)"tracker");
                uVar1 = FUN_10265f50(param_1,(byte *)"GAMECONSOLE");
                uVar1 = FUN_10399710((byte *)param_1,(byte *)"texture");
                uVar1 = FUN_10399710((byte *)param_1,(byte *)"unlocked_sentence");
                uVar1 = FUN_10399710(param_1,(byte *)"GAMECONSOLE");
                uVar1 = FUN_1042df80(param_1,(byte *)"GAMECONSOLE");
                uVar10 = FUN_103996b0(pbVar9,(byte *)"prop_c4_charge");
                uVar2 = FUN_100845f0((byte *)param_1,(byte *)"fadeinsecs");
                uVar2 = FUN_100845f0((byte *)param_1,(byte *)"fadeoutsecs");
                uVar2 = FUN_10399710((byte *)param_1,(byte *)"deceleration");
                uVar2 = FUN_10399710((byte *)param_1,(byte *)"distance");
                uVar3 = (**(code **)(*this + 0x8ec))("#Radio_CoverMe",8);
                uVar3 = FUN_10265ef0(pbVar2,(byte *)"prestart_stacks");
                uVar3 = FUN_10399710((byte *)param_1,(byte *)"maxshadowdistance");
                uVar3 = FUN_1042df20(pbVar1,(byte *)"L_TRIGGER");
                uVar3 = FUN_1042df20(pbVar1,(byte *)"VerticalInverted");
                uVar3 = FUN_1042df20(pbVar14,(byte *)"FlmOptionsFlyout");
                uVar3 = FUN_1042df80(pbVar1,(byte *)"MultiplayerSettings");
                uVar3 = FUN_1042df80(pbVar14,(byte *)"LoadMapOffline");
                uVar4 = FUN_10265f50(pbVar3,(byte *)"south-west");
                uVar4 = FUN_102687d0(puVar9,(uint *)"result",0);
                uVar4 = FUN_10399710((byte *)param_1,(byte *)"Stoplight_A2");
                uVar4 = FUN_10399710(pbVar3,(byte *)"south-west");
                uVar4 = FUN_1039d9a0(puVar9,(uint *)"result",0);
                uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"disableflashlight");
                uVar4 = FUN_1042df80(pbVar3,(byte *)"south-west");
                uVar4 = FUN_1042f270(puVar9,(uint *)"result",0);
                uVar5 = (**(code **)(*piVar4 + 0x40))(uVar2,uVar3,"SteamNetworking005");
                uVar5 = FUN_10399710((byte *)"Memory",local_418);
                uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"Pulse");
                uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"SetTexture");
                uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"Pulse");
                uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"SetTexture");
                uVar7 = FUN_1042df80(pbVar10,(byte *)"icons");
               "# of milliseconds to sleep per frame while hibernating but running the vgui dedicated server frontend"
               "# of milliseconds to sleep per frame while hibernating");
               "# of seconds to wait after final client leaves before hibernating.");
               "%s string image, int src_corner_height, int src_corner_width, int draw_corner_height, int draw_corner_width"
               "%s, bool textHidden, bool editable, bool unicode, bool NumericInputOnly, int maxchars"
               "%s, string image, string imagecolor, alignment imageAlignment, int preserveAspectRatio, int filtered"
               "%s, string labelText, string associate, alignment textAlignment, int wrap, int dulltext, int brighttext, string font"
               "(0 - off) (1 - Draws the bounding box of entities) (2 - Draws the axis aligned bounding box used for culling) (3 - draws both bounding boxes)"
               "(If sv_mincmdrate is > 0), this sets the maximum value for cl_cmdrate.");
               "(SP only) - enable FL_EDICT_PARTIAL_CHANGE optimization.");
               "(SP only) - show entities that were copied using small optimized lists (FL_EDICT_PARTIAL_CHANGE)."
               "*****************It is recommended to quit the game after running buildmodelforworld!  Leaks rendertargets!****************\n"
               "-1 to display all tiles. Otherwise the index of the tile to draw.");
               "0 - off, 1 - static prop color meshes are allocated from a single shared vertex buffer (on hardware that supports stream offset)"
               "0 - validate vhvhdr and studiohdr checksum, 1 - default, ignore checksum (useful if iterating physics model only for example)"
               "0 = 0ff, 1 = normal, 2 = log only, 3 = screen only",1,0,1,0x40400000);
               "0 = Original Algorithm 1 = New Algorithm");
               "0 = basic, 1 = advanced");
               "0 = both, 1 = basic only, 2 = advanced only");
               "0 = none, 1 = non-autosave, 2 = always");
               "0 = off, 1 = show post-processing passes in quadrants of the screen, 2 = only apply post-processing to the centre of the screen"
               "0-255, but 0 has errors at the moment");
               "0: no muzzle flash,    1: dynamic light,    2: projected light");
               "0: no radiosity\n1: radiosity with ambient cube (6 samples)\n2: radiosity with 162 samples\n3: 162 samples for static props, 6 samples for everything else"
               "0: off\n1: draw light cache entries\n2: draw rays\n");
               "0=Off, 1=Normal, 2=Wireframe");
               "0=Off, 1=On, 2=Show Errors");
               "0=move+shoot from face. 1=move with torso. 2,3,4=shoot with face+mouse cursor. 5+ are probably not that useful."
               "0=off, Set all eyes to 1=left, 2=right, 3=middle eye");
               "1 - show hitches , 2 - show stalls");
               "1 = force load from cloud, 2 = re-generate to default");
               "1 == spawn malinois/doberman, >=2 == husky/pitbull with the number representative of the dogs level-2"
               "1 to output anim_showstate to Msg(). 2 to store in AnimState.log. 3 for both.");
               "1 to output cl_showanimstate to Msg(). 2 to store in AnimStateClient.log. 3 for both."
               "1 to output sv_showanimstate to Msg(). 2 to store in AnimStateServer.log. 3 for both."
               "1 use SIMD bones 0 use scalar bones.");
               "1.0 = play muzzle flashes every gun shot,   0 = don\'t play ANY muzzleflashes at all"
               "1: reload on attack, 2: automatically be reloaded when not attacking",1,0,1,
               "1=translate the viewmodel with the head motion.");
               "3D Skybox",false,4);
               "81115a71a5dfed7f100d0e3eb529c66d52ee0016",iVar5);
               "<bot name>.  Targets the bot you\'re looking at, or targets directly with <bot name>"
               "<bot name>.  Teleports Bot to where you\'re looking",0x10000000,(undefined *)0x0);
               "<entindex> <fieldname>:  Track changes to entity index entindex, for field fieldname."
               "A bitfield which affects leaf visibility debug rendering.  -1: show all, bit 0: render PVS-visible leafs, bit 1: render PVS- and frustum-visible leafs, bit 2: render frustum bounds, bit 3: render leaves out of PVS."
               "A burning player that gibs has burning gibs.");
               "A variable to control the percentage of gibs that are using the physics simulator");
               "A vote that fails cannot be re-submitted for this long");
               "Above this many milliseconds render the label red to indicate slow code.");
               "Account for FOV when computing an entity\'s distance-based alpha fade");
               "Accuracy modifier (0 - 100) for the bots. 100 = best aim");
               "Activate/deactivate the occlusion system.");
               "Activate/deactivate wireframe rendering of what the occlusion system is doing.");
               "Activate/deactivates a fast z-setting algorithm to take advantage of hardware with fast z reject. Use -1 to default to hardware settings"
               "Activate/deactivates spew about what the occlusion system is doing.");
               "Activates debugging spew for a specific material.",0x4002,(undefined *)0x0);
               "Activates/deactivate light averaging");
               "Activates/deactivates fast z rejection on displacements (360 only). Only active when r_fastzreject is on."
               "Active State: %s Pos:(%3.3f, %3.3f, %3.3f), Forward:(%3.3f, %3.3f, %3.3f), Left:(%3.3f, %3.3f, %3.3f), Up:(%3.3f, %3.3f, %3.3f)"
               "Add a line to the debug history. Format: <category id> <line>",0,(undefined *)0x0);
               "Add current area to the selected set.",0x4004,(undefined *)0x0);
               "Add specified area id to the selected set.",0x4004,(undefined *)0x0);
               "Adding this so I can turn it off when I take screenshots for promotion purposes. It looks terrible for screenshots."
               "Additional controller sensitivity scale factor applied when FOV is zoomed in.");
               "Additional mouse sensitivity scale factor applied when FOV is zoomed in.");
               "Address of remote server if sending unconnected rcon commands (format x.x.x.x:p) ",
               "Adds all areas in a radius to the selection set",0x4000,(undefined *)0x0);
               "Adds all blocked areas to the selected set",0x4000,(undefined *)0x0);
               "Adds all damaging areas to the selected set",0x4000,(undefined *)0x0);
               "Adds all invalid areas to the Selected Set.",0x4004,(undefined *)0x0);
               "Adds all obstructed areas to the selected set",0x4000,(undefined *)0x0);
               "Adds all stairway areas to the selected set",0x4000,(undefined *)0x0);
               "Adjust LOD of the last viewed texture +1 to inc resolution, -1 to dec resolution",
               "After this amount of time of standing in place but aiming to one side, go ahead and move feet to face upper body."
               "After this many seconds of being basically stationary, the ragdoll will go to sleep."
               "After this many seconds without a message from a client, the client is dropped");
               "After this many seconds without receiving a packet from the server, the client will disconnect itself"
               "All Cascades: Total AABB Cull Checks: %u, Passed: %u, Total World AABB Cull Checks: %u, Passed: %u"
               "All Error() calls will attach a callstack",(int)FUN_101fcce0);
               "All Warning()/DevWarning()/... calls will attach a callstack",(int)FUN_101fce10);
               "All computed bones:  %i",DAT_107163d0);
               "All playback is fully async (sound doesn\'t play until data arrives).");
               "Allow clients to download files");
               "Allow clients to upload customizations files");
               "Allow lights to influence lightcaches beyond the lights\' radii");
               "Allow or disallow clients from using voice_inputfromfile on this server.",
               "Allow or disallow the wait command on clients connected to this server.");
               "Allow spectators to vote?");
               "Allow steam connections to attempt to use relay servers as fallback (best if specified on command line:  +net_steamcnx_allowrelay 1)"
               "Allow voting? (Requires mod\'s support first.)");
               "Allow/disallow players to be painted.");
               "Allows moving the ZNear plane to deal with body clipping");
               "Allows players using Mumble to have support for positional audio.");
               "Allows rain in splitscreen");
               "Allows team members to injure other members of their team");
               "Allows the client to playback screenshot and jpeg commands in demos.");
               "Allows the console to be activated.");
               "Allows viewing of nonlocal players in a split screen fashion",
               "Alpha for rope antialiasing effect");
               "Amount by which the camera (viewer\'s eye) is expanded for occlusion test. This should be large enough to accommodate eye\'s movement within a frame or two"
               "Amount by which the player bounding box is expanded for occlusion test. This margin should be large enough to accommodate player movement within a frame or two, and the longest weapon they might hold. Shadow does not take this into account."
               "Amount by which the player bounding box is expanded up for occlusion test to account for jumping. This margin should be large enough to accommodate player movement within a frame or two. Affects both camera box and player box."
               "Amount of lag used when matching offset to ideal angles in thirdperson view");
               "Amount of simulation time that can elapse before new systems start falling back to cheaper versions"
               "Amount of time player maintains her power after being painted.");
               "Amount spawn interval increases for each child");
               "Amount to scale depth values before writing into destination alpha ([0,1] range).");
               "Amplitude of the detail prop sway");
               "Anchor nav_begin_area Z to editing player\'s feet");
               "Angular change from parent");
               "Angular velocity limit before eyes considered snapped for demo playback.");
               "Apparent distance of the HUD in inches");
               "Applies smoothing/decay curve to flex animation controller changes.");
               "Applies the comma delimited key=value pairs to the entity with the given Hammer ID.\n\tFormat: ent_keyvalue <entity id> <key1>=<value1>,<key2>=<value2>,...,<keyN>=<valueN>\n"
               "Apply bandwidth choke to loopback packets");
               "Apply cl_cmdrate and cl_updaterate to loopback connection");
               "Apply cos(angle) * weight before pan law",0,(undefined *)0x0);
               "As the clock offset goes from cl_clock_correction_adjustment_min_offset to this value (in milliseconds), it moves towards applying cl_clock_correction_adjustment_max_amount of adjustment. That way, the response is small when the offset is small."
               "Assertion Failed: !m_bNeedsSort");
               "At least this many occluders will be used, no matter how big they are.");
               "Attach the flashlight effect to the viewmodel");
               "Attachment index for attachment mode");
               "Attempt to compress out of band voice payloads (360 only).");
               "Attempts to build a nav ladder on the climbable surface under the cursor.",0x4004,
               "Audit the memory usage and files in the save-to-memory system",0,(undefined *)0x0);
               "Auto director allows spectators to become camera man");
               "Auto director uses fixed level cameras for shots");
               "Auto-director chooses best view modes while spectating");
               "Auto-save a scoreboard screenshot at the end of a map.");
               "Autogenerate nav areas on fence and obstacle tops");
               "Automatically records all games as TacticalTV demos.");
               "Automatically reloads the animation script each time one is ran");
               "Automatically sprint when moving with an analog joystick");
               "Automatically swaps the current weapon for the bug bait and back again.",0x4000,
               "Autosave on the PC behaves like it does on the consoles.");
               "Average lifetime of each flame in seconds");
               "Average the next N frames.",0,(undefined *)0x0);
               "Base Hud Colour [0=Default, 1=green, 2=blue, 3=red",1,0,1,0x40400000);
               "Base for falling back to cheaper effects under load.");
               "Begin shifting the Selected Set.",0x4004,(undefined *)0x0);
               "Beyond this number of degrees, the mouse clamps");
               "Beyond this number of degrees, the mouse drags the torso");
               "Bind a command to an available key. (forcebind command opt:suggestedKey)",0,
               "Bitfield - locks HUD axes to the world - 0=pitch, 1=yaw, 2=roll");
               "Blending rules only:  %i",DAT_107163c8);
               "Blobulator",false,4);
               "Boost ambient cube by no more than this factor");
               "Bounce multiplier for when physically simulated objects collide with other objects."
               "Break into the debugger if this many or more traces are performed in a single think function. Negative numbers mean that the same think function may be broken into many times (once per [x] may traces), positive numbers mean each think will break only once."
               "Brightness of useable object halos");
               "Bring the advanced demo player UI (demoui2) to foreground.",0x20000,(undefined *)0x0
               "Bring up the material under the crosshair in the editor",0x4000,(undefined *)0x0);
               "Brush_Model_Rendering",false,4);
               "Budget gtNode to start report from when doing a dump spikes");
               "CAI_BaseNPC");
               "CBaseEntity::EmitSound",false,4);
               "CBasePlayerControllable::Entity_PostSimulate",0,"Controllables(Client)",false,4);
               "CBasePlayerControllable::VPhysicsUpdatePreSimulation",0,"Controllables(Client)",
               "CBasePlayerControllable::Vehicle_ProcessPlayerInput",0,"Controllables(Server)",false
               "CBasePlayerControllable::_CalcNetworkedVariables",0,"Controllables(Server)",false,4)
               "CBaseVPhysicsControllable::ProcessClientUpdate",0,"Controllables(Server)",false,4);
               "CBaseVPhysicsControllable::RecalculatePhysPosition",0,"Controllables(Client)",false,
               "CBaseVPhysicsControllable::RecalculatePhysPosition",0,"Controllables(Server)",false,
               "CBaseVPhysicsControllable::SmoothifyPosition",0,"Controllables(Client)",false,4);
               "CBaseVPhysicsControllable::UpdateClientSideAnimation",0,"Controllables(Client)",
               "CBaseWheeledControllable::MotionControllerSimulate",0,"Controllables(Client)",false,
               "CBaseWheeledControllable::MotionControllerSimulate",0,"Controllables(Server)",false,
               "CBaseWheeledControllable::Vehicle_PreSimulation",0,"Controllables(Client)",false,4);
               "CBaseWheeledControllable::Vehicle_PreSimulation",0,"Controllables(Server)",false,4);
               "CBaseWheeledControllable::Vehicle_Simulation",0,"Controllables(Client)",false,4);
               "CBaseWheeledControllable::Vehicle_Simulation",0,"Controllables(Server)",false,4);
               "CClientShadowMgr::BuildPerspectiveWorldToFlashlightMatrix",0,
               "CClientShadowMgr::ComputeShadowDepthTextures",0,"Shadow Depth Texturing",false,4);
               "CDetailObjectSystem::CountSpritesInLeafList",0,"Detail_Prop_Rendering",false,4);
               "CDetailObjectSystem::RenderTranslucentDetailObjects",0,"Detail_Prop_Rendering",false
               "CDetailObjectSystem::RenderTranslucentDetailObjectsInLeaf",0,"Detail_Prop_Rendering"
               "CDetailObjectSystem::SortSpritesBackToFront",0,"Detail_Prop_Rendering",false,4);
               "CFlashlightEffect::UpdateDefaultFlashlightState",0,"Shadow Depth Texturing",false,4)
               "CLIENT Vehicle Input",false,4);
               "CL_InstallAndInvokeClientStringTableCallbacks",0,"Networking",false,4);
               "CLagCompensationManager",false,4);
               "CModelRenderSystem::ComputeTranslucentRenderData",0,"Fast Path Model Rendering",
               "CNavArea::PostLoad: Corrupt navigation data. Missing \"from\" Navigation Area for Encounter Spot.\n"
               "CNavArea::PostLoad: Corrupt navigation data. Missing \"to\" Navigation Area for Encounter Spot.\n"
               "CNetworkStringTableContainer::WriteUpdateMessage",0,"Networking",false,4);
               "CParticleCollection::GenerateSortedIndexList",0,"Particle/Effect_Rendering",false,4)
               "CParticleCollection::InitializeNewParticles",0,"Particle Simulation",false,4);
               "CPrediction::ProcessMovement",false,4);
               "CSceneEntity::GenerateSceneForSound:  Alloc of actor, channel, or event failed!!!\n"
               "CShadowMgr::DrawFlashlightDecalsOnDisplacements",0,"Shadow_Rendering",false,4);
               "CShadowMgr::DrawFlashlightDecalsOnSurfaceList",0,"Shadow_Rendering",false,4);
               "CTIPlayerMovement::ComputeConstraintSpeedFactor",0,"Player",false,4);
               "CTIPlayerMovement::FastRopeObstacleAvoidance",0,"Player",false,4);
               "CTIPlayerMovement::PerformFlyCollisionResolution",0,"Player",false,4);
               "CTIPlayerMovement::PerformRappelCollisionResolution",0,"Player",false,4);
               "CTIPlayerMovement::TempHack_TryBreakHitzoneProps",0,"Player",false,4);
               "CTIPlayerMovement::TracePlayerBBoxForGround",0,"Player",false,4);
               "CViewRender::Render",false,4);
               "C_RopeKeyframe::CalculateEndPointAttachment",0,"Ropes",false,4);
               "C_ViewmodelAttachmentModel::InternalDrawModel",0,"Other_Model_Rendering",false,4);
               "Calculate Only Tangents");
               "Calculate UVs and Tangents");
               "Can people hold votes to change the map after this round?");
               "Can people hold votes to immediately change the map?");
               "Can people hold votes to kick players from the server?");
               "Can people hold votes to restart the game?");
               "Cancels all ent_fire created outputs that are currently waiting for their delay to expire."
               "Cargo trucks to spawn");
               "Causes the third person model to be drawn instead of the view model");
               "Centers the nav mesh in the world",0x4000,(undefined *)0x0);
               "Change bias value for computing circle buffer");
               "Change server to the specified map",0x20000,FUN_101ad3a0);
               "Change the maximum number of players allowed on this server.",0,(undefined *)0x0);
               "Changes the density of air for drag computations.",0x4000,(undefined *)0x0);
               "Channel volume cross-fade time in seconds.");
               "Cheat to test regenerative health systems",(int)FUN_101c4a00);
               "Check for thinktimes all on same timestamp.");
               "Checks for nodes embedded in displacements (useful for in-development maps)");
               "Choose a material from 0 to N");
               "Chops all selected areas into their component 1x1 areas and re-merges them together into larger areas"
               "Chops all selected areas into their component 1x1 areas",0x4000,(undefined *)0x0);
               "Chops the marked area into disconnected sub-areas suitable for sniper spots.",0x4004
               "Class,Prop,Decode Count,Total Bits,Avg Bits,Total Index Bits,Avg Index Bits,Flat prop index,=SUM(D:D)\n"
               "Clear all nav attributes of selected area.",0x4000,(undefined *)0x0);
               "Clear memory of client side hints displayed to the player.",0,(undefined *)0x0);
               "Clear memory of server side hints displayed to the player.",0,(undefined *)0x0);
               "Clear the back buffer to random colors every frame. Helps spot open seams in geometry."
               "Clear the selected set.",0x4004,(undefined *)0x0);
               "Client Simulation",false,4);
               "Client downloads customization files");
               "Client uploads customization files");
               "Client_Animation",false,4);
               "Clientside physics push away (0=off, 1=only localplayer, 1=all players)");
               "Clip entities against portal frustums.");
               "Cloud enabled from (from HKCU\\Software\\Valve\\Steam\\Apps\\appid\\Cloud)",
               "Collapse the whole vprof tree",0,(undefined *)0x0);
               "Color used to draw the selected set background while editing.",0,0,0,0,
               "Color used to draw the selected set borders while editing.",0,0,0,0,
               "Completely disable distance fading on large props");
               "Compress string table for networking\n");
               "Con_NPrint background alpha.");
               "Configuration layout version dummy.");
               "Connect the vscript VM to the script debugger",0,(undefined *)0x0);
               "Connect to TacticalTV server and relay broadcast.",0,(undefined *)0x0);
               "Connect to specified server. With multiple players.",0xa0010,(undefined *)0x0);
               "Console output gets written to this file",0,0,0,0,(int)FUN_100db090);
               "Consume the specified number of threads in the thread pool",0,0,0,0,
               "Contact email for server sysop");
               "Controllables(Client)",false,4);
               "Controllables(Server)",false,4);
               "Controls the duration of vphysics penetration error boxes.");
               "Controls the speed of light interpolation, 0 turns off interpolation");
               "Controls the speed when matching offset to ideal angles in thirdperson view");
               "Convert a recorded .vprof file to .csv.",0,(undefined *)0x0);
               "Convert obsolete jump areas into 2-way connections");
               "Create a prediction error",0x4000,(undefined *)0x0);
               "Create a savegame before VCD playback");
               "Create dictionary for current strings.",0,(undefined *)0x0);
               "Creates a dlight in front of the player",0x4000,(undefined *)0x0);
               "Creates a dynamic prop with a specific .mdl aimed away from where the player is looking.\n\tArguments: {.mdl name}"
               "Creates a physics prop with a specific .mdl aimed away from where the player is looking.\n\tArguments: {.mdl name}"
               "Creates an entity of the given type where the player is looking.",0x4004,
               "Current name of the skybox texture");
               "Current server access password");
               "Custom mouse acceleration value.",1,0,0,0);
               "Custom mouse acceleration:\n0: custom accelaration disabled\n1: mouse_acceleration = min(m_customaccel_max, pow(raw_mouse_delta, m_customaccel_exponent) * m_customaccel_scale + sensitivity)\n2: Same as 1, with but x and y sensitivity are scaled by m_pitch and m_yaw respectively.\n3: mouse_acceleration = pow(raw_mouse_delta, m_customaccel_exponent - 1) * sensitivity"
               "Cycle through the aim & move modes.",0,(undefined *)0x0);
               "Cycles threadpool reservation by powers of 2",0,(undefined *)0x0);
               "Debug purposes, set the model of the player");
               "Debug the attempted connection between two nodes",0,(undefined *)0x0);
               "Decrease sensitivity in 0.1 increments, loops around between 1.0 and 6.0.",0x20000,
               "Default brightness for lightmaps where none have been created in the level.");
               "Defer sound recording until next tick when laying off movies.");
               "Defines a corner of a new Area or Ladder. To complete the Area or Ladder, drag the opposite corner to the desired location and issue a \'nav_end_area\' command."
               "Defines the second corner of a new Area or Ladder and creates it.",0x4004,
               "Delay in seconds before the client will resend the \'connect\' attempt",1,0x3fc00000
               "Delays map change until broadcast is complete");
               "Deletes the currently highlighted Area.",0x4004,(undefined *)0x0);
               "Deletes the currently marked Area (if any).",0x4004,(undefined *)0x0);
               "Density of Particle Rain 0-1");
               "Describe datamap_t for entindex",0,(undefined *)0x0);
               "Determines whether netgraph font is proportional or not",(int)FUN_1019a320);
               "Determines which files can be downloaded from the server (all, none, nosounds)");
               "Disable area to area connection testing.");
               "Disable clientside physics props (must be set before loading a level).");
               "Disable clientside ragdoll props (must be set before loading a level).");
               "Disable interpolation list optimizations.",0,0,0,0,(int)FUN_1007a0f0);
               "Disable map ambient light entities.");
               "Disable map color-correction entities");
               "Disable npc background expressions when you can\'t see them.");
               "Disable player sprays.");
               "Disable updating of projected shadow textures from UpdateLight");
               "Disables drawing of notification area (for taking screenshots).");
               "Disables the simulation and returns focus to the editor",0x4000,(undefined *)0x0);
               "Disallow backtracking a player for lag compensation if it will cause them to become stuck"
               "Discards incoming message: <0|1|name>");
               "Dispatch clients to relay proxies: 0=never, 1=if appropriate, 2=always");
               "Dispatches the test particle system with the parameters specified in particle_test_file,\n particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Displacement_Rendering",false,4);
               "Display async .ani file loading info.");
               "Display data for clientside entity matching specified index.\nFormat: cl_find_ent_index <index>\n"
               "Display data for entity matching specified index.\nFormat: find_ent_index <index>\n"
               "Display ground entity list <index>",0,(undefined *)0x0);
               "Display in game lessons that teach new players.",(int)FUN_100ac940);
               "Display more verbose information for lessons have this name.");
               "Display number of particles drawn per frame");
               "Display physics-based \'jiggle bone\' debugging information");
               "Display status of the query cache (client only)",0,(undefined *)0x0);
               "Display the color correction layer information.",0x4000,(undefined *)0x0);
               "Display the name of the material under the crosshair",0x4000,(undefined *)0x0);
               "Display the texture memory usage on the HUD.");
               "Display the visual effects of being painted.");
               "Displays a list of the active screen shakes.");
               "Displays a list of the last 5 lines of speech from NPCs.",0x20004,(undefined *)0x0);
               "Displays a particular level of the spatial partition system. Use -1 to disable it.")
               "Displays all the available ranks and their XP",0,(undefined *)0x0);
               "Displays how much time has elapsed since the game started",0x4000,(undefined *)0x0);
               "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Displays the attachment points on an entity.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Displays the client\'s absbox for the entity under the crosshair.",0x4000,
               "Displays the client\'s bounding box for the entity under the crosshair.",0x4000,
               "Displays the client\'s render box for the entity under the crosshair.",0x4000,
               "Displays the entity\'s autoaim radius.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at"
               "Displays the eye position for the given entity(ies) in red.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Displays the pivot for the given entity(ies).\n\t(y=up=green, z=forward=blue, x=left=red). \n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Distance across which detail props fade in",(int)FUN_100f9fd0);
               "Distance at which detail props are no longer visible",(int)FUN_100f9fd0);
               "Distance players can spot enemies for adding to friendly radar");
               "Distance prop fade disable threshold size");
               "Do client side flex animation.");
               "Do extended check for encoding of timestamps against tickcount");
               "Do view interpolation during dem playback.");
               "Do we draw the plans our not?");
               "Does not affect PS3 which uses FXAA_CONSOLE_PS3_EDGE_SHARPNESS define due to being ALU bound (and only safe values are 2, 4, 8). On X360, (2.0 - really soft, good for vector graphics inputs), (4.0 - is softer), (8.0 - is sharper, default)"
               "Does not affect PS3 which uses FXAA_CONSOLE_PS3_EDGE_THRESHOLD define due to being ALU bound (and only safe values are 1/4, 1/8). On X360, (0.125 - default, leaves less aliasing, but is softer, 0.25 - leaves more aliasing and is sharper)"
               "Don\'t bother compressing packets below this size.");
               "Don\'t interpolate previous hermite sample when fixing up times.");
               "Don\'t print stats when memtesting");
               "Don\'t receive chat messages from other TacticalTV spectators");
               "Don\'t run around and look happy.");
               "Don\'t shoot!! Don\'t detect enemies. I use this for debugging purposes");
               "Don\'t shoot!! Just run around and look happy.");
               "Don\'t test validity of a lag comp restore, just do it.");
               "Don\'t use CPU applying small wind gusts to ropes when they\'re past this distance."
               "Doppler effect is extremely sensible to volume variation. To reduce the pops, the cross-fade has to be very slow."
               "Draw a particular material over the frame");
               "Draw all renderables, even ones inside solid leaves.");
               "Draw clip brushes (red=NPC+player, pink=player, purple=NPC)",(int)FUN_100dc5b0);
               "Draw current battery level at top of screen when on battery power");
               "Draw current position at top of screen");
               "Draw fps meter (1 = fps, 2 = smooth, 3 = server, 4 = Show+LogToFile, +10 = detailed )"
               "Draw impact debris effects.");
               "Draw leaf ambient lighting samples.  Needs mat_leafvis 1 to work");
               "Draw local player\'s voice icon");
               "Draw paths tried during search for bodysnatcher pathing");
               "Draw specified material as an overlay",0x10004000,(undefined *)0x0);
               "Draw the interpolation graph.");
               "Draw the network usage data, = 2 prints in/out data, = 3 draws data on payload,",
               "Draw the normal of the displacement/brush we\'re pointing at.",0x4000,
               "Draw the ping/packet loss graph.");
               "Draw the server framerate graph.");
               "Draw voice icons using particles");
               "Draw wireframe of: [0] nothing, [1] current leaf, [2] entire vis cluster, or [3] entire PVS (see mat_leafvis_draw_mask for what does/doesn\'t get drawn)"
               "Draws a cross at the given location\n\tArguments: x y z",0x4000,(undefined *)0x0);
               "Draws line between two 3D Points.\n\tGreen if no collision\n\tRed is collides with something\n\tArguments: x1 y1 z1 x2 y2 z2"
               "Draws skybox after world brush geometry, rather than before.");
               "Draws the surface as an isosurface");
               "Draws the vgui panel hiearchy to the specified depth level.");
               "Draws the vgui popup list in hierarchy(1) or most recently used(2) order.",
               "Driver Name:  %s\nDriver Version: %s\nVendorId / DeviceId:  0x%x / 0x%x\nSubSystem / Rev:  0x%x / 0x%x\nDXLevel:  %s\nVid:  %i x %i"
               "Driver Name:  %s\nVendorId / DeviceId:  0x%x / 0x%x\nSubSystem / Rev:  0x%x / 0x%x\nDXLevel:  %s\nVid:  %i x %i\nFramerate:  %.3f\nWindow mode: %s\nNumber of ReaquireResource events (lost device): %d\nMaterial system thread mode: %s"
               "Drops next n packets on client");
               "Duh.. winning",0x4000,(undefined *)0x0);
               "Dump OOB UDP packets summary to console");
               "Dump UDP packets summary to console");
               "Dump a screenshot when the FPS drops below the given value.");
               "Dump all new particles, optional name substring.",0,(undefined *)0x0);
               "Dump all response_rules.txt and rules (requires restart)");
               "Dump current and max heap usage info to console at end of frame ( set to 2 for continuous output )\n"
               "Dump entity by prediction classname.");
               "Dump game events to console (1=client only, 2=all).");
               "Dump info about this entity to screen.");
               "Dump non-loopback udp only");
               "Dump sounds to console",0,(undefined *)0x0);
               "Dump split screen workarounds.",0,(undefined *)0x0);
               "Dump the contents of the Entity I/O event queue to the console.",0,(undefined *)0x0)
               "Dump the contents of the blackbox",0x20000,(undefined *)0x0);
               "Dump the contents of the game string table to the console.",0x4000,(undefined *)0x0)
               "Dump the debug history to the console. Format: <category id>\n    Categories:\n     0: Entity I/O\n     1: AI Decisions\n     2: Scene Print\n     3: Alyx Blind\n     4: Log of damage done to player"
               "Dump the state of the VM to the console",0,(undefined *)0x0);
               "Dump vprof counters to the console",0,(undefined *)0x0);
               "Dumps debug info for an entity",0,(undefined *)0x0);
               "Dumps information about all logging channels.",0x20000,(undefined *)0x0);
               "Dumps out a report of game event network usage",0,(undefined *)0x0);
               "Dumps the client\'s soundscape data.\n",0x4000,(undefined *)0x0);
               "Dumps the memory used by vcollides",0,(undefined *)0x0);
               "Dumps the names and values of this entity\'s script scope to the console\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Dumps time spent idle in previous frames in ms(dedicated only).",0,(undefined *)0x0)
               "Duration each new flame will attempt to spawn new flames");
               "Duration in seconds to show nav area ID and attributes while editing");
               "Duration of each INTEL round");
               "Echo log information to the console.");
               "Effects sub-pixel AA quality and inversely sharpness (only used on FXAA Console): (0.33 - sharper), (0.5 - default)"
               "Effects sub-pixel AA quality and inversely sharpness (only used on FXAA Quality): (0.0 - off), (1.0 - upper limit, softer), default = 0.75"
               "Enable a flashlight drawing pass on detail props. 0 = off, 1 = single pass, 2 = multipass (multipass is PC ONLY)"
               "Enable asynchronous occlusion test in another thread; may save some server tick time at the cost of synchronization overhead with the async occlusion query thread"
               "Enable customized player sound playback");
               "Enable debug overlay on traces that determine where the client-side visible env_beam is drawn. Has no bearing on the server-side damage-causing part of the beam."
               "Enable debug printing about constraint sounds.");
               "Enable delta entity bit stream cache");
               "Enable depth resolve to a texture. 0=disable, 1=enable via resolve tricks if supported in hw, otherwise disable, 2=force extra depth only pass"
               "Enable entity outline glow effects.");
               "Enable for optimization to water - considers view in leaf under water for purposes of culling"
               "Enable frustum culling of flashlights");
               "Enable instanced baselines. Saves network overhead.");
               "Enable network optimizations for single player games.");
               "Enable parallel processing bot think methods");
               "Enable parallel processing of C_BaseAnimating::SetupBones()");
               "Enable procedural twist bones.");
               "Enable profiling of CalcDelta calls");
               "Enable recording demos (must be set true before loading a map)");
               "Enable rendering of debug overlays");
               "Enable shadowing from world lights",(int)FUN_100ead60);
               "Enable support for old style (HL1) server queries");
               "Enable test mode for ik height adjustment");
               "Enable the rendering of sky boxes");
               "Enable the rendering of vgui panels");
               "Enable the texture budget panel.");
               "Enable the use of the hw morph models. (-1 = never, 1 = always, 0 = based upon GPU)"
               "Enable the use of the hw morph vcd(s). (-1 = never, 1 = always, 0 = based upon GPU)"
               "Enable/Disable optimal static prop rendering into CSM\'s (cull static props that make no visual contribution to shadows)"
               "Enable/Disable specularity for visual testing.  Will not reload materials and will not affect perf."
               "Enable/disable IsInAir() check for rain drops?");
               "Enable/disable clock correction on the client.");
               "Enable/disable extrapolation if interpolation history runs out.");
               "Enable/disable film grain post effect",(int)FUN_101d8560);
               "Enable/disable particle rendering");
               "Enable/disable ragdoll physics.");
               "Enable/disable rain profiling.");
               "Enable/disable rain simulation.");
               "Enable/disable saving screenshots to Steam",(int)FUN_102f0de0);
               "Enable/disable team overhead player icons 1 = on, 2 = use decals");
               "Enable/disable text messages printing on the screen.");
               "Enable/disable using Steam Voice instead of the old voice codec (if enabled, voice_inputfromfile will no longer function)."
               "Enable/disable voice in this mod.");
               "Enables Split Screen support. Play Single Player now launches into split screen mode. NO ONLINE SUPPORT"
               "Enables logging to file, console, and udp < on | off >.",0,(undefined *)0x0);
               "Enables the global event log system");
               "Enables update of delay for choreo to compensate for IO latency.");
               "Enables/Disables third person",(int)FUN_100ca8c0);
               "Entity to watch for prediction system changes.");
               "Entity variable to watch in prediction system for changes.");
               "Erase any previously placed walkable positions.",0x4004,(undefined *)0x0);
               "Escape key allowed to hide game UI",0,(undefined *)0x0);
               "Escape key allowed to show game UI",0,(undefined *)0x0);
               "Escape key doesn\'t hide game UI",0,(undefined *)0x0);
               "Escape key doesn\'t show game UI",0,(undefined *)0x0);
               "Exagerates player ragdoll angular velocity");
               "Execute a vscript file, replacing existing functions with the functions in the run script"
               "Execute all of this entity\'s VScripts, replacing existing functions with the functions in the run scripts"
               "Execute an activation script, replacing existing functions with the functions in the run script"
               "Execute script file if file exists.",0,FUN_1016d7f0);
               "Executes the highlighted button on the radial menu (if cl_fastradial is 1)",0,
               "Expand a budget group in the vprof tree by name",0,(undefined *)0x0);
               "Experimental hi-freq colors");
               "Explicitly delete dormant client entities caused by AllowImmediateReuse().");
               "Factor to adjust the spacing between npc cars when they get spawned.");
               "Factor to multiply the pre-calculated number of cars to spawn");
               "Factor to scale the grid by when editing in nav_edit mode. Higher numbers allow more precise editing"
               "Fades out all transition videos playing to the screen: <time>",0,(undefined *)0x0);
               "Fades out all videos playing to the screen: <time>",0,(undefined *)0x0);
               "FileSystem",false,4);
               "Filter and replace bad words in chat text, 0 = off, 1 = coarse, 2 = aggressive");
               "Filter used to spew sounds that starts late. Use an empty string \"\" to display all sounds. By default only the VO are displayed."
               "Filters console output based on the setting of con_filter_text. 1 filters completely, 2 displays filtered text brighter than other text."
               "Find and list all client entities with classnames that contain the specified substring.\nFormat: cl_find_ent <substring>\n"
               "Find and list all entities with classnames or targetnames that contain the specified substring.\nFormat: find_ent <substring>\n"
               "Find key bound to specified command string.",0,(undefined *)0x0);
               "Find sound names which reference the specified wave files.",2,(undefined *)0x0);
               "Finish shifting the Selected Set.",0x4004,(undefined *)0x0);
               "Fixup corrupted .wav file if engine crashed during startmovie/endmovie, etc.",0,
               "Fixup nodes marked with NAV_PLAYERCLIP.",0x4004,(undefined *)0x0);
               "Flips the selected ladder\'s direction.",0x4004,(undefined *)0x0);
               "Flush all .vcds from the cache and reload from disk.",0,(undefined *)0x0);
               "Flush all unlocked async audio data",0,(undefined *)0x0);
               "Flush and re-parse the sound operator system",0x4000,(undefined *)0x0);
               "Flush the log file to disk on each write (slow).");
               "Flush unlocked and locked cache memory.",0x4000,(undefined *)0x0);
               "Flushes entity bone cache on lag compensation");
               "Flushes the client side soundscapes",0x10004000,(undefined *)0x0);
               "Flushes the server & client side soundscapes",0,(undefined *)0x0);
               "Flushes the sounds.txt system (server only)",0,(undefined *)0x0);
               "Flushes the sounds.txt system",0,(undefined *)0x0);
               "Folder in the game directory where server logs will be stored.");
               "For debugging, draw entity states to console");
               "For debugging, show a list of used textures per frame");
               "For debugging. Force the engine to flush an entity packet.");
               "For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: (\"x.x.x.x\" )"
               "For testing, adds this many milliseconds of delay to the save operation.");
               "Force Holiday: 1: hw, 2: xmas, 3: ti bday");
               "Force PLanning Cam to Update When Not IN pLanningMode");
               "Force VXConsole updates every frame; smoother vprof data on PS3 but at a slight (~0.2ms) perf cost."
               "Force all bots to change to the specified class.");
               "Force all clients to disable their game instructors.",(int)FUN_100ad930);
               "Force async reads to serialize for profiling");
               "Force bots with the specified weapon to fire.");
               "Force client to ignore packets (for debugging).");
               "Force clock correction to match the server tick + this offset (-999 disables it).");
               "Force connection attempts to time out");
               "Force full sendtable sending path.");
               "Force movement yaw along an animation path.");
               "Force server side preloading.");
               "Force start the benchmark. This is only for debugging. It\'s better to set sv_benchmark to 1 and restart the level."
               "Force the 360 to get updated files that are in your p4 changelist(s) from the host PC when running with -dvddev."
               "Force the host to sleep a certain number of milliseconds each frame.");
               "Force the npc to try and speak all their responses",0,(undefined *)0x0);
               "Force user input to this split screen player.");
               "Forces all model file data into cache on model load.");
               "Forces bots to send the specified command.");
               "Forces color correction entities to be updated on the client");
               "Forces the server to send a full update packet",0x4000,(undefined *)0x0);
               "Fraction of direct lighting used to boost lighting when model requests");
               "Frame Rate, Number of Frames, Percent of Frames\n");
               "Frame rate limiter, splitscreen");
               "Framerate at which vprof will begin to dump spikes to the console. 0 = disabled, negative to reset after dump"
               "Frames to delay before taking snapshot");
               "Game",false,4);
               "GameInstructor",false,4);
               "Generate a Navigation Mesh for the current map and save it to disk.",0x4004,
               "Generate a report to the console based on budget group.",0,(undefined *)0x0);
               "Generate a report to the console.",0,(undefined *)0x0);
               "Get data related to mix group matching string",0,(undefined *)0x0);
               "Get voice input from \'voice_input.wav\' rather than from the microphone.",
               "Give a supply of ammo for current weapon..\n",0x4000,(undefined *)0x0);
               "Gives a list of all currently open lessons.",0x4000,(undefined *)0x0);
               "Gives the game time in seconds (server\'s curtime)",0,(undefined *)0x0);
               "Go this fast when starting to hold FF button.");
               "Gzip compress logfile and rename to logfilename.log.gz on close.");
               "Hide the HUD during freeze-cam");
               "Highest unlocked game chapter.");
               "Highlight non-contiguous connections");
               "Highlight the selected panel",(int)FUN_10220990);
               "Highlights constraint system graph for an entity",0,(undefined *)0x0);
               "Hitzone density. 0 = low, 1 = medium, 2 = high");
               "Hold client aim for multiple server sim ticks when client-issued usrcmd contains multiple actions (0: off; 1: hold this server tick; 2+: hold multiple ticks)"
               "Hold worst case in server framerate line.");
               "Holds the state of the in game menu. Do not set this manually.");
               "Hostages",false,4);
               "How aggressive the switch to fallbacks will be depending on how far over the cl_particle_sim_fallback_threshold_ms the sim time is.  Higher numbers are more aggressive."
               "How far the in-game head will translate before being clamped.");
               "How fast the bot will think.. Faster think bots are more expensive ");
               "How frequent to hear the player\'s step sound or how fast they appear to be running from first person."
               "How hard physics objects are pushed away from the players on the server.");
               "How hard the hostage is pushed away from physics objects (falls off with inverse square of distance)."
               "How hard the player is pushed away from physics objects (falls off with inverse square of distance)."
               "How long after a vote passes until the action happens",0,0,1,0x40900000);
               "How long it takes for a notification to move.");
               "How long looping soundpatch captions should display for.");
               "How long should a kick vote ban someone from the server? (in minutes)");
               "How long to allow voting on an issue");
               "How long to display recent console text to the upper part of the game window");
               "How long until we timeout on our network connection because of connectivity loss (-1 if no problem)"
               "How many degrees per second that we can turn our feet or upper body.");
               "How many frames to sample texture memory for all textures.");
               "How many notifications are visible in-game.");
               "How many pixels the background borders the left and right.");
               "How many pixels the background borders the top and bottom.");
               "How many pixels the background is shifted down.");
               "How many pixels the background is shifted right.");
               "How many pixels to offset the locator from the target position.");
               "How many seconds an eye blink will last.");
               "How many seconds it takes to get to full FF speed.");
               "How much origin velocity before it\'s considered to have \'teleported\' causing interpolation to reset."
               "How much sideways velocity rain gets.");
               "How much software AA should blur one-pixel thick lines: (0.0 - none), (1.0 - lots)")
               "How much to enlarge ropes in screen space for antialiasing effect");
               "How much to scale rear speaker contribution to front stereo output");
               "How much to scale user stick input when the gun is pointing at a valid target.");
               "How much to slow down backwards motion");
               "How often someone can individually call a vote.");
               "How often to flash demo recording/playback overlay (0 - disable overlay, -1 - show always)"
               "Hurts the player.\n\tArguments: <health to lose>",0x4000,(undefined *)0x0);
               "I use this to debug the npc car spawning algorithm");
               "If 0, all other views are low resolution. Set to 1 to make other views high resolution."
               "If 0, other views are displayed (portal, shadow, reflection, ...). Note that shadows are disabled on game consoles. Set to 1 to only display the main view."
               "If 0, render the blob in two passes. Set to 1 to force rendering of the blob in a single pass."
               "If 0, the 360controller.cfg file will be executed on startup & option changes.");
               "If 0, the steam controller .cfg file will be executed on startup & option changes.")
               "If 1, make the main view high resolution. Set to 0 to make the main view low resolution."
               "If 1, recovers when the stream is exhausted when playing PCM sounds (prevents music or ambiance sounds to stop if too many sounds are played). Set to 0, to stop the sound otherwise."
               "If 1, releasing the button on a radial menu executes the highlighted button");
               "If 1, spews allocations on the static alloc pool. Set to 0 for no spew.");
               "If 1, spews warnings when the buffer is exhausted (recommended). Set to 0 for no spew (for debugging purpose only)."
               "If 1, then all communications from a player will be blocked when that player is muted, including chat messages."
               "If > 0, then it only runs the benchmark for this # of ticks.");
               "If a player is moving slower than this, don\'t push away physics objects (enables ducking behind things)."
               "If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.)."
               "If connected with available split screen slots, connects a split screen player to this machine."
               "If current and target volumes are close, don\'t cross-fade.");
               "If enabled, all splitscreen users will only see the first user\'s screen full screen"
               "If enabled, blobulator will use material thread.");
               "If enabled, hides all surfaces which have been painted.");
               "If enabled, prints diagnostic information about the current fog volume");
               "If enabled, use PIP instead of splitscreen. (Only works for 2 players)",
               "If local player is a passenger of a car, this defines how much smoothing the car he is in will have"
               "If non-zero when a map loads, static props won\'t be loaded");
               "If non-zero, game will restart in the specified number of seconds");
               "If non-zero, game will restart once someone from each team gives the ready signal");
               "If nonzero editing the mesh will incrementally recompue visibility");
               "If nonzero, aggressively cull duplicate sounds during mixing. The number specifies the number of duplicates allowed to be played."
               "If running a benchmark and this is set, it will record a vprof file over the duration of the benchmark with filename benchmark.vprof."
               "If running a game, outputs the precache manifest for the current level\n",0,
               "If set to 1, does an optimization to prevent extra SendTable_Encode calls.");
               "If set to 1, report all sound formats.\n");
               "If set to 1, report all sounds played with S_StartSound(). The sound may not end up being played (if error occurred for example). Use snd_showstart to see the sounds that are really played.\n"
               "If set to 1, report all sounds stopped with S_StopSound().\n");
               "If set to 1, report all sounds that just looped.\n");
               "If set to 1, report more error found when playing sounds.\n");
               "If set to 1, the server calculates data and fills packets to bots. Used for perf testing."
               "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client."
               "If set to 1, the server will print a message whenever a client is verifying a CRC for a file."
               "If set to 1, uses the last known leaf visibility data for visualization.  If set to 0, updates based on camera movement."
               "If set to a valid map name, will change to this map during the next changelevel");
               "If set to the name of the rule, that rule\'s score will be shown whenever a concept is passed into the response rules system."
               "If set, notarget will cause entities to never think they are in the pvs");
               "If set, only members of Steam group will be able to join the server when it\'s empty, public people will be able to join the server only if it has players."
               "If set, players may only join this server from matchmaking lobby, may not connect directly."
               "If set, rr_debugresponses will print only responses testing for the specified concept"
               "If set, server only simulates entities on even numbered ticks.\n");
               "If set, the game UI pages will take modal input focus.");
               "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit."
               "If the clock offset is less than this amount (in milliseconds), then no clock correction is applied."
               "If this is nonzero, then the texture list panel will render thumbnails of currently-loaded textures."
               "If this is nonzero, then the texture list panel will show all currently-loaded textures."
               "If this is true the game will switch to VR mode once startup is complete.");
               "If tiler is disabled, whether to draw the margin.");
               "If true when log when a query is blocked (can cause very large log files)");
               "If true, nav areas will be placed flush with the ground when created by hand.");
               "If true, nav areas will be placed flush with the ground when split.");
               "If true, use experimental threaded node graph building.");
               "If used without arguments, all available Places will be listed. If a Place argument is given, the current Place is set."
               "Ignore any packets with the sequence number more than this ahead (0 == no limit)");
               "In Portal and Paint, if your view is being rolled, compensate for that. So mouse movements are always relative to the screen."
               "In multiplayer games, don\'t repeat captions more often than this many seconds.");
               "Include .bsp for internal bug submissions.");
               "Increment specified convar value.",0x20000,(undefined *)0x0);
               "Index of the bone to follow.  -2 == disabled.  -1 == root bone.  0+ is bone index.")
               "Indicates how far ahead in seconds to preload animations.");
               "Indicates if optimized VB/IB copy is enabled (Write-combine memory optimization).");
               "Indicates the maximum number of indices to display per tile. The index size will be the limiting factor though (regardless of this number)."
               "Indicates the maximum number of threads that will be spawn for the blob.");
               "Indicates the maximum number of vertices to display per tile. The VB size will be the limiting factor though (regardless of this number)."
               "Indicates we\'re building cubemaps",(int)thunk_FUN_10078fb0);
               "Inferno dlights are at least this far apart");
               "Information about currently enabled flashlights");
               "Interpolate NPC positions starting this many seconds in past (or cl_interp, if greater)"
               "Interpolate entities on the client.");
               "Interpolation",false,4);
               "Interval (in seconds) at which vprof will batch up data and dump it to the console."
               "Interval between teams getting points for being in the zone");
               "Just interpolate colors");
               "Keep this many old copies in history of autosaves and quicksaves.");
               "Keeps track of whether we\'re forcing english in a localized language.");
               "Kick a player by userid or uniqueid, provide a force-the-kick flag and also assign a message."
               "Kick a player by userid or uniqueid, with a message.",0,(undefined *)0x0);
               "Lag all incoming network data (including loopback) by this many milliseconds.");
               "Largest time interval for child flame spawning");
               "Length of automatic error callstacks",(int)FUN_101fcd10);
               "Length of automatic warning callstacks",(int)FUN_101fce40);
               "Lifetime of the shells ejecting from the gun");
               "Limits spectators to chat only every n seconds");
               "Lines of crash dump console spew to keep.");
               "List all addresses currently being used by logaddress.",0,(undefined *)0x0);
               "List all clientside entities thinking and time - will report and turn itself off.");
               "List all clientside simulations and time - will report and turn itself off.");
               "List all collideable displacements",0,(undefined *)0x0);
               "List all mix groups to dev console.",0,(undefined *)0x0);
               "List all mix layers to dev console.",0,(undefined *)0x0);
               "List all mixers to dev console.",0,(undefined *)0x0);
               "List all the issues that can be voted on.",0,(undefined *)0x0);
               "List bound keys with bindings.",0,(undefined *)0x0);
               "List the vgui_drawtree panels in render order.",(int)FUN_10220990);
               "Lists all active physics objects",0,(undefined *)0x0);
               "Lists all entity factory names.",4,(undefined *)0x0);
               "Lists all place names used in the map.",0x4004,(undefined *)0x0);
               "Load Point Values from Script",0x4002,(undefined *)0x0);
               "Load a saved game from a console storage device.",0,(undefined *)0x0);
               "Loads the Navigation Mesh for the current map.",0x4004,(undefined *)0x0);
               "Location from which clients can download missing files");
               "Location to tag the screenshot with");
               "Lock the PVS so you can fly around and inspect what is being drawn.");
               "Lock the angle of the radar display?");
               "Locks map angle, doesn\'t follow view angle.\n");
               "Lod at level at which visemes stops always considering two phonemes, regardless of duration."
               "Log server bans in the server logs.");
               "Log server information in the log file.");
               "Log server information to only one file.");
               "Logitech G-15 Keyboard update interval.");
               "Low priority dlights are replaced by high priority ones");
               "Lowend optimization: if nonzero, spatialize only a fraction of sound channels each frame. 1/2^x of channels will be spatialized per frame."
               "Lower the bottom of the drag select volume.",0x4004,(undefined *)0x0);
               "Lower the selected corner of the currently marked Area.",0x4004,(undefined *)0x0);
               "Lower the top of the drag select volume.",0x4004,(undefined *)0x0);
               "Make props solid to nav generation/editing");
               "Make sure entities correctly report whether or not their network data has changed.")
               "Makes ropes use average of cubemap lighting instead of max intensity.");
               "Makes shadows cast from local lights shorter");
               "Map: %s\nGame: %s\nBuild: %i\nOS: %s\nMisc: %s\nNet: %s\nTime: %s\ncmdline:%s\ndriver: %s\nvideo: %s\n"
               "Mark an Area with no Place name. Useful for finding stray areas missed when Place Painting."
               "Mark cliff areas, post-processing approximation",0x4000,(undefined *)0x0);
               "Mark the current location as a walkable position. These positions are used as seed locations when sampling the map to generate a Navigation Mesh."
               "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands."
               "Max # of console bytes to put into bug report body (full text still attached).");
               "Max # of players 1 team can have over another (0 disables check)",1,0,1,0x41f00000);
               "Max # of seconds we can wait for next packets to be sent based on rate setting (0 == no limit)."
               "Max TacticalTV spectator bandwidth rate allowed, 0 == unlimited");
               "Max area size created in nav generation");
               "Max bandwidth rate allowed on server, 0 == unlimited",1,0,1,0x47fa0000);
               "Max bytes/sec the host can receive data",(int)FUN_1016bcb0);
               "Max distance at which to consider shadows for occlusion computations");
               "Max distance from the camera at which things will be rendered");
               "Max length of completely occluded shadow to consider a player for occlusion test. If shadow provably stops at this distance, the player may be considered for occlusion test. For longer shadows, we just don\'t do occlusion because we are not likely to find full occlusion when one of the boxes is expanded too much."
               "Max mouse move scale factor, 0 for no limit");
               "Max noise value of circle alpha");
               "Max number of command packets sent to server per second",1,0x41200000,1,0x43000000);
               "Max number of hostages to spawn this round");
               "Max number of times a user can fail rcon authentication before being banned",1,
               "Max pets per team (-1 == based on player count)");
               "Max snipers per team (-1 == based on player count)");
               "Maximum allowed file size for uploading in MB",1,0,1,0x42800000);
               "Maximum amount of force applied to physics objects by players.");
               "Maximum amount of memory to dedicate to engine hunk and datacache (in mb)");
               "Maximum amount of memory to dedicate to engine hunk and datacache, for dedicated server (in mb)"
               "Maximum client number on TacticalTV server.",1,0,1,0x437f0000);
               "Maximum clientside physic props");
               "Maximum distance a teammate\'s name will appear on the HUD.");
               "Maximum distance flames can spread from their initial ignition point");
               "Maximum downwards speed of shattered glass particles");
               "Maximum frametime to still play background expressions.");
               "Maximum height of player and still test for adsp");
               "Maximum lag compensation in seconds",1,0,1,0x3f800000);
               "Maximum number of client-issued usrcmd ticks that can be replayed in packet loss conditions, 0 to allow no restrictions"
               "Maximum number of flames that can be created");
               "Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server\'s."
               "Maximum of how hard the hostage is pushed away from physics objects.");
               "Maximum of how hard the player is pushed away from physics objects.");
               "Maximum prop breakable piece count (-1 = model default)");
               "Maximum prop breakable piece count per frame (-1 = model default)");
               "Maximum queries per second to respond to from a single IP address.");
               "Maximum queries per second to respond to from anywhere.");
               "Maximum random distance from the target to stop when framing them in observer freeze cam."
               "Maximum range for precomputed nav mesh visibility (0 = default 1500 units)");
               "Maximum speed any ballistically moving object is allowed to attain per axis.");
               "Maximum think time in milliseconds, warning is printed if this is exceeded.");
               "Maximum updates per second that the server will allow");
               "Maximum visible distance");
               "Maximum visible distance",1,0x43fa0000,1,0x44fa0000);
               "Memory threshold below which the host should flush caches between server instances")
               "Merges a saved selected set into the current mesh.",0x4004,FUN_1022dcf0);
               "Min FPS*2 at which inferno elights will be created, dlight @ minfps");
               "Min bandwidth rate allowed on server, 0 == unlimited",1,0,1,0x47fa0000);
               "Min distance to player at which PVS is used. At closer distances, PVS assumes we can see a shadow or something else from the player, so it\'s safer to just always be \"Visible\""
               "Minimum amount of memory to dedicate to engine hunk and datacache (in mb)");
               "Minimum distance between separate flame spawns");
               "Minimum distance from the player that a clientside prop must be before it\'s allowed to respawn."
               "Minimum random distance from the target to stop when framing them in observer freeze cam."
               "Minimum scale of the icon on the screen");
               "Minimum severity level for messages sent to any logging channel: LS_MESSAGE=0, LS_WARNING=1, LS_ASSERT=2, LS_ERROR=3."
               "Minimum size (in bytes) for stringtablebaseline buffer to be compressed.");
               "Minimum size of pushback objects");
               "Minimum stopping speed when on ground.");
               "Minimum updates per second that the server will allow");
               "Minimum value for the ambient lighting on dynamic models with more than one bone (like players and their guns)."
               "Modify global screen fade max size in pixels",0x4002,0);
               "Modify global screen fade min size in pixels",0x4002,0);
               "Mouse move is raised to this power before being scaled by scale factor.",1,
               "Move player to an exact specified origin (must have sv_cheats).",0x4000,
               "Move player to specified origin (must have sv_cheats).",0x4000,(undefined *)0x0);
               "Move specified player to specified origin (must have sv_cheats).",0x4000,
               "Movement will be relative to the camera, eg: left means screen-left");
               "Multiplier for falling back to cheaper effects under load.");
               "Multiplier to apply to the lifetime of a model spawned from shooting a hitzone");
               "Multiplies the damage force applied to new ragdolls");
               "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it\'ll show non-solid entities that would do it if they were solid."
               "NPCs over this distance from the player won\'t attempt to speak.");
               "NPCs",false,4);
               "Name of the .txt file used to cycle the maps on multiplayer servers ",
               "Name of the particle system to dynamically spawn");
               "Networking",false,4);
               "Never change volume by more than +/-N units per frame during cross-fade.");
               "NextBot",false,4);
               "Node to start report from when doing a dump spikes");
               "Notify engine that we\'ve finished building a map",0,(undefined *)0x0);
               "Number of console lines to overlay for debugging.");
               "Number of failed votes a user can call per map");
               "Number of fragments for a splitpacket that can be sent per frame");
               "Number of frames to defer for drawing the Saving message.");
               "Number of milliseconds after an unused previous preset is not considered valid for the start of a cross-fade."
               "Number of milliseconds between each exhausted buffer spew.");
               "Number of minutes to ban users who fail rcon authentication",1,0,0,0);
               "Number of packets per second of updates you are requesting from the server");
               "Number of samples to maintain in player perf history",1,0x3f800000,1,0x43000000);
               "Number of seconds before moving from the center.");
               "Number of seconds forced between similar lesson start sounds.");
               "Number of seconds it takes for a lesson to fully fade in/out.");
               "Number of seconds to lerp before reaching final destination");
               "Number of seconds to pulse after changing icon or position");
               "Number of seconds to track failed rcon authentications",1,0x3f800000,0,0);
               "Number of times a user can fail rcon authentication in sv_rcon_minfailuretime before being banned"
               "Occlusion statistics; [-jitter] [-reset]",0x80000,(undefined *)0x0);
               "Only show closed captions if recipient is within this many units of speaking actor (0==disabled)."
               "Opens initial menu screen and loads the background bsp, but only if no other level is being loaded, and we\'re not in developer mode."
               "Optimize for not copying data if didn\'t receive a network update (1), and also for not repredicting if there were no errors (2)."
               "Orient the specified entity to match the player\'s angles. By default, only orients target entity\'s YAW. Use the \'allangles\' option to orient on all axis.\n\tFormat: ent_orient <entity name> <optional: allangles>"
               "Other_Model_Rendering",false,4);
               "Output help for script functions, optionally with a search string",0,
               "Override the far clipping plane. -1 means to use the value in env_fog_controller.");
               "Override the near clipping plane., 7 is defualt, unless running in a megawide aspect ratio."
               "Override view during demo playback");
               "Override. Old default was 3.0");
               "Override. Old default was 60.");
               "Override. Old value was 2.0");
               "Overrides IP for multihomed hosts");
               "Overrides the TacticalTV master root address.");
               "Overrides the map\'s fog settings (-1 populates fog_ vars with map\'s values)",
               "Overrides the max players reported to prospective clients");
               "Overview map translucency.\n");
               "PIP offset vector from the bottom of the screen",(int)thunk_FUN_10195ea0);
               "PIP offset vector from the right of the screen",(int)thunk_FUN_10195ea0);
               "POV manipulator operates on diagonal axes, too.");
               "Paintblob_render",false,4);
               "Parses and stuffs command line + commands to command buffer.",0,(undefined *)0x0);
               "Particle Simulation",false,4);
               "Particle/Effect_Rendering",false,4);
               "Pauses demo playback at server tick");
               "Perform client side prediction of weapon effects.");
               "Perform server side lag compensation of weapon firing events.");
               "Perform the additional \'stuck\' traces on the client side during prediction.");
               "Performs a bind <key> \"increment var <cvar> 0 1 1\"",0,(undefined *)0x0);
               "Phoneme delay to account for sound system latency.");
               "Physics",false,4);
               "Places the selected corner of the currently marked Area on the ground.",0x4004,
               "Play a demo and report performance info.",0,FUN_100a27c0);
               "Play a demo, report performance info, and then exit",0,FUN_100a2810);
               "Play a sound from the game sounds txt file",0x50000000,FUN_1017fed0);
               "Play a sound, reloading from disk in case of changes.",0,(undefined *)0x0);
               "Play all vcds on the clients.");
               "Play footstep sound for players");
               "Play full \'far\' sound at this distance");
               "Play full \'near\' sound at this distance");
               "Play sounds from the game sounds txt file at a given location",0x50000000,
               "Play the given VCD as an instanced scripted scene.",0x4000,FUN_101bc230);
               "PlaybackTempEntity: SendTable_Encode returned false (ent %d), overflow? %i\n");
               "Player index of other player to check for position errors.");
               "Player will aim in the direction they are moving.");
               "Player",false,4);
               "Players can hear all other players, no team restrictions");
               "Players can receive all other players\' text chat, no death restrictions");
               "Plays a video (without interruption) and fires and exit command when it is stopped or finishes: <filename> <exit command>"
               "Plays a video and fires and exit command when it is stopped or finishes: <filename> <exit command>"
               "Plays a video fullscreen without ability to skip (unless dev 1) and fades in: <filename> <time>"
               "Plays a video without ability to skip: <filename> [width height]",0,(undefined *)0x0
               "Plays a video: <filename> [width height]",0,(undefined *)0x0);
               "Possible Values: \'start_at_attachment\', \'follow_attachment\', \'start_at_origin\', \'follow_origin\'"
               "Preferred overview mode",(int)FUN_101ce9f0);
               "Preferred overview view size");
               "Prefetch common sounds from directories specified in scripts/sound_prefetch.txt");
               "Prefix console.log entries with timestamps");
               "Preload Bink movies used by VideoPanel.");
               "Prescale the clock by this amount.");
               "Prevent jiggle bones from pointing directly away from their target in case of numerical instability."
               "Prevents a userid from being auto-kicked",0,(undefined *)0x0);
               "Prevents occlusion testing for entities that take up more than X% of the screen. 0 means use whatever the level said to use."
               "Prevents shrinking the font when it would wrap.");
               "Prevents this occluder from being used if it takes up less than X% of the screen. 0 means use whatever the level said to use."
               "Print # of IPC calls this number of times per second. If set to -1, the # of IPC calls is shown every frame."
               "Print a debug message when the client or server cache is missed.");
               "Print a warning when user commands get dropped due to insufficient usrcmd ticks allocated, number of seconds to throttle, negative disabled"
               "Print accumulated CalcDelta profiling data (only if sv_deltatime is on)");
               "Print console text to low level printout.");
               "Print details about a sound.",2,(undefined *)0x0);
               "Print event firing info in the console");
               "Print status of steam connection sockets.",0,(undefined *)0x0);
               "Print string tables to console.",0,(undefined *)0x0);
               "Print, to the console, an entity\'s current criteria set used to select responses.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Prints CRC for each map lump loaded");
               "Prints a list of currently available operators",0x4000,(undefined *)0x0);
               "Prints all the active channel.",0,(undefined *)0x0);
               "Prints current volume of radius sounds");
               "Prints the content of a channel from its guid. snd_print_channel_by_guid <guid>.",0,
               "Prints the content of a channel from its index. snd_print_channel_by_index <index>."
               "Prints the content of a dsp effect.",0,(undefined *)0x0);
               "Push computed lag compensation amount by this many ticks.");
               "Puts the server into extremely low CPU usage mode when no clients connected",
               "Quits game after demo playback.");
               "RGBA color to draw as the background color for nav areas while editing.");
               "Raise the bottom of the drag select volume.",0x4004,(undefined *)0x0);
               "Raise the selected corner of the currently marked Area.",0x4004,(undefined *)0x0);
               "Raise the top of the drag select volume.",0x4004,(undefined *)0x0);
               "Ranges from 0 --> 1.0;  1.0 is very sensitive. ");
               "Rate at which time of day changes relative to game seconds");
               "Rate at which to attempt internal heap compation");
               "Re-analyze the current Navigation Mesh and save it to disk.",0x4004,(undefined *)0x0
               "Re-orders area and ladder ID\'s so they are continuous.",0x4004,(undefined *)0x0);
               "Re-selects the stored selected set.",0x4004,(undefined *)0x0);
               "Reads the file. To change the index; use hos_recorder_fileindex.",0x4000,
               "Reads the file. To change the index; use physrecord_fileindex.",0x4000,
               "Rebuild dictionary file on every level load\n");
               "Recieved User Authenticated with DS for %llu from server %llu with result %d");
               "Recomputes clock speed (for debugging purposes).",0x4000,(undefined *)0x0);
               "Recomputes lighting values",0x4000,(undefined *)0x0);
               "Reconnects the TacticalTV relay proxy.",0,(undefined *)0x0);
               "Record an entry into the blackbox",0x20000,(undefined *)0x0);
               "Record commands typed at console into .dem files.");
               "Record mic data and decompressed voice data into \'voice_micdata.wav\' and \'voice_decompressed.wav\'"
               "Reference distance for snd_refdb");
               "Relay proxies retry connection after network timeout");
               "Relay voice data: 0=off, 1=on");
               "Reload Weapon Script for Active Weapon (Server Side)",0x4000,(undefined *)0x0);
               "Reload all response system scripts.",0,(undefined *)0x0);
               "Reload soundmixers.txt file.",0,(undefined *)0x0);
               "Reload the most recent saved game (add setpos to jump to current view position on reload)."
               "Reloads hud layout and animation scripts.",0,(undefined *)0x0);
               "Reloads the Logitech G-15 Keyboard configs.",0,(undefined *)0x0);
               "Reloads the panel metaclasses for vgui screens.",0,(undefined *)0x0);
               "Reloads the resource files for the active UI window",0,(undefined *)0x0);
               "Remove address and port for remote host <ip:port>.",0,(undefined *)0x0);
               "Remove all udp addresses being logged to",0,(undefined *)0x0);
               "Remove all user IDs from the ban list.",0,(undefined *)0x0);
               "Remove an IP address from the ban list.",0,(undefined *)0x0);
               "Remove current area from the selected set.",0x4004,(undefined *)0x0);
               "Remove given nav attribute from all areas in the selected set.",0x4000,FUN_10231e90)
               "Remove the decals from the entity under the crosshair.",0x4000,(undefined *)0x0);
               "Removes all entities of the specified type\n\tArguments:   \t{entity_name} / {class_name} "
               "Removes legacy jump areas, replacing them with connections.",0x4004,(undefined *)0x0
               "Removes the given entity(s)\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Render brush models. 0=Off, 1=Normal, 2=Wireframe");
               "Render physics collision models in wireframe",(int)FUN_10067730);
               "Render skeletons in wireframe");
               "Replaces all instances of the first place with the second place.",0x4004,
               "Replaces opaque objects with their grayscaled depth values. r_showz_power scales the output."
               "Report missing wave files for sounds and game_sounds files.",0,(undefined *)0x0);
               "Report which panel has keyboard focus.");
               "Report which panel is under the mouse.");
               "Reports the surface properties at the cursor",0x4000,(undefined *)0x0);
               "Request a VProf data stream from the remote server (requires authentication)",0,
               "Requested max packet size before packets are \'split\'.",1,0x44100000,1,0x44960000);
               "Reset a bunch of game convars to default values",0x4000,(undefined *)0x0);
               "Reset just the peak time in VProf profiler",0,(undefined *)0x0);
               "Reset the stats in VProf profiler",0,(undefined *)0x0);
               "Resets all display and success counts to zero.",0,(undefined *)0x0);
               "Resets all the render targets",0,(undefined *)0x0);
               "Resets the choreo latency after N milliseconds of VO not playing. Default is 500 ms."
               "Resets the playback to the beginning",0x4000,(undefined *)0x0);
               "Restart the game on the same level (add setpos to jump to current view position on restart)."
               "Restarts bug reporter .dll",0,(undefined *)0x0);
               "Restrict to xlsp datacenter by name.");
               "Restricts spectator modes for dead players");
               "Restricts spectator modes for dead players",(int)FUN_10121810);
               "Rotates an entity by a specified # of degrees",0x4000,(undefined *)0x0);
               "Route voice between splitscreen players on same system.");
               "Run engine in single step mode ( set next to 1 to advance a frame )");
               "Run heap check at a specified interval\n");
               "Run heap check at end of every frame\n");
               "Run off some time without rendering/updating sounds\n",0,(undefined *)0x0);
               "Run the host in threaded mode, (0 == off, 1 == if multicore, 2 == force)");
               "Run the sound on a thread (independent of mix)");
               "Same as mat_software_aa_strength, but forced to this value when called by the post vgui AA pass."
               "Samples the lighting environment.\nCreates a cubemap and a file indicating the local lighting in a subdirectory called \'materials/lightprobes\'\n.The lightprobe command requires you specify a base file name.\n"
               "Saves current game to a console storage device.",0x20000,(undefined *)0x0);
               "Saves each speaker\'s voice data into separate .wav files\n");
               "Saves game (for current level only!)",0x20000,(undefined *)0x0);
               "Saves screenshots to the Steam\'s screenshot library");
               "Saves the current Navigation Mesh to disk.",0x4004,(undefined *)0x0);
               "Scale all surface rendering parameters.");
               "Scale down the main viewport (to reduce GPU impact on CPU profiling)",1,0x3acccccd,1
               "Scale of the PIP aspect ratio to our resolution.",(int)thunk_FUN_10195ea0);
               "Scale of the default inner deadzone");
               "Scale of the default outer pegged amount");
               "Scale sensitivity of rumble effects (0 to 1.0)");
               "Scale the viewport back up");
               "Scan every channel to find the corresponding sound.");
               "Scans the maps directory and reports any missing/out-of-date navigation files.",
               "Score for escorting the train, in points per second");
               "Seconds after client connect during which extra frames are buffered to prevent non-delta\'d update"
               "Select a corner of the currently marked Area. Use multiple times to access all four corners."
               "Selects any areas that intersect the given half-space.",0x4004,(undefined *)0x0);
               "Selects nav areas that are overlapping others.",4,(undefined *)0x0);
               "Selects the current Area and all Areas connected to it, recursively. To clear a selection, use this command again."
               "Send TE_FireBullets reliably (slower)");
               "Send server-side hitboxes for specified entity to client (NOTE:  this uses lots of bandwidth, use on listen server only)."
               "Send the advanced demo player UI (demoui2) to background.",0x20000,(undefined *)0x0)
               "Server Animation",false,4);
               "Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )"
               "Server password for entry into multiplayer games",(int)FUN_1015f090);
               "Server tags. Used to provide extra information to clients when they\'re browsing for servers. Separate tags with a comma."
               "Server upper bound on net_maxroutable that a client can use.",1,0x44100000,1,
               "Set CPU frequency monitoring interval in seconds. Zero means disabled.",1,0,1,
               "Set a list of concepts to exclude from rr_debugresponseconcept. Separate multiple concepts with spaces. Call with no arguments to see current list. Call \'rr_debug_responseconcept_exclude !\' to reset."
               "Set a specific scope to start showing vprof tree",0,0,0,0,(int)FUN_10224a20);
               "Set address and port for remote host <ip:port>.",0,(undefined *)0x0);
               "Set cubewidth (coarseness of the mesh)");
               "Set how high AI bumps up ground walkers when checking steps",0,(undefined *)0x0);
               "Set how many seconds the client will extrapolate entities for.");
               "Set named Mixgroup of current mixer to mix vol, mute, solo.",0x4000,(undefined *)0x0
               "Set named Mixgroup of named mix layer to mix vol, mute, solo.",0x4000,
               "Set named mix layer / mix group, trigger amount.",0x4000,(undefined *)0x0);
               "Set named mix layer mix amount.",0x4000,(undefined *)0x0);
               "Set nav attribute for all areas in the selected set.",0x4000,FUN_10231e90);
               "Set the color of a logging channel.",0x20000,(undefined *)0x0);
               "Set the default chat group size");
               "Set the filesystem warning level.",0,(undefined *)0x0);
               "Set the flags on a logging channel.",0x20000,(undefined *)0x0);
               "Set the max dimension for the map.  This determines the far clipping plane");
               "Set the spew level of a logging channel.",0x20000,(undefined *)0x0);
               "Set this to 1 to break in the SPU code for the blob. Otherwise use 0.");
               "Set this to 1 to light models with only ambient lighting (and no static lighting).")
               "Set this to 1 to run the seeding in SIMD. Otherwise use 0.");
               "Set this to revert to HL2\'s method of selecting lights");
               "Set title for TacticalTV spectator UI",(int)FUN_101a3c80);
               "Set to 0 for no HDR, 1 for LDR+bloom on HDR maps, and 2 for full HDR on HDR maps.",
               "Set to 0 to disable save/load of open lesson opportunities in single player.");
               "Set to 0 to not show on-screen help");
               "Set to 1 and restart the map to be warned if the map has no trigger_transition volumes. Set to 2 to see a dump of all entities & associated results during a transition."
               "Set to 1 and the game instructor will run EVERY scripted command to uncover errors."
               "Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions."
               "Set to 1 to advance to next frame ( when singlestep == 1 )");
               "Set to 1 to autosave game on level transition. Does not affect autosave triggers.");
               "Set to 1 to end the WaitingForPlayers period.");
               "Set to 1 to get a hierarchy report whith vprof_dump_spikes");
               "Set to 1 to randomize static lighting for debugging.  Must restart for change to take affect."
               "Set to 1 to save to memory instead of disk (Xbox 360)",(int)FUN_101e7f20);
               "Set to 1 to see debug related to the Question & Answer system used to create conversations between allied NPCs."
               "Set to 1 to skip any models that don\'t go through the model fast path");
               "Set to 1 to start or restart the WaitingForPlayers period.");
               "Set to 1 to stop all models that go through the model fast path from rendering");
               "Set to 1 to stop updating the vgui_drawtree view.",(int)FUN_10220990);
               "Set to 1 to use mouse for look, 0 for keyboard look. Cannot be set while connected to a server."
               "Set to boost ambient term if it is totally swamped by local lights");
               "Set to lock per-frame time elapse.");
               "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode."
               "Set to one to show average and peak times");
               "Set to one to skip the time consuming phases of the analysis.  Useful for data collection and testing."
               "Set to values other than 0 to select a bonus map challenge type.");
               "Sets overview map mode off,small,large: <0|1|2>",0,(undefined *)0x0);
               "Sets overview map zoom: <zoom> [<time>] [rel]",0,(undefined *)0x0);
               "Sets the Place of all selected areas to the current Place.",0x4004,(undefined *)0x0)
               "Sets the Place of the Area under the cursor to the curent Place, and \'flood-fills\' the Place to all adjacent Areas. Flood-filling stops when it hits an Area with the same Place, or a different Place than that of the initial Area."
               "Sets the current Place to the Place of the Area under the cursor.",0x4004,
               "Sets the current data for which plans to draw. (Team Stage Squad Plan)",0,
               "Sets the editor into or out of Place mode. Place mode allows labelling of Area with Place names."
               "Sets the interpolation amount (bounded on low side by server interp ratio settings)."
               "Sets the interpolation amount (final amount is cl_interp_ratio / cl_updaterate).");
               "Sets the lobby ID to connect to on start.");
               "Sets the master volume for a channel. snd_set_master_volume <guid> <mastervolume>.",
               "Sets the max number of physics ticks allowed for client-side physics (ragdolls)");
               "Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount if the difference between the client and server clock is equal to or larger than cl_clock_correction_adjustment_max_offset."
               "Sets the scale of time for client-side physics (ragdolls)");
               "Sets the server to shutdown when all games have completed",0x4000,(undefined *)0x0);
               "Sets the targetname of the given entity(s)\n\tArguments:   \t{new entity name} {entity_name} / {class_name} / no argument picks what player is looking at "
               "Setting this can create more complex surfaces on large hitboxes at the cost of performance."
               "Setting this to 1 will show rectangle backgrounds behind the items word-bubble pointers."
               "Setting to 1 will change some things that are red or green to alternate colors");
               "SetupRenderablesList",false,4);
               "Shadow Depth Texturing",false,4);
               "Shadow_Rendering",false,4);
               "Shifts the selected areas by the specified amount",0x4000,(undefined *)0x0);
               "Short name of campaign (i.e. L4D2C5), used to show correct poster in demo mode.");
               "Show Approach Points in the Navigation Mesh.");
               "Show activities in the (client) animation state display.");
               "Show activities in the (server) animation state display.");
               "Show all EmitSound calls including their symbolic name and the actual wave file they resolved to. (-1 = for nobody, 0 = for everybody, n = for one entity)\n"
               "Show all files currently opened by the engine.",0,(undefined *)0x0);
               "Show areas that are potentially visible from the current nav area");
               "Show async memory stats for just non-streamed music",0,(undefined *)0x0);
               "Show bbox and dismount points for all ladders (must be set before level load.)\n");
               "Show brief async memory stats",0,(undefined *)0x0);
               "Show current \'danger\' levels.");
               "Show current player counts in each area.");
               "Show debug spew for steam based connections, 2 shows all network traffic for steam sockets."
               "Show debugging info about the clock drift. ");
               "Show entity contexts in ent_text display");
               "Show global times in the texture budget panel.");
               "Show hostage AI debug information");
               "Show incoming packet information");
               "Show info about packet splits");
               "Show lag compensated hitboxes for the specified player index whenever a player fires."
               "Show lag compensated hitboxes whenever a player is lag compensated.");
               "Show listening addition/removals");
               "Show messages for large packets only: <size>");
               "Show missing closecaption entries.");
               "Show more field info when spewing prediction errors.");
               "Show multiplayer client/server gesture slot information for the specified player index (-1 for no one)."
               "Show player\'s health in map overview.\n");
               "Show player\'s names in map overview.\n");
               "Show player\'s tracks in map overview.\n");
               "Show prediction errors, 2 for above plus detailed field deltas.");
               "Show scheme file for each panel",(int)FUN_10220990);
               "Show sizes of string tables when building for signon\n");
               "Show temp entity bandwidth usage.");
               "Show texture color at crosshair",0x4000,(undefined *)0x0);
               "Show the (client) animation state for the specified entity (-1 for none).");
               "Show the (server) animation state for the specified entity (-1 for none).");
               "Show the \'Paused\' image when game is paused.");
               "Show the current count of channel types.");
               "Show the idle, walk, run, and/or sprint activities.");
               "Show the name of the person that called the vote? (1: Yes, 0: No)");
               "Show the occlusion proxies",(int)FUN_100b4d00);
               "Show the panel alpha values in the vgui_drawtree view.",(int)FUN_10220990);
               "Show the panel fg color values in the vgui_drawtree view.",(int)FUN_10220990);
               "Show the panel pointer values in the vgui_drawtree view.",(int)FUN_10220990);
               "Show verbose matching output (1 for simple, 2 for rule scoring, 3 for noisy). If set to 4, it will only show response success/failure for npc_selected NPCs."
               "Show when a vcd is playing but normal AI is running.");
               "Show which entities are having their bones setup each frame.");
               "Show which entities are predicting\n");
               "Show/hide the advanced demo player UI (demoui2).",0x20000,(undefined *)0x0);
               "Show/hide the color correction tools UI.",0x4000,(undefined *)0x0);
               "Show/hide the level performance tools UI.",0x4000,(undefined *)0x0);
               "Shows a info panel: <type> <title> <message> [<command number>]",0,(undefined *)0x0)
               "Shows client (red) and server (blue) bullet impact point");
               "Shows color of the tile");
               "Shows list of connected TacticalTV clients.",0,(undefined *)0x0);
               "Shows name for prop looking at",0x4000,(undefined *)0x0);
               "Shows panel animation variables: <panelname | blank for all panels>.",0,
               "Shows rain tracelines for this many seconds (0 disables)");
               "Shows sentence name for sentences which are set not to show captions.");
               "Shows that bones that are setup every think");
               "Shutdown and restart the engine.",0,(undefined *)0x0);
               "Shuts down all open lessons and reloads them from the script file.",0x4000,
               "Simulate packet loss as a percentage (negative means drop 1/n packets)");
               "Size of voice icon over player heads in inches");
               "Skips SetupBones when npc\'s are outside the PVS");
               "Sleep instead of spinning if we\'re meeting the desired framerate.");
               "Smooth client\'s view after prediction error over this many seconds",1,0x3c23d70a,1,
               "Smooth player eye z coordinate when traversing stairs.");
               "Smooth view/eye origin after prediction errors");
               "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats)."
               "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).",
               "Snap to the nav generation grid when creating new nav areas");
               "Snapshots broadcasted per second");
               "Software AA - adjusts the displacement of the taps used by the software AA shader (default 1.0 - a lower value will make the image sharper, higher will make it blurrier)"
               "Software AA - adjusts the sensitivity of the software AA shader\'s edge detection (default 1.0 - a lower value will soften more edges, a higher value will soften fewer)"
               "Software AA debug mode: (0 - off), (1 - show number of \'unlike\' samples: 0->black, 1->red, 2->green, 3->blue), (2 - show anti-alias blend strength), (3 - show averaged \'unlike\' colour)"
               "Software AA quality mode: (0 - 5-tap filter), (1 - 9-tap filter)");
               "Something to do with the default scope HUD overlay size.");
               "Sound merge method (0 == sum and clip, 1 == max, 2 == avg).");
               "Spacing between the next roadblock.");
               "Spawn NPC vehicle in front of the player.",0x4000,(undefined *)0x0);
               "Spawn a ballistic in front of the player.",0x4000,(undefined *)0x0);
               "Spawn a fire extinguisher in front of the player.",0x4000,(undefined *)0x0);
               "Spawn a propane tank in front of the player.",0x4000,(undefined *)0x0);
               "Spawn helicopter in front of the player.",0x4000,(undefined *)0x0);
               "Spawn hostage in front of the player.",0,(undefined *)0x0);
               "Spawn vip hostage in front of the player.",0,(undefined *)0x0);
               "Specifies the exponent for the pan xfade from phone to phone if the \"exp\" pan law is being used."
               "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used."
               "Specifies the position  (in degrees) of the virtual rear left/right headphones.",0,
               "Specifies the position (in degrees) of the virtual front left/right headphones.",0,
               "Specifies the position (in degrees) of the virtual front left/right speakers.",0,
               "Specifies the position (in degrees) of the virtual rear left/right speakers.",0,
               "Specifies to pause all sounds and not just voice");
               "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension."
               "Speed that static lessons move along the Y axis.");
               "Spew CPU timer jitter for the last 128 frames in microseconds (dedicated only)",0,
               "Spew any asynchronous sound that starts with more than N milliseconds delay. By default spew when there is more than 500 ms delay."
               "Spew choreo. Use a sub-string or * to display all events.");
               "Spew data about the list of block entries.");
               "Spew message to console any time async sound loading blocks on file i/o.");
               "Spew stream pool failures.");
               "Spew stream pool purges.");
               "Spew streaming info ( 0=Off, 1=streams, 2=buffers");
               "Spew usage stats about the blob renderer\'s shared CSection pool (more data will be available if blobulator is built in DEBUG)"
               "Spews major changes to the dsp or presets if set to 1. 0 to turn the spew off (default)."
               "Spews text every time a DSP effect is applied if set to 1. 0 to turn the spew off (default)."
               "Split screen users mimic base player\'s CUserCmds");
               "Spraypoint logo decal.");
               "Start continuously adding to the selected set.",0x4004,(undefined *)0x0);
               "Start continuously removing from the selected set.",0x4004,(undefined *)0x0);
               "Start dragging a selection area.",0x4004,(undefined *)0x0);
               "Start or stop continuously adding to the selected set.",0x4004,(undefined *)0x0);
               "Start or stop continuously removing from the selected set.",0x4004,(undefined *)0x0)
               "Start playing back a recorded .vprof file.",0,(undefined *)0x0);
               "Start position at the crosshair instead of the top middle of the screen.");
               "Start recording vprof data for playback later.",0,(undefined *)0x0);
               "Starts a bug report with data from the currently connected rcon machine",0,
               "Starts gathering of info. Arguments: filename to write results into",0x4000,
               "Static_Prop_Rendering",false,4);
               "Steam Overlay Position",1,0,1,0x40400000,(int)FUN_1008b0e0);
               "SteamController pitch factor.");
               "SteamController yaw factor.");
               "Stop an existing remote VProf data request",0,(undefined *)0x0);
               "Stop continuously adding to the selected set.",0x4004,(undefined *)0x0);
               "Stop continuously removing from the selected set.",0x4004,(undefined *)0x0);
               "Stop dragging a selection area.",0x4004,(undefined *)0x0);
               "Stop playing back a recorded .vprof file.",0,(undefined *)0x0);
               "Stops TacticalTV demo recording.",0,(undefined *)0x0);
               "Stops all particle systems on the selected entities.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at "
               "Stops all soundscape processing and fades current looping sounds",0x4000,
               "Stops all videos playing to the screen",0,(undefined *)0x0);
               "Store current settings to config.cfg (or specified .cfg file) with first param as splitscreen index."
               "Store current settings to config.cfg (or specified .cfg file).",0,(undefined *)0x0);
               "Stores the current selected set for later retrieval.",0x4004,(undefined *)0x0);
               "Strips all Hiding Spots, Approach Points, and Encounter Spots from the current Area."
               "Support casting RTT shadows onto other renderables");
               "Suppress a material from drawing",0x4002,(undefined *)0x0);
               "Suppress listing of disabled issues in the vote setup screen.");
               "Switch from VR mode to normal mode",0,(undefined *)0x0);
               "Switch to thirdperson-overview camera.",0x4002,(undefined *)0x0);
               "Switch to thirdperson-shoulder camera.",0,(undefined *)0x0);
               "Switches the game to use a larger software cursor instead of the normal OS cursor",
               "Switches the material system to VR mode (after restart)",0,(undefined *)0x0);
               "Synchronize real render time to host_framerate if possible.");
               "TacticalTV connection timeout in seconds.");
               "TacticalTV password for all clients");
               "TacticalTV password for relay proxies");
               "Take a jpeg screenshot:  jpeg <filename> <quality 1-100>.",0x80000,(undefined *)0x0)
               "Teleport other splitscreen player to my location.",0x4002,(undefined *)0x0);
               "Teleport the specified entity to where the player is looking.\n\tFormat: ent_teleport <entity name>"
               "Temporary for testing what will happen when a taunt item is in inventory.");
               "Test a clientside dispatch effect.\n\tUsage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>\n\tDefaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>\n"
               "Test a hud element animation.\n\tArguments: <anim name>\n",0x4000,(undefined *)0x0);
               "Test a punch-style screen shake.\n",0x4000,(undefined *)0x0);
               "Test command that drops an entity blocker out in front of the player.",0x4000,
               "Test networking visibility distance");
               "Test the health bonus msg",0,(undefined *)0x0);
               "Test the kill streak msg",0,(undefined *)0x0);
               "Test the selected set for being on stairs",0x4000,(undefined *)0x0);
               "Test vgui panel positioning with title safe indentation");
               "Test_ProxyToggle_EnsureValue",0x4000,(undefined *)0x0);
               "Tests spatial partition for entities queries.",0x4000,(undefined *)0x0);
               "Text that team leader from each team must speak for the match to begin");
               "Text with which to filter OUT of console spew. Set con_filter_enable 1 or 2 to activate."
               "Text with which to filter console spew. Set con_filter_enable 1 or 2 to activate.");
               "The ID of the steam group that this server belongs to. You can find your group\'s ID on the admin profile page in the steam community."
               "The amount of time to wait until updating the FB");
               "The blob renderer will allocate/free CSections in blocks of this size (smaller values may save some memory but will definitely increase CPU cost)"
               "The blob renderer will free this many CSections from the shared pool each frame (larger values save memory but increase CPU cost)"
               "The default color for the background.");
               "The default color for the border.");
               "The ground unit normal\'s Z component must be greater than this for nav areas to be generated."
               "The ground unit normal\'s Z component must be this close to the nav area\'s Z component to be generated."
               "The latency graph represents this many milliseconds.");
               "The maximum number of CSections to be recycled in the shared pool (smaller values save memory but increase CPU cost)"
               "The maximum number of areas to draw in edit mode");
               "The minimum amount of local contrast required to apply algorithm: (0.063 - overkill, slower), (0.125 - high quality), (0.166 - default), (0.250 - low quality), (0.333 - too little, faster)"
               "The minimum ratio of players needed to vote on an issue to resolve it.",1,0x3dcccccd
               "The number of pixels wide an eyeball has to be before rendering an eyeglint.  Is a floating point value."
               "The offset of the nav drag volume bottom from center");
               "The offset of the nav drag volume top from center");
               "The player should lose the power after having it for player_paint_effects_duration."
               "The region of the world to report this server in.");
               "The server tries to keep each player\'s m_nTickBase withing this many msecs of the server absolute tickcount"
               "The stick range where autoaim dampening is applied. 0 = off");
               "The time before the ammo box is opened. Indicated in a ratio of the round time ");
               "This can be used to force the value of cl_predict for connected clients (only while they are connected).\n   -1 = let clients set cl_predict to anything\n    0 = force cl_predict to 0\n    1 = force cl_predict to 1"
               "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected). If sv_client_min_interp_ratio is -1, then this cvar has no effect."
               "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected).\n              -1 = let clients set cl_interp_ratio to anything\n any other value = set minimum value for cl_interp_ratio"
               "This map should use procedural Sky in high spec.");
               "This sets the minimum value for cl_cmdrate. 0 == unlimited.");
               "This value is added to Yaw when returning the vehicle aim angles to Source.");
               "Threaded BuildWorldList and BuildRenderables list");
               "Threshold above which ambient cube will not boost (i.e. it\'s already sufficiently bright"
               "Time above gracetime for which the AFK player will actually be kicked");
               "Time allowed for players to be AFK before the server will kick them.");
               "Time between spawning flames for first fire");
               "Time between use glow target updates");
               "Time delay for elevator movement start.");
               "Time duration of box filter to pass over phonemes.");
               "Time during which a new pose activity layer is shown in green in +posedebug UI");
               "Time enemy stays visible on friendly radars after being spotted, and spotter looks away"
               "Time in seconds before lobby reservation expires.",1,0x40a00000,1,0x43340000);
               "Time in seconds given for a lobby reservation.",1,0x40400000,1,0x41f00000);
               "Time interval (s) at which thread and wait times are sampled and display is updated"
               "Time interval (s) for which main/render/gpu bottleneck times are displayed");
               "Time spend frozen in observer freeze cam.");
               "Time taken for an ally to regenerate a point of health.");
               "Time taken to zoom in to frame a target in observer freeze cam.",1,0x3c23d70a,0,0);
               "Time to crossfade sound effects between soundscapes");
               "Time to keep a no longer active pose activity layer in red until removing it from +posedebug UI"
               "Time to wait between particle system restarts when the player gets painted multiple times in rapid succession."
               "Time, in seconds, between clientside prop respawns.");
               "Timeout in milliseconds used to recycle the fragments. Default is 64 in release, 1000 in debug."
               "Times the cost of each active object",0,(undefined *)0x0);
               "To connect two Areas, mark the first Area, highlight the second Area, then invoke the connect command. Note that this creates a ONE-WAY connection from the first to the second Area. To make a two-way connection, also connect the second area to the first."
               "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas."
               "To merge two Areas into one, mark the first Area, highlight the second by pointing your cursor at it, and invoke the merge command."
               "To splice, mark an area, highlight a second area, then invoke the splice command to create a new, connected area between them."
               "To split an Area into two, align the split line using your cursor and invoke the split command."
               "Toggle VProf cache miss checking",0,(undefined *)0x0);
               "Toggle deferred shadow rendering");
               "Toggle deferred shadow rendering",(int)FUN_100e4650);
               "Toggle low-res deferred shadow rendering",(int)FUN_100e4610);
               "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1."
               "Toggle the 3-way animation blending code.");
               "Toggle the editor into and out of Place mode. Place mode allows labelling of Area with Place names."
               "Toggle voice transmit and receive.",(int)FUN_10082d20);
               "Toggle. Player becomes hidden to NPCs.",0x4000,(undefined *)0x0);
               "Toggle. Player becomes invulnerable.",0x4000,(undefined *)0x0);
               "Toggle. Player becomes non-solid and flies.  Optional argument of 0 or 1 to force enable/disable"
               "Toggles Place Painting mode. When Place Painting, pointing at an Area will \'paint\' it with the current Place."
               "Toggles \'picker\' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.\n\tArguments:\tfull - enables all debug information"
               "Toggles all areas into/out of the selected set.",0x4004,(undefined *)0x0);
               "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.\n\tArguments:   \t{entity_name} / {class_name} / no argument picks what player is looking at"
               "Toggles pausing of input/output message processing for entities.  When turned on processing of all message will stop.  Any messages displayed with \'ent_messages\' will stop fading and be displayed indefinitely. To step through the messages one by one use \'ent_step\'."
               "Toggles rendering of displacment maps");
               "Toggles the \'area is not suitable for hiding spots\' flag used by the AI system.",
               "Toggles the \'area is transient and may become blocked\' flag used by the AI system."
               "Toggles the \'avoid this area when possible\' flag used by the AI system.",0x4004,
               "Toggles the \'dogs cannot use this area\' flag used by the AI system.",0x4004,
               "Toggles the \'dont avoid obstacles\' flag used by the AI system.",0x4004,
               "Toggles the \'dont jump in this area\' flag used by the AI system.",0x4004,
               "Toggles the \'hostages cannot use this area\' flag used by the AI system.",0x4004,
               "Toggles the \'must crouch in this area\' flag used by the AI system.",0x4004,
               "Toggles the \'must stop when entering this area\' flag used by the AI system.",
               "Toggles the \'stand while hiding\' flag used by the AI system.",0x4004,
               "Toggles the \'traverse this area by jumping\' flag used by the AI system.",0x4004,
               "Toggles the \'traverse this area by running\' flag used by the AI system.",0x4004,
               "Toggles the \'traverse this area by walking\' flag used by the AI system.",0x4004,
               "Tools",false,4);
               "Topdown games set this to handle distance and offscreen location differently.");
               "Total Hitzone Areas per stage",1,0x41200000,1,0x43200000);
               "Total time allowed for the client to resend the \'connect\' attempt",1,0x3fc00000,1,
               "Touch model data during level startup");
               "Transmit all entities (not only director view)");
               "Transmits Game Events to <address:port>",2,(undefined *)0x0);
               "Tries to accept/trigger the first notification",0,(undefined *)0x0);
               "Tries to decline/remove the first notification",0,(undefined *)0x0);
               "Trims the algorithm from processing darks. Does not affect PS3 due to being ALU bound. (0.04 - slower and less aliasing in darks, 0.05 - default, 0.06 - faster but more aliasing in darks). Special note: when using FXAA_GREEN_AS_LUMA likely want to set this to zero"
               "Trims the algorithm from processing darks: (0.0312 - visible limit, slower), (0.0625 - high quality, faster), (0.0833 - upper limit, the start of fisible unfiltered edges). Special note: when using FXAA_GREEN_AS_LUMA, likely want to set this to zero"
               "Trucks with loads in their trunk to spawn");
               "True if the joystick is enabled, false otherwise.",1,0,1,0x3f800000,
               "Turn a budget group on/off",0,(undefined *)0x0);
               "Turn off VProf cache miss checking",0,(undefined *)0x0);
               "Turn on VProf cache miss checking",0,(undefined *)0x0);
               "Turn on rumble debugging spew");
               "Turn on/off \'Legacy\' mapping for control sticks.");
               "Turn on/off freezecam on client");
               "Turn on/off freezecam on server");
               "Turns Denormals-Are-Zeroes and Flush-to-Zero on or off",(int)FUN_101b6460);
               "Turns off interactive fish behavior. Fish become immobile and unresponsive.");
               "Turns on debug output with detailed spew about voice data processing.");
               "Turns on the absbox for all active physics objects",0,(undefined *)0x0);
               "Turns optimization on for DSP effects if set to 1 (default). 0 to turn the optimization off."
               "Turns optimization on for mixing if set to 1 (default). 0 to turn the optimization off."
               "Turns sound char on for mixing if set to 1 (default). 0 to turn the sound char off and use default behavior (spatial instead of doppler, directional, etc...)."
               "Two player split screen mode (0 - recommended settings base on the width, 1 - horizontal, 2 - vertical (only allowed in widescreen)"
               "Two player split screen uses vertical split (do not set this directly, use ss_splitmode instead)."
               "Unable to get VRModeAdapter from OpenVR. VR mode will not be enabled. Try restarting and then enabling VR again.\n"
               "Unlocked prop_door \'%s\' at (%.0f %.0f %.0f) has no hardware. All openable doors must have hardware!\n"
               "Unlocking prop_door \'%s\' at (%.0f %.0f %.0f) with no hardware. All openable doors must have hardware!\n"
               "Update the nav mesh STAIRS attribute",0,(undefined *)0x0);
               "Updates entities in the map that can safely be updated (don\'t have parents or are affected by constraints). Also excludes entities mentioned in any hammer_updateignorelist objects in this map."
               "Updates leafvis debug render every frame (expensive)");
               "Updates the blocked/unblocked status for every nav area.",4,(undefined *)0x0);
               "Updates the entity\'s position/angles when in edit mode",0,(undefined *)0x0);
               "Upload attachments asynchronously");
               "Uploads most recent benchmark stats to the Valve servers.",0x4000,(undefined *)0x0);
               "Usage r_cleardecals <permanent>.",0x40000000,(undefined *)0x0);
               "Usage:\n   ent_fire <target> [action] [value] [delay]\n",0x4000,
               "Usage:\n cl_csm_server_status\n",0,(undefined *)0x0);
               "Use (outside-of-Steam) code to communicate with master servers.");
               "Use a high priority thread to send queued packets out instead of sending them each frame."
               "Use a particular weapon\t\nArguments: <weapon_name>",0,(undefined *)0x0);
               "Use a precomputed static VB for CSM rendering");
               "Use a prediction-friendly physics interface on the client");
               "Use compression on game packets.");
               "Use dictionaries for string table networking\n");
               "Use keyboard sample time smoothing.");
               "Use legacy view interpolation rollback amount in demo playback.");
               "Use network sockets layer even for listen server local player\'s packets (multiplayer only)."
               "Use new dissolve effect");
               "Use shadow fast path for CSM rendering - minimize number of draw call");
               "Use steam connections on listen server as a fallback, 2 forces use of steam connections instead of raw UDP."
               "Use the game\'s socket to communicate to the master server. If this is 0, then it will create a socket on -steamport + 1 to communicate to the master server on."
               "Used by the -makedevshots system to take a screenshot. For taking your own screenshots, use the \'screenshot\' command instead."
               "Used by the devshots system to go to the next map in the devshots maplist.",0,
               "Used for stress-testing particle systems. Randomly denies creation of particles.");
               "User to tag in the screenshot");
               "Username to use for bugreporter");
               "Vehicle diagnostics for the vehicle we\'re pointing at",0x4000,(undefined *)0x0);
               "Verify that edict changeinfos are being calculated properly (used to debug local network backdoor mode)."
               "Vertical view fixup when eyes are near water plane.");
               "View entities in the voxel-tree at the player position.",0x4000,(undefined *)0x0);
               "View entities in the voxel-tree inside box <Vector(min), Vector(max)>.",0x4000,
               "View entities in the voxel-tree inside sphere <Vector(center), float(radius)>.",
               "View entities in the voxel-tree.",0x4000,(undefined *)0x0);
               "Visualize panning crossfade curves");
               "Visualize sound gain fall off");
               "Visualizes +use logic. Green cross=trace success, Red cross=trace too far, Green box=radius success"
               "Visualizes all entity input/output activity.");
               "Voice chat uses a vox-style always on",0,0,1,0x3f800000,(int)FUN_102f1050);
               "Voice icons are this many inches over player eye positions");
               "WaitingForPlayers time length in seconds");
               "Warps the player to the marked area.",0x4004,(undefined *)0x0);
               "Watch all fields encoded with this table.");
               "Watch this entities data table encoding.");
               "Weather effects wind direction angle");
               "Weather effects wind speed scalar");
               "When -gamestatsfileoutputonly is specified, file will be emitted here instead of to modpath\n"
               "When \'ent_pause\' is set this will step through one waiting input / output message at a time."
               "When are further than this, they are invisible");
               "When cars are further than this, the light starts to fade out");
               "When computing respondents for a \'THEN ANY\' rule, all rule-matching scores within this much of the best score will be considered."
               "When enabled server will populate an additional random seed independent of the client"
               "When enabled, the blob renderer uses a shared pool to recycle CSection objects, which drastically reduces memory usage"
               "When firing, don\'t tap fire, hold it down.");
               "When in WC edit mode and editing air nodes,  moves position of air node crosshair and placement location further away from player"
               "When in WC edit mode and editing air nodes,  moves position of air node crosshair and placement location nearer to from player"
               "When in WC edit mode restores the last deleted node",0x4000,(undefined *)0x0);
               "When in WC edit mode, creates a node where the player is looking if a node is allowed at that location for the currently selected hull size (see ai_next_hull)"
               "When in WC edit mode, destroys the node that the player is nearest to looking at.  (The node will be highlighted by a red box)."
               "When in WC edit mode, toggles laying down or air nodes instead of ground nodes",
               "When in thirdperson and cam_collision is set to 1, an attempt is made to keep the camera from passing though walls."
               "When in thirdperson, print viewangles/idealangles/cameraoffsets to the console.");
               "When moving, show the end location.");
               "When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren\'t in range, and white lines show soundscapes that are in range, but not the active soundscape."
               "When placing markers this determines if we place at the feet or eye level.");
               "When playing back a scene, print timing and event info to console.");
               "When playing back, force use of combined .wav files even in english.");
               "When playing back, show the directions of look events.");
               "When searching for a dedicated server from lobby, restrict search to only dedicated servers having the same sv_search_key."
               "When true, print amount and type of all damage received by player to console.");
               "When using smoothing, this is the min screenspace width it lets a rope shrink to");
               "When zoomed, how big is the scope on your HUD?");
               "Whether dedicated server is pausable when running -dev and playing solo against bots"
               "Whether listen server is pausable when running -dev and playing solo against bots");
               "Whether notifications should show up in-game.");
               "Whether the server enforces file consistency for critical files");
               "Whether to draw outlines of all tiles.");
               "Whether to invert the X axis of the joystick for looking.");
               "Whether to invert the Y axis of the joystick for looking.");
               "Whether to rotate for transparency");
               "Whether to use most terse output");
               "Whether we should force preloading.");
               "Which stick controls movement (0 is left stick)",(int)FUN_1012dbb0);
               "While playing back a .vprof file, step to the next tick.",0,(undefined *)0x0);
               "While playing back a .vprof file, step to the previous tick.",0,(undefined *)0x0);
               "While the fps is below the threshold we will dump a screen shot this often in seconds (i.e. 10 = screen shot every 10 seconds when under the given fps.)"
               "Width of glow outline effect in screen space.");
               "Will alternate between playing/not playing client phys objects state",0x4000,
               "Will alternate between playing/not playing state",0x4000,(undefined *)0x0);
               "Will alternate between recording/not recording client phys objects state",0x4000,
               "Will alternate between recording/not recording state",0x4000,(undefined *)0x0);
               "Will transmit all entities to client, regardless of PVS conditions (will still skip based on transmit flags, however)."
               "Window over which to average queries per second averages.");
               "Windows mouse acceleration (0 to disable, 1 to enable [Windows 2000: enable initial threshold], 2 to enable secondary threshold [Windows 2000 only])."
               "Windows mouse acceleration initial threshold (2x movement).",1,0,0,0);
               "Windows mouse acceleration secondary threshold (4x movement).",1,0,0,0);
               "Wingman warrior hack related to turn axes.");
               "World Render Setup",false,4);
               "World Rendering",false,4);
               "Write out the datatable instrumentation files (you must run with -dti for this to work)."
               "Write periodic memstats dumps every n seconds.");
               "Write the names of all of the vprof groups to the console.",0,(undefined *)0x0);
               "Writes a list of permanently-banned user IDs to banned_user.cfg.",0,(undefined *)0x0
               "Writes config.cfg to cloud, from local file.",0,(undefined *)0x0);
               "Writes the selected set to disk for merging into another mesh via nav_merge_mesh.",
               "Yo , sucketh my cocketh");
               "Z tolerance for adding new nav areas.");
               "[RULES] planning (SQUAD) time is: %i ends at: %f (curtime: %f) (which is: %f)\n");
               "[offline mode] planning phase time (squad is this/2-2)");
               "\"%s<%i><%s><%s>\" triggered \"Negative_Statistic\" (stat \"%s\") (xp \"%d\") \n");
               "\"%s<%i><%s><%s>\" triggered \"Positive_Statistic\" (stat \"%s\") (xp \"%d\") (gp \"%d\") (rp \"%d\")\n"
               "\'Look\' stick response mode: 0=Default, 1=Acceleration Promotion");
               "\'Movement\' stick response mode: 0=Linear, 1=quadratic, 2=cubic, 3=quadratic extreme, 4=power function(i.e., pow(x,1/sensitivity)), 5=two-stage"
               "\'then ANY\' or \'then ALL\' response followups will be dispatched only to characters within this distance."
               "\nPaged Pool\nprev PP PAGES: used: %d, free %d\nfinal PP PAGES: used: %d, free %d\nmemallocfail? = %u\nActive: %s\n"
               "\n[-1] LOBBY(Online)\n[0] MISSION\n[1] TDM\n[2] FFA\n[3] INTEL",1,-0x40800000,1,
               "add a new budget group dynamically for debugging",0,(undefined *)0x0);
               "amount of time players can chat after the game is over",1,0x3f800000,1,0x42f00000);
               "budget bargraph range in milliseconds",(int)FUN_1021e810);
               "budget history range in milliseconds",(int)FUN_1021e810);
               "cache_print [section]\nPrint out contents of cache memory.",0,(undefined *)0x0);
               "cache_print_lru [section]\nPrint out contents of cache memory.",0,(undefined *)0x0);
               "cache_print_summary [section]\nPrint out a summary contents of cache memory.",0,
               "checks _master.cache based on file sizes and rebuilds any change/new entries\n",0,
               "cl_cmdrate is moved to within sv_client_cmdrate_difference units of cl_updaterate before it is clamped between sv_mincmdrate and sv_maxcmdrate."
               "commandline hook to run a nav_analyze and then quit.",0x4014,(undefined *)0x0);
               "d:\\projects\\ti\\release\\ti_rel\\src\\tier0\\memprocessheap.cpp(323):***** OUT OF MEMORY! attempted allocation size: %I64d ****\n"
               "debug - disable trace query cache");
               "debug spew for Combiner Info",0,(undefined *)0x0);
               "debug spew for dynamic model loading",0x20010,(undefined *)0x0);
               "disconnect\nwait\nwait\nmaxplayers %i\nsv_password \"%s\"\nhostname \"%s\"\nprogress_enable\nmap %s\n"
               "dump occlusion tests - useful on server only",0x4000,(undefined *)0x0);
               "dump origin and angles to the console",0,(undefined *)0x0);
               "dump particle profiling info to particle_profile.csv",0,(undefined *)0x0);
               "dump position and angles to the console",0,(undefined *)0x0);
               "dump the text currently in the console to condumpXX.log",0,(undefined *)0x0);
               "enable rendering of local (and spectator) tracers");
               "enable threading of detail prop drawing");
               "enable vtune for a particular vprof group (\"disable\" to disable)",0,
               "enable/disable averages in the budget panel");
               "enable/disable peaks in the budget panel");
               "exception thrown building console/convar history!!!\n",*(uint *)(unaff_EBP + -0x1c),
               "extra details to create");
               "fade a player\'s screen to black when he dies");
               "fade out an npc or npc car, use bot_target to find it.",0x10000000,(undefined *)0x0)
               "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds."
               "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds."
               "foliage dB loss per 1200 units");
               "force with which to avoid players ( in units, percentage of the width of the detail sprite )"
               "frag limit in offline mode");
               "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD)."
               "hardware camera\n software processing data\n track user movement\n\n Copyright EyeControl Technologies"
               "height in pixels of the budget panel",(int)FUN_1021e810);
               "height in pixels of the budget panel",(int)FUN_10222b10);
               "how fast to recover position after avoiding players");
               "how translucent the budget panel is");
               "increase sensitivity in 0.1 increments, loops around between 1.0 and 6.0.",0x20000,
               "intensity of emissive glows");
               "killing too many civillians causes your team to lose");
               "max client side ragdolls",1,0x41a00000,1,0x43960000);
               "minimum time between player flinches, lower values eat more network.");
               "monitor gamma (typically 2.2 for CRT and 1.7 for LCD)",1,0x3fcccccd,1,0x40266666);
               "number between 0 and 1",(int)FUN_1021e810);
               "number of frames to look at when figuring out average frametimes");
               "number of frames to look at when figuring out peak frametimes");
               "number of milliseconds that a node must exceed to turn red in the vprof panel");
               "number of pixels from the left side of the game screen to draw the budget panel",
               "number of pixels from the top side of the game screen to draw the budget panel",
               "number of random directions to fire rays when computing ambient lighting",1,
               "number of samples to draw in the budget history window.  The lower the better as far as rendering overhead of the budget panel"
               "number of world lights to use per vertex");
               "open the material under the crosshair in explorer and highlight the vmt file",0x4000
               "open the material under the crosshair in the editor defined by mat_crosshair_edit_editor"
               "picmip: %i\nforceaniso: %i\nantialias: %i (%i)\nvsync: %i\nrootlod: %i\nshadowrendertotexture: %i\nr_flashlightdepthtexture %i\nwaterforceexpensive: %i\nwaterforcereflectentities: %i\nmat_motion_blur_enabled: %i\nmat_queue_mode %i\nmat_triplebuffered: %i\ncsm_quality_level: %i"
               "precise head tracking\n put your head into the game\n now go look around\n\n Copyright EyeControl Technologies"
               "print out list of attributes the issuer is affected by",0x4002,(undefined *)0x0);
               "print out list of attributes the issuer is affected by",0x80000,(undefined *)0x0);
               "print soundscapes",0,(undefined *)0x0);
               "print soundscapes",0x4000,(undefined *)0x0);
               "print the material under the crosshair",0x4000,(undefined *)0x0);
               "quaternion[] differs (1st diff) (net %f %f %f %f - pred %f %f %f %f) delta(%f %f %f %f)\n"
               "radius around detail sprite to avoid players");
               "radius used to raise/lower corners in nearby areas when raising/lowering corners.");
               "rebuild audio cache for current language\n",0,(undefined *)0x0);
               "reload the material under the crosshair",0x4000,(undefined *)0x0);
               "remote console password.",(int)FUN_101517d0);
               "reports client-side sound patch count",0,(undefined *)0x0);
               "saves current video configuration to the registry",0,(undefined *)0x0);
               "sets the width, height, windowed state of the material system",0,(undefined *)0x0);
               "sets tree sway wind direction and strength",0,(undefined *)0x0);
               "sets userinfo string for split screen player in slot 1",0,(undefined *)0x0);
               "sets userinfo string for split screen player in slot 2",0,(undefined *)0x0);
               "sets userinfo string for split screen player in slot 3",0,(undefined *)0x0);
               "sets userinfo string for split screen player in slot 4",0,(undefined *)0x0);
               "show the current video control panel config for the material system",0,
               "show/hide vgui panel by name.",0,(undefined *)0x0);
               "specfies what version of soundemitter system to use\n");
               "spits out next locations of the client phys objects.",0x4000,(undefined *)0x0);
               "spits out next locations of the hostages.",0x4000,(undefined *)0x0);
               "spits out previous locations of the client phys objects.",0x4000,(undefined *)0x0);
               "spits out previous locations of the hostages.",0x4000,(undefined *)0x0);
               "switch to en/disable the prevention of splitscreen audio file duplicates\n");
               "take remote control command of a vehicle",0x4000,(undefined *)0x0);
               "ti_showplayerstatetransitions <ent index or -1 for all>. Show player state transitions."
               "time after stopping attack to return to idle");
               "time in milliseconds beyond which a model overlay is fully red in r_drawmodelstatsoverlay 2"
               "time in milliseconds that a model must take to render before showing an overlay in r_drawmodelstatsoverlay 2"
               "toggleThreadedBuildRWList",2,(undefined *)0x0);
               "toggles whether the server allows spectator mode or not");
               "turn history graph off and on. . good to turn off on low end");
               "updates the video config convars",0,(undefined *)0x0);
               "view angles");
               "vprof_adddebuggroup1",false,4);
               "whether to use new detail sprite system");
               "width in pixels of the budget panel",(int)FUN_1021e810);
               "width in pixels of the budget panel",(int)FUN_10222b10);
               (((char *)this_00[0x17] == "point_viewcontrol_survivor" ||
               ((piVar2 = (int *)(*(code *)param_1)("SceneFileCache002",0), DAT_106466dc = piVar2,
               ((piVar2 = (int *)(*(code *)param_1)("VEngineRandom001",0), DAT_1064670c = piVar2,
               (**(code **)(*this + 0x104))(&local_8,"HybridButton.FocusColorAlt",piVar2);
               (**(code **)(*this + 0x104))(&local_8,"HybridButton.ListButtonActiveColorAlt",piVar2)
               (**(code **)(*this + 0x104))(&local_8,"HybridButton.MouseOverCursorColorAlt",piVar2);
               (**(code **)(*this + 0x104))(&local_8,"HybridButton.TextColorAlt",piVar2);
               (bVar3 = FUN_100a6de0(param_1,"func_pushable"), !bVar3)))))))) &&
               (byte *)"%s, bool showScrollBar, bool allowMouseWheel, bool overrideChildPanelWidth")
               (byte *)"%s, string image, string border, string fillcolor, bool scaleImage");
               (byte *)"%s: table %s, entries %i, bytes %i userdatasize %i userdatabits %i");
               (byte *)"EntityYaw: %.2f, AimYaw: %.2f, AimPitch: %.2f, MoveX: %.2f, MoveY: %.2f");
               (byte *)"Receive game stats harvesting protocol upload permissible.");
               (byte *)"Receiving game stats upload success/fail message.");
               (byte *)"Socket Recieved %d bytes of data to add to it\'s existing %d bytes");
               (byte *)"Started New Analytics session for user %llu with session %s\n");
               (byte *)"ticks: %d, host_remainder: %f, host_frametime: %f, minimum interval: %f\n");
               (byte *)"vec[] differs (1st diff) (net %f %f %f - pred %f %f %f) delta(%f %f %f)\n");
               (double)(float)local_1c,(double)(float)local_18,"ideal angles");
               (double)*(float *)(iVar1 + 0x70),"camera offset");
               (iVar4 = FUN_1042dc00(*(char **)((int)this + 8),"swheel",6), iVar4 == 0)) {
               (int)FUN_102069d0,"Generate a minimal hiearchical report to the console.",0,
               (local_18 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("vote_options",0,0),
               (piVar2 = (int *)(*(code *)param_1)("FileLoggingListener001",0), local_8 = param_3,
               (piVar2 = (int *)(*(code *)param_1)("VDataCache003",0), _DAT_10646004 = piVar2,
               (uVar2 = FUN_10265f50(param_1,(byte *)"BlendFactorUpdate"), uVar2 == 0)) {
               (uint)"< unknown >");
               ,"Controllables(Client)",false,4);
               ,"Controllables(Server)",false,4);
               ,"Dump all items in +showbudget_texture_global in a text form",0,0,0,0);
               ,"Fire",false,4);
               ,"Hostages",false,4);
               ,"Physics",false,4);
               ,"Shadow Depth Texturing",false,4);
               ,0,"CLIENT Vehicle Input",false,4);
               ,0,"Controllables(Client)",false,4);
               ,0,"Controllables(Server)",false,4);
               ,0,"Networking",false,4);
               ,0,"Player",false,4);
               0,"CLIENT Vehicle Logic",false,4);
               0,"Controllables(Client)",false,4);
               0,"Controllables(Server)",false,4);
               0,"NextBot",false,4);
               0,"SERVER Vehicle Input",false,4);
               0,"Shadow Depth Texturing",false,4);
               0x80,"number between 0 and 1",(int)FUN_10222b10);
               0xff,"defer %u kB",local_a8 + 0xffU >> 8);
              "CNetworkStringTableContainer::WriteBaselines wrote %d bytes for table %s [space remaining %d bytes]\n"
              "Oh Snap! Your Tactical plan of Intervention has encountered a fatal error and is closing. The Counter-Terrorism will have to wait until next time, Sorry!\n\nThanks for your understanding!\n-FK Development Team"
              "Pool %3i: (size: %5u) blocks: allocated:%16s (%2d%%) free:%16s (%2d%%) committed:%16s (committed size:%16s)\n"
              "Rejecting connection request from %s, client\'s cross-play platform is unrecognized.\n"
              "UpdateSystemLevel: ConVar %s controlled by gpu_level/cpu_level must not be marked as FCVAR_ARCHIVE or FCVAR_CHEAT!\n"
              "[ func+child      func ]  [ func+child   func ]  [ func+child   func ]    Count   Peak\n"
              "[Blobulator] Switching to one pass as fragment vertex buffer is already half full.\n"
              "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_dma.cpp");
              ("HKEY_CURRENT_USER\\Software\\Valve\\Steam\\Language",local_44,0x3f);
              ("InPass",*(undefined4 *)((int)param_1 + 4),piVar6,0,uStack20,local_10,0xffffffff,0,0)
              ("Maximize","#SysMenu_Maximize","Maximize",param_1,0);
              ("Minimize","#SysMenu_Minimize","Minimize",param_1,0);
              ("TargetEntity",this,this,*(undefined4 *)((int)this + 0x3b4),
              ("d:\\projects\\ti\\release\\ti_rel\\src\\engine\\cl_main.cpp",0x279,0);
              ("d:\\projects\\ti\\release\\ti_rel\\src\\game\\client\\cdll_client_int.cpp",0xcc7,0);
              ("d:\\projects\\ti\\release\\ti_rel\\src\\game\\client\\cdll_client_int.cpp",uVar4,0);
              ("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h",0x119,
              ("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h",0x170,
              ("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h",0xb4,
              (((char *)param_1[0x17] != "func_pushable" &&
              (((piVar2 = (int *)(*(code *)param_1)("SpatialPartition001",0), DAT_106466bc = piVar2,
              (((piVar2 = (int *)(*(code *)param_1)("VSoundEmitter003",0), DAT_106466d4 = piVar2,
              ((CVProfile *)g_VProfCurrentProfile_exref,"BacktrackEntity",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"BotThink::AiTimer1",0,"NPCs",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"BuildWorldRenderLists",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CAI_AssaultBehavior::SetParameters",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CAI_BaseNPC::RunTask",0,"NPCs",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CAI_BaseNPC_RunAnimation",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseAnimating::SetupBones",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseBoatControllable::DoWheelHover",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseCarriable::CarriedContext",0,"Game",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseCarriable::DelayedPushForceContext",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseCarriable::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseCombatCharacter::UpdateLastKnownArea",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseEntity::EmitSound",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseLesson::IsTimedOut",0,"GameInstructor"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayer::PhysicsSimulate",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayerControllable::CalcViewForPlayer"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayerControllable::ClientThink",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayerControllable::GetFeetOrigin",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayerControllable::GetRenderOrigin",0
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayerControllable::GetViewOrigin",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayerControllable::GetViewPosition",0
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayerControllable::SetupMove",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayerControllable::UpdateViewAngles",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBasePlayerControllable::VehicleThink",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseServer::RunFrame",0,"Networking",false
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseVPhysicsControllable::ClientSimulate",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseVPhysicsControllable::CreateMove",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseVPhysicsControllable::DoInput",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseVPhysicsControllable::DoInputThrottle"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseVPhysicsControllable::MoveNPCVehicle",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseVPhysicsControllable::Simulate",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseVPhysicsControllable::UpdateSimState",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseVPhysicsControllable::VPhysicsUpdate",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseWheeledControllable::CalculateHover",0
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseWheeledControllable::DoWheelHover",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseWheeledControllable::IsCarOnGround",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CBaseWheeledControllable::VPhysicsUpdate",0
              ((CVProfile *)g_VProfCurrentProfile_exref,"CCascadeLightManager::InitRenderTargets",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientLeafSystem::ProjectFlashlight",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::BuildFlashlight",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::ComputeShadowTextures",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::DrawDeferredShadows",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::InitDepthTextureShadows",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::ReprojectShadows",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::UpdateFlashlightState",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::UpdateProjectedTexture",0
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientShadowMgr::UpdateProjectionState",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CClientState::ConsistencyCheck",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CEffectsList::DrawEffects",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CEngine::Frame",0,"Unaccounted",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CEngineVGui::Paint",0,"VGUI",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CFlashlightEffect::UpdateLight",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CFlashlightEffect::UpdateLightTopDown",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHLTVClient::SendSnapshot",0,"HLTV",false,4
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHLTVServer::AddNewFrame",0,"HLTV",false,4)
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHLTVServer::RunFrame",0,"HLTV",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHLTVServer::UpdateTick",0,"HLTV",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::AcquireTarget",0,"Hostages",false
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::ChangeState",0,"Hostages",false,4
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::CheckGoalReached",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::ComputeFlinchAnimation",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::DetermineDestination",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::FindValidChair",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::GatherPotentialScanDirections",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::GetOffYourLazyAss",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::GetRandomWaypoint",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::GetRandomWaypointAwayFromPoint",0
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::GoNearAmmoBox",0,"Hostages",false
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::GoNearSpawnArea",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::HandleKnockBack",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::HandleStuck",0,"Hostages",false,4
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::HostageThink",0,"Hostages",false,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::HostageThink_GrabbedContext",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::KnockAroundNearByHumans",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::PhysicsSimulate",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::PlayDeathAnimation",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::ScanAndAttackEnemy",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::ScanSurroundingArea",0,"Hostages"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::TrackPath",0,"Hostages",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::TraverseLadder",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CHostage::UpdateFollowing",0,"Hostages",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CIconLesson::IsVisible",0,"GameInstructor",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CIconLesson::ShouldDisplay",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CInferno::InfernoThink (check lifetimes)",0
              ((CVProfile *)g_VProfCurrentProfile_exref,"CInferno::InfernoThink",0,"Fire",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CL_ProcessVoiceData",0,"Networking",false,4
              ((CVProfile *)g_VProfCurrentProfile_exref,"CL_ReadPackets",0,"Networking",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CM_IsFullyOccluded",0,"Unaccounted",false,4
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNPCVehicle::VehicleThink",0,"NPC_Vehicles"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNVGLight::UpdateLight",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNavArea::IsCompletelyVisible",0,"NextBot",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNavArea::IsCompletelyVisibleToTeam",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNavArea::IsContiguous",0,"NextBot",false,4
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNavArea::IsPotentiallyVisible",0,"NextBot"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNavArea::IsPotentiallyVisibleToTeam",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNavMesh::FireGameEvent",0,"NPCs",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNavMesh::ForAllAreasOverlappingExtent",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNavMesh::GetNavArea",0,"NextBot",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNavMesh::GetNearestNavArea",0,"NextBot",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNetworkStringTableContainer::DirectUpdate"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CNewParticleEffect::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"COcclusionSystem::IsOccluded",0,"Occlusion"
              ((CVProfile *)g_VProfCurrentProfile_exref,"COverlayMgr::RenderOverlays",0,"Overlays",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CParticleCollection::Simulate",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CParticleEffectBinding::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CParticleMSG::UpdateNewEffects",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CPhysicsHook::FrameUpdatePostEntityThink",0
              ((CVProfile *)g_VProfCurrentProfile_exref,"CPhysicsSystem::PhysicsSimulate",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CPrediction::ProcessMovement",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CPrediction::Update",0,"Prediction",false,4
              ((CVProfile *)g_VProfCurrentProfile_exref,"CRopeManager::DrawRenderCache",0,"Ropes",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CScriptedIconLesson::FireGameEvent",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CScriptedIconLesson::OnOpen",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CScriptedIconLesson::ProcessElement",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CScriptedIconLesson::ProcessElements",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CScriptedIconLesson::Update",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CSectionBlobRenderer::BeginFrame",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CSectionBlobRenderer::BeginTile",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CSectionBlobRenderer::DrawTile",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CSectionBlobRenderer::EndFrame",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CSectionBlobRenderer::EndTile",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowDepthView::Draw",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::DrawFlashlightDecals",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::DrawFlashlightOverlays",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::DrawVolumetrics",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::FlashlightDrawCallback",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::GenerateShadowRenderInfo",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::ProjectFlashlight",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::ProjectShadow",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::RenderFlashlights",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::RenderProjectedTextures",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::RenderShadows",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CShadowMgr::SetFlashlightStencilMasks",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CSprite::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CSpriteTrail::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CStaticProp::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CStaticPropMgr::DrawStaticProps",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::Accelerate",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::AddGravity",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::AirAccelerate",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::AirMove",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CalcRoll",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CanAccelerate",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CanLean",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CategorizeGroundSurface"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CategorizePosition",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CheckFalling",0,"Player"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CheckJumpButton",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CheckParameters",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CheckRollButton",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CheckStuck",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CheckVelocity",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CheckWater",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::CheckWaterJump",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::ClipVelocity",0,"Player"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::DecayPunchAngle",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::Duck",0,"Player",false,4
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::FinishGravity",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::Friction",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::FullFastRopeMove",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::FullLadderMove",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::FullNoClipMove",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::FullObserverMove",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::FullTossMove",0,"Player"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::FullWalkMove",0,"Player"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::FullWallRappelMove",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::GetMovementDirection",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::LadderMove",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::Leaning",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::MV_TraceHull",0,"Player"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::MV_TraceRay",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::OnLadder",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::PlayerMove",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::ProcessMovement",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::PushEntity",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::PushObjectMove",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::ReduceTimers",0,"Player"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::SetGroundEntity",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::StartGravity",0,"Player"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::StayOnGround",0,"Player"
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::StepMove",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::StepMoveWallRappel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::TestPlayerPosition",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::TryPlayerMove",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::UpdateViewOffset",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::WalkMove",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::WaterJump",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIPlayerMovement::WaterMove",0,"Player",
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIViewModel::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CTIViewRender::DoCustomPostProcessing",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CViewRender::Draw3dSkyboxworld",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CViewRender::Render",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CVisibleShadowList::FindShadows",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseAnimating::BuildTransformations",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseAnimating::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseAnimating::GetToolRecordingState",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseAnimating::SetupBones",0,pcVar21,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseCombatWeapon::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseEntity::AddVisibleEntities",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseEntity::DrawBrushModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseEntity::InterpolateServerEntities",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseEntity::PostNetworkUpdateAllEnts",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_BaseEntity::ToolRecordEnties",0,"Tools",
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_GameInstructor::FireGameEvent",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_GameInstructor::Update",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_GameInstructor::UpdateActiveLesson",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_GameInstructor::UpdateInactiveLesson",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_GameZone::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_Hostage::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_HostageProp::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_Inferno::ClientThink",0,"Magic",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_Inferno::DrawModel",0,"DeadRun",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_Inferno::SynchronizeDrawables",0,"Magic",
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_LocalTempEntity::DrawStudioModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_NPCVehicle::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_PropHitZone::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_PropRagDollClientSide::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_RopeKeyframe::DrawModel",0,"Ropes",false,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_ServerRagdollAttached::SetupBones",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_SpriteRenderer::DrawSprite",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_TIPlayer::ClientThink()",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"C_TIPlayer::DrawModel",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"CheckUpdatingSteamResources",0,"Steam",
              ((CVProfile *)g_VProfCurrentProfile_exref,"Client SimulateEntities",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"Client TempEnts",0,"Client Simulation",
              ((CVProfile *)g_VProfCurrentProfile_exref,"DrawWorld",0,"World Rendering",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_Blood",0,"Particle/Effect_Rendering",
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_BodyGib",0,"Particle/Effect_Rendering",
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_DebrisFlecks",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_Dust",0,"Particle/Effect_Rendering",
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_ElectricSpark",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_EnergySplash",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_GaussTracer",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_GunshipImpact",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_GunshipMuzzleEffect",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_GunshotSplash",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_Headshot",0,"Particle/Effect_Rendering",
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_MetalSpark",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_MetalSpark2",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_MuzzleEffect",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_PaperImpact",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_PlayerTracer",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_Quad::Draw",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_Smoke",0,"Particle/Effect_Rendering",
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_Tracer",0,"Particle/Effect_Rendering",
              ((CVProfile *)g_VProfCurrentProfile_exref,"FX_WaterRipple",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"FinishLagCompensation",0,"Networking",false
              ((CVProfile *)g_VProfCurrentProfile_exref,"LightcacheGet",0,"Light_Cache",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"ModifyLinks",0,"ModifyLinks",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"MuzzleFlash_357_Player",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"MuzzleFlash_Combine_NPC",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"MuzzleFlash_Combine_Player",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"MuzzleFlash_Pistol_Player",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"MuzzleFlash_SMG1_Player",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"MuzzleFlash_Shotgun_Player",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"Paintblob_DrawIsoSurface",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"ParticleMgr()->Simulate",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"R_GetVisibleFogVolume",0,"World Rendering",
              ((CVProfile *)g_VProfCurrentProfile_exref,"R_LevelInit",0,"Networking",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"RestoreEntityTo",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"SV_ComputeClientPacks",0,"CheckTransmit",
              ((CVProfile *)g_VProfCurrentProfile_exref,"S_StartSound_",0,"Sound",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"SendClientMessages",0,"Networking",false,4)
              ((CVProfile *)g_VProfCurrentProfile_exref,"SendSnapshot",0,"Networking",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"SetupRenderablesList",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"Shader_DrawDispChain",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"SnowFall",0,"Particle/Effect_Rendering",
              ((CVProfile *)g_VProfCurrentProfile_exref,"TIParticleTracer",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"UpdateClientSideAnimations",0,
              ((CVProfile *)g_VProfCurrentProfile_exref,"ViewDrawFade",0,"World Rendering",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"_Host_RunFrame_Input",0,"Input",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"_Host_RunFrame_Server",0,"Game",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"recvfrom",0,"Networking",false,4);
              ((CVProfile *)g_VProfCurrentProfile_exref,"vprof_adddebuggroup1",0,
              ((bVar2 = FUN_100a6de0(this_00,"point_viewcontrol_multiplayer"), bVar2 ||
              ((char *)piVar3[0x17] == "weapon_pistol")) ||
              ((int *)((int)this + -4),"Warning: %s\n",&local_408);
              ((int)puVar4 + 5,&DAT_1035ac38,"14:45:41",0,this,FUN_1021ff70,puVar8,puVar10,uVar3);
              (*(int **)((int)param_1 + 0xa8),"expecting {");
              (*(undefined4 *)((int)local_8 + 500),&DAT_104f4a20,"#Spectators",0,
              (**(code **)(*DAT_106466d0 + 4))("resource/gameevents.res");
              (**(code **)(*DAT_106466d0 + 4))("resource/hintevents.res");
              (**(code **)(*DAT_10730cc4 + 0x1bc))("exec joy_configuration_sc_analog.cfg");
              (**(code **)(*local_18 + 0x34))("count",iVar6);
              (**(code **)(*local_8 + 0x388))("#GP_VIPEsc_CT_CarDriverM");
              (**(code **)(*local_8 + 0x388))("#GP_VIPEsc_CT_Elim");
              (**(code **)(*local_8 + 0x388))("#GP_VIPEsc_Ter_CarDriver");
              (**(code **)(*local_8 + 0x388))("#GP_VIPEsc_Ter_Elim");
              (**(code **)(*piVar3 + 0x604))("specgui",1,0);
              (**(code **)(*piVar7 + 0x34))("achievement",uVar4);
              (**(code **)(*piVar8 + 0x34))(piVar8,"Kicked by %s",pcVar7);
              (**(code **)(iVar1 + 0x34))("player",iVar8);
              (*pcVar10)("First Trace using: %s\n",pcVar7);
              (*pcVar6)("      Bumping %d to %d\n");
              (*pcVar9)("%s %.2f : ",*(int *)(iVar7 + 4) + iVar7,
              (DAT_106466ac,*(undefined4 *)((int)pvVar2 + 0x18),"cl_drawhud 0");
              (DAT_106466ac,*(undefined4 *)((int)pvVar2 + 0x18),"developer 0");
              (DAT_106466ac,*(undefined4 *)((int)pvVar2 + 0x18),"sv_cheats 1");
              (DAT_106466ac,*(undefined4 *)(iVar2 + 0x18),"devshots_screenshot \"%s\"",puVar3);
              (DAT_106466ac,0,"No Fog Volume found at given position (%f %f %f)",
              (DAT_106466ac,0x23,"%d enginespeed %.2f   iEngineForce %d ",
              (DAT_106466ac,0x24,"Thrust %.0f",SUB84(dVar4,0),(int)((ulonglong)dVar4 >> 0x20));
              (DAT_106466ac,0x3a,"******* RECORDING Hostage Movement **********");
              (DAT_106466ac,9,"CurrentStage %d : Team %d : Squad %d : CurrentPlan %d",DAT_105e138c,
              (DAT_106466d8,&local_34,param_2 * 1.5,"RPM %f:: GEAR %i (RATIO:%f)",
              (DAT_106cb7e8,iVar2,"PF\n%d %d\n-1.000000\n",*this,*(undefined4 *)((int)this + 4));
              (DAT_10730cc4,&local_20,"%15s %30s(%d) (%5i / %5i bytes): %15s",local_40,uVar7);
              (DAT_10730cc4,0x14,"basePos %f %f %f",(double)*(float *)((int)this_00 + 0xc),
              (DAT_10730cc4,0x15,"baseLastPos %f %f %f",(double)*(float *)((int)this_00 + 0x18),
              (DAT_10730cc4,0x16,"baseVel %f %f %f",(double)*(float *)((int)this_00 + 0x24),
              (DAT_10730cc4,0x17,"baseAccel %f %f %f",(double)*(float *)((int)this_00 + 0x30),
              (DAT_10730cc4,0x18,"tipPos %f %f %f",(double)*(float *)((int)this_00 + 0x3c),
              (DAT_10730cc4,0x19,"tipVel %f %f %f",(double)*(float *)((int)this_00 + 0x48),
              (DAT_10730cc4,0x1a,"tipAccel %f %f %f",(double)*(float *)((int)this_00 + 0x54));
              (DAT_10730cc4,0x37,"******* RECORDING Client-Side Physics Objects **********");
              (DAT_10730cc4,4,"Pitch: %6.1f   Yaw: %6.1f %38s",(double)local_3c,(double)local_38,
              (DAT_10730cc4,6,"Pitch: %6.1f   Yaw: %6.1f   Dist: %6.1f %19s",(double)(float)piVar11,
              (DAT_10730cc4,8,"Pitch: %6.1f   Yaw: %6.1f   Dist: %6.1f %16s",
              (DAT_10730cd0,&local_38,param_2 * 1.5,"RPM %f:: GEAR %i (RATIO:%f)",
              (DAT_107c09f8,*(undefined4 *)(param_1 + 0x250),"\n\nTotal Frames : %3i\n\n",
              (bVar3 = FUN_100a6de0(pvVar1,"prop_dynamic"), bVar3)))) ||
              (bVar3 = FUN_100a6de0(pvVar1,"prop_physics"), bVar3)))))) ||
              (eVar11 = _strcat_s((char *)puVar5,_SizeInBytes_00,"="), eVar11 != 0)) ||
              (iVar4 = FUN_102659b0(pcVar2,".360."), iVar4 == 0)) &&
              (piVar16,"You have been kicked and banned %s by the server.\n",local_190);
              (piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("vip_reached_car_goal",0,0),
              (this,fVar1,"EmitSound:  \'%s\' emitted as \'%s\' (ent %i)\n",
              (this,fVar2,"EmitSound:  \'%s\' emitted as \'%s\' (ent %i)\n",
              (this,iVar2,"%f EmitSound:  Raw wave emitted \'%s\' (ent %i) (vol %f)\n",
              (this,param_1,"EmitAmbientSound:  Raw wave emitted \'%s\' (ent %i)\n",param_3,param_1)
              (this,param_1,"EmitAmbientSound:  \'%s\' emitted as \'%s\' (ent %i)\n",param_3,
              (this,param_1,"StopSound:  Raw wave stopped \'%s\' (ent %i)\n",param_3,param_1);
              (this,param_1,"StopSound:  Raw wave stopped \'%s\' (ent %i)\n",pcVar1,param_1);
              (uVar4 = FUN_10265ef0(pbVar3,(byte *)"soundentry_operator_data"), uVar4 != 0)) &&
              (uVar4 = FUN_10399710((byte *)"targetname",*(byte **)(iVar7 + 0x10 + *piVar1)),
              (uVar4,"text/plain",*(undefined4 *)(param_1 + 0x40),*(undefined4 *)(param_1 + 0x50));
              (uVar9 = FUN_10399710(pbVar12,(byte *)"MoveToFloor"), pcVar15 = local_18,
              *(char **)(puVar10 + -8) = "Bad lightmap extents on material \"%s\"\n";
              *(char **)(puVar14 + -8) = "Warning: overflowed CClientRenderablesList group %d";
              *(char **)(puVar15 + -4) = "Cannot load, retrying in 5 seconds..\n";
              *(char **)(puVar15 + -8) = "Could not get factory from %s\n";
              ,"Client",uVar7,puVar6,puVar5,uVar3);
              ,"Error (It\'s a crash)",0x40000);
              ,"Server",uVar7,puVar6,puVar5,uVar3);
              COM_TimestampedLog("InitializeCvars");
              COM_TimestampedLog("MathLib_Init");
              COM_TimestampedLog("g_pParticleSystemMgr->Init");
              COM_TimestampedLog("gameeventmanager->LoadEventsFromFile");
              ConColorMsg((Color *)&DAT_106a8e20,"GAME INSTRUCTOR: ");
              ConColorMsg((Color *)&DAT_106a8e24,".\n");
              ConColorMsg((Color *)&DAT_106a8e24,"Local player changed team (or disconnected)...\n")
              ConColorMsg((Color *)&DAT_106a8e24,"\tListen for close event ");
              ConColorMsg((Color *)&DAT_106a8e24,"\tListen for success event ");
              ConColorMsg((Color *)&DAT_106a8e30,"\"%s\"",puVar3);
              ConColorMsg((Color *)&DAT_106a8e34,"\"%s\"",puVar3);
              ConColorMsg((Color *)&local_8,"Can\'t find model for %s\n");
              ConDMsg("Bad connectionless packet ( CL \'%c\') from %s.\n",param_1,pcVar18);
              ConDMsg("Unexpected \'}\' found, line %d\n",local_10);
              ConMsg("%s %s %s\n",local_34,&DAT_1036502c,pcVar5 + 5);
              ConMsg("%s: couldn\'t exec %s\n",puVar6,pcVar14);
              ConMsg("Can\'t savegame with a dead player\n");
              ConMsg("Could not get IServerGameClients interface from library %s",param_1);
              ConMsg("Processing Split Screen connection packet.\n");
              ConMsg("WARNING! NET_CloseSocket: %s\n",pcVar6);
              DAT_106466e0 = (*(code *)param_1)("VSERVERENGINETOOLS001",0);
              DName::operator_((DName *)&local_10,"const");
              DName::operator_((DName *)&local_10,"volatile");
              DName::operator__((DName *)&local_10," volatile");
              DName::operator__((DName *)&local_18,"::");
              DName::operator__((DName *)&local_2c,"\'");
              DName::operator__((DName *)&local_34,"\'");
              DevMsg(" ");
              DevMsg(" : %s : vol: %4.2f, sndlvl: %4.2f \n",piVar8 + -0x11);
              DevMsg("%s: %s",pcVar7,local_38);
              DevMsg("Compressing fragments (%d -> %d bytes): %.2fms\n",uVar7,local_c);
              DevMsg("FileReceived: %s, %i bytes (ID %i)\n",piVar1,piVar6[0x43],piVar6[0x45]);
              DevMsg("Hud element \'%s\'/\'%s\' doesn\'t have a parent\n",uVar2);
              DevMsg("Parsing SoundMixers:\n");
              DevMsg("TE_%s not being sent to client: %s\n",pcVar10,uVar5);
              DevMsg("VOX_TouchSound: sentence is too long %s\n",pcVar4);
              DevMsg("\t dspmix %1.2f : distmix %1.2f : dspface %1.2f : lvol %1.2f : cvol %1.2f : rvol %1.2f : rlvol %1.2f : rrvol %1.2f\n"
              DevMsg("\t x: %4f y: %4f z: %4f\n",(double)(float)puVar8[0x39],
              DevMsg("dsp: %3.2f ",(double)(float)local_8[iVar5 + 0x120]);
              DevMsg("lvl: %3.2f ",(double)(float)local_8[iVar5 + 0xa0]);
              DevMsg("mute: %3.2f\n");
              DevMsg("removing glow from index: %i\n",*(undefined4 *)(iVar10 + 4 + *piVar2));
              DevMsg("solo: %3.2f ",(double)(float)local_8[iVar5 + 0x1a0]);
              DevMsg("toast expire time: [%f] curtime: [%f]\n",(double)(float)local_14);
              DevMsg("vol: %3.2f ",(double)(float)local_8[iVar5 + 0x20]);
              DevMsg(1,"Bad overlay normal - %d at (%f, %f, %f) with material \'%s\'\n",local_c,
              DevMsg(1,"Bad overlay texture coords - %d at (%f, %f, %f) with material \'%s\'\n",
              DevMsg(1,"Bad overlay vert - %d at (%f, %f, %f) with material \'%s\'\n",local_c,
              DevWarning("Invalid event field name \"%s\".\n");
              DevWarning("Lesson \"%s\" defined twice!\n",puVar10);
              DevWarning(1,"AutoIKRelease (%s) got a NULL pchain %d\n",iVar3,local_98);
              DevWarning(2,"(%s) Schedule (%s) Failed at %d!\n",puVar10,pcVar9,
              Error("CNetworkStringTableClient::ParseUpdate: message too large (%d bytes).",uVar9);
              Error("FIELD_EMBEDDED in flattened field list!");
              Error("Overflowed datatable prop list in SendTable \'%s\'.",param_2[2]);
              Error("Overflowed output list in MapPropOffsetsToIndices");
              Error("SetupClientSendTableHierarchy: missing table name for prop \'%s\'.",
              FUN_004376da((LPCWSTR)&DAT_00458728,L"Microsoft Visual C++ Runtime Library",0x12010);
              FUN_10016428((LPCWSTR)&DAT_10045fa0,L"Microsoft Visual C++ Runtime Library",0x12010);
              FUN_1003235c((LPCWSTR)&DAT_10835d40,L"Microsoft Visual C++ Runtime Library",0x12010);
              FUN_100aeb90(this,"smooth edges");
              FUN_100aec30(this,"smooth edges");
              FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
              FUN_101428a0((int)"water_impact_body",*puVar5,*(undefined4 *)(puVar5 + 1),*puVar4,
              FUN_10146100((int)"impact_fx_plaster",
              FUN_10146100((int)"impact_fx_plaster",*param_1,*(undefined4 *)(param_1 + 1),local_18,
              FUN_10155b90((int)this,(byte *)"Server requested game stats upload to %s.");
              FUN_10155b90((int)this,(byte *)"Stats report accepted, data upload skipped.");
              FUN_1017f8a0(local_94,0.0,"fx.large_struts_explode",param_3,0,0);
              FUN_1017f8a0(local_94,0.0,"fx.metal_crash",param_3,0,0);
              FUN_101af190(PTR_DAT_10417830,(undefined4 *)"_autosavedangerous");
              FUN_101c7240(param_1,"Player.Whistle_Dog_Goto",0,0);
              FUN_101c7240(this,"EDIT_DELETE",0,0);
              FUN_101c7240(this,"Player.HWaveOver",0,0);
              FUN_101c7240(this,"Water.Impact_Large",0,0);
              FUN_101eb2c0((undefined4 *)"RifleTracer",(float *)&local_24,local_104);
              FUN_101f1360(local_14,(int)"cl_steam_overlay_position");
              FUN_101f1360(local_14,(int)"joy_invertx");
              FUN_101f3700((int)param_1,2,"Console command too long.\n",(char *)0x0,(char *)0x0,
              FUN_101f54b0((byte *)"[Debug] Player: \'%s\' MOVED to BODYGUARD %s.\n");
              FUN_101f54b0((byte *)"[Debug] Player: \'%s\' MOVED to OFFENSE %s.\n");
              FUN_101fbfb0((byte *)"Bad brushside texinfo");
              FUN_101fbfb0((byte *)"Bad decal list");
              FUN_101fbfb0((byte *)"Can\'t resample\n");
              FUN_10265920((char *)local_124,0x104,(byte *)"%s/%s");
              FUN_10265920(local_234,0x100,(byte *)"%s_restart");
              FUN_10265b40((char *)local_408," ",0x400,0xffffffff);
              FUN_1026d290(param_1,(byte *)"\"%s\" %s %s %d %d %d %d\n");
              FUN_1026d290(param_1,(byte *)"\"%s\" %s 0 0 0 %d 0\n");
              FUN_102868b0((int)piVar8,"player_securecase",pcVar14,0);
              FUN_10296f50(this,param_1,(byte *)"Option1");
              FUN_102e6b20(local_20c,(byte *)"%s_restart");
              FUN_1031416a((LPCWSTR)&DAT_106fa208,L"Microsoft Visual C++ Runtime Library",0x12010);
              FUN_10399150(local_118,0x104,(byte *)"%sfemale%s");
              FUN_10399150(local_118,0x104,(byte *)"%smale%s");
              FUN_10399150(local_148,0x100,(byte *)"(%0.2f) input %s: %s.%s(%s)\n");
              FUN_10399150(local_148,0x100,(byte *)"(%0.2f) input <NULL>: %s.%s(%s)\n");
              FUN_10399150(pcVar12,0x200,(byte *)"models/characters/%s.mdl");
              FUN_10399370(local_1fc," (Eluded)",0xff,0xffffffff);
              FUN_10399370(local_1fc," (Unreachable)",0xff,0xffffffff);
              FUN_10399370(local_70," (Disabled on Server)",0x4c,0xffffffff);
              FUN_10399450((char *)local_220,(int)"left_",0x200);
              FUN_10399450((char *)local_220,(int)"right_",0x200);
              FUN_10399450(local_208,(int)"#TI_Score_BOSS_TimeOut_Defender",0x200);
              FUN_1041c37f((LPCWSTR)&DAT_106d4860,L"Microsoft Visual C++ Runtime Library",0x12010);
              FUN_1042d940(local_234,0x100,(byte *)"%s_restart");
              FUN_1042d940(pcVar12,0x200,(byte *)"models/characters/%s.mdl");
              FUN_1042dc40((char *)local_220,(int)"left_",0x200);
              FUN_1042dc40((char *)local_220,(int)"right_",0x200);
              FUN_1042dc40(local_1c0,(int)"(playerindex)",0x100);
              FUN_1042dc40(local_2c0,(int)"(playerindexplusone)",0x100);
              FUN_1042e3d0(local_a0,"sweellh");
              FUN_1042f3d0(pvVar2,(uint *)"ingame_playing",(uint)"playing");
              FUN_10431960(local_20,(uint *)"columnpct1",(uint)puStack40);
              FUN_10431960(puVar8,(uint *)"index",uVar4);
              FUN_10431960(pvVar6,(uint *)"dontnotify",1);
              FUN_10431960(pvVar6,(uint *)"error",1);
              FUN_10431960(this_00,(uint *)"level",1);
              FUN_104319f0(local_20,(uint *)"column1",pcVar9);
              FUN_104319f0(pvVar3,(uint *)"Properties","Offline");
              FUN_104319f0(pvVar3,(uint *)"Properties",pcVar9);
              FUN_104319f0(this_00,(uint *)&DAT_1054f200,"");
              FUN_10432330(&DAT_1079a880,"snd_musicvolume");
              FUN_104d1734((LPCWSTR)&DAT_10848740,L"Microsoft Visual C++ Runtime Library",0x12010);
              LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0)," UNKNOWN DATA TYPE %i ");
              LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%f ");
              LoggingSystem_Log(DAT_104c2ea8,0,SUB41(uVar1,0)," UNKNOWN DATA TYPE %i ");
              LoggingSystem_Log(DAT_104c2ea8,0,SUB41(uVar1,0),"%f ");
              LoggingSystem_Log(DAT_104c2ea8,1,"Error: Failed to get mix group %s!\n");
              Msg("     %s\n",local_84c);
              Msg("CNavArea::PostLoad: Corrupt navigation data. Cannot connect Navigation Areas.\n")
              Msg("Demo message, tick %i, %i bytes\n",uVar4);
              Msg("Discarding repository \'%s\' due to corruption\n",puVar1);
              Msg("First Trace using: %s\n",uVar3);
              Msg("Hud element \'%s\' doesn\'t have an entry \'%s\' in scripts/HudLayout.res\n",
              Msg("Invalid GetHostVersion(), expecting %d, got %d\n",uVar16,uVar21);
              Msg("Referenced by \'%s:%s\' -- %s\n",uVar9,uVar8,pcVar6);
              Msg("Server approved grace request...\n");
              Msg("Vox:  No caption for \'%s\'\n",param_2);
              Msg("Vox: caption \'%s\'\n",uVar8);
              Msg("Vox: captionstream \'%s\'\n",local_a9c);
              Msg("Worldcraft failed on node link deletion...\n");
              Msg("[Map]Added [%llu] %s to available tdm mode maps\n",uVar3,param_2,param_3);
              Msg("[Map]Added [%llu] %s to available tdm mode maps\n",uVar5,param_2,param_3);
              Msg("failed %i times\n",iVar9);
              Msg("failed at spawnpoint: %i %f %s\n",local_c[0x12f4] + -1,SUB84((double)local_10,0),
              Msg("weapon: %i [%i] [%i]\n",local_14,local_10,pvVar10);
              Msg((byte *)"Pops != pushes?\n");
              Warning("%s has changed its model while processing AnimEvents on sequence %d. Aborting dispatch.\n"
              Warning("***ERROR***\nBad relationship type (%s) to unknown entity (%s)!\n",pbVar2,
              Warning("Activity %s has %d sequences with a total weight of %d!",uVar12,uVar8,iVar9);
              Warning("Bad password attempt from net console\n");
              Warning("CToolFrameworkInternal::LoadToolsFromLibrary:  Dll \'%s\' connection phase failed.\n"
              Warning("RCON Cmd: recv error (%s)\n",pcVar9);
              Warning("The nav mesh needs a full nav_analyze\n");
              Warning("Too many depth textures rendered in a single view!\n");
              Warning("Unable to create non-precached breakmodel %s\n",local_18);
              Warning("Unable to decode custom demo data, callback \"%s\" not found.\n",uVar4);
              Warning("Unable to load interface %s from %s (Dependency of %s)\n",ppcVar6[1],*ppcVar6
              Warning("Unsupported %d-bit wave file %s\n",local_52a,piVar2);
              Warning("nav_unmark; nav_mark %d; nav_warp_to_mark;\n",
              _DAT_106466e4 = (*(code *)param_1)("VENGINE_GAMEUIFUNCS_VERSION005",0);
              bVar5 = FUN_1013c980((int)param_1,(int)"fadeout");
              cVar2 = FUN_1013aba0(&local_10,(byte *)"EngineSpin",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"IdealSpeed",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"LeftWing_BrakeFlap",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"LeftWing_BrakeFlap2",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"NextKey",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"RightWing_BrakeFlap",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"RightWing_BrakeFlap2",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"Squad",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"Stage",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"Target2",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"Target3",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
              cVar2 = FUN_1013aba0(&local_10,(byte *)"targetname",(char *)local_858);
              iVar2 = FUN_1042d940(param_2,param_3,(byte *)"%f %f %f");
              iVar3 = (**(code **)(*piVar2 + 0x2c))("-headtracking");
              iVar3 = FUN_1008c050(this,(byte *)"Quadruped.HipPlate");
              iVar3 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_Pelvis");
              iVar3 = FUN_1042e020("DrpPagedPoolMem");
              iVar4 = (**(code **)(piVar5[1] + 0x84))("swheel_v");
              iVar4 = FUN_102659b0(&DAT_10674cf0,".wav");
              iVar4 = FUN_10399410((char *)local_18cc,"info_heli_TER_spawn",0x13);
              iVar4 = FUN_10399410((char *)local_18cc,"info_vehicle_wp",0xf);
              iVar4 = FUN_1042e020("AdvancedInfoContainer");
              iVar5 = FUN_102659a0(pbVar2,(byte *)"match_channel");
              iVar5 = FUN_102659a0(pbVar2,(byte *)"right_rear");
              iVar5 = FUN_102659a0(pbVar2,(byte *)"subtract_min_time_from_last");
              iVar5 = FUN_102659a0(pbVar3,(byte *)"speakers");
              iVar5 = FUN_103991e0((char *)pbVar3,".vmt");
              iVar7 = FUN_103fd956(pcVar9,(int)"[%f %f %f]");
              iVar8 = FUN_10399410(pcVar12,"ME",2);
              iVar8 = FUN_10399410(pcVar6,"THEM",4);
              iVar8 = FUN_10399410(pcVar6,"on_damage",9);
              iVar8 = FUN_10399410(pcVar6,"on_flashlight_illum",0x13);
              iVar9 = FUN_1018dd00((uint *)"SelectWeightedSequence",0,iVar9 + -1,0);
              iVar9 = FUN_101f73d0((uint *)"SelectWeightedSequence",0,iVar9 + -1,0);
              if ((iVar4 != 0) || (iVar4 = FUN_102659b0(&DAT_10674cf0,".mp3"), iVar4 != 0)) {
              if (param_1 != (uint *)"Stoplight_A2") {
              if (param_1 != (uint *)"deceleration") {
              if (param_1 != (uint *)"distance") {
              if (param_1 != (uint *)"maxshadowdistance") {
              if (param_1 != (uint *)"texture") {
              if (param_1 != (uint *)"unlocked_sentence") {
              if (param_1 == (uint *)"spindown") {
              if (param_1 == (uint *)"spinup") {
              in_EAX = DevWarning(1,"AutoGameSystem already added to game system list!!!\n");
              in_EAX = FUN_100845f0((byte *)param_1,(byte *)"value3");
              local_10 = FUN_10267f50(pvVar8,"DragDrop");
              local_10 = FUN_1039d370(pvVar8,"DragDrop");
              local_10 = FUN_1042ea30(pvVar8,"DragDrop");
              local_14 = FUN_103284f0(pvVar9,piVar5[0x83],"SlotLabel",1);
              local_28 = "log10";
              local_30 = "#VideoOptions_Model_Detail_Info";
              local_30 = "#VideoOptions_TextureDetail_Info";
              local_34 = "#VideoOptions_Model_Detail";
              local_34 = "#VideoOptions_TextureDetail";
              local_5 = FUN_100a6de0(local_c,"func_button*");
              local_8 = FUN_10267d30(pvVar5,"SetText",(uint *)&DAT_10353100,pcVar7);
              local_8 = FUN_1039d150(pvVar5,"SetText",(uint *)&DAT_10464104,pcVar7);
              local_8 = FUN_1042e810(pvVar5,"SetText",(uint *)&DAT_10524ef8,pcVar7);
              local_c = FUN_10267d30(pvVar5,"SetText",(uint *)&DAT_10353100,pcVar7);
              local_c = FUN_1039d150(pvVar5,"SetText",(uint *)&DAT_10464104,pcVar7);
              local_c = FUN_1042e810(pvVar5,"SetText",(uint *)&DAT_10524ef8,pcVar7);
              operator_((char *)param_1,(DName *)"__w64 ");
              pDVar5 = (DName *)DName::DName((DName *)local_58,"const ");
              pDVar5 = (DName *)DName::DName((DName *)local_58,"volatile ");
              pDVar6 = (DName *)DName::DName(local_5c,"`template-parameter");
              pDVar6 = (DName *)DName::DName(local_64,"`template-parameter");
              param_1[0x1abe9] = " 3_6?";
              param_2[6] = (byte *)"invalid bit length repeat";
              pbVar7 = (byte *)"FCVAR_NEVER_AS_STRING";
              pcVar1 = "amp";
              pcVar1 = "cpu";
              pcVar10 = "#GP_VIPEsc_TER_CarPassengerM";
              pcVar10 = "Hostage_%d.Scared";
              pcVar10 = "Hostage_%d.Scared_Running";
              pcVar10 = "ListPanel.SelectedBgColor";
              pcVar10 = "ListPanel.SelectedOutOfFocusBgColor";
              pcVar11 = "$basetexture2";
              pcVar11 = "SNDLVL_";
              pcVar11 = "position";
              pcVar11 = "waterripple";
              pcVar11 = "watersplash";
              pcVar12 = "Kicked by %s : %s";
              pcVar13 = "#GP_VIPEsc_CT_CarDriver";
              pcVar13 = "#GP_VIPEsc_CT_CarPassenger";
              pcVar13 = "#GP_VIPEsc_CT_Protect";
              pcVar13 = "#GP_VIPEsc_TER_CarDriverBOSS";
              pcVar13 = "#GP_VIPEsc_TER_CarPassengerM";
              pcVar13 = "#GP_VIPEsc_Ter_Bodyguard";
              pcVar13 = "#GP_VIPEsc_Ter_Protect";
              pcVar13 = "DS:CreateSoundBuffer for 3d front center failed";
              pcVar13 = "SquadDesc_T_CarPassenger";
              pcVar13 = "Unable to create non-precached breakmodel %s\n";
              pcVar13 = "Unable to load breakmodel %s\n";
              pcVar13 = "info_node";
              pcVar13 = "info_node_air";
              pcVar13 = "stopdemo\n";
              pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_CT",
              pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_CT_CarDriver",
              pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_T",
              pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_TBodyguard",
              pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_T_BOSSCarDriver",
              pcVar14 = "";
              pcVar14 = "<null>";
              pcVar14 = "characters/npc12.mdl";
              pcVar14 = "upper_raiser";
              pcVar15 = "";
              pcVar15 = "<null>";
              pcVar15 = "Hint isn\'t in NPC\'s viewcone";
              pcVar17 = ")->AmmoPercentage() < 30 ";
              pcVar17 = "Objective.HR_Contain_Hostages";
              pcVar17 = "Objective.HR_Rescue_Hostages";
              pcVar17 = "Objective.boss_Kill";
              pcVar17 = "Objective.boss_Protect_Escape";
              pcVar17 = "Objective.vip_Kill";
              pcVar17 = "Objective.vip_Protect_Escape";
              pcVar17 = "\t[%s]->GetWeaponInSlot( ";
              pcVar17 = "false";
              pcVar17 = "false\n";
              pcVar18 = "Grace request retry for unreserved server...\n";
              pcVar18 = "Server did not approve grace request, retrying...\n";
              pcVar18 = "false\n";
              pcVar18 = "flashlight_ak47";
              pcVar18 = "flashlight_aug";
              pcVar18 = "flashlight_dsa58";
              pcVar18 = "flashlight_fp6";
              pcVar18 = "flashlight_g36k";
              pcVar18 = "flashlight_m14";
              pcVar18 = "flashlight_m4";
              pcVar18 = "flashlight_mp5";
              pcVar18 = "flashlight_mp7";
              pcVar18 = "flashlight_pistol";
              pcVar18 = "flashlight_sg551";
              pcVar18 = "flashlight_uzi";
              pcVar18 = "flashlight_vertec";
              pcVar20 = "#TI_Score_VIPKill_XMAS";
              pcVar20 = "Label";
              pcVar26 = "Backtrack failed completely, bad starting position\n";
              pcVar26 = "Backtrack got most of the way\n";
              pcVar28 = "Current Enemy";
              pcVar3 = "";
              pcVar3 = "prop_physics_multiplayer";
              pcVar4 = "";
              pcVar4 = "#VideoOptions_Model_Detail";
              pcVar4 = "#VideoOptions_TextureDetail";
              pcVar5 = "FIRST";
              pcVar5 = "pitch";
              pcVar5 = FUN_101f6800((byte *)"Unknown command: %s\n");
              pcVar6 = "";
              pcVar6 = "#GameUI_AspectNormal";
              pcVar6 = "#GameUI_AspectWide16x10";
              pcVar6 = "#GameUI_AspectWide16x9";
              pcVar6 = "1";
              pcVar6 = "AdvancedInfoContainer";
              pcVar6 = "absolute";
              pcVar6 = "unknown model";
              pcVar7 = "";
              pcVar7 = "Camper";
              pcVar7 = "Console";
              pcVar7 = "DrpPagedPoolMem";
              pcVar7 = "FCVAR_NEVER_AS_STRING";
              pcVar7 = "MVP";
              pcVar7 = "Rusher";
              pcVar7 = "Teamplayer";
              pcVar7 = "level";
              pcVar7 = "playsoundscape";
              pcVar7 = "unnamed";
              pcVar7 = FUN_101f6800((byte *)"  input: %s\n");
              pcVar7 = FUN_101f6800((byte *)"  output: %s\n");
              pcVar8 = "#DeathMsg_Fall";
              pcVar8 = "OUTDATED:  ";
              pcVar8 = "PENDING:  ";
              pcVar8 = "ambientoriginoverride";
              pcVar8 = "gameui_activate";
              pcVar8 = "helicopter_mafia";
              pcVar8 = "helicopter_ter";
              pcVar9 = "";
              pcVar9 = "Console";
              pcVar9 = "FCVAR_NEVER_AS_STRING";
              pcVar9 = "Win32";
              pcVar9 = "chipsround";
              pcVar9 = "forward";
              pcVar9 = "ignorePhonemes";
              pcVar9 = "impact_fx_chipsrod";
              pcVar9 = "n/a";
              pcVar9 = "pitch";
              pcVar9 = "strafe";
              pcVar9 = "yaw";
              pcVar9 = FUN_1018dc80(this_01,(uint *)"modelname",0);
              piVar2 = (int *)(*(code *)param_1)("VEngineVGui001",0);
              piVar5 = FUN_1048d0f0(this,"");
              piVar7 = (int *)FUN_10135420("prop_c4_charge",-1,'\x01');
              ppvVar4 = (void **)FUN_10135420("hostage_entity",-1,'\x01');
              ppvVar9 = (void **)FUN_10135420("npc_vehicle",-1,'\x01');
              puVar3 = (uint *)FUN_102659b0((char *)&local_108,"lua/");
              puVar3 = FUN_10021180(local_2b0,(byte *)"(allsolid): %s");
              puVar3 = FUN_100b10f0(local_128,(byte *)"ingame_%s");
              puVar5 = FUN_10268540(local_10,&local_c,(uint *)"cellcolor",&param_2);
              puVar5 = FUN_1039d790(local_10,&local_c,(uint *)"cellcolor",&param_2);
              puVar5 = FUN_1042f060(local_10,&local_c,(uint *)"cellcolor",&param_2);
              puVar6 = FUN_10021180(local_1cc,(byte *)"(%f, %f, %f)");
              puVar6 = FUN_10031640(puVar11,(byte *)"Kicked by %s : %s");
              puVar6 = FUN_100b10f0(local_150,(byte *)"bind \"%s\" \"%s\"\n");
              puVar6 = FUN_100b10f0(local_150,(byte *)"unbind \"%s\"\n");
              puVar6 = FUN_10267f50(pvVar5,"Panel");
              puVar6 = FUN_1039d370(pvVar5,"Panel");
              puVar6 = FUN_1042e930(pvVar8,"Settings",(uint *)&DAT_10558f0c,uVar3);
              puVar6 = FUN_1042ea30(pvVar5,"Panel");
              this[0x2d] = "models/vehicles/helicopters/bell212/bell212.mdl";
              this[0x2d] = "models/vehicles/helicopters/ka50/ka50.mdl";
              this_00 = FUN_10423400(param_3,(uint *)"functionName");
              this_00 = FUN_104d6c80(param_3,(uint *)"functionName");
              uVar1 = FUN_0041e3a0(param_1,(byte *)"POSIX");
              uVar1 = FUN_10077120("CAI_BaseNPC",
              uVar1 = FUN_10265ef0(param_1,(byte *)"cl_lc");
              uVar1 = FUN_10265f50(param_1,(byte *)"POSIX");
              uVar1 = FUN_10399710((byte *)param_1,(byte *)"spindown");
              uVar1 = FUN_10399710((byte *)param_1,(byte *)"spinup");
              uVar1 = FUN_10399710(param_1,(byte *)"POSIX");
              uVar1 = FUN_1042df80(param_1,(byte *)"POSIX");
              uVar1 = FUN_1042df80(pbVar6,(byte *)"clear");
              uVar1 = FUN_1042df80(pbVar6,(byte *)"remove");
              uVar10 = FUN_101c7240(param_1,"Bomb.Plant",0,0);
              uVar10 = FUN_103996b0(pbVar9,(byte *)"prop_breaching_charge");
              uVar11 = FUN_10265f50(pbVar10,(byte *)"cl_session");
              uVar14 = FUN_10314250(DAT_10693b08,(uint *)"mafia_mode");
              uVar2 = (**(code **)(*piVar1 + 0x2c))("$falloffamount",(int)&param_1 + 3,0);
              uVar2 = FUN_100845f0((byte *)param_1,(byte *)"fadein");
              uVar2 = FUN_100845f0((byte *)param_1,(byte *)"fadeout");
              uVar2 = FUN_100845f0((byte *)param_1,(byte *)"volstart");
              uVar2 = FUN_10265f50(local_104,(byte *)"OPTIONS");
              uVar2 = FUN_10265f50(param_1,(byte *)"CloneOperation");
              uVar2 = FUN_10399710((byte *)param_1,(byte *)"timeofday");
              uVar2 = FUN_10399710(param_1,(byte *)"!target7");
              uVar2 = FUN_1042df80((byte *)"NetGraphOff",param_1);
              uVar2 = FUN_1042df80((byte *)"NetGraphOne",param_1);
              uVar2 = FUN_1042df80((byte *)"NetGraphThree",param_1);
              uVar2 = FUN_1042df80((byte *)"NetGraphTwo",param_1);
              uVar3 = FUN_10265ef0(pbVar2,(byte *)"stop_stacks");
              uVar3 = FUN_10265f50(pbVar2,(byte *)"localize");
              uVar3 = FUN_10399710(pbVar2,(byte *)"localize");
              uVar3 = FUN_1042df20(pbVar1,(byte *)"R_SHOULDER");
              uVar3 = FUN_1042df20(pbVar1,(byte *)"VerticalNormal");
              uVar3 = FUN_1042df80(pbVar1,(byte *)"Brightness");
              uVar3 = FUN_1042df80(pbVar1,(byte *)"KeyboardMouse");
              uVar3 = FUN_1042df80(pbVar14,(byte *)"Options");
              uVar3 = FUN_1042df80(pbVar2,(byte *)"localize");
              uVar4 = FUN_10265ef0((byte *)&DAT_10674cf0,(byte *)"LayerTriggers");
              uVar4 = FUN_10314250(param_1,(uint *)"mafia_mode");
              uVar4 = FUN_10399710((byte *)param_1,(byte *)"RopeMaterial");
              uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"disablereceiveshadows");
              uVar4 = FUN_1042df80(pbVar3,(byte *)"disabled");
              uVar5 = (**(code **)(*piVar4 + 0x3c))(uVar2,uVar3,"STEAMAPPS_INTERFACE_VERSION007");
              uVar5 = ConDMsg("ProcessVoiceData: Voice_AssignChannel failed for client %d!\n",iVar3)
              uVar5 = FUN_10265f50(pbVar4,(byte *)"solid");
              uVar5 = FUN_10399710((byte *)"State",local_418);
              uVar6 = FUN_10265f50((byte *)&DAT_10674cf0,(byte *)"CHAN_ITEM");
              uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"SetFont");
              uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"Spline");
              uVar6 = FUN_103fd956(pcVar9,(int)"%d %d %d %d");
              uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"SetFont");
              uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"Spline");
              uVar7 = FUN_102687d0(pvVar1,(uint *)"disabled",0);
              uVar7 = FUN_1039d9a0(pvVar1,(uint *)"disabled",0);
              uVar7 = FUN_1042f270(pvVar1,(uint *)"disabled",0);
              uVar8 = FUN_10265f50(*(byte **)(local_30[0] + iVar13 * 4),(byte *)"check_crc");
              uVar9 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01');
             "%3i fps (showbudget 3D driver time included)",local_8);
             "****** CViewRender::PerformScreenOverlay: Screen overlay wants to render, but it\'s been disabled!\n"
             "*************************************************************************************************\n"
             "*************************************************************************************************\n\n"
             "// Half-Life Server Configuration Layout Script (stores last settings chosen, too)\r\n"
             "Attempting to pack entities on server with invalid local client state. Probably a result of VXConsole or con commands. Aborting SV_ComputeClientPacks.\n"
             "Bad stuff will happen (crashes, stack corruption, etc) because opaque renderables will attempt to render with junk data"
             "CCommand::Tokenize: Encountered command which overflows the argument buffer.. Clamped!\n"
             "CNavArea::PostLoad: Corrupt navigation ladder data. Cannot connect Navigation Areas.\n"
             "CQueuedPacketSender: num queued packets >= nMaxQueuedPackets. Not queueing anymore.\n"
             "Cannot update displacement for dlight - set \'r_dlightsenable 1\' and reload the map! (data may also have been culled by MakeGameData)\n"
             "ERROR: CPooledVBAllocator_ColorMesh::Clear should not be called until all allocations released!\n"
             "ERROR: CPooledVBAllocator_ColorMesh::Deallocate, after all allocations have been freed too few verts total have been deallocated (bug in calling code)\n"
             "HINTFLAGS:%s, inconsistent, the nearest node is never a random hint node, treating as nearest request!\n"
             "Invalid attach type specified for particle_test in cvar \'particle_test_attach_mode.\n"
             "Model,DataSize,Tris,Verts,DataSize (LOD0),Tris (LOD0),Verts (LOD0),Parts,Bones,LODs,Meshes\n"
             "ProcessBSPDecal:  Trying to project on world before host_state.worldmodel is set!!!\n"
             "SV_BroadcastMessage: Init message being created after signon buffer has been transmitted\n"
             &DAT_104ef180,"entities");
             &DAT_104ef180,"entmessages");
             &DAT_104ef180,"events");
             &DAT_104ef180,"localplayer");
             &DAT_104ef180,"otherplayers");
             &DAT_104ef180,"sounds");
             &DAT_104ef180,"stringtables");
             &DAT_104ef180,"tempents");
             &DAT_104ef180,"usermessages");
             ((((piVar2 = (int *)(*(code *)param_3)("VFileSystem017",0), DAT_106466b4 = piVar2,
             ((*(char **)((int)pvVar1 + 0x5c) == "prop_dynamic" ||
             ((*(char **)((int)pvVar1 + 0x5c) == "prop_physics" ||
             (**(code **)(*this + 0x100))(&param_1,"ConsoleText.BgColor",0xff000000,param_1);
             (**(code **)(*this + 0x104))(&local_8,"HybridButton.DisabledColor",piVar3);
             (**(code **)(*this + 0x104))(&local_8,"HybridButton.FocusDisabledColor",piVar3);
             (**(code **)(*this + 0x104))(&local_8,"HybridButton.ListButtonActiveColor",piVar3);
             (**(code **)(*this + 0x104))(&local_8,"HybridButton.ListButtonInactiveColor",piVar3);
             (**(code **)(*this + 0x104))(&local_8,"TIButtonDefault.ClickedColor",piVar3);
             (**(code **)(*this + 0x104))(&local_8,"TIButtonDefault.DisabledColor",piVar3);
             (**(code **)(*this + 0x104))((int)&local_10 + 2,"HybridButton.CursorColor",piVar2);
             (**(code **)(*this + 0x104))((int)&local_10 + 2,"HybridButton.DisabledColor",piVar2);
             (**(code **)(*this + 0x104))((int)&local_10 + 2,"HybridButton.FocusColor",piVar2);
             (**(code **)(*this + 0x104))((int)&local_10 + 2,"HybridButton.TextColor",piVar2);
             (DAT_10730cc0 = (*(code *)param_1)("VEngineModel016",0), DAT_10730cc0 != 0)) &&
             (DAT_10730cdc = (*(code *)param_1)("VEngineVGui001",0), DAT_10730cdc != 0)) &&
             (bVar2 = FUN_100a6de0(piVar3,"weapon_ar2"), bVar2)) {
             (bVar2 = FUN_100a6de0(piVar3,"weapon_pistol"), bVar2)) goto LAB_10097bd7;
             (bVar3 = FUN_100a6de0(pvVar1,"physics_prop"), iVar5 = local_8, bVar3)))))) {
             (cVar2 = (**(code **)(*piVar7 + 0x18))("disconnect",0), cVar2 != '\0')) {
             (eVar3 = _wcscpy_s((wchar_t *)&DAT_0045875a,0x2fb,L"<program name unknown>"),
             (eVar3 = _wcscpy_s((wchar_t *)&DAT_10045fd2,0x2fb,L"<program name unknown>"),
             (eVar3 = _wcscpy_s((wchar_t *)&DAT_106d4892,0x2fb,L"<program name unknown>"),
             (eVar3 = _wcscpy_s((wchar_t *)&DAT_106fa23a,0x2fb,L"<program name unknown>"),
             (eVar3 = _wcscpy_s((wchar_t *)&DAT_10835d72,0x2fb,L"<program name unknown>"),
             (eVar3 = _wcscpy_s((wchar_t *)&DAT_10848772,0x2fb,L"<program name unknown>"),
             (float *)"Failed to initialize templated entity with mapdata: %s\n";
             (iVar2 = __stricmp(_Str1,".gz"), iVar2 != 0)))))) {
             (iVar4 = FUN_102659b0(pcVar2,".ps3."), iVar4 == 0)) {
             (iVar8 = FUN_10399410(pcVar6,"auto_in_combat",0xe), iVar8 == 0)) {
             (int)puVar3 + 5,(int)puVar2 + 5,"Client",uVar7,uVar8,uVar9,uVar10,uVar11);
             (int)puVar3 + 5,(int)puVar2 + 5,"Server",uVar8,uVar9,uVar10,uVar11,uVar12);
             (pbVar4 = (byte *)FUN_1042f3d0(this_00,(uint *)"command",0), pbVar4 != (byte *)0x0)) {
             (pcVar6 = _strpbrk(_Str,"*?"), param_1 = puVar5, pcVar6 == (char *)0x0)) {
             (this_02 = FUN_1039d370(this_01,"Preview"), this_02 != (uint *)0x0)) {
             (uVar3 = FUN_10399710(pbVar5,(byte *)"bodyque"), uVar3 != 0)) {
             (uVar4 = FUN_10399710((byte *)puVar6,(byte *)"particles"), uVar4 != 0)) {
             (uVar4 = FUN_10399710(pbVar5,(byte *)"soundent"), uVar4 != 0)) {
             (uVar5 = FUN_10399710((byte *)"Interrupts",local_418), uVar5 != 0))) {
             ,"Client",uVar3);
             ,"Server",puVar5,param_1,puVar4);
             0xff,&DAT_104ef180,"voice");
             FUN_100ff990(local_40,"m_flFrozenPerHitbox[0]",&DAT_0000144c,4,0,FUN_100ffbf0);
             FUN_100ff990(local_40,"m_flPostProcessParameters[0]",0x1440,4,0,FUN_100ffbf0);
             FUN_100ffb30(local_40,"m_vServerControlPoints[0]",0x1554,0xc,0,FUN_100ffca0);
             FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting \'{\', didn\'t find it!");
             FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting \'{\', didn\'t find it!");
             FUN_10434510(&DAT_1071bd30,(short *)((int)&param_3 + 2),(undefined4 *)"Close action.");
             FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting \'{\', didn\'t find it!");
            "%-40s: %4.1f MB allocated (%4.1f MB peak), %4.1f MB committed, %4.1f MB reserved\n");
            "***** HEAP IS CORRUPT (free compromised for block size %d,in %s heap, possible write after free *****)\n"
            "CParticleMgr::LevelInit:  Manifest \'%s\' contains a particle file \'%s\' that\'s not under the particles directory. Custom particles must be placed in the particles directory.\n"
            "CUIGameData::OpenWaitScreen - wait screen is already open, without being closed first - ignoring (probably used in friend join!\n"
            "Cannot change %s while the server is running and sv_cheats = 0. To change settings set sv_cheats 1\n"
            "Rejecting connection request from %s, client\'s cross-play platform is unrecognized.\n"
            "VIP_Think()::running towards nearest car/player, with no valid car/player to run to, find new car/player\n"
            "\n***\nCChoreoEvent::SCRIPT - FAILED to create private ScriptScope. ABORTING script call\n***\n"
            ("Auto-setup keys 1/2 second","keyshalf",param_1,0);
            ("Can\'t condump! Too many existing condump output files in the gamedir!\n");
            ("LabelOption3",2 < *(int *)((int)this + 0x44c));
            ("LabelOption4",3 < *(int *)((int)this + 0x44c));
            ("LabelOption5",4 < *(int *)((int)this + 0x44c));
            ("Linear Interp Angles","smoothlinearinterpolateangles",param_1,0);
            ("Linear Interp Origin","smoothlinearinterpolateorigin",param_1,0);
            ("Look At Points Spline","lookatpointsspline",param_1,0);
            ("Option1CountLabel",*(undefined *)((int)this + 0x47c));
            ("Option2CountLabel",*(undefined *)((int)this + 0x47c));
            ("Option3Background_Selected",2 < *(int *)((int)this + 0x44c));
            ("Option4Background_Selected",3 < *(int *)((int)this + 0x44c));
            ("Option5Background_Selected",4 < *(int *)((int)this + 0x44c));
            ("Smooth Selection Origin","smoothselectionorigin",param_1,0);
            ("Two Point Origin Ease In","origineasein",param_1,0);
            ("Two Point Origin Ease In/Out","origineaseboth",param_1,0);
            ("Two Point Origin Ease Out","origineaseout",param_1,0);
            ("VoteCountLabel",*(undefined *)((int)this + 0x47c));
            ("d:\\projects\\ti\\release\\ti_rel\\src\\engine\\cl_ents_parse.cpp",0x232,local_10);
            ("d:\\projects\\ti\\release\\ti_rel\\src\\engine\\cl_ents_parse.cpp",0x290,local_c);
            ("d:\\projects\\ti\\release\\ti_rel\\src\\engine\\cl_main.cpp",0x216,0);
            ("d:\\projects\\ti\\release\\ti_rel\\src\\engine\\cl_main.cpp",0x21b,1);
            ("d:\\projects\\ti\\release\\ti_rel\\src\\game\\client\\cdll_client_int.cpp",0xb92,uVar4
            ("d:\\projects\\ti\\release\\ti_rel\\src\\game\\client\\cdll_client_int.cpp",uVar4,0);
            ("helicopter_controllable","C_BaseHelicopterControllable",0x5980,FUN_102cb390);
            ("realwheeled_controllable","C_RealWheeledControllable",0x9c80,FUN_102dc950);
            ("scripts/botnames.txt",&DAT_1045b2f0,local_80,0,0,0);
            ((*(char **)((int)pvVar1 + 0x5c) == "physics_prop" ||
            ((CVProfile *)g_VProfCurrentProfile_exref,"build unique model list",2,"Unaccounted",
            (*(undefined4 *)((int)pvVar2 + 0x12260),L"otherplayersWWW",&param_1,&param_6);
            (*(undefined4 *)((int)this + 0x268),"vgui/hud/defend_zone_red",1,0);
            (*(undefined4 *)((int)this + 0x26c),"vgui/hud/defend_zone_connector",1,0);
            (*(undefined4 *)((int)this + 0x270),"vgui/hud/defend_zone_white",1,0);
            (*(undefined4 *)(param_1 + 0x3f0),"vgui/vertical_bar_outline",1,0);
            (*(undefined4 *)(param_1 + 0x41b0),"vgui/hud/defend_zone_red",1,0);
            (*(undefined4 *)(param_1 + 0x41b4),"vgui/hud/defend_zone_white",1,0);
            (*(undefined4 *)(param_1 + 0x41b8),"vgui/hud/defend_zone_connector",1,0);
            (**(code **)((int)*this + 0x94))("vehiclescript","scripts/vehicles/helicopter.txt");
            (**(code **)(**ppiVar4 + 0x58))("leaving splitscreen");
            (**(code **)(*DAT_1067e240 + 0x68))(0,"activator",piVar7);
            (**(code **)(*DAT_1067e240 + 0x68))(0,"caller",piVar7);
            (**(code **)(*DAT_1067e240 + 0x84))(0,"activator");
            (**(code **)(*DAT_10681754 + 0x50))(local_134,local_33c,"PROFILE");
            (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,uVar4,"%s: %0.3fMB\n",pcVar1);
            (**(code **)(*DAT_10730cc4 + 0x1bc))("exec joy_configuration_sc_absolute.cfg");
            (**(code **)(*DAT_10730cc4 + 0x1c0))("demo_stop\n");
            (**(code **)(*local_18 + 0x34))("subject",iVar2);
            (**(code **)(*param_1 + 0xc))(param_1,"expecting {\n");
            (**(code **)(*piVar3 + 0x14))("-startmap");
            (**(code **)(*piVar3 + 0x34))("userid",uVar4);
            (**(code **)(*piVar4 + 8))("radialmenupanel",0);
            (**(code **)(*piVar5 + 0x34))("userid",uVar6);
            (**(code **)(*piVar5 + 0x34))(piVar5,"Punting bot, server is hibernating");
            (**(code **)(*piVar5 + 0x40))("networkid",&DAT_103236cf);
            (**(code **)(*piVar9 + 0xc4))(piVar9,param_1,"#Valve_Reject_Reserved_For_Lobby");
            (**(code **)(*this + 0x94))("vehiclescript");
            (**(code **)(iVar1 + 0x388))("#Loadout_VIPESCAPE_CT");
            (**(code **)(iVar1 + 0x388))("#Loadout_VIPESCAPE_CT_MAFIA");
            (**(code **)(iVar1 + 0x388))("#Loadout_VIPESCAPE_Ter");
            (**(code **)(iVar1 + 0x388))("#Loadout_VIPESCAPE_Ter_MAFIA");
            (**(code **)*DAT_106466ac)("game_intermission",0);
            (**local_1c)(DAT_10730cc4,local_c,"pose_param %s: %f",iVar11 + (int)piVar5,
            (*pcVar10)(&local_8,"Unbound obsolete command \"%s\"\n",puVar11);
            (*pcVar3)("Error: MixGroup %s, in LayerTriggers cannot be resolved!\n",&DAT_10674cf0);
            (*pcVar8)("ERROR: Dynamic link dest WC node %d not found\n",piVar9[0xef]);
            (*pcVar8)("ERROR: Dynamic link source WC node %d not found\n",piVar9[0xee]);
            (0,"Properties","#TF_Vote_Column_Properties",8,(int)((double)param_1[0xae] * 0.3),0);
            (0,&DAT_10550448,"#TF_Vote_Column_Name",0,(int)((double)param_1[0xae] * 0.6),0);
            (1,"Action","#P2_Actions_Title",4,*(undefined4 *)(param_1 + 0x858),0);
            (1,"Button","#GameUI_KeyButton",4,*(undefined4 *)(param_1 + 0x85c),0);
            (2,"models/props_containers/ammo_rocket_crate-1_STATIC.mdl",param_2,param_3,0);
            (2,"models/props_vehicles/cars/broken_parts/blown_wheel_p1.mdl",param_2,param_3,0);
            (2,"models/props_vehicles/cars/broken_parts/blown_wheel_p2.mdl",param_2,param_3,0);
            (2,"models/props_vehicles/cars/broken_parts/blown_wheel_p3.mdl",param_2,param_3,0);
            (2,"models/props_vehicles/cars/broken_parts/steering_wheel-1.mdl",param_2,param_3,0);
            (2,"models/props_vehicles/cars/broken_parts/undercarriage-1.mdl",param_2,param_3,0);
            (2,"models/props_vehicles/cars/broken_parts/undercarriage-2.mdl",param_2,param_3,0);
            (2,"models/vehicles/airport/drivable/refuel_truck-1_destroyed.mdl",param_2,param_3,0);
            (2,"models/vehicles/airport/drivable/refuel_truck-1_gib1.mdl",param_2,param_3,0);
            (2,"models/vehicles/airport/drivable/refuel_truck-1_gib2.mdl",param_2,param_3,0);
            (2,"models/vehicles/airport/drivable/refuel_truck-1_gib3.mdl",param_2,param_3,0);
            (2,"models/vehicles/airport/drivable/refuel_truck-1_part1.mdl",param_2,param_3,0);
            (2,"models/vehicles/airport/drivable/refuel_truck-1_part2.mdl",param_2,param_3,0);
            (2,"models/vehicles/airport/drivable/refuel_truck-1_part3.mdl",param_2,param_3,0);
            (2,"models/vehicles/airport/drivable/refuel_truck-1_part4.mdl",param_2,param_3,0);
            (2,"models/vehicles/airport/drivable/refuel_truck-1_part5.mdl",param_2,param_3,0);
            (2,"models/vehicles/helicopters/bell212/bell212_destroyed.mdl",param_2,param_3,0);
            (DAT_106466ac,1,"%.2f   Step %d",(double)*(float *)(DAT_10646018 + 0x10),iVar3);
            (DAT_10681754,iVar1,"$body \"Body\" \"simpleworldmodel%s.smd\"\n",pcVar2);
            (DAT_10681754,iVar1,"$cdmaterials \"models/maps/%s\"\n",param_2);
            (DAT_10681754,iVar1,"$modelname \"maps/%s/simpleworldmodel%s.mdl\"\n",param_2,pcVar2);
            (DAT_10681754,iVar1,"$sequence \"idle\" \"simpleworldmodel%s.smd\" fps 30\n",pcVar2);
            (DAT_10681754,iVar1,"// -- generated by buildmodelforworld --\n",param_2);
            (DAT_106cb7e8,*this,"f %d %d %d %d\n",iVar3,iVar2,iVar1,iVar7 + 3);
            (DAT_106cb7e8,*this,"f %d %d %d %d\n",iVar6,iVar3,iVar7 + 3,iVar4);
            (DAT_106cb7e8,*this,"f %d %d %d %d\n",iVar7 + 3,iVar1,iVar5,iVar4);
            (DAT_106cb7e8,*this,"v %f %f %f\n",(double)*param_3,(double)param_3[1],
            (DAT_106cb7e8,*this,"v %f %f %f\n",(double)*param_3,(double)param_4[1],
            (DAT_106cb7e8,*this,"v %f %f %f\n",(double)*param_4,(double)param_3[1],
            (DAT_106cb7e8,*this,"v %f %f %f\n",(double)*param_4,(double)param_4[1],
            (DAT_106cb7e8,iVar1,"\t\"include\" \"materials/engine/simpleworldmodel.vmt\"\n");
            (DAT_106cb7e8,iVar1,"\t\t\"$albedo\" \"models/maps/%s/simpleworldmodel_albedo\"\n",
            (DAT_106cb7e8,iVar1,"\t\t\"$basetexture\" \"models/maps/%s/simpleworldmodel\"\n",param_2
            (DAT_106cb7e8,iVar1,"\t\t\"$lightmap\" \"models/maps/%s/simpleworldmodel_lightmap\"\n",
            (DAT_106cb7e8,param_1,"0 0.000000 0.000000 0.000000 1.570796 0.000000 0.000000\n");
            (DAT_106cb850,*(undefined4 *)(param_1 + 0x254),600,0x22,uVar3,uVar2,0,0xff,"%5.1f ms",
            (DAT_10730c88 = (*(code *)param_1)("VEngineClientStringTable001",0), DAT_10730c88 != 0))
            (DAT_10730cc4,10,"Warning: overflowed CClientRenderablesList group %d",param_4);
            (DAT_10730cc8 = (*(code *)param_1)("VEngineEffects001",0), DAT_10730cc8 != 0)) &&
            (DAT_10730d00 = (*(code *)param_1)("GAMEEVENTSMANAGER002",0), DAT_10730d00 != 0)) &&
            (DAT_107c09f8,param_1,"// DO NOT EDIT, GENERATED BY HALF-LIFE\r\n");
            (DAT_107c09f8,param_1,"// File generated:  %.19s %s\r\n",local_6c,&local_8);
            (DAT_107c09f8,param_1,"// Half-Life Server Configuration Settings\r\n");
            (DAT_107c09f8,param_1,"//\r\n//\r\n// Cvar\t-\tSetting\r\n\r\n");
            (DAT_107c09f8,param_1,"VERSION %.1f\r\n\r\n",0x3ff0000000000000);
            (_DAT_10730cf8 = (*(code *)param_1)("FileLoggingListener001",0), _DAT_10730cf8 != 0))))
            (bVar1 = FUN_100a6de0(this_00,"prop_physics"), bVar1)))) {
            (local_c._4_4_,param_2,"%f EmitSound:  Raw wave emitted \'%s\' (ent %i) (vol %f)\n",
            (param_1 != (uint *)"shards")) &&
            (param_1,"end %f %f %f",(double)*(float *)(iVar3 + 0x9c),
            (param_1,"end %f %f %f",(double)*(float *)(param_1[2] + 0x9c),
            (param_1,"start %f %f %f",(double)*(float *)(iVar3 + 0x9c),
            (param_1,"start %f %f %f",(double)*(float *)(iVar4 + 0x9c),
            (psVar4 = (short *)FUN_1042f5c0(local_50,(uint *)"ActionText",(uint)&DAT_104ef75c),
            (uVar12 = FUN_10265f50(pbVar4,(byte *)"import_stack"), this = local_c, uVar12 == 0)) &&
            (uVar5 = FUN_10399710(pbVar6,(byte *)"client"), uVar5 == 0)) {
            *(char **)(puVar11 + -8) = "Entity(%d): %s - %f\n";
            *(char **)(puVar15 + -8) = "Reload Interface";
            *(char **)(puVar8 + -8) = "::ITEM URL:::ID: %i\n";
            COM_TimestampedLog("Factories - Finish");
            COM_TimestampedLog("InitGameSystems - End");
            COM_TimestampedLog("InitGameSystems - Start");
            COM_TimestampedLog("ParticleMgr()->Init");
            COM_TimestampedLog("soundemitterbase->Connect");
            ConColorMsg((Color *)&DAT_106a8e20,"GAME INSTRUCTOR: ");
            ConColorMsg((Color *)&DAT_106a8e24," )\n");
            ConColorMsg((Color *)&DAT_106a8e24,")->AmmoEmpty() ");
            ConColorMsg((Color *)&DAT_106a8e24,")->AmmoFull() ");
            ConColorMsg((Color *)&DAT_106a8e24,".\n");
            ConColorMsg((Color *)&DAT_106a8e24,"Local player died...\n");
            ConColorMsg((Color *)&DAT_106a8e24,"\tListen for open event ");
            ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetWeaponInSlot( ");
            ConColorMsg((Color *)&DAT_106a8e28,"%i ",(int)(float)param_6,puVar25);
            ConColorMsg((Color *)&DAT_106a8e2c,"\"%s\"",puVar3);
            ConColorMsg((Color *)&DAT_106a8e2c,"\tAll elements returned true. Opening!\n");
            ConColorMsg((Color *)&DAT_106a8e30,"\tAll elements returned true. Closing!\n");
            ConColorMsg((Color *)&DAT_106a8e30,"\tPrevious element returned false.\n");
            ConColorMsg((Color *)&DAT_106a8e34,"%i ",(int)(float)param_6,puVar25);
            ConColorMsg((Color *)&DAT_106a8e34,"\tAll elements returned true. Succeeding!\n");
            ConColorMsg((Color *)&local_8,"Bound \"%s\" to key %s\n",puVar11,uVar5);
            ConColorMsg((Color *)&param_1,"%.3f:  Sending UDP connect to %s IP %s\n",DAT_106a5010,
            ConColorMsg((Color *)&param_3,"  Received from %llx %u bytes on %s\n",local_c,local_8,
            ConDMsg("Bad connectionless packet ( CL \'%c\') from %s.\n",param_1,pcVar18);
            ConDMsg("Object touching 3 areas at %f %f %f\n");
            ConDMsg("Socket bound to non-default port %i because original port was already in use.\n"
            ConDMsg("execing %s\n",pcVar14);
            ConMsg(" %i refs, first %.2f mru %.2f\n",uVar1,dVar9);
            ConMsg(" %i refs, first %.2f mru %.2f\n",uVar4,dVar8);
            ConMsg(" never used\n");
            ConMsg("%s:reconnect\n",pcVar5);
            ConMsg("Bad server address %s(%s)\n",puVar4,puVar1);
            ConMsg("Can\'t savegame without a player!\n");
            ConMsg("Client \"%s\" connected (%s).\n",uVar7);
            ConMsg("Could not get IHLTVDirector interface from library %s",param_1);
            ConMsg("Could not get IReplayDirector interface from library %s",param_1);
            ConMsg("Token Table Save/Restore overflow!");
            ConMsg("WARNING! NET_CloseSocket: %s\n",pcVar3);
            ConMsg("WARNING! NET_CloseSocket: %s\n",pcVar4);
            ConMsg("WARNING! NET_CloseSocket: %s\n",pcVar6);
            ConMsg("[%d] \"%s\" = \"%s\"\n",iVar4,uVar3);
            ConMsg("\"%s\" = \"%s\"\n",uVar3);
            ConMsg("log:  unknown parameter %s, \'on\' and \'off\' are valid\n",puVar4);
            ConMsg("removeip:  filter removed for %s\n",puVar4);
            ConMsg("warning: Vis decompression overrun\n");
            DAT_106ac640 = (*DAT_106abcdc)("ServerGameClients003",0);
            DAT_107d4868 = GetProcAddress(DAT_107d4898,"NP_RegisterWindowHandle");
            DAT_107d486c = GetProcAddress(DAT_107d4898,"NP_UnregisterWindowHandle");
            DAT_107d4870 = GetProcAddress(DAT_107d4898,"NP_RegisterProgramProfileID");
            DAT_107d4874 = GetProcAddress(DAT_107d4898,"NP_QueryVersion");
            DAT_107d4878 = GetProcAddress(DAT_107d4898,"NP_RequestData");
            DAT_107d4880 = GetProcAddress(DAT_107d4898,"NP_GetData");
            DAT_107d4888 = GetProcAddress(DAT_107d4898,"NP_StopCursor");
            DAT_107d4890 = GetProcAddress(DAT_107d4898,"NP_StartDataTransmission");
            DAT_107d4894 = GetProcAddress(DAT_107d4898,"NP_StopDataTransmission");
            DName::operator_((DName *)&local_10,"const");
            DName::operator__((DName *)&local_20,"::");
            DName::operator__((DName *)&local_c,", ");
            DevMsg("%s ");
            DevMsg("%s %s : src %d : channel %d : %d dB : vol %.2f : time %.3f\n");
            DevMsg("%s");
            DevMsg("%s: %s",pcVar7,local_38);
            DevMsg("%s::%s\n",*(int *)(uVar2 + 0x510),*(int *)((int)this + 0xd8));
            DevMsg("Adding panel %s to state %s\n",uVar5);
            DevMsg("Already hit Prop: %s\n",uVar7);
            DevMsg("Area #%d %s is blocked\n",piVar5[0x23],(int)puVar6 + 5,puVar10,pcVar11,dVar9,
            DevMsg("Area #%d %s is blocked\n",piVar7[0x23],(int)puVar6 + 5,uVar13,dVar9);
            DevMsg("BroadcastMessage: Reliable filter message overflow for client %s",uVar5);
            DevMsg("CGameEventManager:: unknown type \'%s\' for key \'%s\' [%s].\n",pbVar8,puVar3,
            DevMsg("CHLTVClient::ExecuteStringCommand: Unknown command %s.\n");
            DevMsg("Couldn\'t get the launcher callback interface!! Autologin is not supported!!\n")
            DevMsg("DispInfo_BatchDecals: material is NULL, decal %i.\n",uVar6);
            DevMsg("Don\'t know how to save model for physics object (class \"%s\")\n",puVar10);
            DevMsg("Don\'t know how to save model for physics object (class \"%s\")\n",uVar6);
            DevMsg("Dynamic Link Error: (%s) unable to form between nodes %d and %d\n");
            DevMsg("ERROR! Vacating an empty slot!\n");
            DevMsg("ERROR: LoadSchd (%s): (%s) Malformed AI Schedule.  Expecting \':\' after type \'ACTIVITY.\n"
            DevMsg("ERROR: LoadSchd (%s): (%s) Unknown activity %s!\n",param_1,puVar7[0xb],pbVar4);
            DevMsg("FCVAR_CHEAT cvars reverted to defaults.\n");
            DevMsg("Forcing ROll with angle diff of %f\n");
            DevMsg("I FOUND IMEI. I AM SEEKING IMEI.\n");
            DevMsg("MixLayers %s:\n",&DAT_10674cf0);
            DevMsg("PARSE ERROR!!! dsp_presets.txt: unexpected \'}\' \n");
            DevMsg("Parsing MixGroups:\n");
            DevMsg("Rejecting connection request from %s (reservation cookie 0x%llx), server is reserved with reservation cookie 0x%llx for %.1f more seconds\n"
            DevMsg("RunAnimation calling ResetSequence %s\n",pcVar5);
            DevMsg("STATE_APPROACH_NEARBY_CT:Find Goal\n");
            DevMsg("SoundMixer %s:\n",&DAT_10674cf0);
            DevMsg("The Navigation Mesh was built using a different version of this map.\n");
            DevMsg("WARNING: BackupPlayer trying to back player into a bad position - client %d\n",
            DevMsg("Warning! Client physic props overflow *max %i).\n",iVar4);
            DevMsg("[CARDEBUG] NEW VEHICLEUPDATE::POS: [%s] ANG: [%s]\n",(int)puVar7 + 5,
            DevMsg("[CARDEBUG] NEW VEHICLEUPDATE::VEL: [%s]\n",(int)puVar6 + 5,puVar10,pcVar11,dVar9
            DevMsg("\n%s    ",iVar3);
            DevMsg("\n%s:%s: ");
            DevMsg("adding avatar [%i] to list: %f %f %f %f\n",iVar11);
            DevMsg("dsp: %3.2f ",(double)(float)local_8[iVar8 + 0x120]);
            DevMsg("lvl: %3.2f ",(double)(float)local_8[iVar8 + 0xa0]);
            DevMsg("mute: %3.2f\n");
            DevMsg("removing glow from index: %i\n",
            DevMsg("solo: %3.2f ",(double)(float)local_8[iVar8 + 0x1a0]);
            DevMsg("vol: %3.2f ",(double)(float)local_8[iVar8 + 0x20]);
            DevMsg("we should dispatch kill_vip\n");
            DevMsg("we should dispatch kill_vip_car\n");
            DevMsg(1,"CMaterialFloatLerpProxy::OnBind \"%s\" %s=%f %d\n",uVar2);
            DevMsg(1,"ScheduledFollowPath to goal entity %s failed\nCan\'t execute script %s\n",
            DevMsg(2,"out of voice sources, won\'t lipsync %s\n",uVar6);
            DevWarning("%s missing activity \"%s\" needed by weapon\"%s\"\n",puVar8,pcVar5,puVar6);
            DevWarning("Bogus object in Ragdoll Prop\'s ragdoll list!\n");
            DevWarning("Invalid event field name \"%s\".\n");
            DevWarning("The Navigation Mesh was built using a different version of this map.\n");
            Error("FIELD_EMBEDDED in flattened field list!");
            Error("SendTable_BuildHierarchy: overflowed non-datatable props with \'%s\'.",
            Error("SetupArrayProps_R: array prop \'%s\' is at index zero.",*puVar3);
            FUN_0040f490(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Socket write errored %d.");
            FUN_00420e80(&DAT_00447480,"KV Conditional Evaluation Error");
            FUN_10021180(local_178,(byte *)"[Nav] %s");
            FUN_10021180(local_18c,(byte *)"[Nav] %s");
            FUN_1005bfa0((byte *)"(%7.4f : %30s : %5.3f : %4.2f : %1d)\n");
            FUN_10076820(pvVar1,"PostNetworkDataReceived() Ack Errors",0xffffffff,2);
            FUN_100dae40(local_18,(byte *)"%s = %6d (%6d:%6d)\n");
            FUN_100dae40(local_18,(byte *)"%s = %d\n");
            FUN_100dae40(param_1[2] * local_c + iVar3,(byte *)"(%d, %d), Alpha: %f\n");
            FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
            FUN_1013aba0(pvVar9,(byte *)"targetname",local_86c);
            FUN_1013b3b0(pvVar9,(byte *)"targetname",local_86c,0);
            FUN_10146100((int)"explode_apple",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_apple_green",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_banana",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-10",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-11",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-12",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-2",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-3",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-4",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-5",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-6",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-7",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-8",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_beer-9",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_can_broth-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_can_coconut-1",*param_1,*(undefined4 *)(param_1 + 1),local_18
            FUN_10146100((int)"explode_can_mushroom-1",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"explode_can_pop-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_can_pop-1b",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_can_pop-2",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_can_pop-2b",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_can_pop-2c",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_can_toddypalm-1",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"explode_cantaloupe-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_choco_bar-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_cookies-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_crackers-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_food_fry_chicken",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"explode_food_noodles1",*param_1,*(undefined4 *)(param_1 + 1),local_18
            FUN_10146100((int)"explode_food_noodles2",*param_1,*(undefined4 *)(param_1 + 1),local_18
            FUN_10146100((int)"explode_food_ragu1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_food_ricedish1",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"explode_food_ricedish2",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"explode_food_sushi",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_juice-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_juice-2",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_juice-3",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_juice-4",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_juice-5",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_juice-6",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_juice-7",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_lasagna-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_lemon-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_liquid_beer3",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_liquid_milk",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_mango-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_pastries-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_pear-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_pizza-1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_raw_beef",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_raw_chicken",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_raw_veggies",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explode_water_bottle-1",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"explodefx_cardboard",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"explodefx_plastic_black",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"explodefx_plastic_white",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"explosion(200)",local_1c,local_14,CONCAT44(uStack12,local_10),local_8
            FUN_10146100((int)"explosion(200)",local_90,local_88,CONCAT44(uStack12,local_10),local_8
            FUN_10146100((int)"explosion(200)",local_9c,local_94,CONCAT44(uStack12,local_10),local_8
            FUN_10146100((int)"fx_glasswindow_break",CONCAT44(fStack12,local_10),local_8,local_60,
            FUN_10146100((int)"impact_fx_batteries",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_candy",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_candyjelly",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_cds",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_cereal",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_chinesefood",*param_1,*(undefined4 *)(param_1 + 1),local_18
            FUN_10146100((int)"impact_fx_chipsrod",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_chipsround",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_chipstriangle",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"impact_fx_detergent_liquid",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"impact_fx_detergent_liquid2",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"impact_fx_detergent_powder1",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"impact_fx_electronics",*param_1,*(undefined4 *)(param_1 + 1),local_18
            FUN_10146100((int)"impact_fx_floppy_disk",*param_1,*(undefined4 *)(param_1 + 1),local_18
            FUN_10146100((int)"impact_fx_fruitsalad",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_glass",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_hygene_items1",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"impact_fx_hygene_items1_dry",*param_1,*(undefined4 *)(param_1 + 1),
            FUN_10146100((int)"impact_fx_italianfood",*param_1,*(undefined4 *)(param_1 + 1),local_18
            FUN_10146100((int)"impact_fx_metal",
            FUN_10146100((int)"impact_fx_nuts_bolts",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_peanuts",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_pens",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_pills",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_rackitems1",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_rackitems2",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_rackitems3",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_rackitems4",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_socks",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_10146100((int)"impact_fx_vitamins",*param_1,*(undefined4 *)(param_1 + 1),local_18,
            FUN_1014a8a0(this,(byte *)"Addip: \"%s<%i><%s><>\" %s \"%s\" by \"%s\" (IP \"%s\")\n");
            FUN_1014a8a0(this,(byte *)"Removeip: \"<><><>\" was unbanned by \"%s\" (IP \"%s\")\n");
            FUN_10155b90((int)this,(byte *)"Request denied, invalid message protocol.");
            FUN_1017bb60('\x01',(byte *)"Cannot continue without model %s, disconnecting\n");
            FUN_1017f620(param_1,"Dog.Run_Concrete",0,0);
            FUN_1017f8a0(local_94,0.0,"fx.bricks_explode",param_3,0,0);
            FUN_1017f8a0(local_94,0.0,"fx.plastic_pails_explode",param_3,0,0);
            FUN_1017f8a0(local_94,0.0,"fx.water_barrel_explode",param_3,0,0);
            FUN_101a5c10((byte *)"Mod_LoadLeafMinDistToWater: funny lump size in %s");
            FUN_101a5c10((byte *)"Reliable message (type %i) discarded.");
            FUN_101a5c10((byte *)"SV_CreateBaseline: SendTable_Encode returned false (ent %d).\n");
            FUN_101c7240(local_2c,"Bot.EditSwitchOn",0,0);
            FUN_101c7240(param_1,"Player.Wade",0,0);
            FUN_101c7240(param_1,"Player.Whistle_Dog_Follow",0,0);
            FUN_101c7240(this,"EDIT_DELETE",0,0);
            FUN_101c7240(this_00,"EDIT_MARK.Disable",0,0);
            FUN_101f1360(local_14,(int)"cl_steam_overlay_position");
            FUN_101f1360(local_14,(int)"joy_invertx");
            FUN_101f1360(local_14,(int)"ss_splitmode");
            FUN_10208000(&PTR_vftable_106b5870,"ingame_planning",
            FUN_10265920((char *)param_1,param_2,(byte *)"unnamed");
            FUN_10265920(local_124,0x104,(byte *)"%s.ztmp");
            FUN_10265920(local_218,0x200,(byte *)"%s/%s");
            FUN_10265920(local_224,0x104,(byte *)"%s%s.wav");
            FUN_10265920(local_314,0x200,(byte *)"%s\\%s.lst");
            FUN_10265920(local_90,0x80,(byte *)"%s : %s");
            FUN_10265920(param_2,param_3,(byte *)"!%s%d");
            FUN_10265960(local_dc,0x3f,(ushort *)L"%i %s");
            FUN_10265b40((char *)local_a0,",",0x80,0xffffffff);
            FUN_10265b40(local_204,", ",0x200,0xffffffff);
            FUN_10265b40(local_844,",",0x800,0xffffffff);
            FUN_1026b080(&DAT_1041bbf8,"KV Conditional Evaluation Error");
            FUN_1026b2f0(local_10,(uint *)"panel",(uint)piVar7);
            FUN_102728c0(&uStack100,"effects/halo");
            FUN_102728c0(&uStack100,"effects/halo_diamond");
            FUN_102868b0((int)pfVar15,"player_civkill",pcVar20,0);
            FUN_102bedf0(*(void **)((int)this + 0x230),(char *)0x0,"vcc",0,pcVar8,pcVar10,uVar2);
            FUN_102bf1c0(*(void **)((int)this + 0x230),0,(char *)0x0,"vcc",(uint)(DAT_106cb81c != 0)
            FUN_102f3db4((byte *)"Blending mip%d %dx%d to");
            FUN_103444b0((byte *)"RagdollImpact",(uint *)&local_190);
            FUN_103444b0((byte *)"gunshotsplash",&local_e8);
            FUN_10362c70((int)"RagdollImpact",&local_1a0);
            FUN_10368590(local_28,(int)"Announcer");
            FUN_10368590(local_28,(int)"Radio");
            FUN_10368590(local_38,(int)"EndOfMatch");
            FUN_10368590(local_48,(int)"EnemyHit");
            FUN_10368590(local_4c,(int)"VoteStart");
            FUN_1038daa0(local_58,(int *)"dist_from_issuer",(int)puVar5,uVar13);
            FUN_1038daa0(local_58,(int *)"dist_from_issuer",(int)puVar8,uVar6);
            FUN_10399190(local_dc,0x3f,(ushort *)L"%i %s");
            FUN_10399370(local_108,".bsp",0x104,0xffffffff);
            FUN_10399370(local_208,"_XMAS",0x200,0xffffffff);
            FUN_10399370(local_b4,"AVOID ",0x50,0xffffffff);
            FUN_10399370(local_b4,"BLOCKED ",0x50,0xffffffff);
            FUN_10399370(local_b4,"BLOCKED_DOG ",0x50,0xffffffff);
            FUN_10399370(local_b4,"BLOCKED_HOSTAGE ",0x50,0xffffffff);
            FUN_10399370(local_b4,"BLOCKED_PLAYER ",0x50,0xffffffff);
            FUN_10399370(local_b4,"CHECK FOR OBSTACLE",0x50,0xffffffff);
            FUN_10399370(local_b4,"CLIFF ",0x50,0xffffffff);
            FUN_10399370(local_b4,"CROUCH ",0x50,0xffffffff);
            FUN_10399370(local_b4,"DAMAGING ",0x50,0xffffffff);
            FUN_10399370(local_b4,"DONT_HIDE ",0x50,0xffffffff);
            FUN_10399370(local_b4,"JUMP ",0x50,0xffffffff);
            FUN_10399370(local_b4,"NODOG ",0x50,0xffffffff);
            FUN_10399370(local_b4,"NOHOSTAGE ",0x50,0xffffffff);
            FUN_10399370(local_b4,"NO_JUMP ",0x50,0xffffffff);
            FUN_10399370(local_b4,"OBSTACLE ",0x50,0xffffffff);
            FUN_10399370(local_b4,"OBSTRUCTED ",0x50,0xffffffff);
            FUN_10399370(local_b4,"PLAYERCLIP ",0x50,0xffffffff);
            FUN_10399370(local_b4,"PRECISE ",0x50,0xffffffff);
            FUN_10399370(local_b4,"RUN ",0x50,0xffffffff);
            FUN_10399370(local_b4,"STAIRS ",0x50,0xffffffff);
            FUN_10399370(local_b4,"STAND ",0x50,0xffffffff);
            FUN_10399370(local_b4,"STOP ",0x50,0xffffffff);
            FUN_10399370(local_b4,"TRANSIENT ",0x50,0xffffffff);
            FUN_10399370(local_b4,"UNDERWATER ",0x50,0xffffffff);
            FUN_10399370(local_b4,"WALK ",0x50,0xffffffff);
            FUN_10399450(local_108,(int)"maps/",0x104);
            FUN_103996f0((int)local_148,"Input");
            FUN_1039fae0(&DAT_105e68f8,"KV Conditional Evaluation Error");
            FUN_1039fd00(local_10,(uint *)"panel",(uint)piVar7);
            FUN_1042cc70((char *)abStack340,".vmt",0x104);
            FUN_1042cc70((char *)local_154,".vmt",0x104);
            FUN_1042d940((char *)&local_2b8,0x104,(byte *)"Entity.%s");
            FUN_1042d940((char *)abStack340,0x104,(byte *)"materials/vgui/logos/%s");
            FUN_1042d940((char *)local_154,0x104,(byte *)"materials/vgui/logos/%s");
            FUN_1042d940(local_214,0x200,(byte *)"%s %s");
            FUN_1042d940(local_224,0x200,(byte *)"%s died.");
            FUN_1042d940(local_224,0x200,(byte *)"%s suicided.");
            FUN_1042d980(local_dc,0x3f,(ushort *)L"%i %s");
            FUN_1042db60(local_48c,", ",0x43d - iVar11,sVar15);
            FUN_1042dc40((char *)&local_2b8,(int)"World.BombZone",0x104);
            FUN_1042e330(local_14,"ingame_playing");
            FUN_1042f3d0(pvVar2,(uint *)"ingame_suspense",(uint)"suspense");
            FUN_10431760(&DAT_106facc8,"KV Conditional Evaluation Error");
            FUN_10431960(local_c,(uint *)"level",uVar8);
            FUN_10431960(puVar5,(uint *)"display",local_10);
            FUN_10431960(puVar8,(uint *)"index",uVar4);
            FUN_104319d0(local_10,(uint *)"panel",(uint)piVar7);
            FUN_104319f0(pvVar3,(uint *)"Binding",(&PTR_s__jump_106b58dc)[uVar7 * 2]);
            FUN_104319f0(this_00,(uint *)"Action",local_13c);
            FUN_104319f0(this_00,(uint *)"Binding",(char *)local_43c);
            FUN_104319f0(this_00,(uint *)"award",pcVar7);
            FUN_104319f0(this_00,(uint *)&DAT_1054f200,"");
            FUN_10432330(local_14,"cl_screenshotusertag");
            FUN_104323d0(&DAT_10770ec4,(int)"joy_legacy");
            LVar7 = RegQueryValueExA(param_1,"PageHeapFlags",(LPDWORD)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
            LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"\nFREEING MATCH ENTRY:\n");
            LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414058,0),")");
            LoggingSystem_Log(DAT_104c2ea8,1,"Error: Failed to get mix layer %s!\n",pbVar3);
            LoggingSystem_Log(DAT_104c2ea8,1,"Error: Unknown sound operator stack type: %s\n",pbVar3
            LoggingSystem_Log(DAT_104c2ea8,1,"QUEUETOTRACK: %s priority blocked by %s\n",uVar9);
            Msg("   mismatched!!!\n");
            Msg("  %p : %30s (last %5i/next %5i)\n",uVar7,puVar13,local_8,local_c);
            Msg("  \'%s\'\n",pcVar6);
            Msg("  effect %d, color1(%d,%d,%d,%d), color2(%d,%d,%d,%d)\n",ppcVar8[-10],
            Msg("  pos %f,%f, fadein %f fadeout %f hold %f fxtime %f\n");
            Msg("%d dem_consolecmd [%s]\n",local_c,pcVar13);
            Msg("%d dem_datatables\n",local_c);
            Msg("%d dem_stop\n",local_c);
            Msg("%d dem_synctick\n",local_c);
            Msg("%d dem_usercmd\n",local_c);
            Msg("%d network packet [%d]\n",local_c,iVar6);
            Msg("* SV_BroadcastVoiceData:  Not active (SignonState %d).  Dropping %d bytes from %s (%s) to %s (%s)\n"
            Msg("ADDED %s (%s) to transition.\n",puVar7,pcVar5);
            Msg("ADDED.\n");
            Msg("Area %d has incoming connection from area %d but does not appear on latter\'s outgoing connection list\n"
            Msg("Area %d has one-way connect to area %d but does not appear on the latter\'s incoming list\n"
            Msg("CDecalEmitterSystem::LoadDecalsFromScript:  Translation for game material type \'%s\' references unknown decal \'%s\'\n"
            Msg("Error parsing soundscape file %s after %s\n",puVar1,pcVar5);
            Msg("Expecting \'{\', got \'%s\'",&DAT_107973a0);
            Msg("Invalid GetHostVersion(), expecting %d, got %d\n",uVar16,uVar21);
            Msg("Missing map material: %s\n",
            Msg("NET_GetBindAddresses found %s: \'%s\'\n",piVar5,piVar2 + 0x43);
            Msg("NET_ReceiveStream: %s\n",pcVar6);
            Msg("Object %d (of %d) =========================\n",iVar1,iVar6);
            Msg("SIM: Closed file: %s\n",puVar4);
            Msg("SIM: Packed: %s [Size: %.02f KB]\n",puVar9);
            Msg("S_ClearBuffer: DS: couldn\'t restore FC buffer\n");
            Msg("S_ClearBuffer: DS: couldn\'t restore buffer\n");
            Msg("S_ClearBuffer: DS::Lock FC Sound Buffer Failed\n");
            Msg("S_ClearBuffer: DS::Lock Sound Buffer Failed\n");
            Msg("Sending heartbeat to master server...\n");
            Msg("Server approved grace request...\n");
            Msg("Server using \'%s\' lobbies, requiring pw %s, lobby id %llx\n",pcVar20,puVar14,
            Msg("UDP <- %s: sz=%d OOB \'0x%02X\' wire=%d\n",pcVar11,iVar12,uVar9,iVar10);
            Msg("Using joystick \'%s\' configuration\n",pcVar9);
            Msg("VPROF: %s = %d\n");
            Msg("VisMon: MAX Traces. Stopping after element %d\n",iVar16);
            Msg("Worldcraft failed on creation...\n");
            Msg("[GAMEUI] CBaseModPanel::CloseAllWindows() - Keeping bkgnd type %d of priority %d.\n"
            Msg("[GAMEUI] CBaseModPanel::CloseAllWindows() - Keeping loading type %d of priority %d.\n"
            Msg("[GAMEUI] CBaseModPanel::CloseAllWindows() - Keeping msgbox type %d of priority %d.\n"
            Msg("[Map]Added [%llu] %s to available mission mode maps\n",uVar3,param_2,param_3);
            Msg("[Map]Added [%llu] %s to available mission mode maps\n",uVar5,param_2,param_3);
            Msg("\t\'%s\' is not a known concept (adding it anyway)\n",piVar4);
            Msg("joy%d %s:  %s (%s)\n",iVar5,"r axis",pcVar9,pcVar6);
            Msg("joy%d %s:  %s (%s)\n",iVar5,"u axis",pcVar9,pcVar6);
            Msg("joy%d %s:  %s (%s)\n",iVar5,"v axis",pcVar9,pcVar6);
            Msg("joy%d %s:  %s (%s)\n",iVar5,"x axis",pcVar9,pcVar6);
            Msg("joy%d %s:  %s (%s)\n",iVar5,"y axis",pcVar9,pcVar6);
            Msg("joy%d %s:  %s (%s)\n",iVar5,"z axis",pcVar9,pcVar6);
            Msg("joy%d %s:  unmapped\n",iVar5,"r axis");
            Msg("joy%d %s:  unmapped\n",iVar5,"u axis");
            Msg("joy%d %s:  unmapped\n",iVar5,"v axis");
            Msg("joy%d %s:  unmapped\n",iVar5,"x axis");
            Msg("joy%d %s:  unmapped\n",iVar5,"y axis");
            Msg("joy%d %s:  unmapped\n",iVar5,"z axis");
            Msg("model %p [%s] unload - deferred: non-dynamic reference\n",iVar3,iVar3 + 4);
            Msg("model %p [%s] unload\n",iVar3,iVar3 + 4);
            Msg((byte *)"%s test: multithread interleaved push/pop, %s");
            Msg((byte *)"%s test: multithread push, sequential pop, %s");
            Msg((byte *)"%s test: multithread push, single thread pop, %s");
            Msg((byte *)"%s test: sequential push, multithread pop, %s");
            Msg((byte *)"%s test: single thread push, multithread pop, %s");
            Msg((byte *)"Pops != pushes?\n");
            Warning("-- Error --:  empty soundname, .qc error on AE_CL_PLAYSOUND in model %s, sequence %s, animevent # %i\n"
            Warning("Adding Walkable Seed pos: %s\n",(int)puVar5 + 5,puVar12,pcVar13,dVar11,dVar10);
            Warning("CDmxElement::UnpackIntoStructure: Mismatched attribute type in attribute \"%s\"!\n"
            Warning("CToolFrameworkInternal::LoadToolsFromLibrary:  Dll \'%s\' doesn\'t support \'%s\'\n"
            Warning("C_INIT_InitFromCPSnapshot: Unsupported attribute data type! (%d)\n",local_8);
            Warning("C_INIT_InitFromParentKilled: Unsupported attribute data type! (%d)\n",iVar6);
            Warning("Could not play sound \'%s\'. Check that the sound exists.\n",local_3c8);
            Warning("Invalid area in visible set for area #%d\n",
            Warning("Invalid entity search name %s\n",param_1);
            Warning("Invalid map \'%s\' included in map cycle file. Ignored.\n",
            Warning("Platform Error: module version (\'%s, %s) invalid, not loading\n",uVar10,uVar4)
            Warning("Player isn\'t in the landmark\'s (%s) PVS, aborting\n",local_c);
            Warning("Server error - failed to handle reservation request.\n");
            Warning("Voicecommand script attempting to use unknown concept. Need to define new concepts in code. ( %s )\n"
            Warning("WARNING! Field %s is using the wrong FIELD_ type!\nFix this or you\'ll see a crash.\n"
            Warning("[Blobulator] Can\'t get fragment, canceling job. Report this issue.\n");
            _DAT_107d4884 = GetProcAddress(DAT_107d4898,"NP_StartCursor");
            _DAT_107d488c = GetProcAddress(DAT_107d4898,"NP_ReCenter");
            bVar2 = FUN_100a6de0(this_00,"func_breakable");
            bVar5 = FUN_1013c980((int)param_1,(int)"fadein");
            cVar2 = (**(code **)(*this + 0x1ac))("models/weapons/door_charge-1.mdl",0);
            cVar2 = FUN_1013aba0(&local_10,(byte *)"SpawnChance",(char *)local_858);
            cVar2 = FUN_1013aba0(&local_10,(byte *)"Squad",(char *)local_858);
            cVar2 = FUN_1013aba0(&local_10,(byte *)"Stage",(char *)local_858);
            cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
            eVar3 = _wcscat_s((wchar_t *)&DAT_00458728,0x314,L"\n\n");
            eVar3 = _wcscat_s((wchar_t *)&DAT_10045fa0,0x314,L"\n\n");
            eVar3 = _wcscat_s((wchar_t *)&DAT_106d4860,0x314,L"\n\n");
            eVar3 = _wcscat_s((wchar_t *)&DAT_106fa208,0x314,L"\n\n");
            eVar3 = _wcscat_s((wchar_t *)&DAT_10835d40,0x314,L"\n\n");
            eVar3 = _wcscat_s((wchar_t *)&DAT_10848740,0x314,L"\n\n");
            fVar11 = (float10)(**(code **)(*param_1 + 0x24))("inertia",0x41f00000);
            iVar12 = FUN_10265c20((int)&local_10c,"connect-granted",iVar12);
            iVar12 = FUN_10265c20((int)&local_10c,"connect-retry",iVar12);
            iVar12 = FUN_10265c20((int)&local_10c,"reserve",iVar12);
            iVar12 = FUN_10265ff0("connect");
            iVar12 = FUN_10265ff0("connect-granted");
            iVar12 = FUN_10265ff0("connect-retry");
            iVar12 = FUN_10265ff0("reserve");
            iVar2 = FUN_102659a0(param_1,(byte *)"setview");
            iVar3 = FUN_1008c050(this,(byte *)"Quadruped.bone11");
            iVar3 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_Spine2");
            iVar3 = FUN_10399150(param_5,param_6,(byte *)"%d %d %d %d");
            iVar3 = FUN_10399150(param_5,param_6,(byte *)"%f %f %f");
            iVar3 = FUN_1042e020("DrpModelDetail");
            iVar4 = (**(code **)(param_1[1] + 0x84))("headlight1");
            iVar4 = (**(code **)(param_1[1] + 0x84))("headlight2");
            iVar4 = FUN_1008c000(this,(byte *)"thruster");
            iVar4 = FUN_10399410((char *)local_18cc,"info_heli_CT_spawn",0x12);
            iVar4 = FUN_10399410((char *)local_18cc,"info_plane_wp",0xd);
            iVar5 = FUN_102659a0(pbVar2,(byte *)"left_rear");
            iVar5 = FUN_102659a0(pbVar2,(byte *)"match_entity");
            iVar5 = FUN_102659a0(pbVar2,(byte *)"match_substring");
            iVar5 = FUN_102659a0(pbVar2,(byte *)"subtract_min_time_from_next");
            iVar5 = FUN_102659a0(pbVar3,(byte *)"entity");
            iVar5 = FUN_102659a0(pbVar3,(byte *)"position");
            iVar6 = (**(code **)(*param_1 + 0x1c))("target1",0);
            iVar6 = FUN_102659a0(pbVar4,(byte *)"false");
            iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_spawn_3",0x14);
            iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_waypoint_3",0x17);
            iVar6 = FUN_103fd956(pcVar8,(int)"%f %f %f");
            iVar6 = FUN_104a8d56(pcVar5,(int)"%f x %f");
            iVar7 = FUN_10399410(*(char **)(DAT_1064d8e4 + iVar4 * 4),"//",2);
            iVar8 = (**(code **)(*DAT_10650104 + 0xc))("default");
            iVar8 = (**(code **)(*DAT_1077924c + 0xc))("default");
            iVar8 = FUN_10399410(pcVar6,"ME",2);
            iVar9 = FUN_102659b0(pcVar14,"autoexec.cfg");
            iVar9 = FUN_102f2265((char *)&local_274,(int)"%f %f %f %f");
            iVar9 = FUN_104a8d56((char *)&local_274,(int)"%f %f %f %f");
            if ((((iVar9 == 0) && (iVar9 = FUN_102659b0(pcVar14,"joystick.cfg"), iVar9 == 0)) &&
            if ((((pbVar5 != (byte *)"ai_network") &&
            if ((char *)local_c[0x17] == "func_button*") {
            if (param_1 != (uint *)"timeofday") {
            in_EAX = DevWarning(1,"AutoGameSystem already added to game system list!!!\n");
            in_EAX = FUN_10399710((byte *)param_1,(byte *)"value2");
            local_10 = (**(code **)(**(int **)(iVar3 + 0x10 + uVar6 * 0x14) + 0x1c))("target",0);
            local_14 = FUN_10267f50(pvVar8,"SetActiveControl");
            local_14 = FUN_1039d370(pvVar8,"SetActiveControl");
            local_14 = FUN_1042ea30(pvVar8,"SetActiveControl");
            local_18 = (char *)FUN_1042f3d0(local_8,(uint *)"icon2",(uint)&DAT_104eefb3);
            local_18 = FUN_1029c040(pvVar5,(int)this,(char *)0x0,"...",0,(char *)0x0,1);
            local_18 = FUN_103a46f0(pvVar5,(int)this,(char *)0x0,"...",0,(char *)0x0,1);
            local_18 = FUN_10462790(pvVar5,(int)this,(char *)0x0,"...",0,(char *)0x0,1);
            local_28 = "exp";
            local_28 = "log";
            local_28 = "log10";
            local_30 = "#VideoOptions_CPUDetail_Info";
            local_30[0] = "weapon_s";
            local_34 = "#VideoOptions_CPU_Detail";
            local_38[0] = "weapon_small";
            local_5 = (**(code **)(*param_1 + 0x18))("ineye",0);
            local_50[0] = "weapon";
            local_58[0] = "ammo2";
            local_60[0] = "zoom_autoaim";
            local_68[0] = "autoaim";
            local_70[0] = "crosshair";
            local_7c = "sprites/nav_beam_player.vmt";
            local_8 = (undefined4 *)FUN_1042f270(pvVar3,(uint *)"index",0);
            local_8 = FUN_10267e50(pvVar1,"DoLanguageChanged",(uint *)"handle",(uint)ppuVar6[0x40]);
            local_8 = FUN_10314890(pvVar6,(int)param_2,"PriceRadio",1);
            local_8 = FUN_1039d270(pvVar1,"DoLanguageChanged",(uint *)"handle",puVar3[0x40]);
            local_8 = FUN_1042e930(pvVar1,"DoLanguageChanged",(uint *)"handle",puVar3[0x40]);
            local_c = (void *)FUN_0041f250(puVar6,"message",(uint)&DAT_0043b3d2);
            local_c = FUN_10267e50(pvVar1,"DoConversionModeChanged",(uint *)"handle",
            local_c = FUN_10267f50(pvVar7,"fgColor");
            local_c = FUN_1039d270(pvVar1,"DoConversionModeChanged",(uint *)"handle",
            local_c = FUN_1042e930(pvVar1,"DoConversionModeChanged",(uint *)"handle",
            lstrcpyA(param_1,"Error");
            pDVar4 = (DName *)DName::DName((DName *)local_60,"`vtordispex{");
            pDVar4 = (DName *)DName::DName((DName *)local_60,"`vtordisp{");
            param_1 = "<<null>>";
            param_1 = FUN_1021ed00(pvVar7,(int)this,"IncrementCVar",pcVar4,pcVar2,iVar9);
            param_1,"VTOOLDICTIONARY003");
            param_1[0x342] = (int)"(UNKNOWN CONDITION)";
            param_2[6] = (byte *)"invalid literal/length code";
            pbVar5 = (byte *)"FCVAR_NEVER_AS_STRING";
            pbVar6 = (byte *)FUN_10268930(param_2,(uint *)"TexGroup",(uint)&DAT_103236cf);
            pbVar7 = (byte *)"FCVAR_NEVER_AS_STRING";
            pbVar7 = (byte *)FUN_10268930(param_1,(uint *)"TexGroup",(uint)&DAT_103236cf);
            pcStack76 = "fluid";
            pcVar10 = "";
            pcVar10 = "DropContext";
            pcVar10 = "SquadDesc_CT_CarDriver";
            pcVar10 = "SquadDesc_T_CarDriver";
            pcVar10 = "vcc";
            pcVar11 = "(%f, %f, %f)";
            pcVar11 = "General.BurningFlesh";
            pcVar11 = "General.BurningObject";
            pcVar11 = "origin";
            pcVar11 = "soundlevel";
            pcVar11 = (char *)FUN_1042f3d0(this_00,(uint *)&DAT_10526d78,(uint)"Source Engine");
            pcVar12 = "%f %f %f %f";
            pcVar12 = "Error: Too many mix layers! MixLayer %s ignored\n";
            pcVar12 = "Error: Too many sound mixers! SoundMixer %s ignored\n";
            pcVar12 = "Kicked by %s";
            pcVar12 = "Total Mix Groups Rules: %i\n";
            pcVar12 = "Total Mix Layers: %i\n";
            pcVar12 = "muzzle";
            pcVar12 = "muzzle_flash";
            pcVar12 = FUN_102640a0(pcVar12,(int)"debug/debugtexture");
            pcVar12 = FUN_102640a0(pcVar12,(int)"maps/");
            pcVar13 = "";
            pcVar13 = "#GP_VIPEsc_CT_CarDriverM";
            pcVar13 = "#GP_VIPEsc_CT_CarPassengerM";
            pcVar13 = "#GP_VIPEsc_CT_Elim";
            pcVar13 = "#GP_VIPEsc_TER_CarDriverM";
            pcVar13 = "#GP_VIPEsc_Ter_Assault";
            pcVar13 = "#GP_VIPEsc_Ter_CarDriver";
            pcVar13 = "#GP_VIPEsc_Ter_CarPassenger";
            pcVar13 = "#GP_VIPEsc_Ter_Elim";
            pcVar13 = "(%f, %f, %f)";
            pcVar13 = "<<illegal>>";
            pcVar13 = "Drive_On_Gravel";
            pcVar13 = "Error parsing network data tables during demo playback.";
            pcVar13 = "Error parsing string tables during demo playback.";
            pcVar13 = "Not Respawning: %s ::WILL SPECTATE\n";
            pcVar13 = "Not Respawning: %s ::pTeam == NULL\n";
            pcVar13 = "[Debug] Adding %s to DEFENSE list\n";
            pcVar13 = "[Debug] Adding %s to OTHER list\n";
            pcVar13 = "[Debug] Adding %s to POTENTIAL VIP list\n";
            pcVar13 = "\tEntity param \"%s\" returned NULL.\n";
            pcVar13 = "\tPlayer param \"%s\" returned NULL.\n";
            pcVar13 = "info_node";
            pcVar13 = "info_node_air";
            pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_TAssault",
            pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_T_CarDriver",
            pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_T_CarPassenger",
            pcVar14 = "#Purchase_Day";
            pcVar14 = "#Purchase_Slot";
            pcVar14 = "#TI_Squad_Alpha";
            pcVar14 = "#TI_Squad_Alpha_DRIVER";
            pcVar14 = "#TI_Squad_Charlie";
            pcVar14 = "#TI_Squad_Charlie_BOMBER";
            pcVar14 = "characters/npc11.mdl";
            pcVar14 = "effects/combinemuzzle2";
            pcVar14 = "effects/spark";
            pcVar14 = "kill_vip";
            pcVar14 = "kill_vip_car";
            pcVar14 = "phoneme";
            pcVar15 = "$channel_select";
            pcVar15 = "Error unserializing color correction operator %s\n";
            pcVar15 = "NPC Not in hint\'s FOV";
            pcVar15 = "Unknown color correction operator %s\n";
            pcVar16 = "#TI_Objective_VIPCar_CT_Drive_Close_To_FinalDest";
            pcVar16 = "#TI_Objective_VIPCar_Ter_Deliver_Case";
            pcVar16 = "#TI_Objective_VIPEscape_Attack";
            pcVar16 = "#TI_Objective_VIPEscape_AttackM";
            pcVar16 = "#TI_Objective_VIPEscape_Defend";
            pcVar16 = "#TI_Objective_VIPEscape_DefendM";
            pcVar17 = ")->AmmoPercentage() >= 30 ";
            pcVar17 = "< [%s] ";
            pcVar17 = "Objective.HG_Capture_Civ";
            pcVar17 = "Objective.HG_Rescue_Civ";
            pcVar17 = "Objective.VIP_Down_Secure_Case";
            pcVar17 = "Objective.boss_YouAre";
            pcVar17 = "Objective.vip_YouAre";
            pcVar17 = "\t![%s]->GetWeaponInSlot( ";
            pcVar17 = "\t[%s]->Weapon_CanUse([%s]) ";
            pcVar17 = "false\n";
            pcVar17 = "true";
            pcVar17 = "true\n";
            pcVar18 = "Grace request retry for unreserved server...\n";
            pcVar18 = "true\n";
            pcVar20 = "<none>";
            pcVar23 = "(%.0f %.0f %.0f)";
            pcVar3 = "";
            pcVar3 = "%s %s%s";
            pcVar3 = "%s %s%s/";
            pcVar3 = "lean_inline";
            pcVar3 = "prop_physics";
            pcVar3 = (char *)FUN_1042df80((byte *)ppvVar7,(byte *)"world");
            pcVar4 = "#VideoOptions_CPU_Detail";
            pcVar5 = "no usable entity found";
            pcVar5 = "param3";
            pcVar6 = "";
            pcVar6 = "%d %s\n";
            pcVar6 = "(null)";
            pcVar6 = "ADPCM.";
            pcVar6 = "Another player has already been spawned at %s\n";
            pcVar6 = "FCVAR_NEVER_AS_STRING";
            pcVar6 = "Fake-MP3.";
            pcVar6 = "Invalid!!!";
            pcVar6 = "MP3.";
            pcVar6 = "PCM.";
            pcVar6 = "Spawn point at %s is not clear\n";
            pcVar6 = "[Cloud]: FAILED saving %s in remote storage\n";
            pcVar6 = "[Cloud]: SUCCEESS saving %s in remote storage\n";
            pcVar6 = "all";
            pcVar6 = "dog_entity";
            pcVar6 = "models/vehicles/cars/%s.mdl";
            pcVar6 = "models/vehicles/cars/baggage_tractor/%s.mdl";
            pcVar6 = "playrandom";
            pcVar6 = "relative";
            pcVar6 = "s ";
            pcVar6 = FUN_102640a0(pcVar1,(int)"TexGroup_Global_");
            pcVar7 = "";
            pcVar7 = "%s disconnected";
            pcVar7 = "%s overflowed reliable channel";
            pcVar7 = "DrpModelDetail";
            pcVar7 = "FCVAR_NEVER_AS_STRING";
            pcVar7 = "__int16";
            pcVar7 = "__int8";
            pcVar7 = "bucket1";
            pcVar7 = "ingame_playing";
            pcVar7 = "no usable entity found";
            pcVar7 = "playrandom";
            pcVar7 = "selection";
            pcVar7 = (char *)FUN_102659b0(pcVar5,"|all_source_engine_paths|");
            pcVar8 = "";
            pcVar8 = "#DeathMsg_Crushed";
            pcVar8 = "#DeathMsg_CrushedSelf";
            pcVar8 = "FCVAR_NEVER_AS_STRING";
            pcVar8 = "GetBestEquipment::Choosing Charges\n";
            pcVar8 = "Plexi";
            pcVar8 = "ambientpositionoverride";
            pcVar8 = "gameui_activate";
            pcVar8 = "models/weapons/v_arms_vip.mdl";
            pcVar8 = FUN_100d0740((byte *)" with %s.");
            pcVar9 = "%c00000000000000";
            pcVar9 = "car-2";
            pcVar9 = "car-3";
            pcVar9 = "car-5";
            pcVar9 = "car-6";
            pcVar9 = "car-7";
            pcVar9 = "car-8";
            pcVar9 = "chipsrod";
            pcVar9 = "impact_fx_chipstriangle";
            pcVar9 = "pose_UI_CT_store_pose";
            pcVar9 = "pose_UI_TER_store_pose";
            pcVar9 = "propane_tank";
            pcVar9 = "sedan-1";
            pcVar9 = "truck-1";
            pcVar9 = "truck-2";
            pcVar9 = "truck-3";
            pcVar9 = FUN_1017c740((byte *)"mp_disable_autokick %d\n");
            piVar10 = (int *)(**(code **)(*(int *)puVar3[1] + 0xbc))("$frame",&DAT_104f61e4);
            piVar12 = (int *)(**(code **)(*piVar16 + 0xbc))("$basetexture",&DAT_104f61ec);
            piVar13 = (int *)(**(code **)(*piVar16 + 0xbc))("$frame",&DAT_104f61f0);
            piVar14 = (int *)(**(code **)(*piVar16 + 0xbc))("$AlphaTestReference",&DAT_104f61f4);
            piVar4 = FUN_10314890(pvVar6,(int)param_2,"PriceRadio",1);
            piVar4 = FUN_104545d0(pvVar6,(int)param_2,"PriceLabel",local_554,1);
            piVar5 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_removeban",0,0);
            piVar5 = (int *)(**(code **)(*(int *)piVar1[0x68] + 0xc4))("%c00000000000000",0x42);
            piVar5 = FUN_10160660(this,0,"FinishDialog","#Steam_FinishedBug_WorkingTitle",
            piVar7 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("achievement_earned",0,0);
            piVar9 = (int *)"benchframe";
            ppiVar2 = (int **)Warning("%s : %8.2f: waiting for actor %s to complete MOVETO but actor not in SCHED_SCENE_GENERIC\n"
            psVar11 = (short *)(**(code **)(*DAT_107c09f0 + 0x2c))("#TI_Squad_YourCar");
            puVar1 = FUN_100b10f0(local_950,(byte *)"Tip_%d_Key_%d");
            puVar10 = FUN_10021180(local_174,(byte *)"pr_%i");
            puVar13 = FUN_10021180(puVar22,(byte *)"(%.0f %.0f %.0f)");
            puVar19 = (undefined8 *)FUN_10265c20((int)&local_10c,"connect",iVar12);
            puVar3 = FUN_10021180(local_238,(byte *)"%sCallChain.PostScriptExecute()");
            puVar3 = FUN_100b10f0(local_128,(byte *)"ingame_%s");
            puVar3 = FUN_10267f50(this_00,"ItemDeselected");
            puVar3 = FUN_1039d370(this_00,"ItemDeselected");
            puVar3 = FUN_1042ea30(this_00,"ItemDeselected");
            puVar4 = (undefined4 *)FUN_10399710((byte *)param_1,(byte *)"direction");
            puVar4 = FUN_1042ea30(pvVar3,"if_split_screen_horizontal");
            puVar4 = FUN_1042ea30(pvVar3,"if_split_screen_top");
            puVar5 = FUN_10021180(puVar12,(byte *)"(%f, %f, %f)");
            puVar5 = FUN_10031640(local_134,(byte *)"[%-4i %-4i %-4i %-4i z%-4i]");
            puVar5 = FUN_10031640(local_134,(byte *)"abs [%d][%-4i %-4i %-4i %-4i z%-4i]");
            puVar5 = FUN_101f6800((byte *)"  %s: %s\n");
            puVar5 = FUN_10267f50(pvVar4,"TextNewLine");
            puVar5 = FUN_10267f50(this_00,"Hotkey");
            puVar5 = FUN_1039d370(pvVar4,"TextNewLine");
            puVar5 = FUN_1039d370(this_00,"Hotkey");
            puVar5 = FUN_1042ea30(pvVar4,"TextNewLine");
            puVar5 = FUN_1042ea30(this_00,"Hotkey");
            puVar6 = FUN_10021180(local_11c,(byte *)"(%f, %f, %f)");
            puVar6 = FUN_10021180(local_294,(byte *)"(%f, %f, %f)");
            puVar6 = FUN_10021180(puVar10,(byte *)"(%f, %f, %f)");
            puVar6 = FUN_10031640(puVar11,(byte *)"Kicked by %s");
            puVar6 = FUN_1042e930(pvVar5,"Settings",(uint *)&DAT_10558f0c,
            puVar7 = FUN_10021180(puVar10,(byte *)"(%f, %f, %f)");
            puVar7 = FUN_10267d30(this_00,"command",(uint *)"command","BlendFactorUpdate");
            puVar8 = FUN_10031640(puVar10,(byte *)"(%f, %f, %f)");
            puVar8 = FUN_10267f50(pvVar7,"alpha");
            puVar8 = FUN_1042e810(this_00,"SetText",(uint *)&DAT_10524ef8,pcVar6);
            pvVar2 = (void *)FUN_102c10f0(DAT_107a27d0,'\0',(uint *)"music",'\x01');
            this_01 = FUN_1042ea30(this_00,"playtime");
            uVar1 = FUN_0041e3a0(param_1,(byte *)"LINUX");
            uVar1 = FUN_10077120("CAI_BaseNPC",(uint)PTR_s__Schedule_SCHED_ALERT_FACE_BESTS_105923c4
            uVar1 = FUN_10265ef0(param_1,(byte *)"cl_lw");
            uVar1 = FUN_10265f50((byte *)"-remotebugpath",pbVar7);
            uVar1 = FUN_10265f50(param_1,(byte *)"LINUX");
            uVar1 = FUN_10399710((byte *)param_1,(byte *)"TextureScroll");
            uVar1 = FUN_10399710((byte *)param_1,(byte *)"pitchstart");
            uVar1 = FUN_10399710((byte *)param_1,(byte *)"unlocked_sound");
            uVar1 = FUN_10399710(param_1,(byte *)"LINUX");
            uVar1 = FUN_10399710(pbVar7,(byte *)"clear");
            uVar1 = FUN_10399710(pbVar7,(byte *)"remove");
            uVar1 = FUN_1042df20((byte *)"radialmenupanel",param_1);
            uVar1 = FUN_1042df20((byte *)"voicecontrol",param_1);
            uVar1 = FUN_1042df80((byte *)param_1,(byte *)"model");
            uVar1 = FUN_1042df80((byte *)param_1,(byte *)"rendermode");
            uVar1 = FUN_1042df80(param_1,(byte *)"LINUX");
            uVar1 = FUN_1042df80(param_1,(byte *)"angles");
            uVar1 = FUN_1042df80(param_1,(byte *)"origin");
            uVar10 = FUN_103996b0(pbVar9,(byte *)"grenade_40mm");
            uVar11 = FUN_0041f380(puVar6,"code",0);
            uVar11 = FUN_0041f380(puVar6,"port",0);
            uVar2 = (**(code **)(*piVar1 + 0x2c))("$falloffdistance",(int)&param_1 + 3,0);
            uVar2 = FUN_10265f50(local_104,(byte *)"CLOSECAPTION");
            uVar2 = FUN_10265f50(param_1,(byte *)"SelectedItemChanged");
            uVar2 = FUN_10265f50(param_1,(byte *)"UpdateList");
            uVar2 = FUN_10399710((byte *)param_1,(byte *)"acceleration");
            uVar2 = FUN_10399710((byte *)param_1,(byte *)"master");
            uVar2 = FUN_10399710((byte *)param_1,(byte *)"spawnflags");
            uVar2 = FUN_10399710(param_1,(byte *)"!target6");
            uVar2 = FUN_1042df80((byte *)"Overlay_BottomRight",param_1);
            uVar2 = LoggingSystem_Log(DAT_104f3614,1,"Unrecognized severity: %s.\n",param_2);
            uVar3 = (**(code **)(*this + 0x8ec))("#Radio_FollowMe",7);
            uVar3 = *(byte *)((int)L"Microsoft Visual C++ Runtime Library" + (char)local_215 + 0x30)
            uVar3 = FUN_10265ef0(pbVar2,(byte *)"start_stacks");
            uVar3 = FUN_10265f50(pbVar2,(byte *)"corner");
            uVar3 = FUN_10268d10(local_10,(uint *)"cellcolor");
            uVar3 = FUN_10314250(local_c,(uint *)"mafia_mode");
            uVar3 = FUN_10399710((byte *)param_1,(byte *)"model");
            uVar3 = FUN_10399710((byte *)param_1,(byte *)"uselightenvangles");
            uVar3 = FUN_10399710(pbVar2,(byte *)"corner");
            uVar3 = FUN_10399710(pbVar9,(byte *)"playerperf");
            uVar3 = FUN_1039d9a0(puVar5,(uint *)"gp_mission",0);
            uVar3 = FUN_1039d9a0(puVar5,(uint *)"gp_tdm",0);
            uVar3 = FUN_1039d9a0(puVar5,(uint *)"xp_mission",0);
            uVar3 = FUN_1039d9a0(puVar5,(uint *)"xp_tdm",0);
            uVar3 = FUN_1039de90(local_10,(uint *)"cellcolor");
            uVar3 = FUN_1042df20(pbVar1,(byte *)"L_SHOULDER");
            uVar3 = FUN_1042df20(pbVar14,(byte *)"MultiplayerSettings");
            uVar3 = FUN_1042df80(pbVar1,(byte *)"HorizontalInverted");
            uVar3 = FUN_1042df80(pbVar1,(byte *)"Video");
            uVar3 = FUN_1042df80(pbVar2,(byte *)"corner");
            uVar3 = FUN_1042f270(this,(uint *)"force_in_tdm",0);
            uVar3 = FUN_1042f270(this,(uint *)"only_mission",0);
            uVar3 = FUN_1042f270(this,(uint *)"only_tdm",0);
            uVar3 = FUN_1042f270(this,(uint *)"show_planequipment",1);
            uVar3 = FUN_1042f270(this,(uint *)"show_plansquad",1);
            uVar3 = FUN_1042f760(local_10,(uint *)"cellcolor");
            uVar4 = DevWarning(1,"Bad overlay geometry at %s with material \'%s\'\n",(int)puVar8 + 5
            uVar4 = FUN_10265ef0((byte *)&DAT_10674cf0,(byte *)"MixLayers");
            uVar4 = FUN_10265ef0(pbVar11,(byte *)"status");
            uVar4 = FUN_10265f50(pbVar3,(byte *)"center");
            uVar4 = FUN_10314250(DAT_10693b08,(uint *)"mafia_mode");
            uVar4 = FUN_10399710((byte *)param_1,(byte *)"RopeShader");
            uVar4 = FUN_10399710((byte *)param_1,(byte *)"Stage");
            uVar4 = FUN_10399710((byte *)param_1,(byte *)"Stoplight_A1");
            uVar4 = FUN_10399710(local_1878,(byte *)"targetname");
            uVar4 = FUN_10399710(pbVar3,(byte *)"center");
            uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"shadowdepthnocache");
            uVar4 = FUN_1042df80(pbVar3,(byte *)"pressed");
            uVar4 = FUN_1042f3d0(pvVar2,(uint *)"interface",(uint)&DAT_104eefb3);
            uVar5 = (**(code **)((int)pvVar2 + 0x84))("explodeFX_origin",&local_54,&local_6c);
            uVar5 = (**(code **)(*param_1 + 0x1c))("target2",0);
            uVar5 = (**(code **)(*piVar4 + 0x34))(uVar2,uVar3,"STEAMUSERSTATS_INTERFACE_VERSION011")
            uVar5 = (int)"UNICODE"[(char)bVar12 + 4] & 0xf;
            uVar5 = (int)"UNICODE"[(char)bVar12] & 0xf;
            uVar5 = FUN_10265f50(pbVar4,(byte *)"mapName");
            uVar5 = FUN_10399710((byte *)"Schedule",local_418);
            uVar5 = FUN_1042df80(local_318,(byte *)"playerresource");
            uVar6 = (**(code **)(iVar2 + 0x84))("gas_container_gib_spawner2",&local_90,&local_10);
            uVar6 = (**(code **)(iVar2 + 0x84))("gas_container_gib_spawner3",&local_9c,&local_10);
            uVar6 = (**(code **)(iVar2 + 0x84))("vehicle_engine",&local_1c,&local_10);
            uVar6 = FUN_10265f50((byte *)&DAT_10674cf0,(byte *)"CHAN_BODY");
            uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"Deaccel");
            uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"StopPanelAnimations");
            uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"stopanimation");
            uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"stopevent");
            uVar6 = FUN_10265f50(pbVar5,(byte *)"prepend");
            uVar6 = FUN_102687d0(pvVar8,(uint *)"members/numSlots",0);
            uVar6 = FUN_10314280(local_18,(uint *)"spawn_in_cars",'\x01');
            uVar6 = FUN_10399710(pbVar5,(byte *)"prepend");
            uVar6 = FUN_1039db00(pvVar1,(uint *)"concept",(uint)&DAT_1043677a);
            uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"Deaccel");
            uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"StopPanelAnimations");
            uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"stopanimation");
            uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"stopevent");
            uVar6 = FUN_1042df80(pbVar5,(byte *)"prepend");
            uVar7 = FUN_0041f250(puVar6,"host",(uint)&DAT_0043b3d2);
            uVar7 = FUN_10399710(pbVar6,(byte *)"animatedfriction");
            uVar7 = FUN_1042df80(pbVar6,(byte *)"animatedfriction");
            uVar8 = FUN_10265f50(*(byte **)(local_30[0] + iVar13 * 4),(byte *)"allow_from_disk");
            uVar8 = FUN_10399710(pbVar7,(byte *)"virtualterrain");
            uVar8 = FUN_1042df80(pbVar7,(byte *)"virtualterrain");
            uVar8 = FUN_1042f270(this_00,(uint *)"chatlines",param_1[0xf]);
            uVar8 = Warning("!! ERROR: bad input/output link:\n!! %s(%s,%s) doesn\'t match type from %s(%s)\n"
            uVar9 = (**(code **)(*DAT_1067e240 + 0x84))(0,"caller");
           " Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>\n "
           "%s: VPhysics Collision detection getting expensive, check for too many convex pieces!\n"
           "ERROR: CPooledVBAllocator_ColorMesh::Allocate being called after some (but not all) calls to Deallocate have been called - invalid! (expect visual artifacts)\n"
           "ERROR: CPooledVBAllocator_ColorMesh::Allocate cannot be called before Init (expect a crash)\n"
           "ERROR: CPooledVBAllocator_ColorMesh::Allocate failing - not enough space left in the vertex buffer!\n"
           "ERROR: CPooledVBAllocator_ColorMesh::Deallocate called too many times! (bug in calling code)\n"
           "ERROR: CPooledVBAllocator_ColorMesh::Deallocate called with too many verts, trying to free more than were allocated (bug in calling code)\n"
           "If you are accessing from VPN at home, try this:\nSet the ConVar \'bugreporter_username\' to your Valve user name.\nThen call the command \'_bugreporter_restart autoselect\'.\n"
           "In the Build Mode Dialog Window:\nDelete button - deletes the currently selected panel if it is deletable.\nApply button - applies changes to the Context Panel.\nSave button - saves all settings to file. \nRevert to saved- reloads the last saved file.\nAuto Update - any changes apply instantly.\nTyping Enter in any text field applies changes.\nNew Control menu - creates a new panel in the upper left corner.\n\nIn the Context Panel:\nAfter selecting and moving a panel Ctrl-z will undo the move.\nShift clicking panels allows multiple panels to be selected into a group.\nCtrl-c copies the settings of the last selected panel.\nCtrl-v creates a new panel with the copied settings at the location of the mouse pointer.\nArrow keys slowly move panels, holding shift + arrow will slowly resize it.\nHolding right mouse button down opens a dropdown panel creation menu.\n  Panel will be created where the menu was opened.\nDelete key deletes the currently selected panel if it is deletable.\n  Does nothing to multiple selections."
           "InitSoftbody is called with Softbody already existing. This pattern is suspicious and will not work if skeleton has changed, please show Sergiy a repro.\n"
           "This game has a minimum requirement of Shader Model 3.0 and your video card must support cascaded shadow mapping to run properly.\n"
           "This map is not final!!  Needs to be rebuilt without -keepstalezip and without -onlyents\n"
           "To disconnect areas, mark an area, highlight a second area, then invoke the disconnect command. This will remove all connections between the two areas."
           "Will test with cold cache; flush array size %dkb; cache sizes: L1 %dKb, L2 %dKb, L3 %dKb\n"
           "[Blobulator] Recycling fragments to draw to prevent deadlock. Expect visual corruptions. Please set your Effect Detail to a lower setting.\n"
           "[Blobulator] Too many particles are added to a tile. Some particles will be discarded, this may result in holes between tiles.\n"
           (((DAT_10730cd8 = (*(code *)param_1)("VModelInfoClient004",0), DAT_10730cd8 != 0 &&
           (((char *)piVar7[0x17] != "env_fire" && (bVar1 = FUN_100a6de0(piVar7,"env_fire"), !bVar1)
           ((*(char **)((int)this_00 + 0x5c) == "prop_physics" ||
           ((DAT_10730cf4 = (*(code *)param_1)("EngineTraceClient004",0), DAT_10730cf4 != 0 &&
           ((in_EAX = (uint *)FUN_1039d9a0((void *)param_2,(uint *)"banned",0),
           ((in_EAX = (uint *)FUN_1039d9a0(this,(uint *)"banned",0), in_EAX != (uint *)0x0 ||
           ((pcVar5 = (char *)FUN_10268930(this_00,(uint *)"operator",(uint)&DAT_103236cf),
           (*(char **)((int)this_00 + 0x5c) == "soundent")) ||
           (*(char **)((int)this_00 + 0x5c) == "worldspawn")))) ||
           (**(code **)(*(int *)pcVar2 + 0x14))(&param_1,"Frame.OutOfFocusBgColor",*puVar4);
           (**(code **)(*local_8 + 0x100))(&param_1,"CheckButton.BgColor",0xff37463e,piVar3);
           (**(code **)(*local_8 + 0x104))(local_c,"ComboBoxButton.ArmedArrowColor",piVar8);
           (**(code **)(*local_8 + 0x104))(local_c,"ScrollBarButton.ArmedFgColor",piVar3);
           (**(code **)(*local_8 + 0x104))(local_c,"ScrollBarButton.DepressedFgColor",piVar3);
           (**(code **)(*param_1 + 0x14))(&param_1,"rosette.DefaultFgColor",0xff00b0ff);
           (**(code **)(*piVar1 + 0x14))(&param_1,"EQWeapon.SelectionColor",0xff0000ff);
           (**(code **)(*piVar1 + 0x14))(&param_1,"rosette.DisabledBgColor",0x80000000);
           (**(code **)(*piVar1 + 0x14))(&param_1,"rosette.DisabledFgColor",0x80000000);
           (**(code **)(*piVar4 + 0x100))(&param_1,"CheckButton.Border1",0xff141414,piVar3);
           (**(code **)(*piVar4 + 0x100))(&param_1,"CheckButton.Border2",0xff5a5a5a,piVar3);
           (**(code **)(*piVar4 + 0x100))(&param_1,"CheckButton.Check",0xff141414,piVar3);
           (**(code **)(*this + 0x100))(&local_8,"ListPanel.DisabledTextColor",uVar3,param_1);
           (**(code **)(*this + 0x100))(&param_1,"Button.BlinkColor",0xff009bff,piVar1);
           (**(code **)(*this + 0x100))(&param_1,"Button.FocusBorderColor",0xff000000,piVar1);
           (**(code **)(*this + 0x100))(&param_1,"ListPanel.SelectedTextColor",uVar5,piVar2);
           (**(code **)(*this + 0x104))(&local_8,"Dialog.MessageBoxTitleColor",param_1);
           (**(code **)(*this + 0x104))(&local_8,"Dialog.MessageBoxTitleColorAlt",param_1);
           (**(code **)(*this + 0x104))(&local_8,"ListPanel.EmptyListInfoTextColor",param_1);
           (**(code **)(*this + 0x104))(&param_1,"FooterPanel.BorderArmedColor",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"FooterPanel.BorderArmedColorAlt",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"FooterPanel.BorderDepressedColor",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"FooterPanel.BorderDepressedColorAlt",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"FooterPanel.InGameTextColorAlt",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"FrameTitleBar.DisabledBgColor",pcVar2);
           (**(code **)(*this + 0x104))(&param_1,"FrameTitleBar.DisabledTextColor",pcVar2);
           (**(code **)(*this + 0x104))(&param_1,"FrameTitleButton.DisabledBgColor",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"FrameTitleButton.DisabledFgColor",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"HybridButton.ListButtonActiveColor",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"HybridButton.ListButtonInactiveColor",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"HybridButton.MouseOverCursorColor",piVar2);
           (**(code **)(*this + 0x104))(&param_1,"ListPanel.SelectedOutOfFocusBgColor",piVar3);
           (**(code **)(*this + 0x104))(&param_1,"SectionedListPanel.SelectedTextColor",piVar1);
           (**(code **)(*this + 0x104))(&param_1,"TextEntry.OutOfFocusSelectedBgColor",piVar2);
           (**(code **)(*this + 0x104))(&param_1,"ToggleButton.SelectedTextColor",param_1);
           (**(code **)(*this + 0x104))(local_8,"SectionedListPanel.BrightTextColor",param_1);
           (**(code **)(*this + 0x104))(local_8,"SectionedListPanel.DividerColor",param_1);
           (**(code **)(*this + 0x104))(local_8,"SectionedListPanel.SelectedBgColor",param_1);
           (**(code **)(*this + 0x104))(local_8,"SectionedListPanel.SelectedTextColor",param_1);
           (**(code **)(*this + 0x104))(local_8,"SectionedListPanel.TextColor",param_1);
           (**(code **)(*this + 0x104))(local_c,"SectionedListPanel.MouseOverBgColor",param_1);
           (**(code **)(iVar1 + 0x100))(&local_8,"PropertySheet.SelectedTextColor",*puVar3,piVar2);
           (**(code **)(iVar1 + 0x100))(&local_8,"PropertySheet.TextColor",*puVar3,piVar2);
           (**(code **)(iVar1 + 0x100))(&local_8,"TIPropertySheet.SelectedTextColor",*puVar3,piVar2)
           (**(code **)(iVar1 + 0x100))(&local_8,"TIPropertySheet.TextColor",*puVar3,piVar2);
           (**(code **)(iVar1 + 0x100))(&local_8,"TextEntry.SelectedTextColor",*puVar4,piVar2);
           (**(code **)(iVar1 + 0x100))(local_c,"RadioButton.SelectedTextColor",*puVar6,piVar3);
           (**(code **)(iVar1 + 0x100))(local_c,"ScrollBarSlider.NobDragColor",*puVar4,piVar9);
           (**(code **)(iVar1 + 0x100))(local_c,"ScrollBarSlider.NobFocusColor",*puVar4,piVar9);
           (**(code **)(iVar1 + 0x100))(local_c,"SectionedListPanelHeader.BgColor",*puVar4,param_1);
           (**(code **)(iVar1 + 0x104))(&param_1,"ScrollBarButton.ArmedBgColor",piVar3);
           (**(code **)(iVar1 + 0x104))(&param_1,"ScrollBarButton.DepressedBgColor",piVar3);
           (**(code **)(iVar1 + 0x104))(local_8,"SectionedListPanel.HeaderTextColor",param_1);
           (**(code **)(iVar1 + 0x14))(&local_8,"CSlideshowDisplayScreen_Default",*puVar2);
           (**(code **)(iVar4 + 0x100))(&local_8,"RichText.SelectedTextColor",*puVar2,piVar1);
           (**(code **)(iVar4 + 0x100))(&local_8,"SectionedListPanel.BgColor",*puVar2,piVar1);
           (**(code **)(iVar4 + 0x100))(local_c,"SectionedListPanel.BgColor",*puVar2,param_1);
           (DAT_10730d10 = (undefined4 *)(*(code *)param_1)("VSoundEmitter003",0),
           (_DAT_107347bc = (*(code *)param_1)("VDataCache003",0), _DAT_107347bc != 0)) &&
           (bVar9 = FUN_100a6de0(local_94,"func_breakable"), bVar9)))) &&
           (cVar2 = (**(code **)(*piVar4 + 0x34))("cfg/config.cfg"), cVar2 == '\0')) {
           (cVar5 = DoNewAssertDialog("d:\\projects\\ti\\release\\ti_rel\\src\\public\\studio.cpp",
           (iVar12 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_Spine1"), iVar12 != -1)) {
           (iVar2 = FUN_10265c20((int)pcVar6,"mailto:",7), iVar2 == 0)))) ||
           (iVar2 = FUN_10265c20((int)pcVar6,"steam://",8), iVar2 == 0)) ||
           (iVar2 = FUN_10399480((int)pcVar6,"mailto:",7), iVar2 == 0)))) ||
           (iVar2 = FUN_10399480((int)pcVar6,"steam://",8), iVar2 == 0)) ||
           (iVar2 = FUN_1042dc70((int)pcVar6,"mailto:",7), iVar2 == 0)))) ||
           (iVar2 = FUN_1042dc70((int)pcVar6,"steam://",8), iVar2 == 0)) ||
           (int)puVar4 + 5,(int)puVar3 + 5,"Server",puVar10,pcVar11,dVar9,dVar8,dVar7);
           (int)puVar5 + 5,(int)puVar4 + 5,"Client",puVar10,pcVar11,dVar9,dVar8,dVar7);
           (local_14 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("plr_hitoutput",0,0),
           (pcVar2 = (char *)FUN_1042f3d0(this,(uint *)"Binding",(uint)&DAT_104eefb3),
           (pcVar5 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar3,"closecaption"),
           (piVar5 = (int *)(**(code **)(*DAT_106cb868 + 0xdc))(iVar1,"ENGINE"),
           (uVar2 = FUN_10399710((byte *)param_1,(byte *)"shards"), uVar2 != 0)))) {
           (uVar2 = FUN_10399710(pbVar1,(byte *)"entry_name"), uVar2 == 0)) &&
           (uVar3 = FUN_100612d0(pvVar4,"npc_track_vehicle"), (char)uVar3 != '\0')))))) ||
           (uVar3 = FUN_103996b0(pbVar1,(byte *)"scripts/vehicles/van-2.txt"), uVar3 == 0)) {
           (uVar3 = FUN_10399710(pbVar5,(byte *)"player_manager"), uVar3 != 0)) {
           (uVar4 = FUN_10265f50(pbVar2,(byte *)"backbuffer"), uVar4 == 0)) ||
           (uVar4 = FUN_10265f50(pbVar2,(byte *)"depthbuffer"), uVar4 == 0)))) ||
           (uVar4 = FUN_10399710(pbVar5,(byte *)"worldspawn"), uVar4 != 0)) {
           (uVar5 = FUN_10399710((byte *)param_2[0x102],(byte *)"_rstat"), uVar5 == 0)) {
           (uVar5 = FUN_10399710(pbVar7,(byte *)"SlashTranslationData"), this = local_14,
           (uVar5 = FUN_1042df80(pbVar7,(byte *)"SlashTranslationData"), this = local_14,
           (uVar6 = FUN_10314280(DAT_10693b08,(uint *)"extra_ammo",'\x01'), (char)uVar6 != '\0')) {
           ,"SERVER");
          "  ---------- ---------      ---------- ------      ---------- ------   -------- ------\n"
          "*** trigger_playermovement using obsolete spawnflag. Remove and reset with new value for \"Disable auto player movement\"\n"
          "CParticleMgr::LevelInit:  Manifest \'%s\' with bogus file type \'%s\', expecting \'file\'\n"
          "Illegal termination of worker thread! Threads must negotiate an end to the thread before the CThread object is destroyed.\n"
          "Physics object pointer unexpectedly non-null before restore. Should be creating physics object in CreatePhysics()?\n"
          "VIP_Think()::not searching for/getting into a vehicle or searching for case goal, so now I shall look for cars\n"
          "Warning! Game event listener registerd for all events. Use newer game event interface.\n"
          "[RULES] removing gamerules response callback from fixapi, gamerules is being destroyed.\n"
          "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_dma.cpp");
          "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_dma.cpp",0x1642,
          "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_dma.cpp",0x1877);
          "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_dma.cpp",0x190d,
          "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_dma.cpp",0x6c4,pcVar5
          "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_wave_mixer.cpp",0x150
          "env_beams cannot have the end entity be the beam itself\nunless the start entity is also the beam itself!\n"
          && (DAT_10730ccc = (*(code *)param_1)("VEngineRenderView013",0), DAT_10730ccc != 0)) &&
          (((DAT_10730cfc = (*(code *)param_1)("VENGINE_GAMEUIFUNCS_VERSION005",0),
          (((char *)local_94[0x17] == "func_breakable" ||
          (((uVar2 = FUN_10399710((byte *)param_1,(byte *)"deadmodel"), uVar2 != 0 &&
          ((iVar2 = FUN_10265c20((int)pcVar6,"steambeta://",0xc), iVar2 == 0 ||
          ((iVar2 = FUN_10399480((int)pcVar6,"steambeta://",0xc), iVar2 == 0 ||
          ((iVar2 = FUN_1042dc70((int)pcVar6,"steambeta://",0xc), iVar2 == 0 ||
          ((pcVar3 = FUN_102640a0((char *)pbVar2,(int)"colorcorrection"), pcVar3 != (char *)0x0 ||
          ((uVar3 = FUN_100612d0(pvVar4,"npc_vehicle"), (char)uVar3 != '\0' ||
          ((uVar4 = FUN_10265f50(pbVar2,(byte *)"normalize"), uVar4 == 0 || (*pbVar2 == 0)))))) {
          (**(code **)(*(int *)PTR_DAT_10417834 + 0x34))("autosave",local_54,0,1);
          (**(code **)(*(int *)param_1[0x7e] + 0x388))("#Loadout_BOMB_CT");
          (**(code **)(*(int *)param_1[0x7e] + 0x388))("#Loadout_BOMB_Ter");
          (**(code **)(*(int *)param_1[0x7e] + 0x388))("#Loadout_HG_CT");
          (**(code **)(*(int *)param_1[0x7e] + 0x388))("#Loadout_HG_Ter");
          (**(code **)(*(int *)param_1[0x7e] + 0x388))("#Loadout_HR_CT");
          (**(code **)(*(int *)param_1[0x7e] + 0x388))("#Loadout_HR_Ter");
          (**(code **)(*(int *)param_1[0x7e] + 0x388))("#Loadout_VIPCAR_CT");
          (**(code **)(*(int *)param_1[0x7e] + 0x388))("#Loadout_VIPCAR_Ter");
          (**(code **)(**(int **)((int)this + 0x1e8) + 0x388))("You!!");
          (**(code **)(**(int **)((int)this + 0x228) + 0x364))("killername",local_8c);
          (**(code **)(**(int **)(param_1 + 0x6c) + 0x150))(param_1,"Blood");
          (**(code **)(**(int **)(param_1 + 0x6c) + 0x150))(param_1,"GreenBlood");
          (**(code **)(**(int **)(param_1 + 0x6c) + 0x254))(param_1,"Blood");
          (**(code **)(**(int **)(param_1 + 0x6c) + 0x254))(param_1,"GreenBlood");
          (**(code **)(**lpParameter + 4))("WeightB",fVar2);
          (**(code **)(**lpParameter + 4))("WeightG",fVar2);
          (**(code **)(**lpParameter + 4))("WeightR",fVar2);
          (**(code **)(*DAT_105f8b1c + 0xc))("sky_ti_09_hdr");
          (**(code **)(*DAT_106466ac + 0x254))("ENDOFMATCH");
          (**(code **)(*DAT_106466ac + 0x94))("autosavedangerousissafe\n");
          (**(code **)(*DAT_106a5f0c + 0x158))("UI/menu_focus.wav");
          (**(code **)(*DAT_106a5f0c + 0x158))("resource/warning.wav");
          (**(code **)(*DAT_106cb814 + 8))("CColorMeshData::CreateResource");
          (**(code **)(*DAT_106cb814 + 8))("WorldStaticMeshCreate");
          (**(code **)(*DAT_106cb85c + 0x158))("UI/menu_focus.wav");
          (**(code **)(*DAT_106cb85c + 0x158))("resource/warning.wav");
          (**(code **)(*DAT_10730cc4 + 0x28))("exec joy_configuration.cfg");
          (**(code **)(*DAT_10730cc4 + 0x28))("exec joy_configuration_sc.cfg");
          (**(code **)(*DAT_10730cc4 + 0x28))("exec undo360controller.cfg");
          (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,iVar10 + 2,"EF_NODRAW");
          (**(code **)(*DAT_107c0a04 + 0x150))(pcVar3,"ClientEffect textures",0,0);
          (**(code **)(*DAT_107c0a6c + 0x158))("UI/menu_focus.wav");
          (**(code **)(*DAT_107c0a6c + 0x158))("resource/warning.wav");
          (**(code **)(*local_10 + 0x94))("model","models/props_containers/ammo_box-2.mdl");
          (**(code **)(*local_14 + 0x34))("attacker",uVar22);
          (**(code **)(*local_14 + 0x34))("location",uVar8);
          (**(code **)(*local_14 + 0x34))("userid",uVar22);
          (**(code **)(*local_8 + 0x388))("#GP_VIPCar_CTDriver");
          (**(code **)(*local_8 + 0x388))("#GP_VIPCar_CTVIPDriver");
          (**(code **)(*param_1 + 0x28))("networkid",&DAT_103236cf);
          (**(code **)(*param_1 + 0xc))(param_1,"expecting flex animation data\n");
          (**(code **)(*piVar12 + 0x30))("penetrate",0 < local_64);
          (**(code **)(*piVar3 + 0x34))("blocked",1);
          (**(code **)(*piVar3 + 0x388))("#none");
          (**(code **)(*piVar4 + 8))("UseChannelWeighting",1,uVar3);
          (**(code **)(*piVar5 + 0x34))("userid",uVar6);
          (**(code **)(*piVar5 + 0x40))(&DAT_104e49ac,"fire_extinguisher");
          (**(code **)(*piVar5 + 0x40))(&DAT_10567020,"rappel_point");
          (**(code **)(*piVar6 + 0x34))("subject",iVar2);
          (**(code **)(*piVar6 + 0x34))("userid",uVar7);
          (**(code **)(*piVar6 + 0x94))("fademaxdist",&DAT_10436dec);
          (**(code **)(*piVar6 + 0x94))("fademindist",&DAT_1043b6a0);
          (**(code **)(*piVar6 + 0x94))("fadescale",&DAT_10436de8);
          (**(code **)(*piVar6 + 0x94))("inertiaScale",&DAT_10436e38);
          (**(code **)(*piVar6 + 0x94))("model",CONCAT84(uVar7,param_1));
          (**(code **)(*piVar6 + 0x94))("physdamagescale",&DAT_104388e4);
          (**(code **)(*piVar6 + 0x94))("targetname",puVar3);
          (**(code **)(*piVar7 + 0x4c4))("0 - no auto-resize",0);
          (**(code **)(*piVar7 + 0x4c4))("0 - top-left",0);
          (**(code **)(*piVar7 + 0x4c4))("1 - resize right",0);
          (**(code **)(*piVar7 + 0x4c4))("1 - top-right",0);
          (**(code **)(*piVar7 + 0x4c4))("2 - bottom-left",0);
          (**(code **)(*piVar7 + 0x4c4))("2 - resize down",0);
          (**(code **)(*piVar7 + 0x4c4))("3 - bottom-right",0);
          (**(code **)(*piVar7 + 0x4c4))("3 - down & right",0);
          (**(code **)(*piVar7 + 0x4c4))("4 - no pin",0);
          (**(code **)(*piVar8 + 0x94))("MaxAnimTime",&DAT_104897f0);
          (**(code **)(*piVar8 + 0x94))("MinAnimTime",&DAT_10436df0);
          (**(code **)(*piVar8 + 0x94))("angles",local_318);
          (**(code **)(*piVar8 + 0x94))("fademaxdist",&DAT_10436dec);
          (**(code **)(*piVar8 + 0x94))("fademindist",&DAT_1043b6a0);
          (**(code **)(*piVar8 + 0x94))("fadescale",&DAT_10436de8);
          (**(code **)(*piVar8 + 0x94))("model",local_518);
          (**(code **)(*piVar8 + 0x94))("solid",puVar9);
          (**(code **)(*piVar9 + 0xc4))(piVar9,param_1,"#Valve_Reject_Reserved_For_Lobby");
          (**(code **)(*piVar9 + 0xc4))(piVar9,param_1,"Invalid Steam key length\n");
          (**(code **)(*this + 0x94))("vehiclescript","scripts/vehicles/tractor-1.txt");
          (**(code **)(iVar1 + 0x34))("subject",uVar6);
          (**(code **)(iVar18 + 0x1c))(DAT_10730cd0,&local_5c,0,0,"%d:%s",uVar13);
          (**(code **)(iVar2 + 0x34))("subject2",iVar5);
          (**(code **)(iVar2 + 0x70))(DAT_10681754,local_8,"banid 0 %s\r\n",puVar1);
          (**(code **)(iVar3 + 0x7c))(piVar2,0x10,"Rain render    : %du",(int)uVar7);
          (**(code **)(piVar1[1] + 0x84))("bone_Chest");
          (**(code **)(piVar1[1] + 0x84))("bone_Groin");
          (**(code **)(piVar1[1] + 0x84))("bone_Head");
          (**(code **)(piVar1[1] + 0x84))("bone_L_Arm");
          (**(code **)(piVar1[1] + 0x84))("bone_L_Leg");
          (**(code **)(piVar1[1] + 0x84))("bone_R_Arm");
          (**(code **)(piVar1[1] + 0x84))("bone_R_Leg");
          (**(code **)(piVar1[1] + 0x84))("bone_Stomach");
          (*pcVar10)("#%i - %s\n",iVar9 + 1,uVar4);
          (*pcVar10)(&local_c,"Unable to bind \"%s\" to a key\n",puVar11);
          (*pcVar11)("Bogus route move type!");
          (*pcVar11)("CToolFrameworkInternal::LoadToolsFromLibrary:  Dll \'%s\' has no factory\n",
          (*pcVar11)("ERROR: %s navigation not terminating. Possibly bad cyclical solving?\n",pcVar9
          (*pcVar14)("           Other markers removed.\n");
          (*pcVar14)("Whitelist: from_steam not compatible with other modifiers (used on %s).\n",
          (*pcVar3)("Found an exclude prop missing a name.");
          (*pcVar3)("SendTable_GetPropsExcluded: Overflowed max exclude props with %s.",iVar1);
          (*pcVar5)("[GAMEUI] After close all windows:\n");
          (*pcVar8)("        %2d. NULL\n",iVar5);
          (*ppcVar1[3])(*(undefined4 *)((int)param_1 + 0xa8),"expecting channel got %s\n",uVar5);
          (DAT_10730ce4 = (*(code *)param_1)("VFileSystem017",0), DAT_10730ce4 != 0)) &&
          (FUN_1017f620(param_1,"BaseEntity.EnterWater",0,0), ((uint)param_1[0x38] >> 0x1d & 1) == 0
          (bVar1 = FUN_100a6de0(piVar2,"path_track"), bVar1)))) {
          (bVar1 = FUN_100a6de0(this_00,"prop_vehicle_jeep"), !bVar1)))) {
          (bVar3 = FUN_100a6de0(this_00,"soundent"), bVar3)))) goto LAB_100ef3a4;
          (iVar4 = FUN_10265c20((int)pcVar3,"music/",6), iVar4 != 0)))) {
          (pcVar5 = (char *)FUN_1039db00(param_1,(uint *)"map/mapname",(uint)&DAT_1043677a),
          (piVar3 = (int *)FUN_10444d70(param_1,(byte *)"LobbyHeaderLabel",1), piVar2 != (int *)0x0)
          (piVar6 = (int *)(**(code **)(*piVar4 + 0x2c))("$basetexture",&local_5,1), local_5 != '\0'
          (psVar5 = (short *)FUN_1042f5c0(local_50,(uint *)"DrawAsButton",(uint)&DAT_104ef75c),
          (pvVar4 = FUN_1011d260(iVar3,(byte *)"map_background"), pvVar4 == (void *)0x0)))))) &&
          (uVar3 = FUN_100612d0(pvVar4,"prop_physics"), (char)uVar3 != '\0')) ||
          (uVar4 = FUN_10265ef0(local_104,(byte *)"cl_lc"), uVar4 != 0)))))) &&
          (uVar5 = FUN_10314280(DAT_10693b08,(uint *)"spawn_in_cars",'\x01'), (char)uVar5 != '\0')))
          (uVar5 = FUN_1039db00(local_c,(uint *)"surfaceprop",(uint)&DAT_1043677a), uVar5 != 0)) &&
          *(char *)((int)&local_60 + iVar3 + 1) = "0123456789abcdef"[_C & 0xf];
          *(char *)((int)&local_60 + iVar3) = "0123456789abcdef"[bVar1 >> 4];
          *(char **)(&DAT_1004ff40 + iVar6 * 8) = "LBH_free";
          *(char **)(&stack0xffffffe8 + iVar2) = "command";
          *(char **)((int)apcStackY44 + iVar18 + 4) = "Unloading module %s, dll %s\n";
          *(char **)(puVar10 + -0xc) = "Module %s unloaded, reloading\n";
          *(char **)(puVar14 + -8) = "Warning: overflowed CClientRenderablesList group %d";
          ,"client",iVar3,(double)*(float *)(iVar2 + 4 + iVar1),
          ,"server",iVar3,(double)*(float *)(iVar2 + 4 + iVar1),
          COM_TimestampedLog("CBaseServer::ConnectClient:  client->Connect");
          COM_TimestampedLog("C_BaseAnimating::InitBoneSetupThreadPool");
          COM_TimestampedLog("ClientDLL Init - Finish");
          COM_TimestampedLog("InitGameSystems");
          COM_TimestampedLog("String Table Callbacks %s - Finish",uVar5);
          COM_TimestampedLog("String Table Callbacks %s - Start",uVar5);
          ConColorMsg((Color *)&DAT_106a8e20,"GAME INSTRUCTOR: ");
          ConColorMsg((Color *)&DAT_106a8e24,")\n");
          ConColorMsg((Color *)&DAT_106a8e24,".\n");
          ConColorMsg((Color *)&DAT_106a8e24,"Close event ");
          ConColorMsg((Color *)&DAT_106a8e24,"Open event ");
          ConColorMsg((Color *)&DAT_106a8e24,"Opportunity ");
          ConColorMsg((Color *)&DAT_106a8e24,"Set to not draw...\n");
          ConColorMsg((Color *)&DAT_106a8e24,"Started lesson ");
          ConColorMsg((Color *)&DAT_106a8e24,"Success event ");
          ConColorMsg((Color *)&DAT_106a8e24,"Update event ");
          ConColorMsg((Color *)&DAT_106a8e24,"\tQ_strcpy( [%s], [%s]->GetPlayerName() ");
          ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] = [%s]->GetActiveWeapon()",param_2,param_3);
          ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetActiveWeapon()->Clip1Percentage() ");
          ConColorMsg((Color *)&DAT_106a8e24,"received for lesson \"%s\"...\n",puVar3);
          ConColorMsg((Color *)&DAT_106a8e24,"received for lesson \"%s\"...\n",puVar4);
          ConColorMsg((Color *)&DAT_106a8e24,"received for lesson \"%s\"...\n",puVar6);
          ConColorMsg((Color *)&DAT_106a8e28,"%.1f ");
          ConColorMsg((Color *)&DAT_106a8e28,"%.1f\n",(double)(float)param_6);
          ConColorMsg((Color *)&DAT_106a8e28,"\"%s\" ");
          ConColorMsg((Color *)&DAT_106a8e28,"\"%s\"\n",param_8);
          ConColorMsg((Color *)&DAT_106a8e2c,"\"%s\"");
          ConColorMsg((Color *)&DAT_106a8e2c,"\"%s\"",uVar5);
          ConColorMsg((Color *)&DAT_106a8e30,"\"%s\" ",uVar5);
          ConColorMsg((Color *)&DAT_106a8e30,"\"%s\"");
          ConColorMsg((Color *)&DAT_106a8e34,"\"%s\"");
          ConColorMsg((Color *)&DAT_106a8e38,"\"%s\"");
          ConColorMsg((Color *)&local_11,"\"%s\"");
          ConColorMsg((Color *)&local_15,"received for lesson \"%s\"...\n",puVar5);
          ConColorMsg((Color *)&local_9,"GAME INSTRUCTOR: ");
          ConColorMsg((Color *)&local_d,"OnOpen event ");
          ConColorMsg((Color *)&param_1,"non-entity blocked area %d\n",
          ConColorMsg((Color *)&param_7,"Adding direct connect IP to reservation %s\n",pcVar6);
          ConDMsg("Netchannel: failed processing message %s.\n",local_1c);
          ConDMsg("Unable to load sky %s, but successfully loaded %s\n",uVar6,pcVar7);
          ConDMsg("Unexpected \'{\' found, line %d\n",local_10);
          ConDMsg("client model cache miss on %s\n",uVar3);
          ConDMsg("client sound cache miss on %s\n",piVar3);
          ConDMsg("server model cache miss on %s\n",uVar3);
          ConMsg("%03i:  %s (%s):   ",iVar5,iVar2);
          ConMsg("%03i:  %s (%s):   ",iVar6,iVar4);
          ConMsg("%i:%i:\"%s\"\n",uVar2);
          ConMsg("%s %s: file size larger than 1 MB!\n",puVar6,pcVar14);
          ConMsg("%s %s: invalid path.\n",puVar6,local_114);
          ConMsg("%s has invalid demo header ID.\n",param_1);
          ConMsg("%s:reliable state invalid (%i).\n",pcVar8,local_1c);
          ConMsg("Can\'t change replicated ConVar %s from console of client, only server operator can change its value\n"
          ConMsg("Can\'t save multiplayer games.\n");
          ConMsg("ERROR: demo network protocol %i outdated, engine version is %i \n",
          ConMsg("Game event \"%s\", Tick %i:\n",uVar9,*(undefined4 *)(iVar7 + 200));
          ConMsg("ID: %i, \"%s\" %s, Time %s, %s, In %.1f, Out %.1f.\n",uVar4);
          ConMsg("Invalid setmaster command\n");
          ConMsg("Old challenge from %s.\n",pcVar4);
          ConMsg("Resending subchan %i: start %i, num %i\n",piVar11[4],piVar11[-2],*piVar11);
          ConMsg("Sending subchan %i: start %i, num %i\n",*(undefined4 *)(uVar2 + 0x18),puVar11[-2],
          ConMsg("Server event \"%s\", Tick %i:\n",
          ConMsg("SetConVar: Can\'t set server cvar %s to %s, not marked as FCVAR_REPLICATED on client\n"
          ConMsg("StartupDemoFile: couldn\'t open demo file header.\n");
          ConMsg("TCP <- %s: ACKN seq=%i\n",pcVar5,iVar4);
          ConMsg("TODO: SV_User_f.\n");
          ConMsg("WARNING! NET_CloseSocket: %s\n",pcVar4);
          ConMsg("removeid:  couldn\'t find %s\n",local_5c);
          DAT_106ac640 = (*DAT_106abcdc)("ServerGameClients004",0);
          DAT_106ac648 = (*DAT_106abcdc)("HLTVDirector001",0);
          DAT_106ac650 = (*DAT_106abcdc)("ServerGameTags001",0);
          DAT_107347c8 = (**(code **)(*DAT_107c09d4 + 0x44))("host_thread_mode");
          DName::DName((DName *)param_1,"std::nullptr_t");
          DName::operator__((DName *)&local_18,"[]");
          DName::operator__((DName *)&local_30,"`adjustor{");
          DName::operator__((DName *)param_1,"...");
          DevMsg("       Aborting schedule load.\n");
          DevMsg(" ");
          DevMsg("%40s: Age: %6.2f, NumActive: %3d, Bounds Center: (%.2f,%.2f,%.2f) (0x%08X)\n",
          DevMsg("%d ",*(undefined4 *)(*(int *)(param_1 + 0x38) + uVar5 * 4));
          DevMsg("%s: %s",pcVar8,local_30);
          DevMsg("**ERROR: Can\'t find a rally point named \'%s\'\n",pcVar11);
          DevMsg("**ERROR: Entity %s being used as an assault_assaultpoint, but is actually a %s!\n"
          DevMsg("BroadcastMessage: Reliable broadcast message overflow for client %s",uVar3);
          DevMsg("CBaseClient::ProcessBaselineAck: invalid frame snapshot (%i)\n",
          DevMsg("CL_QueueEvent: missing client receive table for %s.\n",*(undefined4 *)(iVar6 + 4))
          DevMsg("CL_QueueEvent: missing server class info for %i.\n",uVar9);
          DevMsg("ERROR: LoadSchd (%s): (%s) Unknown task %s!\n",param_1,puVar7[0xb],pbVar4);
          DevMsg("ERROR: LoadSchd (%s): Schedule (%s), Unknown condition %s!\n",param_1,puVar7[0xb],
          DevMsg("ERROR: LoadSchd (%s): Schedule (%s),\n        Task (%i), has a malformed AI Task Argument = (%s)\n"
          DevMsg("ERROR: file contains a schedule (%s) that has already been defined!\n",pbVar4);
          DevMsg("Error: Invalid SoundEntry hash %i from entry %s\n",*(undefined4 *)(param_2 + 0x1c)
          DevMsg("Error: Invalid SoundEntry hash %i from entry %s\n",*(undefined4 *)(param_2 + 0x20)
          DevMsg("Error: Invalid SoundEntry hash %i from entry %s\n",*puVar1,pbVar4);
          DevMsg("Error: MixLayer Trigger entries require minimum 2 arguments\n");
          DevMsg("Finished Ammo Box: %f\n",(double)fVar6);
          DevMsg("FixGame API Loaded Version: %d\n",uVar7);
          DevMsg("Found %i matching rules, selecting slot %i\n",iVar4,iVar5);
          DevMsg("GetBestEquipment::Choosing %s Shield\n",pcVar8);
          DevMsg("MixGroup %s: %f : %f : %f : %f : %f \n",local_3c,(double)local_8,(double)local_c,
          DevMsg("Mod_LoadTexinfo: texdata < 0 (index==%i/%i)\n",local_8,uVar11);
          DevMsg("Opening Ammo Box: %f\n");
          DevMsg("Rejecting connection request from %s (reservation cookie 0x%llx), server is reserved with reservation cookie 0x%llx for %.1f more seconds\n"
          DevMsg("SV_InstallClientStringTableMirrors! Missing client table \"%s\".\n ",uVar2);
          DevMsg("SV_InstallHLTVStringTableMirrors! Missing client table \"%s\".\n ",uVar4);
          DevMsg("SetConVar: %s = \"%s\"\n",iVar6,iVar1);
          DevMsg("Setting MixLayer %s\n",pbVar5);
          DevMsg("Setting Mixer %s: MixGroup %s: %s : %f\n",param_4 + 1,pcVar3,param_2);
          DevMsg("Setting excluded textures: %s\n",local_22c);
          DevMsg("Spawned mafia helicopter\n");
          DevMsg("Stringtable %s compression: %d -> %d bytes: %.2fms\n",uVar6);
          DevMsg("TE %s Recv Full Update\n",*(undefined4 *)(iVar6 + 4));
          DevMsg("TE %s Recv Update\n",*(undefined4 *)(iVar6 + 4));
          DevMsg("TE %s delta bits: %i\n",*(undefined4 *)(piVar7[2] + 8),
          DevMsg("TE %s full bits: %i\n",*(undefined4 *)(piVar7[2] + 8),(int)local_44 - (int)local_c
          DevMsg("UTIL_PointInside_GameZone: Point (%s) is inside gamezone of type (%i)\n",
          DevMsg("WARNING: DSP preset failed to allocate.\n");
          DevMsg("Warning! Client ragdoll props overflow *max %i).\n",iVar6);
          DevMsg("Worldcraft failed in PurgeDynamicLinks...\n");
          DevMsg("[%s]Adding %s to NPC ModelList\n","Client",pcVar12);
          DevMsg("[%s]Adding %s to NPC ModelList\n","Server",pcVar12);
          DevMsg("[CARDEBUG] CREATED NEW VEHICLE UPDATE\n");
          DevMsg("[CARDEBUG] END NEW VEHICLE UPDATE\n");
          DevMsg("[CARDEBUG] VEHICLEUPDATE::POS: [%s] ANG: [%s]\n",(int)puVar4 + 5,(int)puVar3 + 5,
          DevMsg("[RULES] %s Delta XP: %i Delta GP: %i\n",uVar5);
          DevMsg("[RULES] ** %s CAMPER: %s\n");
          DevMsg("[RULES] ** %s RUSHER: %s\n");
          DevMsg("[Sound DSP] Dsp %d processed.\n",param_1);
          DevMsg("[Sound DSP] For Dsp %d, %s previous preset %d has not been updated for a while. Do not cross-fade form it.\n"
          DevMsg("[Sound DSP] For Dsp %d, don\'t consider cross fading from presets %d to %d as previous preset is expired.\n"
          DevMsg("\n***\nFAILED to create private ScriptScope. ABORTING script\n***\n");
          DevMsg("closing TIMainMenuContainer..\n");
          DevMsg("dB drop: %1.4f \n");
          DevMsg("dsp: %3.2f ",(double)*(float *)(param_1 + 0x480 + iVar2 * 4));
          DevMsg("found child: %s\n",uVar3);
          DevMsg("lvl: %3.2f ",(double)*(float *)(param_1 + 0x280 + iVar2 * 4));
          DevMsg("mute: %3.2f\n");
          DevMsg("solo: %3.2f ",(double)*(float *)(param_1 + 0x680 + iVar2 * 4));
          DevMsg("vol: %3.2f ",(double)*(float *)(param_1 + 0x80 + iVar2 * 4));
          DevMsg(1,"Error! CMapOverview::SetMap: map image must be a square.\n");
          DevMsg(1,"ScheduledFollowPath to goal entity %s failed\nCan\'t execute script %s\n",puVar6
          DevMsg(1,"ScheduledMoveToGoalEntity to goal entity %s failed\nCan\'t execute script %s\n",
          DevMsg(1,"Static prop in 0 leaves! %s, @ %.1f, %.1f, %.1f\n",uVar6);
          DevMsg(1,"Updated looping radius sound %d to vol=%f\n",iVar11);
          DevMsg(2,"Probable duplicate node placed at %s\n",(int)puVar4 + 5);
          DevMsg(3,"(Client)Ensuring %s is loaded on the client for pure-client breaks.\n",
          DevWarning("Couldn\'t set relationship to unknown entity or class (%s)!\n",pbVar1);
          DevWarning("ERROR: Dynamic link at %f %f %f pointing to invalid node ID!!\n",
          DevWarning("Error: SoundEmitterSystem not initialized in engine!");
          DevWarning("Error: SoundEmitterSystem not initialized in engine!\n");
          DevWarning("Found %s\n");
          DevWarning("Invalid entity ID used in game event (%s) for param (%s).",pcVar3,ppvVar7);
          DevWarning("Invalid event field name and not a float \"%s\".\n");
          DevWarning("Locator Target has no offscreen texture name and can\'t fall back!\n");
          DevWarning("NULL entity in global entity list!\n");
          DevWarning("logic_branchlist %s refers to entity %s, which is not a logic_branch\n",pcVar4
          DevWarning("tried to spawn %i hostages %i times, could not spawn them all!\n",uVar3,
          DevWarning(1,"AutoIKRelease (%s) got an out of range chain %d (%d)\n",iVar2,local_98,
          DevWarning(1,"Max Active Snow Volume Count!\n");
          Error("AddRecvTableR: overflowed MAX_DATATABLES");
          Error("CPropCullStack::AddProp - m_pOutProps overflowed");
          Error("ClientSetupVisibility: portal number (%d) too large",uVar5);
          Error("CreateInfoRules:: Can\'t init\n");
          Error("CreateWorld:: Can\'t init\n");
          Error("DispInfo_LoadDisplacements: invalid tri count (%d)",iVar5);
          Error("DispInfo_LoadDisplacements: invalid vertex count (%d)",iVar5);
          Error("Expecting \'file\', got %s\n",puVar6);
          Error("Expecting \'file\', got %s\n",puVar7);
          Error("Generate: Error - Data corrupt.\n");
          Error("InitFastCopy - missing client class %d (Should be equivelent of server class: %s)",
          Error("InitFastCopy - missing server class %s",*(undefined4 *)(iVar5 + 8));
          Error("Module %s is a debug build\n",param_1);
          Error("Platform Error: bad module \'%s\', not loading\n",uVar4);
          Error("Prop %s/%s has an invalid element count for a non-array.",piVar1[2],
          Error("RecvTable_Decode: table \'%s\' missing a decoder.",*(undefined4 *)(param_4 + 0xc));
          Error("RecvTable_Init: table \'%s\' has a decoder already.",piVar2[3]);
          Error("Save buffer overflow! Report map and conditions!\n");
          Error("SendTable_Encode: Missing m_pPrecalc for SendTable %s.",
          Error("SetupArrayProps_R: array prop \'%s\' is at index zero.",
          Error((byte *)"CCommandLine::AddArgument: exceeded %d parameters");
          FUN_00420e80(&DAT_00447480,"LoadFromBuffer: missing {");
          FUN_00423270(param_1,"");
          FUN_10021180(local_140,(byte *)"Node pathfind failed, no route between %d and %d\n");
          FUN_10021180(local_140,(byte *)"[Nav] %s");
          FUN_10021180(local_154,(byte *)"[Nav] %s");
          FUN_10021180(local_160,(byte *)"(%f, %f, %f)");
          FUN_10021180(local_24c,(byte *)"[Nav] %s");
          FUN_10021180(local_274,(byte *)"[Nav] %s");
          FUN_10021180(local_2f0,(byte *)"[Nav] %s");
          FUN_10021180(local_380,(byte *)"[Nav] %s");
          FUN_10034f18("timestamped.log");
          FUN_1003ff90(this,(int)"Waiting for script, but lost script!");
          FUN_10045430(pvVar4,(int)"Can\'t find rally point");
          FUN_1005bfa0((byte *)"%8.4f : %30s : %5.3f : %4.2f  +\n");
          FUN_1005bfa0((byte *)"%8.4f : %30s : %5.3f : %4.2f : %1d\n");
          FUN_1005bfa0((byte *)"(%7.4f : %30s : %5.3f : %4.2f : %1d)\n");
          FUN_1005e5e0(this_00,"explosion_spot1",&local_10,&local_1c);
          FUN_1005e5e0(this_00,"explosion_spot2",&local_10,&local_1c);
          FUN_1005e5e0(this_00,"explosion_spot3",&local_10,&local_1c);
          FUN_10076710(this,"RestoreEntityToPredictedFrame",param_2,2);
          FUN_100b8210(param_1,0,*(float *)(DAT_10646018 + 0x10),"AmmoBoxThink");
          FUN_100d0610(&DAT_105a0e40,param_1,"_OnLogicBranchRemoved",0.0,param_1,param_1,0.0);
          FUN_10104e40((void *)((int)this + 0x10),param_1,this_00,(uint *)"PupilCloseRate",
          FUN_10122600(this,"models/gibs/agibs.mdl",0x41c80000);
          FUN_10122600(this,"models/gibs/hgibs.mdl",0x41c80000);
          FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
          FUN_1013aba0(&local_10,(byte *)"pradius",(char *)local_858);
          FUN_10142270(param_1,(int)param_3,(byte *)"StringTable %s");
          FUN_101422f0(param_1,iVar4 - local_34,(byte *)" [%s] %d:%s ");
          FUN_10146100((int)"explode_food_fries",*param_1,*(undefined4 *)(param_1 + 1),local_18,
          FUN_10146100((int)"explodefx_pillar",*param_1,*(undefined4 *)(param_1 + 1),local_18,
          FUN_10146100((int)"explodefx_plastic_white",*param_1,*(undefined4 *)(param_1 + 1),local_18
          FUN_10146100((int)"headshot_gibs",local_20,local_18,local_2c,local_24,(int *)0x0,'\x01',-1
          FUN_10146100((int)"impact_fx_cologne_small",*param_1,*(undefined4 *)(param_1 + 1),local_18
          FUN_10146100((int)"impact_fx_electronics",*param_1,*(undefined4 *)(param_1 + 1),local_18,
          FUN_10146100((int)"impact_fx_stone_BIG",CONCAT44(fStack12,local_10),local_8,local_1c,
          FUN_10146100((int)"impact_fx_wood_BIG",CONCAT44(fStack12,local_10),local_8,local_1c,
          FUN_10146100((int)"steam_spew",CONCAT44(fStack320,local_144),local_13c,local_248,local_240
          FUN_10146160((int)"bloodtrail",1,this,0xffffffff,'\0',-1,0,'\0');
          FUN_10146160((int)"fx_firesmoke_trail",1,this,0xffffffff,'\0',-1,0,'\0');
          FUN_10146160((int)"fx_smoke_trail",1,this,0xffffffff,'\0',-1,0,'\0');
          FUN_10146160((int)"large_metal_gib_trail",1,piVar6,0xffffffff,'\0',-1,0,'\0');
          FUN_10146160((int)"police_light_blue",5,piVar1,iVar7,'\0',-1,0,'\0');
          FUN_10146160((int)"police_light_red",5,piVar1,iVar8,'\0',-1,0,'\0');
          FUN_1014a8a0(this,(byte *)"Addip: \"<><><>\" %s \"%s\" by \"%s\" (IP \"%s\")\n");
          FUN_1014a8a0(this,(byte *)"Banid: \"%s<%i><%s><>\" %s \"%s\" by \"%s\"\n");
          FUN_1014a8a0(this,(byte *)"Removeid: \"<><%s><>\" was unbanned by \"%s\"\n");
          FUN_10152750("bug -auto");
          FUN_10152f40(local_8,(uint)pbVar1,"Failed to read console log!\n");
          FUN_10152f40(pvVar2,(uint)pbVar1,"Bad Password");
          FUN_10152f40(pvVar2,(uint)pbVar1,"Remote VProf finished!\n");
          FUN_10152f40(pvVar2,(uint)pbVar1,"Remote VProf started!\n");
          FUN_10152f40(pvVar2,(uint)pbVar1,"Remote bug submission\n");
          FUN_10153810(local_8,pbVar1,uVar4,(uint *)"Failed to read console log!\n");
          FUN_10153810(pvVar2,pbVar1,uVar4,(uint *)"Remote VProf finished!\n");
          FUN_10153810(pvVar2,pbVar1,uVar4,(uint *)"Remote VProf started!\n");
          FUN_10155b90((int)this,(byte *)"Request denied, invalid message type.");
          FUN_10160230(&local_18a4,(byte *)"%s: %s\n");
          FUN_1016a150(local_10,local_14,(int)local_c,(byte *)"bool differs (net %s pred %s)\n");
          FUN_1016a150(local_10,local_14,(int)local_c,(byte *)"byte differs (net %d pred %d)\n");
          FUN_1016a150(local_8,param_1,(int)local_10,(byte *)"bool differs (net %s pred %s)\n");
          FUN_1016a150(local_8,param_1,(int)local_10,(byte *)"byte differs (net %d pred %d)\n");
          FUN_1017c250("netspike.txt",local_40[0]);
          FUN_1017f620(param_1,"Dog.Run_Wood",0,0);
          FUN_1017f620(piVar4,"Metal_Barrel.BulletImpact",0,0);
          FUN_1017f620(this_00,"Player.PickupWeapon",0,0);
          FUN_1017f8a0(local_48,0.0,"Player.Roll_Water",&local_10,0,0);
          FUN_1017f8a0(local_74,0.0,"OOZ_50Cal.Fire",param_2,0,0);
          FUN_10186e40((byte *)"%s: Out-of-range value (%f) in SendPropFloat \'%s\', clamping.\n");
          FUN_1018eeb0((undefined4 *)&local_54,local_dc,0,-1,0x459c4000,'\x01',(byte *)"HeavyTracer"
          FUN_101a5c10((byte *)"CL_ParsePacketEntities:  buffer read overflow\n");
          FUN_101af190(PTR_DAT_10417830,(undefined4 *)"_autosave");
          FUN_101bdfa0((byte *)"%s : removed for \'%s\'\n");
          FUN_101c3fb0(this,"if_split_screen_left");
          FUN_101c3fb0(this,"if_split_screen_vertical");
          FUN_101c7240(local_14,"Car.Horn_A",0,0);
          FUN_101c7240(param_1,"AmmoBox.Open",0,0);
          FUN_101c7240(param_1,"Malinois.Bark",0,0);
          FUN_101c7240(param_1,"Player.Whistle_Dog_Goto",0,0);
          FUN_101c7240(this,"AI_BaseNPC.BodyDrop_Heavy",0,0);
          FUN_101c7240(this,"EDIT_DELETE",0,0);
          FUN_101c7240(this_00,"EDIT_MOVE_CORNER.NoMarkedArea",0,0);
          FUN_101c73c0((int *)local_24,fVar3,"Grenade.Switch",0,0,0);
          FUN_101cf7e0(*(void ***)((int)this + 8),(int *)param_1,(byte *)"%c00000000000000");
          FUN_101f1360(&DAT_10798800,(int)"joy_legacy");
          FUN_101f1360(local_14,(int)"cc_subtitles");
          FUN_101f1360(local_14,(int)"cl_steam_overlay_position");
          FUN_101f1360(local_14,(int)"closecaption");
          FUN_101f1360(local_14,(int)"option_duck_method");
          FUN_101f1360(local_14,(int)"ss_splitmode");
          FUN_101f1360(local_24,(int)"cc_subtitles");
          FUN_101f1360(local_24,(int)"closecaption");
          FUN_101f1360(local_24,(int)"force_audio_english");
          FUN_101f1360(local_24,(int)"z_wound_client_disabled");
          FUN_101f3700((int)param_1,3,"#ChangeTeamNextRound",pcVar4,pcVar7,pcVar8,pcVar9);
          FUN_101f3700((int)piVar3,3,"Targetted a hostage\n",(char *)0x0,(char *)0x0,(char *)0x0,
          FUN_101f3700((int)piVar3,3,"Targetting an NPC car\n",(char *)0x0,(char *)0x0,(char *)0x0,
          FUN_101f3700((int)this,3,"#Cannot_Be_Spectator",(char *)0x0,(char *)0x0,(char *)0x0,
          FUN_101f45d0(3,"*** %s1 has taken the lead.",pcVar6,pcVar10,pcVar11,pcVar12);
          FUN_101f54b0((byte *)"ATTEMPTING TO RESPAWN: %s ::\n");
          FUN_101f9bc0((byte *)"CVoiceGameMgr::ClientCommand: invalid index (%d)\n");
          FUN_101f9bc0((byte *)"CVoiceGameMgr::ClientCommand: vban (0x%x) from %d\n");
          FUN_101f9c90(&DAT_103256a0,extraout_EDX_15,local_814,(undefined (*) [16])"secure",pauVar7,
          FUN_101f9c90(extraout_ECX_02,extraout_EDX_02,local_814,(undefined (*) [16])"players",
          FUN_101f9c90(extraout_ECX_03,extraout_EDX_03,local_814,(undefined (*) [16])"players",
          FUN_101f9c90(extraout_ECX_11,extraout_EDX_12,local_814,(undefined (*) [16])"secure",
          FUN_101f9c90(extraout_ECX_12,extraout_EDX_13,local_814,(undefined (*) [16])"version",
          FUN_101f9c90(extraout_ECX_13,extraout_EDX_14,local_814,(undefined (*) [16])"product",
          FUN_101f9c90(extraout_ECX_14,extraout_EDX_16,local_814,(undefined (*) [16])"version",
          FUN_101f9c90(extraout_ECX_15,extraout_EDX_17,local_814,(undefined (*) [16])"product",
          FUN_101fbfb0((byte *)"portalnum > numareaportals");
          FUN_1020fa40(piVar10,(uint *)"console.log",local_78[0],local_5c,3);
          FUN_102202b0("Finding light intensity...",100,
          FUN_10221f90(*(void **)((int)this + 0x868),(byte *)"#L4D360UI_OpenMic");
          FUN_10221f90(*(void **)((int)this + 0x868),(byte *)"#L4D360UI_PushToTalk");
          FUN_1022df40((int)piVar1,this_00,0,(uint *)"North");
          FUN_1022df40((int)piVar1,this_00,2,(uint *)"South");
          FUN_102523f0(param_1,-2,(undefined4 *)"internal error: deflate stream corrupt");
          FUN_10265920((char *)(piVar9 + 0x8c),0x104,(byte *)"%s%s%s.tga");
          FUN_10265920((char *)(unaff_EBP + -0x768),0x104,(byte *)"%s/c%d_%d_%d%s");
          FUN_10265920((char *)auStack1900,0x104,(byte *)"%s/c%d_%d_%d%s");
          FUN_10265920((char *)local_49c,0x104,(byte *)"%s%s.wav");
          FUN_10265920((char *)local_5c,0x40,(byte *)"%s:%s:%s");
          FUN_10265920((char *)local_93c,0x400,(byte *)"%s%s%s");
          FUN_10265920(local_108,0x100,(byte *)"%s:%s");
          FUN_10265920(local_108,0x104,(byte *)"//%s/%s%s%02d.%s");
          FUN_10265920(local_108,0x104,(byte *)"//%s/%s%s.%s");
          FUN_10265920(local_134,0x104,(byte *)"screenshots/%s%04d%s");
          FUN_10265920(local_134,0x104,(byte *)"screenshots/%s/%s/%s%04d%s");
          FUN_10265920(local_15c,0x100,(byte *)"%i %s");
          FUN_10265920(local_20c,0x200,(byte *)"%s/%s.manifest");
          FUN_10265920(local_218,0x200,(byte *)"%s/%s");
          FUN_10265920(local_224,0x104,(byte *)"%s%s.wav");
          FUN_10265920(local_228,0x100,(byte *)"bind \"%s\" \"%s\"");
          FUN_10265920(local_33c,0x104,(byte *)"screenshots/%s_%04d%s");
          FUN_10265920(local_430,0x400,(byte *)"\t%s (%d %s)\n");
          FUN_10265920(local_43c,0x200,(byte *)"%s/c%d_%d_%d");
          FUN_10265920(local_43c,0x200,(byte *)"%s/cubemapdefault");
          FUN_10265920(local_94,0x80,(byte *)"S(%s%s) ");
          FUN_10265920(local_9c,0x80,(byte *)"%02d:%02d");
          FUN_10265920(local_9c,0x80,(byte *)"%2d:%02d:%02d");
          FUN_10265960(local_e8,0x3f,(ushort *)L"%i %s");
          FUN_102659a0(pbVar5,(byte *)"nosounds");
          FUN_102659b0(pcVar5,".hl");
          FUN_10265bf0((char *)pbVar7,(int)"dx90.vtx",10);
          FUN_10265bf0(local_358,(int)"default",0x200);
          FUN_10265f30((int)local_124,"V_MYNUM");
          FUN_10265f30((int)local_144,"V_MYNAME");
          FUN_10268540(puVar8,&local_8,(uint *)"fgColor",&param_1);
          FUN_102687d0(puVar8,(uint *)"alpha",0);
          FUN_10268930((void *)param_1[0x99],(uint *)"command",(uint)"      ");
          FUN_1026b080(&DAT_1041bbf8,"LoadFromBuffer: missing {");
          FUN_1026b280(this,(uint *)"SpecialTx",1);
          FUN_1026b2f0(puVar9,(uint *)"PanelPtr",uVar14);
          FUN_1026ebe0(local_14,"sky_ti_09_hdr");
          FUN_1026ebe0(param_1,"");
          FUN_1026ed50(local_1c,", ");
          FUN_1026ed50(local_1c,", +k");
          FUN_1026ed50(local_1c,", +m");
          FUN_10270a90(local_2c,"SV_CreateBaseline->writeBuf",local_419c,0x4000,-1);
          FUN_102868b0((int)param_1,"player_civrescue","#TI_Score_HGHCapture",0);
          FUN_102868b0((int)param_1,"player_civrescue","#TI_Score_HGHRescue",0);
          FUN_1029b7f0(iVar2,(byte *)"Gesture Slot %d(%s): NOT ACTIVE!\n");
          FUN_1029b7f0(iVar3,(byte *)"Gesture Slot %d(%s): NOT ACTIVE!\n");
          FUN_1029b7f0(local_8,(byte *)"Gesture Slot %d(%s): %s %s(A:%s, C:%f P:%f time %f)\n");
          FUN_1029b7f0(local_8,(byte *)"Gesture Slot %d(%s): %s %s(A:%s, C:%f P:%f)\n");
          FUN_1029f6d0(puVar3,(int)this,"CommandCheck",pcVar4,0);
          FUN_102ece79(local_104,(byte *)"- %s = %f");
          FUN_102ee0a0(iVar2,(byte *)"Gesture Slot %d(%s): NOT ACTIVE!\n");
          FUN_102ee0a0(iVar3,(byte *)"Gesture Slot %d(%s): NOT ACTIVE!\n");
          FUN_102ee0a0(local_8,(byte *)"Gesture Slot %d(%s): %s %s(A:%s, C:%f P:%f time %f)\n");
          FUN_102ee0a0(local_8,(byte *)"Gesture Slot %d(%s): %s %s(A:%s, C:%f P:%f)\n");
          FUN_102f3db4((byte *)"   %c=%d ~%d%%");
          FUN_10314250(DAT_10693b08,(uint *)"mafia_mode");
          FUN_103444b0((byte *)"CarExplosion",&local_84);
          FUN_103444b0((byte *)"ExplosionFireball",&local_84);
          FUN_103444b0((byte *)"HeliExplosion",&local_84);
          FUN_10362c70((int)"Impact",&local_a0);
          FUN_10362c70((int)"TeslaHitboxes",local_6c);
          FUN_10362c70((int)"WaterBigSplash",&local_98);
          FUN_10368590(local_28,(int)"Announcer");
          FUN_10368590(local_50,(int)"AdviseGrenade");
          FUN_10368590(local_60,(int)"RequestState");
          FUN_10368590(local_60,(int)"VoiceMask");
          FUN_103808c0(param_1,(int)"!self");
          FUN_103963c0((int)this,(byte *)"Skipping unrecongized subcriterion \'%s\' in \'%s\'\n");
          FUN_10399150(local_114,0x100,(byte *)"%s.FootstepLeft");
          FUN_10399150(local_114,0x100,(byte *)"%s.FootstepRight");
          FUN_10399150(local_114,0x100,(byte *)"%s.RunFootstepLeft");
          FUN_10399150(local_114,0x100,(byte *)"%s.RunFootstepRight");
          FUN_10399150(local_134,0x100,(byte *)"%s %s @ %s: ");
          FUN_10399150(local_18c,0x100,(byte *)" < %s (%d)");
          FUN_10399150(local_21c,0x200,(byte *)"%s%s%s%s");
          FUN_10399150(local_294,0x200,(byte *)"%.10f %.10f %.10f");
          FUN_10399150(local_318,0x200,(byte *)"%.10f %.10f %.10f");
          FUN_10399150(local_3b8,0x200,(byte *)"scene:%s");
          FUN_10399150(local_414,0x104,(byte *)"%s/%s");
          FUN_10399150(local_48,0x3f,(byte *)"%0.2f %0.2f %0.2f");
          FUN_10399150(local_68,0x40,(byte *)"info_player_%s_%s%d");
          FUN_10399150(local_8c,0x80,(byte *)"weapon_%s");
          FUN_10399150(local_9c,0x80,(byte *)"%02d:%02d");
          FUN_10399150(local_9c,0x80,(byte *)"%2d:%02d:%02d");
          FUN_10399150(param_1,param_2,(byte *)"%s   time: %6.3f   sound name: %s   scene: %s\n");
          FUN_10399150(param_2,0x40,(byte *)"%s %s");
          FUN_10399190(local_e8,0x3f,(ushort *)L"%i %s");
          FUN_10399370(local_108,".bsp",0x104,0xffffffff);
          FUN_10399370(local_208,"_XMAS",0x200,0xffffffff);
          FUN_10399450(local_108,(int)"maps/",0x104);
          FUN_1039ad00(local_50c,"say_team Ready!",(undefined *)0x0);
          FUN_1039db00((void *)param_1[0x99],(uint *)"command",(uint)"      ");
          FUN_1039fae0(&DAT_105e68f8,"LoadFromBuffer: missing {");
          FUN_1039fce0(param_2,(uint *)"delta_exp",uVar4);
          FUN_1039fce0(param_2,(uint *)"delta_gp",uVar4);
          FUN_1039fce0(param_2,(uint *)"total_exp",uVar4);
          FUN_1039fce0(param_2,(uint *)"total_gp",uVar4);
          FUN_1039fce0(puVar3,(uint *)"winner",2);
          FUN_1039fd00(puVar9,(uint *)"PanelPtr",uVar14);
          FUN_1039fd20(puVar3,(uint *)"primtext",local_208);
          FUN_103a0840(&local_40,"helicopter_ct");
          FUN_103fd956((char *)local_18cc,(int)"%27s%1s%1s");
          FUN_1042cc70((char *)abStack340,".vmt",0x104);
          FUN_1042cc70((char *)local_154,".vmt",0x104);
          FUN_1042d940((char *)local_4c,0x20,(byte *)"SetDevice_%i");
          FUN_1042d940(local_110,0x100,(byte *)"iklocks : %-2d : ");
          FUN_1042d940(local_110,0x100,(byte *)"ikrules : %-2d");
          FUN_1042d940(local_224,0x200,(byte *)"%s killed %s");
          FUN_1042d940(local_22c,0x200,(byte *)"play *#%s");
          FUN_1042d940(local_22c,0x200,(byte *)"ui/%s");
          FUN_1042d940(local_31c,0x100,(byte *)"F%i. ");
          FUN_1042d940(local_414,0x104,(byte *)"%s/%s");
          FUN_1042d940(local_58,0x40,(byte *)"_rt_ShadowDepthTexture_%d");
          FUN_1042d940(local_98,0x80,(byte *)"wp %d %d %d %d remove %d");
          FUN_1042d940(local_9c,0x80,(byte *)"%02d:%02d");
          FUN_1042d940(local_9c,0x80,(byte *)"%2d:%02d:%02d");
          FUN_1042d940(local_f0,0x80,(byte *)"scripts/%s");
          FUN_1042d980(local_e8,0x3f,(ushort *)L"%i %s");
          FUN_1042db60((char *)abStack340,"/",0x104,0xffffffff);
          FUN_1042db60((char *)local_154,"/",0x104,0xffffffff);
          FUN_1042e330(local_14,"ingame_suspense");
          FUN_1042e3d0((void *)((int)this + 0x3914),"models/props_clothing/hats/vip-1.mdl");
          FUN_1042e460(local_18,"/");
          FUN_1042e530(local_1c,(byte *)"vgui/%s");
          FUN_1042e6e0(local_1c,"vgui/previews/unknown");
          FUN_1042f3d0((void *)param_1[0x99],(uint *)"command",(uint)"      ");
          FUN_10431760(&DAT_106facc8,"LoadFromBuffer: missing {");
          FUN_10431960(local_c,(uint *)"playerIndex",uVar8);
          FUN_10431960(pvVar3,(uint *)"Selected",0);
          FUN_10431960(this_00,(uint *)"points",uVar6);
          FUN_10431960(this_01,(uint *)"NumLevels",*(uint *)(param_1 + 0x386c));
          FUN_10431960(this_01,(uint *)"TotalLevelTime",(int)*(float *)(param_1 + 0x3868));
          FUN_104319d0(puVar9,(uint *)"PanelPtr",uVar14);
          FUN_104319f0(pvVar3,(uint *)"Action",pcVar10);
          FUN_104319f0(pvVar3,(uint *)"Action",pcVar8);
          FUN_104319f0(this_00,(uint *)"killdeath",pcVar7);
          FUN_10432330(&DAT_10766510,"c_thirdpersonshoulderoffset");
          FUN_10432330(&DAT_10766518,"c_thirdpersonshoulderheight");
          FUN_10432330(&DAT_10766520,"c_thirdpersonshoulderaimdist");
          FUN_10432330(&DAT_1079d0dc,"sv_disablefreezecam");
          FUN_10432330(&local_c,"cl_screenshotname");
          FUN_10432330(local_10,"mat_ambient_light_b");
          FUN_10432330(local_14,"cl_screenshotusertag");
          FUN_10432330(local_18,"mat_ambient_light_g");
          FUN_10432330(local_20,"mat_ambient_light_r");
          FUN_104323d0(&DAT_10770eb0,(int)"joy_movement_stick");
          FUN_104323d0(&DAT_107a94fc,(int)"joy_inverty");
          LVar2 = RegQueryValueExA(local_8,"Path",(LPDWORD)0x0,(LPDWORD)0x0,&stack0xffffffe0,
          LVar7 = RegQueryValueExA(param_1,"StackTraceDatabaseSizeInMB",(LPDWORD)0x0,(LPDWORD)0x0,
          LVar7 = RegQueryValueExA(param_1,"TracingFlags",(LPDWORD)0x0,(LPDWORD)0x0,(LPBYTE)0x0,
          LoggingSystem_Log(DAT_1067e248,0,"%s executing script: %s\n",puVar5,
          LoggingSystem_Log(DAT_10680b44,0,SUB41(DAT_10417128,0),"Downloading %s%s.\n",
          LoggingSystem_Log(DAT_10680b44,0,SUB41(DAT_10417128,0),"Skipping existing file %s%s.\n",
          Msg("        %2d. `%s` pri%d vis%d\n",iVar5,uVar4);
          Msg("  %02i:  %i %s\n",iVar9,iVar4,puVar8);
          Msg("  %02i:  NULL link\n",iVar9);
          Msg("  %d: %s\n",iVar4,uVar2);
          Msg("  AREA: %s\n",uVar6);
          Msg("  ASSIGNED TO: %s\n",pbVar4);
          Msg("  PRIORITY: %s\n",uVar6);
          Msg("  REPORT TYPE: %s\n",uVar6);
          Msg("  SEVERITY: %s\n",uVar6);
          Msg("  gap of %d bytes [last run %d]\n");
          Msg(" local");
          Msg(" reliable");
          Msg("%5.2f : %s : %s : %5.3f\n",(double)*(float *)(DAT_10646018 + 0x10),puVar5,pcVar4,
          Msg("%f: Choosing saved armed button %s\n",(double)*(float *)(PTR_DAT_106ab8dc + 0x10),
          Msg("%s (%s): %.3fms (%.3f%%) @ %s\n",puVar11,pcVar9,uVar13,uVar14,uVar15,uVar16,iVar7);
          Msg("%s(%d): Channel does not have a mixer for sound \'%s\'.\n",
          Msg("%s(%d): Sound \'%s\' spatialized to volume 0. Ignored.\n",
          Msg("%s[%d]: %s\n",uVar3);
          Msg("<-- [%s] Split packet %4i/%4i seq %5i size %4i mtu %4i from %s\n",puVar6,iVar4,uVar9,
          Msg("Advanced joystick settings initialized for joystick %d\n------------\n",iVar5);
          Msg("CNetworkStringTable::ParseUpdate: NULL pEntry, table %s, index %i\n",uVar8);
          Msg("CacheRemove: Age:%d %s\n",piVar3[2],puVar8);
          Msg("Change/Close Time: %f elapsed[%s]\n",SUB84(dVar9,0),(int)((ulonglong)dVar9 >> 0x20));
          Msg("Client has no netchannel.\n");
          Msg("Clock Start Time: %f\n",SUB84((double)*(float *)((int)this + 0x84),0),
          Msg("Clock Time: %f\n",SUB84((double)fVar8,0),(int)((ulonglong)(double)fVar8 >> 0x20));
          Msg("Dangling pointer to physics entity!!!\n");
          Msg("DirectoryCopy: AsyncAppend %s, %s\n",local_120,param_2);
          Msg("Drop Users Time: %f elapsed[%s]\n",SUB84(dVar9,0),(int)((ulonglong)dVar9 >> 0x20));
          Msg("Entity %d (class \'%s\') reported ENTITY_CHANGE_NONE but \'%s\' changed.\n",param_1,
          Msg("Expecting %s, got %s",*(undefined4 *)((int)this + 0xc),&DAT_107973a0);
          Msg("Expecting \'%s\'");
          Msg("Expecting \'DESCRIPTION\', got \'%s\'",&DAT_107973a0,pvVar3);
          Msg("Forcing split screen player onto team %s\n",puVar5);
          Msg("Game End Proceed: %s\n",puVar6);
          Msg("Game Over?: %s\n",puVar6);
          Msg("Game supporting (%d) split screen players\n",DAT_10417460);
          Msg("IGNORED, outside transition volume.\n");
          Msg("Invalid starting amplitude value in envelope!  (Cannot be -1)\n");
          Msg("Invalid starting duration value in envelope! (Cannot be -1)\n");
          Msg("LevelOverview-> Wrote: \'%s\' to disk\n",local_440);
          Msg("Logitech LCD Keyboard initialized\n");
          Msg("Match End Time: %f elapsed[%s]\n",SUB84(dVar9,0),(int)((ulonglong)dVar9 >> 0x20));
          Msg("Memory allocation of RagdollInfo_t failed!\n");
          Msg("Missing shutdown function for %s : %s\n",*puVar2,puVar2[1]);
          Msg("NET_ConnectSocket: %s\n",pcVar4);
          Msg("No case for Muzzleflash type: %d\n",param_4);
          Msg("ParseRagdollIntoCache:  Couldn\'t Lookup Bone %s\n",local_728);
          Msg("Prefetched %u sounds, %s [%.3f msec]\n",local_14,pcVar5,dVar14);
          Msg("Prev Round State: %i\n",*(undefined4 *)((int)this + 0x74));
          Msg("ReplyReservationRequest:  Reservation request with bogus payload data from %s [%d bytes]\n"
          Msg("Round State is: %i\n",*(undefined4 *)((int)this + 0x70));
          Msg("SIM: Cleared: %s\n",puVar5);
          Msg("SV_BroadcastMessage:  Recipient Filter for message type %i (reliable: %s, init: %s) with bogus client index (%i) in list of %i clients\n"
          Msg("S_ClearBuffer: DS: couldn\'t restore FL buffer\n");
          Msg("S_ClearBuffer: DS: couldn\'t restore FR buffer\n");
          Msg("S_ClearBuffer: DS: couldn\'t restore RL buffer\n");
          Msg("S_ClearBuffer: DS: couldn\'t restore RR buffer\n");
          Msg("S_ClearBuffer: DS::Lock FL Sound Buffer Failed\n");
          Msg("S_ClearBuffer: DS::Lock FR Sound Buffer Failed\n");
          Msg("S_ClearBuffer: DS::Lock RL Sound Buffer Failed\n");
          Msg("S_ClearBuffer: DS::Lock RR Sound Buffer Failed\n");
          Msg("Save failed: invalid file name \'%s\'\n",param_1);
          Msg("Saving %d occlusion records to %s (#%d)\n",DAT_10672c0c,local_29b,iVar12);
          Msg("Server using \'%s\' lobbies, requiring pw %s, lobby id %llx\n",pcVar20,puVar14,uVar24
          Msg("TCP <- %s: invalid connection request.\n",pcVar6);
          Msg("Teams Ready?: %s\n",puVar6);
          Msg("Toggling %s\n",uVar6);
          Msg("Trace found %s, dist %.2f\n",uVar4);
          Msg("Trace using: %s\n",pcVar5);
          Msg("Trace using: %s\n",pcVar7);
          Msg("Trying to open socket on %s\n",pbVar3);
          Msg("Voice - chan %d, ent %d, bufsize: %d\n",iVar6,*piVar8,uVar4);
          Msg("WARNING: NET_OpenSocket: bind: %s\n",pcVar1);
          Msg("Waiting for refresh: %s\n",puVar6);
          Msg("[GAMEUI] CBaseModPanel::OnFrameClosed( %d, %d ) -> Activated `%s`, pri=%d\n",param_1,
          Msg("[GAMEUI] Executing delayed UI activation\n");
          Msg("[Map] Error while loading level key\n");
          Msg("\t%i\t\tName: %s\n",*puVar2,puVar2[2]);
          Msg("add 0x%x: %s-%s (%d-%d) [%d in play, %d max]\n",puVar7,pcVar11,pcVar10,iVar9,iVar8,
          Msg("failed at spawnpoint (initial check): %i %f %s\n",local_c[0x12f4] + -1,0,0x40700000,
          Msg("mat_texture_list_txlod %sexcluded \'%s\'\n",puVar5,&DAT_104f29f8);
          Msg((byte *)"       Sum (ms)            Avg Time/Frame (ms)     Avg Time/Call (ms)\n");
          Msg((byte *)"  %10.3f %9.2f      %10.3f %6.2f      %10.3f %6.2f   %8d %6.2f");
          Msg((byte *)"  %10.3f %9.2f      %8d");
          Msg((byte *)" Avg Time/Frame (ms)\n");
          Msg((byte *)"%8.4f / %8.4f:  %s\n");
          Msg((byte *)"%s test: multithread interleaved push/pop, %s");
          Msg((byte *)"%s test: multithread push, sequential pop, %s");
          Msg((byte *)"%s test: multithread push, single thread pop, %s");
          Msg((byte *)"%s test: sequential push, multithread pop, %s");
          Msg((byte *)"%s test: single thread push, multithread pop, %s");
          Msg((byte *)"%s test: single thread push/pop, interleaved... ");
          Msg((byte *)"Pool %3i: (%5u-byte) not used\n");
          Msg((byte *)"Thread %u releasing lock 0x%p\n");
          Msg((byte *)"[ func+child      func ]       Count\n");
          Msg((byte *)"\nTesting %d threads:\n");
          RegDeleteValueA(local_8,"Relaunch URL");
          ShellExecuteA((HWND)0x0,"open",(LPCSTR)local_180,(LPCSTR)0x0,(LPCSTR)0x0,5);
          Warning("%s(%d): Protecting against negative memcpy. BufferSize = %d. Buffer Pos = %d. Count = %d.\n"
          Warning("***String table CRC mismatch, may need to rebuild bsp if model oddities occur!\n"
          Warning("----------------SPAWN ERROR------------------\n");
          Warning("Attached %s (mod_studio) to %s (%d)\n",uVar4);
          Warning("CAudioMixerWave::LoadMixBuffer:  samples_loaded_retry * samplesize = %i but pData == NULL\n"
          Warning("CGameUIConVarRef %s doesn\'t point to an existing ConVar\n",param_1);
          Warning("CParticleMgr::Init:  Manifest \'%s\' with bogus file type \'%s\', expecting \'file\'\n"
          Warning("CParticleSnapshot::%s - Invalid attribute mapping specified (must be one-to-one)!\n"
          Warning("CPhysMagnet %s:%d blocking magnet\n",puVar8,iVar3);
          Warning("ConVarRef %s doesn\'t point to an existing ConVar\n",param_1);
          Warning("Couldn\'t get HDR \'%s\' -- ",local_43c);
          Warning("Didn\'t find particle function %s\n",pbVar7);
          Warning("Double registration of demo custom data callback.\n");
          Warning("Failed to find specified particle effect. Trying to add CP to \'%s\' on attachment named \'%s\'\n"
          Warning("Failed, using default cubemap \'%s\'\n",uVar8);
          Warning("InstallChangeCallback ignoring duplicate change callback!!!\n");
          Warning("Invalid index passed to CStudioHdr(%s)::GroupStudioHdr(): %d [%d]\n",pcVar7,iVar8
          Warning("Invalid index passed to CStudioHdr(%s)::GroupStudioHdr(): %d [%d]\n",pcVar8,iVar9
          Warning("LEVEL DESIGN ERROR: Entity %s is parented to itself!\n",pcVar5);
          Warning("Late precache of %s (file missing?)\n",puVar4);
          Warning("Lost RCON connection, please retry command.\n");
          Warning("No spawnpoint found for %s\n",uVar11);
          Warning("PLAYER WILL SPAWN AT 0 0 0-------------------\n");
          Warning("PrecacheScriptSound \'%s\' failed, no such sound script entry\n",pauVar1);
          Warning("RR: could not apply operator %s to prior value %s\n",local_f4,puVar9);
          Warning("Restore underflow!\n");
          Warning("SQ:  sending %d bytes at %f\n",uVar6);
          Warning("SQ:  sleeping for %u msecs at %f\n",uVar6);
          Warning("Save/Restore overflow %zu [%d, %d]!\n",DAT_10671274,*(undefined4 *)(iVar1 + 0xc),
          Warning("Save/Restore overflow %zu [%d, %d]!\n",DAT_1077e2a0,*(undefined4 *)(iVar1 + 0xc),
          Warning("SetupBones: invalid bone array size (%d - needs %d)\n",param_2,iVar18);
          Warning("Sound DSP: Failed to lock.\n");
          Warning("Too many entities across a transition!\n");
          Warning("Too many flashlights rendered in a single view!\n");
          Warning("Trying non HDR \'%s\'\n",local_43c);
          Warning("Trying to load more than 9 menu items in voicecommands.txt, extras ignored");
          Warning("WARNING! Field %s is using the wrong FIELD_ type!\nFix this or you\'ll see a crash.\n"
          Warning("[GAMEUI] SetActiveWindow: Another window %p`%s` is having priority %d, deferring `%s`!\n"
          Warning("baseAccel NaN\n");
          Warning("baseLastPos NaN\n");
          Warning("basePos NaN\n");
          Warning("baseVel NaN\n");
          Warning("bounce: %d/%d sample: %d/%d\n",iStack28,param_1,iVar14,*piVar12);
          Warning("bounce: %d/%d sample: %d/%d\n",iVar12,*(undefined4 *)(unaff_EBP + 8),iVar15,
          Warning("failed allocating an atlased texture block in buildmodelforworld\n");
          Warning("func_track_train must be on a path of path_track\n");
          Warning("lastUpdate NaN\n");
          Warning("surfaceprops::Init:  Manifest \'%s\' with bogus file type \'%s\', expecting \'file\'\n"
          Warning("time to initial render = %f\n");
          Warning("tipAccel NaN\n");
          Warning("tipPos NaN\n");
          Warning("tipVel NaN\n");
          _DAT_106ac64c = (*DAT_106abcdc)("ReplayDirector001",0);
          _DAT_10730c9c = (*(code *)param_1)("LCB001",0);
          _Str1 = "";
          _param_3 = "<<null>>";
          bVar1 = FUN_100a6de0(pvVar2,"env_portal_path_track");
          bVar2 = FUN_100a6de0(pvVar1,"func_door");
          bVar2 = FUN_100a6de0(this_00,"prop_door_rotating");
          bVar5 = FUN_1013c980((int)param_1,(int)"color");
          cVar1 = (**(code **)(DAT_10681754[1] + 0x48))(local_20c,"PROFILE");
          cVar2 = FUN_1013aba0(&local_10,(byte *)"Squad",(char *)local_858);
          cVar2 = FUN_1013aba0(&local_10,(byte *)"Stage",(char *)local_858);
          cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
          fVar10 = FUN_1039d900(pvVar2,(uint *)"delay",10.0);
          fVar10 = FUN_1039d900(pvVar2,(uint *)"loop_in_action",0.0);
          fVar10 = FUN_1039d900(pvVar2,(uint *)"origin_max_delta",36.0);
          iVar11 = (**(code **)(*DAT_106cb7c4 + 0x4c))("mp_disable_autokick");
          iVar12 = FUN_10265c20((int)&local_10c,"connect-granted",iVar12);
          iVar12 = FUN_10265c20((int)&local_10c,"connect-retry",iVar12);
          iVar12 = FUN_10265c20((int)&local_10c,"reserve",iVar12);
          iVar12 = FUN_10265ff0("connect");
          iVar12 = FUN_10265ff0("connect-granted");
          iVar12 = FUN_10265ff0("connect-retry");
          iVar12 = FUN_10265ff0("reserve");
          iVar2 = (**(code **)(*DAT_106466ac + 4))("game_intermission");
          iVar2 = (**(code **)(*piVar3 + 0x2c))("-forever");
          iVar2 = FUN_10111700("unconnected");
          iVar2 = FUN_101f54b0((byte *)"\"%s<%i><%s><%s>\" joined team \"%s\"\n");
          iVar2 = FUN_102659a0(param_1,(byte *)"origineaseboth");
          iVar2 = FUN_102659a0(param_1,(byte *)"processkey");
          iVar2 = FUN_1042d9d0(pcVar10,"tiny_object");
          iVar2 = FUN_1042d9d0(pcVar5,"(Disabled on Server)");
          iVar3 = FUN_1008c050(this,(byte *)"Quadruped.Head");
          iVar3 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_Head1");
          iVar3 = FUN_10315e1f((ushort *)pwVar2,(ushort *)L".com");
          iVar3 = FUN_10399150(param_5,param_6,(byte *)"%d %d %d %d");
          iVar3 = FUN_10399150(param_5,param_6,(byte *)"%f %f %f");
          iVar3 = FUN_1042e020("DrpCPUDetail");
          iVar3 = FUN_104ad79a((ushort *)pwVar2,(ushort *)L".com");
          iVar4 = (**(code **)(*piVar5 + 0x2c))("-autodemo");
          iVar4 = FUN_1007ad40((byte *)"blink");
          iVar4 = FUN_10265c20((int)pbVar8,"len",3);
          iVar4 = FUN_10399410((char *)local_18cc,"info_heli_TER_spawn",0x13);
          iVar4 = FUN_10399410((char *)local_18cc,"info_supply_crate_spawn",0x17);
          iVar4 = FUN_103997b0("expressions/");
          iVar4 = FUN_1042dc00(*(char **)((int)this + 8),"rhcontext",6);
          iVar4 = FUN_1042e020("expressions/");
          iVar5 = (**(code **)(*local_8 + 0x34c))("SentenceMode",ppuVar7,local_c,param_1,0);
          iVar5 = (**(code **)(*param_2 + 0xc))("EntityOutput",puVar4,0,DAT_105a0e10,DAT_105a0e14);
          iVar5 = (**(code **)(*piVar2 + 0x34c))("ConversionMode",ppuVar7,local_c,param_1,0);
          iVar5 = (**(code **)(*piVar2 + 0x34c))("Language",ppuVar7,local_8,param_1,0);
          iVar5 = (**(code **)(*piVar7 + 0x1c))("enabled",0);
          iVar5 = (**(code **)(*piVar7 + 0x1c))("oldteam",0);
          iVar5 = FUN_102659a0(pbVar2,(byte *)"match_channel");
          iVar5 = FUN_102659a0(pbVar2,(byte *)"match_sound");
          iVar5 = FUN_102659a0(pbVar2,(byte *)"mixgroup");
          iVar5 = FUN_102659a0(pbVar2,(byte *)"right_front");
          iVar5 = FUN_102659a0(pbVar2,(byte *)"this_entry_syncpoints");
          iVar5 = FUN_102659a0(pbVar3,(byte *)"emitter");
          iVar5 = FUN_102659a0(pbVar3,(byte *)"false");
          iVar5 = FUN_102659a0(pbVar3,(byte *)"level");
          iVar5 = FUN_102659a0(pbVar3,(byte *)"linear");
          iVar5 = FUN_10265c20((int)pbVar8,"closecaption",0xc);
          iVar5 = FUN_1042daf0((int)"radialmenu ",(char *)local_14,iVar5);
          iVar5 = FUN_1042e020("radialmenu ");
          iVar6 = (**(code **)(*local_8 + 0x34c))("SentenceMode",psVar8,local_c,param_1,0);
          iVar6 = (**(code **)(*param_1 + 0x1c))("target",0);
          iVar6 = (**(code **)(*param_1 + 0x1c))("theta",0);
          iVar6 = (**(code **)(*param_1 + 0x1c))("userid",0);
          iVar6 = (**(code **)(*piVar2 + 0x34c))("ConversionMode",psVar8,local_c,param_1,0);
          iVar6 = (**(code **)(*piVar2 + 0x34c))("Language",puVar5,local_8,param_1,0);
          iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_spawn_2",0x14);
          iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_waypoint_2",0x17);
          iVar6 = FUN_103fd956(pcVar8,(int)"[%f %f %f]");
          iVar6 = FUN_1042d9d0(pcVar5," x ");
          iVar6 = FUN_104a8d56(pcVar5,(int)"%f by %f");
          iVar6 = MessageBoxA((HWND)0x0,param_3,"Assertion Failed",0x1006);
          iVar7 = (**(code **)(*param_1 + 0x1c))("attacker",0);
          iVar7 = (**(code **)(*piVar6 + 0x2c))("-vguimessages");
          iVar7 = FUN_10031638(pbVar10,(byte *)"UNICODE",7);
          iVar7 = FUN_102659b0((char *)puVar6,".hl");
          iVar7 = FUN_103122ac(pbVar10,(byte *)"UNICODE",7);
          iVar7 = FUN_103991e0(pcVar10,".bsp");
          iVar8 = FUN_10399480((int)puVar10,"weapon_",7);
          if ((!bVar2) && (*(char **)((int)this_00 + 0x5c) != "func_breakable")) {
          if (((char *)piVar3[0x17] == "weapon_ar2") ||
          if (((pbVar12 == (byte *)"MoveToFloor") ||
          if ((cVar3 != '\"') && (cVar3 != '%')) {
          if ((in_EAX != 0) && (param_1 != (uint *)"value2")) {
          if ((pbVar5 != (byte *)"bodyque") &&
          if ((pbVar5 != (byte *)"soundent") &&
          if (*(char **)((int)pvVar1 + 0x5c) == "func_door") goto LAB_1011f972;
          if (cVar3 == '\"') {
          if (param_1 != (uint *)"Stage") {
          if (param_1 != (uint *)"Stoplight_A1") {
          if (param_1 != (uint *)"TextureScroll") {
          if (param_1 != (uint *)"acceleration") {
          if (param_1 != (uint *)"direction") {
          if (param_1 != (uint *)"master") {
          if (param_1 != (uint *)"model") {
          if (param_1 != (uint *)"pitchstart") {
          if (param_1 != (uint *)"spawnflags") {
          if (param_1 != (uint *)"unlocked_sound") {
          if (param_1 != (uint *)"uselightenvangles") {
          in_EAX = (byte **)Warning("Bad field in entity!!\n");
          in_EAX = FUN_100612d0(param_1,"prop_*");
          in_EAX = FUN_10265ef0(pbVar3,(byte *)"Music");
          in_EAX = FUN_10399710((byte *)param_1,(byte *)"value1");
          in_stack_fffff5d4 = "[ERROR - no shadow] %f %f %f ";
          local_10 = "unknown";
          local_14 = (int *)FUN_1042f3d0(this_00,(uint *)"attachment_type",(uint)&DAT_104eefb3);
          local_14 = (uint *)FUN_1042f3d0(local_8,(uint *)"command",(uint)&DAT_104eefb3);
          local_18 = (**(code **)(**(int **)(local_10 + 0x10 + uVar6 * 0x14) + 0x1c))("target",0);
          local_18 = FUN_1042ea30(this,"OldParticleSystem_Create");
          local_18 = FUN_1042f3d0(this_00,(uint *)"attachment_point",(uint)&DAT_104eefb3);
          local_214 = "";
          local_214 = "FCVAR_NEVER_AS_STRING";
          local_24 = "#PORTAL2_ButtonAction_Discard";
          local_28 = "VehicleWheel";
          local_28 = "log";
          local_28 = "pow";
          local_2c = "terroriststart";
          local_30 = "#VideoOptions_ShaderDetail_Info";
          local_30 = "ctstart";
          local_34 = "#GameUI_Shader_Detail";
          local_34 = "#PORTAL2_ButtonAction_Discard";
          local_34 = "#PORTAL2_VideoSettingsDiscardQ";
          local_38 = "#PORTAL2_AdvancedVideoConf";
          local_38 = "#PORTAL2_VideoSettingsConf";
          local_44 = "#PORTAL2_KeyboardSettingsDiscardQ";
          local_44 = "CDemo::ReadUserCmd";
          local_44 = "dem_datatables";
          local_44 = "dem_stringtables";
          local_70 = "UI/freeze_cam.wav";
          local_8 = "";
          local_8 = "chest";
          local_8 = "generic";
          local_8 = "head";
          local_8 = "leftarm";
          local_8 = "leftleg";
          local_8 = "rightarm";
          local_8 = "rightleg";
          local_8 = "stomach";
          local_8 = FUN_10267d30(this,"operation",(uint *)"layer",pcVar4);
          local_8 = FUN_104570e0(pvVar6,(int)local_c,"DescEdit",1);
          local_8 = FUN_10466ac0(pvVar6,(int)local_c,"DescCheckButton",(char *)(iVar3 + 0x1e8),1);
          local_8 = FUN_104674c0(pvVar6,(int)local_c,"DescEdit",5,'\0',1);
          local_8 = FUN_1048d0f0(this,"");
          local_c = "";
          local_c = FUN_10236890(pvVar9,piVar5[0x84],0,"item",local_14,0,1);
          local_c = FUN_10267f50(pvVar3,"PageHide");
          local_c = FUN_1042ea30(pvVar3,"PageHide");
          local_c = FUN_1042ea30(pvVar4,"OldParticleSystem_Create");
          local_c = FUN_1042ea30(pvVar5,"OldParticleSystem_Create");
          local_c = FUN_10464a30(this_01,(int)pvVar7,"SlideshowImage",1);
          param_1 = "";
          param_1 = "Unknown";
          param_1 = FUN_10267f50(this_00,"CurrentDefaultButtonSet");
          param_1 = FUN_10267f50(this_00,"DefaultButtonSet");
          param_1 = FUN_1039d370(this_00,"CurrentDefaultButtonSet");
          param_1 = FUN_1039d370(this_00,"DefaultButtonSet");
          param_1 = FUN_1042ea30(this_00,"CurrentDefaultButtonSet");
          param_1 = FUN_1042ea30(this_00,"DefaultButtonSet");
          param_2[6] = (byte *)"invalid distance code";
          param_3[0x17] = (float)"**studio**";
          param_6[6] = (byte *)"invalid distance code";
          param_6[6] = (byte *)"invalid literal/length code";
          pbVar3 = (byte *)(**(code **)(*piVar7 + 0x28))("group",&DAT_104eefb3);
          pbVar3 = (byte *)FUN_1042f3d0(this_01,(uint *)"command",0);
          pbVar4 = (byte *)FUN_1042f3d0(pvVar3,(uint *)"Binding",(uint)&DAT_104eefb3);
          pbVar4 = (byte *)FUN_1042f3d0(this_00,(uint *)"command",0);
          pbVar5 = (byte *)"FCVAR_NEVER_AS_STRING";
          pbVar5 = (byte *)FUN_1039db00(pvVar1,(uint *)"concept",(uint)&DAT_1043677a);
          pbVar5 = (byte *)FUN_1042f3d0(pvVar3,(uint *)"Binding",(uint)&DAT_104eefb3);
          pbVar6 = (byte *)"FCVAR_NEVER_AS_STRING";
          pbVar6 = (byte *)FUN_1042f3d0(local_8,(uint *)"owner",0);
          pbVar7 = (byte *)FUN_1042f3d0(pvVar6,(uint *)"Binding",(uint)&DAT_104eefb3);
          pbVar8 = (byte *)"FCVAR_NEVER_AS_STRING";
          pbVar9 = (byte *)FUN_1039db00(pvVar2,(uint *)"dont_teleport_at_end",0);
          pcStack292 = "DEFAULT";
          pcStack300 = "DEFAULT";
          pcVar1 = "%s: gzwrite failed.\n";
          pcVar1 = "PublicUser";
          pcVar10 = "";
          pcVar10 = "#L4D360UI_Disabled";
          pcVar10 = "#L4D360UI_Enabled";
          pcVar10 = "#Title_ReqPoints";
          pcVar10 = "#Title_ReqPoints_Bonus";
          pcVar10 = "(%f, %f, %f)";
          pcVar10 = "Expire: Never";
          pcVar10 = "FCVAR_NEVER_AS_STRING";
          pcVar10 = "Unlocked!";
          pcVar10 = "models/vehicles/industrial/drivable/%s.mdl";
          pcVar11 = "";
          pcVar11 = "(%f, %f, %f)";
          pcVar11 = "+  %s\n";
          pcVar11 = "-  %s\n";
          pcVar11 = "BOOTS";
          pcVar11 = "SHOES";
          pcVar11 = "\t( [\"%s\"]->IsInstanceActive() ";
          pcVar11 = "attenuation";
          pcVar11 = "does not";
          pcVar11 = "false";
          pcVar11 = "waterripple";
          pcVar11 = "watersplash";
          pcVar12 = "";
          pcVar12 = "Alpha";
          pcVar12 = "Car_Skid1";
          pcVar12 = "Car_Skid2";
          pcVar12 = "Error: Too many mix groups! MixGroup %s ignored\n";
          pcVar12 = "GetCurSchedule() == NULL";
          pcVar12 = "ai_task";
          pcVar12 = "models/props_containers/barrel-1.mdl";
          pcVar12 = "models/props_containers/barrel-2.mdl";
          pcVar12 = "models/props_containers/barrel-3.mdl";
          pcVar13 = "";
          pcVar13 = "#GP_Bombing_TerSupport";
          pcVar13 = "#GP_VIPCar_CTPassenger";
          pcVar13 = "#GP_VIPCar_TerPassenger";
          pcVar13 = "DS:CreateSoundBuffer for 3d rear left failed";
          pcVar13 = "DS:CreateSoundBuffer for 3d rear right failed";
          pcVar13 = "Drive_On_Dirt";
          pcVar13 = "FCVAR_NEVER_AS_STRING";
          pcVar13 = "[Debug] Adding %s to BOMB CARRIER list\n";
          pcVar13 = "[Debug] Adding %s to OTHER list\n";
          pcVar13 = "[Debug] Assigning %s to %s, from DEFENSE list\n";
          pcVar13 = "[Debug] Assigning %s to %s, from OTHERS list\n";
          pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_CT_Passenger",
          pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_T",(uint)"#GP_Bombing_TerSupport");
          pcVar13 = (char *)FUN_1042f3d0(this,(uint *)"SquadDesc_T_Passenger",
          pcVar14 = "";
          pcVar14 = "#Purchase_Pack";
          pcVar14 = "#Purchase_Price";
          pcVar14 = "#Purchase_Price_Perm";
          pcVar14 = "#TI_Squad_Alpha";
          pcVar14 = "#TI_Squad_Alpha_DRIVER";
          pcVar14 = "#TI_Squad_Alpha_THEBOSS";
          pcVar14 = "#TI_Squad_Alpha_VIP";
          pcVar14 = "#TI_Squad_Bravo_DEFENSE";
          pcVar14 = "#TI_Squad_Bravo_PASSENGER";
          pcVar14 = "#TI_Squad_Charlie_OFFENSE";
          pcVar14 = "FCVAR_NEVER_AS_STRING";
          pcVar14 = "characters/npc7.mdl";
          pcVar15 = "NPC is not within the node\'s radius.";
          pcVar16 = "#TI_Objective_VIPCar_CT_Deliver_Case";
          pcVar16 = "#TI_Objective_VIPEscape_VIP";
          pcVar16 = "CGameEventManager::UnserializeEvent:: failed to create event %s.\n";
          pcVar16 = "models/props_jewelery/glasses/glasses-10.mdl";
          pcVar16 = "models/props_jewelery/glasses/glasses-9.mdl";
          pcVar17 = ") == 0\n";
          pcVar17 = ")->AmmoPercentage() < 30\n";
          pcVar17 = "< [%s] ";
          pcVar17 = "== [%s] ";
          pcVar17 = ">= [%s] ";
          pcVar17 = "\t![%s]->Weapon_CanUse([%s]) ";
          pcVar17 = "\tC_BaseEntity::Instance([%s]->GetUseEntity()) == [%s]\n";
          pcVar17 = "\tFClassnameIs( [%s] ";
          pcVar17 = "\t[%s]->GetWeaponInSlot( ";
          pcVar17 = "\t[%s]->Weapon_CanUse([%s])\n";
          pcVar17 = "\t[%s]->Weapon_OwnsThisType([%s] ";
          pcVar17 = "true\n";
          pcVar2 = "";
          pcVar2 = "NULL";
          pcVar2 = FUN_1017c740((byte *)"%s [%s]");
          pcVar20 = "<none>";
          pcVar28 = "1#QNAN";
          pcVar3 = "  ---------- ---------      --------\n";
          pcVar3 = "";
          pcVar3 = "#ClrName_None";
          pcVar3 = "#ClrName_Ter";
          pcVar3 = "%s, ";
          pcVar3 = "(*%s*), ";
          pcVar3 = "body_lean";
          pcVar3 = "dog_entity";
          pcVar4 = "         %i : %s\n";
          pcVar4 = "";
          pcVar4 = "#GameUI_Shader_Detail";
          pcVar4 = "(no name)";
          pcVar4 = "//mod/%s%02d.%s";
          pcVar4 = "//mod/%s.%s";
          pcVar4 = "<unknown renderable>";
          pcVar4 = "AMMO_OOZ_BULLETS";
          pcVar4 = "EDIT_DISCONNECT.MarkedArea";
          pcVar4 = "Unknown";
          pcVar4 = "\"%s\"\n";
          pcVar4 = "\t\"%s\"\t";
          pcVar4 = "mission";
          pcVar4 = "req_incendiary";
          pcVar4 = "req_m320";
          pcVar4 = "req_mg4";
          pcVar4 = "req_rpg7";
          pcVar4 = "unknown model";
          pcVar5 = "";
          pcVar5 = "%s, ";
          pcVar5 = "(*%s*), ";
          pcVar5 = "EHandle (0x%p->%s)";
          pcVar5 = "FCVAR_NEVER_AS_STRING";
          pcVar5 = "Invalid!!!";
          pcVar5 = "LobbyInvite";
          pcVar5 = "NULL";
          pcVar5 = "Retrying";
          pcVar5 = "blocking team %d";
          pcVar5 = "blocking team %s";
          pcVar5 = "byte (%d)\n";
          pcVar5 = "connect localhost:%d";
          pcVar5 = "connect_splitscreen localhost:%d %d";
          pcVar5 = "param2";
          pcVar5 = "screen_blood_splatter";
          pcVar5 = "screen_blood_splatter_melee";
          pcVar5 = "screen_blood_splatter_melee_blunt";
          pcVar5 = "screen_mud_splatter";
          pcVar5 = "sound";
          pcVar5 = "stringtable_dictionary.dct";
          pcVar5 = "stringtable_dictionary_fallback.dct";
          pcVar5 = "worldspawn";
          pcVar5 = FUN_1017c740((byte *)"map %s\n");
          pcVar6 = "";
          pcVar6 = "#SteamStat_BestWeaponSpcl";
          pcVar6 = "%03d,";
          pcVar6 = "(Relay)";
          pcVar6 = "0";
          pcVar6 = "Defusing Bomb - Site A";
          pcVar6 = "Defusing Bomb - Site B";
          pcVar6 = "Defusing Bomb - Site C";
          pcVar6 = "EHandle (0x%p->%s)";
          pcVar6 = "FCVAR_NEVER_AS_STRING";
          pcVar6 = "Failed to restore physics object\n";
          pcVar6 = "Heli.Bell212_Rotor_Damaged";
          pcVar6 = "Invalid!!!";
          pcVar6 = "XMA.";
          pcVar6 = "[Cloud]: FAILED retrieved %s from remote storage into %s\n";
          pcVar6 = "[Cloud]: SUCCEESS retrieved %s from remote storage into %s\n";
          pcVar6 = "byte (%d)\n";
          pcVar6 = "direct";
          pcVar6 = "error";
          pcVar6 = "not resident";
          pcVar6 = "offline";
          pcVar6 = "online";
          pcVar6 = "playlooping";
          pcVar6 = "warning";
          pcVar6 = "{for ";
          pcVar6 = (char *)FUN_102659b0(pcVar5,"|gameinfo_path|");
          pcVar6 = (char *)FUN_1039db00(puVar4,(uint *)"Sound",(uint)puVar5);
          pcVar6 = (char *)FUN_1039db00(pvVar2,(uint *)"entry_sequence",0);
          pcVar6 = (char *)FUN_1039db00(pvVar2,(uint *)"exit_sequence",0);
          pcVar6 = (char *)FUN_1039db00(pvVar2,(uint *)"needs_weapon",0);
          pcVar6 = (char *)FUN_1039db00(pvVar2,(uint *)"sequence",0);
          pcVar6 = (char *)FUN_1039db00(pvVar2,(uint *)"trigger",0);
          pcVar6 = (char *)FUN_1039db00(pvVar2,(uint *)"weapon_mine",0);
          pcVar6 = (char *)FUN_1039db00(pvVar2,(uint *)"weapon_theirs",0);
          pcVar6 = (char *)FUN_1042f3d0(this_00,(uint *)"cp_number",(uint)&DAT_104eefb3);
          pcVar7 = " < [%s] ";
          pcVar7 = " == [%s] ";
          pcVar7 = "";
          pcVar7 = "%s timed out";
          pcVar7 = ") != 0\n";
          pcVar7 = "< [%s] ";
          pcVar7 = "<<null>>";
          pcVar7 = "== [%s] ";
          pcVar7 = "CPU";
          pcVar7 = "Download file \'%s\' already exists!\n";
          pcVar7 = "DrpCPUDetail";
          pcVar7 = "FCVAR_NEVER_AS_STRING";
          pcVar7 = "Failed to write received file \'%s\'!\n";
          pcVar7 = "UNKNOWN";
          pcVar7 = "__int32";
          pcVar7 = "__int64";
          pcVar7 = "debugtext";
          pcVar7 = "dog_entity";
          pcVar7 = "headset";
          pcVar7 = "helmet";
          pcVar7 = "ingame_suspense";
          pcVar7 = "mission";
          pcVar7 = "no usable entity found";
          pcVar7 = "player";
          pcVar7 = "playlooping";
          pcVar7 = "prop_door";
          pcVar7 = "prop_door_rotating";
          pcVar7 = "sky_ti_09_hdr";
          pcVar7 = FUN_100d0740((byte *)"%i / %i");
          pcVar7 = FUN_101f6800((byte *)"%d Connections ");
          pcVar8 = "";
          pcVar8 = "#DeathMsg_Gas";
          pcVar8 = "#DeathMsg_GasSelf";
          pcVar8 = "#DeathMsg_Vehicle";
          pcVar8 = "#DeathMsg_VehicleInside";
          pcVar8 = "#DeathMsg_VehicleSelf";
          pcVar8 = "#TI_Score_CivCap";
          pcVar8 = "#TI_Score_CivSave";
          pcVar8 = "%.3f m_fEngineSpeed   ** COASTING **";
          pcVar8 = "%.3f m_fEngineSpeed  ** REVERSE **";
          pcVar8 = "<<illegal>>";
          pcVar8 = "<<null>>";
          pcVar8 = "Bad expression token: %c";
          pcVar8 = "ERROR: Trying to get WC ID with no network!\n";
          pcVar8 = "ERROR: Trying to get WC ID with no table!\n";
          pcVar8 = "FCVAR_NEVER_AS_STRING";
          pcVar8 = "Metal";
          pcVar8 = "avatar";
          pcVar8 = "death_headshot";
          pcVar8 = "items/default";
          pcVar8 = "items/hands/default";
          pcVar8 = "items/none";
          pcVar8 = "localPlayer";
          pcVar8 = "positionoverride";
          pcVar8 = "quit\n";
          pcVar8 = "server";
          pcVar8 = "unknown";
          pcVar8 = "version number";
          pcVar8 = "warp";
          pcVar8 = "worldspawn";
          pcVar8 = "wp %d %d %d %d clear";
          pcVar8 = "wp reload";
          pcVar8 = "wp save";
          pcVar8 = (char *)FUN_1039db00(puVar7,(uint *)"model",(uint)"car-14");
          pcVar8 = (char *)FUN_1039db00(puVar7,(uint *)"model",(uint)pcVar8);
          pcVar9 = "";
          pcVar9 = "CLIENT";
          pcVar9 = "Camper";
          pcVar9 = "Console";
          pcVar9 = "Failed to restore physics object\n";
          pcVar9 = "MVP";
          pcVar9 = "None";
          pcVar9 = "Rusher";
          pcVar9 = "Teamplayer";
          pcVar9 = "`anonymous namespace\'";
          pcVar9 = "`string\'";
          pcVar9 = "attached_model";
          pcVar9 = "chipstriangle";
          pcVar9 = "deliver_case_to_goal";
          pcVar9 = "deliver_case_to_heli";
          pcVar9 = "explode_crash_barrel";
          pcVar9 = "explodefx_brick_pallet";
          pcVar9 = "explodefx_plastic_pails";
          pcVar9 = "height";
          pcVar9 = "impact_fx_peanuts";
          pcVar9 = "metal_gibs_dark_grey";
          pcVar9 = "pose_UI_CT_store_pose";
          pcVar9 = "pose_UI_TER_store_pose";
          pcVar9 = "van-1";
          pcVar9 = "van-2";
          pcVar9 = "van-3";
          pcVar9 = FUN_101f6800((byte *)"Targetted bot: %s\n");
          piVar10 = FUN_10236890(pvVar9,piVar5[0x85],0,"item",iVar4,0,1);
          piVar2 = (int *)(*(code *)param_1)("VoiceServer002",0);
          piVar2 = FUN_104c714b(local_1c,param_2,"",&local_c,0);
          piVar3 = (int *)(**(code **)(*DAT_106cb7f4 + 0x150))(iVar2,"Other textures",1,0);
          piVar4 = (int *)(**(code **)(*DAT_106cb7f4 + 0x170))("_rt_SmallFB0","RenderTargets",1,0);
          piVar4 = (int *)FUN_102659a0(param_1,(byte *)"DynamicModels");
          piVar4 = (int *)FUN_10444d70(this,(byte *)"BtnEditSticks",0);
          piVar5 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("item_drop",0,0);
          piVar6 = (int *)(*local_24)("VTOOLDICTIONARY003",0);
          piVar6 = (int *)FUN_10135420("prop_breaching_charge",-1,'\x01');
          piVar6 = (int *)FUN_104235d0(piVar3,(uint *)"preventNameBasedLookup");
          piVar6 = (int *)FUN_104d70b0(piVar3,(uint *)"preventNameBasedLookup");
          piVar6 = FUN_10494810(pvVar5,(int)this,(int *)"#GameUI_ImportSprayImage",'\x01',0,1);
          piVar7 = (int *)(**(code **)(*DAT_106cb7f4 + 0x170))(local_43c,"CubeMap textures",1,0);
          piVar7 = FUN_10454240(pvVar6,(int)local_c,"DescLabel","",1);
          piVar9 = (int *)(**(code **)(**local_3c + 0xbc))("$hdrcolorscale",&DAT_1076df80);
          piVar9[0xf] = (int)"InsideArrayProp";
          piVar9[0xf] = (int)"IsExcludedProp";
          ppcVar17[-5] = (code *)"Reload complete, module %p->%p, factory %llx->%llx\n";
          ppvVar4 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)ppvVar4,"prop_door_rotating")) {
          ppvVar5 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)ppvVar5,"prop_door_rotating")) {
          puVar1 = FUN_1042e810(this,"Command",(uint *)"command","Quit");
          puVar19 = (undefined8 *)FUN_10265c20((int)&local_10c,"connect",iVar12);
          puVar2 = FUN_10267e50(pvVar1,"ToggleColumnVisible",(uint *)&DAT_103d0b34,
          puVar2 = FUN_10267e50(this_00,"OpenContextMenu",(uint *)"itemID",uVar3);
          puVar2 = FUN_1039d270(pvVar1,"ToggleColumnVisible",(uint *)&DAT_1053ad34,
          puVar2 = FUN_1039d270(this_00,"OpenContextMenu",(uint *)"itemID",uVar3);
          puVar2 = FUN_1042e930(pvVar1,"ToggleColumnVisible",(uint *)&DAT_106455fc,
          puVar2 = FUN_1042e930(this_00,"OpenContextMenu",(uint *)"itemID",uVar3);
          puVar2 = FUN_1042ea30(this,"KeyValueSaverData");
          puVar2[0x1abe9] = "bad d_code";
          puVar3 = (uint *)Warning("Your .dll [%s] differs from the server\'s.\n",local_80);
          puVar3 = FUN_004017b0(local_114,(byte *)"%s\\%s\\%s");
          puVar3 = FUN_10021180(local_290,(byte *)"(%f, %f, %f)");
          puVar3 = FUN_10021180(local_2b0,(byte *)"DMSpawn: %i\n");
          puVar3 = FUN_100b10f0(local_11c,(byte *)"cmd%d bind \"%s\" \"%s\"\n");
          puVar3 = FUN_10267f50(pvVar1,"CloseFrameButtonPressed");
          puVar3 = FUN_10267f50(this_00,"ItemDeselected");
          puVar3 = FUN_1039d370(pvVar1,"CloseFrameButtonPressed");
          puVar3 = FUN_1039d370(this_00,"ItemDeselected");
          puVar3 = FUN_1039d560(this_00,(uint *)"NorthEast",1);
          puVar3 = FUN_1039d560(this_00,(uint *)"NorthWest",1);
          puVar3 = FUN_1039d560(this_00,(uint *)"SouthEast",1);
          puVar3 = FUN_1039d560(this_00,(uint *)"SouthWest",1);
          puVar3 = FUN_1042ea30(pvVar1,"CloseFrameButtonPressed");
          puVar3 = FUN_1042ea30(this_00,"ItemDeselected");
          puVar4 = FUN_10021180(local_1d4,(byte *)"(%f, %f, %f)");
          puVar4 = FUN_10021180(puVar10,(byte *)"(%f, %f, %f)");
          puVar4 = FUN_10267e50(pvVar3,"TreeViewItemDeselected",(uint *)"itemIndex",param_1);
          puVar4 = FUN_102a99e0(pvVar3,(int)this,"history label","history label",1);
          puVar4 = FUN_102a99e0(pvVar3,(int)this,local_418,"TEXT NOT SET YET",1);
          puVar4 = FUN_1039d270(pvVar3,"TreeViewItemDeselected",(uint *)"itemIndex",param_1);
          puVar4 = FUN_1042e930(pvVar3,"TreeViewItemDeselected",(uint *)"itemIndex",param_1);
          puVar4 = FUN_1042ea30(pvVar3,"if_split_screen_active");
          puVar5 = (undefined4 *)(**(code **)(iVar2 + 0x14))(local_18,"SteamLightGreen",*puVar5);
          puVar5 = FUN_10031640(local_134,(byte *)" - [%d %d %d %d]");
          puVar5 = FUN_10031640(local_134,(byte *)" - [%d]");
          puVar5 = FUN_10031640(local_134,(byte *)" - [0x%p]");
          puVar5 = FUN_10031640(local_134,(byte *)" [%s - %s]");
          puVar5 = FUN_100b10f0(local_114,(byte *)"items/weapons/%s");
          puVar5 = FUN_101f6800((byte *)"Hostage_%d.Scared_Running");
          puVar5 = FUN_10267f50(pvVar3,"PageTabActivated");
          puVar5 = FUN_10267f50(this_00,"Hotkey");
          puVar5 = FUN_1039d370(this_00,"Hotkey");
          puVar5 = FUN_1039d560(this_00,(uint *)"negative",0);
          puVar5 = FUN_1039d560(this_00,(uint *)"positive",0);
          puVar5 = FUN_1042ea30(pvVar3,"PageTabActivated");
          puVar5 = FUN_1042ea30(this_00,"Hotkey");
          puVar6 = FUN_10021180(local_1cc,(byte *)"(%f, %f, %f)");
          puVar6 = FUN_100b10f0(puVar9,(byte *)"(%f, %f, %f)");
          puVar6 = FUN_100d0740((byte *)"police_light%d");
          puVar6 = FUN_1042e930(pvVar5,"Settings",(uint *)&DAT_10558f0c,*(uint *)((int)this + 0x870)
          puVar6 = FUN_1042ea30(pvVar4,"OldParticleSystem_ActivateEmitter");
          puVar7 = FUN_004017b0(puVar6,(byte *)"Bad expression token: %c");
          puVar7 = FUN_10021180(puVar6,(byte *)"Bad expression token: %c");
          puVar7 = FUN_10031640(puVar6,(byte *)"Bad expression token: %c");
          puVar7 = FUN_100b10f0(puVar6,(byte *)"Bad expression token: %c");
          puVar7 = FUN_1042e810(this_01,&DAT_1051d524,(uint *)"mapname",(char *)&local_108);
          puVar7 = FUN_1042ea30(pvVar6,"CompletionCommand");
          puVar8 = FUN_10021180(local_168,(byte *)"(%f, %f, %f)");
          puVar8 = FUN_1017c740((byte *)"command \"%s\"");
          puVar8 = FUN_10267f50(pvVar7,"CanBeDefaultButton");
          puVar8 = FUN_10267f50(pvVar7,"FindDefaultButton");
          puVar8 = FUN_1039d370(pvVar7,"CanBeDefaultButton");
          puVar8 = FUN_1039d370(pvVar7,"FindDefaultButton");
          puVar8 = FUN_1042ea30(pvVar7,"CanBeDefaultButton");
          puVar8 = FUN_1042ea30(pvVar7,"FindDefaultButton");
          puVar9 = FUN_10021180(local_340,(byte *)"[%iH]");
          puVar9 = FUN_10267f50(pvVar8,"ShowNewControlMenu");
          puVar9 = FUN_1039d370(pvVar8,"ShowNewControlMenu");
          puVar9 = FUN_1042e930(pvVar4,"Settings",(uint *)&DAT_10558f0c,uVar3);
          puVar9 = FUN_1042ea30(pvVar8,"ShowNewControlMenu");
          pvVar2 = (void *)FUN_102c10f0(DAT_107a27d0,'\0',(uint *)"music",'\x01');
          this = FUN_1042ea30(pvVar1,"ActiveGameName");
          this_00 = FUN_1042ea30(pvVar1,"ModInfo");
          this_00 = FUN_1042ea30(this,"Issue");
          this_00 = FUN_1042ee30(puVar1,(uint *)"Preview",0);
          this_01 = FUN_1042ea30(this_00,"FlashlightState");
          this_01 = FUN_1042ea30(this_00,"GetText");
          this_03 = FUN_10267f50(this_02,"OnNetLanConnectionlessPacket");
          uVar1 = Error("Game and client .dlls requesting different versions \'%s\' vs. \'%s\' from \'%s\'\n"
          uVar1 = FUN_10077120("CAI_BaseNPC",(uint)PTR_s__Schedule_SCHED_ALERT_FACE_Tasks_105923c0,
          uVar1 = FUN_10104e40((void *)((int)this + 0x30),param_1,param_2,(uint *)"maxVal",
          uVar1 = FUN_10104e40((void *)((int)this + 0x30),param_1,param_2,(uint *)"timeOffset",
          uVar1 = FUN_10104e40((void *)((int)this + 0x38),param_1,param_2,(uint *)"maxVal",
          uVar1 = FUN_10104e40((void *)((int)this + 0x38),param_1,param_2,(uint *)"range_out_max",
          uVar1 = FUN_10265ef0(param_1,(byte *)"cl_updaterate");
          uVar1 = FUN_10265f50((byte *)"-auto",pbVar7);
          uVar1 = FUN_10265f50(DAT_106829b8,(byte *)"hl2mp");
          uVar1 = FUN_10265f50(param_1,(byte *)"VAC banned from secure server\n");
          uVar1 = FUN_10265f50(pbVar2,(byte *)"copymap");
          uVar1 = FUN_1042df20((byte *)"nav_progress",param_1);
          uVar1 = FUN_1042df80((byte *)param_1,(byte *)"HDRColorScale");
          uVar1 = FUN_1042df80(param_1,(byte *)"angle");
          uVar1 = FUN_1042df80(param_1,(byte *)"disableflashlight");
          uVar1 = FUN_1042df80(param_1,(byte *)"disablereceiveshadows");
          uVar1 = FUN_1042df80(param_1,(byte *)"nodamageforces");
          uVar1 = FUN_1042df80(pbVar6,(byte *)"initial");
          uVar10 = FUN_103996b0(pbVar9,(byte *)"rpg_rocket");
          uVar11 = FUN_0041f380(puVar6,"ts",0);
          uVar13 = (**(code **)(*piVar7 + 0x270))("button");
          uVar15 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Purchase_Price_Perm",2);
          uVar2 = (**(code **)(*piVar1 + 0x2c))("$falloffoffset",(int)&param_1 + 3,0);
          uVar2 = FUN_10104e40((void *)((int)this + 0x1c),param_1,this_00,(uint *)"PupilOpenRate",
          uVar2 = FUN_101a5ad0(1,(byte *)"ProcessClassInfo: invalid class index (%d).\n");
          uVar2 = FUN_10265f50(local_104,(byte *)"EMPHASIS");
          uVar2 = FUN_10265f50(param_1,(byte *)"NewCancel");
          uVar2 = FUN_10265f50(param_1,(byte *)"NewComplete");
          uVar2 = FUN_10265f50(param_1,(byte *)"SaveAs");
          uVar2 = FUN_10265f50(pbVar1,(byte *)"tchinese");
          uVar2 = FUN_10269690((int *)(DAT_106cb7e8 + 4),(uint *)"cfg\\video.txt","PROFILE",
          uVar2 = FUN_10399710((byte *)param_1,(byte *)"world_maxs");
          uVar2 = FUN_10399710(param_1,(byte *)"!target5");
          uVar2 = FUN_10399710(pbVar1,(byte *)"tchinese");
          uVar2 = FUN_1042df80(&DAT_104eefb3,(byte *)"English");
          uVar2 = FUN_1042df80((byte *)"Overlay_BottomLeft",param_1);
          uVar2 = FUN_1042df80(pbVar1,(byte *)"tchinese");
          uVar2 = FUN_1042f270(pvVar3,(uint *)"display",0);
          uVar2 = FUN_1042f3d0((void *)param_1[0x98],(uint *)"command",(uint)"      ");
          uVar2 = FUN_1042f3d0(this_00,(uint *)"toggle",(uint)&DAT_104eefb3);
          uVar2 = FUN_104300e0((int *)(DAT_107c09f8 + 4),(uint *)"cfg\\video.txt","PROFILE",
          uVar2 = Warning("Missing RecvProp for %s - %s/%s\n",param_2,param_3[2],
          uVar2 = Warning("RecvProp type doesn\'t match server type for %s/%s\n",param_3[2],
          uVar3 = (**(code **)(*(int *)param_1[300] + 0x330))("Candidate",local_e8,0,param_1,0);
          uVar3 = FUN_101f3700((int)this,3,"#All_Teams_Full",(char *)0x0,(char *)0x0,(char *)0x0,
          uVar3 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting \',\', didn\'t find it!");
          uVar3 = FUN_10265ef0((byte *)piVar5,(byte *)"0.0.0.0");
          uVar3 = FUN_10265ef0(pbVar2,(byte *)"update_stacks");
          uVar3 = FUN_10265f50(pbVar2,(byte *)"autoresize");
          uVar3 = FUN_102eb0f0(puVar2,(uint *)"precache_npcvehicles");
          uVar3 = FUN_103996b0(pbVar1,(byte *)"scripts/vehicles/car-7.txt");
          uVar3 = FUN_10399710(pbVar2,(byte *)"autoresize");
          uVar3 = FUN_1039d9a0(pvVar1,(uint *)"distance_check_subtitle",0);
          uVar3 = FUN_1039d9a0(pvVar1,(uint *)"show_subtitle",0);
          uVar3 = FUN_1039db00(pvVar1,(uint *)"activity",(uint)&DAT_1043677a);
          uVar3 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting \',\', didn\'t find it!");
          uVar3 = FUN_1042df20(pbVar1,(byte *)"Y_BUTTON");
          uVar3 = FUN_1042df20(pbVar14,(byte *)"Brightness");
          uVar3 = FUN_1042df20(pbVar14,(byte *)"KeyboardMouse");
          uVar3 = FUN_1042df80((byte *)"+voicerecord",pbVar2);
          uVar3 = FUN_1042df80(param_1,(byte *)"indicator_kill");
          uVar3 = FUN_1042df80(pbVar1,(byte *)"Audio");
          uVar3 = FUN_1042df80(pbVar1,(byte *)"HorizontalNormal");
          uVar3 = FUN_1042df80(pbVar1,(byte *)"TIGameOptions");
          uVar3 = FUN_1042df80(pbVar2,(byte *)"autoresize");
          uVar3 = FUN_1042df80(pbVar7,(byte *)"reload");
          uVar3 = FUN_1042f270(this,(uint *)"only_mission",0);
          uVar3 = FUN_1042f3d0(pvVar1,(uint *)"menu_label",(uint)&DAT_104eefb3);
          uVar3 = FUN_1042f3d0(pvVar1,(uint *)"subtitle",(uint)&DAT_104eefb3);
          uVar3 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting \',\', didn\'t find it!");
          uVar3 = Warning("COM_BufferToBufferDecompress: Snappy decompression failed\n");
          uVar3 = Warning("COM_BufferToBufferDecompress: header said %d bytes would be decompressed, but we LZSS decompressed %d\n"
          uVar3 = Warning("func_breakable with invalid propdata %d.\n",uVar2);
          uVar4 = (**(code **)(*DAT_106cb7f4 + 0x170))("effects/noise_rg","Other textures",1,0);
          uVar4 = (**(code **)(piVar3[1] + 0x84))("buff_attach");
          uVar4 = FUN_101c52f0(&DAT_106a4940,(int *)this,(int)"failed processing");
          uVar4 = FUN_101f54b0((byte *)"\"%s<%i><%s><%s>\" committed suicide with \"world\"\n");
          uVar4 = FUN_10265ef0((byte *)&DAT_10674cf0,(byte *)"SoundMixers");
          uVar4 = FUN_10265ef0(pbVar11,(byte *)"tv_chatgroup");
          uVar4 = FUN_10265ef0(pbVar3,(byte *)"prestart_stack");
          uVar4 = FUN_10265ef0(pbVar3,(byte *)"stop_stack");
          uVar4 = FUN_10265f50(pbVar5,(byte *)"-flush");
          uVar4 = FUN_102687d0(puVar8,(uint *)"result",0);
          uVar4 = FUN_10399710((byte *)"parentname",*(byte **)(iVar7 + 0x10 + *piVar1));
          uVar4 = FUN_10399710((byte *)param_1,(byte *)"Dangling");
          uVar4 = FUN_1039d9a0(puVar8,(uint *)"result",0);
          uVar4 = FUN_1042df20((byte *)"hltv_chase",pbVar3);
          uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"disableshadowdepth");
          uVar4 = FUN_1042df80(local_43c,(byte *)"blank");
          uVar4 = FUN_1042df80(local_84,(byte *)"cmd2 bind");
          uVar4 = FUN_1042df80(pbVar1,(byte *)"Controller");
          uVar4 = FUN_1042df80(pbVar3,(byte *)"mouseover");
          uVar4 = FUN_1042df80(pbVar3,(byte *)"newsubpage");
          uVar4 = FUN_1042f270(local_8,(uint *)"reqteam",0);
          uVar4 = FUN_1042f270(puVar8,(uint *)"result",0);
          uVar4 = FUN_1042f3d0(this_00,(uint *)"attachment_offset",(uint)&DAT_104eefb3);
          uVar4 = Warning("Area not set!\n");
          uVar4 = Warning("Priority not set!\n");
          uVar5 = (**(code **)(*DAT_106cb7f4 + 0x150))("dev/blend_sfb0","Other textures",1,0);
          uVar5 = (**(code **)(*piVar4 + 0x2c))(uVar2,uVar3,"SteamMatchMakingServers002");
          uVar5 = FUN_101f3700((int)this,2,"#Spectator_Mode_Unkown",(char *)0x0,(char *)0x0,
          uVar5 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Encountered invalid element ID data!");
          uVar5 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting \',\', didn\'t find it!");
          uVar5 = FUN_10265f50(pbVar4,(byte *)"comment");
          uVar5 = FUN_1039db00(pvVar2,(uint *)"activity",0);
          uVar5 = FUN_1039db00(pvVar2,(uint *)"angles_relative",0);
          uVar5 = FUN_1039db00(pvVar2,(uint *)"entry_activity",0);
          uVar5 = FUN_1039db00(pvVar2,(uint *)"exit_activity",0);
          uVar5 = FUN_1039db00(pvVar2,(uint *)"loop_break_trigger",0);
          uVar5 = FUN_1039db00(pvVar2,(uint *)"origin_relative",(uint)"0 0 0");
          uVar5 = FUN_1039db00(pvVar2,(uint *)"velocity_relative",0);
          uVar5 = FUN_103fd956(pcVar8,(int)"%d %d %d %d");
          uVar5 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Encountered invalid element ID data!");
          uVar5 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting \',\', didn\'t find it!");
          uVar5 = FUN_1042df80(&DAT_107973a0,(byte *)"SetInfo");
          uVar5 = FUN_1042df80(local_318,(byte *)"localplayerweapon");
          uVar5 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Encountered invalid element ID data!");
          uVar5 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting \',\', didn\'t find it!");
          uVar5 = LoggingSystem_Log(DAT_104c2ea8,1,"Error: Operator %s, illegal array access: %s",
          uVar6 = (**(code **)(iVar2 + 0x84))("muzzle",&local_4c,&local_64);
          uVar6 = FUN_102202b0("Computing mesh visibility...",100,
          uVar6 = FUN_102202b0("Custom game-specific analysis...",100,
          uVar6 = FUN_102202b0("Finding earliest occupy times...",100,
          uVar6 = FUN_102202b0("Finding encounter spots...",100,
          uVar6 = FUN_102202b0("Finding hiding spots...",100,
          uVar6 = FUN_102202b0("Finding sniper spots...",100,
          uVar6 = FUN_10265f50((byte *)&DAT_10674cf0,(byte *)"CHAN_VOICE");
          uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"Accel");
          uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"runevent");
          uVar6 = FUN_10265f50(pbVar5,(byte *)"append");
          uVar6 = FUN_10268930(pvVar3,(uint *)"factory",(uint)&DAT_103236cf);
          uVar6 = FUN_10399710(pbVar5,(byte *)"append");
          uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"Accel");
          uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"runevent");
          uVar6 = FUN_1042df80(pbVar5,(byte *)"append");
          uVar7 = FUN_0041f250(puVar6,"sk",(uint)&DAT_0043b3d2);
          uVar7 = FUN_101c7240(param_1,"Bomb.Plant",0,0);
          uVar7 = FUN_10399710(pbVar6,(byte *)"collisionrules");
          uVar7 = FUN_103b5470(this,iVar1,uVar4,"Unserialize");
          uVar7 = FUN_1042df80(abStack340,(byte *)"materials/vgui/logos/custom/");
          uVar7 = FUN_1042df80(local_154,(byte *)"materials/vgui/logos/custom/");
          uVar7 = FUN_1042df80(pbVar6,(byte *)"collisionrules");
          uVar7 = FUN_104300e0(piVar2,(uint *)"resource/g15.res",&DAT_10515278,(int *)0x0);
          uVar8 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Title_ReqPoints_Bonus",2);
          uVar8 = (**(code **)(*DAT_107c0a04 + 0x150))("sun/overlay","ClientEffect textures",1,0);
          uVar8 = FUN_10265f50(*(byte **)(local_30[0] + iVar13 * 4),(byte *)"from_steam");
          uVar8 = FUN_10399710(pbVar7,(byte *)"materialtable");
          uVar8 = FUN_1039d9a0(pvVar6,(uint *)"skin_min",0);
          uVar8 = FUN_1042df80(pbVar7,(byte *)"materialtable");
          uVar8 = FUN_1042f270(pvVar6,(uint *)"skin_min",0);
          uVar9 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01');
          uVar9 = FUN_1039d9a0(pvVar6,(uint *)"skin_max",0xffffffff);
          uVar9 = FUN_1042f270(pvVar6,(uint *)"skin_max",0xffffffff);
         "AddOutput input fired with bad string. Format: <output name> <targetname>,<inputname>,<parameter>,<delay>,<max times to fire (-1 == infinite)>\n"
         "Choreographed scene which controls animation and/or dialog on one or more actors.";
         "SERVER",param_1);
         "To connect areas, mark an area, highlight a second area, then invoke the connect command. Make sure the cursor is directly north, south, east, or west of the marked area."
         (((DAT_10730cd0 = (*(code *)param_1)("VDebugOverlay004",0), DAT_10730cd0 != 0 &&
         (((bVar3 = FUN_100a6de0(this_00,"worldspawn"), bVar3 ||
         (((char *)piVar2[0x17] == "path_track" ||
         (((char *)this_00[0x17] != "prop_vehicle_jeep" &&
         ((DAT_107347b8 = (*(code *)param_1)("VEngineRandom001",0), DAT_107347b8 != 0 &&
         ((iVar4 = FUN_10265c20((int)pcVar3,"common/",7), iVar4 != 0 &&
         ((local_5 == '\0' || (uVar5 = FUN_10265ef0(pbVar7,(byte *)"localPlayer"), uVar5 != 0)))) {
         ((param_1 == 1 && (iVar4 = FUN_102659b0(local_118,"music"), iVar4 == 0)))) {
         ((piVar2 = (int *)(**(code **)(*piVar2 + 0xbc))("$worldimposter",&DAT_104e26c8),
         ((pvVar4 = FUN_1011d260(iVar3,(byte *)"changelevel2"), pvVar4 == (void *)0x0 &&
         ((uVar3 = FUN_100612d0(pvVar4,"prop_physics_multiplayer"), (char)uVar3 != '\0' ||
         ((uVar4 = FUN_10265ef0(local_104,(byte *)"cl_lw"), uVar4 != 0 &&
         ((uVar4 = FUN_10265ef0(local_104,(byte *)"model"), uVar4 != 0 &&
         ((uVar4 = FUN_10265f50(pbVar2,(byte *)"frontbuffer"), uVar4 == 0 ||
         (DAT_104e3344 = (*DAT_104e3348)("ClientVirtualReality001",0), DAT_104e3344 == 0)) {
         (DAT_10730cec = (*(code *)param_1)("VEngineShadowMgr002",0), DAT_10730cec != 0)))) &&
         (bVar1 = FUN_100a6de0(*(void **)(local_8 + 4),"npc_monk"), !bVar1)) ||
         (bVar2 = FUN_100a6de0(param_1,"dynamic_prop"), bVar2)) ||
         (bVar2 = FUN_100a6de0(this_00,"scripted_sequence"), bVar2)) {
         (bVar5 = FUN_100a6de0(this_00,"worldspawn"), bVar5)) ||
         (cVar11 = DoNewAssertDialog("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h"
         (cVar3 = DoNewAssertDialog("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h"
         (hModule = LoadLibraryExW(L"USER32.DLL",(HANDLE)0x0,0), uVar9 = extraout_DL_00,
         (iVar2 = FUN_10265c20((int)pcVar6,"\\\\",2), iVar2 == 0)) {
         (iVar2 = FUN_10399480((int)pcVar6,"\\\\",2), iVar2 == 0)) {
         (iVar2 = FUN_1042dc70((int)pcVar6,"\\\\",2), iVar2 == 0)) {
         (iVar3 = (*pcVar1)("MaterialSystemHardwareConfig013",0), iVar3 != 0)) goto LAB_102613ee;
         (iVar3 = (*pcVar1)("MaterialSystemHardwareConfig013",0), iVar3 != 0)) goto LAB_103a757e;
         (iVar4 = (**(code **)(*DAT_10730d00 + 0x18))("hint_shutoff_wall_rappel_jump",0,0),
         (iVar6 = (**(code **)(**(int **)(iVar8 + 0x10 + uVar7 * 0x14) + 0x1c))("index",0),
         (iVar6 = (**(code **)(*DAT_10730d00 + 0x18))("hint_shutoff_wall_rappel_break_window",0,0),
         (local_c = (int *)(**(code **)(*DAT_106466d0 + 0x18))("break_breakable",0,0),
         (pauVar2 = FUN_10021ad0(uVar5,uVar6,pauVar2,(undefined (*) [16])"-sbhcompactdisabled "),
         (piVar11 = (int *)(*pcVar8)("IBSPPACK003",0), piVar11 == (int *)0x0)) {
         (piVar12 = (int *)(*pcVar10)("IBSPPACK003",0), piVar12 == (int *)0x0)) {
         (piVar2 = (int *)FUN_10135420("prop_ballistic_blockade",-1,'\x01'), param_1 = local_8,
         (piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("player_team",0,0),
         (piVar4 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("retrieve_case",0,0),
         (piVar8 = (int *)(**(code **)(*piVar7 + 0xbc))("$orientationMatrix",param_4 + 4),
         (puVar4 = FUN_1039d560(this,(uint *)"dynamic_interactions",0), puVar4 != (uint *)0x0)) {
         (uVar2 = FUN_100845f0(param_1,(byte *)"classname"), (char)uVar2 == '\0')) {
         (uVar2 = FUN_10265ef0(pbVar5,(byte *)"localhost"), uVar2 == 0)) {
         (uVar2 = FUN_10399710(pbVar1,(byte *)"activator"), uVar2 == 0)) {
         (uVar2 = FUN_10399710(pbVar1,(byte *)"caller"), uVar2 != 0)) {
         (uVar2 = FUN_10399710(pbVar5,(byte *)"!player"), uVar2 == 0)) {
         (uVar3 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01'), (char)uVar3 != '\0')) {
         (uVar3 = FUN_103996b0(pbVar1,(byte *)"scripts/vehicles/truck-2.txt"), uVar3 == 0)) {
         (uVar3 = FUN_10399710(pbVar5,(byte *)"soundent"), uVar3 != 0)) {
         (uVar4 = FUN_10265f50(pbVar11,(byte *)"spec_mode"), uVar4 == 0)) {
         (uVar4 = FUN_10314280(DAT_10693b08,(uint *)"allow_logging_truck",'\x01'),
         (uVar6 = FUN_10314280(DAT_10693b08,(uint *)"extra_ammo",'\x01'), (char)uVar6 != '\0')) {
         (uVar9 = FUN_100612d0(ppvVar7,"prop_door_rotating"), (char)uVar9 != '\0')) ||
         piVar4 = (int *)(**(code **)(*(int *)param_1[0x14] + 0xbc))("$basetexture",&DAT_107d4b58),
         piVar5 = (int *)(**(code **)(*(int *)param_1[0x14] + 0xbc))("$basetexture",&DAT_106b9590),
        "C_NPC_VIP::OnDataChanged::global gameobject list doesn\'t have a valid vip.. but.. we are here, hello!\nre-registering..\n"
        "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_dma.cpp",0x16ca,iVar2);
        "d:\\projects\\ti\\release\\ti_rel\\src\\engine\\audio\\private\\snd_dma.cpp",0x6ff,
        && ((char *)this_00[0x17] != "func_brush")) &&
        (&DAT_106af800)[DAT_10418eb0] = "g_DispLightmapSamplePositions";
        (((DAT_10730cf0 = (*(code *)param_1)("IEngineSoundClient003",0), DAT_10730cf0 != 0 &&
        ((DAT_10730ce0 = (*(code *)param_1)("SpatialPartition001",0), DAT_10730ce0 != 0 &&
        ((cVar1 == '#' || (cVar1 == '\"')))) ||
        ((char *)param_1[0x17] == "prop_dynamic_override")) ||
        ((char *)this_00[0x17] == "func_lod")) ||
        ((pvVar4 = FUN_1011d260(iVar3,(byte *)"changelevel"), pvVar4 == (void *)0x0 &&
        ((uVar4 = FUN_10265ef0(local_104,(byte *)"cl_updaterate"), uVar4 != 0 &&
        ((uVar4 = FUN_10265ef0(pbVar3,(byte *)"start_stack"), uVar4 == 0 || (param_1 != 3)))) &&
        (**(code **)(*(int *)PTR_DAT_10417834 + 0x34))("autosavedangerous",local_54,0,0,0,0);
        (**(code **)(*(int *)ppcVar1[2] + 0x2c))(local_114,"CONTENT",1);
        (**(code **)(*(int *)ppcVar1[2] + 0x3c))("CONTENT",1);
        (**(code **)(*(int *)ppcVar1[2] + 0x3c))("executable_path",1);
        (**(code **)(**(int **)((int)this + 0x228) + 900))("items/none");
        (**(code **)(**(int **)((int)this + 0x400) + 0x338))("LabelOption1",&local_91c);
        (**(code **)(**(int **)((int)this + 0x400) + 0x338))("LabelOption2",&local_91c);
        (**(code **)(**(int **)(iVar2 + 0x3c) + 0x14))("___clientsideitemsplaceholder1___");
        (**(code **)(**(int **)(param_1 + 0x6c) + 0x150))(param_1,"YellowBlood");
        (**(code **)(**(int **)(param_1 + 0x6c) + 0x254))(param_1,"YellowBlood");
        (**(code **)(**(int **)(param_1[0x66f] + iVar3 * 4) + 0x14))(0xffffffff,"No Active Session")
        (**(code **)(**(int **)(puVar1 + 0x18) + 0x94))("RemoveSplitScreenUser");
        (**(code **)(**lpParameter + 8))("AlphaThreshold",*(undefined *)(param_3 + 10));
        (**(code **)(**lpParameter + 8))("DXT1UseAlpha",param_3[9]);
        (**(code **)(**lpParameter + 8))("UseAdaptiveWeighting",param_3[8]);
        (**(code **)(*DAT_106466ac + 0x94))("autosavedangerous\n");
        (**(code **)(*DAT_106466ac + 0x94))("autosavedangerousissafe\n");
        (**(code **)(*DAT_106466ac + 0xa0))(DAT_106466ac,iVar4,"cd pause\n");
        (**(code **)(*DAT_106466ac + 0xc0))(DAT_106466ac,0x34,"Matching Car in front speed %.2f");
        (**(code **)(*DAT_10681754 + 0x4c))(puVar5,"LOGDIR");
        (**(code **)(*DAT_106a5f0c + 0x158))("UI/menu_focus.wav");
        (**(code **)(*DAT_106a5f0c + 0x158))("resource/warning.wav");
        (**(code **)(*DAT_106a5f0c + 0x158))("ui/menu_countdown.wav");
        (**(code **)(*DAT_106cb7e8 + 0x54))(&DAT_1035b734,"PROFILE");
        (**(code **)(*DAT_106cb814 + 8))("OverlayMeshCreate");
        (**(code **)(*DAT_106cb85c + 0x158))("UI/menu_focus.wav");
        (**(code **)(*DAT_106cb85c + 0x158))("resource/warning.wav");
        (**(code **)(*DAT_106cb85c + 0x158))("ui/menu_countdown.wav");
        (**(code **)(*DAT_10730cc4 + 0x28))("cancelselect\n");
        (**(code **)(*DAT_10730cc4 + 0x28))("startupmenu");
        (**(code **)(*DAT_10730cc4 + 0x28))("voicerecord_toggle on\n");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"APPROACH_NEARBY_CT");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"APPROACH_NEARBY_TER");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"ATTACKTARGET");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"FINDSEAT");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"FOLLOWTARGET");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"GOTOWAYPOINT");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"GRABBED");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"HEAD_TOWARDS_VEHICLE_OR_TEAMMATE");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"INJURED");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"IN_VEHICLE");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"IN_VEHICLE_ARMED");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"RESCUED");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SCARED");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SCARED_RUNFROMPOINT");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SEARCH_FOR_VEHICLE_OR_TEAMMATE");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SITTING");
        (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SITTING_SCARED");
        (**(code **)(*DAT_10730ce4 + 0x54))(&DAT_1050bd60,"PROFILE");
        (**(code **)(*DAT_107c0a6c + 0x158))("UI/menu_focus.wav");
        (**(code **)(*DAT_107c0a6c + 0x158))("resource/warning.wav");
        (**(code **)(*DAT_107c0a6c + 0x158))("ui/menu_countdown.wav");
        (**(code **)(*local_38 + 0xc4))(local_38,param_1,"Invalid cross-play platform id\n");
        (**(code **)(*local_8 + 0x388))("#GP_Bombing_CT");
        (**(code **)(*local_8 + 0x388))("#GP_Bombing_TerBomb");
        (**(code **)(*local_8 + 0x388))("#GP_HG_Ter");
        (**(code **)(*local_8 + 0x388))("#GP_HR_CT");
        (**(code **)(*local_8 + 0x388))("#GP_HR_Ter");
        (**(code **)(*local_8 + 0x388))("#GP_VIPCar_TerDriver");
        (**(code **)(*local_8 + 0x388))("#GP_VIPEsc_CT_VIP");
        (**(code **)(*local_8 + 0x388))("#GP_VIPEsc_Ter_BOSS");
        (**(code **)(*local_c + 0x2c))("tacint","PLATFORM",1);
        (**(code **)(*local_c + 0x34))("entindex",iVar2);
        (**(code **)(*local_c + 0x34))("material",uVar10);
        (**(code **)(*local_c + 0x34))("userid",uVar6);
        (**(code **)(*local_c + 0xc))("_temp_mapcycle.txt");
        (**(code **)(*param_1 + 0x1c))("kicked",0);
        (**(code **)(*param_1 + 0x28))("duration",&DAT_103236cf);
        (**(code **)(*param_1 + 0x28))("networkid",&DAT_103236cf);
        (**(code **)(*param_1 + 0x434))("textwindow_temp.html");
        (**(code **)(*param_1 + 0x604))("specgui",1,0);
        (**(code **)(*piVar1 + 0x18))("-autoconfig",0);
        (**(code **)(*piVar1 + 0x18))("-safe",0);
        (**(code **)(*piVar1 + 0x34))("potentialVotes",*(undefined4 *)(&DAT_00001460 + local_c));
        (**(code **)(*piVar2 + 0x128))("Close");
        (**(code **)(*piVar2 + 0x40))(&DAT_10464104,"Please wait for broadcast to start ...");
        (**(code **)(*piVar3 + 0x14))("___clientsideitemsplaceholder0___");
        (**(code **)(*piVar3 + 0x34))("autoteam",param_2);
        (**(code **)(*piVar3 + 0x34))("disconnect",*(int *)((int)this + 0xdf0) == 1);
        (**(code **)(*piVar3 + 0x34))("index",iVar4);
        (**(code **)(*piVar3 + 0x34))("silent",param_3);
        (**(code **)(*piVar3 + 0x34))("target",iVar5);
        (**(code **)(*piVar3 + 0x34))("userid",uVar4);
        (**(code **)(*piVar3 + 0x388))("#L4D360UI_QuickMatch");
        (**(code **)(*piVar3 + 0x388))("#L4D360UI_QuickStart");
        (**(code **)(*piVar3 + 0x40))(&DAT_104e49ac,"fire_extinguisher");
        (**(code **)(*piVar3 + 0x40))(&DAT_104e49ac,"propane_tank");
        (**(code **)(*piVar3 + 0x40))(&DAT_10567020,"ammo_box");
        (**(code **)(*piVar3 + 0x604))("roundwin",param_1,param_2);
        (**(code **)(*piVar3 + 0x604))("scores",0,0);
        (**(code **)(*piVar3 + 0x94))("cameraname",puVar5);
        (**(code **)(*piVar3 + 0xc))("-tools",0);
        (**(code **)(*piVar4 + 0x30))("dedicated",*(undefined *)(param_1 + 0x18));
        (**(code **)(*piVar4 + 0x34))("maxplayers",*(undefined4 *)(param_1 + 0x34));
        (**(code **)(*piVar4 + 0x34))("password",0);
        (**(code **)(*piVar4 + 0x34))(piVar4,"Server shutting down");
        (**(code **)(*piVar4 + 0x3f8))("You are alone.");
        (**(code **)(*piVar4 + 0x40))("hostname",*(undefined4 *)(param_1 + 0x50));
        (**(code **)(*piVar4 + 0x40))("mapname",*(undefined4 *)(param_1 + 0x48));
        (**(code **)(*piVar4 + 0x40))(&DAT_10567020,"propane_tank");
        (**(code **)(*piVar4 + 0x604))("scores",1,0);
        (**(code **)(*piVar5 + 0x34))("index",local_60);
        (**(code **)(*piVar5 + 0x34))("target",iVar6);
        (**(code **)(*piVar6 + 0x34))("userid",0);
        (**(code **)(*piVar6 + 0x40))("networkid",&DAT_103236cf);
        (**(code **)(*piVar7 + 0x34))("killer",uVar8);
        (**(code **)(*piVar7 + 0x4c4))("center",0);
        (**(code **)(*piVar7 + 0x4c4))("north",0);
        (**(code **)(*piVar7 + 0x4c4))("north-east",0);
        (**(code **)(*piVar7 + 0x4c4))("north-west",0);
        (**(code **)(*piVar7 + 0x4c4))("south",0);
        (**(code **)(*piVar7 + 0x4c4))("south-east",0);
        (**(code **)(*piVar7 + 0x4c4))("south-west",0);
        (**(code **)(*piVar7 + 8))("specgui",1);
        (**(code **)(*piVar8 + 0x34))("priority",1);
        (**(code **)(*piVar8 + 0x94))("model",(int)puVar5 + 5,pcVar6,puVar14);
        (**(code **)(*piVar8 + 0x94))("origin",(int)puVar5 + 5);
        (**(code **)(*piVar8 + 0x94))("vehiclescript",(int)puVar5 + 5);
        (**(code **)(*piVar9 + 0x40))(&DAT_10567020,"rappel_point");
        (**(code **)(*piVar9 + 0xc4))(piVar9,param_1,"Invalid Steam key length\n");
        (**(code **)(*this + 0x31c))("resource/LoadingDialogDualProgress.res",0,0,0);
        (**(code **)(*this + 0x67c))("Path away from best sound too short!\n");
        (**(code **)(*this + 0x6c))("models/vehicles/cars/load_barrels-1.mdl");
        (**(code **)(*this + 0x6c))("models/vehicles/cars/load_wood-1.mdl");
        (**(code **)(*this + 0x94))("vehiclescript","scripts/vehicles/forklift-1.txt");
        (**(code **)(*this + 900))("items/none");
        (**(code **)(*this_00 + 0x94))("model",local_10);
        (**(code **)(*this_00 + 0x94))("model",pcVar12);
        (**(code **)(*this_00 + 0x94))("solid",&DAT_104b8550);
        (**(code **)(DAT_106cb7e8[1] + 0x5c))(param_2,"PROFILE",local_34,1);
        (**(code **)(DAT_10730ce4[1] + 0x5c))(local_13c,"PROFILE",local_38,1);
        (**(code **)(extraout_EDX + 0x7c))(extraout_ECX,0x14,"%d %d %s",param_1,param_2,pcVar3);
        (**(code **)(iVar1 + 0x34))("subject",uVar4);
        (**(code **)(iVar1 + 0x34))("subject",uVar5);
        (**(code **)(iVar1 + 0x40))("networkid",puVar2);
        (**(code **)(iVar11 + 0x34))("userid",uVar8);
        (**(code **)(iVar11 + 0x40))("networkid",uVar8);
        (**(code **)(iVar2 + 0x30))("isbot",cVar1 == '\0');
        (**(code **)(iVar2 + 0x31c))(0,"avatar","avatar",uVar8);
        (**(code **)(iVar2 + 0x34))("equipment",uVar9);
        (**(code **)(iVar2 + 0x34))("hands",uVar9);
        (**(code **)(iVar2 + 0x34))("holster",uVar9);
        (**(code **)(iVar2 + 0x34))("oldteam",uVar4);
        (**(code **)(iVar2 + 0x34))("perk1",uVar9);
        (**(code **)(iVar2 + 0x34))("perk2",uVar9);
        (**(code **)(iVar2 + 0x34))("perk3",uVar9);
        (**(code **)(iVar2 + 0x34))("primary",uVar9);
        (**(code **)(iVar2 + 0x34))("secondary",uVar9);
        (**(code **)(iVar3 + 0x34))("subject",iVar6);
        (**(code **)(iVar4 + 0x34))("subject",uVar10);
        (**(code **)(iVar5 + 0x360))("InfoLabel1",uVar4);
        (**(code **)(iVar5 + 0x360))("InfoLabel2",uVar4);
        (**(code **)(iVar5 + 0x40))("address",pcVar8);
        (**(code **)(iVar6 + 0x4c))(DAT_10730cd0,&local_18,0,0,local_c,uVar9,0,0x40,"%s:(%d)",uVar8)
        (**(code **)(iVar6 + 0x94))("angles",uVar4);
        (**(code **)(iVar6 + 0x94))("origin",uVar4);
        (**(code **)(iVar7 + 0x34))("subject",uVar1);
        (**(code **)(iVar8 + 0x34))("userid",uVar7);
        (*pcVar11)("CToolFrameworkInternal::LoadToolsFromLibrary:  Unable to load \'%s\'\n",pauVar1)
        (*pcVar11)("thinktime %f, %i entities\n",(double)*pfVar1,fVar3);
        (*pcVar12)(&local_8," %d %llx, failed to get session state\n",iVar11,*puVar1,puVar1[1]);
        (*pcVar5)(DAT_104c2ea8,0,DAT_10414054,"%*s%s: ",param_3);
        (*pcVar6)("   Distributing %d\n",iVar3);
        (*pcVar7)("----Script Dump for entity %s\n",puVar3);
        (*pcVar7)("ViewBuilder Begin/End Error - Add dependency to world list (-1)\n");
        (*pcVar8)("%s:  Missing settings block for split screen mode \'%s\'\n",
        (*pcVar8)("%s: gzclose failed.\n","gzip_file_compress");
        (*ppcVar1[3])(*(undefined4 *)((int)this + 0xa8),"expecting event got %s\n",uVar5);
        (DAT_10730d08 = (*(code *)param_1)("SceneFileCache002",0), DAT_10730d08 != 0)) &&
        (bVar1 = FUN_100a6de0(param_1,"func_tracktrain"), !bVar1)))) {
        (bVar1 = FUN_100a6de0(param_1,"prop_physics_override"), !bVar1)) &&
        (bVar1 = FUN_100a6de0(this_00,"func_tracktrain"), !bVar1)))) {
        (bVar2 = FUN_100a6de0(*(void **)(param_1 + 4),"npc_monk"), bVar2)) &&
        (bVar2 = FUN_100a6de0(param_1,"func_pushable"), !bVar2)))) &&
        (iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_spawn_2",0x14), iVar6 == 0)) ||
        (iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_waypoint_2",0x17), iVar6 == 0)) ||
        (puVar3 = FUN_10268340(puVar3,(uint *)"track_data",0), puVar3 != (uint *)0x0)) &&
        (uVar3 = FUN_100612d0(pvVar4,"npc_track_plane"), (char)uVar3 != '\0')))) goto LAB_10255abc;
        (uVar3 = FUN_10314250(DAT_10693b08,(uint *)"mafia_mode"), (char)uVar3 == '\0')))) {
        (uVar6 = FUN_10399710(local_c,(byte *)"point_servercommand"), uVar6 != 0)) ||
        ) && (((this_00 == this_01 || ((char *)this_00[0x17] == "point_viewcontrol_multiplayer")) ||
        *(char **)(&DAT_1004ff40 + iVar6 * 8) = "LBH_arena";
        *(char **)((int)apiStack44 + iVar2 + 4) = "\"%s\" \"%s\" ";
        *(char **)((int)apiStack44 + iVar2 + 8) = "\"%s\" ";
        *(char **)((int)puVar24 + -0xc) = "Interpenetrating entities! (%s and %s)\n";
        *(char **)((int)puVar24 + -4) = "Fixing player blocking train by moving to center!\n";
        *(char **)(*(int *)(param_1 + 0x428) + 0x2a8) = "Condensed_Smaller";
        *(char **)(iVar3 + 0x1c + *(int *)((int)this + 0x4f6c)) = "EntityMessage(read) Queued";
        *(char **)(iVar3 + 0x6afa4) = "wild scan";
        *(char **)(param_3 + 0x5c) = "**studio**";
        *(char **)(param_9 + 0x18) = "oversubscribed distance tree";
        *(char **)(puVar13 + -8) = "$frame";
        *(char **)(puVar14 + -8) = "$AlphaTestReference";
        *(char **)(puVar15 + -8) = "$basetexture";
        *(char **)(puVar16 + -8) = "$frame";
        *(char **)(puVar17 + -8) = "$AlphaTestReference";
        *(char **)(puVar18 + -8) = "$basetexture";
        *(char **)(puVar4 + -4) = "Unhandled WAIT_ABANDONED in WaitForMultipleObjects";
        *(char **)(puVar7 + -4) = "Platform Error: module failed to initialize\n";
        *(char **)(puVar9 + -8) = "Missing caption for %s\n";
        *param_2 = "%";
        *param_2 = "^";
        *pcVar10 = "SunMonTueWedThuFriSat"[iVar8 + iVar1 * 3];
        *pcVar4 = '\"';
        *pcVar6 = "SunMonTueWedThuFriSat"[iVar7 + iVar1 * 3];
        *pcVar9 = "SunMonTueWedThuFriSat"[iVar7 + iVar1 * 3];
        ,"SlashTranslationData");
        ,local_1c,"deletions.bat",local_18,"undelete.lst");
        COM_TimestampedLog("CBaseServer::ConnectClient:  NET_CreateNetChannel");
        COM_TimestampedLog("InitMaterialSystemConfig");
        COM_TimestampedLog("ShutdownRegistry");
        COM_TimestampedLog("Stuff \'connect localhost\' to console");
        COM_TimestampedLog("materials->ModInit");
        CVProfile::EnterScope((CVProfile *)g_VProfCurrentProfile_exref,"NPCs",0,"NPCs",false,4);
        ConColorMsg((Color *)&DAT_106a8e20,"GAME INSTRUCTOR: ");
        ConColorMsg((Color *)&DAT_106a8e24,"& [%s] ");
        ConColorMsg((Color *)&DAT_106a8e24,")->AmmoEmpty()\n");
        ConColorMsg((Color *)&DAT_106a8e24,")->AmmoFull()\n");
        ConColorMsg((Color *)&DAT_106a8e24,")\n");
        ConColorMsg((Color *)&DAT_106a8e24,", [%s] ");
        ConColorMsg((Color *)&DAT_106a8e24,".\n");
        ConColorMsg((Color *)&DAT_106a8e24,"Opportunity ");
        ConColorMsg((Color *)&DAT_106a8e24,"Round started...\n");
        ConColorMsg((Color *)&DAT_106a8e24,"Spectated player changed...\n");
        ConColorMsg((Color *)&DAT_106a8e24,"Stopped lesson ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t([%s] ");
        ConColorMsg((Color *)&DAT_106a8e24,"\tQ_strcpy( [%s], [%s]->GetPlayerName() ",param_6,
        ConColorMsg((Color *)&DAT_106a8e24,"\tQ_strcpy( [stringINVALID], [%s]->GetPlayerName() ");
        ConColorMsg((Color *)&DAT_106a8e24,"\tQ_stricmp( [%s]->ModelName() ");
        ConColorMsg((Color *)&DAT_106a8e24,"\tUTIL_CountNumBitsSet([%s]) ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] *= [%s] ",param_3,uVar2);
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] += [%s] ",param_3,uVar2);
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] -= [%s] ",param_3,uVar2);
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] = [%s] ",param_3,uVar2);
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetActiveWeapon()->Clip1Percentage() ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetActiveWeapon()->GetName() ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetHealth() ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetTeamNumber() ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetWeaponInSlot( ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->HealthFraction() ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t[entity1] = [%s]->GetWeapon([%s] ");
        ConColorMsg((Color *)&DAT_106a8e24,"\t[output] = [%s]->Weapon_GetActiveSlot() ...\n");
        ConColorMsg((Color *)&DAT_106a8e24,"\t\tElement \"%s %s\" added.\n",puVar1,uVar5);
        ConColorMsg((Color *)&DAT_106a8e24,"replacing open lesson of same type.\n");
        ConColorMsg((Color *)&DAT_106a8e28,"%.1f\n",(double)(float)param_6);
        ConColorMsg((Color *)&DAT_106a8e28,"%f ");
        ConColorMsg((Color *)&DAT_106a8e28,"%f\n",(double)(float)param_6);
        ConColorMsg((Color *)&DAT_106a8e28,"%f\n",(double)param_6);
        ConColorMsg((Color *)&DAT_106a8e28,"%i ");
        ConColorMsg((Color *)&DAT_106a8e28,"%i ",(int)(float)param_6,puVar25);
        ConColorMsg((Color *)&DAT_106a8e28,"%i ",iVar4);
        ConColorMsg((Color *)&DAT_106a8e28,"%i\n",(int)(float)param_6,puVar25);
        ConColorMsg((Color *)&DAT_106a8e28,"%i\n",iVar8);
        ConColorMsg((Color *)&DAT_106a8e28,"%s");
        ConColorMsg((Color *)&DAT_106a8e28,"... ");
        ConColorMsg((Color *)&DAT_106a8e28,"...");
        ConColorMsg((Color *)&DAT_106a8e28,"...\n");
        ConColorMsg((Color *)&DAT_106a8e28,"0x%X ",(int)fVar1);
        ConColorMsg((Color *)&DAT_106a8e28,"0x%X",uVar6);
        ConColorMsg((Color *)&DAT_106a8e28,"\"%i\"",iVar21);
        ConColorMsg((Color *)&DAT_106a8e28,"\"%s\" ",param_8,puVar25);
        ConColorMsg((Color *)&DAT_106a8e28,"\"%s\"",param_8);
        ConColorMsg((Color *)&DAT_106a8e28,"\"%s\"\n",param_8,puVar25);
        ConColorMsg((Color *)&DAT_106a8e2c,"\"%s\" ",uVar5);
        ConColorMsg((Color *)&DAT_106a8e30,"\"%s\"",uVar5);
        ConColorMsg((Color *)&DAT_106a8e30,"\tParam BaseCombatWeapon returned NULL!\n");
        ConColorMsg((Color *)&DAT_106a8e30,"\tParam selecting string is out of range!\n");
        ConColorMsg((Color *)&DAT_106a8e30,"\tVar GetActiveWeapon returned NULL!\n");
        ConColorMsg((Color *)&DAT_106a8e30,"\tVar GetWeaponInSlot returned NULL!\n");
        ConColorMsg((Color *)&DAT_106a8e30,"\tVar handle as BaseAnimating returned NULL!\n");
        ConColorMsg((Color *)&DAT_106a8e30,"\tVar handle as BaseCombatCharacter returned NULL!\n");
        ConColorMsg((Color *)&DAT_106a8e30,"\tVar handle as BasePlayer returned NULL!\n");
        ConColorMsg((Color *)&DAT_106a8e30,"\tVar handle or Param handle returned NULL!\n");
        ConColorMsg((Color *)&DAT_106a8e34,"%i ",uVar5,puVar25);
        ConColorMsg((Color *)&local_8," )\n");
        ConColorMsg((Color *)&local_8,"%ls",local_2010);
        ConColorMsg((Color *)&local_8,"V_AppendSlash: ran out of space on %s.",param_1);
        ConColorMsg((Color *)&local_8,"area %d is blocked by a nav blocker\n",
        ConColorMsg((Color *)&local_8,"m_pBugReporter->Init() failed\n");
        ConColorMsg((Color *)&local_c,"\"%s\"",pcVar11);
        ConColorMsg((Color *)&param_1,"Adding direct connect IP to connection %s\n",pcVar3);
        ConColorMsg((Color *)&param_1,"DUPE: non-entity blocked area %d\n",
        ConColorMsg((Color *)&param_1,"V_MakeAbsolutePath: _getcwd failed.");
        ConColorMsg((Color *)&param_2,"Created %s connection to %llx\n",puVar3,iVar7,iVar6);
        ConColorMsg((Color *)&param_3,"DUPE: %s %d blocked area %d\n",pcVar4,iVar6,uVar7);
        ConColorMsg((Color *)&param_3,"V_AppendSlash: ran out of space on %s.",_Dest);
        ConDMsg("Client forced immediate full update.\n");
        ConDMsg("R_BuildCubemapSamples: No map loaded!\n");
        ConMsg("           per client out %.1f, in %.1f kB/s\n",
        ConMsg("           per client out %.1f/s, in %.1f/s\n",(double)(fVar24 * fVar2),
        ConMsg("   (c)%i : %s\n",iVar3,uVar1);
        ConMsg("  %i:  %s\n",iVar7,pcVar2);
        ConMsg(" Invalid address \"%s\", setmaster command ignored\n",local_9c);
        ConMsg("%4d: Flags:0x%8.8x %s\n",uVar4,*(undefined4 *)(iVar2 + 0x108),iVar2 + 4);
        ConMsg("%4d: Flags:0x%8.8x RefCount:%2d %s\n",uVar4,*(undefined4 *)(iVar2 + 0x108),uVar3,
        ConMsg("%5.2f MB: %s\n",SUB84(dVar7,0),(int)((ulonglong)dVar7 >> 0x20),pcVar4);
        ConMsg("%s %s...\n",pcVar5,puVar1);
        ConMsg("%s %s: invalid file type.\n",puVar6,local_114);
        ConMsg("%s(%s)",puVar4,puVar3);
        ConMsg("%s:duplicate packet %i at %i\n",pcVar8,uVar13,uVar12);
        ConMsg("%s\n",pbVar15);
        ConMsg(", console");
        ConMsg("- Data:    net total out  %.1f, in %.1f kB/s\n",(double)(fVar4 * 0.0009765625),
        ConMsg("- Latency: avg out %.2fs, in %.2fs\n",(double)(fVar24 * (float)(fVar19 + fVar6)),
        ConMsg("- Loss:    avg out %.1f, in %.1f\n",(double)(fVar24 * (float)(fVar22 + fVar9)),
        ConMsg("- Packets: net total out  %.1f/s, in %.1f/s\n",(double)fVar2,(double)fVar1);
        ConMsg("- \"%s\" = \"%.2f\"\n",puVar2);
        ConMsg("Adding master at %s\n",pcVar2);
        ConMsg("Blocking message %s\n",uVar9);
        ConMsg("CDemo::Play: failed to create demo net channel\n");
        ConMsg("COM_CheckGameDirectory: game directories don\'t match (%s / %s)\n",pbVar2,param_1);
        ConMsg("Can\'t load bsppack.dll\n");
        ConMsg("Can\'t remove master %s, not in list\n",pcVar2);
        ConMsg("Can\'t save if not active.\n");
        ConMsg("Can\'t set %s in multiplayer\n",uVar6);
        ConMsg("Can\'t set %s when connected\n",uVar6);
        ConMsg("Could not get IServerGameEnts interface from library %s",param_1);
        ConMsg("Dropped %s from server (%s)\n",uVar6);
        ConMsg("ERROR! Stream indata oversize.");
        ConMsg("ERROR: demo file protocol %i outdated, engine vnoteersion is %i \n",iVar4,4);
        ConMsg("Ent %3d: %s class %s\n",iVar3,local_104,local_204);
        ConMsg("Failed to resolve absolute path of map: %s\n",puVar5);
        ConMsg("Failed to resolve absolute path of map: %s\n",puVar9);
        ConMsg("For FCVAR_REPLICATED, ConVar must be defined in client and game .dlls (%s)\n",uVar3)
        ConMsg("Map [%s] has incorrect BSP version (%i should be %i).\n",param_2,local_86c,0x16);
        ConMsg("Master server communication disabled.\n");
        ConMsg("Msg from %s: %s\n",pcVar12,uVar9);
        ConMsg("Must have smoothing selection active\n");
        ConMsg("Netchannel: failed reading message %s from %s.\n",local_1c,pcVar12);
        ConMsg("Netchannel: unknown net message (%i) from %s.\n",(uint)param_1 & 0xff,pcVar12);
        ConMsg("Only TacticalTV Master can record demos instantly.\n");
        ConMsg("Received wrong spawn count %i when at %i\n",param_2,
        ConMsg("Receiving complete: %i fragments, %i bytes\n",piVar6[0x49],piVar6[0x43]);
        ConMsg("Receiving failed: too many fragments %i/%i from %s\n",piVar6[0x4a],piVar6[0x49],
        ConMsg("Recording to %s...\n",local_11c);
        ConMsg("Redirecting spectator %s to TacticalTV relay %s\n",pcVar5);
        ConMsg("SV_StartSound: %s not precached (%d)\n",param_6,local_18);
        ConMsg("Sending complete: %i fragments, %i bytes.\n",*(undefined4 *)(iVar6 + 0x124),
        ConMsg("Server logging enabled.\n");
        ConMsg("SetConVar: No such cvar ( %s set to %s), skipping\n",iVar6,iVar1);
        ConMsg("TacticalTV already recording to %s.\n",uVar2);
        ConMsg("Token Table Save/Restore overflow!");
        ConMsg("View entity set to %i\n",iVar1);
        ConMsg("WARNING: TOO MANY MESSAGES IN TITLES.TXT, MAX IS %d\n");
        ConMsg("[%d:%d]\"%s\" = \"%s\"\n",uVar4,iVar3,uVar2);
        ConMsg("\"%s\" = \"%s\"\n",uVar2);
        ConMsg("addip:  IP filter list is full\n");
        ConMsg("console");
        ConMsg("d(%05d) %i : %s\n",iVar2,iVar3,uVar1);
        ConMsg("record %s: invalid path.\n",puVar5);
        ConMsg("removeid:  invalid slot %i\n",iVar1);
        ConMsg("udp");
        DAT_10607100 = (**(code **)(*piVar5 + 0xc))("Particles",1);
        DAT_10730cd4 = (*(code *)param_1)("VMaterialSystemStub001",0);
        DAT_10795730 = (uint *)FUN_1014fb90(this_00,(int *)"effects/spark2");
        DAT_107b4bc0 = (uint *)FUN_1014fb90(this,(int *)"effects/spark");
        DName::operator__((DName *)&local_18,"[]");
        DName::operator__((DName *)&local_50,"}\' ");
        DName::operator__((DName *)&local_c," ");
        DName::operator__((DName *)&local_c,"[]");
        DevMsg("            settings size = %d\n",uVar6);
        DevMsg("    Entity \'%d\' created the late load.\n",param_1[0xe]);
        DevMsg("    Reason for late load of \'%s\': Calling Host_GetSoundDuration().\n",param_1);
        DevMsg(" ");
        DevMsg(" C_PhysPropClientside::Initialize: VPhysicsInitNormal() failed for %s.\n",uVar4);
        DevMsg("%f Async I/O Read successful %s (%8.2f msec)\n",(int)DAT_10683898,
        DevMsg("%s moving with speed <= 0 (%s)\n",puVar7,pcVar4);
        DevMsg("%s",local_110);
        DevMsg("%s:\n");
        DevMsg("%sDisplay only the first %d samples.\n",iVar3,0x100);
        DevMsg("%s\n",local_94);
        DevMsg(", score %4.2f\n");
        DevMsg("AI node graph corrupt\n");
        DevMsg("Area #%d %s is blocked\n",piVar4[0x23],(int)puVar5 + 5,puVar6,pcVar12,dVar11,dVar10,
        DevMsg("Area #%d %s is blocked\n",piVar5[0x23],(int)puVar6 + 5,puVar10,pcVar11,dVar9,dVar8,
        DevMsg("Assigning random requistion to %s for tier %d\n");
        DevMsg("Awarding ammo (amount: %d) (bonus rate: %f)\n",iVar5);
        DevMsg("Bad sequence (%i out of %i max) in GetSequenceLinearMotion() for model \'%s\'!\n",
        DevMsg("CBaseClient::ProcessBaselineAck: invalid packet handle (%i)\n",iVar5);
        DevMsg("CBasePlayerControllable - No Free Slots\n");
        DevMsg("CDemoFile::WriteConsoleCommand: command too long (>1024).\n");
        DevMsg("CFuncStageBlocker::Spawn()=>NOT ENABLED STAGE1, REMOVING\n");
        DevMsg("CFuncStageBlocker::Spawn()=>NOT ENABLED STAGE2, REMOVING\n");
        DevMsg("C_PhysPropClientside::Initialize: PhysModelParseSolid failed for entity %s.\n",uVar4
        DevMsg("Can\'t create %s.  Bad Position!\n",puVar3);
        DevMsg("Can\'t create wheel %i. car body is not initialized\n",local_14);
        DevMsg("Cannot execute script because scripting is disabled (-scripting)\n");
        DevMsg("Changing To Next Level..\n");
        DevMsg("Creating state %s on statepanel %s\n",pbVar7,uVar5);
        DevMsg("DSP: Warning, clamping out of range parameter.\n");
        DevMsg("DSP: Warning, failed to allocate delay for diffusor.\n");
        DevMsg("DSP: Warning, failed to allocate delay for reverb.\n");
        DevMsg("DSP: Warning, failed to allocate delay line.\n");
        DevMsg("Demo playback finished ( %.1f seconds, %i render frames, %.2f fps).\n",
        DevMsg("Dynamic Link Error: (%s) unable to form between nodes %d and %d\n");
        DevMsg("ERROR: Climb Node %i has no way off\n",*param_2);
        DevMsg("ERROR: LoadSchd (%s): (%s) Malformed AI Schedule.  Expecting \'Tasks\' keyword.\n",
        DevMsg("ERROR: Undefined ammo type!\n");
        DevMsg("ERROR: \"player\" is no longer used, use \"!player\" in vcd instead!\n");
        DevMsg("ERROR: \"self\" is no longer used, use \"!self\" in vcd instead!\n");
        DevMsg("Entity %s not found, and couldn\'t create!\n",puVar3);
        DevMsg("Error! sentence too long!\n");
        DevMsg("Error: MixGroup %s, in SoundMixer %s, cannot be resolved!\n");
        DevMsg("Failed to create PropBreakable: would exceed MAX_EDICTS\n");
        DevMsg("Found %s, but can\'t play!\n",puVar7);
        DevMsg("GetUserSetting: cvar \'%s\' unknown.\n",param_1);
        DevMsg("In level transition: %s %s\n",&DAT_10675e74,&DAT_10675e94);
        DevMsg("Killer: %i (%i)\n",puVar5,uVar4);
        DevMsg("Loading brush, compacting heap...\n");
        DevMsg("Loading map: %s\n");
        DevMsg("Loading map: BeginLoadingUpdates...\n");
        DevMsg("Loading map: Map_LoadModel...\n");
        DevMsg("MaintainActivity %s : %s:%s -> %s:%s\n",puVar7,pcVar6,pcVar5,pcVar4,pcVar3);
        DevMsg("No client menu currently matches %s\n",param_1);
        DevMsg("No valid positions in history for BacktrackPlayer client ( %d )\n",iVar15);
        DevMsg("Player Model Short name: %s\n",uVar6);
        DevMsg("ProcessListenEvents: game event %i not found.\n",uVar3);
        DevMsg("Reservation request from %s accepted: server reserved with reservation cookie 0x%llx for %.1f seconds\n"
        DevMsg("RestoreEntityTo could not restore player position for client \"%d\" ( %.1f %.1f %.1f )\n"
        DevMsg("Scripted schedule %s specified an invalid enemy %s\n",puVar5,puVar6);
        DevMsg("SendFile: %s (ID %i)\n",param_1,param_2);
        DevMsg("Set primary sound buffer format: yes\n");
        DevMsg("USING DEFAULT WEAPON FILTER: %i\n",DAT_105e137c);
        DevMsg("USING DEFAULT WEAPON FILTER: %i\n",DAT_106c4234);
        DevMsg("Unreliable TE %s queued\n",*(undefined4 *)(param_4 + 8));
        DevMsg("VIP Killed\n");
        DevMsg("Victim: %i (%i)\n",local_c,uVar4);
        DevMsg("Warning: %s(%s) appears to have wrong nav type in CAI_Navigator::MoveGround()\n",
        DevMsg("Warning: COND_NOT_FACING_ATTACK set but FInAimCone is true\n");
        DevMsg("[%s] NOW ON ELEVATOR\n","Client");
        DevMsg("[%s] NOW ON ELEVATOR\n","Server");
        DevMsg("[%s] Weapon will switch after: %f\n","Client",(double)fVar6);
        DevMsg("[%s] Weapon will switch after: %f\n","Server",(double)param_1);
        DevMsg("[CARDEBUG] VEHICLEUPDATE::VELOCITY: [%s]\n",(int)puVar3 + 5,puVar10,pcVar11,dVar8,
        DevMsg("[FixAPI][Inventory] Checking if user %d owns dlc %d\n",uVar5);
        DevMsg("[FixAPI][Inventory] User %d %s own dlc %d\n",uVar5);
        DevMsg("[RULES] ** %s TEAMPLAYER: %s\n");
        DevMsg("[RULES] FINAL FFA SPAWN POSITION IS: %s\n",(int)puVar8 + 5,puVar6,pcVar12,dVar11,
        DevMsg("[RULES] INCREASING STAGE\n");
        DevMsg("[RULES] MatchBonus: %s played at least %i rounds (%i actual)\n",uVar1);
        DevMsg("[RULES] RS_E_ROUND_PRESTART::All stages played, swapping teams and scores\n");
        DevMsg("[RULES] THE NEXT ROUND IS THE FINAL ROUND (%i rounds played out of total: %i)\n",
        DevMsg("[RULES] THIS IS THE FIRST ROUND SIR!\n");
        DevMsg("[RULES] WE SHOULD BE SWAPPING TEAMS AND STARTING OVER BECAUSE: %i (%i) >= %i\n",
        DevMsg("[RULES] game has been running for %f seconds since last client connect [(Now: %f)(Last:%f)] , clearing wait list now.\n"
        DevMsg("[Sound DSP] Dsp %d processed. Cross-fading presets from %d to %d.\n",param_1,
        DevMsg("[Sound DSP] For Dsp %d, %s changed presets from %d to %d. Have to wait end of cross-fading.\n"
        DevMsg("\n");
        DevMsg("\tVOL: %f\n\tLVL: %f\n\tDSP: %f\n\tMUTE: %f\n\tSOLO: %f\n\n",(double)fVar1,
        DevMsg("adding glow to entity: %i\n",iVar4);
        DevMsg("found slot new slotnum :%d: val :%d:\n",uVar4,iVar18);
        DevMsg("no texture defined for %s! not using script!\n",param_1);
        DevMsg("reqItem is ITEM_NONE, no valid requisition was found\n");
        DevMsg("there are no more players roped to us. we can fly away now.\n");
        DevMsg(1,"Bogus pmove player movetype %i on (%i) 0=cl 1=sv\n",
        DevMsg(1,"Can\'t find goal entity %s\nCan\'t execute script %s\n",puVar6,pcVar3);
        DevMsg(1,"Draw Proxy: qh:%d org:<%d,%d,%d> (frame:%d)\n",*(undefined4 *)((int)this + 0x18),
        DevMsg(1,"Error: Bad soundscape!\n");
        DevMsg(1,"Pixels visible: %d (qh:%d) (frame:%d)\n",iVar4,*(undefined4 *)((int)this + 0x18),
        DevMsg(1,"Pixels visible: %d (qh:%d) Pixels possible: %d (qh:%d) (frame:%d)\n",iVar4,
        DevMsg(1,"ScheduledMoveToGoalEntity to goal entity %s failed\nCan\'t execute script %s\n",
        DevMsg(1,"Stopping: Channel:%2d %s\n",(int)local_308[iVar5],pcVar4);
        DevMsg(1,"Three keys down for a button \'%c\' \'%c\' \'%c\'!\n",DAT_10770f5c,DAT_10770f60,0)
        DevMsg(1,"Three keys down for a button \'%c\' \'%c\' \'%c\'!\n",iVar1,iVar2,param_2);
        DevMsg(2,"%s (%s): StopSchedule called on NPC %s.\n",puVar5,pcVar4,pcVar3);
        DevMsg(2,"Adding Spawn For Team { %s } now totaling { %d }\n",puVar3,uVar7);
        DevMsg(2,"Found %s that isn\'t in a squad\n",puVar3);
        DevMsg(2,"Had to force COND_NEW_ENEMY\n");
        DevMsg(2,"Lost enemy because we\'re flagged efficient\n");
        DevMsg(2,"MapEntity_ParseEntity::entity %s is not available for this stage\n",
        DevMsg(2,"MapEntity_ParseEntity::entity %s is only available in intel retrieval\n",
        DevMsg(2,"MapEntity_ParseEntity::entity %s is only available in mission scenarios\n",
        DevMsg(2,"PM  Got a velocity too low (%f) on %s\n",
        DevMsg(2,"Removing relationship for lost entity\n");
        DevMsg(2,"Unhandled GameEvent in ClientModeShared::FireGameEvent - %s\n",uVar3);
        DevMsg(2,"[%03d] Found: %s, firing (%s)\n",*(int *)(DAT_10646018 + 0x1c) % 1000,pcVar2,
        DevMsg(2,"logic_active_autosave (%s, %d) triggered\n",puVar3,iVar2);
        DevMsg(2,"scripted_schedule \"%s\" using NPC \"%s\"(%s)\n",pcVar2,puVar3,puVar4);
        DevWarning("    CClientState::SetSound() created the late loading.\n");
        DevWarning("Attempted to attach particle effect %s to an unknown attachment on entity %s\n",
        DevWarning("Bad decal index %d\n",fVar1);
        DevWarning("CBaseEntity::TakeDamage:  with inputInfo.GetDamageForce() == vec3_origin\n");
        DevWarning("CBaseEntity::TakeDamage:  with inputInfo.GetDamagePosition() == vec3_origin\n");
        DevWarning("CSoundPatch::ResumeSound: Lost EHAndle on restore - destroy the sound patch in your entity\'s StopLoopingSounds! (%s)\n"
        DevWarning("ERROR: Node %.0f %.0f %.0f, WC ID# %i, is either too low (fell through floor) or too high (>100 units above floor)\n"
        DevWarning("Invalid event field name and not an boolean \"%s\".\n");
        DevWarning("Invalid event field name and not an integer \"%s\".\n");
        DevWarning("Invalid scripted lesson action: %s\n",pcVar4);
        DevWarning("Priority level not set for lesson: %s\n",puVar3);
        DevWarning("VIP::RemoveFromAnyVehicle\n");
        DevWarning("data.m_pModelRenderable is NULL for %s\n",uVar5);
        DevWarning("ent_script_dump: Entity %s has no script scope!\n",puVar3);
        DevWarning("entity %s at %s has physics attachment to more than one entity with the name %s!!!\n"
        DevWarning("out of order tags : %s : (%s:%s:%s)\n");
        DevWarning(2,"%s can\'t assess %s\n",puVar6,puVar7);
        DevWarning(2,"(%s) Schedule (%s) Failed at %d!\n",puVar15,pcVar12,param_1[499]);
        DevWarning(2,"***Combat state with no enemy!\n");
        DevWarning(2,"NPC_STATE IS NONE!\n");
        DevWarning(2,"No suitable combat schedule!\n");
        ETWMark2I("Inner loop",DAT_104468c4,DAT_104468c0);
        Error("%s:  Invalid aspect ratio string \'%s\'\n","splitscreen_config.txt",pcVar5);
        Error("CBuildFactoryHelper:  Factory for \'%s\' already exists!!!!\n",param_1);
        Error("CL_AddPostDataUpdateCall: overflowed u.m_PostDataUpdateCalls");
        Error("CL_CallPostDataUpdates: missing ent %d",*puVar6);
        Error("CUtlLinkedList overflow! (exhausted memory allocator)\n");
        Error("CUtlMultiList overflow! (exhausted memory allocator)\n");
        Error("CUtlRBTree overflow!\n");
        Error("ClientDLL_InitRecvTableMgr: overflowed MAX_DATATABLES");
        Error("FIELD_EMBEDDED in flat list!!!");
        Error("Failed to allocate minimum memory requirement for game (%d MB)\n",0x30);
        Error("GetColumHeaderText( %d ) failed",iVar5);
        Error("Invalid property: %s/%s (array of datatables) [on prop %d of %d (%s)].",piVar1[2],
        Error("Not expecting FIELD_EMBEDDED in flattened list (%s)",puVar1[1]);
        Error("Pure server whitelist entry \'%s\' is a duplicate.\n",local_13c);
        Error("SV_BuildSendTablesArray: too many SendTables!");
        Error("Save buffer overflow! Report map and conditions!\n");
        Error("UpdatePlayerName with bogus slot %d\n",iVar4);
        Error("classname missing from entity!\n");
        Error((byte *)"CatchAndWriteContext_t::Invoke with bogus argc/argv");
        Error((byte *)"CatchAndWriteContext_t::Invoke with bogus void *ptr");
        FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Client Session has started for %d");
        FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Session Start Query returned no user");
        FUN_00420e80(&DAT_00447480,"#base is NULL ");
        FUN_00420e80(&DAT_00447480,"#include is NULL ");
        FUN_00420e80(&DAT_00447480,"trying to #include but filesystem is NULL ");
        FUN_00423270((void *)((int)param_1 + 0x40),",{");
        FUN_00429488((wchar_t *)puVar1[2],(int)L"%lld");
        FUN_10019f40("-- Profile scopes sorted by average time (including children) --",in_XMM0_Qa,
        FUN_10019f40("-- Profile scopes sorted by average time (without children) --",in_XMM0_Qa,
        FUN_10019f40("-- Profile scopes sorted by peak --",in_XMM0_Qa,pcVar4,iVar5);
        FUN_10019f40("-- Profile scopes sorted by peak over average (including children) --",
        FUN_10019f40("-- Profile scopes sorted by time (including children) --",in_XMM0_Qa,pcVar4,
        FUN_10019f40("-- Profile scopes sorted by time (without children) --",in_XMM0_Qa,pcVar4,
        FUN_10021180(&local_120,(byte *)"mass %.1f");
        FUN_10021180(local_114,(byte *)"[Nav] %s");
        FUN_10021180(local_180,(byte *)"(%f, %f, %f)");
        FUN_10021180(local_180,(byte *)"[Nav] %s");
        FUN_10021180(local_28c,(byte *)"(%f, %f, %f)");
        FUN_10021180(local_48c,(byte *)"[Nav] %s");
        FUN_1002158b(local_18,(byte *)"%8.4f / %8.4f:  %s\n");
        FUN_1002158b(param_2,(byte *)"Pool %3i: (%5u-byte) not used\n");
        FUN_10031640(&local_2a0,(byte *)"occlusion_records.%s.%04d.ocr");
        FUN_10034f18("timestamped.log");
        FUN_1003d6c0("FoundChannel",local_150,puVar8,"from ConVar snd_find_channel.");
        FUN_1003ef70(&local_1c0,(byte *)"%s.%s ");
        FUN_1003ff90(piVar2,(int)"Stopping scripted schedule");
        FUN_1005bfa0((byte *)"%8.4f : %30s : %5.3f : %4.2f\n");
        FUN_10076710(this,"RestoreOriginalEntityState",0xffffffff,2);
        FUN_10076820(piVar4,"StorePredictionResults",param_2,2);
        FUN_10099c00((int *)local_24,piVar5,uVar7,local_10,local_8,local_358,"simpleworldmodel",0,
        FUN_100a9cb0(param_1,iVar3 + 1,"LOCKED.",0,0xff,0xff,0xff,0xff);
        FUN_100aeb90(param_1,"select");
        FUN_100aeb90(param_1,"spline angles");
        FUN_100aeb90(param_1,"spline origin");
        FUN_100aeb90(this,"lookat points");
        FUN_100aec30(param_1,"select");
        FUN_100aec30(param_1,"spline angles");
        FUN_100aec30(param_1,"spline origin");
        FUN_100aec30(this,"lookat points");
        FUN_100d0610(&DAT_105a0e40,(int *)this,"EnableRefire",(float)fVar2 + 0.001,piVar3,piVar4,
        FUN_100d0610(&DAT_105a0e40,(int *)this,"EnableRefire",(float)param_1 + 0.001,(int *)this,
        FUN_100d0790(&DAT_105a0e40,"game_player_manager","OnPlayerJoin",0.0,fStack20,local_10,-NAN,
        FUN_100dae40(3,(byte *)"(%d) Viewer area: %d");
        FUN_100dae40(3,(byte *)"(%d), Viewer area: (solid space)");
        FUN_100daf30(&local_1c,(byte *)"%50s%15d%15d%15d");
        FUN_100daf30((int *)&local_30,(byte *)"%s %3i:  %s(vpanel%d)(ctx%d)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)" bool (%s)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)" color (%i %i %i %i)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)" float (%f)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)" integer (%i)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)" short (%i)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)" string (%s)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)" vector (%f %f %f)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)"[%i] bool (%s)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)"[%i] color (%i %i %i %i)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)"[%i] float (%f)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)"[%i] integer (%i)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)"[%i] short (%i)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)"[%i] string (%s)\n");
        FUN_1011eaf0(this,param_1,param_2,(byte *)"[%i] vector (%f %f %f)\n");
        FUN_10122600(this,"models/germangibs.mdl",0x41c80000);
        FUN_10137bb0(&local_10,(byte *)"origin",local_201c);
        FUN_1013aba0(&local_10,(byte *)"InitialState",(char *)local_85c);
        FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
        FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_85c);
        FUN_1013aba0(&local_10,(byte *)"pradius",(char *)local_858);
        FUN_1013aba0(&local_10,(byte *)"pradius",(char *)local_85c);
        FUN_1013aba0(&local_10,(byte *)"rescue_type",(char *)local_85c);
        FUN_1013aba0(&local_10,(byte *)"wander_type",(char *)local_85c);
        FUN_1013aba0(local_1078,(byte *)"targetname",local_1074);
        FUN_10142270(param_1,(int)param_4,(byte *)"delta [%s]");
        FUN_10142270(param_1,(int)param_4,(byte *)"enter [%s]");
        FUN_10142270(param_1,(int)param_4,(byte *)"leave [%s]");
        FUN_10142830((int)"env_sparks_omni",*puVar5,*(undefined4 *)(puVar5 + 1),
        FUN_10146100((int)"blood_spurt",*puVar3,*(float *)(puVar3 + 1) + 32.0,0x43870000,0,
        FUN_10146100((int)"impact_fx_clothing",*puVar1,param_1[5],local_ac,local_a4,(int *)0x0,
        FUN_10146100((int)"impact_fx_cosmetics",*puVar1,*(undefined4 *)(puVar1 + 1),local_18,
        FUN_10146100((int)"impact_fx_eyeglasses",*puVar1,*(undefined4 *)(puVar1 + 1),local_18,
        FUN_10146100((int)"impact_fx_stone",CONCAT44(fStack12,local_10),local_8,local_1c,local_14,
        FUN_10146100((int)"impact_fx_watches",*puVar1,*(undefined4 *)(puVar1 + 1),local_18,local_10,
        FUN_10146100((int)"impact_fx_wood",CONCAT44(fStack12,local_10),local_8,local_1c,local_14,
        FUN_10146100((int)"smoke_muzzle_pistol",local_20,local_18,local_2c,local_24,(int *)0x0,
        FUN_10146160((int)"777_engine_explode",5,piVar1,uVar5,cVar18,iVar3,uVar16,cVar11);
        FUN_10146160((int)"777_engine_flameout",5,piVar1,uVar5,cVar18,iVar3,uVar16,cVar11);
        FUN_10146160((int)"777_engine_flameout_sparks",5,piVar1,uVar5,cVar13,iVar6,pcVar17,cVar12);
        FUN_10146160((int)"777_engine_flameout_sparks",5,piVar1,uVar5,cVar18,iVar3,uVar16,cVar11);
        FUN_10146160((int)"burning_character_screen",2,param_1,0xffffffff,'\0',-1,0,'\0');
        FUN_10146160((int)"large_metal_gib_trail",1,piVar2,0xffffffff,'\0',-1,0,'\0');
        FUN_10146160((int)"muffler_smoke",5,this,uVar7,cVar3,iVar4,uVar14,cVar15);
        FUN_10146160((int)"muzzleflash-V",5,piVar2,local_8,'\0',-1,0,'\0');
        FUN_10146160((int)"muzzleflash-X",5,piVar2,local_8,'\0',-1,0,'\0');
        FUN_10146160((int)"muzzleflash-Y",5,piVar2,local_8,'\0',-1,0,'\0');
        FUN_10146160((int)"muzzleflash-pistol",5,local_10,local_c,'\0',-1,0,'\0');
        FUN_10146160((int)"muzzleflash-pistol",5,piVar2,local_8,'\0',-1,0,'\0');
        FUN_10146160((int)"muzzleflash-shotgun",5,piVar2,local_8,'\0',-1,0,'\0');
        FUN_10146160((int)"police_light_blue",5,piVar1,iVar7,'\0',-1,0,'\0');
        FUN_10146160((int)"refuel_truck_smokescreen",5,piVar1,iVar7,'\0',-1,0,'\0');
        FUN_10146160((int)"weapon_muzzle_smoke",5,piVar2,uVar3,cVar5,iVar6,uVar7,cVar8);
        FUN_10146330(piVar1,(int)"777_left_engine_heatwave");
        FUN_10146330(piVar1,(int)"777_right_engine_heatwave");
        FUN_10146910((void *)(*(int *)((int)this + 0x290) + 0x4b0),(undefined4 *)"death_bloodspray",
        FUN_10146910((void *)(uVar1 + 0x4b0),(undefined4 *)"smouldering_character",1,0xffffffff,
        FUN_10146910((void *)(uVar4 + 0x4b0),(undefined4 *)"smouldering_character",1,0xffffffff,
        FUN_1014a8a0(this,(byte *)"Banid: \"<><%s><>\" %s \"%s\" by \"%s\"\n");
        FUN_1014f730(puVar4,"snowfall");
        FUN_1014f730(puVar5,"FX_ElectricSpark 3");
        FUN_10155b90((int)this,(byte *)"Checking response.");
        FUN_1016a590((int)this,(int)param_1,(byte *)"EHandle (0x%p->%s)");
        FUN_1016a590((int)this,(int)param_1,(byte *)"integer (%i->%s)");
        FUN_1017bb60('\x01',(byte *)"Connection failed after %i retries.\n");
        FUN_1017bb60('\x01',(byte *)"Couldn\'t CRC client side dll %s.\n");
        FUN_1017bb60('\x01',(byte *)"Your map [%s] differs from the server\'s.\n");
        FUN_1017f620(param_1,"Dog.Run_Gravel",0,0);
        FUN_1017f620(param_1,"Player.Breathing_Short",0,0);
        FUN_1017f620(pvVar2,"Vote.Created",0,0);
        FUN_1017f620(this_00,"Vote.Cast.No",0,0);
        FUN_1017f8a0(local_38,0.0,"fx.car_explode",local_18,0,0);
        FUN_1017f8a0(local_48,0.0,"Player.Roll_Water",&local_10,0,0);
        FUN_1017f8a0(local_94,0.0,"fx.tv_explode",param_3,0,0);
        FUN_1018c510(param_1,"__FinishSpawn",0);
        FUN_101a4780(piVar4,"cfg/config.cfg","cfg/config.cfg");
        FUN_101a5c10((byte *)"CL_ParsePacketEntities:  buffer read overflow\n");
        FUN_101a5c10((byte *)"CMapLoadHelper::Init, map %s has wrong identifier\n");
        FUN_101a5c10((byte *)"CMapLoadHelper::Init, unable to open %s\n");
        FUN_101a5c10((byte *)"Error parsing network data tables during demo playback.");
        FUN_101a5c10((byte *)"Error parsing string tables during demo playback.");
        FUN_101a5c10((byte *)"Index error writing string table baseline %s\n");
        FUN_101a5c10((byte *)"Invalid download file table.");
        FUN_101a5c10((byte *)"Invalid occlusion lump version!\n");
        FUN_101a5c10((byte *)"Mod_LoadFaces: bad texinfo number");
        FUN_101a5c10((byte *)"Mod_LoadMarksurfaces: bad surface number");
        FUN_101a5c10((byte *)"Overflow error writing string table baseline %s\n");
        FUN_101a5c10((byte *)"Server sent bogus string index %i for table %s\n");
        FUN_101a5c10((byte *)"Unabled to verify map %s\n");
        FUN_101a78e0(iVar2,"config.cfg",'\0');
        FUN_101ac870((void *)param_1[0x59e],"cable/rope.vmt");
        FUN_101bdfa0((byte *)"%s : %8.2f: MOVETO canceled but actor %s not at goal\n");
        FUN_101bdfa0((byte *)"%s : Automatically resuming playback\n");
        FUN_101bdfa0((byte *)"%s : Unknown action %i, automatically resuming playback\n");
        FUN_101bdfa0((byte *)"Pausing actor %s scripted scene: %s\n");
        FUN_101c5e60((void *)(iVar8 + DAT_106a4954),1,param_2,(int)"net_Disconnect",(int)local_404);
        FUN_101c7240(local_14,"EDIT_CONNECT.Added",0,0);
        FUN_101c7240(param_1,"BaseCombatWeapon.WeaponDrop",0,0);
        FUN_101c7240(param_1,"CarDoor_Open",0,0);
        FUN_101c7240(param_1,"Pistol.Pickup",0,0);
        FUN_101c7240(param_1,"Player.DrownStart",0,0);
        FUN_101c7240(param_1,"Player.Wade",0,0);
        FUN_101c7240(param_1,"Rifle.Pickup",0,0);
        FUN_101c7240(pvVar1,"EDIT_END_AREA.Creating",0,0);
        FUN_101c7240(this,"AI_BaseNPC.SwishSound",0,0);
        FUN_101c7240(this,"Bot.EditSwitchOff",0,0);
        FUN_101c7240(this,"Bot.EditSwitchOn",0,0);
        FUN_101c7240(this,"CarDoor_Close",0,0);
        FUN_101c7240(this,"EDIT_DELETE",0,0);
        FUN_101c7240(this,"EDIT_DISCONNECT.MarkedArea",0,0);
        FUN_101c7240(this,"EDIT_MARK_UNNAMED.Enable",0,0);
        FUN_101c7240(this,"EDIT_MARK_UNNAMED.NoMarkedArea",0,0);
        FUN_101c7240(this,"EDIT_SELECT_CORNER.MarkedArea",0,0);
        FUN_101c7240(this,"Malinois.Bark",0,0);
        FUN_101c7240(this,"Malinois.Breathe",0,0);
        FUN_101c7240(this,"Malinois.BreatheGrowl",0,0);
        FUN_101c7240(this,"Player.CarJack",0,0);
        FUN_101c7240(this,"Trunk_Open_SpareTire",0,0);
        FUN_101c7240(this_00,"EDIT.ToggleAttribute",0,0);
        FUN_101c7240(this_00,"EDIT_MARK.Disable",0,0);
        FUN_101c7240(this_00,"EDIT_MARK.Enable",0,0);
        FUN_101c7240(this_00,"EDIT_MOVE_CORNER.MarkedArea",0,0);
        FUN_101c7240(this_00,"EDIT_MOVE_CORNER.NoMarkedArea",0,0);
        FUN_101c7240(this_00,"Honda_impact_heavy",0,0);
        FUN_101c7240(this_00,"Honda_impact_medium",0,0);
        FUN_101c73c0(local_28,fVar4,"Player.PickupWeapon",0,0,0);
        FUN_101f1360(&DAT_10798800,(int)"joy_legacy");
        FUN_101f1360(&local_14,(int)"con_enable");
        FUN_101f1360(&local_14,(int)"m_customaccel");
        FUN_101f1360(&local_14,(int)"m_rawinput");
        FUN_101f1360(&local_24,(int)"cl_localtracers");
        FUN_101f1360(&local_24,(int)"gameinstructor_enable");
        FUN_101f1360(&local_24,(int)"ti_alwaysdrawminimap");
        FUN_101f1360(&local_24,(int)"ti_hitoutput_type");
        FUN_101f1360(&local_24,(int)"ti_show_spawn_intro");
        FUN_101f1360(local_14,(int)"cl_steam_overlay_position");
        FUN_101f1360(local_14,(int)"option_duck_method");
        FUN_101f1360(local_14,(int)"ss_splitmode");
        FUN_101f3700((int)param_1,3,"#ItemRequisitioned",pcVar9,pcVar14,pcVar16,pcVar18);
        FUN_101f3700((int)piVar2,2,"Usage:\n   ent_dump <entity name/index/class>\n",(char *)0x0,
        FUN_101f3700((int)piVar3,3,"Couldn\'t target a bot.\n",(char *)0x0,(char *)0x0,(char *)0x0,
        FUN_101f3700((int)piVar3,3,"Target is not a bot, hostage or NPC Car!\n",(char *)0x0,
        FUN_101f3700((int)piVar4,2,"setpos into world, use noclip to unstick yourself!\n",
        FUN_101f3700((int)this,3,"No Grenades\n",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
        FUN_101f54b0((byte *)"[Debug] Player: \'%s\' will spawn as %s.\n");
        FUN_101f9c90(extraout_ECX,extraout_EDX,local_814,(undefined (*) [16])"protocol",pauVar7,
        FUN_101f9c90(extraout_ECX_00,extraout_EDX_00,local_814,(undefined (*) [16])"challenge",
        FUN_101f9c90(extraout_ECX_05,extraout_EDX_05,local_814,(undefined (*) [16])"gamedir",
        FUN_101f9c90(extraout_ECX_07,extraout_EDX_06,local_814,(undefined (*) [16])"password",
        FUN_101f9c90(extraout_ECX_09,extraout_EDX_10,local_814,(undefined (*) [16])"gametype",
        FUN_101f9c90(pcVar13,extraout_EDX_09,local_814,(undefined (*) [16])"region",
        FUN_101fbfb0((byte *)"Bad surface extents on texture %s");
        FUN_101fbfb0((byte *)"CM_BoxVisible:  cluster %i, offset %i out of bounds %i\n");
        FUN_101fbfb0((byte *)"CM_Vis:  buffer not big enough (%i but need %i)\n");
        FUN_101fbfb0((byte *)"Could not get client interface from library %s");
        FUN_101fbfb0((byte *)"Inline model %i has bad firstnode");
        FUN_101fbfb0((byte *)"serverGameDLL->DLLInit() failed.\n");
        FUN_101fbfb0((byte *)"tmessage::TextMessageParse : messageCount>=MAX_MESSAGES");
        FUN_101fca20("Software\\Valve\\Steam","LastGameNameUsed",*(BYTE **)(local_8 + 0x24));
        FUN_10208ad0(0,"Connection Problems");
        FUN_10209a60("#GameUI_RetryingConnectionToServer",0,(void *)0x0);
        FUN_10221f90(*(void **)((int)this + 0x858),(byte *)"#L4D360UI_Disabled");
        FUN_10221f90(*(void **)((int)this + 0x868),(byte *)"#L4D360UI_Disabled");
        FUN_10221f90(this,(byte *)"#GameUI_Anisotropic16X");
        FUN_10221f90(this,(byte *)"#GameUI_Anisotropic2X");
        FUN_10221f90(this,(byte *)"#GameUI_Anisotropic4X");
        FUN_10221f90(this,(byte *)"#GameUI_Anisotropic8X");
        FUN_10221f90(this,(byte *)"#GameUI_Bilinear");
        FUN_10221f90(this,(byte *)"#GameUI_Trilinear");
        FUN_1022ddf0(&local_7c,pvVar6,0,(uint *)"North");
        FUN_1022ddf0(&local_7c,pvVar6,2,(uint *)"South");
        FUN_10242cf0(puVar8,"Directional");
        FUN_10242cf0(puVar8,"Point");
        FUN_10242cf0(puVar8,"Spot");
        FUN_10264260(local_114,".cfg",0x104);
        FUN_10265920(&DAT_1063b880,0x3f,(byte *)"STEAM_%u:%u:%u");
        FUN_10265920(&DAT_1066b010,0x200,(byte *)"%s/%i");
        FUN_10265920(&DAT_106ab2a0,0x805,(byte *)"%c\n%s\n");
        FUN_10265920(&local_224,0xff,(byte *)"materials/%s.vtf");
        FUN_10265920(&local_84,0x40,(byte *)" compression=%5u [%5.2f %%]");
        FUN_10265920((char *)local_110,0x104,(byte *)"maps/%s.bsp");
        FUN_10265920((char *)local_93c,0x400,(byte *)"%s%s%s");
        FUN_10265920((char *)local_a4,0x80,(byte *)"%cconnect0x%08X");
        FUN_10265920(local_104,0x100,(byte *)"(missing), ");
        FUN_10265920(local_104,0x100,(byte *)"asw_build_map %s connecting\n");
        FUN_10265920(local_104,0x80,(byte *)"%12.12s %21.21s s(%llx)");
        FUN_10265920(local_104,0x80,(byte *)"%12.12s %21.21s");
        FUN_10265920(local_108,0x104,(byte *)"%s \"%s\"");
        FUN_10265920(local_108,0x104,(byte *)"materials\\%s");
        FUN_10265920(local_114,0x104,(byte *)"//%s/cfg/%s");
        FUN_10265920(local_114,0x104,(byte *)"T:/cfg/%s");
        FUN_10265920(local_11c,0x104,(byte *)"%s.dem");
        FUN_10265920(local_11c,0x104,(byte *)"%s_%i.dem");
        FUN_10265920(local_12c,0x80,(byte *)"%s: %1.2f (%1.2f)");
        FUN_10265920(local_164,0x100,(byte *)"\nNAME: [%s] [%llu]\n");
        FUN_10265920(local_204,0x100,(byte *)"(missing)");
        FUN_10265920(local_20c,0x104,(byte *)"//%s/%s%s%02d.%s");
        FUN_10265920(local_228,0x100,(byte *)"bind \"%s\" \"%s\"");
        FUN_10265920(local_22c,0x104,(byte *)"//MOD/maps/%s_exclude.lst");
        FUN_10265920(local_30,0x20,(byte *)"%s:%u");
        FUN_10265920(local_3e4,0x200,(byte *)"%s/BugId/%s");
        FUN_10265920(local_418,0x400,(byte *)"time_label_%d");
        FUN_10265920(local_434,0x200,(byte *)"sound\\%s");
        FUN_10265920(local_440,0x104,(byte *)"resource/overviews/%s.txt");
        FUN_10265920(local_6c,100,(byte *)"Map \'%s\'");
        FUN_10265920(local_6c,100,(byte *)"Server \'%s\' Map \'%s\'");
        FUN_10265920(local_7c,0x60,(byte *)"maps/%s");
        FUN_10265920(local_90,0x80,(byte *)"%12.12s %21.21s s(%llx)");
        FUN_10265920(local_90,0x80,(byte *)"%12.12s %21.21s");
        FUN_10265920(local_9c,0x80,(byte *)"%d:%02d:%02d:%02d");
        FUN_10265920(param_4,0x40,(byte *)"%s %s");
        FUN_10265920(pcVar9,0x400,(byte *)"\\%s\\%s");
        FUN_10265b40((char *)(piVar9 + 0x8c),".tga",0x104,0xffffffff);
        FUN_10265b40((char *)local_170,".wav",0x100,0xffffffff);
        FUN_10265b40((char *)local_504," ",0x400,0xffffffff);
        FUN_10265b40(local_114,"\\content",0x104,0xffffffff);
        FUN_10265b40(local_80c,"[",0x800,0xffffffff);
        FUN_10265b40(local_80c,"[ConsoleOnly]",0x800,0xffffffff);
        FUN_10265b40(local_80c,"[DoNotEcho]",0x800,0xffffffff);
        FUN_10265b40(local_80c,"]",0x800,0xffffffff);
        FUN_10265b40(local_9c,",",0x80,0xffffffff);
        FUN_10265b40(param_1,",",param_2,0xffffffff);
        FUN_10265b40(param_1,"OSR2 ",param_2,0xffffffff);
        FUN_10265b40(param_1,"SE ",param_2,0xffffffff);
        FUN_10265bf0((char *)(param_1 + 0x42),(int)"HL2DEMO",8);
        FUN_10265f30((int)local_14c,"1");
        FUN_10265f30((int)local_250,"tv_relay");
        FUN_10265f30((int)local_8,"w");
        FUN_102667c0(&DAT_105f8b34,"sky_renderclouds");
        FUN_102667c0(&DAT_105f9e98,"r_staticlight_streams");
        FUN_102667c0(&DAT_105f9eb0,"r_staticlight_streams");
        FUN_102667c0(&DAT_106a4780,"r_staticlight_mode");
        FUN_1026b080(&DAT_1041bbf8,"#base is NULL ");
        FUN_1026b080(&DAT_1041bbf8,"#include is NULL ");
        FUN_1026b080(&DAT_1041bbf8,"trying to #include but filesystem is NULL ");
        FUN_1026b280(local_20,(uint *)"PanelPtr",uVar2);
        FUN_1026b280(local_8,(uint *)"image",(uint)(cVar3 != '\0'));
        FUN_1026b280(param_1,(uint *)"button",uVar2);
        FUN_1026b280(pvVar6,(uint *)"screenx",local_1c);
        FUN_1026b280(pvVar6,(uint *)"screeny",local_18);
        FUN_1026b280(this_00,(uint *)"image",(uint)(param_1._3_1_ == '\0'));
        FUN_1026b280(this_00,(uint *)"rotate",0);
        FUN_1026b2f0(puVar5,(uint *)"panel",0);
        FUN_1026b2f0(this_03,(uint *)"rawpkt",(uint)this_01);
        FUN_1026b310(pvVar6,(uint *)"command",local_138);
        FUN_1026b310(this_00,(uint *)"actionstart",pcVar3);
        FUN_1026b310(this_00,(uint *)"material",(char *)((int)puVar7 + 5));
        FUN_1026b310(this_00,(uint *)"pos_x",(char *)((int)puVar7 + 5));
        FUN_1026b310(this_00,(uint *)"pos_y",(char *)((int)puVar7 + 5));
        FUN_1026b310(this_00,(uint *)"scale",(char *)((int)puVar7 + 5));
        FUN_1026b310(this_00,(uint *)&DAT_1033d6a8,"1.0");
        FUN_1026d290(local_34,(byte *)"\"%s\"\r\n");
        FUN_1026d290(local_38,(byte *)"%s %i, ");
        FUN_1026d290(local_38,(byte *)"cmd%d +jlook\n");
        FUN_1026d290(local_40,(byte *)"%64.64s : %8d bits (%8.3f bytes)\n");
        FUN_1026d290(local_40,(byte *)"mat_reloadmaterial \"");
        FUN_1026d290(local_90,(byte *)"%s:  %s\n");
        FUN_1026d290(param_1,(byte *)"\"%s\" \"");
        FUN_1026d290(param_1,(byte *)"\"%s\"\n{\n");
        FUN_1026d290(param_1,(byte *)"bind \"%s\" \"%s\"\n");
        FUN_1026ebe0(param_1 + 0x1bf,"");
        FUN_10270a90(local_50,"CL_CopyNewEntity->newBuf",local_4050,0x4000,-1);
        FUN_10270b20(param_1 + 0x194,"DemoFileWriteBuffer");
        FUN_10284e30(local_2c,"HangingClothes.BulletImpact");
        FUN_1029c040(puVar3,(int)this,"CommandButton",pcVar4,0,(char *)0x0,0);
        FUN_102dcae0(this_00,"g");
        FUN_102f2eda(&local_10c,0x100,(byte *)"#var_%s");
        FUN_102f7a84((wchar_t *)puVar1[2],(int)L"%lld");
        FUN_1030fc90(*(void **)(param_1 + 0x238),'\x01',(int)"#TI_ItemExpired");
        FUN_10310980(*(void **)(param_1 + 0x238),'\x01',(int)"Expire:");
        FUN_103444b0((byte *)"CarBreakWindows",&local_84);
        FUN_103444b0((byte *)"Impact",(uint *)&local_88);
        FUN_103444b0((byte *)"bloodimpact",&local_6c);
        FUN_10362c70((int)"ServerPhysPropToClientPhysPropCallBack",&local_e0);
        FUN_10362c70((int)"bloodimpact",&local_6c);
        FUN_10362d80((int)"EmitEngineSmoke",local_134);
        FUN_10368590(&local_28,(int)"ProgressBar");
        FUN_10368590(local_28,(int)"Announcer");
        FUN_10368590(local_30,(int)"ProgressBar");
        FUN_10368590(local_30,(int)"UpdateBonuses");
        FUN_10368590(local_34,(int)"VoiceSubtitle");
        FUN_10368590(local_38,(int)"HR_RemindPlayerOfObjective");
        FUN_10368590(local_40,(int)"GetRequisitionItem");
        FUN_10368590(local_50,(int)"DisplayObjectiveText");
        FUN_103963c0((int)this,(byte *)"response entry \'%s\' with unknown command \'%s\'\n");
        FUN_10399150((char *)&local_110,0x50,(byte *)"Ladder #%d (Team %s)\n");
        FUN_10399150((char *)&local_110,0x50,(byte *)"Ladder #%d\n");
        FUN_10399150(local_124,0x100,(byte *)"(%0.2f) output: (%s,%s) -> (%s,%s)(%s)\n");
        FUN_10399150(local_124,0x100,(byte *)"(%0.2f) output: (%s,%s) -> (%s,%s,%.1f)(%s)\n");
        FUN_10399150(local_15c,0x40,(byte *)"models/vehicles/cars/truck-6_destroyed_p%d.mdl");
        FUN_10399150(local_160,0x50,(byte *)"Area #%d %s %s\n");
        FUN_10399150(local_204,0x200,(byte *)"Branch (%s): %s");
        FUN_10399150(local_218,0x200,(byte *)"Context: %s:%s");
        FUN_10399150(local_21c,0x200,(byte *)"Cond: %s\n");
        FUN_10399150(local_21c,0x200,(byte *)"Task: %s (#%d), ");
        FUN_10399150(local_224,0x200,(byte *)"Floor %s is at %f, triggered by %s");
        FUN_10399150(local_224,0x200,(byte *)"Occupant %d: %s");
        FUN_10399150(local_250,0x200,(byte *)"%s: Mass: %.2f kg / %.2f lb (%s)");
        FUN_10399150(local_28,0x20,(byte *)"Bot%02i");
        FUN_10399150(local_310,0x104,(byte *)"%s/%s");
        FUN_10399150(local_44,0x40,(byte *)"cd play %3d\n");
        FUN_10399150(local_58c,0x400,(byte *)"Activity %s");
        FUN_10399150(local_9c,0x80,(byte *)"%d:%02d:%02d:%02d");
        FUN_10399150(local_a44,0x400,(byte *)"vdisp_%04d");
        FUN_10399150(param_1,param_2,(byte *)"Picker %i/%s - ent %s model %s\n");
        FUN_10399150(param_2,0x40,(byte *)"nav_use_place %s");
        FUN_10399150(pcVar12,0x200,(byte *)"models/characters/%s.mdl");
        FUN_10399370(local_21c," (LEADER)",0x200,0xffffffff);
        FUN_10399370(param_1,",",param_2,0xffffffff);
        FUN_10399450(&DAT_1060b2b8,(int)"<<null entity>>",0x200);
        FUN_10399450(local_21c,(int)"Task: None",0x200);
        FUN_10399450(local_28,(int)"FCVAR_NEVER_AS_STRING",0x20);
        FUN_103996f0(**this,"");
        FUN_1039a0a0(&local_c,"sv_ubersky");
        FUN_1039fae0(&DAT_105e68f8,"#base is NULL ");
        FUN_1039fae0(&DAT_105e68f8,"#include is NULL ");
        FUN_1039fae0(&DAT_105e68f8,"trying to #include but filesystem is NULL ");
        FUN_1039fce0(param_1,(uint *)"button",uVar2);
        FUN_1039fce0(puVar3,(uint *)"winner",0);
        FUN_1039fce0(pvVar6,(uint *)"screenx",local_1c);
        FUN_1039fce0(pvVar6,(uint *)"screeny",local_18);
        FUN_1039fce0(this_01,(uint *)"winner",*(uint *)(*(int *)((int)this + 4) + 0xac));
        FUN_1039fd20(puVar3,(uint *)"primtext","#TI_Score_RoundDraw");
        FUN_1039fd20(puVar3,(uint *)"secondarytext",local_208);
        FUN_1039fd20(pvVar6,(uint *)"command",local_138);
        FUN_1039fd20(this_01,(uint *)"prim_0",pcVar4);
        FUN_1039fd20(this_01,(uint *)"primtext","#TI_Score_TeamElim");
        FUN_1039fd20(this_01,(uint *)"sec_0",pcVar4);
        FUN_1039fd20(this_01,(uint *)"sec_1",pcVar4);
        FUN_1039fd20(this_01,(uint *)"secondarytext","#TI_Score_HR_RescBonus");
        FUN_103a08e0(local_20,"cable/rope.vmt");
        FUN_103a45c0(param_1 + 0x14,"debug/particleerror","Other textures",1);
        FUN_103f0bb0(this_00,"g");
        FUN_103fd956(&stack0xffffe730,(int)"%20s%1s%d");
        FUN_103fd956(&stack0xffffe730,(int)"%27s%1s%d");
        FUN_103fd956((char *)local_18cc,(int)"%20s%1s%1s");
        FUN_103fd956((char *)param_2,(int)"%f %f %f");
        FUN_10400fd8((wchar_t *)puVar1[2],(int)L"%lld");
        FUN_1040108f(&local_10c,0x100,(byte *)"#var_%s");
        FUN_1042cc70((char *)abStack340,".vmt",0x104);
        FUN_1042cc70((char *)local_154,".vmt",0x104);
        FUN_1042d940((char *)abStack340,0x104,(byte *)"materials/vgui/logos/%s");
        FUN_1042d940((char *)abStack340,0x104,(byte *)"materials/vgui/logos/custom/%s");
        FUN_1042d940((char *)local_154,0x104,(byte *)"materials/vgui/logos/%s");
        FUN_1042d940((char *)local_154,0x104,(byte *)"materials/vgui/logos/custom/%s");
        FUN_1042d940((char *)local_224,0x104,(byte *)"%s_rendermode_%d");
        FUN_1042d940((char *)local_2c,0x20,(byte *)"SetDevice_%i");
        FUN_1042d940(local_104,0xff,(byte *)"%s %s\n");
        FUN_1042d940(local_110,0x100,(byte *)"Mouse parameter \'%s\' set to %i\n");
        FUN_1042d940(local_120,0x100,(byte *)"ps: %s");
        FUN_1042d940(local_12c,0x100,(byte *)"mat_setvideomode %i %i %i\n");
        FUN_1042d940(local_138,0x100,(byte *)"materials/vgui/%s.vmt");
        FUN_1042d940(local_13c,0x104,(byte *)"save/%s");
        FUN_1042d940(local_1fc,0x2a,(byte *)"prof_%s.csv");
        FUN_1042d940(local_244,0x100,(byte *)"previews/%s%s");
        FUN_1042d940(local_310,0x104,(byte *)"%s/%s");
        FUN_1042d940(local_368,0x200,(byte *)"downloads/%s.dat");
        FUN_1042d940(local_4c,0x40,(byte *)"Waypoint %d");
        FUN_1042d940(local_510,0x100,(byte *)"%-*s  %-*s  %*.2f  %*.1f/%-*d  %*.0f%% ");
        FUN_1042d940(local_5cc,0x200,(byte *)"downloads/%s.dat");
        FUN_1042d940(local_84,0x80,(byte *)"wp_setdata %d %d %d %d");
        FUN_1042d940(local_98,0x80,(byte *)"wp %d %d %d %d add %0.2f %0.2f %0.2f %d");
        FUN_1042d940(local_98,0x80,(byte *)"wp %d %d %d %d add %0.2f %0.2f %0.2f");
        FUN_1042d940(local_9c,0x80,(byte *)"%d:%02d:%02d:%02d");
        FUN_1042d940(local_a44,0x400,(byte *)"vdisp_%04d");
        FUN_1042d940(param_4,0x40,(byte *)"%s %s");
        FUN_1042d940(pcVar12,0x200,(byte *)"models/characters/%s.mdl");
        FUN_1042db60(local_108," ",0x100,0xffffffff);
        FUN_1042db60(local_a10,"\n",0x800,1);
        FUN_1042dc40((char *)(param_1 + 0x10),(int)"#TI_Unknown",0x80);
        FUN_1042dc40((char *)local_144,(int)"icon_enemy_spotted",0x104);
        FUN_1042dc40(param_1,(int)"icon_key_down",param_2);
        FUN_1042dc40(param_1,(int)"icon_key_left",param_2);
        FUN_1042dc40(param_1,(int)"icon_key_right",param_2);
        FUN_1042dc40(param_1,(int)"icon_key_up",param_2);
        FUN_1042dc40(param_1,(int)"icon_mouseLeft",param_2);
        FUN_1042dc40(param_1,(int)"icon_mouseRight",param_2);
        FUN_1042dc40(param_1,(int)"icon_mouseThree",param_2);
        FUN_1042dc40(param_1,(int)"icon_mouseWheel_down",param_2);
        FUN_1042dc40(param_1,(int)"icon_mouseWheel_up",param_2);
        FUN_1042df60((int)local_184,"ESC");
        FUN_1042df60(**this,"");
        FUN_1042e3d0(param_1 + 0x1bf,"");
        FUN_1042ee30(puVar6,(uint *)"DmeAlphaSineRampUpdater",1);
        FUN_1042ee30(puVar6,(uint *)"DmeAlphaSineUpdater",1);
        FUN_1042ee30(puVar6,(uint *)"DmeColorUpdater",1);
        FUN_1042ee30(puVar6,(uint *)"DmePositionVelocityDecayUpdater",1);
        FUN_1042ee30(puVar6,(uint *)"DmePositionVelocityUpdater",1);
        FUN_1042ee30(puVar6,(uint *)"DmeRollUpdater",1);
        FUN_1042ee30(puVar6,(uint *)"DmeSizeUpdater",1);
        FUN_10431760(&DAT_106facc8,"#base is NULL ");
        FUN_10431760(&DAT_106facc8,"#include is NULL ");
        FUN_10431760(&DAT_106facc8,"trying to #include but filesystem is NULL ");
        FUN_104318f0(local_20,(uint *)"color1",param_3);
        FUN_104318f0(local_20,(uint *)"color2",param_3);
        FUN_104318f0(puVar8,(uint *)"endColor",0xff000000);
        FUN_104318f0(puVar8,(uint *)"endColor",puVar6);
        FUN_104318f0(puVar8,(uint *)"startColor",param_1);
        FUN_10431930(puVar10,(uint *)"duration",0);
        FUN_10431930(puVar10,(uint *)"indexedBase",(uint)(local_c * 4.0));
        FUN_10431930(puVar10,(uint *)"indexedDelta",(uint)local_c);
        FUN_10431930(puVar10,(uint *)"linearOffsetX",(uint)(param_1 * 2.0));
        FUN_10431930(puVar10,(uint *)"maxRandomFactor",0x41100000);
        FUN_10431930(puVar10,(uint *)"maxRoll",0x43b40000);
        FUN_10431930(puVar10,(uint *)"maxRollSpeed",0);
        FUN_10431930(puVar10,(uint *)"minRandomFactor",0x40c00000);
        FUN_10431930(puVar10,(uint *)"minRoll",0);
        FUN_10431930(puVar10,(uint *)"minRollSpeed",0);
        FUN_10431930(puVar10,(uint *)"velocityX",0);
        FUN_10431930(puVar10,(uint *)"velocityY",0);
        FUN_10431930(puVar10,(uint *)"velocityZ",0);
        FUN_10431930(puVar3,(uint *)"PercentageCPUThrottledToLevel1",
        FUN_10431930(puVar3,(uint *)"PercentageCPUThrottledToLevel2",
        FUN_10431930(puVar5,(uint *)"attenuation",0x3f3bbbbc);
        FUN_10431930(puVar5,(uint *)"attenuationTme",0x3d088889);
        FUN_10431930(puVar5,(uint *)"duration",0xbf800000);
        FUN_10431930(puVar5,(uint *)"minRollSpeed",0x3f000000);
        FUN_10431930(puVar6,(uint *)"decaytime",0x3e99999a);
        FUN_10431930(puVar6,(uint *)"decayto",0x3f000000);
        FUN_10431930(puVar6,(uint *)"duration",0xbf800000);
        FUN_10431930(puVar6,(uint *)"maxEndSize",*(uint *)((int)this + 0x155c));
        FUN_10431930(puVar6,(uint *)"maxEndSize",*(uint *)((int)this + 0x1564));
        FUN_10431930(puVar6,(uint *)"maxStartSize",*(uint *)((int)this + 0x1558));
        FUN_10431930(puVar6,(uint *)"maxStartSize",*(uint *)((int)this + 0x1560));
        FUN_10431930(puVar6,(uint *)"minEndSize",*(uint *)((int)this + 0x155c));
        FUN_10431930(puVar6,(uint *)"minEndSize",*(uint *)((int)this + 0x1564));
        FUN_10431930(puVar6,(uint *)"minRollSpeed",0xbecccccd);
        FUN_10431930(puVar6,(uint *)"minRollSpeed",0xbf19999a);
        FUN_10431930(puVar6,(uint *)"minStartSize",*(uint *)((int)this + 0x1558));
        FUN_10431930(puVar6,(uint *)"minStartSize",*(uint *)((int)this + 0x1560));
        FUN_10431930(puVar6,(uint *)"randomDist",*(uint *)((int)this + 0x1560));
        FUN_10431930(puVar6,(uint *)"randomDist",*(uint *)((int)this + 0x1568));
        FUN_10431930(puVar6,(uint *)"startx",*puVar8);
        FUN_10431930(puVar6,(uint *)"starty",*(uint *)(iVar9 + 4));
        FUN_10431930(puVar6,(uint *)"startz",*(uint *)(iVar9 + 8));
        FUN_10431930(puVar6,(uint *)"velocityX",piVar1[0x24]);
        FUN_10431930(puVar6,(uint *)"velocityY",piVar1[0x25]);
        FUN_10431930(puVar6,(uint *)"velocityZ",piVar1[0x26]);
        FUN_10431930(puVar7,(uint *)"randomamount",0x3f000000);
        FUN_10431930(puVar8,(uint *)"attenuation",0x3f3bbbbc);
        FUN_10431930(puVar8,(uint *)"attenuationTme",0x3d088889);
        FUN_10431930(puVar8,(uint *)"maxAttachmentSpeed",*(uint *)((int)this + 0x155c));
        FUN_10431930(puVar8,(uint *)"maxLifetime",*(uint *)((int)this + 0x153c));
        FUN_10431930(puVar8,(uint *)"maxLifetime",*(uint *)((int)this + 0x1548));
        FUN_10431930(puVar8,(uint *)"maxRandomSpeed",*(uint *)((int)this + 0x1554));
        FUN_10431930(puVar8,(uint *)"maxRoll",0x43b40000);
        FUN_10431930(puVar8,(uint *)"maxRollSpeed",0x3f800000);
        FUN_10431930(puVar8,(uint *)"maxStartValueDelta",0);
        FUN_10431930(puVar8,(uint *)"maxStartValueDelta",0x3e4ccccd);
        FUN_10431930(puVar8,(uint *)"minAttachmentSpeed",*(uint *)((int)this + 0x1558));
        FUN_10431930(puVar8,(uint *)"minLifetime",*(uint *)((int)this + 0x153c));
        FUN_10431930(puVar8,(uint *)"minLifetime",*(uint *)((int)this + 0x1548));
        FUN_10431930(puVar8,(uint *)"minRandomSpeed",*(uint *)((int)this + 0x1550));
        FUN_10431930(puVar8,(uint *)"minRoll",0);
        FUN_10431930(puVar8,(uint *)"minRollSpeed",0x3f000000);
        FUN_10431930(puVar8,(uint *)"minRollSpeed",0xbf800000);
        FUN_10431930(puVar8,(uint *)"minStartValueDelta",0);
        FUN_10431930(puVar8,(uint *)"minStartValueDelta",0xbe4ccccd);
        FUN_10431930(this_00,(uint *)"maxLifetime",uVar11);
        FUN_10431930(this_00,(uint *)"minLifetime",uVar11);
        FUN_10431930(this_00,(uint *)"randomamount",0x3f000000);
        FUN_10431960(local_10,(uint *)"playerIndex",uVar13);
        FUN_10431960(param_1,(uint *)"button",uVar2);
        FUN_10431960(param_1,(uint *)"maxStartAlpha",0);
        FUN_10431960(param_1,(uint *)"maxStartAlpha",uVar10);
        FUN_10431960(param_1,(uint *)"minEndAlpha",uVar10);
        FUN_10431960(param_1,(uint *)"minEndAlpha",uVar11);
        FUN_10431960(param_1,(uint *)"minStartAlpha",0);
        FUN_10431960(param_1,(uint *)"minStartAlpha",uVar10);
        FUN_10431960(param_1,(uint *)"viewmodel",(uint)(piVar3 != (int *)0x0));
        FUN_10431960(puVar10,(uint *)"active",1);
        FUN_10431960(puVar10,(uint *)"attachmentIndex",param_3);
        FUN_10431960(puVar10,(uint *)"count",9);
        FUN_10431960(puVar10,(uint *)"maxEndAlpha",0x80);
        FUN_10431960(puVar10,(uint *)"maxStartAlpha",0xff);
        FUN_10431960(puVar10,(uint *)"minEndAlpha",0x80);
        FUN_10431960(puVar10,(uint *)"minStartAlpha",0xff);
        FUN_10431960(puVar5,(uint *)"active",(uint)param_1 >> 0x18);
        FUN_10431960(puVar5,(uint *)"count",(int)*(float *)((int)this + 0x1528));
        FUN_10431960(puVar6,(uint *)"active",(uint)param_1 >> 0x18);
        FUN_10431960(puVar6,(uint *)"attachmentIndex",(uint)*(byte *)((int)this + 0x3ec));
        FUN_10431960(puVar6,(uint *)"attachmentIndex",*(uint *)((int)this + 0x157c));
        FUN_10431960(puVar6,(uint *)"count",(int)*(float *)((int)this + 0x1528));
        FUN_10431960(puVar6,(uint *)"emitter",0);
        FUN_10431960(puVar6,(uint *)"maxEndAlpha",uVar4);
        FUN_10431960(puVar6,(uint *)"maxEndAlpha",uVar7);
        FUN_10431960(puVar8,(uint *)"index",1);
        FUN_10431960(pvVar2,(uint *)"UsedVoice",(uint)*(byte *)((int)this + 0x3870));
        FUN_10431960(pvVar6,(uint *)"screenx",local_1c);
        FUN_10431960(pvVar6,(uint *)"screeny",local_18);
        FUN_10431960(this,(uint *)"appid",uVar5);
        FUN_10431960(this,(uint *)"appid",uVar6);
        FUN_10431960(this_00,(uint *)"$spriteRenderMode",uVar3);
        FUN_10431960(this_00,(uint *)"avatar",
        FUN_10431960(this_00,(uint *)"deaths",uVar6);
        FUN_10431960(this_00,(uint *)"fixid",uVar6);
        FUN_10431960(this_00,(uint *)"kills",uVar6);
        FUN_10431960(this_00,(uint *)"level",uVar6);
        FUN_10431960(this_00,(uint *)"score",uVar6);
        FUN_10431960(this_01,(uint *)"entindex",*(uint *)((int)this + 4));
        FUN_10431960(this_01,(uint *)"flashlightHandle",(uint)*(ushort *)((int)this + 8));
        FUN_104319d0(param_1,(uint *)"baseflex",(uint)&DAT_1071bcb4);
        FUN_104319d0(puVar10,(uint *)"entindex",uVar11);
        FUN_104319d0(puVar5,(uint *)"panel",0);
        FUN_104319d0(puVar6,(uint *)"entindex",uVar4);
        FUN_104319d0(puVar6,(uint *)"entindex",uVar7);
        FUN_104319d0(puVar8,(uint *)"entindex",uVar4);
        FUN_104319d0(this_01,(uint *)"flashlightState",(uint)local_104);
        FUN_104319f0(local_18,(uint *)&DAT_104f4a20,"FX_MuzzleEffectAttached");
        FUN_104319f0(local_8,(uint *)"title",local_4c);
        FUN_104319f0(local_c,(uint *)"navDown",(char *)((int)puVar8 + 5));
        FUN_104319f0(local_c,(uint *)"navUp",(char *)((int)puVar8 + 5));
        FUN_104319f0(local_c,(uint *)&DAT_104f4a20,"C_DustTrail");
        FUN_104319f0(local_c,(uint *)&DAT_104f4a20,"C_SmokeTrail");
        FUN_104319f0(puVar10,(uint *)"material","effects/muzzleflash2");
        FUN_104319f0(puVar4,(uint *)"command","");
        FUN_104319f0(puVar4,(uint *)"command",(char *)(iVar7 + 0x10));
        FUN_104319f0(puVar4,(uint *)"icon2",(char *)(iVar7 + 0x70));
        FUN_104319f0(puVar4,(uint *)&DAT_105451d4,"hud/commands/empty");
        FUN_104319f0(puVar5,(uint *)"material","particle/smokesprites_0001");
        FUN_104319f0(puVar6,(uint *)"material","particle/particle_noisesphere");
        FUN_104319f0(puVar7,(uint *)"command",local_104);
        FUN_104319f0(puVar7,(uint *)"material","particle/particle_smokegrenade");
        FUN_104319f0(puVar8,(uint *)&DAT_10550448,"#TF_vote_no_maps");
        FUN_104319f0(pvVar6,(uint *)"command",local_138);
        FUN_104319f0(this,(uint *)&DAT_1054f200,"");
        FUN_104319f0(this_00,(uint *)"Issue",pcVar5);
        FUN_104319f0(this_00,(uint *)"killdeath",pcVar7);
        FUN_10431ac0(puVar3,(uint *)"FrameHistAll",(int)lVar11,(int)((ulonglong)lVar11 >> 0x20));
        FUN_10431ac0(puVar3,(uint *)"FrameHistGame1",(int)lVar11,(int)((ulonglong)lVar11 >> 0x20));
        FUN_10431ac0(puVar3,(uint *)"FrameHistGame2",(int)lVar11,(int)((ulonglong)lVar11 >> 0x20));
        FUN_10431ac0(puVar3,(uint *)"FrameHistGame3",(int)lVar11,(int)((ulonglong)lVar11 >> 0x20));
        FUN_10431ac0(puVar3,(uint *)"FrameHistGame4",(int)lVar11,(int)((ulonglong)lVar11 >> 0x20));
        FUN_10432330(&DAT_10735cf8,"cl_software_cursor");
        FUN_10432330(&DAT_10766504,"c_thirdpersonshoulder");
        FUN_10432330(&DAT_10781d38,"r_aspectratio");
        FUN_10432330(&local_c,"ss_verticalsplit");
        FUN_10432330(local_10,"mat_ambient_light_r");
        FUN_10432330(local_14,"sv_infiniteammo");
        FUN_10432330(local_18,"mat_ambient_light_g");
        FUN_10432330(local_20,"mat_ambient_light_b");
        FUN_104323d0(&DAT_107a9510,(int)"joy_inverty");
        FUN_1043a5d0(param_1 + 0x14,"debug/particleerror","Other textures",1);
        FUN_1048d0f0(this_00,"g");
        FUN_10494ce0(*(void **)((int)this + 0x19d8),"*.bmp","#GameUI_BMP_Images",'\0',(char *)0x0);
        FUN_10494ce0(*(void **)((int)this + 0x19d8),"*.jpg","#GameUI_JPEG_Images",'\0',(char *)0x0);
        FUN_10494ce0(*(void **)((int)this + 0x19d8),"*.tga","#GameUI_TGA_Images",'\0',(char *)0x0);
        FUN_10494ce0(*(void **)((int)this + 0x19d8),"*.tga,*.jpg,*.bmp,*.vtf","#GameUI_All_Images",
        FUN_10494ce0(*(void **)((int)this + 0x19d8),"*.vtf","#GameUI_VTF_Images",'\0',(char *)0x0);
        FUN_10498d40(*(void **)((int)this + 0x19d8),"ImportCustomLogo",local_118);
        FUN_104ac651((wchar_t *)puVar1[2],(int)L"%lld");
        FUN_104afa65(&local_10c,0x100,(byte *)"#var_%s");
        LVar7 = RegQueryValueExA(local_8,"Relaunch URL",(LPDWORD)0x0,(LPDWORD)0x0,local_180,&local_c
        LoggingSystem_Log(DAT_104c2ea8,0,"STARTQUEUE: %s time to start of %f\n",uVar3);
        LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*s%s: ",param_3);
        LoggingSystem_Log(DAT_104c2ea8,1,"Error: %s, input_source_index %i is invalid, clamped\n",
        LoggingSystem_Log(DAT_104c2ea8,1,"Error: MixGroup index error, %s, %s",local_114,puVar3);
        LoggingSystem_Log(DAT_104c2ea8,1,"Error: Unknown sound operator stack type");
        LoggingSystem_Log(DAT_104c2ea8,1,"Warning: Unable to load sound operators file \'%s\'\n",
        LoggingSystem_Log(DAT_104f3614,0,"%-32s    ",local_80c);
        LoggingSystem_Log(DAT_104f3614,0,"%-32s\n",local_80c);
        LoggingSystem_Log(DAT_104f3614,0,"%-4d    %-32s    %-10s    0x%08X    ",iVar5,iVar4 + 0x10,
        LoggingSystem_Log(DAT_104f3614,1,"Too many channel specifiers (max: %d).\n",0x10);
        LoggingSystem_Log(DAT_10680b44,0,SUB41(DAT_10417128,0),"Discarding queued download of %s\n",
        LoggingSystem_Log(DAT_10680b44,0,SUB41(DAT_10417128,0),"Downloading %s.\n",
        LoggingSystem_Log(DAT_10680b44,0,SUB41(DAT_1041712c,0),"Error downloading %s%s\n",
        LoggingSystem_Log(DAT_10680b44,0,SUB41(DAT_10417130,0),"Download finished!\n");
        LoggingSystem_Log(DAT_106ac578,0,"rcon from \"%s\": %s\n",pcVar3,param_2);
        LoggingSystem_Log(DAT_106ac578,0,"rcon from \"unknown\": %s\n",param_2);
        MessageBoxA((HWND)0x0,local_41c,"Engine Error",0x40000);
        Msg("    %s\n",uVar4);
        Msg("   %d: %.2f %.2f %.2f\n",iVar6,(double)local_18,(double)fStack20,
        Msg("   time: %6.3f   sound name: %s   scene: %s\n",(double)*(float *)(puVar4 + -4),puVar4,
        Msg("  %s %s\n",*(undefined4 *)(*param_1 + 8 + iVar3),*(undefined4 *)(*param_1 + iVar3));
        Msg("  Removed Danger Sound: %d (time:%f)\n",param_1[(int)fVar8 * 0xd + 0xf4]);
        Msg("  Removed Sound: %d (Time:%f)\n",param_1[(int)fVar8 * 0xd + 0xf4]);
        Msg("  Success. Removing %s.\n",uVar4);
        Msg("  penetration with entity %s (%s)\n",pcVar2,puVar5);
        Msg("  progress %i/%i (%i %%)\n",iVar7,*(undefined4 *)((int)param_2 + 0x14));
        Msg(" %d (%d): %s : %5.3f (%.3f)\n",iVar6,*(undefined4 *)(iVar7 + 0x3c + iVar4),pcVar5,
        Msg(" took %d bits, %.1 bytes\n",iVar14,(double)((float)iVar14 * 0.125));
        Msg(" updated \'%s\'\n",(int *)((int)param_1 + 6));
        Msg("%*s %5d %5d %7d %7d %7d %7d",local_8,iVar3,iVar4,*(undefined4 *)(iVar5 + 0x28),
        Msg("%02i %s l(%03d) c(%03d) r(%03d) rl(%03d) rr(%03d) vol(%03d) pos(%6d %6d %6d) timeleft(%f) looped(%d) %50s chan:%d ent(%03d):%s\n"
        Msg("%3i: %c %s\n",iVar13,uVar6,uVar5);
        Msg("%d ( %d : %s ): %s [ reference count: %d / %d client ] %s%s%s%s%s\n",local_c,
        Msg("%d -----------------------\n",iVar2);
        Msg("%d : %s\n",*(undefined4 *)((int)&DAT_10592df0 + uVar5),
        Msg("%d : %s\n",local_10,local_188);
        Msg("%f: rosette cursor entered %s at %d,%d\n",(double)*(float *)(PTR_DAT_106ab8dc + 0x10),
        Msg("%s is not VR-compatible.\n",puVar1);
        Msg("* NET_SendToImpl: sending voice to %s (%d bytes)\n",pcVar2,iVar1);
        Msg("*** %s\n",local_224);
        Msg("**********************\n%s connects %s(%s:%d) to %s(%s:%d)\n",puVar8,pcVar11,local_c,
        Msg(", relative to sequence start: %f %f\n");
        Msg("------------MUSIC-----UNAVAILABLE-----------\n");
        Msg("--------FIXAPI2-APPSYSTEM-UNAVAILABLE-------\n");
        Msg("----End Script Dump\n");
        Msg("--> [%s] Split packet %4i/%4i seq %5i size %4i mtu %4i to %s [ total %4i ]\n",puVar6,
        Msg("=** %s %s %s\n",iVar6,local_170,local_c);
        Msg("=** %s %s\n",local_8,local_170);
        Msg("============================================\n");
        Msg("============MUSIC=====UNAVAILABLE===========\n");
        Msg("Added area %d.  ( to go there: setpos %f %f %f )\n",uVar2,
        Msg("Bad RCON password\n");
        Msg("CGameServer::BroadcastSound:  Recipient Filter for sound (reliable: %s, init: %s) with bogus client index (%i) in list of %i clients\n"
        Msg("CHANGE LEVEL: %s %s\n",&DAT_10675e74,&DAT_10675e94);
        Msg("CVoiceStatus::UpdateServerState: Sending \'%s\'\n",local_118);
        Msg("CVoiceStatus::UpdateServerState: Sending \'%s\'\n",local_b68);
        Msg("CVoiceStatus::UpdateServerState: no change\n");
        Msg("Can\'t find the world\n");
        Msg("Can\'t ss_connect, split screen not supported when running -tools mode.\n");
        Msg("Can\'t unload %s, %s not ready to exit\n",param_1,uVar5);
        Msg("Can\'t use command %s in multiplayer.\n",uVar10);
        Msg("Clamping split screen users to 1 due to -tools mode\n");
        Msg("Client missing DT class %s\n",piVar5[1]);
        Msg("Couldn\'t get SURROUND FC sound buffer status\n");
        Msg("Couldn\'t get SURROUND FL sound buffer status\n");
        Msg("Couldn\'t get SURROUND FR sound buffer status\n");
        Msg("Couldn\'t get SURROUND RL sound buffer status\n");
        Msg("Couldn\'t get SURROUND RR sound buffer status\n");
        Msg("Couldn\'t get sound buffer status\n");
        Msg("Couldn\'t write to read-only file %s, using file _temp_mapcycle.txt instead.\n",
        Msg("DS::Lock Sound Buffer Failed\n");
        Msg("Damage %.0f, energy %.0f\n",(double)*(float *)(param_1 + -4 + iVar2 * 8),
        Msg("ERROR phys_convert %s ! Already MOVETYPE_VPHYSICS\n",puVar5);
        Msg("ERROR: No local player!\n");
        Msg("ERROR: Weapon (%s) using undefined primary ammo type (%s)\n",puVar9,puVar5 + 0x68);
        Msg("ERROR: Weapon (%s) using undefined primary ammo type (%s)\n",uVar4);
        Msg("ERROR: Weapon (%s) using undefined secondary ammo type (%s)\n",puVar9,puVar5 + 0x70);
        Msg("ERROR: Weapon (%s) using undefined secondary ammo type (%s)\n",uVar4);
        Msg("Entity(%d): %s - %f\n",uVar9);
        Msg("Failed to create Bot.\n");
        Msg("Finding light intensity...DONE (%d unlit areas)\n",DAT_106828d8);
        Msg("FireBullet: %s: P: %d DAM:%f [%f] DIST:%f (Surface Mat: %c)\n",uVar6);
        Msg("Game Object: [%s] Type: [%i]\n",puVar4,uVar2);
        Msg("Game Object: [%s] Type: [%i]\n",uVar2);
        Msg("HLTV_InitRecvTableMgr: failed to allocate client class %s.\n",*puVar3);
        Msg("Halloween\n");
        Msg("Include:  %s\n",piVar9[0x1ff] + iVar6);
        Msg("Loaded tool \'%s\'\n",uVar9);
        Msg("Marked Area is connected to %d other Areas\n",
        Msg("Marked Ladder is connected to %d Areas\n",
        Msg("Navigation map \'%s\' saved.\n",puVar4);
        Msg("OS requested hibernation, ignoring request.\n");
        Msg("Only files beneath the base game directory can be included\n");
        Msg("Parsing mapid: %s (%llu) %s\n",puVar8,uVar11,puVar1);
        Msg("Parsing mapid: %s (%llu) %s\n",puVar8,uVar11,puVar14);
        Msg("Queue COM_CreatePath\n");
        Msg("Radial using: %s\n",pcVar7);
        Msg("Response: %s\n",local_120);
        Msg("Setting CBaseAnimating to non-studio model %s  (type:%i)\n",param_1,uVar2);
        Msg("SoundPointerForIndex() - Index < 0!\n");
        Msg("Trace: %d, contents %d, enumerate %d\n",local_14[0],local_14[1],local_14[2]);
        Msg("TrackIR shut down\n");
        Msg("UDP:  discarding %d bytes from %s due to decompression error [%d decomp, actual %d] at tm=%f rt=%f\n"
        Msg("Unable to determine where to set default bug parameter \'%s\', ignoring...\n",local_134
        Msg("Updated stringtable dictionary saved to %s\n",local_108);
        Msg("Version mismatch, expecting %f, got %f",0x3ff0000000000000,(double)(float)fVar10);
        Msg("WARNING: NET_ListenSocket listen failed on socket %i, port %i.\n",piVar4[3],*piVar4);
        Msg("WARNING: NET_OpenSocket: setsockopt SO_REUSEADDR: %s\n",pcVar1);
        Msg("Warning! Failed to complete WSACleanup = 0x%x.\n",iVar9);
        Msg("Worldcraft failed on deletion...\n");
        Msg("Writing %s to disk. (Not Writing to Steam due to cl_leveloverview)\n",param_1);
        Msg("Writing demo message %i bytes at file pos %i\n",iVar7,uVar3);
        Msg("Your server is out of date.  Please update and restart.\n");
        Msg("[%8.3f] stall blend %.2f on %s:%s:%d:%d\n",(double)fVar7);
        Msg("[RULES] MovePlayerToSpawnPosition_TDM called with NO TDM SPAWN ZONES");
        Msg("\t%16.16s : %s\n",pcVar6);
        Msg("\t<none>\n");
        Msg("\t\t defaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>\n");
        Msg("dynamic model [%s] loaded on client but not server! is this bad? unknown...",
        Msg("host_ShowIPCCallCount: %d IPC calls in the past [%d frames, %d ticks]  Avg: [%.2f/frame, %.2f/tick]\n"
        Msg("id: %i Desc: [%s] Module: [%s]\n",iVar2,*(undefined4 *)(iVar1 + 4),
        Msg("id: %i Desc: [Primary Sound Driver]\n",0);
        Msg("mat_texture_list_txlod adjusted lod %c1 for \'%s\'\n",(iVar3 < 1) * '\x02' + '+',
        Msg("model %p [%s] loaded\n",iVar2,iVar2 + 4);
        Msg("nav_simplify_selected only works on the selected set\n");
        Msg("parsed invalid dmspawn, skipping\n");
        Msg("remove 0x%x: %s-%s (%d-%d) [%d in play, %d max]\n",puVar3,pcVar9,pcVar8,iVar7,iVar6,
        Msg("tried to spawn invalid car. [%s]\n",puVar14);
        Msg("weapon: %i [%i] skin: [%i]\n",local_c,local_1c,pbVar1);
        Msg((byte *)"%.0f pct of time accounted for\n");
        Msg((byte *)"%8.4f / %8.4f:  %s\n");
        Msg((byte *)"%d frames sampled for %.2f seconds\n");
        Msg((byte *)"-- Hierarchical Call Graph --\n");
        Msg((byte *)"-- Summary --\n");
        Msg((byte *)"Average %.2f fps, %.2f ms per frame\n");
        Msg((byte *)"Bad node link detected\n");
        Msg((byte *)"Peak %.2f ms frame\n");
        Msg((byte *)"SBH compact disabled\n");
        Msg((byte *)"SBH size forced override -forcesbhsizemb: %llu bytes (%u MB)\n");
        Msg((byte *)"Test bucket %d has an invalid value %d\n");
        Msg((byte *)"Thread %u about to wait for lock %p owned by %u\n");
        Msg((byte *)"Thread %u now owns lock %p\n");
        Msg((byte *)"Thread %u now owns lock 0x%p\n");
        Msg((byte *)"Thread %u releasing lock 0x%p\n");
        Warning("#######################################\n");
        Warning("%s doesn\'t like %s\n\n",pcVar5,pcVar4);
        Warning("%s(%s) could not find scene %d, named %s\n",pcVar6,puVar7,iVar4,puVar9);
        Warning("%s: %d\n",pcVar3,iVar1);
        Warning("*** BAD BUILD VIEW INITIALIZATION ***\n");
        Warning("*** REJECTING: %s, due to map_wants_save_disable.\n",param_1);
        Warning("***Water vmt missing . . check console for missing materials!***\n");
        Warning("AddMultiDamage:  g_MultiDamage.GetDamageForce() == vec3_origin\n");
        Warning("AddMultiDamage:  g_MultiDamage.GetDamagePosition() == vec3_origin\n");
        Warning("Area %d didn\'t get any nodes!\n",*(undefined4 *)((int)pvVar6 + 0x8c));
        Warning("Attached %s (mod_studio) to %s (%d)\n",uVar5);
        Warning("Attempted to restore FIELD_EMBEDDEDBYREF %s but there is no destination memory\n",
        Warning("Bogus constraint %s (attaches %s to ENTITY NOT FOUND:%s)\n",pcVar2,puVar6,puVar5);
        Warning("Bogus constraint %s (attaches ENTITY NOT FOUND:%s to %s)\n",pcVar2,puVar6,puVar5);
        Warning("CAI_BaseNPC::UpdateSleepState called with NULL pLocalPlayer\n");
        Warning("CModelLoader::Map_IsValid:  Map \'%s\' bsp version %i, expecting %i\n",local_108,
        Warning("CSceneEntity::LoadScene: Unable to load binary scene \'%s\'\n",local_138);
        Warning("CSoundscapeSystem::Init:  Manifest \'%s\' with bogus file type \'%s\', expecting \'file\'\n"
        Warning("C_BaseEntity::UnlinkFromHierarchy(): Entity has a child with the wrong parent!\n");
        Warning("C_SoundscapeSystem::Init:  Manifest \'%s\' with bogus file type \'%s\', expecting \'file\'\n"
        Warning("Can\'t find train for track change! %s\n",pcVar6);
        Warning("Can\'t load pure server whitelist in %s.\n","pure_server_whitelist.txt");
        Warning("Cannot use CBaseMeshReader with compressed vertices!\n");
        Warning("Clamping ApplyAbsVelocityImpulse(%f,%f,%f) on %s\n",(double)*(float *)param_1,
        Warning("Clamping SetLocalVelocity(%f,%f,%f) on %s\n",(double)*(float *)param_1,
        Warning("Could not find the channel with the guid: %d\n",iVar2);
        Warning("Couldn\'t find any entities named %s, which point_template %s is specifying.\n",
        Warning("Couldn\'t parse script file: expected <event name>, found nothing\n");
        Warning("Couldn\'t parse script file: expected \'event\', found \'%s\'\n",&local_274);
        Warning("Couldn\'t parse script sequence \'%s\': expected \'{\', found \'%s\'\n",puVar10,
        Warning("DLL_MessageEnd:  Refusing to send user message %s of %i bytes to client, user message size limit is %i bytes\n"
        Warning("Data manager \'used\' memory incorrect\n");
        Warning("Discarding ApplyAbsVelocityImpulse(%f,%f,%f) on %s\n",(double)(float)local_10,
        Warning("Door %s with conflicting collision settings, removing ignoredebris\n",pcVar8);
        Warning("Duplicate attribute name %s encountered!\n",puVar3);
        Warning("ERROR: Squad \'%s\' has enemies in it!\n",puVar6);
        Warning("Encountered multiple different effects with the same name \"%s\"!\n");
        Warning("Entity \'%s\' is still actively leading\n",puVar5);
        Warning("EnvMicrophone %s specifies a non-existent speaker name: %s\n",puVar8,puVar6);
        Warning("Error serializing color operator %s\n",uVar9);
        Warning("FAILED to initiate threaded node graph build due to already locked mutex!");
        Warning("FCVAR_SERVER_CAN_EXECUTE prevented server running command: %s\n",uVar10);
        Warning("Failed to find attachment point specified for particle effect anim event. Trying to spawn effect \'%s\' on attachment named \'%s\'\n"
        Warning("Failed to find attachment point specified for particle effect in model \'%s\' keyvalues section. Trying to spawn effect \'%s\' on attachment named \'%s\'\n"
        Warning("Failed to play server side instructor hint: no player specified for hint\n");
        Warning("Game paused time showing up negative (rt %f pausestart %f)\n",
        Warning("Game paused time showing up negative (rt %f pausestart %f)\n",(double)*DAT_10646018
        Warning("Ignoring bogus angles (%f,%f,%f) from vphysics! (entity %s)\n",(double)local_10[0],
        Warning("Ignoring bogus angles (%f,%f,%f) from vphysics! (entity %s)\n",(double)local_18[0],
        Warning("Ignoring unreasonable position (%f,%f,%f) from vphysics! (entity %s)\n",
        Warning("Inserted %s with no model\n",puVar6);
        Warning("Invalid sequence number (%d)!!!\n",local_18);
        Warning("Landmark name \'%s\' too long (32 chars)\n",param_2);
        Warning("Late precache of %s\n",param_1);
        Warning("Map %s using fallback stringtable dictionary, don\'t ship this way!!!\n",param_2);
        Warning("Material %s used by particle systems cannot use proxies!\n",uVar11);
        Warning("Model \'%s\' doesn\'t have attachment \'%s\' to attach particle system \'%s\' to.\n"
        Warning("Particle system %s could not find control point entity (%s)\n",puVar3,pcVar4);
        Warning("PlayerHealthPercentProxy used on non player entity!!\n");
        Warning("Precache of %s ambigious (no extension specified)\n",puVar4);
        Warning("Reading externally referenced elements is not supported!\n");
        Warning("Restore underflow!\n");
        Warning("Run with -stringtables on the command line or convar\n");
        Warning("SAVERESTORE PROBLEM: %s not found!  Starting new game in %s\n",pcVar3,pcVar5);
        Warning("Save/Restore overflow %zu [%d, %d]!\n",DAT_10671274,*(undefined4 *)(iVar1 + 0xc),
        Warning("Save/Restore overflow %zu [%d, %d]!\n",DAT_1077e2a0,*(undefined4 *)(iVar1 + 0xc),
        Warning("Server shutting down because sv_shutdown was done and a game has ended.\n");
        Warning("SetParent on static object, all constraints attached to %s (%s)will now be broken!\n"
        Warning("Sound DSP: Failed to lock.\n");
        Warning("Stream pool: No buffers available! (dead:%d)\n",*(undefined4 *)((int)this + 0x80));
        Warning("Uncached query for bone (%d) transform. Please verify that there is an attachment or bounding box associated with this bone.\n"
        Warning("Unexpected end of file expanding save game\n");
        Warning("ViewBuilder Begin/End Error - Add dependency to world list (-1)\n");
        Warning("ViewBuilder Begin/End Error - Flushing Build World list job(-1)\n");
        Warning("ViewBuilder Begin/End Error - Setting WorldRenderListElement(-1)\n");
        Warning("Viewcontrol %s was enabled twice in a row!\n",pcVar4);
        Warning("WARNING! Field %s is using the wrong FIELD_ type!\nFix this or you\'ll see a crash.\n"
        Warning("Warning: env_projected_texture (%s) forced off by (%s)\n",puVar2,puVar3);
        Warning("[GAMEUI] OpenWindow: Another window %p`%s` is having priority %d, deferring `%s`!\n"
        Warning("[Sound] Sound \"%s\" just looped.\n",puVar7);
        Warning("can\'t buildmodelforworld.  Map not loaded.\n");
        Warning("classname %s used to create wrong class type\n",&DAT_1046b24c);
        Warning("edict %d (%s) missing prop \'%s\' in changeinfos\n",
        Warning("filter_multi: Tried to add entity (%s) which is not a filter entity!\n",pcVar3);
        Warning("map load failed: %s not found or invalid\n",local_84);
        Warning("mat_texture_list_txlod cannot adjust lod for \'%s\'\n",&DAT_104f29f8);
        Warning("mat_texture_list_txlod failed %sexcluding \'%s\'\n",puVar5);
        Warning("mod_studio: MOVETYPE_FOLLOW with no model.\n");
        Warning("reliable%s %s %d/%d/%d/%s\n",pcVar6,pcVar5,param_1[0xe],param_1[0xf],param_1[0x12],
        Warning("stringtable_alwaysrebuilddictionaries enabled to build the string table\n");
        Warning("sv_cheats=0 prevented changing %s outside of the range [0,2] (was %d).\n",uVar2);
        _ExitOnFatalAssert("d:\\projects\\ti\\release\\ti_rel\\src\\public\\studio.cpp",0x862);
        _Src = "";
        _Src = "<<illegal>>";
        _Str1 = "teargas";
        _param_2 = FUN_10267e50(pvVar3,"SetAsCurrentDefaultButton",(uint *)"state",0);
        _param_2 = FUN_1039d270(pvVar3,"SetAsCurrentDefaultButton",(uint *)"state",0);
        _param_2 = FUN_1042e930(pvVar3,"SetAsCurrentDefaultButton",(uint *)"state",0);
        bVar1 = FUN_100a6de0(param_1,"prop_door_rotating");
        bVar1 = FUN_100a6de0(this,"point_enable_motion_fixup");
        bVar1 = FUN_100a6de0(this,"prop_dynamic_override");
        bVar2 = FUN_100a6de0(param_1,"path_corner");
        bVar2 = FUN_100a6de0(piVar9,"logic_branch");
        bVar2 = FUN_100a6de0(this_00,"prop_door");
        bVar5 = FUN_1013c980((int)param_1,(int)"color2");
        cVar1 = (**(code **)(*DAT_106cb888 + 0xac))("SoundSciptHandle ERROR",puVar3,&local_11c,0,1);
        cVar1 = (**(code **)(*param_1 + 0x18))("practice",0);
        cVar2 = DoNewAssertDialog("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h"
        cVar2 = FUN_1013aba0(&local_10,(byte *)"SpawnChance",(char *)local_858);
        cVar2 = FUN_1013aba0(&local_10,(byte *)"Stage",(char *)local_858);
        cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
        cVar3 = DoNewAssertDialog("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h"
        cVar4 = DoNewAssertDialog("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h"
        cVar4 = FUN_1013aba0(&local_10,(byte *)"CoverSpot",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"EngineSpin",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"IdealSpeed",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"LeftWing_BrakeFlap",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"LeftWing_BrakeFlap2",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"NextKey",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"RightWing_BrakeFlap",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"RightWing_BrakeFlap2",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"SpawnChance",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"Squad",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"Stage",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"Target2",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"Target3",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"TeamBias",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"model",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"nodriving",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"randomvehicle",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"spawn_conditional_value",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"spawn_type",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"spawnradius",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"target",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"targetname",(char *)local_85c);
        cVar4 = FUN_1013aba0(&local_10,(byte *)"zone_stages",(char *)local_85c);
        cVar6 = DoNewAssertDialog("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h"
        eVar3 = _wcscpy_s((wchar_t *)&DAT_00458728,0x314,L"Runtime Error!\n\nProgram: ");
        eVar3 = _wcscpy_s((wchar_t *)&DAT_10045fa0,0x314,L"Runtime Error!\n\nProgram: ");
        eVar3 = _wcscpy_s((wchar_t *)&DAT_106d4860,0x314,L"Runtime Error!\n\nProgram: ");
        eVar3 = _wcscpy_s((wchar_t *)&DAT_106fa208,0x314,L"Runtime Error!\n\nProgram: ");
        eVar3 = _wcscpy_s((wchar_t *)&DAT_10835d40,0x314,L"Runtime Error!\n\nProgram: ");
        eVar3 = _wcscpy_s((wchar_t *)&DAT_10848740,0x314,L"Runtime Error!\n\nProgram: ");
        fVar2 = FUN_1042f1d0(this_00,(uint *)"animatedTextureFrameRate",15.0);
        fVar3 = (float)FUN_10399710(param_1,(byte *)"fademaxdist");
        fVar8 = FUN_101044c0(this,"GetRenderOrigin",
        iVar1 = FUN_101c7240(param_1,"Car.Horn_BTeam",0,0);
        iVar11 = (**(code **)(*piVar10 + 0xc))("-remotebug",0);
        iVar12 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_Head1");
        iVar2 = (**(code **)(*piVar1 + 0x20))("+tv_port",0);
        iVar2 = (**(code **)(*piVar1 + 0x2c))("-noforcemaccel");
        iVar2 = (**(code **)(*piVar1 + 0x2c))("-noforcemspd");
        iVar2 = (**(code **)(*piVar1 + 0x2c))("-startstage");
        iVar2 = (**(code **)(*piVar4 + 0x2c))("-preload");
        iVar2 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_L_Forearm");
        iVar2 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_R_Calf");
        iVar2 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_R_Forearm");
        iVar2 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_Spine2");
        iVar2 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_Spine4");
        iVar2 = FUN_102659a0(param_1,(byte *)"downloadables");
        iVar2 = FUN_102659a0(param_1,(byte *)"origineasein");
        iVar2 = FUN_102659a0(param_1,(byte *)"origineaseout");
        iVar2 = FUN_102659a0(param_1,(byte *)"smoothboth");
        iVar2 = FUN_102659a0(param_1,(byte *)"smoothright");
        iVar2 = FUN_10265ff0("</a>");
        iVar2 = FUN_10265ff0("<a href=");
        iVar2 = FUN_103997b0("</a>");
        iVar2 = FUN_103997b0("<a href=");
        iVar2 = FUN_1042dc00(param_1,"accept",7);
        iVar2 = FUN_1042dc00(param_1,"decline",8);
        iVar2 = FUN_1042dc00(param_1,"trigger",8);
        iVar2 = FUN_1042e020("</a>");
        iVar2 = FUN_1042e020("<a href=");
        iVar3 = (**(code **)(*param_1 + 0x1c))("userid",0);
        iVar3 = (**(code **)(*piVar2 + 0x2c))("-headtracking");
        iVar3 = (**(code **)(*piVar2 + 0x2c))("-makedevshots");
        iVar3 = (**(code **)(*piVar2 + 0x2c))("-quitonservershutdown");
        iVar3 = (**(code **)(*piVar2 + 0x2c))("-textmode");
        iVar3 = FUN_1008c050(this,(byte *)"Quadruped.BRFootBone1");
        iVar3 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_R_Foot");
        iVar3 = FUN_10146910(param_1 + 300,(undefined4 *)"molotov_groundfire",1,0xffffffff,
        iVar3 = FUN_1026d670(local_40,"%f %f %f\n");
        iVar3 = FUN_10315e1f((ushort *)pwVar2,(ushort *)L".bat");
        iVar3 = FUN_10399150(param_2,param_3,(byte *)"%f %f %f");
        iVar3 = FUN_1042e020("DrpShaderDetail");
        iVar3 = FUN_104ad79a((ushort *)pwVar2,(ushort *)L".bat");
        iVar3 = Msg("============================================\n");
        iVar4 = (**(code **)(*param_1 + 0x1c))("userid",0);
        iVar4 = (**(code **)(*param_1 + 0x28))(&DAT_104f4a20,"unknown",0x80);
        iVar4 = (**(code **)(*piVar3 + 0xc))("-tools",0);
        iVar4 = (**(code **)(DAT_10681754[1] + 0x54))(local_134,"PROFILE");
        iVar4 = (***(code ***)PTR_DAT_106ac350)("PlasmaGlowFade");
        iVar4 = FUN_10399410((char *)local_18cc,"info_heli_CT_spawn",0x12);
        iVar4 = FUN_10399410((char *)local_18cc,"info_player_terroriststart_",iVar4);
        iVar4 = FUN_103997b0("info_player_terroriststart_");
        iVar5 = (**(code **)(*DAT_10730d00 + 0x18))("fire_extinguisher_empty",0,0);
        iVar5 = (**(code **)(*param_1 + 0x1c))("assister",0);
        iVar5 = (**(code **)(*param_1 + 0x1c))("attacker",0);
        iVar5 = (**(code **)(*piVar7 + 0x1c))("userid",0);
        iVar5 = FUN_101c52f0(&DAT_106a4940,(int *)this,(int)"requested from console");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"default_to_max");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"force_not_player_sound");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"game_multi_origin");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"left_front");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"match_entity");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"match_entry");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"mixgroup");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"mixlayer");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"normalize_trig");
        iVar5 = FUN_102659a0(pbVar2,(byte *)"syncpoint_list");
        iVar5 = FUN_102659a0(pbVar3,(byte *)"false");
        iVar5 = FUN_102659a0(pbVar3,(byte *)"music");
        iVar5 = FUN_102659a0(pbVar3,(byte *)"volume");
        iVar5 = FUN_10265ff0("models");
        iVar5 = FUN_10399480((int)puVar8,"weapon_",7);
        iVar5 = FUN_10399480((int)puVar9,"weapon_",7);
        iVar5 = Msg("SIM: Loaded %s into memory\n",param_1);
        iVar6 = (**(code **)(*param_1 + 0x1c))("oldteam",0);
        iVar6 = (**(code **)(*param_1 + 0x1c))("proxies",0);
        iVar6 = (**(code **)(*param_1 + 0x1c))("userid",0);
        iVar6 = (**(code **)(*piVar5 + 0x2c))("-preload");
        iVar6 = FUN_102659a0(pbVar3,(byte *)"stop_channel_on_track");
        iVar6 = FUN_1038de80(this_00,(int *)"concept");
        iVar6 = FUN_1042d9d0(pcVar5," by ");
        iVar7 = (**(code **)(*param_1 + 0x1c))("attacker",0);
        iVar7 = FUN_10031638(pbVar10,(byte *)"UTF-16LE",8);
        iVar7 = FUN_103122ac(pbVar10,(byte *)"UTF-16LE",8);
        iVar7 = FUN_103991e0(pcVar10,".bsp");
        iVar9 = (**(code **)(*param_1 + 0x1c))("clients",0);
        iVar9 = FUN_102659b0((char *)&local_274,"[$");
        iVar9 = FUN_1042d9d0((char *)&local_274,"[$");
        if ((!bVar2) && (*(char **)((int)this_00 + 0x5c) != "prop_door_rotating")) {
        if (((cVar1 == '\"') && (acStack1033 + 1 <= pcVar7)) && (*pcVar7 == '\"')) {
        if ((in_EAX != 0) && (param_1 != (uint *)"value1")) {
        if ((pbVar5 != (byte *)"player_manager") &&
        if ((pbVar5 != (byte *)"worldspawn") &&
        if ((uVar3 == 0) || (uVar3 = FUN_10399710((byte *)"!player",pbVar1), uVar3 == 0)) {
        if ((uVar4 == 0) || (uVar4 = FUN_1042df80(local_84,(byte *)"cmd2 bind"), uVar4 == 0)) {
        if (*(char **)((int)pvVar2 + 0x5c) != "env_portal_path_track") {
        if (cVar1 == '\"') {
        if (cVar2 == '\"') {
        if (param_1 != (uint *)"world_maxs") {
        in_EAX = (byte **)Warning("Bad field in entity!!\n");
        in_EAX = FUN_10399710((byte *)param_1,(byte *)"killtarget");
        in_EAX = FUN_10399710(pbVar11,(byte *)"__ach_earned__");
        in_EAX = Msg("SIM: Extracted: %s [Size: %d KB]\n",puVar4,*(uint *)(iVar1 + 0x18) >> 10);
        local_10 = (char *)(**(code **)(*param_1 + 0x28))("weapon",&DAT_104eefb3);
        local_10 = (char *)(**(code **)(*param_1 + 0x28))("weapon_logclassname",&DAT_104eefb3);
        local_10 = (int *)FUN_10135420("prop_ammo_box",-1,'\x01');
        local_10 = FUN_10267f50(pvVar8,"HideNewControlMenu");
        local_10 = FUN_10399150(local_194,0x80,(byte *)"%.3f %d %d\n");
        local_10 = FUN_1039d370(pvVar8,"HideNewControlMenu");
        local_10 = FUN_1042ea30(pvVar8,"HideNewControlMenu");
        local_10 = FUN_1042ee30(puVar10,(uint *)"initializers",1);
        local_14 = FUN_10169d60((byte *)"m_vecNetworkOrigin.x",piVar5);
        local_14 = FUN_10169d60((byte *)"m_vecNetworkOrigin.y",piVar5);
        local_14 = FUN_10169d60((byte *)"m_vecNetworkOrigin.z",piVar5);
        local_14 = FUN_10399150(local_194,0x80,(byte *)"%.3f %d %d %.3f %.3f %.3f [vel %.2f]\n");
        local_14 = FUN_1039d370(pvVar4,"material");
        local_18 = (int *)(**(code **)(*local_c + 0x2c))("$VOLUMETRICINTENSITY",&local_5,0);
        local_18 = FUN_1042ea30(pvVar6,"sprays_manifest");
        local_18 = _fopen("timestamped.log","at+");
        local_1c = FUN_1042ea30(pvVar4,"material");
        local_20 = "#PORTAL2_ButtonAction_Reset";
        local_20 = "tacint";
        local_20 = FUN_1042ee30(local_10,(uint *)"DmeRandomInterpolatedColorInitializer",1);
        local_24 = "#PORTAL2_ButtonAction_Reset";
        local_24 = "tacint";
        local_258 = "userid";
        local_28 = "pow";
        local_2c = "#PORTAL2_ButtonAction_Quit";
        local_30 = "#PORTAL2_ButtonLayoutText";
        local_30 = "#VideoOptions_QueuedMode_Info";
        local_34 = "#PORTAL2_ButtonAction_Reset";
        local_34 = "#PORTAL2_ButtonLayoutConf";
        local_34 = "#PORTAL2_VideoSettingsUseDefaultsQ";
        local_34 = "#VideoOptions_Queued_Mode";
        local_38 = "#PORTAL2_AdvancedVideoConf";
        local_38 = "#PORTAL2_VideoSettingsConf";
        local_3c = "#L4D360UI_MainMenu_Quit_ConfirmMsg";
        local_40 = "#L4D360UI_MainMenu_Quit_Confirm";
        local_408 = FUN_1017c740((byte *)"ss_disconnect %d\n");
        local_41c = FUN_1017c740((byte *)"connect %s\n");
        local_44 = "#GameUI_KeyboardSettingsText";
        local_48 = "#PORTAL2_KeyboardSettingsConf";
        local_4c = "Weapon_Crossbow.BoltSkewer";
        local_68 = (int *)(**(code **)(*piVar3 + 0x2c))("$NOISETEXTURE",&local_5,0);
        local_6c = "TexGroup_frame_";
        local_70 = (int *)(**(code **)(*local_c + 0x2c))("$ENABLESHADOWS",&local_5,0);
        local_74 = (int *)(**(code **)(*local_c + 0x2c))("$FLASHLIGHTTIME",&local_5,0);
        local_78 = (int *)(**(code **)(*local_c + 0x2c))("$ATTENFACTORS",&local_5,0);
        local_7c = (int *)(**(code **)(*local_c + 0x2c))("$NUMPLANES",&local_5,0);
        local_8 = "";
        local_8 = "GENERIC";
        local_8 = (**(code **)(*param_1 + 0x1c))("killer",0);
        local_8 = (code **)(**(code **)(*DAT_107c09f0 + 0x2c))("#Game_WaitRound1");
        local_8 = (code **)(**(code **)(*DAT_107c09f0 + 0x2c))("#Game_WaitRound2");
        local_8 = (float)(**(code **)(**(int **)(iVar3 + 0x10 + uVar6 * 0x14) + 0x1c))("index",0);
        local_8 = (uint *)FUN_102b2d60(pvVar1,param_1,"SentenceModeMenu",1);
        local_8 = (uint *)FUN_103c9d10(pvVar1,param_1,"SentenceModeMenu",1);
        local_8 = (uint *)FUN_10472550(pvVar1,param_1,"SentenceModeMenu",1);
        local_8 = FUN_10267f50(this,"ApplyChanges");
        local_8 = FUN_10267f50(this,"ResetData");
        local_8 = FUN_1042ea30(pvVar4,"OnHybridButtonNavigatedTo");
        local_8 = FUN_1042ea30(this,"ApplyChanges");
        local_8 = FUN_1042ea30(this,"ResetData");
        local_8 = FUN_1042ee30(puVar5,(uint *)"initializers",1);
        local_8 = FUN_1042ee30(puVar7,(uint *)"initializers",1);
        local_80 = (int *)(**(code **)(*local_c + 0x2c))("$QUATORIENTATION",&local_5,0);
        local_84 = (int *)(**(code **)(*piVar3 + 0x2c))("$COOKIEFRAMENUM",&local_5,0);
        local_88 = (int *)(**(code **)(*local_c + 0x2c))("$SHADOWATTEN",&local_5,0);
        local_90 = (int *)(**(code **)(*local_c + 0x2c))("$UBERLIGHT",&local_5,0);
        local_98 = (int *)(**(code **)(*local_c + 0x2c))("$UBERNEARFAR",&local_5,0);
        local_9c = (int *)(**(code **)(*local_c + 0x2c))("$WORLDTOTEXTURE",&local_5,0);
        local_a0 = (int *)(**(code **)(*local_c + 0x2c))("$UBERROUNDNESS",&local_5,0);
        local_b0 = (int *)(**(code **)(*local_c + 0x2c))("$ORIGINFARZ",&local_5,0);
        local_b4 = (int *)(**(code **)(*local_c + 0x2c))("$FLASHLIGHTCOLOR",&local_5,0);
        local_b8 = (int *)(**(code **)(*local_c + 0x2c))("$SHADOWJITTERSEED",&local_5,0);
        local_bc = (int *)(**(code **)(*local_c + 0x2c))("$SHADOWFILTERSIZE",&local_5,0);
        local_c = "";
        local_c = (**(code **)(*piVar3 + 0x84))("muzzle_left");
        local_c = (**(code **)(*piVar3 + 0x84))("muzzle_right");
        local_c = (float)(**(code **)(**(int **)(local_10 + 0x10 + uVar6 * 0x14) + 0x1c))("index",0)
        local_c = FUN_1042ea30(this_00,"OldParticleSystem_Create");
        local_c0 = (int *)(**(code **)(*local_c + 0x2c))("$NOISESTRENGTH",&local_5,0);
        local_c4 = (int *)(**(code **)(*local_c + 0x2c))("$UBERHEIGHTWIDTH",&local_5,0);
        local_c8 = (int *)(**(code **)(*piVar3 + 0x2c))("$COOKIETEXTURE",&local_5,0);
        pDVar3 = (DName *)DName::DName(local_34,"operator");
        pDVar4 = (DName *)DName::DName((DName *)local_60," ");
        pDVar4 = (DName *)DName::DName((DName *)local_60,"static ");
        pDVar5 = (DName *)DName::DName(local_94,"&");
        pFVar6 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymLoadModule64");
        pHVar2 = (HMODULE)(*DAT_106abcdc)("ServerGameEnts001",0);
        pHVar7 = (HMODULE)(**(code **)(*DAT_107c09f8 + 0x74))(uVar4,"EXECUTABLE_PATH",1);
        param_1 = "Not looping.";
        param_1 = (HMODULE)Msg("Could not get IServerGameDLL interface from library %s",param_1);
        param_1 = (int *)FUN_10135420("worldspawn",-1,'\x01');
        param_1 = FUN_10267f50(pvVar3,"PageShow");
        param_1 = FUN_10267f50(pvVar7,"PanelMoved");
        param_1 = FUN_10267f50(pvVar7,"Paste");
        param_1 = FUN_10267f50(pvVar7,"SetActiveControl");
        param_1 = FUN_102fe340(this_00,(int)this,"TeamListItem",1);
        param_1 = FUN_1039d370(pvVar7,"PanelMoved");
        param_1 = FUN_1039d370(pvVar7,"Paste");
        param_1 = FUN_1039d370(pvVar7,"SetActiveControl");
        param_1 = FUN_1042ea30(pvVar13,"BtnGameMode");
        param_1 = FUN_1042ea30(pvVar3,"PageShow");
        param_1 = FUN_1042ea30(pvVar7,"PanelMoved");
        param_1 = FUN_1042ea30(pvVar7,"Paste");
        param_1 = FUN_1042ea30(pvVar7,"SetActiveControl");
        param_1 = FUN_1042ee30(local_8,(uint *)"DmeRandomAlphaInitializer",1);
        param_1 = FUN_1042ee30(puVar6,(uint *)"DmeRandomAlphaInitializer",1);
        param_1[6] = (byte *)"incorrect header check";
        param_1[6] = (byte *)"invalid window size";
        param_1[6] = (byte *)"unknown compression method";
        param_1[iVar7 + 4] = "JanFebMarAprMayJunJulAugSepOctNovDec"[iVar7 + iVar4 * 3];
        param_2 = "entity1";
        param_2 = "entity2";
        param_2[6] = (byte *)"invalid block type";
        param_2[6] = (byte *)"invalid stored block lengths";
        param_5 = FUN_103145a0(pvVar8,(int)this,"ButtonAddFriend","#TI_PLR_Context_AddFriend",0,
        param_6 = "string1";
        param_6 = "string2";
        pauVar18 = (undefined (*) [16])FUN_101f6800((byte *)"%s:%s");
        pauVar9 = (undefined (*) [16])"FCVAR_NEVER_AS_STRING";
        pbVar15 = (byte *)"FCVAR_NEVER_AS_STRING";
        pbVar2 = (byte *)FUN_10268930(param_1,(uint *)"Format",(uint)&DAT_103236cf);
        pbVar3 = (byte *)"FCVAR_NEVER_AS_STRING";
        pbVar3 = (byte *)FUN_10268930(puVar1,(uint *)"block_equal_priority",(uint)&DAT_10324484);
        pbVar3 = (byte *)FUN_10268930(puVar1,(uint *)"priority_override",(uint)&DAT_10324484);
        pbVar4 = FUN_101f6800((byte *)"vehicle_exit%d");
        pbVar5 = (byte *)"FCVAR_NEVER_AS_STRING";
        pbVar6 = (byte *)FUN_10268930(param_2,(uint *)"Format",(uint)&DAT_103236cf);
        pbVar7 = (byte *)"FCVAR_NEVER_AS_STRING";
        pbVar7 = (byte *)FUN_10268930(param_1,(uint *)"Format",(uint)&DAT_103236cf);
        pbVar9 = FUN_100d0740((byte *)"pose_UI_%s");
        pcStack108 = "TexGroup_frame_";
        pcStack28 = "Platform Error: module failed to initialize\n";
        pcStack300 = "prop_static";
        pcStack76 = "world";
        pcVar1 = "";
        pcVar1 = "false";
        pcVar1 = "true";
        pcVar1 = (char *)FUN_1042f3d0(this_00,(uint *)"srcVar2",(uint)&DAT_104eefb3);
        pcVar10 = "";
        pcVar10 = "#Foot_Boots";
        pcVar10 = "#Foot_Shoes";
        pcVar10 = "#HudColor_Blue";
        pcVar10 = "#HudColor_Default";
        pcVar10 = "#HudColor_Orange";
        pcVar10 = "#L4D360UI_Disabled";
        pcVar10 = "#NetGraph_Advanced";
        pcVar10 = "#NetGraph_Detailed";
        pcVar10 = "#Option_Minimap_Both";
        pcVar10 = "#Option_Minimap_Off";
        pcVar10 = "#Overlay_BottomLeft";
        pcVar10 = "#Overlay_BottomRight";
        pcVar10 = "#Overlay_TopLeft";
        pcVar10 = "#Overlay_TopRight";
        pcVar10 = "BOOTS";
        pcVar10 = "Console";
        pcVar10 = "Default";
        pcVar10 = "Expire: Never [Default]";
        pcVar10 = "FCVAR_NEVER_AS_STRING";
        pcVar10 = "Hit Location: Generic\n";
        pcVar10 = "SHOES";
        pcVar10 = "SquadDesc_CT_Driver";
        pcVar10 = "SquadDesc_CT_DriverVIP";
        pcVar10 = "`template static data member constructor helper\'";
        pcVar10 = "`template static data member destructor helper\'";
        pcVar10 = "protected: ";
        pcVar10 = "smoke_muzzle_automatic";
        pcVar10 = "smoke_muzzle_shotgun";
        pcVar10[iVar7 + 4] = "JanFebMarAprMayJunJulAugSepOctNovDec"[iVar7 + iVar5 * 3];
        pcVar11 = "";
        pcVar11 = "#L4D360UI_SteamOverlay_Text";
        pcVar11 = "(%f, %f, %f)";
        pcVar11 = ") < 0\n";
        pcVar11 = ") == 0\n";
        pcVar11 = ") == true\n";
        pcVar11 = "Bad expression operator: \'%c%c\', expected C style operator";
        pcVar11 = "\t!( [\"%s\"]->IsInstanceActive() ";
        pcVar11 = "\t( [\"%s\"]->IsInstanceActive() ";
        pcVar11 = "does";
        pcVar11 = "false";
        pcVar11 = "pitch";
        pcVar11 = "prop_dynamic";
        pcVar11 = "true";
        pcVar11 = "world";
        pcVar11[iVar8 + 4] = "JanFebMarAprMayJunJulAugSepOctNovDec"[iVar8 + iVar6 * 3];
        pcVar12 = "";
        pcVar12 = "(%f, %f, %f)";
        pcVar12 = "Alpha";
        pcVar12 = "DmeParticleSystemDefinition";
        pcVar12 = "Local player disconnected...\n";
        pcVar12 = "Map transition...\n";
        pcVar12 = "New map...\n";
        pcVar12 = "Round ended...\n";
        pcVar12 = "ai_task";
        pcVar12 = "models/props_misc/wooden_log-1.mdl";
        pcVar13 = "";
        pcVar13 = "#GP_VIPCar_CTDriver";
        pcVar13 = "#GP_VIPCar_CTVIPDriver";
        pcVar13 = "DS:CreateSoundBuffer for 3d front right failed";
        pcVar13 = "DmeParticleSystemDefinition";
        pcVar13 = "FCVAR_NEVER_AS_STRING";
        pcVar13 = "[Debug] Assigning %s to %s, from POTENTIAL VIP list\n";
        pcVar13 = "[Debug] Assigning the BOMB to %s, from BOMB CARRIER list\n";
        pcVar13 = "[Debug] Assigning the BOMB to %s, from OTHERS list\n";
        pcVar13 = "effects/blood_gore";
        pcVar13 = "effects/blood_puff";
        pcVar13 = "models/vehicles/industrial/drivable/%s.mdl";
        pcVar14 = "        reconstructing block ...\n";
        pcVar14 = "";
        pcVar14 = "#TI_Score_HGHKill";
        pcVar14 = "#TI_Score_HostageKill";
        pcVar14 = "#TI_Score_VIPKill";
        pcVar14 = "#TI_Score_VIPKill_XMAS";
        pcVar14 = "#TI_Squad_Bravo";
        pcVar14 = "#TI_Squad_Bravo_DEFENSE";
        pcVar14 = "#TI_Squad_Bravo_PASSENGER";
        pcVar14 = "#TI_Squad_Bravo_Support";
        pcVar14 = "#TI_Squad_Charlie_VIP";
        pcVar14 = "-90 0 0";
        pcVar14 = "90 0 0";
        pcVar14 = "characters/npc5.mdl";
        pcVar14 = "drive_vip_to_car_goal";
        pcVar14 = "escort_vip_car";
        pcVar15 = "";
        pcVar15 = "$noisescale";
        pcVar15 = "Failed filter test";
        pcVar15 = "Inside exclude zones.";
        pcVar15 = "radio r7\n";
        pcVar16 = "#TI_Objective_DE_Attack";
        pcVar16 = "#TI_Objective_DE_Defend";
        pcVar16 = "#TI_Objective_HGrabCT";
        pcVar16 = "#TI_Objective_HGrabTer";
        pcVar16 = "#TI_Objective_HR_Attack";
        pcVar16 = "#TI_Objective_HR_Defend";
        pcVar16 = "#TI_Objective_VIPCar_CT_Drive_VIP_To_Goal";
        pcVar16 = "#TI_Objective_VIPCar_CT_Escort_VIP_OnFoot";
        pcVar16 = "#TI_Objective_VIPCar_Ter_Attack_VIP";
        pcVar16 = "#TI_Objective_VIPCar_Ter_Secure_Case";
        pcVar16 = "#TI_Objective_VIPEscape_VIPM";
        pcVar17 = "        %d pointers, %d sorted, %d scanned\n";
        pcVar17 = "!= [%s] ";
        pcVar17 = ") != 0\n";
        pcVar17 = ") == 0\n";
        pcVar17 = ")->AmmoPercentage() >= 30\n";
        pcVar17 = "... ";
        pcVar17 = "777_left_engine_air_vortex";
        pcVar17 = "777_right_engine_air_vortex";
        pcVar17 = "< [%s] ";
        pcVar17 = "== [%s] ";
        pcVar17 = ">= [%s] ";
        pcVar17 = "Objective.bombing_CT";
        pcVar17 = "Objective.bombing_Terrorists";
        pcVar17 = "\t!FClassnameIs( [%s] ";
        pcVar17 = "\t![%s]->GetWeaponInSlot( ";
        pcVar17 = "\t![%s]->Weapon_CanUse([%s])\n";
        pcVar17 = "\t![%s]->Weapon_OwnsThisType([%s] ";
        pcVar17 = "\tC_BaseEntity::Instance([%s]->GetUseEntity()) != [%s]\n";
        pcVar17 = "\tC_BaseEntity::Instance([%s]->GetUseEntity()) == [%s]\n";
        pcVar17 = "\tFClassnameIs( [%s] ";
        pcVar17 = "\t[%s] == [%s]\n";
        pcVar17 = "\t[entityINVALID] = C_BaseEntity::Instance([%s]->GetPotentialUseEntity())\n";
        pcVar17 = "\t[entityINVALID] = C_BaseEntity::Instance([%s]->GetUseEntity())\n";
        pcVar17 = "\t[entityINVALID] = [%s]->GetActiveWeapon()\n";
        pcVar17 = "\t[output] = [%s]->AngularDistTo( [%s] )";
        pcVar17 = "\t[output] = [%s]->DistTo( [%s] )";
        pcVar17 = "engine_right";
        pcVar18 = "Invalid Steam key size.\n";
        pcVar18 = "Invalid challenge packet.\n";
        pcVar18 = "\t[%s] = C_BaseEntity::Instance([%s]->GetPotentialUseEntity())\n";
        pcVar18 = "\t[%s] = C_BaseEntity::Instance([%s]->GetUseEntity())\n";
        pcVar18 = "endloop";
        pcVar2 = " restore failed entirely\n";
        pcVar2 = " restore got most of the way\n";
        pcVar2 = "";
        pcVar2 = "*DEAD*";
        pcVar2 = "//mod/%s";
        pcVar2 = "<NULL>";
        pcVar2 = "EDIT_SPLIT.MarkedArea";
        pcVar2 = "EDIT_SPLIT.NoMarkedArea";
        pcVar2 = "footstep_dirt";
        pcVar2 = "footstep_water";
        pcVar2 = "gamemode - 8.1 with some 9.0 (full-precision)";
        pcVar2 = "gamemode - 9.0 (full-precision)";
        pcVar2 = "slime_splash_02";
        pcVar2 = "slime_splash_03";
        pcVar2 = "unknown";
        pcVar2 = (char *)FUN_10268930(puVar1,(uint *)"end_point",(uint)&DAT_10326010);
        pcVar2 = (char *)FUN_10268930(puVar1,(uint *)"priority",(uint)&DAT_10324484);
        pcVar2 = (char *)FUN_10268930(puVar1,(uint *)"start_point",(uint)&DAT_10326010);
        pcVar2 = (char *)FUN_10268930(puVar1,(uint *)"sync_track_name",(uint)&DAT_10324484);
        pcVar2 = (char *)FUN_10268930(puVar1,(uint *)"track_name",(uint)&DAT_10324484);
        pcVar2 = (char *)FUN_10268930(this_00,(uint *)"incrementcvar",(uint)&DAT_103236cf);
        pcVar2 = FUN_1003ef70(&local_114,(byte *)"%d (%d/%d)");
        pcVar20 = "Label";
        pcVar22 = "\n    [%d: huff+mtf ";
        pcVar22 = "rt+rld";
        pcVar28 = "1#IND";
        pcVar28 = "1#INF";
        pcVar3 = " COMBINED";
        pcVar3 = "";
        pcVar3 = "- \"%s\" = \"%S\"\n";
        pcVar3 = "- \"%s\" = \"%i\"\n";
        pcVar3 = "- \"%s\" = \"%s\" (local)\n";
        pcVar3 = "- \"%s\" = \"%s\"\n";
        pcVar3 = "< [%s] ";
        pcVar3 = "== true\n";
        pcVar3 = "FCVAR_NEVER_AS_STRING";
        pcVar3 = "InsideTransition";
        pcVar3 = "OutsideTransition";
        pcVar3 = "RocketCrater_Asphalt";
        pcVar3 = "RocketCrater_Dirt";
        pcVar3 = "RocketCrater_Grass";
        pcVar3 = "Scorch";
        pcVar3 = "Unable to condump to ";
        pcVar3 = "body_pitch";
        pcVar3 = "body_yaw";
        pcVar3 = "console dumped to ";
        pcVar3 = "direct";
        pcVar3 = "false";
        pcVar3 = "impact_fx_chinesefood";
        pcVar3 = "impact_fx_italianfood";
        pcVar3 = "impact_fx_pastry";
        pcVar3 = "pose_parameters";
        pcVar3 = "wheeled_controllable";
        pcVar3 = (char *)(**(code **)(*piVar4 + 0x50))("hltv_clients");
        pcVar3 = (char *)(**(code **)(*piVar4 + 0x50))("hltv_proxies");
        pcVar3 = (char *)(**(code **)(*piVar4 + 0x50))("hltv_slots");
        pcVar3 = (char *)FUN_1039db00(local_c,(uint *)"close",(uint)&DAT_1043677a);
        pcVar3 = (char *)FUN_1039db00(local_c,(uint *)"locked",(uint)&DAT_1043677a);
        pcVar3 = (char *)FUN_1039db00(local_c,(uint *)"unlocked",(uint)&DAT_1043677a);
        pcVar3 = FUN_1017c740((byte *)"Tick %i");
        pcVar3 = FUN_1017c740((byte *)"Time %.3f");
        pcVar4 = "   %i : %s\n";
        pcVar4 = " ALLREADY";
        pcVar4 = "";
        pcVar4 = "#L4D360UI_LegacyOff";
        pcVar4 = "#TI_Score_HG_RescBonusCt";
        pcVar4 = "#TI_Score_HG_RescBonusTer";
        pcVar4 = "#VideoOptions_Queued_Mode";
        pcVar4 = "%03d,";
        pcVar4 = "%s \"%s\"\n";
        pcVar4 = "//mod/%s%02d.%s";
        pcVar4 = "<<illegal>>";
        pcVar4 = "<old particle system>";
        pcVar4 = "EDIT_CONNECT.AllDirections";
        pcVar4 = "EDIT_DISCONNECT.MarkedArea";
        pcVar4 = "EDIT_DISCONNECT.NoMarkedArea";
        pcVar4 = "FCVAR_NEVER_AS_STRING";
        pcVar4 = "No Error";
        pcVar4 = "PaintSplatBlue";
        pcVar4 = "PaintSplatGreen";
        pcVar4 = "PaintSplatPink";
        pcVar4 = "RecursiveLoadFromBuffer:  got NULL key";
        pcVar4 = "addfriend";
        pcVar4 = "challenging";
        pcVar4 = "demo_resume\n";
        pcVar4 = "friendremove";
        pcVar4 = "friendrequestaccept";
        pcVar4 = "friendrequestignore";
        pcVar4 = "point_viewcontrol";
        pcVar4 = "setinfo %s \"%s\"\n";
        pcVar4 = "voice_micdata.wav";
        pcVar4 = (char *)FUN_1042f3d0(puVar2,(uint *)"Sound",(uint)puVar3);
        pcVar4 = FUN_101f6800((byte *)"%s_destroyed.mdl");
        pcVar5 = " CLIENTREADY";
        pcVar5 = " {0x%x, 0x%x}";
        pcVar5 = "";
        pcVar5 = "#L4D360UI_Disabled";
        pcVar5 = "#L4D360UI_SteamOverlay_Title";
        pcVar5 = "//mod/%s";
        pcVar5 = "<NULL>";
        pcVar5 = "AMMO_OOZ_BULLETS";
        pcVar5 = "Arming Bomb - Site A";
        pcVar5 = "Arming Bomb - Site B";
        pcVar5 = "Arming Bomb - Site C";
        pcVar5 = "CHudMiniMap";
        pcVar5 = "Connecting to";
        pcVar5 = "Failed to create net channel.\n";
        pcVar5 = "Invalid user info.\n";
        pcVar5 = "Pause";
        pcVar5 = "Type %s of meta class %s undefined!\n";
        pcVar5 = "Unable to find type of meta class %s in file %s\n";
        pcVar5 = "[Cloud]: FAILED saving %s in remote storage\n";
        pcVar5 = "[Cloud]: SUCCEESS saving %s in remote storage\n";
        pcVar5 = "\n    combined CRCs: stored = 0x%x, computed = 0x%x";
        pcVar5 = "capture_civ";
        pcVar5 = "contain_hostage";
        pcVar5 = "demorestart";
        pcVar5 = "gameui_activate";
        pcVar5 = "media/lobby/menu_bg00.ogv";
        pcVar5 = "none";
        pcVar5 = "param";
        pcVar5 = "play music/ravenholm_1.mp3;";
        pcVar5 = "prop_breakdown";
        pcVar5 = "rescue_civ";
        pcVar5 = "rescue_hostage";
        pcVar5 = "restart setpos\n";
        pcVar5 = "sentence";
        pcVar5 = "stat_";
        pcVar5 = "stringtable_dictionary_fallback_xbox.dct";
        pcVar5 = "stringtable_dictionary_xbox.dct";
        pcVar5 = "voice_decompressed.wav";
        pcVar5 = (char *)(**(code **)(*piVar2 + 0x50))("hltv_clients");
        pcVar5 = (char *)(**(code **)(*piVar2 + 0x50))("hltv_slots");
        pcVar5 = (char *)(**(code **)(piVar2[1] + 0x50))("hltv_clients");
        pcVar5 = (char *)FUN_102659b0(pcVar4,"maps\\");
        pcVar5 = FUN_1017c740((byte *)"\"%s\" ");
        pcVar5 = FUN_1017c740((byte *)"map %s\n");
        pcVar5 = FUN_102640a0(pcVar4,(int)"TexGroup_Global_");
        pcVar5 = FUN_103980c0(pcVar5,(int)"metal");
        pcVar5 = FUN_1042c450((char *)pbVar1,(int)"InviteUI_");
        pcVar6 = " LOADING";
        pcVar6 = " stop";
        pcVar6 = "";
        pcVar6 = "#GameUI_AspectNormal";
        pcVar6 = "#GameUI_AspectWide16x10";
        pcVar6 = "#GameUI_AspectWide16x9";
        pcVar6 = "#GameUI_Fullscreen";
        pcVar6 = "#GameUI_Windowed";
        pcVar6 = "#L4D360UI_Disabled";
        pcVar6 = "#L4D360UI_VideoOptions_Windowed_NoBorder";
        pcVar6 = "#Valve_Reject_CD_Key_In_Use";
        pcVar6 = "%-30s";
        pcVar6 = "%f %f %f";
        pcVar6 = "--> %-26s";
        pcVar6 = "Default";
        pcVar6 = "Default.Bombing";
        pcVar6 = "EDIT_CONNECT.Added";
        pcVar6 = "EDIT_CONNECT.AllDirections";
        pcVar6 = "FCVAR_NEVER_AS_STRING";
        pcVar6 = "Heli.Apache_Rotor_Damaged";
        pcVar6 = "North";
        pcVar6 = "NorthEast";
        pcVar6 = "NorthWest";
        pcVar6 = "South";
        pcVar6 = "SouthEast";
        pcVar6 = "SouthWest";
        pcVar6 = "TACTICALTV";
        pcVar6 = "Unknown format.";
        pcVar6 = "active";
        pcVar6 = "binary";
        pcVar6 = "extrapolated [%.2f]";
        pcVar6 = "fadetime";
        pcVar6 = "interpolated [%.2f]";
        pcVar6 = "loading";
        pcVar6 = "not connected";
        pcVar6 = "off";
        pcVar6 = "player";
        pcVar6 = "weapon_tracers";
        pcVar6 = (char *)(**(code **)(*param_1 + 0x28))("hostname",&DAT_104eefb3);
        pcVar6 = (char *)FUN_1039db00(puVar4,(uint *)"Sound",(uint)puVar5);
        pcVar6 = (char *)FUN_1042f3d0(this_00,(uint *)"%keywords",(uint)&DAT_104eefb3);
        pcVar6 = FUN_1017c740((byte *)"demo_gototick %d 0 1\n");
        pcVar6 = FUN_101f6800((byte *)"%s.mdl");
        pcVar7 = " != [%s] ";
        pcVar7 = " (dormant)";
        pcVar7 = " < [%s] ";
        pcVar7 = " == [%s] ";
        pcVar7 = " >= [%s] ";
        pcVar7 = " QUEUED";
        pcVar7 = "!= [%s] ";
        pcVar7 = "";
        pcVar7 = ") == 0\n";
        pcVar7 = "*** Encountered VTF invalid texture size!\n";
        pcVar7 = "*** Encountered VTF volume texture cubemap!\n";
        pcVar7 = "*.*";
        pcVar7 = "< [%s] ";
        pcVar7 = "<unknown>";
        pcVar7 = "== [%s] ";
        pcVar7 = ">= [%s] ";
        pcVar7 = "CHunkMemory";
        pcVar7 = "Client Failed to find packet footer";
        pcVar7 = "Client Failed to find packet headers";
        pcVar7 = "Console";
        pcVar7 = "Couldn\'t CRC map %s, disconnecting\n";
        pcVar7 = "DrpShaderDetail";
        pcVar7 = "ERROR! Couldn\'t send snapshot.";
        pcVar7 = "FCVAR_NEVER_AS_STRING";
        pcVar7 = "Icon Target handle went invalid before the lesson started!";
        pcVar7 = "Icon Target is using effect NODRAW and allow_nodraw_target is false!";
        pcVar7 = "Missing map %s, disconnecting\n";
        pcVar7 = "__int128";
        pcVar7 = "benchmark";
        pcVar7 = "char";
        pcVar7 = "command";
        pcVar7 = "debugtext";
        pcVar7 = "false";
        pcVar7 = "gasmask";
        pcVar7 = "goggles";
        pcVar7 = "hostage_entity";
        pcVar7 = "local_player_on_fire";
        pcVar7 = "mm/new/bullet_count";
        pcVar7 = "mm/new/bullet_terro";
        pcVar7 = "nothing";
        pcVar7 = "restart setpos\n";
        pcVar7 = "wchar_t";
        pcVar7 = (char *)FUN_1039db00(this_00,(uint *)"%keywords",(uint)&DAT_1043677a);
        pcVar7 = FUN_100d0740((byte *)"%i / %i");
        pcVar7 = FUN_1017c740((byte *)"map %s\n");
        pcVar7 = FUN_1042c450(pcVar7,(int)"virtual_ui_command_");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"EnumerateLoadedModules64");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"StackWalk64");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymCleanup");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymEnumerateModules64");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymFromAddr");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymGetLineFromAddr64");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymGetModuleInfo64");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymGetOptions");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymLoadModule64");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymSetOptions");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymSetSearchPath");
        pcVar7 = GetProcAddress(*(HMODULE *)(param_1 + 8),"SymUnloadModule64");
        pcVar70 = "      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\n";
        pcVar8 = "";
        pcVar8 = "#DeathMsg_LeftZone";
        pcVar8 = "#L4D360UI_AudioOptions_CaptionOn";
        pcVar8 = "#L4D360UI_AudioOptions_CaptionSubtitles";
        pcVar8 = "#RC_Skill_Normal";
        pcVar8 = "#RC_Skill_Pro";
        pcVar8 = "#TI_Score_CivCap";
        pcVar8 = "#TI_Score_CivSave";
        pcVar8 = "#TI_Score_HoSave";
        pcVar8 = "#TI_joined_team_ffa";
        pcVar8 = "#game_player_joined_autoteam";
        pcVar8 = "#game_player_joined_team";
        pcVar8 = "#game_server_cvar_changed";
        pcVar8 = "747.Engine_Flameout";
        pcVar8 = "All Files (*.*)";
        pcVar8 = "Audible";
        pcVar8 = "BuildDialog";
        pcVar8 = "FCVAR_NEVER_AS_STRING";
        pcVar8 = "Friend; Audible";
        pcVar8 = "GetBestEquipment::Choosing Nightvision\n";
        pcVar8 = "NPC: %s canceled running script %s due to behavior change\n";
        pcVar8 = "NPC: %s canceled script %s without playing, due to behavior change\n";
        pcVar8 = "Press DUCK to Show Menu";
        pcVar8 = "Press JUMP to Cycle Camera Modes";
        pcVar8 = "ROOM Detected \n";
        pcVar8 = "TUNNEL Detected \n";
        pcVar8 = "car-9";
        pcVar8 = "changed";
        pcVar8 = "client";
        pcVar8 = "faceandhair";
        pcVar8 = "false";
        pcVar8 = "front_end";
        pcVar8 = "library";
        pcVar8 = "position";
        pcVar8 = "quit\n";
        pcVar8 = "quit_gameconsole\n";
        pcVar8 = "right eye";
        pcVar8 = "truck-4";
        pcVar8 = (char *)FUN_1039db00(puVar7,(uint *)"model",(uint)"car-12");
        pcVar8 = FUN_100d0740((byte *)"death_%s");
        pcVar8 = FUN_102640a0(pcVar9,(int)"models");
        pcVar9 = "  Two-pass.";
        pcVar9 = "";
        pcVar9 = "#EORPS_Award";
        pcVar9 = "#EORPS_DeltaGP";
        pcVar9 = "#EORPS_DeltaXP";
        pcVar9 = "#EORPS_RP";
        pcVar9 = "#EORPS_Ratio";
        pcVar9 = "#Game_Pregame";
        pcVar9 = "#TI_RoundBegins";
        pcVar9 = "#TI_RoundBeginsNew";
        pcVar9 = "%s - Avg:%5d    - Max:%5d    -%5d   /s\n";
        pcVar9 = "%s - Avg:%5d Kb - Max:%5d Kb -%5d Kb/s\n";
        pcVar9 = "%s - Avg:%5d ms - Max:%5d ms -%5d ms/s\n";
        pcVar9 = "<<illegal>>";
        pcVar9 = "FixAPI Server Uninitialised error!\n";
        pcVar9 = "FixAPI certificate invalid, cannot connect without being in a room!\n";
        pcVar9 = "Honda_impact_heavy";
        pcVar9 = "Honda_impact_medium";
        pcVar9 = "SERVER";
        pcVar9 = "STEAM validation rejected\n";
        pcVar9 = "WindThinkContext";
        pcVar9 = "animation";
        pcVar9 = "explode_cookies-1";
        pcVar9 = "false";
        pcVar9 = "mapname";
        pcVar9 = "peanuts";
        pcVar9 = "width";
        pcVar9 = "world";
        piVar1 = (int *)(*(code *)local_c)("VPhysicsSurfaceProps001",0);
        piVar1 = (int *)Error("Can\'t find title image %s\n","materials/vgui/title.vtf");
        piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar1,"info_dog_waypoint_1");
        piVar1 = FUN_102ba640(this_00,(int)this,"ScrollBar",'\x01',1);
        piVar1 = FUN_103d8f10(this_00,(int)this,"ScrollBar",'\x01',1);
        piVar1 = FUN_1047c910(this_00,(int)this,"ScrollBar",'\x01',1);
        piVar2 != (int *)0x0; piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar2,"env_screenoverlay")
        piVar2 = (int *)(*(code *)param_1)("fixapi2_GameAPI001",0);
        piVar2 = (int *)(**(code **)(*piVar2 + 0x2c))("-steam");
        piVar2 = (int *)FUN_10135420("hostage_entity",-1,'\x01');
        piVar2 = FUN_100a7c20("instanced_scripted_scene",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0
        piVar2 = FUN_102b2d60(pvVar1,param_1,"ConversionModeMenu",1);
        piVar2 = FUN_102b2d60(pvVar1,param_1,"LanguageMenu",1);
        piVar2 = FUN_103c9d10(pvVar1,param_1,"ConversionModeMenu",1);
        piVar2 = FUN_103c9d10(pvVar1,param_1,"LanguageMenu",1);
        piVar2 = FUN_1043f640(pvVar1,param_1,"Box",1);
        piVar2 = FUN_1043f640(pvVar1,param_1,"Line",1);
        piVar2 = FUN_10472550(pvVar1,param_1,"ConversionModeMenu",1);
        piVar2 = FUN_10472550(pvVar1,param_1,"LanguageMenu",1);
        piVar3 != (int *)0x0; piVar3 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar3,"func_areaportal"))
        piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("nav_blocked",0,0);
        piVar3 = (int *)(**(code **)(*piVar3 + 0x2c))("$SHADOWDEPTHTEXTURE",&local_5,0);
        piVar3 = (int *)(**(code **)(*piVar6 + 0x2c))("$fogcolor",0,1);
        piVar3 = (int *)FUN_10135420("point_devshot_camera",-1,'\x01');
        piVar4 = (int *)(**(code **)(*DAT_106cb7f4 + 0x150))(uVar3,"Other textures",0,0);
        piVar4 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(pcVar5,"Other textures",1,0);
        piVar4 = (int *)(**(code **)(*piVar4 + 0x2c))("$spritesize",(int)&param_1 + 3,0);
        piVar4 = (int *)(**(code **)(*piVar6 + 0x2c))("$fogenable",0,1);
        piVar4 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar4,"info_player_deathmatch");
        piVar4 = (int *)FUN_10135420("info_mapinfo",-1,'\x01');
        piVar4 = (int *)FUN_10444d70(this,(byte *)"BtnEditButtons",0);
        piVar4 = (int *)FUN_10444d70(this,(byte *)"BtnEditSticks",0);
        piVar4 = FUN_1015ae30(&DAT_10641138,"TacticalTV");
        piVar4 = FUN_1029c040(pvVar2,(int)this,"OpenButton","#FileOpenDialog_Select",(int)this,
        piVar4 = FUN_102c6890(pvVar1,"BuildMode - Error saving file",
        piVar4 = FUN_102e5b70(pvVar2,this,"SplitterHandle",*(int *)((int)this + 0x1f0),iVar5,1);
        piVar4 = FUN_10324120(pvVar3,param_1 + 0x224,"GamePanel",1);
        piVar4 = FUN_103d05d0(pvVar1,"BuildMode - Error saving file",
        piVar4 = FUN_10462790(pvVar2,(int)this,"OpenButton","#FileOpenDialog_Select",(int)this,
        piVar4 = FUN_10478ab0(pvVar1,"BuildMode - Error saving file",
        piVar4[6] = (int)"buffer error";
        piVar5 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("item_drop",0,0);
        piVar5 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("item_closeby",0,0);
        piVar5 = (int *)(**(code **)(*piVar6 + 0x2c))("$fogstart",0,1);
        piVar5 = (int *)FUN_10135420("entityflame",-1,'\x01');
        piVar5 = FUN_101747d0(0,"spraycan");
        piVar6 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_gui",0,0,0);
        piVar6 = (int *)(**(code **)(*piVar6 + 0x2c))("$fogend",0,1);
        piVar6 = (int *)FUN_104235d0(*(void **)(local_c * 4 + *piVar5),(uint *)"functionName");
        piVar6 = (int *)FUN_10444d70(this,(byte *)"BtnSpecCustom",0);
        piVar6 = (int *)FUN_104d70b0(*(void **)(local_c * 4 + *piVar5),(uint *)"functionName");
        piVar6 = FUN_10295010(pvVar2,(int)this,"Name",1);
        piVar7 = (int *)FUN_10444d70((void *)((int)this + -0x1dc),(byte *)"ServerName",0);
        piVar7 = (int *)FUN_104d70b0(param_2,(uint *)"particleSystemDefinitions");
        piVar9 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar9,"info_player_start")) {
        ppiVar7[-1] = (int *)"Server: added caption file: %s\n";
        ppvVar10 = (void **)FUN_10444d70(this,(byte *)"PerksPanel",1);
        ppvVar10 = (void **)FUN_10444d70(this,(byte *)"RequisitionsPanel",1);
        ppvVar13 = (void **)FUN_10444d70(piVar5,(byte *)"PerksPanel",1);
        ppvVar13 = (void **)FUN_10444d70(piVar5,(byte *)"RequisitionsPanel",1);
        ppvVar2 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)ppvVar2,"prop_door_rotating")) {
        ppvVar4 = (void **)FUN_10135420("prop_rocket_crate",-1,'\x01');
        ppvVar4 = (void **)FUN_10464a30(pvVar1,param_1,"Box",1);
        ppvVar7 = (void **)FUN_10135420("dynamic_prop",-1,'\x01');
        ppvVar7 = (void **)FUN_10135420("prop_sparetire",-1,'\x01');
        ppvVar8 = (void **)FUN_10135420("dog_entity",-1,'\x01');
        puStack24 = FUN_1042ea30(pvVar6,"sprays_manifest");
        puVar1 = FUN_100b10f0(local_738,(byte *)"Tip_%d");
        puVar1 = FUN_100b10f0(local_738,(byte *)"Tip_%d_NumKeys");
        puVar1 = FUN_100b10f0(local_844,(byte *)"Tip_%d_Image");
        puVar1 = FUN_100d0740((byte *)"%s%02d:%02d");
        puVar1 = FUN_100d0740((byte *)"%s%2d:%02d:%02d");
        puVar1 = FUN_101b64b0(local_854,(byte *)"cmd%d bind \"%s\" \"%s\"\n");
        puVar1 = FUN_10267e50(this_00,"OpenContextMenu",(uint *)"itemID",0xffffffff);
        puVar1 = FUN_1039d270(this_00,"OpenContextMenu",(uint *)"itemID",0xffffffff);
        puVar1 = FUN_1042e930(this_00,"ItemDoubleLeftClick",(uint *)"itemID",
        puVar1 = FUN_1042e930(this_00,"OpenContextMenu",(uint *)"itemID",0xffffffff);
        puVar1 = FUN_1042ea30(this_00,"ApplyButtonEnable");
        puVar1 = FUN_1042ea30(this_00,"deleted");
        puVar10 = FUN_100b10f0(local_15c,(byte *)"hitbox%d_explodemodel_%d");
        puVar10 = FUN_10268340(this_00,(uint *)"operator",0);
        puVar10 = FUN_1042ee30(local_10,(uint *)"DmeLinearAttachedPositionInitializer",1);
        puVar10 = FUN_1042ee30(local_10,(uint *)"DmeMuzzleFlashSizeInitializer",1);
        puVar10 = FUN_1042ee30(local_10,(uint *)"DmeRandomAlphaInitializer",1);
        puVar10 = FUN_1042ee30(local_10,(uint *)"DmeRandomRollInitializer",1);
        puVar10 = FUN_1042ee30(local_10,(uint *)"DmeRandomRollSpeedInitializer",1);
        puVar10 = FUN_1042ee30(puVar10,(uint *)"DmeConstantVelocityInitializer",1);
        puVar10 = FUN_1042ee30(puVar10,(uint *)"DmeSpriteEmitter",1);
        puVar13 = FUN_10123660(&DAT_1064ae18,(int *)"New Task",param_1[0x1fe]);
        puVar2 = (undefined4 *)FUN_101a5c10((byte *)"Error reading string table %s\n");
        puVar2 = FUN_10267e50(this,"SetSortColumn",(uint *)"column",uVar3);
        puVar2 = FUN_10267e50(this_00,"KeyCodeTyped",(uint *)&DAT_103c8ea4,0x40);
        puVar2 = FUN_10267f50(this_00,"FindDefaultButton");
        puVar2 = FUN_10267f50(this_00,"MenuClose");
        puVar2 = FUN_1039d270(this,"SetSortColumn",(uint *)"column",uVar3);
        puVar2 = FUN_1039d370(this_00,"MenuClose");
        puVar2 = FUN_1042e930(pvVar1,"ItemContextMenu",(uint *)"itemID",*(uint *)((int)this + 0x25c)
        puVar2 = FUN_1042e930(pvVar1,"ItemLeftClick",(uint *)"itemID",*(uint *)((int)this + 0x25c));
        puVar2 = FUN_1042e930(this,"SetSortColumn",(uint *)"column",uVar3);
        puVar2 = FUN_1042e930(this_00,"KeyCodeTyped",(uint *)&DAT_10539390,0x40);
        puVar2 = FUN_1042ea30(this_00,"FindDefaultButton");
        puVar2 = FUN_1042ea30(this_00,"MenuClose");
        puVar3 = (uint *)FUN_101a5c10((byte *)"Disconnected");
        puVar3 = FUN_10021180(local_110,(byte *)"kickid %d bot_kickall\n");
        puVar3 = FUN_10021180(puVar10,(byte *)"(%f, %f, %f)");
        puVar3 = FUN_100b10f0(local_110,(byte *)"spec_mode %i\n");
        puVar3 = FUN_100b10f0(local_11c,(byte *)"cmd%d unbind \"%s\"\n");
        puVar3 = FUN_100d0740((byte *)"models/player/gibbed/_limbs/arm-%d.mdl");
        puVar3 = FUN_100d0740((byte *)"models/player/gibbed/_limbs/leg-%d.mdl");
        puVar3 = FUN_100d0740((byte *)"models/player/gibbed/_limbs/torso-%d.mdl");
        puVar3 = FUN_101f6800((byte *)"Hostage_%d.Scared");
        puVar3 = FUN_10267d30(pvVar2,"OnEngineLevelLoadingSession",(uint *)"reason","MatchSession");
        puVar3 = FUN_10267d30(this_00,"Command",(uint *)"command",(char *)param_1);
        puVar3 = FUN_10267d30(this_00,"OnEngineLevelLoadingSession",(uint *)"reason","CreateSession"
        puVar3 = FUN_10267db0(this_00,"OnScreenSizeChanged",(uint *)"oldwide",param_1,
        puVar3 = FUN_10267e50(this_00,"OpenContextMenu",(uint *)"itemID",(uint)piVar7);
        puVar3 = FUN_10267e50(this_00,"SliderMoved",(uint *)&DAT_10343e98,2);
        puVar3 = FUN_10267f50(this,"benchmark");
        puVar3 = FUN_10267f50(this_00,"OpenColumnChoiceMenu");
        puVar3 = FUN_102a4ef0(pvVar2,(int)this,(int *)"Choose .wav file",'\x01',0,1);
        puVar3 = FUN_1039d1d0(this_00,"OnScreenSizeChanged",(uint *)"oldwide",param_1,
        puVar3 = FUN_1039d270(this_00,"OpenContextMenu",(uint *)"itemID",(uint)piVar7);
        puVar3 = FUN_1039d370(this_00,"OpenColumnChoiceMenu");
        puVar3 = FUN_1042e810(pvVar2,"Command",(uint *)"command",pcVar5);
        puVar3 = FUN_1042e810(this_00,"Command",(uint *)"command",(char *)param_1);
        puVar3 = FUN_1042e810(this_00,"Command",(uint *)"command",pcVar2);
        puVar3 = FUN_1042e890(this_00,"OnScreenSizeChanged",(uint *)"oldwide",param_1,
        puVar3 = FUN_1042e930(this_00,"OpenContextMenu",(uint *)"itemID",(uint)piVar7);
        puVar3 = FUN_1042ea30(pvVar2,"LoadedIntoGame");
        puVar3 = FUN_1042ea30(pvVar2,"PanelUnSelected");
        puVar3 = FUN_1042ea30(pvVar2,"RadialMenu");
        puVar3 = FUN_1042ea30(this_00,"OpenColumnChoiceMenu");
        puVar3 = FUN_1042ea30(this_00,"perfdata");
        puVar3 = FUN_10464a30(pvVar1,param_1,"Line",1);
        puVar4 = (undefined4 *)FUN_10399710((byte *)param_1,(byte *)"angles");
        puVar4 = FUN_10021180(local_184,(byte *)"(%d), (%d)");
        puVar4 = FUN_100b10f0(local_144,(byte *)"vgui/mm/bg/background_02%s");
        puVar4 = FUN_100d0740((byte *)"vgui/%s");
        puVar4 = FUN_1017c740((byte *)"maps/%s");
        puVar4 = FUN_10212cf0(local_14 * 0x28,"occluder data",'\x01');
        puVar4 = FUN_10212cf0(uVar5,"occluder data",'\x01');
        puVar4 = FUN_10267d30(pvVar3,"Command",(uint *)"Command","EnableColorCorrection");
        puVar4 = FUN_10267d30(pvVar3,"SetClipboardText",(uint *)&DAT_10353100,local_48);
        puVar4 = FUN_10267f50(pvVar3,"TreeViewFinishRangeSelection");
        puVar4 = FUN_10267f50(pvVar3,"TreeViewStartRangeSelection");
        puVar4 = FUN_102a4ef0(pvVar3,param_1,(int *)"Choose file to include",'\x01',0,1);
        puVar4 = FUN_1039d150(pvVar3,"SetClipboardText",(uint *)&DAT_10464104,local_48);
        puVar4 = FUN_1039d370(pvVar3,"TreeViewFinishRangeSelection");
        puVar4 = FUN_1039d370(pvVar3,"TreeViewStartRangeSelection");
        puVar4 = FUN_1042e810(pvVar3,"SetClipboardText",(uint *)&DAT_10524ef8,local_48);
        puVar4 = FUN_1042e930(pvVar3,"PanelSelected",(uint *)"state",0);
        puVar4 = FUN_1042e930(pvVar3,"PanelSelected",(uint *)"state",1);
        puVar4 = FUN_1042ea30(pvVar3,"TreeViewFinishRangeSelection");
        puVar4 = FUN_1042ea30(pvVar3,"TreeViewStartRangeSelection");
        puVar5 = (uint *)FUN_100d0740((byte *)"prim_%i");
        puVar5 = (uint *)FUN_100d0740((byte *)"sec_%i");
        puVar5 = (uint *)FUN_1014fb90(local_18,(int *)"effects/tesla_glow_noz");
        puVar5 = FUN_10021180((undefined4 *)&stack0xfffffcbc,(byte *)"%s %s");
        puVar5 = FUN_10021180(local_11c,(byte *)"(%f, %f, %f)");
        puVar5 = FUN_10021180(local_1d8,(byte *)"%f %f %f");
        puVar5 = FUN_10021180(local_1d8,(byte *)"scripts/vehicles/%s.txt");
        puVar5 = FUN_10021180(puVar6,(byte *)"(%f, %f, %f)");
        puVar5 = FUN_100b10f0(local_114,(byte *)"#TI_%s");
        puVar5 = FUN_100d0740((byte *)"sound/%s");
        puVar5 = FUN_10267d30(pvVar4,"DirectorySelected",(uint *)&DAT_10358498,local_204);
        puVar5 = FUN_10267e50(pvVar3,"SetAsCurrentDefaultButton",(uint *)"state",1);
        puVar5 = FUN_10267ed0(this_00,"TextChanged",(uint *)&DAT_10353100,param_1);
        puVar5 = FUN_10267f50(pvVar3,"PageChanged");
        puVar5 = FUN_10267f50(pvVar3,"PageTabActivated");
        puVar5 = FUN_10267f50(pvVar4,"CancelMakeFileWriteable");
        puVar5 = FUN_10267f50(pvVar4,"MakeFileWriteable");
        puVar5 = FUN_10267f50(pvVar4,"MenuItemSelected");
        puVar5 = FUN_10267f50(pvVar4,"TextNewLine");
        puVar5 = FUN_1026eb40(&local_18,"console");
        puVar5 = FUN_1039d270(pvVar3,"SetAsCurrentDefaultButton",(uint *)"state",1);
        puVar5 = FUN_1039d2f0(this_00,"TextChanged",(uint *)&DAT_10464104,(short *)param_1);
        puVar5 = FUN_1039d370(pvVar4,"MenuItemSelected");
        puVar5 = FUN_1039d370(pvVar4,"TextNewLine");
        puVar5 = FUN_1042e930(pvVar3,"SetAsCurrentDefaultButton",(uint *)"state",1);
        puVar5 = FUN_1042e9b0(this_00,"TextChanged",(uint *)&DAT_10524ef8,(short *)param_1);
        puVar5 = FUN_1042ea30(pvVar3,"PageChanged");
        puVar5 = FUN_1042ea30(pvVar3,"PageTabActivated");
        puVar5 = FUN_1042ea30(pvVar4,"MenuItemSelected");
        puVar5 = FUN_1042ea30(pvVar4,"TextNewLine");
        puVar5 = FUN_1042ee30(*(void **)(param_1 + 8),(uint *)"Default",1);
        puVar5 = FUN_1042ee30(puVar6,(uint *)"DmeRollSpeedAttenuateUpdater",1);
        puVar5 = FUN_1042ee30(puVar6,(uint *)"DmeSpriteEmitter",1);
        puVar6 = (undefined *)FUN_1042f3d0(this_00,(uint *)"character",(uint)&DAT_104eefb3);
        puVar6 = (undefined4 *)(*pcVar5)("G15_INTERFACE_VERSION001",0);
        puVar6 = FUN_0041ee00(local_8,"st",0);
        puVar6 = FUN_10021180(puVar10,(byte *)"(%f, %f, %f)");
        puVar6 = FUN_100d0740((byte *)"police_light%d");
        puVar6 = FUN_10267d30(pvVar3,"CreateNewControl",(uint *)&DAT_10353100,
        puVar6 = FUN_10267d30(this_00,"command",(uint *)"command","BlendFactorUpdate");
        puVar6 = FUN_10267f50(this_01,"descriptor");
        puVar6 = FUN_1039d150(pvVar3,"CreateNewControl",(uint *)&DAT_10464104,
        puVar6 = FUN_1042e810(pvVar3,"CreateNewControl",(uint *)&DAT_10524ef8,
        puVar6 = FUN_1042e930(pvVar8,"AddFriend",(uint *)"userid",*(uint *)((int)this + 0x200));
        puVar6 = FUN_1042e930(pvVar8,"RemoveFriend",(uint *)"userid",*(uint *)((int)this + 0x200));
        puVar6 = FUN_1042ea30(pvVar5,"OldParticleSystem_ActivateEmitter");
        puVar6 = FUN_1042ee30(local_8,(uint *)"DmeDecayVelocityInitializer",1);
        puVar6 = FUN_1042ee30(local_8,(uint *)"DmePositionPointToEntityInitializer",1);
        puVar6 = FUN_1042ee30(local_8,(uint *)"DmeRandomSizeInitializer",1);
        puVar6 = FUN_1042ee30(puVar5,(uint *)"updaters",1);
        puVar6 = FUN_1042ee30(puVar6,(uint *)"DmeRandomEmitter",1);
        puVar6 = FUN_1042ee30(puVar7,(uint *)"updaters",1);
        puVar7 = (uint *)FUN_1014fb90(this_00,(int *)"effects/yellowflare_noz");
        puVar7 = (undefined4 *)(**(code **)(*param_1 + 0x14))(local_20,"ControlBG",0xff000000);
        puVar7 = FUN_10031640(local_650,(byte *)"overviews/%s");
        puVar7 = FUN_10267cb0(this_00,"LabelChanged",(uint *)"original",pcVar6,(uint *)pcVar8,
        puVar7 = FUN_10267d30(this_00,"command",(uint *)"command","BlendFactorUpdate");
        puVar7 = FUN_10267e50(pvVar5,puVar6,(uint *)"operationPerformed",0);
        puVar7 = FUN_1039d0d0(this_00,"LabelChanged",(uint *)"original",pcVar6,(uint *)pcVar8,
        puVar7 = FUN_1042e790(this_00,"LabelChanged",(uint *)"original",pcVar6,(uint *)pcVar8,
        puVar7 = FUN_1042e930(pvVar6,"KeyCodePressed",(uint *)&DAT_10539390,(uint)param_1);
        puVar7 = FUN_1042ee30(puVar6,(uint *)"emitter1",1);
        puVar7 = FUN_1042ee30(puVar7,(uint *)"DmeSpriteEmitter",1);
        puVar8 = FUN_10021180(puVar6,(byte *)"(%f, %f, %f)");
        puVar8 = FUN_100b10f0(local_140,(byte *)"SetDevice_%i");
        puVar8 = FUN_10243420(puVar6,(uint *)"attenuation");
        puVar8 = FUN_10243420(puVar6,(uint *)"direction");
        puVar8 = FUN_10243420(puVar6,(uint *)"exponent");
        puVar8 = FUN_10243420(puVar6,(uint *)"origin");
        puVar8 = FUN_10243420(puVar6,(uint *)"theta");
        puVar8 = FUN_10267f50(pvVar7,"Hotkey");
        puVar8 = FUN_10267f50(pvVar7,"Repaint");
        puVar8 = FUN_1039d370(pvVar7,"Hotkey");
        puVar8 = FUN_1039d370(pvVar7,"Repaint");
        puVar8 = FUN_1042ea30(pvVar7,"Hotkey");
        puVar8 = FUN_1042ea30(pvVar7,"Repaint");
        puVar8 = FUN_1042ee30(local_8,(uint *)"DmeRandomLifetimeInitializer",1);
        puVar8 = FUN_1042ee30(puVar6,(uint *)"DmeAttachmentVelocityInitializer",1);
        puVar8 = FUN_1042ee30(puVar6,(uint *)"DmeRandomRollInitializer",1);
        puVar8 = FUN_1042ee30(puVar6,(uint *)"DmeRandomRollSpeedInitializer",1);
        puVar8 = FUN_1042ee30(puVar6,(uint *)"DmeRandomValueColorInitializer",1);
        puVar8 = FUN_1042ee30(puVar6,(uint *)"DmeRollSpeedAttenuateUpdater",1);
        puVar9 = FUN_10031640(local_324,(byte *)"content Path: %s\n");
        puVar9 = FUN_10267f50(pvVar8,"StoreUndo");
        puVar9 = FUN_1039d370(pvVar8,"StoreUndo");
        puVar9 = FUN_1042ea30(pvVar8,"StoreUndo");
        pvVar4 = (void *)FUN_101c7240(this,"CarDoor_Open",0,0);
        pvVar5 = (void *)FUN_102527a0(pCVar4,"wb6");
        pwVar3 = _wcspbrk(param_3,L"=;");
        return "Chat_Team_Dead";
        return "Visual C++ CRT: Not enough memory to complete call to strerror.";
        return "WSAEACCES";
        return "WSAEADDRINUSE";
        return "WSAEADDRNOTAVAIL";
        return "WSAEAFNOSUPPORT";
        return "WSAEALREADY";
        return "WSAEBADF";
        return "WSAECONNREFUSED";
        return "WSAECONNRESET";
        return "WSAEDESTADDRREQ";
        return "WSAEDISCON";
        return "WSAEFAULT";
        return "WSAEHOSTDOWN";
        return "WSAEINPROGRESS";
        return "WSAEINTR";
        return "WSAEINVAL";
        return "WSAEISCONN";
        return "WSAELOOP";
        return "WSAEMFILE";
        return "WSAEMSGSIZE";
        return "WSAENAMETOOLONG";
        return "WSAENETDOWN";
        return "WSAENETRESET";
        return "WSAENETUNREACH";
        return "WSAENOBUFS";
        return "WSAENOPROTOOPT";
        return "WSAENOTCONN";
        return "WSAENOTSOCK";
        return "WSAEOPNOTSUPP";
        return "WSAEPFNOSUPPORT";
        return "WSAEPROTONOSUPPORT";
        return "WSAEPROTOTYPE";
        return "WSAESHUTDOWN";
        return "WSAESOCKTNOSUPPORT";
        return "WSAETIMEDOUT";
        return "WSAETOOMANYREFS";
        return "WSAEWOULDBLOCK";
        return "WSANOTINITIALISED";
        return "WSASYSNOTREADY";
        return "WSAVERNOTSUPPORTED";
        return "WSWSAECONNABORTEDAEINTR";
        sVar8 = _wcscspn(pwVar3,L";");
        this = (DName *)DName::DName((DName *)local_24,"CV: ");
        this = (int *)FUN_100eebc0(&DAT_1060f4b8,this,"phys_ragdollmagnet");
        this = FUN_10267f50(pvVar2,"settings");
        this = FUN_102c6890(pvVar4,"Make File Writeable?",local_404,iVar3,iVar6);
        this = FUN_1042ea30(pvVar2,"MsgRequestMapRating");
        this = FUN_1042ea30(pvVar4,"MsgWaitingForOpen");
        this_00 = FUN_102161b0(pvVar6,piVar1,"extras_infoitem",1);
        this_00 = FUN_10267d30(this,&DAT_1032ed10,(uint *)"actionname",pcVar3);
        this_00 = FUN_10267f50(this,"EditMaterial");
        this_00 = FUN_10267f50(this,"OnEngineClientSignonStatePrepareChange");
        this_00 = FUN_1042ea30(pvVar15,"lobbystate");
        this_00 = FUN_1042ea30(this,"OldParticleSystem_ActivateEmitter");
        this_00 = FUN_1042ea30(this,"OldParticleSystem_Destroy");
        this_00 = FUN_1042ea30(this,"TempEntity");
        this_00 = FUN_1042ee30(local_10,(uint *)"DmeRandomLifetimeInitializer",1);
        this_00 = FUN_1042ee30(puVar6,(uint *)"emitter2",1);
        this_01 = FUN_1039d370(this_00,"DepthWrite");
        this_01 = FUN_1042ea30(this_00,"DepthWrite");
        this_01 = FUN_1042ea30(this_00,"ParticleSystem_SetControlPointColor");
        this_01 = FUN_1042ea30(this_00,"ParticleSystem_SetControlPointObject");
        this_01 = FUN_1042ea30(this_00,"ParticleSystem_SetControlPointOrientation");
        this_01 = FUN_1042ea30(this_00,"ParticleSystem_SetControlPointPosition");
        this_01 = FUN_1042ea30(this_00,"ParticleSystem_StopEmission");
        this_03 = FUN_10267f50(this_02,"OnNetLanConnectionlessPacket");
        uVar1 = FUN_10077120("CAI_BaseNPC",(uint)PTR_s__Schedule_SCHED_WAKE_ANGRY_Tasks_105923bc,
        uVar1 = FUN_10104e40((void *)((int)this + 0x24),param_1,param_2,(uint *)"minVal",
        uVar1 = FUN_10104e40((void *)((int)this + 0x24),param_1,param_2,(uint *)"sineMin",
        uVar1 = FUN_10104e40((void *)((int)this + 0x2c),param_1,param_2,(uint *)"minVal",
        uVar1 = FUN_10104e40((void *)((int)this + 0x2c),param_1,param_2,(uint *)"range_out_min",
        uVar1 = FUN_1014fb90(*(void **)((int)this + 0x15c0),(int *)"particle/smokesprites_0001");
        uVar1 = FUN_10265ef0((byte *)"decalprecache",param_1);
        uVar1 = FUN_10265f50((byte *)"-title",pbVar7);
        uVar1 = FUN_10265f50((byte *)"ATI2N",pbVar2);
        uVar1 = FUN_10265f50(param_2,(byte *)"TacticalInterventionQuery");
        uVar1 = FUN_10265f50(pbVar2,(byte *)"notmostrecent");
        uVar1 = FUN_10399710((byte *)param_1,(byte *)"NoiseAmplitude");
        uVar1 = FUN_10399710((byte *)param_1,(byte *)"color2");
        uVar1 = FUN_10399710((byte *)param_1,(byte *)"emittime");
        uVar1 = FUN_10399710((byte *)param_1,(byte *)"locked_sentence");
        uVar1 = FUN_10399710((byte *)param_1,(byte *)"maxweight");
        uVar1 = FUN_10399710((byte *)param_1,(byte *)"pitch");
        uVar1 = FUN_10399710((byte *)param_1,(byte *)"unlocked_sentence");
        uVar1 = FUN_10399710(param_1,(byte *)"texturename");
        uVar1 = FUN_10399710(pbVar7,(byte *)"initial");
        uVar1 = FUN_1039db00(this_00,(uint *)"event",(uint)"PLAYERANIMEVENT_NONE");
        uVar1 = FUN_1042df20((byte *)"plancreate",param_1);
        uVar1 = FUN_1042df20((byte *)"specgui",param_1);
        uVar1 = FUN_1042df80((byte *)param_1,(byte *)"frame");
        uVar1 = FUN_1042f270(this,(uint *)"setting.cpu_level",0);
        uVar1 = FUN_1042f270(this,(uint *)"setting.csm_quality_level",3);
        uVar1 = FUN_1042f270(this,(uint *)"setting.gpu_level",0);
        uVar1 = FUN_1042f270(this,(uint *)"setting.gpu_mem_level",0);
        uVar1 = FUN_1042f270(this,(uint *)"setting.mat_aaquality",0);
        uVar1 = FUN_1042f270(this,(uint *)"setting.mat_antialias",0);
        uVar1 = FUN_1042f270(this,(uint *)"setting.mat_forceaniso",1);
        uVar1 = FUN_1042f270(this,(uint *)"setting.mat_queue_mode",0xffffffff);
        uVar1 = FUN_1042f270(this,(uint *)"setting.mat_triplebuffered",0);
        uVar1 = FUN_1042f270(this,(uint *)"setting.mat_vsync",1);
        uVar1 = FUN_1042f270(this,(uint *)"setting.mem_level",0);
        uVar1 = FUN_1042f270(this_00,(uint *)"animationNoWrap",0);
        uVar1 = FUN_1042f270(this_00,(uint *)"toggleShouldWrap",1);
        uVar1 = FUN_1042f3d0(this_00,(uint *)"event",(uint)"PLAYERANIMEVENT_NONE");
        uVar10 = FUN_103996b0(pbVar9,(byte *)"teargrenade_projectile");
        uVar11 = FUN_0041f380(local_8,"_id",0);
        uVar12 = (**(code **)*DAT_106466ac)("game_intermission",0);
        uVar12 = FUN_10399820(extraout_ECX,extraout_EDX,pauVar9,(undefined (*) [16])"forklift");
        uVar13 = FUN_1042df80(local_8,(byte *)"TacticalTV");
        uVar14 = FUN_103aa540(*(void **)(param_1 + 0x250),(byte *)"holster");
        uVar15 = (**(code **)(*DAT_107c09f0 + 0x2c))("#GamePointAcronymColored");
        uVar15 = (**(code **)(*param_1 + 0x1c))("dmg_health",0,uVar15);
        uVar15 = (**(code **)(*param_1 + 0x1c))("health",0,local_8);
        uVar15 = (**(code **)(*param_1 + 0x1c))("hitgroup",0);
        uVar2 = (**(code **)(*param_1 + 0x1c))("index",0);
        uVar2 = (**(code **)(*param_1 + 0x2c))("$lighting",(int)&param_2 + 3,0);
        uVar2 = (**(code **)(*piVar1 + 0x2c))("$basetexturetransform",(int)&param_1 + 3,0);
        uVar2 = FUN_101409a0(this,"forced immediate full update");
        uVar2 = FUN_101c7240(param_1,"Car.Horn_A",0,0);
        uVar2 = FUN_101c7240(param_1,"Car.Horn_B",0,0);
        uVar2 = FUN_101c7240(param_1,"Car.Horn_C",0,0);
        uVar2 = FUN_101c7240(param_1,"Car.Horn_D",0,0);
        uVar2 = FUN_101c7240(param_1,"Car.Horn_E",0,0);
        uVar2 = FUN_10265f50(local_104,(byte *)"WORDS");
        uVar2 = FUN_10265f50(param_1,(byte *)"PushBack");
        uVar2 = FUN_10265f50(pbVar1,(byte *)"schinese");
        uVar2 = FUN_102687d0(this,(uint *)"PanelPtr",0);
        uVar2 = FUN_10269690((int *)0x0,(uint *)"cfg\\video.txt","PROFILE",(int *)0x0);
        uVar2 = FUN_10269690(piVar3,(uint *)"cfg\\videodefaults.txt","PROFILE",(int *)0x0);
        uVar2 = FUN_1026e970(param_1,"hint_wall_rappel_break_window",3.0);
        uVar2 = FUN_1026e970(param_1,"hint_wall_rappel_jump",3.0);
        uVar2 = FUN_1026e970(param_1,"hint_wall_rappel_move",5.0);
        uVar2 = FUN_103996b0(pbVar3,(byte *)"CallScriptFunction");
        uVar2 = FUN_10399710((byte *)param_1,(byte *)"AttackDir");
        uVar2 = FUN_10399710((byte *)param_1,(byte *)"Volume");
        uVar2 = FUN_10399710((byte *)param_1,(byte *)"angles");
        uVar2 = FUN_10399710((byte *)param_1,(byte *)"cheapwaterenddistance");
        uVar2 = FUN_10399710((byte *)param_1,(byte *)"landmark");
        uVar2 = FUN_10399710((byte *)param_1,(byte *)"moveto");
        uVar2 = FUN_10399710((byte *)param_1,(byte *)"pitch");
        uVar2 = FUN_10399710((byte *)param_1,(byte *)"world_mins");
        uVar2 = FUN_10399710(local_404,(byte *)"Resume");
        uVar2 = FUN_10399710(param_1,(byte *)"!target4");
        uVar2 = FUN_10399710(pbVar1,(byte *)"schinese");
        uVar2 = FUN_1042df80((byte *)"#L4D360UI_AudioOptions_CaptionOff",param_1);
        uVar2 = FUN_1042df80((byte *)"#L4D360UI_AudioOptions_CaptionOn",param_1);
        uVar2 = FUN_1042df80((byte *)"#L4D360UI_AudioOptions_CaptionSubtitles",param_1);
        uVar2 = FUN_1042df80((byte *)"Overlay_TopRight",param_1);
        uVar2 = FUN_1042df80(local_84,(byte *)"SHOTGUN");
        uVar2 = FUN_1042df80(param_1,(byte *)"#L4D360UI_Gore_High");
        uVar2 = FUN_1042df80(param_1,(byte *)"#L4D360UI_Gore_Low");
        uVar2 = FUN_1042df80(param_1,(byte *)"CurrentXBXLanguage");
        uVar2 = FUN_1042df80(param_1,(byte *)"CurrentXBXLanguage_English");
        uVar2 = FUN_1042df80(pbVar1,(byte *)"schinese");
        uVar2 = FUN_1042f270(this,(uint *)"filter3",0);
        uVar2 = FUN_1042f270(this,(uint *)"setting.defaultres",*(uint *)(param_1 + 0x9f8));
        uVar2 = FUN_1042f270(this,(uint *)"setting.defaultresheight",*(uint *)(param_1 + 0x9fc));
        uVar2 = FUN_1042f270(this,(uint *)"setting.fullscreen",
        uVar2 = FUN_1042f270(this,(uint *)"setting.nowindowborder",
        uVar2 = FUN_1042f270(this,(uint *)"userdata",0);
        uVar2 = FUN_1042f3d0(this,(uint *)"filter2",(uint)&DAT_105161d4);
        uVar2 = FUN_1042f3d0(this_00,(uint *)"custom",(uint)&DAT_104eefb3);
        uVar2 = FUN_104300e0((int *)0x0,(uint *)"cfg\\video.txt","PROFILE",(int *)0x0);
        uVar2 = FUN_104300e0(piVar3,(uint *)"cfg\\videodefaults.txt","PROFILE",(int *)0x0);
        uVar2 = Warning("#######################################\n");
        uVar2 = Warning("FCVAR_CLIENTCMD_CAN_EXECUTE prevented running command: %s\n",uVar2);
        uVar3 = (**(code **)(*(int *)((int)this + -4) + 0x34))((int)this + -4,"Bad relay password");
        uVar3 = (**(code **)(*DAT_10650104 + 0xc))("default");
        uVar3 = (**(code **)(*DAT_10730cfc + 8))("showscores",0xffffffff);
        uVar3 = (**(code **)(*DAT_1077924c + 0xc))("default");
        uVar3 = (**(code **)(*local_10 + 0x2c))("m_pfnThink",local_c,1);
        uVar3 = (**(code **)(*param_1 + 0x1c))("damagebits",0);
        uVar3 = (**(code **)(*param_1 + 0x1c))("userid",0);
        uVar3 = (**(code **)(*param_1 + 0x28))("cvarname",&DAT_104eefb3,local_314,0x80);
        uVar3 = (**(code **)(*param_1 + 0x28))("cvarvalue",&DAT_104eefb3,local_30,0x20);
        uVar3 = (**(code **)(*piVar4 + 8))("ButtonBorder");
        uVar3 = (**(code **)(*this + 0x8ec))("#Radio_GoGo",6);
        uVar3 = (**(code **)(iVar2 + 0x14))("SourceScheme");
        uVar3 = DevMsg(2,"%s is a priority script and cannot be kicked out of the queue\n",pcVar2);
        uVar3 = Error("CUtlRBTree overflow!\n");
        uVar3 = FUN_100612d0(*(void **)(param_1 + 0x6c),"func_door_rotating");
        uVar3 = FUN_100845f0(pbVar1,(byte *)"picker");
        uVar3 = FUN_101a5ad0(1,(byte *)"CL_ParseClassInfo_EndClasses: class %d not initialized.\n");
        uVar3 = FUN_101f3700((int)this,3,"#ChangeTeamNextRound",pcVar4,pcVar9,pcVar10,pcVar11);
        uVar3 = FUN_101f3700((int)this,3,"#Ignore_Broadcast_Messages",(char *)0x0,(char *)0x0,
        uVar3 = FUN_101f3700((int)this,3,"#Ignore_Broadcast_Team_Messages",(char *)0x0,(char *)0x0,
        uVar3 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting \']\', didn\'t find it!");
        uVar3 = FUN_10265ef0((byte *)puVar1,(byte *)"HL2DEMO");
        uVar3 = FUN_10265f50(pbVar2,(byte *)"alignment");
        uVar3 = FUN_10268930(this_00,(uint *)"tabname",(uint)&DAT_103236cf);
        uVar3 = FUN_103996b0(pbVar1,(byte *)"scripts/vehicles/car-2.txt");
        uVar3 = FUN_103996b0(pbVar1,(byte *)"scripts/vehicles/car-5.txt");
        uVar3 = FUN_103996b0(pbVar1,(byte *)"scripts/vehicles/truck-3.txt");
        uVar3 = FUN_103996b0(pbVar1,(byte *)"scripts/vehicles/van-1.txt");
        uVar3 = FUN_103996b0(pbVar1,(byte *)"scripts/vehicles/van-3.txt");
        uVar3 = FUN_10399710((byte *)"player",pbVar1);
        uVar3 = FUN_10399710((byte *)param_1,(byte *)"angles");
        uVar3 = FUN_10399710((byte *)param_1,(byte *)"max_range");
        uVar3 = FUN_10399710(pbVar2,(byte *)"alignment");
        uVar3 = FUN_10399710(pbVar9,(byte *)"spec_goto");
        uVar3 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting \']\', didn\'t find it!");
        uVar3 = FUN_1042df20(pbVar1,(byte *)"X_BUTTON");
        uVar3 = FUN_1042df20(pbVar14,(byte *)"Video");
        uVar3 = FUN_1042df80(local_c,(byte *)"player_civkill");
        uVar3 = FUN_1042df80(param_1,(byte *)"indicator_escort");
        uVar3 = FUN_1042df80(pbVar1,(byte *)"KeyboardMouse");
        uVar3 = FUN_1042df80(pbVar2,(byte *)"alignment");
        uVar3 = FUN_1042df80(pbVar7,(byte *)"clear");
        uVar3 = FUN_1042f3d0(this_00,(uint *)"tabname",(uint)&DAT_104eefb3);
        uVar3 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting \']\', didn\'t find it!");
        uVar3 = LoggingSystem_Log(DAT_104f3614,1,"Unrecognized flag: %s.\n",pbVar6);
        uVar3 = Warning("CEntityMapData::GetNextKey: closing brace without data\n");
        uVar3 = Warning("Failed to upload %s, error %d\n",param_1,DVar4);
        uVar4 = (**(code **)(*DAT_10650104 + 0xc))("default");
        uVar4 = (**(code **)(*DAT_1067e240 + 0x3c))("__DumpScope",0);
        uVar4 = (**(code **)(*DAT_106cb7e0 + 0x30))("#Valve_UpdatingSteamResources");
        uVar4 = (**(code **)(*DAT_1077924c + 0xc))("default");
        uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#FreezePanel_Killer1");
        uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#FreezePanel_Killer2");
        uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#ItemNone");
        uVar4 = (**(code **)(*param_1 + 0x1c))("attacker",0);
        uVar4 = (**(code **)(*param_1 + 0x1c))("userid",0);
        uVar4 = (**(code **)(*piVar3 + 0x24))("-game","tacint");
        uVar4 = FUN_101c52f0(&DAT_106a4940,(int *)this,(int)"failed reading message");
        uVar4 = FUN_101c52f0(&DAT_106a4940,(int *)this,(int)"unknown message");
        uVar4 = FUN_101f54b0((byte *)"\"%s<%i><%s><%s>\" killed \"%s<%i><%s><%s>\"\n");
        uVar4 = FUN_10265ef0((byte *)&DAT_10674cf0,(byte *)"MixGroups");
        uVar4 = FUN_10265ef0(pbVar3,(byte *)"start_stack");
        uVar4 = FUN_10265f50(local_10,(byte *)"-check");
        uVar4 = FUN_10265f50(pbVar3,(byte *)"north-east");
        uVar4 = FUN_10265f50(pbVar5,(byte *)"-reset");
        uVar4 = FUN_10265f50(pbVar6,(byte *)"remove");
        uVar4 = FUN_10268900(this_00,(uint *)"propertypage",0);
        uVar4 = FUN_10399710((byte *)param_1,(byte *)"Goal_WP");
        uVar4 = FUN_10399710((byte *)param_1,(byte *)"LightDelay");
        uVar4 = FUN_10399710((byte *)param_1,(byte *)"UseWind");
        uVar4 = FUN_10399710(pbVar3,(byte *)"north-east");
        uVar4 = FUN_10399710(pbVar5,(byte *)"norepeat");
        uVar4 = FUN_1039d9a0(puVar7,(uint *)"canLeanLeft",0);
        uVar4 = FUN_1039d9a0(puVar7,(uint *)"canLeanRight",0);
        uVar4 = FUN_1039d9a0(puVar7,(uint *)"noStandardWeapons",0);
        uVar4 = FUN_1039d9a0(puVar7,(uint *)"playerInvisible",0);
        uVar4 = FUN_1039d9a0(puVar7,(uint *)"slotType",0);
        uVar4 = FUN_1039db00(pvVar1,(uint *)"angles",(uint)"0 0 0");
        uVar4 = FUN_1039db00(pvVar1,(uint *)"origin",(uint)"0 0 0");
        uVar4 = FUN_1042df20((byte *)"hltv_cameraman",pbVar3);
        uVar4 = FUN_1042df20((byte *)"hltv_fixed",pbVar3);
        uVar4 = FUN_1042df20(local_104,(byte *)"icon_blank");
        uVar4 = FUN_1042df20(pbVar3,(byte *)"set_instructor_group_enabled");
        uVar4 = FUN_1042df80(&DAT_107973a0,(byte *)"DESCRIPTION");
        uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"drawinfastreflection");
        uVar4 = FUN_1042df80(pbVar1,(byte *)"AudioVideo");
        uVar4 = FUN_1042df80(pbVar3,(byte *)"enabled");
        uVar4 = FUN_1042df80(pbVar3,(byte *)"iterate_team");
        uVar4 = FUN_1042df80(pbVar3,(byte *)"north-east");
        uVar4 = FUN_1042df80(pbVar3,(byte *)"static_text");
        uVar4 = FUN_1042f3a0(param_1,(uint *)"baseentity",0);
        uVar4 = FUN_1042f3a0(this_00,(uint *)"TIPropertyPage",0);
        uVar4 = FUN_1042f3a0(this_00,(uint *)"propertypage",0);
        uVar4 = Msg("autokick is disabled for %s\n",uVar3);
        uVar4 = Warning("Bug must have a description\n");
        uVar4 = Warning("Severity not set!\n");
        uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Foot_Boots");
        uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Foot_Shoes");
        uVar5 = (**(code **)(*piVar3 + 0x84))("bolt_left");
        uVar5 = (**(code **)(*piVar3 + 0x84))("bolt_right");
        uVar5 = (**(code **)(*piVar4 + 0x28))(uVar2,uVar3,"SteamMatchMaking009");
        uVar5 = (**(code **)(*piVar4 + 0x84))("engine_left_blade3",0,0xffffffff,0,0,uVar14,uVar15);
        uVar5 = (**(code **)(*piVar4 + 0x84))("engine_right_blade3",0,0xffffffff,0,0,uVar14,uVar15);
        uVar5 = (*pcVar19)(&DAT_106a8e30,"\tVar handle as BaseCombatCharacter returned NULL!\n");
        uVar5 = FUN_101fbfb0((byte *)"Unable to init studio render system version %s\n");
        uVar5 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting \']\', didn\'t find it!");
        uVar5 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting element type, didn\'t find it!");
        uVar5 = FUN_102c09a0(DAT_107a27d0,(uint *)"mafia_mode");
        uVar5 = FUN_10314250(DAT_10693b08,(uint *)"mafia_mode");
        uVar5 = FUN_10399710((byte *)"Activity",local_418);
        uVar5 = FUN_10399710((byte *)param_1,(byte *)"texturename");
        uVar5 = FUN_10399710(pbVar7,(byte *)"TranslationData");
        uVar5 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting \']\', didn\'t find it!");
        uVar5 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting element type, didn\'t find it!");
        uVar5 = FUN_1042df80(local_318,(byte *)"localteam");
        uVar5 = FUN_1042df80(pbVar7,(byte *)"TranslationData");
        uVar5 = FUN_1042f270(puVar10,(uint *)"seat_xpos",0);
        uVar5 = FUN_1042f270(puVar10,(uint *)"seat_ypos",0);
        uVar5 = FUN_1042f270(puVar10,(uint *)"slotType",0);
        uVar5 = FUN_1042f270(this_00,(uint *)"height",0);
        uVar5 = FUN_1042f270(this_00,(uint *)"width",0);
        uVar5 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting \']\', didn\'t find it!");
        uVar5 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting element type, didn\'t find it!");
        uVar6 = (**(code **)(*param_1 + 0x28))("weapon",&DAT_1043677a);
        uVar6 = (**(code **)(*piVar5 + 0xf0))(local_14,0,"Lighting Verts",0,0);
        uVar6 = FUN_101049a0("sky_ti_09_hdr");
        uVar6 = FUN_101f54b0((byte *)"World triggered \"Round_Start\"\n");
        uVar6 = FUN_101f54b0((byte *)"\"%s<%i><%s><%s>\" triggered \"Killed_A_Hostage\"\n");
        uVar6 = FUN_101f54b0((byte *)"\"%s<%i><%s><%s>\" triggered \"Rescued_A_Hostage\"\n");
        uVar6 = FUN_10265f50((byte *)"portal2",pbVar10);
        uVar6 = FUN_10265f50((byte *)&DAT_10674cf0,(byte *)"CHAN_WEAPON");
        uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"animate");
        uVar6 = FUN_10265f50(pbVar5,(byte *)"default");
        uVar6 = FUN_102c09a0(DAT_107a27d0,(uint *)"mafia_mode");
        uVar6 = FUN_10314280(local_18,(uint *)"spawn_in_cars",'\x01');
        uVar6 = FUN_10399710(pbVar5,(byte *)"default");
        uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"animate");
        uVar6 = FUN_1042df80(pbVar5,(byte *)"default");
        uVar6 = FUN_1042f3d0(puVar5,(uint *)"surfaceprop",(uint)&DAT_104eefb3);
        uVar6 = FUN_104300e0(piVar2,(uint *)"gameinfo.txt",0,(int *)0x0);
        uVar6 = Msg("(%s) key: %-16s value: %s\n",local_8,param_1,param_2);
        uVar7 = (**(code **)(*DAT_107c09f0 + 0x2c))("#EORPS_Award",1,local_118);
        uVar7 = (**(code **)(*DAT_107c09f0 + 0x2c))("#EORPS_DeltaGP",1,local_118);
        uVar7 = (**(code **)(*DAT_107c09f0 + 0x2c))("#EORPS_DeltaXP",1,local_118);
        uVar7 = (**(code **)(*DAT_107c09f0 + 0x2c))("#EORPS_RP",1,local_118);
        uVar7 = (**(code **)(*DAT_107c09f0 + 0x2c))("#EORPS_Ratio",2,local_118,local_724);
        uVar7 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Spec_PlayerItem_Team",2,local_148,local_48);
        uVar7 = (*pcVar1)("muffler");
        uVar7 = ConDMsg("NET_ReceivePacket: %s\n",pcVar5);
        uVar7 = FUN_10399710(pbVar12,(byte *)"weight");
        uVar7 = FUN_10399710(pbVar6,(byte *)"ragdollconstraint");
        uVar7 = FUN_103b5470(this,uVar4,uVar7,"Unserialize");
        uVar7 = FUN_1042df80((byte *)"level",pbVar2);
        uVar7 = FUN_1042df80(pbVar6,(byte *)"ragdollconstraint");
        uVar7 = FUN_1042e050(extraout_ECX,extraout_EDX,pauVar3,(undefined (*) [16])"VOTEKICKED");
        uVar7 = FUN_1042f270(param_1,(uint *)"acceptsinput",1);
        uVar7 = FUN_1042f3d0(pvVar3,(uint *)"material",(uint)&DAT_104eefb3);
        uVar8 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Inv_SlotPrevPerk",1);
        uVar8 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TeamName_C");
        uVar8 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TeamName_T",0);
        uVar8 = (**(code **)*puVar1)("defendzone_red");
        uVar8 = FUN_10399410(&stack0xffffe730,"info_hostage_spawn_1",0x14);
        uVar8 = FUN_10399410(&stack0xffffe730,"info_hostage_waypoint_1",0x17);
        uVar8 = FUN_10399710(local_1a8,(byte *)"tacint");
        uVar8 = FUN_10399710(pbVar7,(byte *)"fluid");
        uVar8 = FUN_1042df80((byte *)"nobody",pbVar9);
        uVar8 = FUN_1042df80(param_5,(byte *)"enemy_spotted");
        uVar8 = FUN_1042df80(pbVar7,(byte *)"fluid");
        uVar9 = (**(code **)(iVar4 + 0x48))("hltv_clients",puVar8);
        uVar9 = FUN_10265ef0((byte *)"reliable",(byte *)puVar7);
       "  [ -startmap mapname ] -- restart generation at specified map (after crash, implies resume)\n"
       "  [ -usedevshotsfile filename ] -- get map list from specified file, default is to build for maps/*.bsp\n"
       "No such module: \'%s\' in appsystem @%p. Dumping available modules:\n";
       "Removes all entities of the specified type\n\tArguments:   \t{entity_name} / {class_name}\n"
       "This function is obsolete and should not be used!\nReturn code cannot be an error code and number of results at the same time!\n"
       "To splice, mark an area, highlight a second area, then invoke the splice command to create an area between them"
       "next map differs, unreferencing all static prop models and models marked as client or server.\n"
       ((((uVar3 = FUN_100612d0(pvVar4,"prop_rocket_crate"), (char)uVar3 != '\0' ||
       (((char *)param_1[0x17] != "func_pushable" &&
       (((uVar9 = FUN_100612d0(ppvVar7,"prop_door"), (char)uVar9 != '\0' ||
       ((*(char **)((int)param_1 + 0x5c) != "func_tracktrain" &&
       ((*(char **)((int)this_00 + 0x5c) != "func_tracktrain" &&
       ((DAT_10730ce8 = (*(code *)param_1)("StaticPropMgrClient005",0), DAT_10730ce8 != 0 &&
       ((bVar5 = FUN_100a6de0(this_00,"func_lod"), bVar5 || ((char *)this_00[0x17] == "func_brush"))
       ((char *)param_1[0x17] != "prop_dynamic_override")) &&
       ((char *)this_00[0x17] == "prop_physics")) ||
       ((uVar4 = FUN_10265ef0(pbVar3,(byte *)"prestart_stack"), uVar4 == 0 || (param_1 != 2))))
       (DAT_10730c80 = (undefined4 *)(*(code *)param_1)("RenderToRTHelper001",0),
       (DAT_10730ca4 = (int *)(*(code *)param_1)("fixapi2_ClientAPI001",&local_8),
       (DAT_10730ca8 = (*(code *)param_1)("BlackBoxVersion001",0), DAT_10730ca8 != 0)))) &&
       (DAT_10782188 = (int *)(**(code **)(*DAT_107c09d0 + 0x44))("sv_cheats"),
       (FUN_101f54b0((byte *)"[RULES] Current Match: %i totalMatches: %i\n"),
       (bVar1 = FUN_100a6de0(param_1,"func_door_rotating"), bVar1)) {
       (bVar1 = FUN_100a6de0(param_1,"prop_physics_override"), bVar1)) {
       (bVar1 = FUN_100a6de0(this,"game_team_master"), bVar1)) break;
       (bVar1 = FUN_100a6de0(this,"info_landmark"), bVar1)) break;
       (bVar1 = FUN_100a6de0(this,"npc_bullseye"), !bVar1)) {
       (bVar1 = FUN_100a6de0(this,"trigger_transition"), bVar1)) {
       (bVar2 = FUN_100a6de0(param_1,"prop_dynamic_override"), bVar2)) {
       (bVar2 = FUN_100a6de0(this_00,"env_fire"), !bVar2)) {
       (bVar3 = FUN_100a6de0(this_00,"func_brush"), !bVar3)))))) {
       (bVar4 = FUN_100a6de0(param_1,"weapon_smg1"), bVar4)) {
       (bVar6 = FUN_100a6de0(this_00,"prop_dynamic"), bVar6)) ||
       (iVar2 = FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"trigger_transition"), iVar2 == 0)) {
       (iVar5 = (**(code **)(**(int **)(iVar1 + 0x10) + 0x1c))("index",0), 0 < iVar5)) {
       (iVar5 = FUN_103991e0((char *)puVar3[1],".wav"), iVar5 != 0)) {
       (iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_spawn_3",0x14), iVar6 == 0)) {
       (iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_waypoint_3",0x17), iVar6 == 0)) {
       (int *)(**(code **)(*DAT_106cb7f8 + 500))("__ColorDepthWrite10","Other textures",puVar3);
       (int *)(**(code **)(*DAT_106cb7f8 + 500))("__ColorDepthWrite11","Other textures",puVar3);
       (int *)(**(code **)(*DAT_106cb7f8 + 500))("__DepthWrite10","Other textures",puVar3);
       (int *)(**(code **)(*DAT_106cb7f8 + 500))("__DepthWrite11","Other textures",puVar3);
       (local_c = (**(code **)(*DAT_107c0a04 + 0x150))("dev/clearalpha","Other textures",1,0),
       (local_c = (int *)(**(code **)(*DAT_106466d0 + 0x18))("break_breakable",0,0),
       (local_c = (undefined (**) [16])FUN_1039d560(local_8,(uint *)"defaults",0),
       (pFVar4 = GetProcAddress(hModule,"MessageBoxW"), uVar9 = extraout_DL_01,
       (piVar3 = (int *)(**(code **)(*piVar5 + 0xbc))("$hdrcolorscale",&DAT_1071606c),
       (piVar3 = (int *)(**(code **)(*piVar7 + 0xbc))("$hdrcolorscale",&DAT_10716070),
       (piVar4 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("player_changename",0,0),
       (piVar4 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("plans_loaded",0,0),
       (piVar4 = (int *)(**(code **)(*piVar4 + 0xbc))("$hdrcolorscale",&DAT_10716074),
       (piVar4 = (int *)(**(code **)(*piVar4 + 0xbc))("$hdrcolorscale",&DAT_10716084),
       (piVar4 = (int *)(**(code **)(*piVar6 + 0xbc))("$hdrcolorscale",&DAT_1071607c),
       (piVar5 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("vip_reached_car_goal_on_foot",0,0),
       (piVar5 = (int *)(**(code **)(*piVar7 + 0xbc))("$hdrcolorscale",&DAT_10716078),
       (puVar3 = FUN_10268340(param_1,(uint *)"GameDetailsServer",0), puVar3 != (uint *)0x0)) &&
       (puVar3 = FUN_10268340(puVar3,(uint *)"syncpoints",0), puVar3 != (uint *)0x0)) {
       (puVar4 = FUN_1039d560(pvVar3,(uint *)"bone_followers",0), puVar4 != (uint *)0x0)) {
       (pvVar4 = FUN_1011d260(iVar3,(byte *)"reserved"), pvVar4 != (void *)0x0)) {
       (this = (void *)(**(code **)(*DAT_106cb868 + 0xdc))(iVar3,"ENGINE"), iVar2 = local_8,
       (this_00 = FUN_10357140(this,"FX_MetalSpark 2"), this_00 != (undefined4 *)0x0)) {
       (uVar1 = FUN_10399710((byte *)param_1,(byte *)"Solid"), uVar1 != 0)) {
       (uVar1 = FUN_10399710(param_1,(byte *)"rendercolor"), uVar1 == 0)) ||
       (uVar2 = FUN_102687d0((void *)param_1[0x9c],(uint *)"imageSelected",0), uVar2 == 0)) {
       (uVar2 = FUN_10399710((byte *)param_1,(byte *)"gibmodel"), uVar2 == 0)) {
       (uVar2 = FUN_10399710((byte *)param_1,(byte *)"spawnobject"), uVar2 == 0)) {
       (uVar2 = FUN_10399710(pbVar1,(byte *)"OnPlayerAward"), uVar2 != 0)) {
       (uVar2 = FUN_10399710(pbVar1,(byte *)"break_prop"), uVar2 == 0)) ||
       (uVar2 = FUN_10399710(pbVar1,(byte *)"pvsplayer"), uVar2 != 0)) {
       (uVar2 = FUN_1039d9a0((void *)param_1[0x9c],(uint *)"imageSelected",0), uVar2 == 0)) {
       (uVar2 = FUN_1042f270((void *)param_1[0x9c],(uint *)"imageSelected",0), uVar2 == 0)) {
       (uVar3 = FUN_10265ef0(param_1,(byte *)"localhost"), uVar3 == 0)) {
       (uVar3 = FUN_10268900(*(void **)*param_1,(uint *)"propertysheet",0), uVar3 != 0)) &&
       (uVar3 = FUN_102c09a0(DAT_107a27d0,(uint *)"mafia_mode"), (char)uVar3 != '\0')) {
       (uVar3 = FUN_10399710(pbVar5,(byte *)"worldspawn"), uVar3 != 0)) {
       (uVar3 = FUN_1042df80(param_1,(byte *)"d3_citadel_05"), uVar3 == 0)) goto LAB_10176c55;
       (uVar3 = FUN_1042f3a0(*(void **)*param_1,(uint *)"TIPropertySheet",0), uVar3 != 0)) &&
       (uVar3 = FUN_1042f3a0(*(void **)*param_1,(uint *)"propertysheet",0), uVar3 != 0)) &&
       (uVar4 = FUN_10265ef0(local_104,(byte *)"tracker"), uVar4 != 0)) {
       (uVar4 = FUN_10399710((byte *)param_1,(byte *)"rendercolor"), uVar4 == 0)) ||
       (uVar4 = FUN_10399710(param_1,(byte *)"d3_citadel_05"), uVar4 == 0)) goto LAB_101a8880;
       (uVar4 = FUN_10399710(pbVar1,(byte *)"player_hurt"), uVar4 == 0)) {
       (uVar6 = FUN_10265f50((byte *)param_1[0x104],(byte *)"setpos"), uVar6 == 0)) {
       (uVar6 = FUN_10314280(param_1,(uint *)"force_civillians",'\x01'), (char)uVar6 != '\0')) {
       ) && ((iVar2 = __stricmp(_Str1,".arj"), iVar2 != 0 &&
       )) || (bVar5 = FUN_100a6de0(this_00,"func_brush"), bVar5)))) {
       LoggingSystem_RegisterLoggingChannel("TIGameUIDeveloper",&LAB_101feb00,1,3,0xff008000);
       LoggingSystem_RegisterLoggingChannel("TIGameUIDeveloper",FUN_101feb00,1,3,0xff008000);
       LoggingSystem_RegisterLoggingChannel("TIGameUIDeveloperVerbose",&LAB_101feae0,1,3,0xff00ff00)
       LoggingSystem_RegisterLoggingChannel("TIGameUIDeveloperVerbose",FUN_101feae0,1,3,0xff00ff00);
       LoggingSystem_RegisterLoggingChannel((byte *)"LOADING",(undefined *)0x0,0,0,DAT_100481e8);
      "  ---------------------------------------------------- ----------- ----------- ----------- ------ ----------- ------ ----------- ----------- ----------- -----------\n"
      "  Scope                                                      Calls Calls/Frame  Time+Child    Pct        Time    Pct   Avg/Frame    Avg/Call Avg-NoChild        Peak\n"
      "TranslationData");
      "can\'t find an info_player_start or any stage/squad spawns for walkable sampling!\n";
      (((((char *)this_00[0x17] != "func_lod" && (bVar3 = FUN_100a6de0(this_00,"func_lod"), !bVar3))
      (((DAT_10730d04 = (*(code *)param_1)("InputSystemVersion001",0), DAT_10730d04 != 0 &&
      ((char *)this_00[0x17] == "prop_physics_multiplayer")) ||
      (**(code **)(*(int *)((int)this + -4) + 8))("specgui",1);
      (**(code **)(*(int *)(DAT_10730ce4 + 4) + 0x5c))(&local_14,"PROFILE",local_44,1);
      (**(code **)(*(int *)(iVar1 + 4) + 0x34))(iVar1 + 4,"TacticalTV stop.");
      (**(code **)(*(int *)(iVar9 + 0x18) + 0xc))("FreezeCam_Only");
      (**(code **)(*(int *)PTR_DAT_106ac350 + 4))("Impact.Concrete",param_2);
      (**(code **)(*(int *)PTR_PTR_106b2a68 + 0x10))("episodic_intro",puVar4);
      (**(code **)(*(int *)PTR_PTR_106b2a68 + 0x20))("episodic_stun");
      (**(code **)(*(int *)param_1[0x100] + 0x33c))("Option1CountLabel",&local_204);
      (**(code **)(*(int *)param_1[0x100] + 0x33c))("Option2CountLabel",&local_404);
      (**(code **)(*(int *)param_1[0x7b] + 900))("ingame/scoreboard/header_background");
      (**(code **)(*(int *)param_1[0x7b] + 900))("ingame/scoreboard/header_background_dm");
      (**(code **)(*(int *)param_1[4] + 0x94))("Disconnect by user.");
      (**(code **)(**(int **)((int)this + 0x1ec) + 900))("buttstroke");
      (**(code **)(**(int **)((int)this + 0x228) + 900))("items/holster/holster1");
      (**(code **)(**(int **)((int)this + 0x234) + 0x388))("#ITEM_HOLSTER1");
      (**(code **)(**(int **)((int)this + 0x27c) + 900))("items/none");
      (**(code **)(**(int **)((int)this + 0x288) + 900))("items/none");
      (**(code **)(**(int **)((int)this + 0x28c) + 0x388))("[nothing currently selected]");
      (**(code **)(**(int **)((int)this + 0x294) + 900))("items/none");
      (**(code **)(**(int **)((int)this + 0x2a0) + 900))("items/none");
      (**(code **)(**(int **)((int)this + 0x2ac) + 900))("items/hands/default");
      (**(code **)(**(int **)((int)this + 0x2b8) + 900))("items/default");
      (**(code **)(**(int **)((int)this + 0x2c4) + 900))("items/holster/holster1");
      (**(code **)(**(int **)((int)this + 0x2d0) + 900))("items/default");
      (**(code **)(**(int **)((int)this + 0x2dc) + 900))("items/default");
      (**(code **)(**(int **)((int)this + 0x2e8) + 900))("items/default");
      (**(code **)(**(int **)(param_1 + 0x23c) + 0x388))("Count: 0");
      (**(code **)(**(int **)(param_1 + 0x2b4) + 900))("PublicUser");
      (**(code **)(**(int **)(param_1[0x66f] + iVar3 * 4) + 0x14))(0,"Service unavailable.");
      (**(code **)(*DAT_104e3354 + 0x9c))(iVar2,"DECALLIST",puVar4,0,DAT_10417838,DAT_1041783c);
      (**(code **)(*DAT_104e3354 + 0xa0))(pauVar5,"DECALLIST",local_f8,0,DAT_10417838,DAT_1041783c);
      (**(code **)(*DAT_106466ac + 0x94))("autosavedangerousissafe\n");
      (**(code **)(*DAT_106466ac + 0xa0))(DAT_106466ac,piVar2[6],"cl_soundscape_flush\n");
      (**(code **)(*DAT_106466ac + 0xa0))(DAT_106466ac,puVar1,"cd pause\n");
      (**(code **)(*DAT_106466d8 + 0x20))(DAT_106466d8,puVar6,0x3f800000,"m_goal");
      (**(code **)(*DAT_10681754 + 0x54))(local_134,"PROFILE");
      (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar13,"ClassName",pcVar28,uVar29);
      (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,uVar4,"---------------------------------\n");
      (**(code **)(*DAT_106ac638 + 0x3c))(param_1,"ADJACENCY",iVar4,0,DAT_10417850,DAT_10417854);
      (**(code **)(*DAT_106ac638 + 0x40))(param_1,"ADJACENCY",puVar5,0,DAT_10417850,DAT_10417854);
      (**(code **)(*DAT_106cb7e8 + 0x54))(&DAT_1035b734,"PROFILE");
      (**(code **)(*DAT_106cb7f4 + 0x48))("HostState::GameShutdown(active)");
      (**(code **)(*DAT_106cb814 + 8))("Shader_DrawChainsDynamic");
      (**(code **)(*DAT_106cb814 + 8))("Shader_DrawChainsStatic");
      (**(code **)(*DAT_10730cc4 + 0x1bc))("disconnect ENDOFMATCH\n");
      (**(code **)(*DAT_10730cc4 + 0x1bc))("mat_reset_rendertargets\n");
      (**(code **)(*DAT_10730cc4 + 0x1c0))("changeteam");
      (**(code **)(*DAT_10730cc4 + 0x1c0))("chooseteam");
      (**(code **)(*DAT_10730cc4 + 0x1c0))("closed_htmlpage");
      (**(code **)(*DAT_10730cc4 + 0x1c0))("demo_stop\n");
      (**(code **)(*DAT_10730cc4 + 0x1c0))("impulse 101");
      (**(code **)(*DAT_10730cc4 + 0x1c0))("joingame");
      (**(code **)(*DAT_10730cc4 + 0x1c0))("mapinfo");
      (**(code **)(*DAT_10730cc4 + 0x1c0))("unpause");
      (**(code **)(*DAT_10730cc4 + 0x28))("extendfreeze");
      (**(code **)(*DAT_10730cc4 + 0x28))("gameui_hide");
      (**(code **)(*DAT_10730cc4 + 0x28))("go_away_from_keyboard");
      (**(code **)(*DAT_10730cc4 + 0x28))("phys_swap");
      (**(code **)(*DAT_10730cc4 + 0x28))("spec_mode");
      (**(code **)(*DAT_10730cc4 + 0x28))("spec_next");
      (**(code **)(*DAT_10730cc4 + 0x28))("spec_prev");
      (**(code **)(*DAT_10730cc4 + 0x28))("startupmenu");
      (**(code **)(*DAT_10730cc4 + 0x28))("voicerecord_toggle off\n");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"APPROACH_NEARBY_CT");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"APPROACH_NEARBY_TER");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"ATTACKTARGET");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"FINDSEAT");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"FOLLOWTARGET");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"GOTOWAYPOINT");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"GRABBED");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"HEAD_TOWARDS_VEHICLE_OR_TEAMMATE");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"INJURED");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"IN_VEHICLE");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"IN_VEHICLE_ARMED");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"RESCUED");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SCARED");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SCARED_RUNFROMPOINT");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SEARCH_FOR_VEHICLE_OR_TEAMMATE");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SITTING");
      (**(code **)(*DAT_10730cc4 + 0x7c))(DAT_10730cc4,0x14,"SITTING_SCARED");
      (**(code **)(*DAT_10730cc4 + 0x80))(DAT_10730cc4,&local_2c,"Local Players: %i",2);
      (**(code **)(*DAT_10730cc4 + 0x80))(DAT_10730cc4,&local_2c,"Total Players: %i",0x20);
      (**(code **)(*DAT_107c09f8 + 0x54))("SAVE\\faceposer",&DAT_10515278);
      (**(code **)(*DAT_107c09f8 + 0x54))(&DAT_1054ca18,"PROFILE");
      (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"\t\tSetInfo\r\n");
      (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"\t\t\"%s\"\r\n",pcVar2);
      (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"\t\t{ BOOL }\r\n");
      (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"\t\t{ STRING }\r\n");
      (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"\t\t{ \"%s\" }\r\n",pcVar2);
      (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"\t\t{\r\n\t\t\tLIST\r\n");
      (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"\t\t}\r\n");
      (**(code **)(*DAT_107c0a6c + 0x158))("common/announcement.wav");
      (**(code **)(*local_38 + 0xc4))(local_38,param_1,"Invalid cross-play platform id\n");
      (**(code **)(*local_8 + 0x388))("#GP_HG_CT");
      (**(code **)(*local_c + 0x34))("entindex",iVar2);
      (**(code **)(*local_c + 0x34))("material",uVar10);
      (**(code **)(*local_c + 0x34))("userid",local_d4);
      (**(code **)(*local_c + 0x34))("userid",uVar6);
      (**(code **)(*param_1 + 0x28))("cvarname",&DAT_103236cf,uVar3);
      (**(code **)(*param_1 + 0x28))("newname",&DAT_1043677a);
      (**(code **)(*param_1 + 0x28))("oldname",&DAT_1043677a);
      (**(code **)(*param_1 + 0x28))("reason",&DAT_103236cf);
      (**(code **)(*param_1 + 0x604))("specgui");
      (**(code **)(*param_1 + 0x604))("specgui",1,0);
      (**(code **)(*param_1 + 0x6c))("models/vehicles/cars/truck-6_destroyed_p4.mdl");
      (**(code **)(*param_1 + 0xc))(param_1,"expecting =\n");
      (**(code **)(*piVar1 + 0x24))("-game","tacint");
      (**(code **)(*piVar1 + 0x34))("fixid",param_5[0x53]);
      (**(code **)(*piVar1 + 0x34))("friendsid",param_5[0x2c]);
      (**(code **)(*piVar1 + 0x34))("index",param_1[0x73]);
      (**(code **)(*piVar1 + 0x34))("index",param_3);
      (**(code **)(*piVar1 + 0x34))("otherid",uVar2);
      (**(code **)(*piVar1 + 0x34))("userid",param_5[0x22]);
      (**(code **)(*piVar1 + 0x40))("networkid",param_5 + 0x23);
      (**(code **)(*piVar1 + 0x40))("reason","restart");
      (**(code **)(*piVar1 + 0x98))("targetname",local_114,0x100);
      (**(code **)(*piVar1 + 0xac))("TurnOff",this,this,0,uStack20,local_10,0xffffffff,0,0);
      (**(code **)(*piVar10 + 0x388))("#TI_READY");
      (**(code **)(*piVar13 + 0x34))("attacker",uVar15);
      (**(code **)(*piVar16 + 0x34))("userid",0);
      (**(code **)(*piVar2 + 0x14))("-reslistmap");
      (**(code **)(*piVar2 + 0x28))("shaderapidx9.dll");
      (**(code **)(*piVar2 + 0x34))("entindex",iVar3);
      (**(code **)(*piVar2 + 0x34))("entindex_attacker",iVar3);
      (**(code **)(*piVar2 + 0x34))("entindex_inflictor",iVar3);
      (**(code **)(*piVar2 + 0x34))("newmode",*(undefined4 *)((int)this + 0xc));
      (**(code **)(*piVar2 + 0x34))("obs_target",*(undefined4 *)((int)this + 0x2c));
      (**(code **)(*piVar2 + 0x34))("oldmode",iVar1);
      (**(code **)(*piVar2 + 0x34))("userid",uVar3);
      (**(code **)(*piVar2 + 0x40))(&DAT_10464104,"Please wait for broadcast to start ...");
      (**(code **)(*piVar2 + 0x8ec))("Bomb Has Been Armed",1);
      (**(code **)(*piVar2 + 0x94))("nodeFOV",&DAT_1044b510);
      (**(code **)(*piVar2 + 0xac))("connect",(int)puVar5 + 5);
      (**(code **)(*piVar2 + 0xac))("status",(int)puVar5 + 5);
      (**(code **)(*piVar2 + 8))("radialmenupanel",0);
      (**(code **)(*piVar2 + 8))("scores",0);
      (**(code **)(*piVar3 + 0x14))("+mat_hdr_level");
      (**(code **)(*piVar3 + 0x14))("-autoconfig");
      (**(code **)(*piVar3 + 0x14))("-dxlevel");
      (**(code **)(*piVar3 + 0x14))("-full");
      (**(code **)(*piVar3 + 0x14))("-fullscreen");
      (**(code **)(*piVar3 + 0x14))("-height");
      (**(code **)(*piVar3 + 0x14))("-startwindowed");
      (**(code **)(*piVar3 + 0x14))("-width");
      (**(code **)(*piVar3 + 0x14))("-window");
      (**(code **)(*piVar3 + 0x14))("-windowed");
      (**(code **)(*piVar3 + 0x18))("-startmap",&local_10c);
      (**(code **)(*piVar3 + 0x18))("-xboxreslist",0);
      (**(code **)(*piVar3 + 0x248))(0xfff5940f,"RenderGlowModels");
      (**(code **)(*piVar3 + 0x34))("blocked",cStack00000007);
      (**(code **)(*piVar3 + 0x34))("obs_target",*(undefined4 *)((int)this + 0x2c));
      (**(code **)(*piVar3 + 0x34))("old_target",iVar1);
      (**(code **)(*piVar3 + 0x34))("priority",6);
      (**(code **)(*piVar3 + 0x364))("dmLeader",puVar12);
      (**(code **)(*piVar3 + 0x40))(&DAT_10567020,"fire_extinguisher");
      (**(code **)(*piVar3 + 0x94))("vehiclescript",param_1 + 0x13d,pcVar6,puVar11);
      (**(code **)(*piVar3 + 4))("WeightB",fVar2);
      (**(code **)(*piVar3 + 4))("WeightG",fVar2);
      (**(code **)(*piVar3 + 4))("WeightR",fVar2);
      (**(code **)(*piVar3 + 8))("UseChannelWeighting",1);
      (**(code **)(*piVar3 + 8))("scores",1);
      (**(code **)(*piVar4 + 0x18))("-jroom",(int)puVar5 + 5);
      (**(code **)(*piVar4 + 0x31c))("resource/ingame/hud_gamepanel.res",0,0,0);
      (**(code **)(*piVar4 + 0x34))("clients",local_8);
      (**(code **)(*piVar4 + 0x34))("proxies",local_10);
      (**(code **)(*piVar4 + 0x34))("slots",local_c);
      (**(code **)(*piVar4 + 0x34))("userid",uVar5);
      (**(code **)(*piVar4 + 0x40))("mapname",local_5c);
      (**(code **)(*piVar4 + 0x40))("master",local_30);
      (**(code **)(*piVar4 + 0x40))("newname",pbVar1);
      (**(code **)(*piVar4 + 0x40))("oldname",pbVar2);
      (**(code **)(*piVar4 + 0x40))(&DAT_10353100,"TacticalTV reconnecting ...");
      (**(code **)(*piVar5 + 0x34))("attacker",0);
      (**(code **)(*piVar5 + 0x34))("attacker",uVar6);
      (**(code **)(*piVar5 + 0x34))("player",iVar3);
      (**(code **)(*piVar5 + 0x34))("subject",iVar2);
      (**(code **)(*piVar5 + 0x40))("cvarvalue","***PROTECTED***");
      (**(code **)(*piVar5 + 0x40))("cvarvalue",*(undefined4 *)(local_8 + 0x24));
      (**(code **)(*piVar5 + 0x40))("networkid",&DAT_103236cf);
      (**(code **)(*piVar6 + 0x30))("kicked",uVar8);
      (**(code **)(*piVar6 + 0x34))(piVar6,"Added to banned list");
      (**(code **)(*piVar6 + 0x40))("duration",local_120);
      (**(code **)(*piVar7 + 0x128))("vguicancel");
      (**(code **)(*piVar7 + 0x28))("PseudoUUID",local_28);
      (**(code **)(*piVar7 + 0xc))("TCP connection failed.");
      (**(code **)(*piVar7 + 8))("radialmenupanel",1);
      (**(code **)(*piVar8 + 0x34))("assister",uVar9);
      (**(code **)(*piVar8 + 0x34))("attacker",local_18);
      (**(code **)(*piVar8 + 0x34))("customkill",*(undefined4 *)(param_2 + 0x4c));
      (**(code **)(*piVar8 + 0x34))("damagebits",*(undefined4 *)(param_2 + 0x48));
      (**(code **)(*piVar8 + 0x34))("userid",uVar9);
      (**(code **)(*piVar8 + 0x34))("weaponid",local_8);
      (**(code **)(*piVar8 + 0x40))("weapon",pbVar5);
      (**(code **)(*piVar9 + 0x34))("blocked",uVar8 & 0xff);
      (**(code **)(*this + 0x128))("Close");
      (**(code **)(*this + 0x128))("FlmExtrasFlyout_Simple");
      (**(code **)(*this + 0x31c))("resource/LoadingDialogDualProgress.res",0,0,0);
      (**(code **)(*this + 0x350))("BtnSetupMicrophone",0);
      (**(code **)(*this + 0x350))("BtnSetupMicrophone",param_1);
      (**(code **)(*this + 0x914))("weapon_knife",piVar2,0);
      (**(code **)(*this + 0x94))("model",(int)puVar4 + 5,uVar11);
      (**(code **)(*this + 900))("items/requisitions/flashbang");
      (**(code **)(*this_00 + 0x94))("solid",&DAT_104b8550);
      (**(code **)(*this_01 + 0x94))("model","models/vehicles/airport/drivable/refuel_truck-1.mdl");
      (**(code **)(*this_01 + 0x94))("model",(int)puVar9 + 5);
      (**(code **)(*this_01 + 0x94))("vehiclescript","scripts/vehicles/refuel_truck-1.txt");
      (**(code **)(*this_01 + 0x94))("vehiclescript",(int)puVar9 + 5);
      (**(code **)(DAT_106cb7e8[1] + 0x50))(local_234,1,"PROFILE");
      (**(code **)(DAT_106cb7e8[1] + 0x50))(param_1,1,"PROFILE");
      (**(code **)(DAT_106cb7e8[1] + 0x5c))("cfg\\video.txt","PROFILE",local_34,1);
      (**(code **)(DAT_107c09f8[1] + 0x5c))("cfg\\video.txt","PROFILE",local_34,1);
      (**(code **)(iVar1 + 0x34))("subject",uVar4);
      (**(code **)(iVar1 + 0x388))("#Title_Purchase");
      (**(code **)(iVar5 + 0x34))("subject",uVar4);
      (**(code **)(iVar5 + 0x70))(DAT_107c09f8,param_1,"\t\t{ NUMBER %s %s }\r\n",puVar6,puVar7);
      (**(code **)(iVar5 + 0x70))(DAT_107c09f8,param_1,"\t\t{ \"%s\" }\r\n",puVar7);
      (**(code **)(iVar6 + 0x34))("userid",uVar13);
      (**(code **)(piVar1[1] + 0x84))("bone_Chest");
      (**(code **)(piVar1[1] + 0x84))("bone_Groin");
      (**(code **)(piVar1[1] + 0x84))("bone_Head");
      (**(code **)(piVar1[1] + 0x84))("bone_L_Arm");
      (**(code **)(piVar1[1] + 0x84))("bone_L_Leg");
      (**(code **)(piVar1[1] + 0x84))("bone_R_Arm");
      (**(code **)(piVar1[1] + 0x84))("bone_R_Leg");
      (**(code **)(piVar1[1] + 0x84))("bone_Stomach");
      (*pcVar10)(&param_1,"GAME INSTRUCTOR: ");
      (*pcVar10)(&param_1,"Set to draw...\n");
      (*pcVar10)(DAT_10427564,0,0xffb400b4,"Entry Blocked: %s\n",*(undefined4 *)(param_1 + 0x50));
      (*pcVar18)("[JumpToPosition] Final position was set to: %s\n",(int)puVar9 + 5);
      (*pcVar2)("Ignoring %d specified targetnames.\n",local_32);
      (*pcVar3)("GetDynamicBaseline: FindStringIndex(%s-%s) failed.",local_44,
      (*pcVar4)(&DAT_106a8e20,"GAME INSTRUCTOR: ");
      (*pcVar4)(&DAT_106a8e24,"Priority changed from ");
      (*pcVar5)("%s: %f\n",local_8 + 1);
      (*pcVar5)("[CShadowMgr::RenderShadowList] growing disp shadow decal cache (decals: %d, cache: %d, diff: %d).\n"
      (*pcVar6)("New distribution is:\n");
      (*pcVar8)("%20s (%4.1f%%) moved more than tolerance\n",pcVar5,uVar15,uVar16);
      (*pcVar8)("%20s not completed on time\n",pcVar5);
      (*pcVar8)("No Within-Jitter Reuses\n");
      (*pcVar8)("None moved more than tolerance\n");
      (DAT_104f31b8 = (void **)(**(code **)(*DAT_106cb7c4 + 0x44))("cl_interp_ratio"),
      (DAT_104f31bc = (int *)(**(code **)(*DAT_106cb7c4 + 0x44))("cl_interp"),
      (FUN_10265b40(param_1,"Windows 2000 ",param_2,0xffffffff), local_a0.dwMajorVersion == 5)))) {
      (FUN_104a8d56(pcVar3,(int)"%f %f %f"), *param_1 == -1.0)) &&
      (FUN_104a8d56(pcVar4,(int)"%f %f %f"), *param_2 == -1.0)) &&
      (bVar1 = FUN_100a6de0(*(void **)((int)this + 4),"npc_monk"), bVar1)) &&
      (bVar1 = FUN_100a6de0(param_1,"env_steamjet"), bVar1)) &&
      (bVar1 = FUN_100a6de0(param_1,"prop_dynamic_override"), !bVar1)))) {
      (bVar1 = FUN_100a6de0(param_1,"scripted_sequence"), bVar1)))) {
      (bVar1 = FUN_100a6de0(param_2,"func_nav_blocker"), bVar1)))) {
      (bVar2 = FUN_100a6de0(*(void **)(param_1 + 4),"npc_monk"), bVar2)) &&
      (bVar2 = FUN_100a6de0(param_1,"dynamic_prop"), bVar2)))) {
      (bVar2 = FUN_100a6de0(param_1,"prop_dynamic"), bVar2)))) {
      (bVar6 = FUN_100a6de0(this_00,"prop_physics"), bVar6)))) {
      (iVar2 = FUN_1019a8f0(PTR_DAT_10417380,(byte *)"hostname_changed",(uint *)0x0), iVar2 != 0))
      (iVar2 = __stricmp(_Str1,".zoo"), iVar2 != 0)) &&
      (iVar3 = FUN_1008c000(this,(byte *)"shield_attachment"), iVar3 != -1)))) {
      (iVar6 = (**(code **)(DAT_10681754[1] + 0x24))("bug.zip",&DAT_1032b700,0), iVar6 != 0)))) {
      (local_14 = (int *)(*DAT_104e3348)("VClientDllSharedAppSystems001",0), local_14 == (int *)0x0)
      (param_1 == (byte *)"rendercolor32")) ||
      (param_1 == (uint *)"rendercolor32")) ||
      (pbVar1 = (byte *)(**(code **)(*param_1 + 4))(), pbVar1 == (byte *)"break_breakable")) ||
      (pbVar1 = (byte *)FUN_10268930(puVar3,(uint *)"ConnectServerDetailsRequest/server",
      (pcVar2 = (char *)FUN_10268930((void *)param_1[0x59],(uint *)"networkid_force",
      (piVar2 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("debug/hsv","Other textures",1,0),
      (piVar2 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("debug/yuv","Other textures",1,0),
      (pvVar3 = (void *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"info_suitcase_spawn"),
      (uVar1 = FUN_10314250(DAT_10693b08,(uint *)"mafia_mode"), (char)uVar1 != '\0')) && (true)) {
      (uVar3 = FUN_102c09d0(DAT_107a27d0,(uint *)"assign_bomb",'\x01'), (char)uVar3 != '\0')))) {
      (uVar6 = FUN_10314280(DAT_10693b08,(uint *)"assign_bomb",'\x01'), (char)uVar6 != '\0')))) {
      (uVar8 = FUN_10314280(param_1,(uint *)"use_vip_car",'\x01'), (char)uVar8 != '\0')) &&
      ) || (local_1c = (int *)(*DAT_106abcdc)("VServerDllSharedAppSystems001",0),
      *(char **)(&DAT_1004ff40 + iVar6 * 8) = "LBH_max";
      *(char **)(&DAT_1004ff40 + iVar6 * 8) = "MBH_max";
      *(char **)(&stack0xffffffa8 + iVar1) = "Encountered invalid element ID data!";
      *(char **)((int)&pauStack32 + iVar2) = "nearest";
      *(char **)((int)&puStackY164 + iVar2) = "%d_splitter_pos";
      *(char **)((int)apauStack28 + iVar2 + 4) = "random";
      *(char **)((int)apauStack28 + iVar2 + 4) = "visible";
      *(char **)((int)piVar17 + -4) = "<enter description here>";
      *(char **)((int)puVar13 + -8) = "basemodui_scheme";
      *(char **)(iVar3 + 0x6afa4) = "no future";
      *(char **)(param_1 + 0x18) = "insufficient memory";
      *(char **)(param_1 + 0x50) = "out of memory";
      *(char **)(param_1 + 0x6afa4) = "ct_init: 256+dist != 512";
      *(char **)(param_1 + 0x6afa4) = "ct_init: dist != 256";
      *(char **)(param_1 + 0x6afa4) = "ct_init: length != 256";
      *(char **)(param_1 + 0x6afa4) = "more < 2";
      *(char **)(param_9 + 0x18) = "empty distance tree with lengths";
      *(char **)(param_9 + 0x18) = "incomplete distance tree";
      *(char **)(param_9 + 0x18) = "oversubscribed literal/length tree";
      *(char **)(puVar12 + -0x10) = "(%s) Original Full Lighting Data:           %.2f MB\n";
      *(char **)(puVar12 + -0x10) = "(%s) Reduced To Only Dynamic Lighting Data: %.2f MB\n";
      *(char **)(puVar13 + -8) = "filename";
      *(char **)(puVar4 + -8) = "Unknown return value (%lu) from WaitForMultipleObjects";
      *(char **)(puVar7 + -0x10) = "%25s %p %p\n";
      COM_TimestampedLog(" CBaseClient::SendServerInfo(finished)");
      COM_TimestampedLog("CL_InstallAndInvokeClientStringTableCallbacks");
      COM_TimestampedLog("CL_RegisterResources");
      COM_TimestampedLog("ConsistencyCheck");
      COM_TimestampedLog("DrawStartupGraphic - Finish");
      COM_TimestampedLog("DrawStartupGraphic - Start");
      COM_TimestampedLog("InitRegistry");
      COM_TimestampedLog("Load Background Movie - End");
      COM_TimestampedLog("SV_InitSendTables");
      COM_TimestampedLog("SetMode - Finish");
      COM_TimestampedLog("UnserializeLeafList");
      COM_TimestampedLog("UnserializeModelDict");
      COM_TimestampedLog("UnserializeModels");
      COM_TimestampedLog("cl:  create \'%s\'",ppcVar1[2]);
      COM_TimestampedLog("materials->CacheUsedMaterials");
      COM_TimestampedLog("serverGameDLL->DLLInit - Finish");
      COM_TimestampedLog("serverGameDLL->DLLInit - Start");
      COM_TimestampedLog("soundemitterbase->Connect");
      CVProfile::EnterScope((CVProfile *)g_VProfCurrentProfile_exref,"BotThink",0,"NPCs",false,4);
      ConColorMsg((Color *)&DAT_106a8e20,"GAME INSTRUCTOR: ");
      ConColorMsg((Color *)&DAT_106a8e24,")\n");
      ConColorMsg((Color *)&DAT_106a8e24,", [%s] ");
      ConColorMsg((Color *)&DAT_106a8e24,", [%s] ",uVar10);
      ConColorMsg((Color *)&DAT_106a8e24,".\n");
      ConColorMsg((Color *)&DAT_106a8e24,"Initializing...\n");
      ConColorMsg((Color *)&DAT_106a8e24,"Lesson ");
      ConColorMsg((Color *)&DAT_106a8e24,"NOT opened (because prereqs haven\'t been met).\n");
      ConColorMsg((Color *)&DAT_106a8e24,"NOT opened (because root lesson could not be found).\n");
      ConColorMsg((Color *)&DAT_106a8e24,"Opportunity ");
      ConColorMsg((Color *)&DAT_106a8e24,"Set to draw...\n");
      ConColorMsg((Color *)&DAT_106a8e24,"Stopped lesson ");
      ConColorMsg((Color *)&DAT_106a8e24,"\"%s\"",puVar3);
      ConColorMsg((Color *)&DAT_106a8e24,"\"%s\"",uVar10);
      ConColorMsg((Color *)&DAT_106a8e24,"\tCloseOpportunity()\n");
      ConColorMsg((Color *)&DAT_106a8e24,"\tMarkSucceeded()\n");
      ConColorMsg((Color *)&DAT_106a8e24,"\tPresentEnd()\n");
      ConColorMsg((Color *)&DAT_106a8e24,"\tPresentStart()\n");
      ConColorMsg((Color *)&DAT_106a8e24,"\tQ_strcat([%s], [%s] ",param_3,uVar10);
      ConColorMsg((Color *)&DAT_106a8e24,"\tQ_strcmp([%s] ",param_3);
      ConColorMsg((Color *)&DAT_106a8e24,"\tQ_strcpy([%s], [%s] ",param_3,uVar10);
      ConColorMsg((Color *)&DAT_106a8e24,"\tQ_stricmp( [%s]->ModelName() ");
      ConColorMsg((Color *)&DAT_106a8e24,"\tScopeIn()\n");
      ConColorMsg((Color *)&DAT_106a8e24,"\tScopeOut()\n");
      ConColorMsg((Color *)&DAT_106a8e24,"\tStringHasPrefix([%s] ",param_3);
      ConColorMsg((Color *)&DAT_106a8e24,"\tSuccessful delayed player swap!");
      ConColorMsg((Color *)&DAT_106a8e24,"\tUTIL_CountNumBitsSet([%s]) ");
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] ");
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] *= [%s] ",param_3,uVar2);
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] += [%s] ",param_3,uVar2);
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] -= [%s] ",param_3,uVar2);
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] = [%s] ",param_3,uVar2);
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s] = [%s]\n");
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetActiveWeapon()->GetName() ");
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetHealth() ");
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetStubValue() ");
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->GetTeamNumber() ");
      ConColorMsg((Color *)&DAT_106a8e24,"\t[%s]->HealthFraction() ");
      ConColorMsg((Color *)&DAT_106a8e24,"\t[output] = [%s]->Weapon_GetSlot([%s] ",param_3,uVar15);
      ConColorMsg((Color *)&DAT_106a8e24,"\tm_fLockTime = gpGlobals->curtime\n");
      ConColorMsg((Color *)&DAT_106a8e24,"closed for reason: ");
      ConColorMsg((Color *)&DAT_106a8e24,"marked as displayed.\n");
      ConColorMsg((Color *)&DAT_106a8e24,"marked as succeeded.\n");
      ConColorMsg((Color *)&DAT_106a8e28,"%.1f ");
      ConColorMsg((Color *)&DAT_106a8e28,"%.1f\n",(double)param_6);
      ConColorMsg((Color *)&DAT_106a8e28,"%f ");
      ConColorMsg((Color *)&DAT_106a8e28,"%f\n",(double)(float)param_6);
      ConColorMsg((Color *)&DAT_106a8e28,"%f\n",(double)param_6);
      ConColorMsg((Color *)&DAT_106a8e28,"%i ",iVar4);
      ConColorMsg((Color *)&DAT_106a8e28,"%i\n",iVar8);
      ConColorMsg((Color *)&DAT_106a8e28,"%s ",pcVar3);
      ConColorMsg((Color *)&DAT_106a8e28,"%s");
      ConColorMsg((Color *)&DAT_106a8e28,"... ");
      ConColorMsg((Color *)&DAT_106a8e28,"...");
      ConColorMsg((Color *)&DAT_106a8e28,"\"%s\" ");
      ConColorMsg((Color *)&DAT_106a8e28,"\"%s\" ",param_8,puVar25);
      ConColorMsg((Color *)&DAT_106a8e28,"\"%s\"",param_8);
      ConColorMsg((Color *)&DAT_106a8e28,"\"%s\"",puVar3);
      ConColorMsg((Color *)&DAT_106a8e28,"\"%s\"",uVar10);
      ConColorMsg((Color *)&DAT_106a8e28,"\"%s\"\n",param_8,puVar25);
      ConColorMsg((Color *)&DAT_106a8e2c,"\"%s\" ",uVar3);
      ConColorMsg((Color *)&DAT_106a8e30,"%s\n",uVar5);
      ConColorMsg((Color *)&DAT_106a8e30,"\"%s\" ",puVar4);
      ConColorMsg((Color *)&DAT_106a8e30,"\"%s\" ",uVar5);
      ConColorMsg((Color *)&DAT_106a8e30,"\"%s\"",uVar3);
      ConColorMsg((Color *)&DAT_106a8e30,"\tVar handle as Player returned NULL!\n");
      ConColorMsg((Color *)&DAT_106a8e30,"\tVar handle returned NULL!\n");
      ConColorMsg((Color *)&DAT_106a8e34,"\"%s\" ",uVar3);
      ConColorMsg((Color *)&local_8," )\n");
      ConColorMsg((Color *)&local_8,"Bug submission succeeded\n");
      ConColorMsg((Color *)&local_8,"Couldn\'t get interface \'%s\' from \'%s\'\n","BugReporter005",
      ConColorMsg((Color *)&local_8,"Failed to determine bug submission name.\n");
      ConColorMsg((Color *)&local_8,"area %d is unblocked by a nav blocker\n",
      ConColorMsg((Color *)&local_c,"\"%s\"",pcVar11);
      ConColorMsg((Color *)&param_1,"Closed Steam Socket %s\n",puVar3);
      ConColorMsg((Color *)&param_1,"Destroyed %s connection to %llx\n",puVar2,uVar4,uVar5);
      ConColorMsg((Color *)&param_1,"Opened Steam Socket %s ( socket %d )\n",puVar5,uVar1);
      ConColorMsg((Color *)&param_1,"UDP -> %s: sz=%5i seq=%5i ack=%5i rel=%1i tm=%8.3f%s\n",
      ConColorMsg((Color *)&param_2,"  Send to %llx %u bytes on %s (status %s - %s)\n",*puVar4,
      ConColorMsg((Color *)&param_2,"Generated %s for %llx\n",pcVar5,iVar7,iVar6);
      ConColorMsg((Color *)&param_2,"UDP <- %s: sz=%5i seq=%5i ack=%5i rel=%1i tm=%8.3f wire=%i\n",
      ConColorMsg((Color *)&param_3,"%s %d blocked area %d\n",pcVar4,iVar6,uVar7);
      ConColorMsg((Color *)&param_3,"DUPE: non-entity blocked area %d\n",
      ConColorMsg((Color *)&param_3,"Terminate %llx\n",param_2,uVar1);
      ConDMsg("CNetChan::SendDatagram:  data would overfow, ignoring\n");
      ConDMsg("D: delta entity: %i %s\n",param_5,*(undefined4 *)(param_2 + 0xc));
      ConDMsg("E: delta entity: %i %s\n",param_5,*(undefined4 *)(param_2 + 8));
      ConDMsg("E= %i bits (%i bytes)\n",param_4[3] - _DAT_106813c0,
      ConDMsg("Failed to execute event for classId %i\n",*(short *)puVar2 + -1);
      ConDMsg("NET_SendPacket Warning: %s : %s\n",pcVar10,pcVar6);
      ConDMsg("Unable to load sky %s\n",uVar6);
      ConDMsg("Unexepcted command token [%d] in .demo file\n",bVar1);
      ConDMsg("[joy %d]%s is unbound.\n",iVar4,uVar3);
      ConMsg("%d total.\n");
      ConMsg("%i %3i.%3i.%3i.%3i : %.3f min\n",iVar2,uVar1 & 0xff,uVar1 >> 8 & 0xff,
      ConMsg("%i %3i.%3i.%3i.%3i : permanent\n",iVar2,uVar1 & 0xff,uVar1 >> 8 & 0xff,
      ConMsg("%i %s : %.3f min\n",iVar5,puVar1);
      ConMsg("%i %s : permanent\n",iVar5);
      ConMsg("%s ",puVar2);
      ConMsg("%s",&DAT_10640a50);
      ConMsg("%s:Dropped %i packets at %i\n",pcVar8,uVar14,uVar13);
      ConMsg("%s:Too many dropped packets (%i) at %i\n",pcVar8,uVar14,uVar12);
      ConMsg("%s:corrupted packet %i at %i\n",pcVar8,uVar12,uVar14);
      ConMsg("%s:out of order packet %i at %i\n",pcVar8,uVar13,uVar12);
      ConMsg("%s\n",local_108);
      ConMsg("%s\n",pbVar15);
      ConMsg(", udp");
      ConMsg("A2A_ACK from %s\n");
      ConMsg("A2A_ACK from %s\n",pcVar18);
      ConMsg("Bad filter address: %s\n",param_1);
      ConMsg("Bad maxclasses (%u) from server.\n",uVar6);
      ConMsg("Both ConVars must be marked FCVAR_REPLICATED for linkage to work (%s)\n",uVar3);
      ConMsg("CBaseDemoAction::CreateActionEditor:  Missing edit factory for %s\n",
      ConMsg("CBaseDemoAction::CreateDemoAction:  Missing factory for %s\n",
      ConMsg("CDemoFile::Open: file already open.\n");
      ConMsg("CModelLoader::Map_IsValid:  Empty mapname!!!\n");
      ConMsg("CNetChan: received bad control cmd %i from %s.\n",param_1,pcVar5);
      ConMsg("CNetChan::SetMaxBufferSize: cant preserve exiting data %i>%i.\n",_Size,param_2);
      ConMsg("Cannot change maxplayers while the server is running\n");
      ConMsg("Closed demo file, %i bytes.\n",uVar1);
      ConMsg("Completed demo, recording time %.1f, game frames %i.\n",(double)(float)param_1[0x14a],
      ConMsg("Could not find factory interface in library %s",param_1);
      ConMsg("Couldn\'t CRC server map: %s\n",local_274);
      ConMsg("Current:  None\n");
      ConMsg("Deferring connect command!\n");
      ConMsg("ERROR! SendData reliabe data too big (%i)",uVar3);
      ConMsg("ERROR! Stream indata too big (%i)",local_30);
      ConMsg("EmitAmbientSound:  sound not precached: %s\n",param_3);
      ConMsg("EmitAmbientSound: invalid sentence number: %s",pcVar2);
      ConMsg("Error! Failed to load network socket library.\n");
      ConMsg("FCVAR_REPLICATED can\'t also be FCVAR_PROTECTED (%s)\n",uVar3);
      ConMsg("FCVAR_REPLICATED not valid on ConCommands (%s)\n",uVar3);
      ConMsg("Fix Game API: %i\n",uVar3);
      ConMsg("Interval_per_tick %f out of range [%f to %f]\n",(double)fVar1,0,0x3f800000,0,
      ConMsg("Master \"%s\", delay %.0f\n");
      ConMsg("Master at %s already in list\n",pcVar2);
      ConMsg("No demos listed with startdemos\n");
      ConMsg("No panels starting with %s\n");
      ConMsg("Parent cvar in client.dll not allowed (%s)\n",uVar3);
      ConMsg("Parent cvar in server.dll not allowed (%s)\n",uVar3);
      ConMsg("Playing demo from %s.\n",param_1);
      ConMsg("Reading complete demo file at once...\n");
      ConMsg("Reading time :%.4f\n",(double)(fVar6 - (float10)(double)fVar5));
      ConMsg("Received delta packet entities while spawing!\n");
      ConMsg("Received fragments: start %i, num %i\n",local_c,local_8);
      ConMsg("Relay \"%s\", connect to %s\n",uVar5,pcVar7);
      ConMsg("SV_StartSound: invalid sentence number: %s",pcVar4);
      ConMsg("Server logging data to file %s\n",uVar5);
      ConMsg("Skipping ahead for %f seconds\n",(double)fVar1);
      ConMsg("TCP <- %s: invalid ACKN streamlen %d seqnr %i\n",pcVar5,iVar4,ppuVar8);
      ConMsg("TacticalTV broadcast active.\n");
      ConMsg("TacticalTV is disabled on this server.\n");
      ConMsg("TacticalTV relay active.\n");
      ConMsg("TacticalTV stopped, %i clients disconnected.\n",uVar2);
      ConMsg("This game doesn\'t support save/restore.");
      ConMsg("Tried to write movie buffer with no filename set!\n");
      ConMsg("Unable to open logfiles under %s\nLogging disabled\n",local_254);
      ConMsg("Usage:  banid < minutes > < userid | uniqueid > { kick }\n");
      ConMsg("Use 0 minutes for permanent\n");
      ConMsg("WARNING! NET_CloseSocket: %s\n",pcVar2);
      ConMsg("WARNING: msg overflowed for %s\n",(int)this + 0x34);
      ConMsg("Warning:  Table %s is full, can\'t add %s\n",uVar2);
      ConMsg("\"%s\" is not bound\n",puVar4);
      ConMsg("\"max_splitscreen_players\" is \"%u\"\n",DAT_10417460);
      ConMsg("\nServer connection timed out.\n");
      ConMsg("\nServer shutting down\n");
      ConMsg("\nTacticalTV connection timed out.\n");
      ConMsg("banid:  Couldn\'t resolve uniqueid \"%s\".\n");
      ConMsg("check \"sv_logfile\", \"sv_logecho\", and \"logaddress_list\"");
      ConMsg("demo_play <demoname> : plays a demo file\n");
      ConMsg("editing material \"%s\"\n",uVar4);
      ConMsg("file");
      ConMsg("hit surface has no samples\n");
      ConMsg("host_profile : %i clients, %.1f msec, %.1f fps\n",iVar3,dVar7,dVar6);
      ConMsg("module %s already loaded\n",local_20f);
      ConMsg("no destinations! (file, console, or udp)\n");
      ConMsg("not currently logging\n");
      ConMsg("removeid:  filter removed for %s, ID %s\n",pcVar9,puVar2);
      ConMsg("removeid:  invalid ban ID \"%s\"\n",pcVar9);
      ConMsg("removeip:  couldn\'t find %s\n",puVar4);
      ConMsg("removeip:  invalid slot %i\n",iVar2);
      ConMsg("toolload <toolname>: loads a tool\n");
      ConMsg("toolunload <toolname> [-nosave]: unloads a tool\n");
      DAT_0044a074 = FUN_00405c80(param_1,(int)"VENGINE_LAUNCHER_API_VERSION004");
      DAT_104e3354 = (*DAT_104e3348)("VClient016",0);
      DAT_106531b8 = (**(code **)(*piVar2 + 0xc))("prop_data",1);
      DAT_10654508 = (**(code **)(*piVar3 + 0xc))("physgun_interactions",1);
      DAT_106ac638 = (*DAT_106abcdc)("ServerGameDLL005",0);
      DAT_106ac65c = (**(code **)(*DAT_106cb7c4 + 0x44))("sv_noclipduringpause");
      DAT_106ac778 = (*(code *)puVar1)("Hammer001",0);
      DAT_106ac788 = (*(code *)puVar1)("fixapi2_AppSystem001",&local_10);
      DAT_106ad124 = GetProcAddress(DAT_106ad11c,"GetAsyncKeyState");
      DAT_106cb888 = (*(code *)puVar10)("VSoundEmitter003",0);
      DAT_107972a0 = FUN_1042ea30(this,"ModData");
      DAT_1079ae08 = (int *)(**(code **)(*DAT_107c09d0 + 0x44))("sv_alltalk");
      DAT_107a27c4 = (**(code **)(*piVar2 + 0xc))("baseentity",1);
      DAT_107b4bc0 = (uint *)FUN_1014fb90(this,(int *)"effects/spark");
      DAT_107b4c94 = (**(code **)(*piVar3 + 0xc))("handlerID",1);
      DAT_107c09c8 = (*(code *)param_1)("SourceVirtualReality001",0);
      DAT_107c09cc = (*(code *)param_1)("MediaPlayer001",0);
      DAT_107d487c = GetProcAddress(DAT_107d4898,"NP_GetSignature");
      DAT_10833cb4 = GetProcAddress(hModule,"VTResume");
      DAT_10833cb8 = GetProcAddress(hModule,"VTPause");
      DName::DName(in_stack_00000004,"{flat}");
      DName::operator_((DName *)&local_10,"long ");
      DName::operator_((DName *)&local_20,"`");
      DName::operator_((DName *)&local_c,"volatile");
      DName::operator__((DName *)&local_10,"double");
      DName::operator__((DName *)&local_28,"\'");
      DName::operator__((DName *)&local_30,"\'");
      DName::operator__((DName *)&local_30,"}\'");
      DVar1 = Warning("------------------------------------------------------------\n");
      DevMsg("   %32s -- select %5.2f, start %5.2f, run %5.2f\n",puVar3[-4],in_XMM0_Qa,dVar4,dVar5);
      DevMsg("   %d channel(s)\n   %d bits/sample\n   %d samples/sec\n",uVar5);
      DevMsg("  %20s = \'%s\' (weight %f)\n",*(undefined4 *)(iVar10 + 8 + uVar9 * 0x10),puVar5);
      DevMsg("  %20s = \'%s\' (weight %f)\n",*(undefined4 *)(iVar3 + 8 + uVar10 * 0x10),puVar6);
      DevMsg("  %20s = \'%s\'\n");
      DevMsg("  [Tier %d] Needs %d {original: %d, discount: %d}\n",local_18,iVar3);
      DevMsg(" - %s (%s)\n");
      DevMsg("!!ERROR!! Force end of route with no goal!\n");
      DevMsg("%3d: NumActive: %3d, AutoBBox: %3s \"%s\" \n",uVar5,(uint)*(ushort *)(iVar4 + 0x84),
      DevMsg("%d ",*puVar3);
      DevMsg("%s couldn\'t create ScriptScope!\n",pcVar2);
      DevMsg("%s missing from scenes.image\n",puVar8);
      DevMsg("%s not allowed to speak because they are in a scripted scene\n",pfVar2);
      DevMsg("%s trying to open a door that has been deleted!\n",pcVar4);
      DevMsg("%s",(int)puVar2 + 5);
      DevMsg("%s:\n");
      DevMsg("%s\n",*(undefined4 *)(iVar2 + 0x10 + DAT_104c4948));
      DevMsg("(gain %1.3f : dist ft %1.1f) ",(double)local_8,(double)(param_8 * 0.08333334));
      DevMsg("**ERROR: Combat State with no enemy! slamming to ALERT\n");
      DevMsg("**ERROR: NPC %s hearing sound of unknown type %d!\n",puVar5,*(uint *)(iVar1 + 0x10));
      DevMsg("AdvanceToIdealActivity calling SetActivityAndSequence because of change %s\n",pcVar4);
      DevMsg("Attempt to reserve server %s failed; timed out after %d attempts\n",puVar1,
      DevMsg("Awarding ammo (amount: %d) (bonus rate: %f)\n",iVar5);
      DevMsg("Bad node type!\n");
      DevMsg("Bink video \"%s\" size: %d %d\n",pcVar1,param_1,local_c);
      DevMsg("CBaseClient::ProcessBaselineAck: wrong baseline nr received (%i)\n",*piVar6);
      DevMsg("CBaseVPhysicsControllable::ParsePropData::Type: %s\n",pbVar6);
      DevMsg("CFuncStageBlocker::Spawn()=>NOT ENABLED STAGE3, REMOVING\n");
      DevMsg("CFuncStageBlocker::Spawn()=>TDM REMOVAL\n");
      DevMsg("CHLTVServer: failed to serialize chat \'%s\'.\n",uVar4);
      DevMsg("CHLTVServer: failed to serialize title \'%s\'.\n",uVar4);
      DevMsg("CHLTVServer::StartMaster: game event %s not found.\n",pbVar3);
      DevMsg("CNavArea::IncrementPlayerCount: Underflow\n");
      DevMsg("CNetworkStringTable::AddString:  client added string which server didn\'t put into table (consider SetAllowClientSideAddString?): %s %s\n"
      DevMsg("CREATING Game Panel\n");
      DevMsg("CSoundEmitterSystem:  sounds.txt entry \'%s\' has no waves listed under \'wave\' or \'rndwave\' key!!!\n"
      DevMsg("CTIPlayer::GiveWeaponAmmo: pWeapon is Null!!!\n");
      DevMsg("CTempEnts::PhysicsProp: model index %i not found\n",uVar4);
      DevMsg("CTempEnts::TIPhysicsProp: model index %i not found\n",param_1);
      DevMsg("CTextWindow::OnCommand: unknown exit command value %i\n",
      DevMsg("Collecting Spawns matching Team: %i, Stage: %i, Squad: %i\n",local_c,piVar18,piVar5);
      DevMsg("Couldn\'t find schedule (%s)\n",pcVar2);
      DevMsg("CreateEvent: event \'%s\' not registered.\n",param_1);
      DevMsg("DSP PRESET: %.0f size:(%.0f,%.0f) height:(%.0f) dif %.4f : refl %.4f : cobj: %.0f : sky %.0f \n"
      DevMsg("DSP: Warning, failed to allocate LFO.\n");
      DevMsg("DSP: Warning, failed to allocate delay line.\n");
      DevMsg("DSP: Warning, failed to allocate filter for delay line.\n");
      DevMsg("DSP: Warning, failed to allocate filter.\n");
      DevMsg("DSP: Warning, failed to allocate flt for reverb.\n");
      DevMsg("DirectSound create failed\n");
      DevMsg("ERROR! Vacating an empty slot!\n");
      DevMsg("ERROR:  Mistake in default schedule definitions, AI Disabled.\n");
      DevMsg("ERROR: Attempting to remove non-existing squad membmer!\n");
      DevMsg("ERROR: Bad %s LOCALID for %s\n",param_3,param_4);
      DevMsg("ERROR: Dynamic link dest WC node %d not found\n",*(undefined4 *)(iVar4 + 0x3bc));
      DevMsg("ERROR: Dynamic link source WC node %d not found\n",*(undefined4 *)(iVar4 + 0x3b8));
      DevMsg("ERROR: Missing or invalid schedule!\n");
      DevMsg("ERROR: Trying to get WC ID with no network!\n");
      DevMsg("ERROR: Trying to get WC ID with no table!\n");
      DevMsg("EmitAmbientSound: warning, broadcasting sound labled as SND_SPAWNING.\n");
      DevMsg("EmitSound:  Voice wave file %s doesn\'t specify CHAN_VOICE or CHAN_STREAM for sound %s\n"
      DevMsg("EmitSoundByHandle(%s) took %f milliseconds (client)\n",*(undefined4 *)(uVar3 + 4));
      DevMsg("Enforcing Low Violence\n");
      DevMsg("Error!! Squad %s is too big!!! Replacing last member\n",puVar8);
      DevMsg("Error: Sound %s failed to allocate a static channel and will not play\n");
      DevMsg("Event System loaded %i events from file %s.\n",*(undefined4 *)((int)this + 0x10),
      DevMsg("Execing config: %s\n",pcVar14);
      DevMsg("FUDGING VEHICLE POS TO: %s %s\n",(int)puVar6 + 5,(int)puVar5 + 5,puVar10,pcVar11,dVar9
      DevMsg("FireRoundWin_Attackers()\n");
      DevMsg("FireRoundWin_Defenders()\n");
      DevMsg("GetBestEquipment::Choosing Armour\n");
      DevMsg("GetTracerOrigin: Couldn\'t find attachment %d on model %s\n",uVar1,uVar6);
      DevMsg("Hint node (%s) being used by non-owner!\n",pcVar5);
      DevMsg("Hit vehicle\n",puVar8);
      DevMsg("InputForgetEntity does not support wildcards\n");
      DevMsg("Jumping to %s\n",iVar4 + 0x4b6c + iVar3 * 0x20);
      DevMsg("Jumping to %s\n",iVar5 * 0x20 + 0x4b6c + iVar1);
      DevMsg("KeyValues::RecursiveSaveToFile: TODO, missing code for TYPE_COLOR.\n");
      DevMsg("Level Shutdown (CHANGING TO GAME_INTERMISSION.BSP)\n");
      DevMsg("Listing Attributes for %s\n",uVar3);
      DevMsg("Loading type: %d\n");
      DevMsg("Loading: %s\n");
      DevMsg("Mafia Helicopter TakeOff\n");
      DevMsg("May not have cleaned up on NPC death\n");
      DevMsg("MoveInstanceHandle: models are different!\n");
      DevMsg("Music Player Initialized!\n");
      DevMsg("NET_SendLoopPacket:  packet too big (%i).\n",param_2);
      DevMsg("NET_SendPacket: bad address type (%i)\n",iVar4);
      DevMsg("NEW DSP NODE: size:(%.0f,%.0f) height:(%.0f) dif %.4f : refl %.4f : cobj: %.0f : sky %.0f \n"
      DevMsg("NPC per tick is %d [%d] (tick %d, frame %d)\n");
      DevMsg("NULL\n");
      DevMsg("No sound mixer selected!");
      DevMsg("None\n");
      DevMsg("Putting player in slot %i!\n",iVar5);
      DevMsg("RadialLinkController (%s) is far from its parent!\n",pcVar7);
      DevMsg("Radio String: %s\n",puVar10);
      DevMsg("Redownloading all lightmaps\n");
      DevMsg("Rule is disabled.\n");
      DevMsg("STATE_CALM:Find Goal\n");
      DevMsg("STATE_FINDSEAT:Find Goal\n");
      DevMsg("Scripted sequence destroyed while in use\n");
      DevMsg("Set primary sound buffer format: no\n");
      DevMsg("SetActivity : %s: %s -> %s\n",puVar4,pcVar3,pcVar2);
      DevMsg("SetIdealActivity : %s: %s -> %s\n",puVar5,pcVar3,pcVar2);
      DevMsg("Setting shield material to: %i\n",param_1);
      DevMsg("Shutdown %i predictable entities and %i client-created entities\n",iVar4,local_8);
      DevMsg("Size of nav file \'%s\' is %u bytes.\n",&DAT_10682408,uVar5);
      DevMsg("SpeakDispatchResponse:  Entity ( %i/%s ) refusing to speak due to scene entity, tossing \'%s\'\n"
      DevMsg("SplitContext:  warning, ignoring context \'%s\', missing comma separator!  Entire context was \'%s\'.\n"
      DevMsg("TE %u(%i) -> %s \n",uVar12,iVar9,uVar5);
      DevMsg("TI_FireBullets: LookupWeaponInfoSlot failed for weapon %s\n",local_13c);
      DevMsg("TI_FireBullets: weapon alias for ID %i not found\n",param_4);
      DevMsg("TI_FireBullets:: can\'t find weaponinfo for weaponid: %i\n",param_4);
      DevMsg("Task %d (#%d), ",*puVar4,param_1[499]);
      DevMsg("There are %i spawns to choose from\n",iStack56);
      DevMsg("Unable to load #included script %s\n",local_134);
      DevMsg("VERTICAL SHAFT Detected \n");
      DevMsg("VIP Killed\n");
      DevMsg("VOX_LoadSound: no sentence named %s\n",param_2);
      DevMsg("VOX_LoadSound: sentence is too long %s\n",pcVar2);
      DevMsg("ValidateRequsition Used Wrong!!!\n");
      DevMsg("Validation stalled\n");
      DevMsg("Votes: Option1 - %d, Option2 - %d, Option3 - %d, Option4 - %d, Option5 - %d\n",
      DevMsg("WARNING: %s(%s) has no eye offset in .qc!\n",puVar8,puVar7);
      DevMsg("WARNING: DSP processor failed to initialize! \n");
      DevMsg("Warning! Client hitzone props (stage:%i) overflow *max %i).\n",param_1,iVar3);
      DevMsg("Warning: Spawning AI script conditions (%s) associated with an non-existant NPC\n",
      DevMsg("XVoice: VDP packet to %d with unencrypted %d bytes out of %d bytes\n",param_1,
      DevMsg("[%s] View model for weapon: %s can\'t find sequence for: activity: %i, our model is: %s\n"
      DevMsg("[%s] bash; base: %f, attributes: %f\n");
      DevMsg("[CARDEBUG]  Non Drivable Car has no physics.. [%s]\n","Server");
      DevMsg("[CARDEBUG] REMAINING UPDATES TO APPLY: %i\n");
      DevMsg("[CARDEBUG] SAVE::CAR VELOCITY: [%s] POS:[%s] ANG: [%s] [%s]\n",(int)puVar4 + 5,
      DevMsg("[CARDEBUG] SWITCHED TO SERVER_SIM_DRIVER [%s]\n");
      DevMsg("[CShadowMgr::RenderShadowList] growing shadow decal cache (decals: %d, cache: %d, diff: %d).\n"
      DevMsg("[DEBUG]Resetting players speedscale to: 1.0f\n");
      DevMsg("[DEBUG]Setting players speedscale to: %f\n",(double)*(float *)((int)this + 0x4e0));
      DevMsg("[GS %s - %7.2f] %s",local_8c,(double)*(float *)PTR_DAT_106ab8dc,local_88c);
      DevMsg("[GS %s - %7.2f] %s",local_8c,(double)*DAT_10646018,local_88c);
      DevMsg("[Map]Initialising [%llu] %s\n",param_1,param_2,puVar1);
      DevMsg("[Map]Initialising [%llu] %s\n",param_1,param_2,puVar5);
      DevMsg("[RULES] Leaving Roundstate_Pregame because timer has elapsed!!\n");
      DevMsg("[RULES] Notifying server of MATCH END\n");
      DevMsg("[RULES] Spawning Player {%s : %s} at %s (%s)\n",uVar1,puVar4,uVar7);
      DevMsg("[Sound DSP] For Dsp %d, %s switch presets from %d to %d.\n",param_1,param_3,
      DevMsg("[Sound DSP] For Dsp %d, suppress cross fading from presets %d to %d as previous preset is expired.\n"
      DevMsg("\nPutting %s on RANDOM Squad: %i\n",uVar4);
      DevMsg("awarding tier %i\n");
      DevMsg("dsp avg gain:%1.2f in:%1.2f out:%1.2f 1/gain:%1.2f\n",
      DevMsg("failed (+exclude rule)");
      DevMsg("failed");
      DevMsg("matched, weight %4.2f (s %4.2f x c %4.2f)",(double)local_8,(double)(float)fVar7,
      DevMsg("nav_check_floor took %2.2f ms\n",SUB84(dVar8,0),(int)((ulonglong)dVar8 >> 0x20));
      DevMsg("nav_update_blocked took %2.2f ms\n");
      DevMsg("need to handle lack of ammo boxes..\n");
      DevMsg("npc found a chair at %s\n",(int)puVar3 + 5,puVar11,pcVar12,dVar8,uVar13,uVar14,uVar15,
      DevMsg("player exiting slot :%i:\n",uVar6);
      DevMsg(1,"%d Leaves in PVS, %d visible, %d outside of PVS\n",local_18,local_28,local_20);
      DevMsg(1,"CGameEventManager: unkown type %i for key \'%s\'.\n");
      DevMsg(1,"CLog::Print: string too long (>1024 bytes).");
      DevMsg(1,"Error! CMapOverview::SetMap: map image must be a square.\n");
      DevMsg(1,"Forced rebuild of bsp cache sound \'%s\'\n",local_204);
      DevMsg(1,"Trying to play unknown soundscape %s\n",pbVar6);
      DevMsg(2,"%s (%s) removing class relationships due to level transition\n",puVar11,puVar10);
      DevMsg(2,"(%d): Cycle latch used to correct %.2f in to %.2f instead of %.2f.\n",uVar5);
      DevMsg(2,"Late precache of %s, need to rebuild modelsounds.cache\n");
      DevMsg(2,"MapEntity_ParseEntity::entity %s is ignored for re-creation\n",&stack0xffffe730);
      DevMsg(2,"MapEntity_ParseEntity::entity %s is not available for this mode\n",&stack0xffffe730)
      DevMsg(2,"Microphone %s set dsp_speaker to %d.\n",puVar4,iVar2);
      DevMsg(2,"Multisource %s enabled (%d inputs)\n",pcVar5,uVar9);
      DevMsg(2,"PM  Got a NaN origin on %s\n",puVar3);
      DevMsg(2,"PM  Got a NaN velocity %s\n",puVar3);
      DevMsg(2,"PM  Got a velocity too high (%f) on %s\n",
      DevMsg(2,"Player changed material to %d (was %d)\n",iVar1,*(undefined4 *)((int)this + 0x3b8));
      DevMsg(2,"Player isn\'t in the transition volume %s, aborting\n");
      DevMsg(2,"Post Idle %s finished for %s\n",puVar5,pcVar3);
      DevMsg(2,"Solving ragdoll self penetration! %s (%s) (%d v %d)\n",uVar6);
      DevMsg(2,"Soundlist: %d / %d  (%d)\n",iVar7);
      DevMsg(2,"SpeakDispatchResponse:  Entity ( %i/%s ) playing sound \'%s\'\n",iVar9,puVar6,
      DevMsg(2,"Stripped\n");
      DevMsg(2,"TICK:%5d:Ragdoll separation count: %d\n",*(undefined4 *)(DAT_10646018 + 0x1c),iVar2)
      DevMsg(2,"TICK:%5d:Ragdoll separation count: %d\n",*(undefined4 *)(PTR_DAT_106ab8dc + 0x1c),
      DevMsg(2,"TRAIN: %s, Nearest track is %s\n",pcVar4,pcVar3);
      DevMsg(2,"Train %s speed to %4.2f\n",pcVar3);
      DevMsg(2,"WARNING: AI enemy went NULL but schedule (%s) is not interested\n",
      DevMsg(2,"Warning! Dropped %i unreliable sounds for client %s.\n",iVar4,(int)this + 0x34);
      DevMsg(2,"Warning: Physics damage event with no recovery info!\nObjects: %s, %s\n",puVar6,
      DevMsg(2,"[FOVDEBUG]: ZOOM IN:: desired fov: %f previous FOV: %f\n",(double)fVar7,dVar8);
      DevMsg(2,"[FOVDEBUG]: ZOOM OUT:: desired fov: %f previous FOV: %f\n",(double)fVar7,dVar8);
      DevMsg(2,"ai_speechfilter finds no subject(s) called: %s\n",puVar4);
      DevMsg(2,"script \"%s\" kicking script \"%s\" out of the queue\n",pcVar3,pcVar2);
      DevMsg(2,"scripted_schedule \"%s\" using NPC \"%s\"(%s)\n",pcVar2,puVar3,puVar4);
      DevMsg(2,(byte *)"Thread failed to respond, probably exited\n");
      DevWarning("%s %s failed Urgent Movement, retrying\n",pcVar6,uVar5);
      DevWarning("%s %s failed Urgent Movement, retrying\n",pcVar7,uVar6);
      DevWarning("%s has no waypoint goal for squad: %i\n",uVar9,uVar10);
      DevWarning("%s: can\'t find %s\n",puVar3,pcVar1);
      DevWarning("%s:%s:%s has no sequence for act:%s\n",puVar7,pcVar5,puVar6,uVar4);
      DevWarning("Attempted to HideLoadingPlaque when client prevents hiding loading plaque...\n");
      DevWarning("Attempted to attach particle effect %s to an unknown attachment on entity %s\n",
      DevWarning("Can\'t get key value\t\'%s\' from file \'%s\'.\n",param_2,param_3);
      DevWarning("Can\'t use this variable type with this parameter type in lesson script.\n");
      DevWarning("ERROR: Dynamic link at %f %f %f pointing to invalid node ID!!\n",(double)local_10,
      DevWarning("Invalid convar name \"%s\".\n");
      DevWarning("Invalid lesson specified: \"%s\".",puVar6);
      DevWarning("Invalid scripted lesson variable/param type: %s\n",iVar2);
      DevWarning("Invalid scripted lesson variable: %s\n",iVar2);
      DevWarning("NULL entity in global entity list!\n");
      DevWarning("Navigation Mesh failed to load due to error: %s\n",pcVar5);
      DevWarning("No action specified for variable: \"%s\"\n",puVar1);
      DevWarning("No parameter specified for action: \"%s\"\n",puVar1);
      DevWarning("Warning - trying to enforce model bounds on %s\n",pcVar2);
      DevWarning("Warning- ai_sound cannot find proxy entity named \'%s\'. Using self.\n",puVar2);
      DevWarning("\n\nDRASTIC MEMORY OVERFLOW: Fell out of small block heap!\n\n\n");
      DevWarning("data.m_pModelRenderable is NULL for %s\n",uVar6);
      DevWarning("setting %s\'s waypoint goal to: %s and starting timer\n",uVar9,iVar2);
      DevWarning("waveOutOpen failure--hardware already in use\n");
      DevWarning(1,"Exceeded MAX_DECALS (%d).\n",DAT_1062588c);
      DevWarning(1,"No room for effect %s\n",uVar1);
      DevWarning(1,"Unhandled animation event %s for %s\n",iVar2,puVar3);
      DevWarning(2,"***Combat state with no enemy!\n");
      DevWarning(2,"C_BaseAnimating::SequenceDuration( %d ) out of range\n",param_2);
      DevWarning(2,"Unable to find %s in sentences.txt\n",pcVar3);
      DevWarning(2,"Unable to find %s in sentences.txt\n",pcVar4);
      Error("%s: backwards mins/maxs",pcVar2);
      Error("%s: failed to specify \'subdir\' for item %s\n",local_288,local_88);
      Error("BlendCubeMapFaceEdges: unsupported image format (%d)",iVar1);
      Error("CBaseFlex::FlexControllerLocalToGlobal failed!\n");
      Error("CClientVIPWaypoint::ParseAllEntities found %s when expecting {",local_810);
      Error("CGameServer::AssignClassIds: too many server classes (%i, MAX = %i).\n",uVar6,0x200);
      Error("CL_CopyNewEntity: GetClassBaseline(%d) failed.",param_2);
      Error("CLagCompensationManager::StartLagCompensation with NULL CUserCmd!!!\n");
      Error("CMapReslistGenerator Incompatible with normal map loading. Use -reslistmap");
      Error("CPropCullStack::AddProp - m_pOutProps overflowed");
      Error("CSprite::ParseAllEntities: found %s when expecting {",local_810);
      Error("CUserMessages::Register \'%s\' already registered\n",puVar1);
      Error("CUtlFixedMemory overflow!\n");
      Error("CUtlLinkedList overflow! (exhausted index range)\n");
      Error("CUtlMultiList overflow! (exhausted index range)\n");
      Error("CUtlRBTree overflow!\n");
      Error("C_FuncStagePropZone::ParseAllEntities: found %s when expecting {",local_810);
      Error("ClientDLL_InitRecvTableMgr: overflowed MAX_DATATABLES");
      Error("Couldn\'t find HLTV client player.");
      Error("Couldn\'t write bitmap data snapshot to file %s.\n",param_1);
      Error("CreateEntityByName( %s, %d ) - CreateEdict failed.",param_1,param_2);
      Error("CreateWorld: found %s when expecting {",local_810);
      Error("DispInfo_LoadDisplacments: dispcounts (%d and %d) don\'t match.",uVar6,uVar1);
      Error("FIELD_EMBEDDED in flat list!!!");
      Error("GetViewRenderInstance() must be implemented by game.");
      Error("Light style overflow\n");
      Error("MapEntity_ParseAllEntities: found %s when expecting {",local_804);
      Error("MapEntity_ParseAllEntities: found %s when expecting {",local_808);
      Error("MapEntity_ParseAllEntities: found %s when expecting {",local_810);
      Error("MapEntity_ParseAllEntities: found %s when expecting {",local_828);
      Error("MapEntity_ParseAllFakeEntities: found %s when expecting {",local_804);
      Error("PrecacheClientEntityResources: found %s when expecting {",local_804);
      Error("PrecacheClientEntityResources: found %s when expecting {",local_808);
      Error("RecvTable_Init: table \'%s\' has a decoder already.",param_1[3]);
      Error("SV_PackEntity: SnagChangeFrameList mismatched number of props[%d vs %d]",local_10,uVar8
      Error("SV_PackEntity: SnagChangeFrameList returned null");
      Error("SV_WriteEnterPVS: missing instance baseline for \'%s\'.",*puVar3);
      Error("SV_WriteEnterPVS: missing pFromData for \'%s\'.",*puVar3);
      Error("Steam_Init() failed.");
      Error("This game doesn\'t support server benchmarks (no CServerBenchmarkHook found).");
      Error("Unable to init audio");
      Error("Unable to read file %s!\n",*(undefined4 *)((int)this + 0x34));
      Error("error.mdl not precached either. good job.\n");
      Error("g_CCNameMap:  Event type at %i has wrong value (%i)!",iVar1,(&DAT_105e5c18)[iVar1 * 2])
      Error("g_CCNameMap:  Event type at %i has wrong value (%i)!",iVar1,(&DAT_106c90b8)[iVar1 * 2])
      Error("g_NameMap:  CC type at %i has NULL name string!",iVar1);
      Error("g_NameMap:  Event type at %i has NULL name string!",iVar1);
      Error("g_NameMap:  Event type at %i has wrong value (%i)!",iVar1,(&DAT_105e5b80)[iVar1 * 2]);
      Error("g_NameMap:  Event type at %i has wrong value (%i)!",iVar1,(&DAT_106c9020)[iVar1 * 2]);
      Error((byte *)"CCommandLine::AddArgument: exceeded %d parameters");
      Error((byte *)"CTSListBase: Misaligned list\n");
      Error((byte *)"CatchAndWriteContext_t::Invoke with bogus argc/argv");
      Error((byte *)"IsWin98OrOlder:  Unable to get OS version information");
      Error((byte *)"SBH Configuration Error! (%u < %u)");
      Error((byte *)"ThreadHandleToIDMap overflow.");
      Error((byte *)"ThreadHandleToIDMap underflow.");
      FUN_0040f440((int *)0x0,DAT_0044a6d8,(byte *)"Game Read packet %d of size %d handled %d");
      FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Client Read packet %d of size %d handled %d");
      FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Requesting Persona data for user %d ( %llu )");
      FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Session Start Web Request Response:\n%s");
      FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Error Connecting to Authentication system.");
      FUN_0040f490(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Socket poll error %d.");
      FUN_0041d690(iVar9,"GameOverlayRenderer.dll",(char *)local_180,0x104);
      FUN_0041dfc0(local_140,0x104,(byte *)"%s\\%s\\%s\\%s");
      FUN_0041dfc0(local_218,0x104,(byte *)"%s/%s");
      FUN_0041dfc0(local_31c,0x104,(byte *)"%s\\%s");
      FUN_0041e120(lpBuffer,"\\",0x104,1);
      FUN_004230e0(this_00,(byte *)",\"%s\": \"%s\"");
      FUN_0042678d(local_508,(byte *)"VALVE-MODULE-DEBUG-%08X");
      FUN_00429488((wchar_t *)puVar1[2],(int)L"%lld");
      FUN_100080c0(DAT_100482b8,DAT_100482bc,&DAT_10036a80,"Valve input provider initialized.");
      FUN_10013e40(&local_1c,"kernel32.dll","IsWow64Process");
      FUN_10021180(&local_114,(byte *)"%d,%.2f %.2f %.2f");
      FUN_10021180(&local_128,(byte *)"mass ratio %.4f:%.4f\n");
      FUN_10021180((undefined4 *)&stack0xfffffec4,(byte *)"scripts/vehicles/%s.txt");
      FUN_10021180(local_110,(byte *)"[Nav] %s");
      FUN_10021180(local_114,(byte *)"(%f, %f, %f)");
      FUN_10021180(local_13c,(byte *)"[Nav] %s");
      FUN_10021180(local_154,(byte *)"[Nav] %s");
      FUN_10021180(local_178,(byte *)"[Nav] %s");
      FUN_10021180(local_180,(byte *)"   Activity:     %s\n");
      FUN_10021180(local_180,(byte *)"   Arrival act:  %s\n");
      FUN_10021180(local_180,(byte *)"   Arrival seq:  %d\n");
      FUN_10021180(local_180,(byte *)"   Dest node:    %d\n");
      FUN_10021180(local_180,(byte *)"   Dest node: %d\n");
      FUN_10021180(local_180,(byte *)"   Target:       %#x\n");
      FUN_10021180(local_180,(byte *)"   Target:    %#x\n");
      FUN_10021180(local_180,(byte *)"   Tolerance:    %.1f\n");
      FUN_10021180(local_180,(byte *)"   Type:         %s\n");
      FUN_10021180(local_180,(byte *)"   Waypoint tol: %.1f\n");
      FUN_10021180(local_180,(byte *)"[Nav] %s");
      FUN_10021180(local_1e4,(byte *)"[Nav] %s");
      FUN_10021180(local_28c,(byte *)"   Dest:         %s\n");
      FUN_10021180(local_28c,(byte *)"   Goal dir:     %s\n");
      FUN_10021180(local_28c,(byte *)"[Nav] %s");
      FUN_10021180(local_398,(byte *)"   Dest:      %s\n");
      FUN_10021180(local_398,(byte *)"   Type:      %s\n");
      FUN_10021180(local_398,(byte *)"[Nav] %s");
      FUN_10021180(local_598,(byte *)"[Nav] %s");
      FUN_1002158b(local_18,(byte *)"%8.4f / %8.4f:  %s\n");
      FUN_1002169d((char *)local_254,0x104,(byte *)"(failed)%s");
      FUN_1002169d(local_150,0x104,(byte *)"%s_%d%02d%02d_%02d%02d%02d_%d_x%p%hs%hs.mdmp");
      FUN_10031640(&local_110,(byte *)"map %s\n");
      FUN_1003d6c0("FreeChannel",local_108,param_1,"from ConVar snd_find_channel.");
      FUN_1003ff90(*(void **)(local_8 + 4),(int)"Assault goal disabled");
      FUN_1003ff90(this,(int)"Playing a scene, but not in a scene!");
      FUN_1005bfa0((byte *)"%8.4f : %30s(%d) : %5.3f : %4.2f\n");
      FUN_1005bfa0((byte *)"*** ERROR: Bone access not allowed (entity %i:%s)\n");
      FUN_10063ca0(1,0,(uint)"holidaydecoration");
      FUN_1006c3e0("BigNet",0x10);
      FUN_1006c3e0("BigNet",0x20);
      FUN_10083c00((undefined (*) [16])"vaudio_speex");
      FUN_1008c530(this,"connection problem");
      FUN_100a29b0(param_1,param_2,(byte *)"stoptime \"%.3f\"\n");
      FUN_100a6a70(this_00,0,0,"models/brokenglass/glassbroken_03a");
      FUN_100a6a70(this_00,0,0,"models/brokentile/tilebroken_03a");
      FUN_100a6a70(this_00,0,1,"models/brokenglass/glassbroken_02a");
      FUN_100a6a70(this_00,0,1,"models/brokentile/tilebroken_02a");
      FUN_100a6a70(this_00,0,2,"models/brokenglass/glassbroken_01a");
      FUN_100a6a70(this_00,0,2,"models/brokentile/tilebroken_01a");
      FUN_100a6a70(this_00,1,0,"models/brokenglass/glassbroken_03b");
      FUN_100a6a70(this_00,1,0,"models/brokentile/tilebroken_03b");
      FUN_100a6a70(this_00,1,1,"models/brokenglass/glassbroken_02b");
      FUN_100a6a70(this_00,1,1,"models/brokentile/tilebroken_02b");
      FUN_100a6a70(this_00,1,2,"models/brokenglass/glassbroken_01b");
      FUN_100a6a70(this_00,1,2,"models/brokentile/tilebroken_01b");
      FUN_100a6a70(this_00,2,0,"models/brokenglass/glassbroken_03c");
      FUN_100a6a70(this_00,2,0,"models/brokentile/tilebroken_03c");
      FUN_100a6a70(this_00,2,1,"models/brokenglass/glassbroken_02c");
      FUN_100a6a70(this_00,2,1,"models/brokentile/tilebroken_02c");
      FUN_100a6a70(this_00,2,2,"models/brokenglass/glassbroken_01c");
      FUN_100a6a70(this_00,2,2,"models/brokentile/tilebroken_01c");
      FUN_100a6a70(this_00,3,0,"models/brokenglass/glassbroken_03d");
      FUN_100a6a70(this_00,3,0,"models/brokentile/tilebroken_03d");
      FUN_100a6a70(this_00,3,1,"models/brokenglass/glassbroken_02d");
      FUN_100a6a70(this_00,3,1,"models/brokentile/tilebroken_02d");
      FUN_100a7bb0("spark_shower",&local_34,&local_18,0);
      FUN_100a9cb0(param_1,iVar2,"Obstructing nav",0x3c279bbb,0xff,0xff,0xff,0xff);
      FUN_100a9cb0(param_1,iVar5,"Doesn\'t block LOS",0,0xff,0xff,0xff,0xff);
      FUN_100aeb90(param_1,"linear interp origin");
      FUN_100aeb90(param_1,"toggle keyframe");
      FUN_100aeb90(param_1,"toggle look target");
      FUN_100aeb90(this,"ease origin");
      FUN_100aeb90(this,"smooth edges");
      FUN_100aec30(param_1,"linear interp origin");
      FUN_100aec30(this,"ease origin");
      FUN_100aec30(this,"smooth edges");
      FUN_100b10f0(&local_118,(byte *)"FlmChapter%d");
      FUN_100b10f0(local_114,(byte *)"(%f, %f, %f)");
      FUN_100b10f0(local_220,(byte *)"(%f, %f, %f)");
      FUN_100b1cb0(param_1,"prop_dynamic");
      FUN_100b1cb0(param_1,"prop_physics");
      FUN_100b1cb0(this,"ai_hint");
      FUN_100b7970(this,"PROP_CLEARFLAGS");
      FUN_100b8210(param_1,0,*(float *)(DAT_10646018 + 0x10),"Context_SUB_Fadeout");
      FUN_100b8210(param_1,0,0.0,"Ctx_Vanish");
      FUN_100b8210(param_1,FUN_100b08c0,*(float *)(DAT_10646018 + 0x10) + fVar12,"ScriptThink");
      FUN_100b8210(param_1,FUN_101994c0,*(float *)(DAT_10646018 + 0x10) + 0.5,"AreaPortal");
      FUN_100b8210(this,&LAB_101984a0,*(float *)(DAT_10646018 + 0x10),"PROP_CLEARFLAGS");
      FUN_100b8210(this,0,*(float *)(DAT_10646018 + 0x10),"CarriedContextThink");
      FUN_100b8210(this,FUN_101984a0,*(float *)(DAT_10646018 + 0x10),"PROP_CLEARFLAGS");
      FUN_100ce950((int *)"detail/detailsprites");
      FUN_100d0610(&DAT_105a0e40,(int *)this,"CompareValues",0.0,*param_1,(int *)this,
      FUN_100d0680(&DAT_105a0e40,param_1,"CallScriptFunction",(float)"DispatchOnPostSpawn",fStack28,
      FUN_100d0740((byte *)"%.1f %.1f %.1f");
      FUN_100daf30(&local_20,(byte *)"Delay for choreo: %5d ms\n");
      FUN_100daf30(&local_24,(byte *)"Auto-disconnect in %.1f seconds");
      FUN_100daf30(&local_24,(byte *)"WARNING:  Connection Problem");
      FUN_100e33b0((void *)((int)&param_2 + 3),"WriteRawData()\n");
      FUN_100e33b0((void *)((int)&param_5 + 3),"WriteRawData()\n");
      FUN_1011e380("env_fire_medium");
      FUN_1011e380("env_fire_medium_smoke");
      FUN_1011e380("env_fire_small");
      FUN_1011e380("env_fire_small_smoke");
      FUN_1011e380("env_fire_tiny");
      FUN_1011e380("env_fire_tiny_smoke");
      FUN_10131b60((int *)&DAT_10771004,"");
      FUN_10131b60((int *)&DAT_10771010,"");
      FUN_10131b60((int *)&DAT_1077101c,"");
      FUN_10137820((uint)*(ushort *)((int)this + 200),(int *)&DAT_106258f4,"m_VertexCache",1000);
      FUN_10137820(*(int *)((int)this + 0xd4),(int *)&DAT_106258f8,"m_TempVertexCache",1000);
      FUN_10137bb0(&local_10,(byte *)"hammerid",local_2010);
      FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
      FUN_1013aba0(&local_10,(byte *)"pradius",(char *)local_858);
      FUN_1013df40(local_15c,(byte *)"CPU frequency percent: %3.1f%%   Min percent: %3.1f%%");
      FUN_1013df40(local_16c,(byte *)"universe:%u;account_type:%u;id:%u;instance:%u;team:%d");
      FUN_1013e7a0((int)puVar2 + 5,"relevant",(float)ppfVar7,(uint)*(ushort *)(param_2 + 4));
      FUN_101409a0(this,"client ack\'d -1");
      FUN_10142270((int)this,(int)param_1,(byte *)"Sounds [count=%d]");
      FUN_101422f0(local_8,uVar1,(byte *)"[Unreliable payload]");
      FUN_101422f0(local_8,uVar5,(byte *)"[Reliable payload]");
      FUN_101422f0(param_1,uVar2,(byte *)"[Voice payload]");
      FUN_10142830((int)"env_sparks_directional",*puVar3,*(undefined4 *)(puVar3 + 1),
      FUN_10146090((int)"command_target_ping_no_arrows",*param_1,*(undefined4 *)(param_1 + 1),uVar1,
      FUN_10146100((int)"blood_spurt",*puVar3,*(float *)(puVar3 + 1) + 32.0,0x43870000,0,(int *)0x0,
      FUN_10146100((int)"dust_impact_BIG",*param_1,*(undefined4 *)(param_1 + 1),local_18,local_10,
      FUN_10146100((int)"flashbomb",*param_3,*(undefined4 *)(param_3 + 1),*param_4,
      FUN_10146100((int)"impact_fx_bowl_dishes",*param_1,*(undefined4 *)(param_1 + 1),local_54,
      FUN_10146100((int)"impact_fx_glass_cups",*param_1,*(undefined4 *)(param_1 + 1),local_54,
      FUN_10146100((int)"impact_fx_metal_spark",CONCAT44(fStack40,local_2c),local_24,local_bc,
      FUN_10146100((int)"impact_fx_plastic",CONCAT44(fStack12,local_10),local_8,local_1c,local_14,
      FUN_10146100((int)"impact_player_bodyarmour",CONCAT44(fStack12,local_10),local_8,local_1c,
      FUN_10146100((int)"shell_eject_pistol",*param_1,*(undefined4 *)(param_1 + 1),*param_2,
      FUN_10146100((int)"shell_eject_rifle",*param_1,*(undefined4 *)(param_1 + 1),*param_2,
      FUN_10146100((int)"smoke_muzzle_pistol",local_20,local_18,local_2c,local_24,(int *)0x0,'\x01',
      FUN_10146160((int)"3rd_muzzleflash-pistol",5,param_1,uVar5,'\0',-1,0,'\0');
      FUN_10146160((int)"airplane_explode",5,piVar1,uVar5,cVar12,iVar3,uVar16,cVar18);
      FUN_10146160((int)"fx_car_engine_fire",5,piVar1,uVar7,cVar11,iVar12,uVar13,cVar14);
      FUN_10146160((int)"fx_car_engine_fire",5,piVar16,uVar9,cVar13,iVar6,uVar14,cVar15);
      FUN_10146330(piVar1,(int)"777_left_engine_air_vortex");
      FUN_10146330(piVar1,(int)"777_left_engine_heatwave");
      FUN_10146330(piVar1,(int)"777_right_engine_air_vortex");
      FUN_10146330(piVar1,(int)"777_right_engine_heatwave");
      FUN_1014a8a0(pvVar1,(byte *)"Log file started (file \"%s\") (game \"%s\") (version \"%i\")\n")
      FUN_1014a8a0(this,(byte *)"Started map \"%s\" (CRC \"%s\")\n");
      FUN_1014a8a0(this,(byte *)"server_cvar: \"%s\" \"%s\"\n");
      FUN_1014a8a0(this,(byte *)"server_message: \"%s\"\n");
      FUN_1014f730(ppuVar2,"waterexp_bubbles");
      FUN_1014f730(puVar2,"DustTrail");
      FUN_1014f730(puVar3,"bloodgore");
      FUN_1014f730(puVar3,"smokeTrail");
      FUN_1014f730(puVar3,"splish");
      FUN_1014f730(puVar5,"FX_ElectricSpark 2");
      FUN_1014f730(puVar6,"FireTrail_Smoke");
      FUN_1014f730(this,"FX_MetalSpark 1");
      FUN_1014f730(this,"ashtray");
      FUN_1014f730(this,"exp_smoke");
      FUN_1014f730(this_00,"C_SporeExplosion");
      FUN_1014f730(this_01,"smokeTrail");
      FUN_1014fa10(&local_8,"C_RocketTrail::damaged");
      FUN_1014fa10(&param_2,"muzzle_embers");
      FUN_10152f40(this,*(uint *)((int)this + 0x58),"Failed to read screenshot!\n");
      FUN_10153810(this,*(undefined4 *)((int)this + 0x58),0,(uint *)"Failed to read screenshot!\n");
      FUN_10154490((uint *)"UpdateMap");
      FUN_10154490((uint *)"UpdatePlayers");
      FUN_10155b90((int)this,(byte *)"No response from server.");
      FUN_10155b90((int)this,(byte *)"Received response.");
      FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Server rejected upload command.");
      FUN_10159ce0(&DAT_10641138,(byte *)"%s paused the game\n");
      FUN_10159ce0(&DAT_10641138,(byte *)"%s unpaused the game\n");
      FUN_1015da50((byte *)"*grp:",'\x01');
      FUN_1015ed00((int *)this,0,0,(byte *)"SetHibernating(true)");
      FUN_10169ff0((int)local_10,local_14,local_c,iVar9,(byte *)"integer (%i) net (%i)\n");
      FUN_10169ff0((int)local_10,local_14,local_c,iVar9,(byte *)"integer (%i->%s)\n");
      FUN_1016a150(local_10,local_14,(int)local_c,(byte *)"string differs (net %s pred %s)\n");
      FUN_1016a150(local_8,param_1,(int)local_10,(byte *)"string differs (net %s pred %s)\n");
      FUN_1016a590((int)this,(int)param_1,(byte *)"EHandle (0x%p->%s)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"EHandle (NULL)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"bool (%s)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"color32 (%d %d %d %d)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"float (%f)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"integer (%i)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"integer (%i->%s)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"quaternion (%f %f %f %f)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"short (%i)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"string (%s)");
      FUN_1016a590((int)this,(int)param_1,(byte *)"vector (%f %f %f)");
      FUN_1016c890(iVar3,"fog_enableskybox 1\n",iVar2);
      FUN_1017bb60('\x01',(byte *)"Server is enforcing consistency for this file:\n%s\n");
      FUN_1017f620(*(void **)((int)this + 0x290),"Concrete.PlayerLand",0,0);
      FUN_1017f620(*(void **)((int)this + 0x290),"Player.CarStop",0,0);
      FUN_1017f620(*(void **)((int)this + 0x290),"Weapon.Swing",0,0);
      FUN_1017f620(param_1,"BaseEntity.ExitWater",0,0);
      FUN_1017f620(param_1,"Hostage.Run_Boots_Concrete",0,0);
      FUN_1017f620(param_1,"Hostage.Run_CombatBoots_Concrete",0,0);
      FUN_1017f620(param_1,"Hostage.Run_DressShoes_Concrete",0,0);
      FUN_1017f620(param_1,"Hostage.Run_Sneakers_Concrete",0,0);
      FUN_1017f620(param_1,"Hostage.Walk_Boots_Concrete",0,0);
      FUN_1017f620(param_1,"Hostage.Walk_CombatBoots_Concrete",0,0);
      FUN_1017f620(param_1,"Hostage.Walk_DressShoes_Concrete",0,0);
      FUN_1017f620(param_1,"Hostage.Walk_Sneakers_Concrete",0,0);
      FUN_1017f620(param_1,"Weapon_M320.Fire",0,0);
      FUN_1017f620(this_00,"Camera.SnapShot",0,0);
      FUN_1017f620(this_00,"Hostage.PainScream",0,0);
      FUN_1017f620(this_00,"Hostage.ShortScream",0,0);
      FUN_1017f8a0(local_154,0.0,"fx.single_spark",&local_30,0,0);
      FUN_1017f8a0(local_2c,-NAN,"HudChat.Announcement",0,0,0);
      FUN_1017f8a0(local_5c,0.0,"Bounce.Shrapnel",&local_20,0,0);
      FUN_1017f8a0(local_6c,-NAN,"radio.start",0,0,0);
      FUN_1017f8a0(local_94,0.0,"fx.mannequin_explode",param_3,0,0);
      FUN_1017f8a0(local_94,0.0,"fx.tv_explode",param_3,0,0);
      FUN_101806a0(this,"Player.AmbientUnderWater");
      FUN_101806a0(this_00,"Hostage.OnFire_Scream");
      FUN_1018c3e0(param_1,"controllableAngles[0]",*(float *)(param_3 + 0x4c),
      FUN_1018c3e0(param_1,"controllableAngles[1]",*(float *)(param_3 + 0x50),
      FUN_1018c3e0(param_1,"controllableAngles[2]",*(float *)(param_3 + 0x54),
      FUN_1018c3e0(param_1,"controllableOrigin[0]",*(float *)(param_3 + 0x40),
      FUN_1018c3e0(param_1,"controllableOrigin[1]",*(float *)(param_3 + 0x44),
      FUN_1018c3e0(param_1,"controllableOrigin[2]",*(float *)(param_3 + 0x48),
      FUN_1018c3e0(param_1,"controllableVelocity[0]",*(float *)(param_3 + 0x5c),
      FUN_1018c3e0(param_1,"controllableVelocity[1]",*(float *)(param_3 + 0x60),
      FUN_1018c3e0(param_1,"controllableVelocity[2]",*(float *)(param_3 + 100),
      FUN_1018e6b0((int)local_148,"Scorch",'\x01');
      FUN_101a5ad0(1,(byte *)"Map coordinate extents are too large!!\nCheck for errors!\n");
      FUN_101a5c10((byte *)"CL_ParsePacketEntities:  Error creating entity %s(%i)\n");
      FUN_101a5c10((byte *)"CL_ParsePacketEntities:  buffer read overflow\n");
      FUN_101a5c10((byte *)"CMapLoadHelper::Init, map %s has wrong version (%i when expecting %i)\n"
      FUN_101a5c10((byte *)"SV_CreateBaseline: WriteClassInfos overflow.\n");
      FUN_101a5c10((byte *)"SV_CreateBaseline: WriteSendTables overflow.\n");
      FUN_101a5c10((byte *)"Server is enforcing file consistency for %s\n");
      FUN_101a5c10((byte *)"Unexepected authentication protocol %i!\n");
      FUN_101a78e0(-1,"config.cfg",'\0');
      FUN_101a78e0(param_1,"config.cfg",'\0');
      FUN_101aa800(&local_218,"adr",0x15);
      FUN_101ad4b0(piVar3,(int)"$farBlurDepth",(float)fVar9);
      FUN_101ad4b0(piVar3,(int)"$farBlurDepth",param_1[0x3d]);
      FUN_101ad4b0(piVar3,(int)"$farBlurRadius",(float)fVar9);
      FUN_101ad4b0(piVar3,(int)"$farBlurRadius",param_1[0x3f]);
      FUN_101ad4b0(piVar3,(int)"$farFocusDepth",(float)fVar9);
      FUN_101ad4b0(piVar3,(int)"$farFocusDepth",param_1[0x3c]);
      FUN_101ad4b0(piVar3,(int)"$nearBlurDepth",(float)fVar9);
      FUN_101ad4b0(piVar3,(int)"$nearBlurDepth",param_1[0x3a]);
      FUN_101ad4b0(piVar3,(int)"$nearBlurRadius",(float)fVar9);
      FUN_101ad4b0(piVar3,(int)"$nearBlurRadius",param_1[0x3e]);
      FUN_101ad4b0(piVar3,(int)"$nearFocusDepth",(float)fVar9);
      FUN_101ad4b0(piVar3,(int)"$nearFocusDepth",param_1[0x3b]);
      FUN_101ad500(piVar3,(int)"$quality",iVar6);
      FUN_101ad500(piVar3,(int)"$quality",param_1[0x40]);
      FUN_101bdfa0((byte *)"%s : cancelled via interrupt\n");
      FUN_101bec80(&local_130,(byte *)"%d: %s%s");
      FUN_101c7240((void *)param_1[1],"Player.BodyFall_Concrete",0,0);
      FUN_101c7240(local_1c,"Hostage.BodyCheck",0,0);
      FUN_101c7240(local_28,"EDIT_MARK.Enable",0,0);
      FUN_101c7240(param_1,"BaseEntity.ExitWater",0,0);
      FUN_101c7240(param_1,"Car.Horn_A",0,0);
      FUN_101c7240(param_1,"Car.Horn_B",0,0);
      FUN_101c7240(param_1,"Car.Horn_BTeam",0,0);
      FUN_101c7240(param_1,"Car.Horn_C",0,0);
      FUN_101c7240(param_1,"Car.Horn_D",0,0);
      FUN_101c7240(param_1,"Car.Horn_E",0,0);
      FUN_101c7240(param_1,"General.StopBurning",0,0);
      FUN_101c7240(param_1,"Hostage.Strain",0,0);
      FUN_101c7240(param_1,"Player.JacketMovement",0,0);
      FUN_101c7240(param_1,"Player.NVGOff",0,0);
      FUN_101c7240(param_1,"Player.NVGOn",0,0);
      FUN_101c7240(param_1,"Player.UseTrain",0,0);
      FUN_101c7240(ppvVar5,"Weapon.Melee_Body_Hit",0,0);
      FUN_101c7240(pvVar1,"EDIT_END_AREA.NotCreating",0,0);
      FUN_101c7240(pvVar3,"EDIT_MOVE_CORNER.MarkedArea",0,0);
      FUN_101c7240(this,"AmmoBox.GrabAmmo",0,0);
      FUN_101c7240(this,"BaseCombatCharacter.AmmoPickup",0,0);
      FUN_101c7240(this,"Breakable.Computer",0,0);
      FUN_101c7240(this,"Canister.ImpactSoft",0,0);
      FUN_101c7240(this,"Concrete.PlayerLand",0,0);
      FUN_101c7240(this,"EDIT_BEGIN_AREA.Creating",0,0);
      FUN_101c7240(this,"EDIT_BEGIN_AREA.NotCreating",0,0);
      FUN_101c7240(this,"EDIT_DELETE",0,0);
      FUN_101c7240(this,"EDIT_END_AREA.Creating",0,0);
      FUN_101c7240(this,"EDIT_END_AREA.NotCreating",0,0);
      FUN_101c7240(this,"EDIT_MARK.Disable",0,0);
      FUN_101c7240(this,"EDIT_MARK.Enable",0,0);
      FUN_101c7240(this,"EDIT_MARK_UNNAMED.MarkedArea",0,0);
      FUN_101c7240(this,"EDIT_PLACE_PICK",0,0);
      FUN_101c7240(this,"EDIT_SELECT_CORNER.NoMarkedArea",0,0);
      FUN_101c7240(this,"Flesh.BulletImpact",0,0);
      FUN_101c7240(this,"Flesh.Bulletimpact",0,0);
      FUN_101c7240(this,"Hostage.Armed_Awaiting_Orders",0,0);
      FUN_101c7240(this,"Hostage.BodyCheck",0,0);
      FUN_101c7240(this,"Hostage.Cough",0,0);
      FUN_101c7240(this,"Inferno.Start",0,0);
      FUN_101c7240(this,"Malinois.Pain",0,0);
      FUN_101c7240(this,"Metal_Barrel.BulletImpact",0,0);
      FUN_101c7240(this,"Player.CarHit",0,0);
      FUN_101c7240(this,"Player.Hostage_KickAway",0,0);
      FUN_101c7240(this_00,"EDIT.ToggleAttribute",0,0);
      FUN_101c7240(this_00,"EDIT_DELETE",0,0);
      FUN_101c7240(this_00,"EDIT_END_AREA.Creating",0,0);
      FUN_101c7240(this_00,"EDIT_MARK.Disable",0,0);
      FUN_101c7240(this_00,"EDIT_MOVE_CORNER.MarkedArea",0,0);
      FUN_101c91a0(param_1,"Player.NVGOff");
      FUN_101c91a0(param_1,"Player.NVGOn");
      FUN_101c9780((int *)puVar3[1],"Emitsound");
      FUN_101d5ee0("game_playerleave",(int)piVar2,(int)piVar2,3,0);
      FUN_101f1360(&DAT_10798788,(int)"joy_legacy");
      FUN_101f1360(&DAT_10798814,(int)"joy_legacy");
      FUN_101f1360(&local_14,(int)"m_pitch");
      FUN_101f1360(&local_24,(int)"ti_bloodsplatter");
      FUN_101f1360(&local_24,(int)"ti_low_violence");
      FUN_101f1360(local_14,(int)"mat_powersavingsmode");
      FUN_101f1360(local_14,(int)"voice_modenable");
      FUN_101f1360(local_14,(int)"z_wound_client_disabled");
      FUN_101f1360(local_24,(int)"voice_enable");
      FUN_101f1360(local_28,(int)"joy_cfg_custom_bindingsA");
      FUN_101f1360(local_34,(int)"voice_vox");
      FUN_101f1360(local_38,(int)"joy_cfg_custom_bindingsB");
      FUN_101f1380(local_14,(int)"cl_logofile",'\x01');
      FUN_101f3700((int)param_1,4,"#TI_Bonus_Ammo_Large",(char *)0x0,(char *)0x0,(char *)0x0,
      FUN_101f3700((int)piVar2,2,"Usage:\n   ent_setname <new name> <entity name>\n",(char *)0x0,
      FUN_101f3700((int)piVar2,2,"ent_dump: no such entity",(char *)0x0,(char *)0x0,(char *)0x0,
      FUN_101f3700((int)piVar3,2,"Usage:\n   ent_fire <target> [action] [value] [delay]\n",
      FUN_101f3700((int)piVar3,2,"Usage:\n   ent_info <class name>\n",(char *)0x0,(char *)0x0,
      FUN_101f3700((int)piVar4,2,"Usage:  ent_setang index pitch yaw <optional roll>\n",(char *)0x0,
      FUN_101f3700((int)piVar4,2,"Usage:  ent_setpos index x y <optional z>\n",(char *)0x0,
      FUN_101f3700((int)piVar4,2,"Usage:  setpos player_index x y <z optional>\n",(char *)0x0,
      FUN_101f3700((int)this,2,"Usage:  setang pitch yaw <roll optional>\n",(char *)0x0,(char *)0x0,
      FUN_101f3700((int)this,2,"Usage:  setpos x y <z optional>\n",(char *)0x0,(char *)0x0,
      FUN_101f3700((int)this,2,"godmode OFF\n",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
      FUN_101f3700((int)this,2,"notarget OFF\n",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
      FUN_101f3700((int)this,2,"setpos into world, use noclip to unstick yourself!\n",(char *)0x0,
      FUN_101f3700((int)this,3,"Camera in use by other player.",(char *)0x0,(char *)0x0,(char *)0x0,
      FUN_101f3700(iVar3,3,"you do not have an npc or npc car targetted use bot_target to select.\n"
      FUN_101f45d0(3,"#game_player_was_team_balanced",pcVar4,pcVar7,pcVar8,pcVar9);
      FUN_101f45d0(4,"Node Graph out of Date. Rebuilding in background.\n",(char *)0x0,(char *)0x0,
      FUN_101f51d0((int)&local_34,'\0',"A.I. Disabled...\n",(char *)0x0);
      FUN_101f54b0((byte *)"=== END OF MATCH ===\n");
      FUN_101f54b0((byte *)"It\'s all gone wrong while trying to set the player model for %s\n");
      FUN_101f54b0((byte *)"[Debug] Player: \'%s\' will be given the BOMB.\n");
      FUN_101f54b0((byte *)"[RULES] MovePlayerToSpawnPosition For: [%s]\n");
      FUN_101f54b0((byte *)"[RULES] PLAYED ROUNDS INCREMENTED TO: %i of %i\n");
      FUN_101f54b0((byte *)"[RULES] We are ending because: %i>=%i\n");
      FUN_101f54b0((byte *)"\"%s<%i><%s><%s>\" radio \"%s\"\n");
      FUN_101f5c10(local_4c,(int)this,1,1,local_8,pcVar4," ",(char *)((int)puVar5 + 5),pcVar3);
      FUN_101fb670(&local_110,"vgui/previews/unknown");
      FUN_101fbfb0((byte *)"Available memory less than 128MB!!! %i\n");
      FUN_101fbfb0((byte *)"Bad decal list");
      FUN_101fbfb0((byte *)"BuildBindAddresses:  Out of memory allocating %d bytes\n");
      FUN_101fbfb0((byte *)"CM_Vis:  buffer not big enough (%i but need %i)\n");
      FUN_101fbfb0((byte *)"CMod_LoadDispInfo: bad edge lump size!");
      FUN_101fbfb0((byte *)"CMod_LoadDispInfo: bad face lump size!");
      FUN_101fbfb0((byte *)"CMod_LoadDispInfo: bad surf edge lump size!");
      FUN_101fbfb0((byte *)"CMod_LoadDispInfo: bad vertex lump size!");
      FUN_101fbfb0((byte *)"CVEngineServer::Changelevel with NULL s1\n");
      FUN_101fbfb0((byte *)"CollisionBSPData_PreLoad: Can\'t link physics");
      FUN_101fbfb0((byte *)"Could not get IPrediction interface from library client");
      FUN_101fbfb0((byte *)"Could not get client alpha property mgr interface from library client");
      FUN_101fbfb0((byte *)"Could not get client entity list interface from library client");
      FUN_101fbfb0((byte *)"Could not get client leaf system interface from library client");
      FUN_101fbfb0((byte *)"Couldn\'t allocate bitmap header to snapshot.\n");
      FUN_101fbfb0((byte *)"ED_Alloc: No edicts yet");
      FUN_101fbfb0((byte *)"EmitAmbientSound: Init message would overflow signon buffer!\n");
      FUN_101fbfb0((byte *)"Engine only supports 255 ConVars marked %i\n");
      FUN_101fbfb0((byte *)"Host_ReadConfiguration:  g_pFileSystem == NULL\n");
      FUN_101fbfb0((byte *)"Host_Shutdown (bottom):  _heapchk() != _HEAPOK\n");
      FUN_101fbfb0((byte *)"Host_Shutdown (top):  _heapchk() != _HEAPOK\n");
      FUN_101fbfb0((byte *)"Map \"%s\" does not have cubemaps!");
      FUN_101fbfb0((byte *)"SV_BroadcastMessage: Init message would overflow signon buffer!\n");
      FUN_101fbfb0((byte *)"Unrecognized protocol type %d");
      FUN_101fbfb0((byte *)"_Host_RunFrame (bottom):  _heapchk() != _HEAPOK\n");
      FUN_101fbfb0((byte *)"g_pMDLCache->GetHardwareData failed for %s\n");
      FUN_101fbfb0((byte *)"unable to record server classes\n");
      FUN_101fc170((byte *)"Couldn\'t allocate any %s IP port, tried %d addresses");
      FUN_1020fa40((int *)piVar9[0x24f],(uint *)"info.txt",(LPCSTR)puVar8,iVar6 + 1,3);
      FUN_1020fa40(piVar2,(uint *)"screenshot.jpg",local_38[0],local_1c,3);
      FUN_1021b1f0(pvVar2,1,"#L4D360UI_Select",'\0',0);
      FUN_1021b1f0(pvVar2,2,"#L4D360UI_Controller_Done",'\0',0);
      FUN_1021b1f0(pvVar4,1,"#L4D360UI_Select",'\0',0);
      FUN_1021b1f0(pvVar4,2,"#L4D360UI_Cancel",'\0',0);
      FUN_1021b1f0(this,0x20,"#GameUI_UseDefaults",'\0',0);
      FUN_1021b1f0(this,1,"#L4D360UI_Select",'\0',0);
      FUN_1021b1f0(this,1,"#PORTAL2_ButtonAction_Play",'\0',0);
      FUN_1021b1f0(this,2,"#L4D360UI_Back",'\0',0);
      FUN_1021b1f0(this,2,"#L4D360UI_Cancel",'\0',2);
      FUN_1021b1f0(this,2,"#L4D360UI_Controller_Done",'\0',0);
      FUN_10220d00(pvVar1,local_24,"#GameUI_16XQ_CSAA");
      FUN_10220d00(pvVar1,local_24,"#GameUI_16X_CSAA");
      FUN_10220d00(pvVar1,local_24,"#GameUI_2X");
      FUN_10220d00(pvVar1,local_24,"#GameUI_4X");
      FUN_10220d00(pvVar1,local_24,"#GameUI_6X");
      FUN_10220d00(pvVar1,local_24,"#GameUI_8X");
      FUN_10220d00(pvVar1,local_24,"#GameUI_8X_CSAA");
      FUN_10221f90(*(void **)((int)this + 0x858),(byte *)"#L4D360UI_Disabled");
      FUN_10221f90(*(void **)((int)this + 0x858),(byte *)"#L4D360UI_Enabled");
      FUN_10221f90(*(void **)((int)this + 0x85c),(byte *)"#L4D360UI_Enabled");
      FUN_10221f90(*(void **)((int)this + 0x868),(byte *)"#L4D360UI_Disabled");
      FUN_10221f90(pvVar4,(byte *)"#L4D360UI_Disabled");
      FUN_10221f90(pvVar4,(byte *)"#L4D360UI_Enabled");
      FUN_10221f90(this,(byte *)"#GameUI_Anisotropic16X");
      FUN_10221f90(this,(byte *)"#GameUI_Anisotropic2X");
      FUN_10221f90(this,(byte *)"#GameUI_Anisotropic4X");
      FUN_10221f90(this,(byte *)"#GameUI_Anisotropic8X");
      FUN_10221f90(this,(byte *)"#GameUI_Bilinear");
      FUN_10221f90(this,(byte *)"#GameUI_High");
      FUN_10221f90(this,(byte *)"#GameUI_Low");
      FUN_10221f90(this,(byte *)"#GameUI_Medium");
      FUN_10221f90(this,(byte *)"#GameUI_Rate1");
      FUN_10221f90(this,(byte *)"#GameUI_Rate2");
      FUN_10221f90(this,(byte *)"#GameUI_Rate3");
      FUN_10221f90(this,(byte *)"#GameUI_Rate4");
      FUN_10221f90(this,(byte *)"#GameUI_Rate5");
      FUN_10221f90(this,(byte *)"#GameUI_Trilinear");
      FUN_10221f90(this,(byte *)"#GameUI_Ultra");
      FUN_10221f90(this,(byte *)"#GameUI_VeryLow");
      FUN_10221f90(this_00,(byte *)"#L4D360UI_Disabled");
      FUN_10221f90(this_00,(byte *)"#L4D360UI_Enabled");
      FUN_10223690(param_1,pvVar6,(byte *)"ESCAPE");
      FUN_102523f0((int)param_1,-5,(undefined4 *)"requested length does not fit in int");
      FUN_102523f0(param_1,-2,(undefined4 *)"internal error: deflate stream corrupt");
      FUN_10264260(local_108,".dem",0x104);
      FUN_10265920(&DAT_1063b880,0x3f,(byte *)"FKID_%i");
      FUN_10265920(&DAT_10676728,0x40,(byte *)"%2i:%02i:%02i");
      FUN_10265920(&local_120,0xff,(byte *)"materials/%s.vmt");
      FUN_10265920(&local_144,0x100,(byte *)"If-Range: %s\nRange: bytes=%d-\n");
      FUN_10265920(&local_144,0x100,(byte *)"If-Range: %s\nRange: bytes=%d-\nReferer: hl2://%s\n");
      FUN_10265920(&local_144,0x100,(byte *)"Referer: hl2://%s\n");
      FUN_10265920(&local_20c,0x100,(byte *)" (%i physical)");
      FUN_10265920((char *)&local_30,0x1f,(byte *)"!%s%d");
      FUN_10265920((char *)(unaff_EBP + -0x358),0x104,(byte *)"materials/maps/%s");
      FUN_10265920((char *)(unaff_EBP + -0x358),0x104,(byte *)"materialsrc/maps/%s");
      FUN_10265920((char *)(unaff_EBP + -0x45c),0x104,(byte *)"materials/maps/%s");
      FUN_10265920((char *)(unaff_EBP + -0x86c),0x104,(byte *)"maps/%s.bsp");
      FUN_10265920((char *)auStack1120,0x104,(byte *)"materials/maps/%s");
      FUN_10265920((char *)local_118,0x100,(byte *)"%s\\%s");
      FUN_10265920((char *)local_168,0x100,(byte *)"//%s/%s%s.HL1");
      FUN_10265920((char *)local_168,0x100,(byte *)"//%s/%s%s.HL2");
      FUN_10265920((char *)local_1e0,0x100,(byte *)"say \"Bug Submitted [%s]: %s\"\n");
      FUN_10265920((char *)local_22c,0x200,(byte *)"splitter%d");
      FUN_10265920(acStack2160,0x104,(byte *)"maps/%s.bsp");
      FUN_10265920(acStack860,0x104,(byte *)"materials/maps/%s");
      FUN_10265920(acStack860,0x104,(byte *)"materialsrc/maps/%s");
      FUN_10265920(local_104,0x100,(byte *)"changelevel %s\n");
      FUN_10265920(local_104,0x100,(byte *)"changelevel2 %s %s\n");
      FUN_10265920(local_104,0x100,(byte *)"reslists/%s.dict");
      FUN_10265920(local_108,0x100,(byte *)"light:  %d\n");
      FUN_10265920(local_108,0x100,(byte *)"origin: <%d, %d, %d>\n");
      FUN_10265920(local_108,0x104,(byte *)"%s\\%s");
      FUN_10265920(local_108,0x104,(byte *)"//%s/%s%s%02d.%s");
      FUN_10265920(local_108,0x104,(byte *)"//%s/%s%s.%s");
      FUN_10265920(local_108,0x104,(byte *)"logs/%s/%04i");
      FUN_10265920(local_10c,0x104,(byte *)"%s/console%04d.log");
      FUN_10265920(local_110,0x104,(byte *)"materials\\%s");
      FUN_10265920(local_114,0x104,(byte *)"%s/voice");
      FUN_10265920(local_120,0x100,(byte *)"for %.2f minutes");
      FUN_10265920(local_120,0x100,(byte *)"permanently");
      FUN_10265920(local_128,0x100,(byte *)"bind \"%s\" \"%s\"");
      FUN_10265920(local_130,0x100,(byte *)"%07.3f ms (%s)");
      FUN_10265920(local_130,0x100,(byte *)"%s - %0.1f%%%%");
      FUN_10265920(local_134,0x104,(byte *)"screenshots/%s%s");
      FUN_10265920(local_134,0x104,(byte *)"screenshots/%s/%s");
      FUN_10265920(local_13c,0x104,(byte *)"%s\\%s");
      FUN_10265920(local_13c,0x104,(byte *)"skybox/%s%s");
      FUN_10265920(local_178,0x100,(byte *)"%s%s*.HL?");
      FUN_10265920(local_178,0x100,(byte *)"%s*.HL?");
      FUN_10265920(local_204,0x200,(byte *)"%.1fM");
      FUN_10265920(local_208,0x200,(byte *)"%s %.2f");
      FUN_10265920(local_208,0x200,(byte *)"VPROF playback (tick %d, %d%%)");
      FUN_10265920(local_20c,0x104,(byte *)"%s_lv");
      FUN_10265920(local_20c,0x104,(byte *)"%s_tempcontent");
      FUN_10265920(local_20c,0x200,(byte *)"child%d");
      FUN_10265920(local_214,0x104,(byte *)"%s/localization_cache_list.txt");
      FUN_10265920(local_218,0x104,(byte *)"%s/pl%02d_slot%d-time%d.wav");
      FUN_10265920(local_238,0x200,(byte *)"%s/%s");
      FUN_10265920(local_238,0x200,(byte *)"%s/maps/%s.bsp");
      FUN_10265920(local_30,0x20,(byte *)"0x%016llX");
      FUN_10265920(local_3e4,0x200,(byte *)"%s/BugId/%s.bsp");
      FUN_10265920(local_3e4,0x200,(byte *)"%s/BugId/%s.jpg");
      FUN_10265920(local_3e4,0x200,(byte *)"%s/BugId/%s.sav");
      FUN_10265920(local_3e4,0x200,(byte *)"%s/BugId/%s.vmf");
      FUN_10265920(local_438,0x200,(byte *)"%s/%s");
      FUN_10265920(local_438,0x200,(byte *)"%s/%s.vmf");
      FUN_10265920(local_43c,0x200,(byte *)"%s/c%d_%d_%d%s");
      FUN_10265920(local_57c,0x104,(byte *)"materialsrc/lightprobes/%s_hdr");
      FUN_10265920(local_7c,0x60,(byte *)"maps/%s");
      FUN_10265920(local_8,0x40,(byte *)"%s %s");
      FUN_10265920(param_2,0x104,(byte *)"%s/%s%4.4d");
      FUN_10265920(param_2,param_3,(byte *)"!%s%d");
      FUN_10265920(param_2,param_3,(byte *)"%i_%02i_%02i");
      FUN_10265920(pcVar1,0x40,(byte *)"%i.%i.%i.%i");
      FUN_10265920(pcVar3,0xff,(byte *)"[L:%u:%u]");
      FUN_10265920(pcVar3,0xff,(byte *)"[c:%u:%u]");
      FUN_10265b40(&DAT_106a8618," | ",0x200,0xffffffff);
      FUN_10265b40(&stack0xfffffbfc," ",0x400,0xffffffff);
      FUN_10265b40((char *)&local_108,"_whitelist.txt",0x104,0xffffffff);
      FUN_10265b40(local_130," - ",0x100,0xffffffff);
      FUN_10265b40(local_844,",",0x800,0xffffffff);
      FUN_10265b40(param_1,"95 ",param_2,0xffffffff);
      FUN_10265b40(param_1,"98 ",param_2,0xffffffff);
      FUN_10265bf0((char *)((int)param_1 + 0x6fa),(int)"console",0x100);
      FUN_10265bf0((char *)local_170,(int)"xxtestxx ",0x100);
      FUN_10265bf0((char *)local_408,(int)"cancelselect",0x400);
      FUN_10265bf0((char *)pauVar2,(int)".dx90.vtx",10);
      FUN_10265bf0(local_238,(int)"Snapshot",0x104);
      FUN_10265bf0(param_1,(int)"Unable to get Version",param_2);
      FUN_10265f30((int)&local_1c,"V_NUMBERS");
      FUN_102667c0(&DAT_104e02ac,"sv_use_steam_voice");
      FUN_102667c0(&DAT_104e02b8,"voice_vox");
      FUN_102667c0(&DAT_104e26b0,"building_cubemaps");
      FUN_102667c0(&DAT_104f61fc,"r_dlightsenable");
      FUN_102667c0(&DAT_105f8b28,"gpu_level");
      FUN_102667c0(&DAT_105f9f78,"r_staticlight_streams");
      FUN_102667c0(&DAT_106a4774,"r_staticlight_streams");
      FUN_102667c0(&DAT_106a8c58,"map_wants_save_disable");
      FUN_102667c0(&iStack12,"vr_force_windowed");
      FUN_102667c0(&local_18,"cl_leveloverview");
      FUN_102667c0(&local_1c,"tv_delay");
      FUN_102667c0(&local_c,"cl_leveloverview");
      FUN_102667c0(local_14,"tv_enable");
      FUN_102667c0(local_c,"sv_skyname");
      FUN_10266970(local_103c,0x1000,(byte *)" ( def. \"%s\" )");
      FUN_10266970(local_103c,0x1000,(byte *)" [%.3f server clamped to %.3f]");
      FUN_102687d0(param_1,(uint *)"avisoundonly",0);
      FUN_102687d0(param_1,(uint *)"jpeg_quality",0);
      FUN_1026b280(this,(uint *)"error",(uint)DAT_106ac654);
      FUN_1026b280(this,(uint *)"setting.aspectratiomode",param_3);
      FUN_1026b280(this,(uint *)"setting.defaultres",param_1);
      FUN_1026b280(this,(uint *)"setting.defaultresheight",param_2);
      FUN_1026b280(this,(uint *)"setting.fullscreen",param_4 & 0xff);
      FUN_1026b280(this,(uint *)"setting.nowindowborder",param_5 & 0xff);
      FUN_1026b280(this_00,(uint *)"Image",1);
      FUN_1026b280(this_00,(uint *)"SelectedImage",1);
      FUN_1026b280(this_00,(uint *)"image",(uint)(cVar1 == '\0'));
      FUN_1026b280(this_01,(uint *)"Expand",uVar2 & 0xff);
      FUN_1026b280(this_01,(uint *)"Image",1);
      FUN_1026b280(this_01,(uint *)"SelectedImage",1);
      FUN_1026b2a0(puVar3,"settings");
      FUN_1026b2f0(param_1,(uint *)"PanelPtr",uVar9);
      FUN_1026b2f0(param_1,(uint *)"iconImage",uVar4);
      FUN_1026b2f0(puVar5,(uint *)"panel",*(uint *)((int)this + 0x210));
      FUN_1026b2f0(puVar5,(uint *)"panel",param_1);
      FUN_1026b2f0(this_03,(uint *)"rawpkt",(uint)this_01);
      FUN_1026b310(param_1,(uint *)"title",local_104);
      FUN_1026b310(param_1,(uint *)"tooltiptext",pcVar3);
      FUN_1026b310(this,(uint *)"options/action","joinsession");
      FUN_1026b310(this,(uint *)"reason",&DAT_106abce8);
      FUN_1026b310(this,(uint *)"system/network","LIVE");
      FUN_1026b310(this_00,(uint *)"actiontype",pcVar3);
      FUN_1026b310(this_00,(uint *)"drive",(char *)pbVar3);
      FUN_1026b310(this_00,(uint *)"filterinfo",pcVar2);
      FUN_1026b310(this_00,(uint *)"material",pcVar5);
      FUN_1026b310(this_00,(uint *)"reason","reload");
      FUN_1026b310(this_00,(uint *)&DAT_1037c28c,"");
      FUN_1026b3e0(this,(uint *)"options/sessionid",param_1[0x60],param_1[0x61]);
      FUN_1026d290(local_64,(byte *)"\"%s\"\r\n");
      FUN_1026d290(local_90,(byte *)"Map version:  %i\n");
      FUN_1026d290(local_90,(byte *)"Map version:  %i\nFile timestamp:  %s");
      FUN_1026d290(param_1,(byte *)"%i %i.%i.%i.%i : %.3f min\n");
      FUN_1026d290(param_1,(byte *)"%i %s : %.3f min\n");
      FUN_1026d290(param_1,(byte *)"%s \"%s\"\n");
      FUN_1026ed50((void *)(param_1 + 0x194),",");
      FUN_1026ee20(&local_3c,(byte *)"bug -remotebugpath %s");
      FUN_1026ee20((void *)((int)this + 0xd8),(byte *)"maps/%s%s.bsp");
      FUN_102705c0(local_274,"");
      FUN_1027ac50("",(uint *)(unaff_EBP + -0x664),0x104);
      FUN_1027ac50("",auStack1640,0x104);
      FUN_1027ac50("",local_45c,0x104);
      FUN_10282070(this,"CansBunch.BulletImpact");
      FUN_10282070(this,"Cardboard.Break");
      FUN_10282070(this,"Cereal.BulletImpact");
      FUN_10282070(this,"Dirt.BulletImpact");
      FUN_10282070(this,"Paper.BulletImpact");
      FUN_10282070(this,"candybag.break");
      FUN_10282070(this,"chipbag.Break");
      FUN_10282070(this,"fx.bricks_explode");
      FUN_10282070(this,"fx.cosmetics_explode");
      FUN_10282070(this,"fx.cups_explode");
      FUN_10282070(this,"fx.disks_explode");
      FUN_10282070(this,"fx.food_explode");
      FUN_10282070(this,"fx.food_explode_gushy");
      FUN_10282070(this,"fx.fullglassbottle_explode");
      FUN_10282070(this,"fx.glasses_explode");
      FUN_10282070(this,"fx.hardcandy_explode");
      FUN_10282070(this,"fx.jewelery_explode");
      FUN_10282070(this,"fx.jug_explode");
      FUN_10282070(this,"fx.rawmeat_explode");
      FUN_10282070(this,"fx.rawveggies_explode");
      FUN_10282070(this,"fx.tv_explode");
      FUN_10282070(this,"fx.watches_explode");
      FUN_10286860((byte *)"GameType Changed To: %s (%i)\n");
      FUN_102868b0((int)param_1,"player_civrescue","#TI_Score_HostageSave",0);
      FUN_102868b0((int)piVar6,"player_vipescort","#TI_Score_EscapedAsVIP",0);
      FUN_102868b0((int)ppvVar5,"player_civkill",pcVar14,0);
      FUN_102868b0(iVar4,"player_bombarm","#TI_Score_BombArmed",0);
      FUN_102868b0(param_4,"player_civkill","#TI_Score_HGHKill",0);
      FUN_10293ae0(puVar7,iVar2,"Steam Overlay",0);
      FUN_1029b750((byte *)"--------------------------------------------\n\n");
      FUN_1029b7f0(local_18,(byte *)"Layer %s: Weight: %.2f, Cycle: %.2f");
      FUN_1029b7f0(param_1,(byte *)"vel: %.2f, time: %.2f, max: %.2f");
      FUN_1029c040(piVar4,0,"bottom","u",0,(char *)0x0,0);
      FUN_1029c040(piVar4,0,"left","w",0,(char *)0x0,0);
      FUN_1029c040(piVar4,0,"right","4",0,(char *)0x0,0);
      FUN_1029c040(piVar4,0,"top","t",0,(char *)0x0,0);
      FUN_102dfac0(this,"Add",param_1);
      FUN_102dfac0(this,"Edit",param_1);
      FUN_102ece79(local_508,(byte *)"VALVE-MODULE-DEBUG-%08X");
      FUN_102ece79(local_88,(byte *)"Channel %i : %s = %s");
      FUN_102ece79(pcVar8,(byte *)"      %s Kb @ higher mip");
      FUN_102ece79(pcVar8,(byte *)"  %s Kb @ lower mip");
      FUN_102ece79(pcVar8,(byte *)"  Dimensions(%dx%d)");
      FUN_102ece79(pcVar8,(byte *)"  Format(%s)");
      FUN_102ece79(pcVar8,(byte *)"  NoLod");
      FUN_102ece79(pcVar8,(byte *)"  NoMip");
      FUN_102ece79(pcVar8,(byte *)"  OneBitAlpha");
      FUN_102ece79(pcVar8,(byte *)"  Size(%s Kb)");
      FUN_102ee0a0(local_18,(byte *)"Layer %s: Weight: %.2f, Cycle: %.2f");
      FUN_102f2265((char *)puVar2[1],(int)"%f %f %f %f");
      FUN_102f2eda((char *)local_44,0x40,(byte *)"%d_hidden");
      FUN_102f2eda((char *)local_44,0x40,(byte *)"%d_width");
      FUN_102f2eda((char *)local_88,0x80,(byte *)"%d_splitter_pos");
      FUN_102f2eda(local_48,0x20,(byte *)"%%%s%%");
      FUN_102f311c(&local_404,(int)L"#empty",0x1ff);
      FUN_102f7a84((wchar_t *)puVar1[2],(int)L"%lld");
      FUN_10300e70((void *)(param_1 + -0x26c),(byte *)"specbutton",0);
      FUN_10300e70((void *)(param_1 + -0x26c),(byte *)"specbutton",1);
      FUN_103145a0(piVar4,0,(char *)0x0,"",0,(char *)0x0,0);
      FUN_103145a0(piVar5,0,(char *)0x0,"",0,(char *)0x0,0);
      FUN_103444b0((byte *)"CarBreakWindows",&local_9c);
      FUN_103444b0((byte *)"CarExplosion",&local_74);
      FUN_103444b0((byte *)"CarExplosion",&local_9c);
      FUN_10362c70((int)"ParticleEffect",&local_6c);
      FUN_10362c70((int)"ParticleEffect",&local_70);
      FUN_10362c70((int)"Vomit",&local_98);
      FUN_10362c70((int)"bloodspray",&local_94);
      FUN_10362d80((int)"CR_HRagdollOnClient",&local_d4);
      FUN_10362d80((int)"EmitEngineSmoke",local_134);
      FUN_103683c0("");
      FUN_10368590(local_24,(int)"Announcer");
      FUN_10368590(local_24,(int)"Battery");
      FUN_10368590(local_24,(int)"EnemyHit");
      FUN_10368590(local_24,(int)"KeyHintText");
      FUN_10368590(local_24,(int)"MeleeClubSplatter");
      FUN_10368590(local_24,(int)"MeleeSlashSplatter");
      FUN_10368590(local_24,(int)"MudSplatter");
      FUN_10368590(local_24,(int)"ProgressBar");
      FUN_10368590(local_24,(int)"ShowHostages");
      FUN_10368590(local_24,(int)"Splatter");
      FUN_10368590(local_2c,(int)"EnemyHit");
      FUN_10368590(local_3c,(int)"ProgressBar");
      FUN_10368590(local_80,(int)"CancelCrosshair");
      FUN_10368590(pppuVar6,(int)"Radio");
      FUN_10391880(this,param_3 + 1,"%s%20s : %40s %5.3f\n");
      FUN_103963c0((int)this,(byte *)"Multiple definitions for criteria \'%s\' [%d]\n");
      FUN_103963c0((int)this,(byte *)"No such criterion \'%s\' for rule \'%s\'\n");
      FUN_103963c0((int)this,(byte *)"No such response \'%s\' for rule \'%s\'\n");
      FUN_103963c0(param_1,(byte *)"Expecting more tokens in enumeration \'%s\'\n");
      FUN_10398260(local_518,".mdl",0x200);
      FUN_10399150(&DAT_10607300,0x40,(byte *)"%f %f %f");
      FUN_10399150(&DAT_1060b2b8,0x200,(byte *)"%d %d %d %d");
      FUN_10399150(&DAT_1060b2b8,0x200,(byte *)"[%g %g %g]");
      FUN_10399150((char *)local_118,0x80,(byte *)"[%s%03i]");
      FUN_10399150((char *)local_20c,0x200,(byte *)"%s.ctx");
      FUN_10399150((char *)local_52c,0x104,(byte *)"materials/vgui/%s/%s");
      FUN_10399150(local_104,0xff,(byte *)"Target: %s");
      FUN_10399150(local_108,0x104,(byte *)"cfg/cpu_level_%d_pc.ekv");
      FUN_10399150(local_108,0x104,(byte *)"cfg/cpu_level_%d_pc_ss.ekv");
      FUN_10399150(local_108,0x104,(byte *)"cfg/gpu_level_%d_pc.ekv");
      FUN_10399150(local_108,0x104,(byte *)"cfg/gpu_mem_level_%d_pc.ekv");
      FUN_10399150(local_108,0x104,(byte *)"cfg/mem_level_%d_pc.ekv");
      FUN_10399150(local_124,0x100,(byte *)"Removing from action list: (%s,%s) -> (%s,%s)\n");
      FUN_10399150(local_134,0x100,(byte *)"%s %s: ");
      FUN_10399150(local_204,0x200,(byte *)"Base PropData: %s");
      FUN_10399150(local_204,0x200,(byte *)"DISABLED");
      FUN_10399150(local_204,0x200,(byte *)"Health: %i");
      FUN_10399150(local_208,0x200,(byte *)"      firing in: %.2f sec");
      FUN_10399150(local_214,0x200,(byte *)"Base PropData: %s");
      FUN_10399150(local_214,0x200,(byte *)"Breakable Chunks: %d (Max Size %d)");
      FUN_10399150(local_214,0x200,(byte *)"Motion Disabled");
      FUN_10399150(local_218,0x200,(byte *)"DAMAGE FILTER:%s");
      FUN_10399150(local_218,0x200,(byte *)"GLOBALNAME: %s");
      FUN_10399150(local_218,0x200,(byte *)"Model:%s");
      FUN_10399150(local_218,0x200,(byte *)"ang: (%f, %f, %f)\n");
      FUN_10399150(local_218,0x200,(byte *)"cell: (%d, %d, %d)\n");
      FUN_10399150(local_218,0x200,(byte *)"pos: (%f, %f, %f)\n");
      FUN_10399150(local_21c,0x200,(byte *)"(no conditions)");
      FUN_10399150(local_21c,0x200,(byte *)"**Squad Leader**");
      FUN_10399150(local_21c,0x200,(byte *)"Actv: %s (%s) [%s]\n");
      FUN_10399150(local_21c,0x200,(byte *)"Behv: %s, ");
      FUN_10399150(local_21c,0x200,(byte *)"Heat: %.1f");
      FUN_10399150(local_224,0x104,(byte *)"vgui/%s/%s");
      FUN_10399150(local_224,0x200,(byte *)"Currently at floor %d(%s)");
      FUN_10399150(local_224,0x200,(byte *)"Moving at speed %f to floor %d(%s)");
      FUN_10399150(local_224,0x200,(byte *)"Nearby button is %s");
      FUN_10399150(local_28,0x20,(byte *)"Bot%02i");
      FUN_10399150(local_30,0x20,(byte *)"0x%016llX");
      FUN_10399150(local_408,0x400,(byte *)"%3.1f  (%s) <-- (%s)\n");
      FUN_10399150(local_408,0x400,(byte *)"Buttons.snd%d");
      FUN_10399150(local_44,0x40,(byte *)"cd play %3d\n");
      FUN_10399150(local_518,0x200,(byte *)"models/%s");
      FUN_10399150(local_a4,0x40,(byte *)"#%s_chapter");
      FUN_10399150(param_1,param_2,(byte *)"%sCurrent time: %6.3f\n");
      FUN_10399150(param_1,param_2,(byte *)"%sRecent NPC speech:\n");
      FUN_10399150(param_2,0x40,(byte *)"%s %s");
      FUN_10399370(local_1108,"\" ",0x1000,0xffffffff);
      FUN_10399370(local_1108,"\"",0x1000,0xffffffff);
      FUN_10399370(local_120,".vmt",0x104,0xffffffff);
      FUN_10399370(local_14c,"\n",0x100,0xffffffff);
      FUN_10399370(local_21c," - \n",0x200,0xffffffff);
      FUN_10399370(local_21c,"\n",0x200,0xffffffff);
      FUN_10399450(local_104,(int)"Target:   -  ",0xff);
      FUN_103996f0((int)param_1,"anim_attachment_lh");
      FUN_103996f0((int)param_1,"anim_attachment_rh");
      FUN_1039a0a0(&DAT_10607344,"sv_alternateticks");
      FUN_1039a0a0(&DAT_1064672c,"map_wants_save_disable");
      FUN_1039a0a0(&DAT_1064f350,"think_trace_limit");
      FUN_1039a0a0(&local_c,"mp_allowspectators");
      FUN_1039a0a0(&local_c,"violence_agibs");
      FUN_1039a0a0(local_14,"sv_infiniteammo");
      FUN_1039a0a0(local_1c,"mp_intelroundtime");
      FUN_1039c860(param_1,(byte *)"\tHighLevel\t1\n");
      FUN_1039c860(param_1,(byte *)"\tParent_ID\t%u\n");
      FUN_1039fce0(param_1,(uint *)"members/numSlots",1);
      FUN_1039fce0(param_1,(uint *)"scoreable",(uint)((char)local_c != '\0'));
      FUN_1039fce0(puVar6,(uint *)"winner",uVar7);
      FUN_1039fce0(this,(uint *)"winner",0);
      FUN_1039fce0(this,(uint *)"winner",2);
      FUN_1039fce0(this,(uint *)"winner",3);
      FUN_1039fce0(this_00,(uint *)"winner",*(uint *)(*(int *)(local_8 + 4) + 0xac));
      FUN_1039fce0(this_00,(uint *)"winner",uVar3);
      FUN_1039fce0(this_01,(uint *)"$alphatest",0);
      FUN_1039fce0(this_01,(uint *)"$model",0);
      FUN_1039fce0(this_01,(uint *)"$no_fullbright",1);
      FUN_1039fce0(this_01,(uint *)"winner",*(uint *)(*(int *)((int)this + 4) + 0xac));
      FUN_1039fd00(param_1,(uint *)"PanelPtr",uVar9);
      FUN_1039fd00(puVar5,(uint *)"panel",param_1);
      FUN_1039fd20(param_1,(uint *)"title",local_104);
      FUN_1039fd20(param_1,(uint *)"tooltiptext",pcVar3);
      FUN_1039fd20(puVar6,(uint *)"prim_0",pcVar8);
      FUN_1039fd20(puVar6,(uint *)"primtext","#TI_Score_TimeWinExpire");
      FUN_1039fd20(puVar6,(uint *)"sec_0",pcVar8);
      FUN_1039fd20(puVar6,(uint *)"secondarytext","#TI_Score_HR_Contained");
      FUN_1039fd20(this,(uint *)"prim_0",pcVar7);
      FUN_1039fd20(this,(uint *)"primtext","#TI_Score_RoundDraw");
      FUN_1039fd20(this,(uint *)"primtext","#TI_Score_TeamWin");
      FUN_1039fd20(this,(uint *)"sec_0",pcVar7);
      FUN_1039fd20(this,(uint *)"secondarytext","#TI_Score_TeamElim");
      FUN_1039fd20(this_00,(uint *)"prim_0",pcVar4);
      FUN_1039fd20(this_00,(uint *)"primtext","#TI_Score_TeamElim");
      FUN_1039fd20(this_00,(uint *)"primtext","#TI_Score_TeamWin");
      FUN_1039fd20(this_00,(uint *)"sec_0",pcVar4);
      FUN_1039fd20(this_00,(uint *)"sec_1",pcVar4);
      FUN_1039fd20(this_00,(uint *)"secondarytext","#TI_Score_BombDefused");
      FUN_1039fd20(this_00,(uint *)"secondarytext","#TI_Score_BombExploded");
      FUN_1039fd20(this_00,(uint *)"secondarytext",pcVar4);
      FUN_1039fd20(this_01,(uint *)"prim_0",pcVar1);
      FUN_1039fd20(this_01,(uint *)"primtext","#TI_Score_TeamWin");
      FUN_1039fd20(this_01,(uint *)"secondarytext",local_208);
      FUN_1039fd20(this_02,(uint *)"mapname",&local_10c);
      FUN_103a08e0(local_94,"THE BOSS");
      FUN_103a09f0(local_18,"car-14");
      FUN_103a46f0(piVar4,0,"bottom","u",0,(char *)0x0,0);
      FUN_103a46f0(piVar4,0,"left","w",0,(char *)0x0,0);
      FUN_103a46f0(piVar4,0,"right","4",0,(char *)0x0,0);
      FUN_103a46f0(piVar4,0,"top","t",0,(char *)0x0,0);
      FUN_103fd956((char *)local_18cc,(int)"%27s%1s%1s");
      FUN_103fd956((char *)puVar2[1],(int)"%f %f %f %f");
      FUN_10400fd8((wchar_t *)puVar1[2],(int)L"%lld");
      FUN_1040108f((char *)local_44,0x40,(byte *)"%d_hidden");
      FUN_1040108f((char *)local_44,0x40,(byte *)"%d_width");
      FUN_1040108f(local_48,0x20,(byte *)"%%%s%%");
      FUN_1042d940(&DAT_10847958,0x100,(byte *)"%s %s");
      FUN_1042d940((char *)&local_10,6,(byte *)"list%i");
      FUN_1042d940((char *)(param_1 + 0x99),0xff,(byte *)"[%i] %s");
      FUN_1042d940((char *)local_20c,0x200,(byte *)"%s.ctx");
      FUN_1042d940((char *)local_2c,0x20,(byte *)"SetDevice_%i");
      FUN_1042d940((char *)local_538,0x104,(byte *)"materials/vgui/%s/%s");
      FUN_1042d940((char *)local_54,0x40,(byte *)"SkillLevel%d");
      FUN_1042d940((char *)local_5c,0x50,(byte *)"skin%d");
      FUN_1042d940(acStack268,0x100,(byte *)"mat_setvideomode %i %i %i\n");
      FUN_1042d940(local_104,0x100,(byte *)"_rt_FullFrameFB%d");
      FUN_1042d940(local_104,0xff,(byte *)"%s %s\n");
      FUN_1042d940(local_10c,0x100,(byte *)"mat_setvideomode %i %i %i\n");
      FUN_1042d940(local_114,0x100,(byte *)"mat_setvideomode %i %i %i %i\n");
      FUN_1042d940(local_118,0x100,(byte *)"VModEnable %d");
      FUN_1042d940(local_118,0x104,(byte *)"materials/vgui/logos/%s%s.vtf");
      FUN_1042d940(local_11c,0x100,(byte *)"cmd%d setpos %f %f %f;setang %f %f %f\n");
      FUN_1042d940(local_134,0x100,(byte *)"models/player/gibbed/_limbs/gib_small-%d.mdl");
      FUN_1042d940(local_210,0x200,(byte *)"signify %s %d %.2f %.2f %.2f %.2f %.2f %.2f %.2f");
      FUN_1042d940(local_230,0x104,(byte *)"vgui/%s/%s");
      FUN_1042d940(local_278,0x100,(byte *)"models/player/headgibs/head1_p%d.mdl");
      FUN_1042d940(local_27c,0x200,(byte *)"sound/temp/%s.wav");
      FUN_1042d940(local_27c,0x200,(byte *)"temp/%s.wav");
      FUN_1042d940(local_28,0x20,(byte *)"chat_%d");
      FUN_1042d940(local_30,0x20,(byte *)"0x%016llX");
      FUN_1042d940(local_318,0x200,(byte *)"--> you hit %s %s [%i]");
      FUN_1042d940(local_318,0x200,(byte *)"--> you hit %s %s");
      FUN_1042d940(local_318,0x200,(byte *)"<-- %s hit you %s [%i]");
      FUN_1042d940(local_318,0x200,(byte *)"<-- %s hit you %s");
      FUN_1042d940(local_36c,0x200,(byte *)"temp/%s");
      FUN_1042d940(local_44,0x40,(byte *)" %.1f");
      FUN_1042d940(local_4c,0x40,(byte *)"%f %f %f");
      FUN_1042d940(local_568,0x200,(byte *)"materials/temp/%s.vtf");
      FUN_1042d940(local_768,0x200,(byte *)"temp/%s");
      FUN_1042d940(local_84,0x80,(byte *)"%s \"%s\"");
      FUN_1042d940(local_84,0x80,(byte *)"callvote %s \"%d %s\"\n;");
      FUN_1042d940(local_84,0x80,(byte *)"callvote %s\n;");
      FUN_1042d940(local_98,0x80,(byte *)"wp_setdata %d %d %d %d");
      FUN_1042d940(local_d8,0x80,(byte *)"weapon_%s");
      FUN_1042d940(param_4,0x40,(byte *)"%s %s");
      FUN_1042d980(local_10,6,(ushort *)L"%d:%d");
      FUN_1042d980(local_10,6,(ushort *)L"%s%d:%s%d");
      FUN_1042d980(local_10,6,(ushort *)L"00%d");
      FUN_1042dc40((char *)local_144,(int)"icon_bomb_arm",0x104);
      FUN_1042dc40((char *)local_144,(int)"icon_bomb_disarm",0x104);
      FUN_1042dc40((char *)local_144,(int)"icon_bomb_planthere",0x104);
      FUN_1042dc40((char *)local_144,(int)"icon_bomb_spotted",0x104);
      FUN_1042dc40((char *)local_144,(int)"icon_door_breach",0x104);
      FUN_1042dc40(acStack600,(int)"materials/vgui/logos/custom/*.vtf",0x104);
      FUN_1042dc40(local_204,(int)"missing_rope_material",0x200);
      FUN_1042dc40(local_258,(int)"materials/vgui/logos/custom/*.vtf",0x104);
      FUN_1042dc40(local_328,(int)"materials/",0x104);
      FUN_1042dc40(param_1,(int)"icon_key_generic",param_2);
      FUN_1042df60((int)local_104,"_rt_FullFrameFB");
      FUN_1042df60((int)local_184,";");
      FUN_1042df80((byte *)"OnHostChangeLevel",pbVar1);
      FUN_1042e530((void *)((int)this + 4),(byte *)"models/weapons/w_models/%s/%s_%i");
      FUN_1042e530(local_1c,(byte *)"exec sourcevr_%s.cfg\n");
      FUN_1042ee30(puVar4,(uint *)"DmeColorDynamicLightUpdater",1);
      FUN_1042ee30(puVar4,(uint *)"DmeColorUpdater",1);
      FUN_1042ee30(puVar4,(uint *)"DmeRollUpdater",1);
      FUN_1042ee30(puVar5,(uint *)"DmeSolidKillInitializer",1);
      FUN_1042f3d0(puVar4,(uint *)"ResourceFile",(uint)&DAT_104eefb3);
      FUN_104300e0(piVar10,(uint *)"scripts/sprays_manifest.txt",0,(int *)0x0);
      FUN_104300e0(piVar7,(uint *)"resource/UI/RadialMenu.res",0,(int *)0x0);
      FUN_104318f0(puVar6,(uint *)"color1",param_1);
      FUN_104318f0(puVar6,(uint *)"color2",local_8);
      FUN_104318f0(this_00,(uint *)"backcolor",local_c);
      FUN_104318f0(this_00,(uint *)"color",local_8);
      FUN_104318f0(this_00,(uint *)"frontcolor",local_8);
      FUN_10431930(puVar3,(uint *)"AvgFPS",(uint)local_8);
      FUN_10431930(puVar3,(uint *)"AvgMainThreadTime",(uint)(float)fVar8);
      FUN_10431930(puVar3,(uint *)"AvgMainThreadWaitTime",(uint)(float)fVar8);
      FUN_10431930(puVar3,(uint *)"AvgRenderThreadTime",(uint)(float)fVar8);
      FUN_10431930(puVar3,(uint *)"AvgRenderThreadWaitTime",(uint)(float)fVar8);
      FUN_10431930(puVar3,(uint *)"AvgServerPing",(uint)(float)fVar8);
      FUN_10431930(puVar3,(uint *)"MaxFPS",uVar6);
      FUN_10431930(puVar3,(uint *)"MinFPS",local_c);
      FUN_10431930(puVar3,(uint *)"StdDevFPS",(uint)local_10);
      FUN_10431930(puVar3,(uint *)"StdDevMainThreadTime",(uint)local_10);
      FUN_10431930(puVar3,(uint *)"StdDevMainThreadWaitTime",(uint)local_10);
      FUN_10431930(puVar3,(uint *)"StdDevRenderThreadTime",(uint)local_10);
      FUN_10431930(puVar3,(uint *)"StdDevRenderThreadWaitTime",(uint)local_10);
      FUN_10431930(puVar4,(uint *)"centerx",*(uint *)((int)this + 0x152c));
      FUN_10431930(puVar4,(uint *)"centery",*(uint *)((int)this + 0x1530));
      FUN_10431930(puVar4,(uint *)"centerz",*(uint *)((int)this + 0x1534));
      FUN_10431930(puVar4,(uint *)"cutoffFraction",0x3f333333);
      FUN_10431930(puVar4,(uint *)"duration",*(uint *)((int)this + 0x1438));
      FUN_10431930(puVar4,(uint *)"duration",0);
      FUN_10431930(puVar4,(uint *)"particleSpacing",*(uint *)((int)this + 0x3744));
      FUN_10431930(puVar4,(uint *)"particlesPerDimension",(uint)(float)*(int *)((int)this + 0x3738))
      FUN_10431930(puVar4,(uint *)"radiusExpandTime",0x40800000);
      FUN_10431930(puVar5,(uint *)"duration",
      FUN_10431930(puVar6,(uint *)"centerx",*(uint *)((int)this + 0x152c));
      FUN_10431930(puVar6,(uint *)"centery",*(uint *)((int)this + 0x1530));
      FUN_10431930(puVar6,(uint *)"centerz",*(uint *)((int)this + 0x1534));
      FUN_10431930(puVar6,(uint *)"maxEndSize",(uint)(float)iVar7);
      FUN_10431930(puVar6,(uint *)"maxLifetime",*(uint *)((int)this + 0x1540));
      FUN_10431930(puVar6,(uint *)"maxRandomSpeed",0x41a00000);
      FUN_10431930(puVar6,(uint *)"maxRoll",0x40c00000);
      FUN_10431930(puVar6,(uint *)"maxRollSpeed",uVar3);
      FUN_10431930(puVar6,(uint *)"maxStartSize",(uint)(float)iVar7);
      FUN_10431930(puVar6,(uint *)"minEndSize",(uint)(float)iVar7);
      FUN_10431930(puVar6,(uint *)"minLifetime",*(uint *)((int)this + 0x1540));
      FUN_10431930(puVar6,(uint *)"minRandomSpeed",0x41200000);
      FUN_10431930(puVar6,(uint *)"minRoll",0xc0c00000);
      FUN_10431930(puVar6,(uint *)"minStartSize",(uint)(float)iVar7);
      FUN_10431930(puVar6,(uint *)"particleSpacing",*(uint *)((int)this + 0x3744));
      FUN_10431930(puVar6,(uint *)"particlesPerDimension",(uint)(float)*(int *)((int)this + 0x3738))
      FUN_10431930(this_00,(uint *)"anglesx",*(uint *)(param_1 + 0x1c));
      FUN_10431930(this_00,(uint *)"anglesx",*param_2);
      FUN_10431930(this_00,(uint *)"anglesy",*(uint *)(param_1 + 0x20));
      FUN_10431930(this_00,(uint *)"anglesy",param_2[1]);
      FUN_10431930(this_00,(uint *)"anglesz",*(uint *)(param_1 + 0x24));
      FUN_10431930(this_00,(uint *)"anglesz",param_2[2]);
      FUN_10431930(this_00,(uint *)"decay",param_10);
      FUN_10431930(this_00,(uint *)"directionx",*param_2);
      FUN_10431930(this_00,(uint *)"directionx",*param_4);
      FUN_10431930(this_00,(uint *)"directiony",param_2[1]);
      FUN_10431930(this_00,(uint *)"directiony",param_4[1]);
      FUN_10431930(this_00,(uint *)"directionz",param_2[2]);
      FUN_10431930(this_00,(uint *)"directionz",param_4[2]);
      FUN_10431930(this_00,(uint *)"distance",param_3);
      FUN_10431930(this_00,(uint *)"duration",(uint)param_9);
      FUN_10431930(this_00,(uint *)"forceposx",*(uint *)(param_1 + 0x34));
      FUN_10431930(this_00,(uint *)"forceposy",*(uint *)(param_1 + 0x38));
      FUN_10431930(this_00,(uint *)"forceposz",*(uint *)(param_1 + 0x3c));
      FUN_10431930(this_00,(uint *)"forcex",*(uint *)(param_1 + 0x28));
      FUN_10431930(this_00,(uint *)"forcey",*(uint *)(param_1 + 0x2c));
      FUN_10431930(this_00,(uint *)"forcez",*(uint *)(param_1 + 0x30));
      FUN_10431930(this_00,(uint *)"height",*(uint *)(param_1 + 0x44));
      FUN_10431930(this_00,(uint *)"originx",*(uint *)(param_1 + 0x10));
      FUN_10431930(this_00,(uint *)"originx",*param_1);
      FUN_10431930(this_00,(uint *)"originx",*param_3);
      FUN_10431930(this_00,(uint *)"originy",*(uint *)(param_1 + 0x14));
      FUN_10431930(this_00,(uint *)"originy",param_1[1]);
      FUN_10431930(this_00,(uint *)"originy",param_3[1]);
      FUN_10431930(this_00,(uint *)"originz",*(uint *)(param_1 + 0x18));
      FUN_10431930(this_00,(uint *)"originz",param_1[2]);
      FUN_10431930(this_00,(uint *)"originz",param_3[2]);
      FUN_10431930(this_00,(uint *)"radius",param_8);
      FUN_10431930(this_00,(uint *)"scale",param_2);
      FUN_10431930(this_00,(uint *)"scale",param_3);
      FUN_10431930(this_00,(uint *)"startx",*param_2);
      FUN_10431930(this_00,(uint *)"starty",param_2[1]);
      FUN_10431930(this_00,(uint *)"startz",param_2[2]);
      FUN_10431930(this_00,(uint *)"width",*(uint *)(param_1 + 0x40));
      FUN_10431960(*(void **)((int)this + 0x2c0),(uint *)"?online",1);
      FUN_10431960(*(void **)((int)this + 0x2c0),(uint *)"?onlinechallenge",1);
      FUN_10431960(local_8,(uint *)"button",uVar5);
      FUN_10431960(param_1,(uint *)"ActivationType",1);
      FUN_10431960(param_1,(uint *)"autoResize",1);
      FUN_10431960(param_1,(uint *)"enabled",
      FUN_10431960(param_1,(uint *)"pinCorner",0);
      FUN_10431960(param_1,(uint *)"tabPosition",0);
      FUN_10431960(param_1,(uint *)"visible",0);
      FUN_10431960(param_1,(uint *)"wideatopen",local_18);
      FUN_10431960(param_1,(uint *)"worldmodel",1);
      FUN_10431960(puVar4,(uint *)"active",1);
      FUN_10431960(puVar4,(uint *)"count",uVar3);
      FUN_10431960(puVar4,(uint *)"fadeout",1);
      FUN_10431960(puVar6,(uint *)"active",(uint)param_1 >> 0x18);
      FUN_10431960(puVar6,(uint *)"emitter",0);
      FUN_10431960(puVar6,(uint *)"maxEndAlpha",0);
      FUN_10431960(puVar6,(uint *)"maxStartAlpha",0xff);
      FUN_10431960(puVar6,(uint *)"minEndAlpha",0);
      FUN_10431960(puVar6,(uint *)"minStartAlpha",0xff);
      FUN_10431960(puVar9,(uint *)"priceindex",puVar13[2]);
      FUN_10431960(pvVar2,(uint *)"BugSub",uVar6);
      FUN_10431960(pvVar2,(uint *)"Cheats",uVar6);
      FUN_10431960(pvVar2,(uint *)"Windowed",*(byte *)(iVar7 + 0x34) & 1);
      FUN_10431960(pvVar2,(uint *)"WindowedNoBorder",*(uint *)(iVar7 + 0x34) >> 0x11 & 1);
      FUN_10431960(pvVar3,(uint *)"Selected",1);
      FUN_10431960(this,(uint *)"PlaytestMode",(uint)(*(char *)(param_1 + 0x13f) != '\0'));
      FUN_10431960(this,(uint *)"operation",1);
      FUN_10431960(this,(uint *)"setting.aspectratiomode",param_3);
      FUN_10431960(this,(uint *)"setting.defaultres",param_1);
      FUN_10431960(this,(uint *)"setting.defaultresheight",param_2);
      FUN_10431960(this,(uint *)"setting.fullscreen",param_4 & 0xff);
      FUN_10431960(this,(uint *)"setting.nowindowborder",param_5 & 0xff);
      FUN_10431960(this_00,(uint *)"active",0);
      FUN_10431960(this_00,(uint *)"amount",param_7);
      FUN_10431960(this_00,(uint *)"avatar",0);
      FUN_10431960(this_00,(uint *)"emitter",0);
      FUN_10431960(this_00,(uint *)"exponent",param_7);
      FUN_10431960(this_00,(uint *)"framerate",param_3);
      FUN_10431960(this_00,(uint *)"hitbox",param_4);
      FUN_10431960(this_00,(uint *)"lightindex",param_11);
      FUN_10431960(this_00,(uint *)"magnitude",param_2);
      FUN_10431960(this_00,(uint *)"state",3);
      FUN_10431960(this_00,(uint *)"surfacetype",*(uint *)(param_1 + 0x50));
      FUN_10431960(this_00,(uint *)"traillength",param_3);
      FUN_10431960(this_01,(uint *)"$alphatest",0);
      FUN_10431960(this_01,(uint *)"$model",0);
      FUN_10431960(this_01,(uint *)"$no_fullbright",1);
      FUN_10431960(this_01,(uint *)"flags",
      FUN_104319d0(param_1,(uint *)"PanelPtr",uVar9);
      FUN_104319d0(param_1,(uint *)"iconImage",uVar4);
      FUN_104319d0(param_1,(uint *)"texture",uVar2);
      FUN_104319d0(puVar2,(uint *)"SubPanel",(uint)this);
      FUN_104319d0(puVar5,(uint *)"panel",*(uint *)((int)this + 0x210));
      FUN_104319d0(puVar5,(uint *)"panel",param_1);
      FUN_104319d0(puVar6,(uint *)"entindex",uVar3);
      FUN_104319d0(this_01,(uint *)"state",(uint)&DAT_10778838);
      FUN_104319d0(this_01,(uint *)"state",(uint)&DAT_10778844);
      FUN_104319d0(this_01,(uint *)"state",(uint)&DAT_10778854);
      FUN_104319d0(this_01,(uint *)"state",(uint)&DAT_10778880);
      FUN_104319d0(this_01,(uint *)"state",(uint)&DAT_107788a0);
      FUN_104319f0(local_c,(uint *)&DAT_104f4a20,"C_ParticleSmokeGrenade");
      FUN_104319f0(param_1,(uint *)"EnableCondition",pcVar4);
      FUN_104319f0(param_1,(uint *)"disabled_tooltiptext",pcVar4);
      FUN_104319f0(param_1,(uint *)"style","GameModeButton");
      FUN_104319f0(param_1,(uint *)"title",local_104);
      FUN_104319f0(param_1,(uint *)"tooltiptext",pcVar3);
      FUN_104319f0(param_1,(uint *)"tooltiptext",pcVar4);
      FUN_104319f0(puVar4,(uint *)"material","particle/particle_smokegrenade1");
      FUN_104319f0(pvVar3,(uint *)"Action","");
      FUN_104319f0(this_00,(uint *)"command",(char *)param_1[0x106]);
      FUN_104319f0(this_00,(uint *)"decalname",pcVar3);
      FUN_104319f0(this_00,(uint *)"dropmodel",pcVar5);
      FUN_104319f0(this_00,(uint *)"filterinfo",pcVar2);
      FUN_104319f0(this_00,(uint *)"spraymodel",local_c);
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_ArmorRicochet");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_BloodSprite");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_BloodStream");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_Decal");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_DynamicLight");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_MetalSparks");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_MuzzleFlash");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_ProjectDecal");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_ShatterSurface");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_Smoke");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_Sparks");
      FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_WorldDecal");
      FUN_104319f0(this_01,(uint *)"angles",local_4c);
      FUN_104319f0(this_02,(uint *)"ResourceFile",(char *)((int)puVar5 + 5));
      FUN_104319f0(this_02,(uint *)"fieldName",local_113);
      FUN_104319f0(this_02,(uint *)"mapname",&local_110);
      FUN_10431b10(pvVar3,(uint *)"ActionText",psVar9);
      FUN_10432330(&DAT_10713fb4,"sv_alternateticks");
      FUN_10432330(&DAT_1071e348,"mat_ambient_light_r");
      FUN_10432330(&DAT_1071e354,"mat_ambient_light_g");
      FUN_10432330(&DAT_1071e35c,"mat_ambient_light_b");
      FUN_10432330(&DAT_1072e85c,"joy_vibration");
      FUN_10432330(&DAT_10780bcc,"mat_queue_mode");
      FUN_10432330(&DAT_10780bd4,"mat_vsync");
      FUN_10432330(&DAT_1079a874,"snd_musicvolume");
      FUN_10432330(&DAT_1079a88c,"snd_musicvolume");
      FUN_10432330(&local_30,"mat_motion_blur_enabled");
      FUN_10432330(local_88,"joystick");
      FUN_104323d0(&DAT_10770f08,(int)"joy_yawsensitivity");
      FUN_104323d0(&DAT_10770f1c,(int)"joy_pitchsensitivity");
      FUN_10437e70(local_144,"");
      FUN_1043a5d0((void *)((int)this + 0x1480),iVar2,"VGUI textures",1);
      FUN_104621c0(param_1,"");
      FUN_10462790(piVar4,0,"bottom","u",0,(char *)0x0,0);
      FUN_10462790(piVar4,0,"top","t",0,(char *)0x0,0);
      FUN_10462790(piVar4,0,&DAT_10526d38,"w",0,(char *)0x0,0);
      FUN_10462790(piVar4,0,s_right_10526d48,"4",0,(char *)0x0,0);
      FUN_104a8d56((char *)puVar2[1],(int)"%f %f %f %f");
      FUN_104a8d56(pcVar6,(int)"%f %f %f");
      FUN_104ac651((wchar_t *)puVar1[2],(int)L"%lld");
      FUN_104aed42(local_508,(byte *)"VALVE-MODULE-DEBUG-%08X");
      FUN_104afa65((char *)local_44,0x40,(byte *)"%d_hidden");
      FUN_104afa65((char *)local_44,0x40,(byte *)"%d_width");
      FUN_104afa65(local_48,0x20,(byte *)"%%%s%%");
      LVar2 = RegQueryValueExA(local_8,"Path",(LPDWORD)0x0,(LPDWORD)0x0,(LPBYTE)0x0,&local_10);
      LVar7 = RegOpenKeyExA((HKEY)0x80000001,"Software\\Valve\\Source",0,0xf003f,&local_8);
      LoggingSystem_Log(DAT_100483c4,3,(byte *)"Out of logging channels.\n");
      LoggingSystem_Log(DAT_100483d0,0,(byte *)"Exiting due to logging LR_ABORT request.\n");
      LoggingSystem_Log(DAT_100483dc,0,(byte *)"_ExitOnFatalAssert\n");
      LoggingSystem_Log(DAT_10427564,1,"Voice channel attempting to be processed by operators");
      LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414060,0),"Operator Stack: %s\n",this);
      LoggingSystem_Log(DAT_104c2ea8,0,SUB41(local_8,0),"\nUpdate Sound Entry: %s\n",uVar4);
      LoggingSystem_Log(DAT_104c2ea8,1,"Error: %s, input_entity_index %i invalid\n",
      LoggingSystem_Log(DAT_104c2ea8,1,"Error: Execute iterator unable to find sound operator %s\n",
      LoggingSystem_Log(DAT_104c2ea8,1,"Error: Operator %s, EntryMatchList has no free slots!\n",
      LoggingSystem_Log(DAT_104c2ea8,1,"Error: Operator %s, unknown sound operator attribute %s\n",
      LoggingSystem_Log(DAT_104c2ea8,1,"Error: Sound Operator System has invalid operator KV\n");
      LoggingSystem_Log(DAT_1067e248,1,"No function name specified\n");
      LoggingSystem_Log(DAT_1067e248,1,"No script specified\n");
      LoggingSystem_Log(DAT_1067e248,1,"Script file type does not match VM type\n");
      LoggingSystem_Log(DAT_1067e248,1,"Script not found (%s) \n",(int)&local_13c + 1);
      LoggingSystem_Log(DAT_1067e248,1,"Scripting disabled or no server running\n");
      LoggingSystem_Log(DAT_10680b44,0,SUB41(DAT_10417128,0),"Aborting download of %s\n",
      LoggingSystem_Log(DAT_10680b44,0,SUB41(DAT_1041712c,0),"Error downloading %s\n",
      LoggingSystem_Log(DAT_10680b44,0,SUB41(DAT_10417130,0),"Download finished!\n");
      LoggingSystem_Log(DAT_10693b1c,0,"Starting Normal Round\n");
      LoggingSystem_Log(DAT_10693b1c,0,"Starting Practice Round\n");
      LoggingSystem_Log(DAT_10693b20,0,"adding gamerules response callback to fixapi\n");
      LoggingSystem_Log(DAT_106a92f4,1,"Really old map format! Static props can\'t be loaded...\n");
      LoggingSystem_Log(DAT_10792998,1,"No function name specified\n");
      LoggingSystem_Log(DAT_10792998,1,"No script specified\n");
      LoggingSystem_Log(DAT_10792998,1,"Scripting disabled or no server running\n");
      MessageBoxA((HWND)0x0,local_410,"Editor_SendCommand Error",0);
      MessageBoxA((HWND)0x0,param_2,"Assert!",0x1010);
      Msg("     %5d:  %5d -> %5d (%5d bytes): %s to %s\n",param_2,piVar3[(int)(param_3 + 2)],
      Msg("    %55s:%10d\n",*(undefined4 *)(DAT_10418eb8 + 0x10 + piVar1[iVar5 * 2] * 0x18),
      Msg("    %6.6f: (%.2f %.2f %.2f), vel: %.2f [dt %.1f]\n",SUB84((double)local_8,0),
      Msg("   \'%s\' (entindex %d) %s \n",pcVar3,uVar5);
      Msg("   \'%s\' : \'%s\' (entindex %d) \n",puVar4,puVar7,iVar2);
      Msg("  > %6.6f: (%.2f %.2f %.2f) %s for %.1f msec\n",SUB84((double)local_c,0),
      Msg("%.0f fps - %s\n",(double)*(float *)(*(int *)(param_1 + 4) + 0x14 + iVar8 * 0x18),
      Msg("%.4f\n",(double)(*(float *)(&DAT_106acad8 + (DAT_106accd8 + uVar1 & 0x7f) * 4) * 1000.0))
      Msg("%20s (%4.1f per call) Vis Leaves checked\n",pcVar5,uVar15,uVar16);
      Msg("%20s (%4.1f per call) Vis Leaves collected\n",pcVar5,uVar15,uVar16);
      Msg("%20s (%4.1f%% of %s) Vis shadows culled\n",pcVar6,uVar15,uVar16,pcVar5);
      Msg("%20s (%4.1f%% of %s) Within-Jitter Reuses\n",pcVar6,uVar15,uVar16,pcVar5);
      Msg("%2d (%d)%s%s::%s - %s",*(undefined4 *)(pcVar2 + 0x18),*(undefined4 *)(pcVar2 + 0x1c),
      Msg("%2d (%d)%s::%s - %s",*(undefined4 *)(pcVar2 + 0x18),*(undefined4 *)(pcVar2 + 0x1c),
      Msg("%30s\t\t%d\t\t%d\n",puVar6,*puVar4,puVar4[1]);
      Msg("%8d bytes:%s\n",*piVar6,piVar6[-1]);
      Msg("%cMasterRequestRestart\n",3);
      Msg("%d (%d%c): %s [ref: %d (%dc)] %s%s%s%s%s\n",iVar13,-2 - iVar13 >> 1,
      Msg("%d == \'%s\'\n",puVar1[3],*puVar1);
      Msg("%d areas added to selection\n",local_c);
      Msg("%d areas simplified - %d remain\n",iVar3,uVar4);
      Msg("%d milliseconds \n",iVar5 - iVar7);
      Msg("%d milliseconds \n",iVar7 - local_8);
      Msg("%d runs, %d bytes in runs, %f avg bytes per run\n",local_c,local_10);
      Msg("%s %.0f%%\n",param_1);
      Msg("%s %s %s %s \n",param_2,local_c,&local_28,&local_60);
      Msg("%s (%s) set expression to: %s\n",puVar8,pcVar5,ppiVar9);
      Msg("%s : %s : SetSequence\n",uVar4);
      Msg("%s current org: %f %f",pcVar5);
      Msg("%s(%d): Channel not found for sound \'%s\'.\n",
      Msg("%s(%d): Could not pick channel for sound \'%s\'.\n",
      Msg("%s(%d): Sound \'%s\' is finished or accumulated too much latency.\n",
      Msg("%s(%d): Speaker entity ignored for looping sound \'%s\'.\n",
      Msg("%s(%d): Stealing channel from sound \'%s\'.\n",
      Msg("%s(%d): params.pSfx is NULL.\n",
      Msg("%s(%s) thinking for %.02f ms!!!\n",puVar7,iVar3,dVar9);
      Msg("%s: %s (%s) = %d\n",puVar3,puVar2,puVar6,uVar7);
      Msg("(%.1f, %.1f, %.1f) -- Node ID: %d; WC id %d; type %d\n",
      Msg("(%2.2f) pct of frame (%d samples) \n",SUB84(dVar2,0),(int)((ulonglong)dVar2 >> 0x20),
      Msg("(%2db) %6i : %s\n",uVar7);
      Msg("* SV_BroadcastVoiceData:  Dropping all voice.  sv_voiceenable is not set.\n");
      Msg("*** DEBUG **** the game should now restart fresh on the next frame\n",unaff_EBX);
      Msg("*** ERROR: C_ServerRagdoll::InitModel: %s missing vcollide data ***\n",pcVar7);
      Msg("*************  DO NOT IGNORE ME  *******************************\n");
      Msg("****************************************************************\n");
      Msg("- %d: %s x:%.4f y:%.4f z:%.4f\n",iVar5,puVar4,(double)*(float *)((int)pvVar1 + 0x210),
      Msg("- %d: %s\n",iVar2,puVar1);
      Msg("--- %i links\n",DAT_1064f360);
      Msg("--------------------------------------------------------\n");
      Msg("--> Referenced file marked for deletion \"%s\"\n",local_210);
      Msg("-->Shutdown %u\n",pTVar4);
      Msg("--\n%s current org: %f %f\n",pcVar5,dVar12,dVar11);
      Msg("==%s Wheel data %i:==\nRadius:%f: SpringLength:%f: PoseParam :%i:\nLocalPos:%f %f %f:===\n"
      Msg("AttributeName: %s : (Accumulate: %f)(Scale: %f)\n",puVar4,(double)fVar6,(double)fVar5);
      Msg("Automovement\'s output origin: %f %f\n",(double)*param_1,(double)param_1[1]);
      Msg("Bogus teleport notification!!\n");
      Msg("C2S_VALIDATE_SESSION from %llx, session %llx, protocol %d.\n",uVar24,uVar23,local_18);
      Msg("CDecalEmitterSystem::LoadDecalsFromScript:  TranslationSlash for game material type \'%s\' references unknown decal \'%s\'\n"
      Msg("CLIENT:  %s(%s) thinking for %.02f ms!!!\n",uVar3);
      Msg("CVoiceStatus::HandleReqStateMsg\n");
      Msg("CVoiceStatus::SetPlayerBlockedState part 2\n");
      Msg("CVoiceStatus::SetPlayerBlockedState: setting player %d ban to %d\n",param_1,!bVar2);
      Msg("CVoiceStatus::UpdateServerState: g_bLevelInitialized\n");
      Msg("Can\'t ss_connect, game does not support split screen.\n");
      Msg("Can\'t ss_connect, no more split screen player slots!\n");
      Msg("Can\'t ss_connect, not connected to game.\n");
      Msg("Can\'t ss_disconnect, no split screen users active\n");
      Msg("Can\'t ss_disconnect, slot %d not active\n",(int)uVar3);
      Msg("Cannot find brush %s convex hull",param_1);
      Msg("Changed attribute in %d areas\n",*(undefined4 *)((int)this + 0x4d0));
      Msg("Christmas\n");
      Msg("Clock drift: adjustment (per sec): %.2fms, avg: %.3f, lo: %d, hi: %d, ex: %d\n",
      Msg("CommandComboBox::OnMessage: cvar %s not found.\n",uVar2);
      Msg("Convar %s is already registered but not as user info value\n",pcVar1);
      Msg("Convar %s is marked as cheat and cheats are off\n",pcVar1);
      Msg("Couldn\'t find surface in GetColorForSurface()\n");
      Msg("Current place set to \'%s\'\n",uVar5);
      Msg("DS:GetCaps failed\n");
      Msg("DTI: Wrote delta distances into %s.\n",DAT_10681200);
      Msg("DTI: Wrote instrumentation data into %s.\n","dti_delta_distances.txt");
      Msg("Deleted %d areas\n",param_1[0x134]);
      Msg("Demo paused at server tick %i\n",*(undefined4 *)(iVar3 + 0xc4),uVar6);
      Msg("Desired Origin for %s: %f %f\n",pcVar5);
      Msg("Device Set To: id: %i [Primary Sound Driver]\n",0);
      Msg("Discarding repository \'%s\' due to meta checksum change\n",puVar1);
      Msg("Discarding repository \'%s\' due to meta checksum change\n",puVar4);
      Msg("Discarding repository \'%s\' due to version change\n",puVar1);
      Msg("Discarding repository \'%s\' due to version change\n",puVar4);
      Msg("Distance to surface: %d\n",
      Msg("Dormant: %d\n",uVar2);
      Msg("ERROR: Cannot save navigation map \'%s\'.\n",puVar4);
      Msg("ERROR: Entity delete queue not empty on level start!\n");
      Msg("ERROR: Invalid ground position.\n");
      Msg("ERROR: Navigation Mesh load failed.\n");
      Msg("Effects: %x\n",local_c[0x3a]);
      Msg("Entity %s(%s) has bad parent %s\n",puVar5,pcVar2,param_1);
      Msg("Entity ID %d not found.\n",iVar2);
      Msg("Error reading sub-version number.\n");
      Msg("Exclude list emptied.\n");
      Msg("Expecting \'VERSION\', got \'%s\'",&DAT_107973a0);
      Msg("Found Buffer: %s, offset: %d\n",local_118,puVar4[2]);
      Msg("Free Sound List is full!\n");
      Msg("Got a NaN origin on %s\n",puVar1);
      Msg("Got a NaN origin on %s\n",uVar2);
      Msg("Got a NaN velocity on %s\n",puVar1);
      Msg("Got a NaN velocity on %s\n",uVar2);
      Msg("Hit surface \"%s\" (entity %s, model \"%s\" %s), texture \"%s\"\n",uVar6);
      Msg("IGNORED due to being marked \"Don\'t save\".\n");
      Msg("In:%f Out:%f Frametime:%f\n",(double)fVar3,(double)fVar6,(double)param_6);
      Msg("In:%f Out:%f Frametime:%f\n",(double)param_2,(double)fVar6,(double)param_6);
      Msg("Initialising fixapi\n");
      Msg("Invalid Navmesh Version. Expecting: %i got %i\n",0x11,local_8);
      Msg("Invalid blackbox type: %s\n",param_1);
      Msg("Invalid hint type specified. Format: ai_drop_hint <hint type>\nValid hint types:\n");
      Msg("Lowered %d areas\n",*(undefined4 *)((int)this + 0x4d0));
      Msg("Marked Area is connected to %d other Areas - there are %d total unnamed areas\n",
      Msg("NET_GetLong:  Ignoring duplicated split packet %i of %i ( %i bytes ) from %s\n",
      Msg("Name %s is already registered as console command\n",pcVar1);
      Msg("Needs a radius\n");
      Msg("No Vis Leaves checked\n");
      Msg("No Vis Leaves collected\n");
      Msg("No Vis shadows culled\n");
      Msg("No area with id %d\n",uVar2);
      Msg("No train %s\n",puVar9);
      Msg("Not recording occlusion tests now, %d in record array\n");
      Msg("Not sending email address\n");
      Msg("OS requested hibernation, ignoring request.\n");
      Msg("Queue AgeSaveList\n");
      Msg("Queue AsyncWrite (%s)\n",local_150);
      Msg("Queue AsyncWrite (%s)\n",local_168);
      Msg("Raised %d areas\n",*(undefined4 *)((int)this + 0x4d0));
      Msg("Received game details information from %s...\n",puVar5);
      Msg("Rejecting Damage on (%i), as it should only be breakable via a breaching charge (or RPG7)\n"
      Msg("Rejecting Damage on (%i), because it\'s an indirect RPG Explosion\n",
      Msg("Removed %d %s\'s\n",param_1,puVar4);
      Msg("Resuming entity I/O events\n");
      Msg("Retrying connection to %s, server requires lobby reservation but is unreserved.\n",pcVar5
      Msg("SIM: (%s) Total Files Packed: %d [Size: %.02f KB]\n",puVar9,local_c,
      Msg("SIM: Total files: %d [c: %.02f KB / c: %d KB] : Total Size: %.02f KB\n",local_10,
      Msg("SUCCESS! address and port is now set to: %s\n",param_1[1] + 8 + (int)param_1);
      Msg("S_Say: can\'t cache %s\n",local_170);
      Msg("S_Say: can\'t find sentence name %s\n",local_170);
      Msg("S_Update_Thread: frameTime: %d ms\n",(int)(local_8 * 1000.0));
      Msg("Score_TeamRoundWin: %s: Partial?: %s\n",puVar8,puVar10);
      Msg("Selected %d areas.\n",param_1);
      Msg("Sending voice from: %s - playerslot: %d\n",uVar4);
      Msg("Set the name of %s to %s\n",puVar11,puVar9);
      Msg("Setting CBaseEntity to non-brush model %s\n",param_1);
      Msg("Setting CBeam to non-sprite model %s\n",param_1);
      Msg("Setting CSprite to non-sprite model %s\n",pcVar3);
      Msg("Setting CSprite to non-sprite model %s\n",puVar3);
      Msg("Spawn Index: %i (next: %i)\n",iVar1,*(undefined4 *)(param_1 + 0x4bd0));
      Msg("Speaker configuration has been changed to %s.\n",local_8,uVar2);
      Msg("Start profiling 10,000 calls to DSP\n");
      Msg("Start profiling MIX_PaintChannels\n");
      Msg("Starting benchmark!\n");
      Msg("Stopping all occlusion tests: %dx%d, purging %d\n",DAT_10674c90,DAT_10674c94,DAT_10672c0c
      Msg("Stream:%2d interval:%5dms latency:%5dms offset:%d length:%d (%s)\n",param_3,
      Msg("TLK_IDLE: %s SUCCESSFUL FindResponse\n",pcVar6);
      Msg("TLK_IDLE: %s did not FindResponse\n",pcVar6);
      Msg("TacticalTV broadcast local event: %s\n",uVar3);
      Msg("UDP -> %s: sz=%d OOB \'0x%02X\'\n",pcVar6,pvVar11,uVar5);
      Msg("Unable to locate .vmf file %s\n",local_238);
      Msg("Usage:  rr_debugresponseconcept_exclude  Concept1 Concept2 Concept3...\n");
      Msg("Vector from automovement to desired: %f %f\n",(double)fVar10,(double)local_18);
      Msg("VisMon: Added Entity: %s (%s)\n",puVar5,pcVar4);
      Msg("VisMon: Time: %f - Tracking %d Entities. (Max:%d)\n");
      Msg("Voice - %d incoming samples added to channel %d owned by entity %d\n",uVar7,local_10,
      Msg("WARNING: NET_ListenSocket bind failed on socket %i, port %i.\n",piVar4[3],*piVar4);
      Msg("WARNING: NET_OpenSocket: setsockopt SO_BROADCAST: %s\n",pcVar1);
      Msg("WARNING: NET_OpenSocket: setsockopt SO_KEEPALIVE: %s\n",pcVar1);
      Msg("WARNING: NET_OpenSocket: setsockopt SO_LINGER: %s\n",pcVar1);
      Msg("WARNING: NET_OpenSocket: setsockopt TCP_NODELAY: %s\n",pcVar1);
      Msg("WARNING: NET_OpenSocket: socket failed: %s",pcVar1);
      Msg("WARNING: UDP_OpenSocket: unable to bind socket\n");
      Msg("Warning: Skipping command %s\n",piVar1[1] + (int)param_1);
      Msg("Water material: %s dist to water: %f\nforcecheap: %s forceexpensive: %s\n",uVar10);
      Msg("Weapon spawning in solid!\n");
      Msg("WinningTeam: %i\n",param_1[0x2d]);
      Msg("Worldcraft failed on creation...\n");
      Msg("Worldspace Render Bounds: [%.2f %.2f %.2f] -> [%.2f %.2f %.2f]\n",(double)local_24,
      Msg("Writing TacticalTV demo message %i bytes at file pos %i\n",iVar5,uVar2);
      Msg("Writing demo message %i bytes at file pos %i\n",iVar6,uVar3);
      Msg("Writing file %s\n",local_218);
      Msg("Your server needs to be restarted in order to receive the latest update.\n");
      Msg("[%03d] Found: %s, firing\n",*(int *)(DAT_10646018 + 0x1c) % 1000,pcVar3);
      Msg("[3] bTDM_ShouldDoEnd [%s]\n",local_1c);
      Msg("[GAMEEVENT] Event \'%s\' added %s listener %p\n",pcVar7,puVar6,param_1);
      Msg("[GAMEUI] CBaseModPanel::CloseAllWindows( 0x%x )\n",param_1);
      Msg("[GAMEUI] CBaseModPanel::OnFrameClosed( %d, %d )\n",param_1,param_2);
      Msg("[GAMEUI] CBaseModPanel::OnGameUIActivated( delay = %d )\n",param_1[0xbd]);
      Msg("[GAMEUI] CBaseModPanel::OnGameUIHidden()\n");
      Msg("[GAMEUI] CBaseModPanel::OnLevelLoadingFinished( %s, %s )\n",pcVar4,pauVar3);
      Msg("[GAMEUI] Closing all windows\n");
      Msg("[GAMEUI] OnLevelLoadingStarted - opening loading progress (%s)...\n",pcVar2);
      Msg("[GAMEUI] OnOpen( `%s`, caller = `%s`, hidePrev = %d, setActive = %d, wt=%d, wpri=%d )\n",
      Msg("[GAMEUI] Priorities WT: ");
      Msg("[JumpToPosition] Cur Pos is: %s Destination pos: %s\n",(int)puVar10 + 5,(int)puVar9 + 5);
      Msg("[Map] Unable to load level manifest\n");
      Msg("[Sound] DSP_Process() called. DSP index: %d - Sample cout: %d\n",param_1,param_5);
      Msg("\"%s\"\t\"%s\"\n",iVar1,iVar1 + 0x100);
      Msg("\'%s\' = \'%s\'\n",*(undefined4 *)(iVar5 * 0x24 + 0x10 + *(int *)(local_10 + 0xb4)),
      Msg("\nBegin mem_test\n");
      Msg("\nCurrent exclude list:\n");
      Msg("\n\nTHE CT\'S PUSSIED OUT AND FLED THE DESTINATION AREA WITH THE VIP.\n");
      Msg("\t%d - %d\n",local_8,iVar3);
      Msg("\tcall with no arguments to see this message and a list of current excludes.\n");
      Msg("\tseparate multiple concepts with spaces.\n");
      Msg("\tto reset the exclude list, type \"rr_debugresponseconcept_exclude !\"\n");
      Msg("air_density <value>\nCurrent air density is %.2f\n",(double)fVar2);
      Msg("bsp file maps/%s.bsp\n",(int)piVar9 + 0x4fa);
      Msg("delete ragdoll due to nointerp\n");
      Msg("editdemo <demoname> : edits a demo\n");
      Msg("group %d: \"%s\"\n",iVar2,
      Msg("group %s [flat %d] [sort %d] %d bytes\n",piVar1[1],iVar6);
      Msg("model %p [%s] registered\n",puVar2,puVar2 + 1);
      Msg("model %p [%s] release %d (%dc)\n",param_1,param_1 + 4,(int)*(short *)(iVar2 + 8),
      Msg("sound: (%2.2f) millisec   ",SUB84(dVar2,0),(int)((ulonglong)dVar2 >> 0x20));
      Msg("sv_pure value unchanged (current value is %d).\n",DAT_10663c78);
      Msg("vmf file maps/%s.vmf\n",(int)piVar9 + 0x5fa);
      Msg((byte *)"  %52.52s%12d%12.3f%12.3f%7.2f%12.3f%7.2f%12.3f%12.3f%12.3f%12.3f\n");
      Msg((byte *)"******** END VPROF REPORT ********\n");
      Msg((byte *)"Thread %u about to wait for lock %p owned by %u\n");
      Msg((byte *)"Thread %u now owns lock 0x%p\n");
      Msg((byte *)"Thread %u releasing lock 0x%p\n");
      Msg((byte *)"Thread exited immediately\n");
      Msg((byte *)"Thread failed to initialize\n");
      Msg(pcVar1,"gzip_file_compress");
      OutputDebugStringA("  HEAP_ZERO_MEMORY is specified.\n");
      ThreadSetDebugName(iVar9,"SndMix",pcVar20,puVar8,uVar23);
      Warning("#######################################\n");
      Warning("%s InputActivate (%s): invalid or missing !activator!\n",puVar10,piVar7);
      Warning("%s InputActivate: entity %s not found or is not a player!\n",puVar10,piVar7);
      Warning("%s \'%s\' has a base specified as \'%s\', but there is no matching entry in propdata.txt.\n"
      Warning("%s could not find attachment %s on target %s.\n",puVar7,puVar4,puVar6);
      Warning("%s is not writable!!!  Check it out before running buildmodelforworld.\n",uVar7);
      Warning("%s playing CChoreoEvent::SEQUENCE but AI has forced them to do something different\n"
      Warning("%s tried to target an attachment (%s) on target %s, which has no model.\n",puVar7,
      Warning("%s(%s) received ForceInteractionWithNPC input, but couldn\'t find an interaction named %s that entity named %s could run.\n"
      Warning("%s(%s) received ForceInteractionWithNPC input, but couldn\'t find entity named: %s\n"
      Warning("%s(%s) received ForceInteractionWithNPC input, but entity named %s cannot run dynamic interactions.\n"
      Warning("*** CDownloadListGenerator::OnResourcePrecached: Encountered full path %s!\n",pcVar3)
      Warning("*** ERROR: logic_relay %s has been triggered but is awaiting refire. OUTPUTS WILL NOT BE FIRED!!!\n"
      Warning("------------------------------------------------------------\n");
      Warning("----------------SPAWN ERROR------------------\n");
      Warning("ATTEMPTED TO DECOMMIT OWNED MEMORY STACK SPACE\n");
      Warning("AsyncAppend: Attempted to write to a read-only file");
      Warning("AsyncWrite: Attempted to write to a read-only file");
      Warning("Attempted to precache unknown particle system \"%s\"!\n",param_2);
      Warning("Attempted to restore FIELD_EMBEDDEDBYREF %s but there is no destination memory\n",
      Warning("Bad ApplyLocalAngularVelocityImpulse(%f,%f,%f) on %s\n",(double)*param_1,
      Warning("Bad SetLocalAngles(%f,%f,%f) on %s\n",(double)*(float *)param_1,
      Warning("Bad sequence of path_tracks from %s\n",pcVar5);
      Warning("Bogus constraint %s (attaches %s to ENTITY NOT FOUND:%s)\n",pcVar2,puVar6,puVar5);
      Warning("CBugUIPanel::UploadFile:  Unable to allocate copy buffer of %d bytes\n",0x200000);
      Warning("CBugUIPanel::UploadFile:  Unable to open remote path \'%s\'\n",param_2);
      Warning("CClientShadowMgr::UpdateProjectedTexture can only be used with flashlights!\n");
      Warning("CMemoryStack: ERROR - mismatched RegisterAllocation/RegisterDeallocation!\n");
      Warning("CParticleSystemMgr::InitAttributeTable has an out-of-date attribute list! (element %d not set up)\n"
      Warning("CRopeManager::AddToRenderCache count to large for cache! (%i >= %i)\n",iVar1,0x80);
      Warning("CSOAContainer::SetAttributeType - ERROR, trying to change type of previously-defined attribute %d!\n"
      Warning("CSaveRestoreFileSystem: Attempted to open %s with unsupported option %s\n",param_1,
      Warning("CSceneEntity %s unable to find a camera (point_viewcontrol) in this map!\n",puVar11);
      Warning("CSceneEntity::SCRIPT event - unable to find entity named \'%s\' in this map!\n",
      Warning("C_OP_RenderSprites::RenderUnsorted: Attempting to use an unimplemented sprite renderer for system \"%s\"!\n"
      Warning("Can\'t find landmark %s\n",param_1);
      Warning("Can\'t load skybox file %s to build the default cubemap!\n",iVar10);
      Warning("Cannot ent_create players!\n");
      Warning("Changing collision rules within a callback is likely to cause crashes!\n");
      Warning("ClientProjectile: No model %d!\n",uVar2);
      Warning("ConVar(%s) defined with infinite float value (%s)\n",&DAT_0043b3d2,DAT_004475c4,dVar3
      Warning("ConVar(%s) defined with infinite float value (%s)\n",&DAT_10019cb8,DAT_100331dc,dVar3
      Warning("ConVar(%s) defined with infinite float value (%s)\n",&DAT_103236cf,DAT_1041bbbc,dVar3
      Warning("ConVar(%s) defined with infinite float value (%s)\n",&DAT_1043677a,DAT_105e6854,dVar3
      Warning("ConVar(%s) defined with infinite float value (%s)\n",&DAT_104eefb3,DAT_106fb20c,dVar3
      Warning("ConVar(%s) defined with infinite float value (%s)\n",param_1,
      Warning("ConVarRef %s doesn\'t point to an existing ConVar\n",param_1);
      Warning("Contact Shanon or Brian\n");
      Warning("Could not connect to remote machine, remote bug command failed\n");
      Warning("Could not find the channel with the guid: %d\n",iVar1);
      Warning("Couldn\'t get DS proc addr\n");
      Warning("Couldn\'t load dsound.dll\n");
      Warning("Couldn\'t resolve response target %s\n",param_4);
      Warning("Couldn\'t scan four color values from %s\n",pcVar1);
      Warning("Couldn\'t write bitmap data snapshot to file %s.\n",param_1);
      Warning("Couldn\'t write movie snapshot to file %s.\n",param_3);
      Warning("DLL_MessageEnd:  Refusing to send user message %s of %i bytes to client, user message size limit is %i bytes\n"
      Warning("Detail prop model %s is using vertex-lit materials!\nIt must use unlit materials!\n",
      Warning("Detected one or more errors parsing %s\n",puVar7);
      Warning("Devshots: Loading point_devshot_camera positions from %s. \n",local_208);
      Warning("Devshots: No point_devshot_camera in %s. Moving to next map.\n",puVar5);
      Warning("ED_Alloc( %d ) - invalid edict index specified.",param_1);
      Warning("ERROR:  Can\'t draw studio model %s because %s is not derived from C_BaseAnimating\n"
      Warning("ERROR:  Sprite model\'s not supported any more except in legacy temp ents\n");
      Warning("ERROR: (%s) can\'t teleport object (%s) as it has a parent (%s)!\n",pcVar6,pcVar5,
      Warning("ERROR: CParticleSnapshot::Unserialize - error in data in file %s (no attribute mapping specified)\n"
      Warning("ERROR: CParticleSnapshot::Unserialize - error reading embedded CSOAContainer in file %s\n"
      Warning("ERROR: CParticleSnapshot::Unserialize - missing version field in file %s\n",param_1);
      Warning("ERROR: Tried to %s for entity %s (%s), but it has no attachment named %s.\n",param_1,
      Warning("Elevator tried to move to bad floor \'%s\'\n",pbVar2);
      Warning("Entity Message to %i, %i bytes written (max is %d)\n",DAT_10665bfc,iVar3,0xff);
      Warning("Error in bitbuf [%s]: buffer overrun. Debug in bitbuf_errorhandler.cpp\n",puVar2);
      Warning("Error in bitbuf [%s]: out of range value. Debug in bitbuf_errorhandler.cpp\n",puVar2)
      Warning("Error in precache file \"%s\":\n",param_1);
      Warning("Error serializing default cubemap %s\n",local_46c);
      Warning("Error:  <+X|-X|+Y|-Y|+Z|-Z> <value>\n");
      Warning("Fade time needs to be greater than zero!  Setting to 0.1f\n");
      Warning("Fade time needs to be greater than zero! Setting to 0.1f\n");
      Warning("Failed to find attachment point specified for particle effect anim event. Trying to spawn effect \'%s\' on attachment named \'%s\'\n"
      Warning("Failed to save data for transition\n");
      Warning("File has not been opened!\n");
      Warning("Floor %d (\'%s\') of elevator at ( %3.2f, %3.2f, %3.2f ) has no matching navigation areas\n"
      Warning("GetSceneFilename() failed for scene index %d\n",
      Warning("GetSceneFilename() failed for scene index %d\n",*(undefined4 *)((int)this + 0x1448));
      Warning("Ignoring bogus angles (%f,%f,%f) from server! (entity %s)\n",
      Warning("InitFastCopy: only %d%% fast props. Bug?\n",iVar2);
      Warning("Invalid attach type specified for particle effect anim event. Trying to spawn effect \'%s\' with attach type of \'%s\'\n"
      Warning("Invalid execution marker code.\n");
      Warning("Invalid particle sheet sequence index.  There are more than one items with a sequence index of %d. We are only using the last one we found..\n"
      Warning("LEVEL DESIGN ERROR: Entity %s is parented to itself!\n",pcVar4);
      Warning("Late precache of %s\n",param_1);
      Warning("Lost RCON connection, please retry command\n");
      Warning("Map %s missing stringtable dictionary, don\'t ship this way!!!\n",param_2);
      Warning("Map has no trigger_transition volumes for landmark %s\n",param_1 + 0x140);
      Warning("MessageEnd unknown message type.\n");
      Warning("Meta class %s duplicately defined (file %s)\n",pcVar1,param_1);
      Warning("MetaClass missing for %s\n",puVar4);
      Warning("NPC %s stuck in wall--level design error at (%.2f %.2f %.2f)\n",puVar6);
      Warning("NULL Ent in UTIL_PrecacheOther\n");
      Warning("No map specified\n");
      Warning("No unused spawnpoint found for %s\n",uVar11);
      Warning("Output filename not specified!\n");
      Warning("PVS notifier not in m_PVSNotifierMap\n");
      Warning("PhysicsSimulate: %s bad movetype %d",puVar3,*(undefined *)((int)param_1 + 0xe2));
      Warning("PhysicsSimulate: %s bad movetype %d",uVar2);
      Warning("PhysicsTryMove: !trace.u.ent");
      Warning("Q&A: \'%s\' couldn\'t answer \'%s\'\n");
      Warning("RESPONSERULES: %s spoke \'%s\'. Found response \'%s\'.\n",pcVar5,puVar6,pcVar11);
      Warning("Re-entrancy found in CClientLeafSystem::RenderableChanged\n");
      Warning("Read: Attempted to read from a write-only file");
      Warning("Released %d async handles\n",iVar2);
      Warning("Restore underflow!\n");
      Warning("RichText: textfile parameter \'%s\' not found.\n",uVar2);
      Warning("Run with -stringtables on the command line or convar\n");
      Warning("Script condition warning: warning actor is not an NPC\n");
      Warning("SerializeDMX: Unable to open file \"%s\"\n");
      Warning("Shadow memory (%s) growing [%d]\n","m_ShadowsOnModels",uVar3);
      Warning("Shadow memory (%s) growing [%d]\n","m_SmallVertexList",uVar4);
      Warning("Shadow memory (%s) growing [%d]\n",param_3,param_1);
      Warning("Socket ProcessAccept Error: %s\n",pcVar4);
      Warning("Socket connection failed (%s)\n",pcVar4);
      Warning("Sound DSP: Failed to lock.\n");
      Warning("StartParticleEffect:  Failed to find precached particle system for %d!!\n",
      Warning("Studio activity sequence mapping leak! (%s, %d)\n",DAT_105d6b64 + 0x10 + iVar5,
      Warning("Studio activity sequence mapping leak! (%s, %d)\n",DAT_106b4004 + 0x10 + iVar5,
      Warning("Teleport trigger \'%s\' cannot find destination named \'%s\'!\n",puVar8,puVar7);
      Warning("Unable to allocate %d MB of memory, trying %d MB instead\n",iVar2,iVar3);
      Warning("Unable to connect to remote server (%s)\n",pcVar2);
      Warning("Unable to find user message for index %i\n",uVar1);
      Warning("Unable to open %s for precache logging\n",local_108);
      Warning("Unable to play video: %s\n");
      Warning("Unable to restore binary scene \'%s\'\n",local_238);
      Warning("Unable to see \'%s\', check permissions and network connectivity\n",local_308);
      Warning("Unable to upload saved game and screenshot to bug repository!\n");
      Warning("UnserializeDMX: Unable to open file \"%s\"\n");
      Warning("User Msg \'%s\': %d bytes written, expected %d\n",local_108,iVar3,local_8);
      Warning("Using a Random one with radial checks--------\n");
      Warning("ViewBuilder Begin/End Error - Accessing ClientWorlListInfoElement(-1)\n");
      Warning("ViewBuilder Begin/End Error - Accessing RenderablesListElement(-1)\n");
      Warning("ViewBuilder Begin/End Error - Accessing WorldRenderListElement(-1)\n");
      Warning("ViewBuilder Begin/End Error - Flushing Build World list job(-1)\n");
      Warning("ViewBuilder Begin/End Error - Setting volume culler(-1)\n");
      Warning("WARNING: INVALID EXECUTION MARKER.\n");
      Warning("Warning:  %s = \'%s\' is infinite, clamping value.\n",uVar4,param_1);
      Warning("Warning: NavMesh place %s is undefined?\n",local_110);
      Warning("Write: Attempted to write to a read-only file");
      Warning("\tUnknown resource type specified \"%s\", value \"%s\"\n",pcVar4,pcVar5);
      Warning("can\'t find an info_player_start or any stage/squad spawns for walkable sampling!\n",
      Warning("classname %s used to create wrong class type\n","aitesthull");
      Warning("colorcorrectionui is only available when running with -tools!\n");
      Warning("mat_texture_list_txlod cannot adjust exclude for \'%s\'\n",&DAT_104f29f8);
      Warning("mat_texture_list_txlod failed adjusting lod for \'%s\'\n");
      Warning("mod_studio: MOVETYPE_FOLLOW with no model.\n");
      Warning("nav_merge_mesh: Out of memory\n");
      Warning("pushing entity (%s) that has parent (%s)!\n",pcVar3,pcVar2);
      Warning("r_screenoverlay: %s\n",uVar5);
      Warning("stringtable_alwaysrebuilddictionaries enabled to build the string table\n");
      Warning("trigger_changelevel to map %s has a landmark embedded in solid!\nThis will break level transitions!\n"
      Warning((byte *)"LookupThreadIDFromHandle couldn\'t find thread ID for handle.");
      _DAT_10427220 = "Primary Output Device";
      _DAT_106ac77c = (*(code *)puVar10)("VPhysics031",0);
      _DAT_106acfd4 = (void *)(**(code **)(*DAT_106cb7c0 + 0x44))("snd_musicvolume");
      _ExitOnFatalAssert("d:\\projects\\ti\\release\\ti_rel\\src\\public\\tier1\\utlsortvector.h",
      _Src = "";
      _Str1 = "grenade";
      _strncat(local_808,"\"",0x7ff);
      bVar1 = FUN_100a6de0(param_1,"func_water");
      bVar1 = FUN_100a6de0(param_1,"prop_physics");
      bVar1 = FUN_100a6de0(pvVar2,"path_track");
      bVar1 = FUN_100a6de0(this,"prop_physics_override");
      bVar1 = FUN_100a6de0(this,"prop_ragdoll");
      bVar2 = FUN_100a6de0(param_1,"func_water_analog");
      bVar2 = FUN_100a6de0(param_1,"info_landmark");
      bVar2 = FUN_100a6de0(param_1,"worldspawn");
      bVar2 = FUN_100a6de0(pvVar1,"prop_door_rotating");
      bVar2 = FUN_100a6de0(this,"info_node_climb");
      bVar5 = FUN_1013c980((int)param_1,(int)"fxtime");
      bVar7 = FUN_100a6de0(pvVar2,"func_breakable");
      bVar7 = FUN_100a6de0(pvVar2,"func_breakable_surf");
      bVar7 = FUN_100a6de0(pvVar2,"prop_dynamic");
      cVar1 = '\"';
      cVar1 = (**(code **)(*piVar4 + 0x1c))("OnUnload");
      cVar1 = FUN_10137bb0(&local_10,(byte *)"classname",(char *)local_1010);
      cVar1 = FUN_1013aba0(&local_10,(byte *)"classname",(char *)local_1010);
      cVar2 = '\"';
      cVar2 = (**(code **)(*DAT_104e3354 + 0x4c))("in_jlook",(int)&param_2 + 3);
      cVar2 = FUN_10137bb0(&local_10,(byte *)"classname",(char *)local_1010);
      cVar2 = FUN_1013aba0(&local_10,(byte *)"Stage",(char *)local_858);
      cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
      cVar2 = FUN_1013aba0(&local_10,(byte *)"classname",(char *)local_1010);
      case '\"':
      dwNewLong = "-noborder";
      eVar4 = _strcpy_s(_Dst,(rsize_t)puVar6,"e+000");
      eVar6 = _wcscat_s((wchar_t *)(puVar4 + 1),0x351,L";");
      eVar7 = _strcpy_s((char *)puVar6,rVar10,".\\");
      fVar11 = FUN_101044c0(param_1,"ElevatorPushPlayer1",
      fVar11 = FUN_101044c0(param_1,"ElevatorPushPlayer2",*(float *)(PTR_DAT_106ab8dc + 0x10),
      fVar11 = FUN_10114a40(param_1,"ElevatorPushPlayer1",
      fVar11 = FUN_10114a40(param_1,"ElevatorPushPlayer2",*(float *)(DAT_10646018 + 0x10),&local_40)
      fVar3 = FUN_10114a40(this,"CTIPlayerMovement::PlayerMove",*(float *)(DAT_10646018 + 0x10),
      fVar4 = FUN_101044c0(this_00,"PhysicsUpdate",(fVar6 - (float)fVar4) + local_14,&local_10);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"anglesx",0.0);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"anglesy",0.0);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"anglesz",0.0);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"directionx",0.0);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"directiony",0.0);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"directionz",0.0);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"originx",0.0);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"originy",0.0);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"originz",0.0);
      fVar4 = FUN_1042f1d0(param_1,(uint *)"scale",0.0);
      fVar5 = FUN_101044c0(this,"CTIPlayerMovement::PlayerMove",*(float *)(PTR_DAT_106ab8dc + 0x10),
      fVar6 = FUN_1042f1d0(this_00,(uint *)"angles_x",0.0);
      fVar6 = FUN_1042f1d0(this_00,(uint *)"frame_origin_x",110.0);
      fVar6 = FUN_1042f1d0(this_00,(uint *)"origin_x",110.0);
      fVar7 = (float)FUN_1042f270(pvVar3,(uint *)"flags",0);
      fVar7 = FUN_1042f1d0(this_00,(uint *)"angles_y",0.0);
      fVar7 = FUN_1042f1d0(this_00,(uint *)"frame_origin_y",5.0);
      fVar7 = FUN_1042f1d0(this_00,(uint *)"origin_y",5.0);
      fVar8 = FUN_1042f1d0(this_00,(uint *)"angles_z",0.0);
      fVar8 = FUN_1042f1d0(this_00,(uint *)"frame_origin_z",5.0);
      fVar8 = FUN_1042f1d0(this_00,(uint *)"origin_z",5.0);
      fVar9 = (float10)FUN_101149e0(param_1,"CFuncElevator::PhysicsSimulate");
      fVar9 = FUN_1042f1d0(local_8,(uint *)"viewmodelfov",50.0);
      for (ppvVar4 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"prop_door_rotating");
      for (ppvVar5 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"prop_door_rotating");
      iVar1 = (**(code **)(*(int *)(DAT_107c09f8 + 4) + 0x34))("textwindow_temp.html",0);
      iVar1 = (**(code **)(*DAT_106cb7c4 + 0x44))("fs_report_sync_opens");
      iVar1 = (**(code **)(*piVar2 + 0x2c))("-nomaster");
      iVar1 = FUN_1008c000(param_1,(byte *)"front_feeler");
      iVar1 = FUN_1008c000(param_1,(byte *)"vehicle_feet_passenger6");
      iVar1 = FUN_103991e0((char *)param_3[1],".mp3");
      iVar1 = FUN_103991e0(param_3,".mp3");
      iVar1 = FUN_1042d940(param_2,param_3,(byte *)"models/weapons/w_models/%s/%s");
      iVar1 = FUN_1042d9d0((char *)param_3[1],".mp3");
      iVar1 = FUN_1042dc70(param_3,"localPlayer",0xb);
      iVar1 = Warning("CSceneEntity %s unable to find actor \"%s\"\n",puVar3,uVar2);
      iVar10 = FUN_100898d0(local_c,(byte *)"back_end");
      iVar10 = FUN_100898d0(param_1,(byte *)"front_end");
      iVar10 = FUN_100898d0(piVar3,(byte *)"left_side");
      iVar14 = (**(code **)(*param_1 + 0x1c))("achievement",0);
      iVar2 = (**(code **)(*DAT_107c09d0 + 0x44))("snd_soundmixer");
      iVar2 = (**(code **)(*DAT_107c0a04 + 0x150))("dev/constant_color","Other textures",1,0);
      iVar2 = (**(code **)(*param_1 + 0x18))("EntityOutput",iVar1,0,DAT_105a0e10,DAT_105a0e14);
      iVar2 = (**(code **)(*param_1 + 0x18))("PEvent",iVar1,0,DAT_105a0bf8,DAT_105a0bfc);
      iVar2 = (**(code **)(*param_1 + 0x18))("disconnect",0);
      iVar2 = (**(code **)(*param_1 + 0x1c))("vote_option");
      iVar2 = (**(code **)(*piVar1 + 0x2c))("-conclearlog");
      iVar2 = (**(code **)(*piVar1 + 0x2c))("-fullscreen");
      iVar2 = (**(code **)(*piVar1 + 0x2c))("-hltv");
      iVar2 = (**(code **)(*piVar1 + 0x2c))("-startmap");
      iVar2 = (**(code **)(*piVar1 + 0x2c))("-usercon");
      iVar2 = (**(code **)(*piVar1 + 0x2c))("-usereslistfile");
      iVar2 = (**(code **)(*piVar1 + 0xc))("-reslistdir",&local_8);
      iVar2 = (**(code **)(*piVar3 + 0xc))("-tools",0);
      iVar2 = (**(code **)(iVar2 + 0x24))("-vproject",uVar4);
      iVar2 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_L_Calf");
      iVar2 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_L_Forearm");
      iVar2 = FUN_10061a10(param_1,(byte *)"ValveBiped.Bip01_R_Forearm");
      iVar2 = FUN_101fbfb0((byte *)"Map_LoadModelGuts: Map with no texinfo, %s");
      iVar2 = FUN_102659a0(param_1,(byte *)"drive");
      iVar2 = FUN_102659a0(param_1,(byte *)"gotoframe");
      iVar2 = FUN_102659a0(param_1,(byte *)"keyframe");
      iVar2 = FUN_102659a0(param_1,(byte *)"keys1");
      iVar2 = FUN_102659a0(param_1,(byte *)"keys2");
      iVar2 = FUN_102659a0(param_1,(byte *)"keys4");
      iVar2 = FUN_102659a0(param_1,(byte *)"keyshalf");
      iVar2 = FUN_102659a0(param_1,(byte *)"lookatpoints");
      iVar2 = FUN_102659a0(param_1,(byte *)"lookatpointsspline");
      iVar2 = FUN_102659a0(param_1,(byte *)"looktarget");
      iVar2 = FUN_102659a0(param_1,(byte *)"nextkey");
      iVar2 = FUN_102659a0(param_1,(byte *)"nexttarget");
      iVar2 = FUN_102659a0(param_1,(byte *)"original");
      iVar2 = FUN_102659a0(param_1,(byte *)"prevkey");
      iVar2 = FUN_102659a0(param_1,(byte *)"prevtarget");
      iVar2 = FUN_102659a0(param_1,(byte *)"processed");
      iVar2 = FUN_102659a0(param_1,(byte *)"reload");
      iVar2 = FUN_102659a0(param_1,(byte *)"revert");
      iVar2 = FUN_102659a0(param_1,(byte *)"revertpoint");
      iVar2 = FUN_102659a0(param_1,(byte *)"select");
      iVar2 = FUN_102659a0(param_1,(byte *)"server_query_info");
      iVar2 = FUN_102659a0(param_1,(byte *)"smoothleft");
      iVar2 = FUN_102659a0(param_1,(byte *)"smoothlinearinterpolateangles");
      iVar2 = FUN_102659a0(param_1,(byte *)"smoothlinearinterpolateorigin");
      iVar2 = FUN_102659a0(param_1,(byte *)"smoothselectionangles");
      iVar2 = FUN_102659a0(param_1,(byte *)"smoothselectionorigin");
      iVar2 = FUN_102659a0(param_1,(byte *)"splineangles");
      iVar2 = FUN_102659a0(param_1,(byte *)"splineorigin");
      iVar2 = FUN_102659a0(param_1,(byte *)"stepbackward");
      iVar2 = FUN_102659a0(param_1,(byte *)"stepforward");
      iVar2 = FUN_102659a0(param_1,(byte *)"togglepause");
      iVar2 = FUN_102659a0(param_1,(byte *)"userinfo");
      iVar2 = FUN_102659b0((char *)(puVar1 + 1),".vmt");
      iVar2 = FUN_10265c20((int)param_3,"materials",9);
      iVar2 = FUN_10265c20((int)pcVar6,"http://",7);
      iVar2 = FUN_10265ff0("TexGroup_Global_");
      iVar2 = FUN_10286040(pvVar1,(byte *)"Close",0);
      iVar2 = FUN_103991e0(param_3,".mp3");
      iVar2 = FUN_10399480((int)param_2,"Option",6);
      iVar2 = FUN_10399480((int)pcVar6,"http://",7);
      iVar2 = FUN_103997b0("round_start");
      iVar2 = FUN_103b2330(pvVar1,(byte *)"Close",0);
      iVar2 = FUN_103fd956(pcVar1,(int)"%f %f %f");
      iVar2 = FUN_1042d980(param_1,param_2,(ushort *)L"%d,%2.2d %ls");
      iVar2 = FUN_1042d980(param_1,param_2,(ushort *)L"%d,%2.2d%ls");
      iVar2 = FUN_1042d980(param_1,param_2,(ushort *)L"%ls%d%ls");
      iVar2 = FUN_1042d980(param_1,param_2,(ushort *)L"%ls%d.%2.2d");
      iVar2 = FUN_1042d9d0(pcVar1,".mp3");
      iVar2 = FUN_1042dc70((int)pcVar6,"http://",7);
      iVar2 = FUN_10444d70(pvVar1,(byte *)"Close",0);
      iVar2 = FUN_104a8d56(pcVar1,(int)"%f %f %f");
      iVar2 = Msg("Pure server CRC check: client %s passed check for [%s]\\%s\n",uVar3);
      iVar3 = (*(code *)puVar1)("MediaPlayer001",0);
      iVar3 = (**(code **)(*DAT_10730d00 + 0x18))("freezecam_started",0,0);
      iVar3 = (**(code **)(*piVar4 + 0x2c))("-insecure");
      iVar3 = FUN_00405740(param_1,uVar5,"VP4002");
      iVar3 = FUN_10061a10(this,(byte *)"ValveBiped.Bip01_L_Hand");
      iVar3 = FUN_1008c050(this,(byte *)"Quadruped.BLFootBone1");
      iVar3 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_Head1");
      iVar3 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_L_Foot");
      iVar3 = FUN_10199990('\0',3,(byte *)"FileSystem_GetBaseDir failed.");
      iVar3 = FUN_102659b0(pcVar2,".360.bsp");
      iVar3 = FUN_102659b0(pcVar2,"music");
      iVar3 = FUN_102f2265((char *)param_1,(int)"%d.%d.%d.%d:%d");
      iVar3 = FUN_10315e1f((ushort *)pwVar2,(ushort *)L".cmd");
      iVar3 = FUN_103991e0(local_c,"mdl");
      iVar3 = FUN_10399410((char *)piVar1[0x104],"allangles",9);
      iVar3 = FUN_1042e020("DrpQueuedMode");
      iVar3 = FUN_104ad79a((ushort *)pwVar2,(ushort *)L".cmd");
      iVar4 = (**(code **)(*DAT_10730d00 + 0x18))("freezecam_started",0,0);
      iVar4 = (**(code **)(*param_1 + 0x1c))("userid",0);
      iVar4 = (**(code **)(*param_1 + 0x28))("steamid",&DAT_104eefb3);
      iVar4 = (**(code **)(*param_1 + 0xc))("PEvent",&local_3c,0,DAT_105a0bf8,DAT_105a0bfc);
      iVar4 = (**(code **)(*piVar3 + 0xc))("-tools",0);
      iVar4 = FUN_10146910(param_1 + 300,(undefined4 *)"burning_character",1,0xffffffff,DAT_107c1064
      iVar4 = FUN_101f3700((int)this,3,"#Accept_All_Messages",(char *)0x0,(char *)0x0,(char *)0x0,
      iVar4 = FUN_101f3700((int)this,4,"#Cannot_Be_Spectator",(char *)0x0,(char *)0x0,(char *)0x0,
      iVar4 = FUN_102659b0(pcVar3,".hl");
      iVar4 = FUN_10265c20((int)pcVar3,"ui/",3);
      iVar4 = FUN_10265c20(*(int *)(local_c + DAT_104e1f18),"V_",2);
      iVar4 = FUN_10399410((char *)local_18cc,"info_player_ctstart_",iVar4);
      iVar4 = FUN_10399410((char *)local_18cc,"info_supply_crate_spawn",0x17);
      iVar4 = FUN_103997b0("info_player_ctstart_");
      iVar4 = FUN_1042e020("radio");
      iVar4 = FUN_104a8d56(pcVar3,(int)"%f %f");
      iVar5 = (**(code **)(*param_1 + 0x1c))("attacker",0);
      iVar5 = (**(code **)(*param_1 + 0x1c))("proxies",0);
      iVar5 = (**(code **)(*piVar4 + 0x2c))("-makereslists");
      iVar5 = (**(code **)(*piVar4 + 0x2c))("-nocrashdialog");
      iVar5 = (**(code **)(*piVar4 + 0x2c))("-nominidumps");
      iVar5 = (**(code **)(*piVar4 + 0x2c))(local_40,iVar5,"AmmoBox.Tick");
      iVar5 = (**(code **)(*piVar4 + 0x2c))(local_64,iVar5,"Heli.Apache_Rotor");
      iVar5 = (**(code **)(*piVar7 + 0x1c))("userid",0);
      iVar5 = FUN_1008c000(param_1,(byte *)"load_origin");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"apply");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"clamp_range");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"convar");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"curve_type");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"ds_type");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"entry");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"entry_name");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"field");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"function");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"iterate_operator");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"map_name");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"match_entry");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"match_this_entry");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"occlusio_db_loss");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"opvar");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"round_to_int");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"set_mixgroup_to_channel");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"source");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"syncpoint_list");
      iVar5 = FUN_102659a0(pbVar2,(byte *)"track_name");
      iVar5 = FUN_10266060(extraout_ECX,extraout_EDX,_Dst,(undefined (*) [16])"?voice");
      iVar5 = FUN_10399410((char *)pbVar1,"player_civkill",iVar5);
      iVar5 = FUN_10399410((char *)pbVar1,"player_civrescue",iVar5);
      iVar5 = FUN_10399410((char *)pbVar1,"player_death",iVar5);
      iVar5 = FUN_103997b0("player_civkill");
      iVar5 = FUN_103997b0("player_civrescue");
      iVar5 = FUN_103997b0("player_death");
      iVar5 = FUN_1042dc00((char *)pauVar3,"ENDOFMATCH",10);
      iVar6 = (**(code **)(**(int **)(iVar1 + 0x10 + uVar3 * 0x14) + 0x1c))("index",0);
      iVar6 = (**(code **)(*param_1 + 0x1c))("attacker",0);
      iVar6 = (**(code **)(*piVar5 + 0x2c))("-allowdebug");
      iVar6 = FUN_102659a0(pbVar3,(byte *)"autoqueue_entry_at_end_point");
      iVar6 = FUN_102659b0(pcVar5,".hl");
      iVar6 = FUN_10265ad0((int)pauVar5,"url ",4);
      iVar6 = FUN_1038de80(this_00,(int *)"concept");
      iVar6 = FUN_10399300((int)pauVar5,"url ",4);
      iVar6 = FUN_1042daf0((int)pauVar5,"url ",4);
      iVar6 = FUN_1042dc70(local_c,"grass",5);
      iVar6 = Msg("Voice - compress: %7.2fu, decompress: %7.2fu, gain: %7.2fu, upsample: %7.2fu, total: %7.2fu\n"
      iVar7 = (**(code **)(*(int *)((int)this + -4) + 0x84))("muffler1");
      iVar7 = (**(code **)(*DAT_106466ac + 4))("game_intermission");
      iVar7 = (**(code **)(*piVar2 + 0x2c))("-noborder");
      iVar7 = FUN_10031638(pbVar10,(byte *)"UTF-8",5);
      iVar7 = FUN_100898d0(param_1,(byte *)"back_end");
      iVar7 = FUN_100898d0(piVar3,(byte *)"right_side");
      iVar7 = FUN_102659b0(pcVar4,"multiplayer");
      iVar7 = FUN_103122ac(pbVar10,(byte *)"UTF-8",5);
      iVar7 = FUN_104a8d56(pcVar6,(int)"%f %f");
      iVar8 = FUN_100898d0(param_1,(byte *)"left_side");
      iVar8 = FUN_10146910((void *)((int)this + 0x4a8),(undefined4 *)"burning_engine",5,uVar9,uVar12
      iVar8 = FUN_10265bb0(pcVar5,"localhost",9);
      iVar8 = FUN_10265ff0("V_NUMBERS");
      iVar9 = (**(code **)(*DAT_107c09d0 + 0x44))("snd_soundmixer");
      iVar9 = FUN_100898d0(local_8,(byte *)"right_side");
      iVar9 = FUN_100898d0(local_c,(byte *)"front_end");
      iVar9 = FUN_102659b0((char *)&local_274,"[$");
      iVar9 = FUN_1042d9d0((char *)&local_274,"[$");
      if ((!bVar1) && (*(char **)((int)this + 0x5c) != "prop_dynamic_override")) {
      if ((!bVar2) && ((char *)param_1[0x17] != "path_corner")) {
      if (((((iVar2 == 0) || (iVar2 = FUN_10265c20((int)pcVar6,"ftp://",6), iVar2 == 0)) ||
      if (((((iVar2 == 0) || (iVar2 = FUN_10399480((int)pcVar6,"ftp://",6), iVar2 == 0)) ||
      if (((((iVar2 == 0) || (iVar2 = FUN_1042dc70((int)pcVar6,"ftp://",6), iVar2 == 0)) ||
      if (((char *)this_00[0x17] == "scripted_sequence") ||
      if (((uVar4 == 0) || (uVar4 = FUN_10265f50(pbVar11,(byte *)"spec_prev"), uVar4 == 0)) ||
      if ((cVar3 != '\"') && (cVar3 != '%')) {
      if ((char *)param_1[0x17] != "prop_door_rotating") {
      if ((char *)piVar9[0x17] != "logic_branch") {
      if ((iVar2 == -1) && (_File = _fopen(local_13c,"wb"), _File != (FILE *)0x0)) {
      if ((in_EAX != 0) && (param_1 != (uint *)"killtarget")) {
      if ((local_8 < iVar1) && (*(char *)((int)this + iVar1 + 7) == '\"')) {
      if ((param_4[iVar6] == '\"') ||
      if ((pbVar1 != (byte *)"caller") &&
      if ((pbVar1 == (byte *)"activator") ||
      if ((pbVar5 != (byte *)"soundent") &&
      if ((pbVar5 == (byte *)"!player") ||
      if ((pcVar1 != (code *)0x0) && (iVar3 = (*pcVar1)("MDLCache004",0), iVar3 != 0))
      if ((pcVar1 != (code *)0x0) && (iVar3 = (*pcVar1)("MatSystemSurface006",0), iVar3 != 0))
      if ((pcVar1 != (code *)0x0) && (iVar3 = (*pcVar1)("VMaterialSystem080",0), iVar3 != 0))
      if ((pcVar1 != (code *)0x0) && (iVar3 = (*pcVar1)("VStudioRender026",0), iVar3 != 0))
      if ((pcVar6 == pcVar5) || (pcVar6 = (char *)FUN_102659b0(pcVar5,"maps\\"), pcVar6 == pcVar5))
      if ((pcVar8 == pcVar7) || (pcVar8 = (char *)FUN_102659b0(pcVar7,"maps\\"), pcVar8 == pcVar7))
      if ((pvVar3 != (void *)0x0) && (uVar4 = FUN_1042f270(pvVar3,(uint *)"Selected",0), uVar4 != 0)
      if ((uVar5 == 0) || (uVar5 = FUN_10265f50(pbVar8,(byte *)"DecalModulate"), uVar5 == 0)) {
      if ((uVar8 == 0) || (uVar8 = FUN_10399710(pbVar7,(byte *)"staticsolid"), uVar8 == 0)) {
      if ((uVar8 == 0) || (uVar8 = FUN_1042df80(pbVar7,(byte *)"staticsolid"), uVar8 == 0)) {
      if (*(char *)((int)this + local_30 + 7) == '\"') {
      if (*(char **)((int)this + 0x5c) != "point_enable_motion_fixup") {
      if (*(char **)((int)this_00 + 0x5c) != "prop_door") {
      if (*param_2 == '\"') {
      if (*pcVar3 != '\"') {
      if (param_1 != (byte *)"fademaxdist") {
      if (param_1 != (byte *)"texturename") {
      if (param_1 != (uint *)"AttackDir") {
      if (param_1 != (uint *)"Goal_WP") {
      if (param_1 != (uint *)"LightDelay") {
      if (param_1 != (uint *)"NoiseAmplitude") {
      if (param_1 != (uint *)"Volume") {
      if (param_1 != (uint *)"angles") {
      if (param_1 != (uint *)"cheapwaterenddistance") {
      if (param_1 != (uint *)"color2") {
      if (param_1 != (uint *)"emittime") {
      if (param_1 != (uint *)"landmark") {
      if (param_1 != (uint *)"locked_sentence") {
      if (param_1 != (uint *)"max_range") {
      if (param_1 != (uint *)"maxweight") {
      if (param_1 != (uint *)"moveto") {
      if (param_1 != (uint *)"pitch") {
      if (param_1 != (uint *)"texturename") {
      if (param_1 != (uint *)"unlocked_sentence") {
      if (param_1 == (uint *)"endcolor") {
      if (param_1 == (uint *)"ubersky") {
      if (param_1 == (uint *)"world_mins") {
      if (pbVar11 != (byte *)"__ach_earned__") {
      in_EAX = (**(code **)(**(int **)(*(int *)(param_1 + 4) + iVar2 * 4) + 0x1c))("OnQuit");
      in_EAX = (*pcVar1)("cfg\\video.txt","PROFILE");
      in_EAX = (*pcVar1)("cfg\\videodefaults.txt","PROFILE");
      in_EAX = (byte *)FUN_10399710(pbVar1,(byte *)"func_pushable");
      in_EAX = (uint *)FUN_10269690(piVar2,(uint *)"cfg\\video.txt","PROFILE",(int *)0x0);
      in_EAX = Error("CompareRecvPropToSendProp: missing a property.");
      in_EAX = FUN_100612d0(param_1,"func_playerinfected_clip");
      in_EAX = FUN_1018bfb0(param_1,"__ExecutePreSpawn",&local_c,iVar1);
      in_EAX = FUN_10265f50(param_1,(byte *)"portal2_sixense");
      in_EAX = FUN_10268900(*(void **)*puVar1,(uint *)"propertysheet",0);
      in_EAX = FUN_10399710((byte *)param_1,(byte *)"height");
      in_EAX = FUN_1042c450(param_1,(int)"NULLNAME");
      in_EAX = FUN_1042f3a0(*(void **)*puVar1,(uint *)"TIPropertySheet",0);
      in_EAX = FUN_1042f3a0(*(void **)*puVar1,(uint *)"propertysheet",0);
      in_EAX = Warning("VPROF PLAYBACK ASSERT (%s, line %d) - stopping playback.\n",
      local_10 = FUN_101f6800((byte *)"models/vehicles/planes/777/engine_gibs/shell-%d.mdl");
      local_14 = (int *)(**(code **)(*piVar6 + 0x2c))("$frame",&local_5,0);
      local_14 = (int *)FUN_1042f3d0(pvVar3,(uint *)"attachment_offset",(uint)&DAT_104eefb3);
      local_14 = FUN_0041ee00(this_00,"Hub",0);
      local_18 = "#SessionError_ServerShuttingDown";
      local_18 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
      local_18 = _fopen("timestamped.log","at+");
      local_1c = "Server shutting down";
      local_1c = "command";
      local_1c = (int *)(**(code **)(*piVar6 + 0x2c))("$basetexture",&local_5,0);
      local_1c[0] = "dod";
      local_1c[1] = "cstrike";
      local_1c[2] = "lostcoast";
      local_24 = "#SessionError_ConnectionFailedAfter";
      local_24 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("dev/glow_blur_y","Other textures",1,0)
      local_28 = "Connection failed after ";
      local_28 = "exp10";
      local_28 = (**(code **)(*DAT_107c0a04 + 0x150))("dev/glow_blur_x","Other textures",1,0);
      local_2c = "generic-type-";
      local_30 = "#SessionError_NoPartner";
      local_30 = "#VideoOptions_WaitForVSync_Info";
      local_34 = "";
      local_34 = "#GameUI_Wait_For_VSync";
      local_34 = "Partner disconnected";
      local_34 = FUN_100c5fd0((int)"debug/debugtexturealpha",local_44,(int)local_78);
      local_38 = "dem_datatables";
      local_38 = "dem_stringtables";
      local_38 = FUN_100c5fd0((int)"debug/debugtexturealpha",local_24,(int)local_80);
      local_3c = "#L4D_ServerShutdownIdle";
      local_40 = "All players idle";
      local_48 = "#SessionError_Kicked";
      local_4c = "You have been voted off";
      local_54 = "#SessionError_Kicked";
      local_58 = "Kicked and banned";
      local_60 = "#SessionError_Kicked";
      local_64 = "Added to banned list";
      local_64 = FUN_10043c00((int *)"!xxtestxx");
      local_64 = FUN_10043c00((int *)"ambience/labdrone1.wav");
      local_6c = "#L4D360UI_MsgBx_DisconnectedFromServer";
      local_70 = "Connection to server timed out";
      local_78 = "#DisconnectReason_PlayerRemovedFromSession";
      local_7c = "Player removed from host session";
      local_8 = "None";
      local_8 = "Player";
      local_8 = FUN_0041ee00(this_00,"User",0);
      local_8 = FUN_100d0740((byte *)"vehicle_%s_height");
      local_8 = FUN_100d0740((byte *)"vehicle_%s_spin");
      local_8 = FUN_101f6800((byte *)"vehicle_%s_height");
      local_8 = FUN_101f6800((byte *)"vehicle_%s_spin");
      local_8 = FUN_10267f50(pvVar3,"GameTags");
      local_8 = FUN_10267f50(this,"KeyModeSet");
      local_8 = FUN_10267f50(this_00,"ColumnResized");
      local_8 = FUN_10267f50(this_00,"ParentMenuItemSelected");
      local_8 = FUN_10267f50(this_00,"RadioButtonChecked");
      local_8 = FUN_1039d370(this,"KeyModeSet");
      local_8 = FUN_1039d370(this_00,"ColumnResized");
      local_8 = FUN_1039d370(this_00,"ParentMenuItemSelected");
      local_8 = FUN_1039d370(this_00,"RadioButtonChecked");
      local_8 = FUN_1042ea30(pvVar3,"Game Instructor Counts");
      local_8 = FUN_1042ea30(this,"KeyModeSet");
      local_8 = FUN_1042ea30(this,"MouseFocusTicked");
      local_8 = FUN_1042ea30(this_00,"ColumnResized");
      local_8 = FUN_1042ea30(this_00,"ParentMenuItemSelected");
      local_8 = FUN_1042ea30(this_00,"RadioButtonChecked");
      local_84 = "#DisconnectReason_LostConnectionToLIVE";
      local_88 = "Lost connection to LIVE";
      local_90 = "#DisconnectReason_Unknown";
      local_a0 = "Current";
      local_c = "";
      local_c = (int *)FUN_10444d70(piVar1,(byte *)"LocalEXP",1);
      local_c = (int *)FUN_10444d70(piVar5,(byte *)"LocalEXP",1);
      local_c = FUN_1002169d(param_1,param_2,(byte *)"\nCall Stack:\n\t");
      local_c = FUN_10267f50(pvVar7,"UpdateControlData");
      local_c = FUN_10267f50(this,"scripts/sound_operator_stacks.txt");
      local_c = FUN_102b2d60(pvVar3,*(int *)(param_1 + 0x2b0),"VarsMenu",1);
      local_c = FUN_1039d370(pvVar7,"UpdateControlData");
      local_c = FUN_103c9d10(pvVar3,*(int *)(param_1 + 0x2b0),"VarsMenu",1);
      local_c = FUN_1042ea30(pvVar2,"avatars");
      local_c = FUN_1042ea30(pvVar7,"UpdateControlData");
      local_c = FUN_1042ea30(this,"Game Instructor Counts");
      local_c = FUN_10472550(pvVar3,*(int *)(param_1 + 0x2b0),"VarsMenu",1);
      local_c[0] = "ammo";
      local_c[0] = "ammo2";
      local_c[0] = "autoaim";
      local_c[0] = "bignum_colon";
      local_c[0] = "crosshair";
      local_c[0] = "weapon";
      local_c[0] = "weapon_s";
      local_c[0] = "weapon_small";
      local_c[0] = "zoom";
      local_c[0] = "zoom_autoaim";
      local_d8 = "sprites/flashlight_halo.vmt";
      local_e0 = "sprites/flashlight_beam.vmt";
      lpFileName = "\\\\.\\GDPERF";
      lpFileName = "\\\\.\\GDPERF.VXD";
      lpOutputString = "PageHeap is off. Memory use will be normal.\n";
      lpOutputString = "PageHeap is on. Memory use will be larger than normal.\n";
      pDVar4 = (DName *)DName::DName((DName *)local_60," ");
      pDVar4 = (DName *)DName::DName(local_b4,"`anonymous namespace\'");
      pDVar4 = (DName *)DName::DName(local_e4,"::");
      pFVar1 = GetProcAddress(hModule,"GetLogicalProcessorInformation");
      pFVar4 = GetProcAddress(hModule,"GetProcessWindowStation");
      pFVar6 = GetProcAddress(hModule,"SymInitialize");
      pHVar7 = (HMODULE)FUN_10198d40((undefined (*) [16])"bsppack");
      pHVar9 = (HMODULE)FUN_10198d40((undefined (*) [16])"bsppack");
      param_1 = "CAudioSource is NULL.";
      param_1 = "Default";
      param_1 = "Looping.";
      param_1 = "NULL";
      param_1 = "toggle_duck";
      param_1 = "toggle_zoom";
      param_1 = FUN_10267f50(this_00,"OnSaveFile");
      param_1[0x2d] = (int)"models/vehicles/cars/car-6_npc.mdl";
      param_1[0x2d] = (int)"models/vehicles/cars/sedan-1_npc.mdl";
      param_1[0x2d] = (int)"models/vehicles/cars/truck-1_npc.mdl";
      param_1[0x2d] = (int)"models/vehicles/cars/truck-2_npc.mdl";
      param_1[0x2d] = (int)"models/vehicles/cars/truck-3_npc.mdl";
      param_1[0x2d] = (int)"models/vehicles/cars/van-1_npc.mdl";
      param_1[0x2d] = (int)"models/vehicles/cars/van-2_npc.mdl";
      param_1[0x2d] = (int)"models/vehicles/cars/van-3_npc.mdl";
      param_1[6] = (byte *)"incorrect data check";
      param_1[6] = (byte *)"need dictionary";
      param_2 = "";
      param_2 = (int **)FUN_103af9c0(PTR_DAT_106cd710,(undefined4 *)"error");
      param_2[6] = (byte *)"too many length or distance symbols";
      param_5 = "Continue";
      param_5 = "Ignore";
      param_5 = "Start";
      param_5 = "Stop";
      param_5 = FUN_103145a0(pvVar8,(int)this,"ButtonGMKick","[GM] Kick",0,(char *)0x0,1);
      param_5 = FUN_103145a0(pvVar8,(int)this,"ButtonGMMute","[GM] Mute",0,(char *)0x0,1);
      param_5 = FUN_103145a0(pvVar8,(int)this,"ButtonGMSlap","[GM] Slap",0,(char *)0x0,1);
      param_5 = FUN_103145a0(pvVar8,(int)this,"ButtonGMSlay","[GM] Slay",0,(char *)0x0,1);
      param_5 = FUN_103145a0(pvVar8,(int)this,"ButtonGMSlay","[GM] Strip",0,(char *)0x0,1);
      param_5 = FUN_103145a0(pvVar8,(int)this,"ButtonRemoveFriend","#TI_PLR_Context_RemoveFriend",0,
      param_7[0x17] = (float)"**studio**";
      param_9[0x17] = (float)"**studio**";
      pauVar4 = (undefined (*) [16])"FCVAR_NEVER_AS_STRING";
      pauVar5 = (undefined (*) [16])FUN_1017c740((byte *)"*sv_search_key_%s%d");
      pauVar6 = (undefined (*) [16])"FCVAR_NEVER_AS_STRING";
      pbVar11 = (byte *)"FCVAR_NEVER_AS_STRING";
      pbVar13 = (byte *)"FCVAR_NEVER_AS_STRING";
      pbVar2 = (byte *)FUN_10268930(param_1,(uint *)"Format",(uint)&DAT_103236cf);
      pbVar2 = (byte *)FUN_1042f3d0(this,(uint *)"Binding",(uint)&DAT_104eefb3);
      pbVar3 = (byte *)"FCVAR_NEVER_AS_STRING";
      pbVar5 = (byte *)"FCVAR_NEVER_AS_STRING";
      pbVar5 = (byte *)FUN_10268930(this_00,(uint *)"command",(uint)&DAT_103236cf);
      pbVar5 = (byte *)FUN_1039db00(this_00,(uint *)"command",(uint)&DAT_1043677a);
      pbVar5 = (byte *)FUN_1042f3d0(pvVar3,(uint *)"Binding",(uint)&DAT_104eefb3);
      pbVar5 = (byte *)FUN_1042f3d0(this_00,(uint *)"command",(uint)&DAT_104eefb3);
      pbVar6 = (byte *)FUN_1042f3d0(pvVar2,(uint *)"interface",(uint)&DAT_104eefb3);
      pbVar7 = (byte *)"FCVAR_NEVER_AS_STRING";
      pbVar7 = (byte *)FUN_1042f3d0(pvVar3,(uint *)"attachment_type",(uint)&DAT_104eefb3);
      pcStack148 = "GPU    ";
      pcStack24 = "RagdollSphere";
      pcStack28 = "DEFAULT";
      pcStack32 = "DEFAULT";
      pcStack592 = "player_say";
      pcStack80 = "proxies";
      pcVar1 = " (Not Visible)";
      pcVar1 = "";
      pcVar1 = "#L4D360UI_Disabled";
      pcVar1 = "%s Add";
      pcVar1 = "%s Delete";
      pcVar1 = "%s Edit";
      pcVar1 = "%s Integrate";
      pcVar1 = "%s: fread failed.\n";
      pcVar1 = "//mod/%s";
      pcVar1 = "BaseExplosionEffect.Sound";
      pcVar1 = "CHunkMemory";
      pcVar1 = "Center";
      pcVar1 = "North";
      pcVar1 = "NorthEast";
      pcVar1 = "NorthWest";
      pcVar1 = "South";
      pcVar1 = "SouthEast";
      pcVar1 = "SouthWest";
      pcVar1 = "WaterExplosionEffect.Sound";
      pcVar1 = "cl_localnetworkbackdoor state change";
      pcVar1 = "disabled";
      pcVar1 = "east";
      pcVar1 = "env_fire_large";
      pcVar1 = "env_fire_large_smoke";
      pcVar1 = "explode_3";
      pcVar1 = "explosion(200)";
      pcVar1 = "explosion(300)";
      pcVar1 = "false";
      pcVar1 = "mat_reloadallmaterials\n";
      pcVar1 = "north";
      pcVar1 = "north-east";
      pcVar1 = "north-west";
      pcVar1 = "quit\n";
      pcVar1 = "south";
      pcVar1 = "south-east";
      pcVar1 = "south-west";
      pcVar1 = "speaker";
      pcVar1 = "true";
      pcVar1 = (char *)FUN_10268930(param_1,(uint *)"ControlName",(uint)&DAT_103236cf);
      pcVar1 = (char *)FUN_1039db00(param_1,(uint *)"ControlName",(uint)&DAT_1043677a);
      pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"ControlName",(uint)&DAT_104eefb3);
      pcVar1 = FUN_1017c740((byte *)"%s.cfg");
      pcVar1 = FUN_1017c740((byte *)"setang_exact %f %f %f\n");
      pcVar1 = FUN_1017c740((byte *)"setpos_exact %f %f %f\n");
      pcVar10 = " QUEUED";
      pcVar10 = "";
      pcVar10 = "#AutoReload_Default";
      pcVar10 = "#AutoReload_Full";
      pcVar10 = "#AutoReload_On";
      pcVar10 = "#Buy";
      pcVar10 = "#FallbackNoDupe_Pet";
      pcVar10 = "#FallbackNoDupe_Sniper";
      pcVar10 = "#HudColor_Green";
      pcVar10 = "#L4D360UI_Disabled";
      pcVar10 = "#L4D360UI_Enabled";
      pcVar10 = "#NetGraph_Simple";
      pcVar10 = "#Option_Minimap_On";
      pcVar10 = "#Option_VM_LeftHand";
      pcVar10 = "#Option_VM_RightHand";
      pcVar10 = "#PrizeBox_Redeem";
      pcVar10 = "#TILoad_DM";
      pcVar10 = "#TILoad_Intel";
      pcVar10 = "#TILoad_Mission";
      pcVar10 = "#TIMap_DefWrap";
      pcVar10 = "#TIMap_TDMWrap";
      pcVar10 = "Default.Bombing";
      pcVar10 = "DmeParticleSystemDefinition";
      pcVar10 = "FCVAR_NEVER_AS_STRING";
      pcVar10 = "Hit Location: Chest\n";
      pcVar10 = "Hit Location: Gear\n";
      pcVar10 = "Hit Location: Generic\n";
      pcVar10 = "Hit Location: Head\n";
      pcVar10 = "Hit Location: Left/Right Arm\n";
      pcVar10 = "Hit Location: Left/Right Leg\n";
      pcVar10 = "Hit Location: Stomach\n";
      pcVar10 = "Hit Location: UNKNOWN\n";
      pcVar10 = "Other textures";
      pcVar10 = "Player.WP_Touch";
      pcVar10 = "SquadDesc_CT";
      pcVar10 = "SquadDesc_CT_VIP";
      pcVar10 = "SquadDesc_T";
      pcVar10 = "SquadDesc_T_Bomb";
      pcVar10 = "SquadDesc_T_Driver";
      pcVar10 = "SquadDesc_Ter_BOSS";
      pcVar10 = "StaminaChanged";
      pcVar10 = "`local static destructor helper\'";
      pcVar10 = "backpack.dat";
      pcVar10 = "false";
      pcVar10 = "hltv_rank_camera";
      pcVar10 = "smoke_muzzle_automatic";
      pcVar10 = "smoke_muzzle_pistol";
      pcVar10 = "smoke_muzzle_shotgun";
      pcVar11 = "";
      pcVar11 = "#GameUI_4Speakers";
      pcVar11 = "#GameUI_5Speakers";
      pcVar11 = "#GameUI_Headphones";
      pcVar11 = "#GameUI_High";
      pcVar11 = "#GameUI_Low";
      pcVar11 = "#GameUI_Medium";
      pcVar11 = "#Inv_CT";
      pcVar11 = "#Inv_SlotPrevCharacter";
      pcVar11 = "#Inv_SlotPrevEquipment";
      pcVar11 = "#Inv_SlotPrevFace";
      pcVar11 = "#Inv_SlotPrevFeet";
      pcVar11 = "#Inv_SlotPrevHands";
      pcVar11 = "#Inv_SlotPrevHelmet";
      pcVar11 = "#Inv_SlotPrevHolster";
      pcVar11 = "#TI_DM_Respawn";
      pcVar11 = "(%f, %f, %f)";
      pcVar11 = ") != 0\n";
      pcVar11 = ") == false\n";
      pcVar11 = ") >= 0\n";
      pcVar11 = "Couldn\'t get factory \'%s\'\n";
      pcVar11 = "Custom Slot %i";
      pcVar11 = "Default Slot %i";
      pcVar11 = "\t!( [\"%s\"]->IsInstanceActive() ";
      pcVar11 = "hltv_rank_entity";
      pcVar11 = "models/brokenglass/glassbroken_01d";
      pcVar11 = "models/brokentile/tilebroken_01d";
      pcVar11 = "rappelpoint_left";
      pcVar11 = "rappelpoint_right";
      pcVar11 = "true";
      pcVar11 = "volume";
      pcVar12 = "(%.0f %.0f %.0f)";
      pcVar12 = "Breakable.Ceiling";
      pcVar12 = "Breakable.Computer";
      pcVar12 = "Breakable.Concrete";
      pcVar12 = "Breakable.Crate";
      pcVar12 = "Breakable.Flesh";
      pcVar12 = "Breakable.Glass";
      pcVar12 = "Breakable.Metal";
      pcVar12 = "unconnected";
      pcVar12 = "unknown";
      pcVar13 = "";
      pcVar13 = "#GP_Bombing_CT";
      pcVar13 = "#GP_Bombing_TerBomb";
      pcVar13 = "#GP_HG_Ter";
      pcVar13 = "#GP_HR_CT";
      pcVar13 = "#GP_HR_Ter";
      pcVar13 = "#GP_VIPCar_TerDriver";
      pcVar13 = "#GP_VIPEsc_CT_VIP";
      pcVar13 = "#GP_VIPEsc_Ter_BOSS";
      pcVar13 = "#LoginConnectFailed_Body";
      pcVar13 = "//mod/%s*.HL?";
      pcVar13 = "//mod/*.HL?";
      pcVar13 = "DEAD";
      pcVar13 = "DS:CreateSoundBuffer for 3d front left failed";
      pcVar13 = "DYING";
      pcVar13 = "FCVAR_NEVER_AS_STRING";
      pcVar13 = "backpack.dat";
      pcVar13 = "effects/blood_drop";
      pcVar13 = "effects/ember_swirling001";
      pcVar13 = "effects/fleck_ash1";
      pcVar13 = "effects/fleck_ash2";
      pcVar13 = "effects/fleck_ash3";
      pcVar13 = (char *)FUN_1042f3d0(*(void **)((int)this + 0x54),(uint *)"group",
      pcVar13 = FUN_1017c740((byte *)"%s [%s]");
      pcVar14 = "        depth %6d has ";
      pcVar14 = "#ConnectionFailed";
      pcVar14 = "#LoginConnectFailed_Body";
      pcVar14 = "#TI_Squad_Alpha_BOMBER";
      pcVar14 = "#TI_Squad_Bravo_Support";
      pcVar14 = "#TI_Squad_Charlie_THEBOSS";
      pcVar14 = "%6d unresolved strings\n";
      pcVar14 = "*NOT* In a Vehicle";
      pcVar14 = "FCVAR_NEVER_AS_STRING";
      pcVar14 = "In a Vehicle";
      pcVar14 = "characters/npc1.mdl";
      pcVar14 = "debugtext";
      pcVar14 = "elevation";
      pcVar15 = "NPC doesn\'t know how to handle that type.";
      pcVar15 = "combo";
      pcVar15 = "disabled";
      pcVar15 = "icon_door_close";
      pcVar15 = "icon_door_open";
      pcVar15 = "leftedge";
      pcVar15 = "radio b1\n";
      pcVar15 = "radio b2\n";
      pcVar15 = "radio b3\n";
      pcVar15 = "radio b4\n";
      pcVar15 = "radio d1\n";
      pcVar15 = "range";
      pcVar15 = "rightedge";
      pcVar16 = "#TI_Objective_VIPCar_CT_Secure_Case";
      pcVar16 = "TObj_CT";
      pcVar16 = "TObj_Ter";
      pcVar16 = "backpack.dat";
      pcVar17 = "!= [%s] ";
      pcVar17 = ") != 0\n";
      pcVar17 = ") ...\n";
      pcVar17 = ">= [%s] ";
      pcVar17 = "TAudio_CT";
      pcVar17 = "TAudio_Ter";
      pcVar17 = "\"%s\" ";
      pcVar17 = "\t!FClassnameIs( [%s] ";
      pcVar17 = "\tC_BaseEntity::Instance([%s]->GetUseEntity()) != [%s]\n";
      pcVar17 = "\t[%s] != [%s]\n";
      pcVar17 = "\t[%s]->Weapon_OwnsThisType([%s] ";
      pcVar18 = "Invalid Steam key size.\n";
      pcVar18 = "Invalid challenge packet.\n";
      pcVar18 = "flashlight_ak47";
      pcVar18 = "flashlight_aug";
      pcVar18 = "flashlight_dsa58";
      pcVar18 = "flashlight_fp6";
      pcVar18 = "flashlight_g36k";
      pcVar18 = "flashlight_m14";
      pcVar18 = "flashlight_m4";
      pcVar18 = "flashlight_mp5";
      pcVar18 = "flashlight_mp7";
      pcVar18 = "flashlight_pistol";
      pcVar18 = "flashlight_sg551";
      pcVar18 = "flashlight_uzi";
      pcVar18 = "gesture";
      pcVar18 = "startloop";
      pcVar2 = "";
      pcVar2 = "#GameUI_Icons_A_BUTTON";
      pcVar2 = "#GameUI_Icons_B_BUTTON";
      pcVar2 = "#GameUI_Icons_DOWN";
      pcVar2 = "#GameUI_Icons_LEFT";
      pcVar2 = "#GameUI_Icons_LSTICK";
      pcVar2 = "#GameUI_Icons_L_SHOULDER";
      pcVar2 = "#GameUI_Icons_L_TRIGGER";
      pcVar2 = "#GameUI_Icons_RIGHT";
      pcVar2 = "#GameUI_Icons_RSTICK";
      pcVar2 = "#GameUI_Icons_R_SHOULDER";
      pcVar2 = "#GameUI_Icons_R_TRIGGER";
      pcVar2 = "#GameUI_Icons_UP";
      pcVar2 = "#GameUI_Icons_X_BUTTON";
      pcVar2 = "#GameUI_Icons_Y_BUTTON";
      pcVar2 = "#L4D360UI_ShowUnlockableAwards";
      pcVar2 = "*DEAD*(TEAM)";
      pcVar2 = "*DISABLED*";
      pcVar2 = "5.1 speaker";
      pcVar2 = "7.1 speaker";
      pcVar2 = "999999.0";
      pcVar2 = "<< no level specified >>";
      pcVar2 = "CHudMessage";
      pcVar2 = "Connection lost";
      pcVar2 = "Dropped from server";
      pcVar2 = "EDIT_SPLIT.MarkedArea";
      pcVar2 = "EDIT_SPLIT.NoMarkedArea";
      pcVar2 = "Enabled.";
      pcVar2 = "Error: MixLayer operator has invalid mix group index!\n";
      pcVar2 = "Error: MixLayer operator has invalid mix layer index!\n";
      pcVar2 = "FCVAR_NEVER_AS_STRING";
      pcVar2 = "Incompatible Anti Cheat";
      pcVar2 = "Incompatible software";
      pcVar2 = "Invalid version";
      pcVar2 = "Kicked";
      pcVar2 = "Memory corruption";
      pcVar2 = "NO Ray";
      pcVar2 = "NULL";
      pcVar2 = "No license";
      pcVar2 = "Not logged on";
      pcVar2 = "Response timed out";
      pcVar2 = "State: Disabled";
      pcVar2 = "State: Enabled";
      pcVar2 = "Steam connection error";
      pcVar2 = "Steam connection lost";
      pcVar2 = "Unknown";
      pcVar2 = "VAC banned ";
      pcVar2 = "`non-type-template-parameter";
      pcVar2 = "`template-parameter";
      pcVar2 = "acos";
      pcVar2 = "acosh";
      pcVar2 = "add";
      pcVar2 = "asin";
      pcVar2 = "asinh";
      pcVar2 = "atan";
      pcVar2 = "atanh";
      pcVar2 = "ceil";
      pcVar2 = "center";
      pcVar2 = "coclass ";
      pcVar2 = "cointerface ";
      pcVar2 = "cos";
      pcVar2 = "cosh";
      pcVar2 = "demopauseafterinit\n";
      pcVar2 = "div";
      pcVar2 = "east";
      pcVar2 = "effects/flashlight001_improved";
      pcVar2 = "equals";
      pcVar2 = "erf";
      pcVar2 = "erfc";
      pcVar2 = "exp";
      pcVar2 = "exp2";
      pcVar2 = "expm1";
      pcVar2 = "fabs";
      pcVar2 = "false";
      pcVar2 = "floor";
      pcVar2 = "fs_warning_level = FILESYSTEM_WARNING_QUIET\n";
      pcVar2 = "fs_warning_level = FILESYSTEM_WARNING_REPORTALLACCESSES\n";
      pcVar2 = "fs_warning_level = FILESYSTEM_WARNING_REPORTALLACCESSES_ASYNC\n";
      pcVar2 = "fs_warning_level = FILESYSTEM_WARNING_REPORTALLACCESSES_READWRITE\n";
      pcVar2 = "fs_warning_level = FILESYSTEM_WARNING_REPORTALLACCESSES_READ\n";
      pcVar2 = "fs_warning_level = FILESYSTEM_WARNING_REPORTUNCLOSED\n";
      pcVar2 = "fs_warning_level = FILESYSTEM_WARNING_REPORTUSAGE\n";
      pcVar2 = "gamemode - 8.1 with some 9.0 (full-precision)";
      pcVar2 = "gamemode - 8.1 with some 9.0 (half-precision)";
      pcVar2 = "gamemode - 9.0 (full-precision)";
      pcVar2 = "gamemode - 9.0 (half-precision)";
      pcVar2 = "gamma";
      pcVar2 = "greater_than";
      pcVar2 = "greater_than_or_equal";
      pcVar2 = "headphone";
      pcVar2 = "invert";
      pcVar2 = "invert_scale";
      pcVar2 = "less_than";
      pcVar2 = "less_than_or_equal";
      pcVar2 = "lgamma";
      pcVar2 = "linear";
      pcVar2 = "log";
      pcVar2 = "log10";
      pcVar2 = "log1p";
      pcVar2 = "log2";
      pcVar2 = "logb";
      pcVar2 = "max";
      pcVar2 = "min";
      pcVar2 = "mod";
      pcVar2 = "mult";
      pcVar2 = "nearbyint";
      pcVar2 = "north";
      pcVar2 = "north-east";
      pcVar2 = "north-west";
      pcVar2 = "not_equal";
      pcVar2 = "pow";
      pcVar2 = "quad speaker";
      pcVar2 = "rint";
      pcVar2 = "rintol";
      pcVar2 = "round";
      pcVar2 = "roundtol";
      pcVar2 = "say \"%s\"";
      pcVar2 = "say_team \"%s\"";
      pcVar2 = "set";
      pcVar2 = "sin";
      pcVar2 = "sinh";
      pcVar2 = "slime_splash_01";
      pcVar2 = "south";
      pcVar2 = "south-east";
      pcVar2 = "south-west";
      pcVar2 = "sqrt";
      pcVar2 = "sub";
      pcVar2 = "tan";
      pcVar2 = "tanh";
      pcVar2 = "trunc";
      pcVar2 = (char *)(**(code **)(*this + 0x34c))("NameEntry",&DAT_103236cf);
      pcVar2 = (char *)FUN_0041f250(this_00,"desc",0);
      pcVar2 = (char *)FUN_0041f250(this_00,"name",0);
      pcVar2 = (char *)FUN_10268930(this_00,(uint *)"togglecvar",(uint)&DAT_103236cf);
      pcVar2 = FUN_1017c740((byte *)"%s(%s) ");
      pcVar2 = FUN_1017c740((byte *)"demo_play %s\n");
      pcVar2 = FUN_1017c740((byte *)"tv_relay %s\n");
      pcVar20 = "halloween_bats";
      pcVar20 = "halloween_ghosts";
      pcVar28 = "1#SNAN";
      pcVar3 = "    block %d: crc = 0x%8x, combined CRC = 0x%8x, size = %d\n";
      pcVar3 = "    final combined CRC = 0x%x\n   ";
      pcVar3 = "!= true\n";
      pcVar3 = "";
      pcVar3 = "#ClrName_CT";
      pcVar3 = "#ClrName_Friend";
      pcVar3 = "#GameUI_High";
      pcVar3 = "#GameUI_Low";
      pcVar3 = "#GameUI_Medium";
      pcVar3 = "#L4D360UI_Disabled";
      pcVar3 = "#L4D360UI_VideoOptions_VSync_DoubleBuffered";
      pcVar3 = "#L4D360UI_VideoOptions_VSync_TripleBuffered";
      pcVar3 = "#PORTAL2_Controller_Buttons_Custom";
      pcVar3 = "#TI_Score_BOSS_Escaped";
      pcVar3 = "#TI_Score_BOSS_Killed";
      pcVar3 = "#TI_Score_BOSS_NotEscape";
      pcVar3 = "#TI_Score_BOSS_TimeOut_Attacker";
      pcVar3 = "#TI_Score_BOSS_TimeOut_Attacker2";
      pcVar3 = "#TI_Score_BOSS_TimeOut_Defender";
      pcVar3 = "27015";
      pcVar3 = "<ellipsis>";
      pcVar3 = ">= [%s] ";
      pcVar3 = "Bad Audio file \'%s\'\n";
      pcVar3 = "Bullets.DefaultNearmiss";
      pcVar3 = "Bullets.HeavyNearmiss";
      pcVar3 = "Explode_40MM";
      pcVar3 = "FCVAR_NEVER_AS_STRING";
      pcVar3 = "FadeOutWeaponSelectionMenu";
      pcVar3 = "Flesh.BulletImpact";
      pcVar3 = "HLTV";
      pcVar3 = "Hostage.BodyCheck";
      pcVar3 = "Ice_Explosion_Decal";
      pcVar3 = "Linux";
      pcVar3 = "Main thread";
      pcVar3 = "Make Key";
      pcVar3 = "Make Target";
      pcVar3 = "Missing wav file \'%s\'\n";
      pcVar3 = "NO Hull";
      pcVar3 = "NULL";
      pcVar3 = "OpenWeaponSelectionMenu";
      pcVar3 = "Pause";
      pcVar3 = "REPLAY";
      pcVar3 = "RPG7Explode";
      pcVar3 = "Server waking up from hibernation\n";
      pcVar3 = "Underwater.BulletImpact";
      pcVar3 = "Windows";
      pcVar3 = "\tGameRules()->IsMultiplayer() ";
      pcVar3 = "\tIsPresentComplete() ";
      pcVar3 = "body_pitch";
      pcVar3 = "body_yaw";
      pcVar3 = "command";
      pcVar3 = "dedicated";
      pcVar3 = "dsp: (%2.2f) millisec   ";
      pcVar3 = "effects/flashlight001_improved";
      pcVar3 = "false";
      pcVar3 = "grenade_40mm";
      pcVar3 = "impact_fx_clothing";
      pcVar3 = "impact_fx_pillow";
      pcVar3 = "impact_fx_rubber";
      pcVar3 = "info_node";
      pcVar3 = "info_node_air";
      pcVar3 = "listen";
      pcVar3 = "m_pSfx = NULL";
      pcVar3 = "mix+dsp:(%2.2f) millisec   ";
      pcVar3 = "nomap";
      pcVar3 = "npc_vehicle";
      pcVar3 = "player";
      pcVar3 = "proxy";
      pcVar3 = "snd load: (%2.2f) millisec   ";
      pcVar3 = "true";
      pcVar3 = "unpaused";
      pcVar3 = "valve";
      pcVar3 = "voice_micdata.wav";
      pcVar3 = (char *)FUN_0041f250(puVar5,"desc",0);
      pcVar3 = (char *)FUN_0041f250(puVar5,"img",0);
      pcVar3 = (char *)FUN_0041f250(puVar5,"name",0);
      pcVar3 = (char *)FUN_0041f250(puVar5,"shop",0);
      pcVar3 = (char *)FUN_0041f250(puVar5,"view",0);
      pcVar3 = (char *)FUN_0041f250(puVar5,"world",0);
      pcVar3 = (char *)FUN_1039db00(local_c,(uint *)"close",(uint)&DAT_1043677a);
      pcVar3 = (char *)FUN_1039db00(local_c,(uint *)"locked",(uint)&DAT_1043677a);
      pcVar3 = (char *)FUN_1039db00(local_c,(uint *)"unlocked",(uint)&DAT_1043677a);
      pcVar3 = (char *)FUN_1042f3d0(this_00,(uint *)"pageName",(uint)&DAT_104eefb3);
      pcVar3 = FUN_1003ef70(&local_13c,(byte *)"Dir ent: %s");
      pcVar3 = FUN_1003ef70(&local_13c,(byte *)"Front ent: %s");
      pcVar3 = FUN_1018dc80(param_1,(uint *)"activity",0);
      pcVar3 = FUN_1018dc80(param_1,(uint *)"sequence",0);
      pcVar4 = " COMBINED";
      pcVar4 = "";
      pcVar4 = "#GameUI_Wait_For_VSync";
      pcVar4 = "#L4D360UI_Gore_High";
      pcVar4 = "#L4D360UI_Gore_Low";
      pcVar4 = "#L4D360UI_LegacyOn";
      pcVar4 = "#L4D360UI_Modify";
      pcVar4 = "#L4D360UI_Select";
      pcVar4 = "#chat_say_team_ti";
      pcVar4 = "%creserve0000000";
      pcVar4 = "%s%s.HL2";
      pcVar4 = "%s:\\%s.HL2";
      pcVar4 = "//mod/%s%02d.%s";
      pcVar4 = "//mod/%s.%s";
      pcVar4 = "<<null>>";
      pcVar4 = "AllowFreeLookDisabled";
      pcVar4 = "AllowFreeLookEnabled";
      pcVar4 = "BgColor";
      pcVar4 = "CHudMessage";
      pcVar4 = "EDIT_DISCONNECT.MarkedArea";
      pcVar4 = "Exclusive: !?INVALID?!";
      pcVar4 = "Exclusive: NO";
      pcVar4 = "Exclusive: Not Evaluated";
      pcVar4 = "Exclusive: YES";
      pcVar4 = "FCVAR_NEVER_AS_STRING";
      pcVar4 = "GameInstructorDisabled";
      pcVar4 = "GameInstructorEnabled";
      pcVar4 = "Had Error";
      pcVar4 = "NO Physics";
      pcVar4 = "Player.FastRope_Climb";
      pcVar4 = "Player.Rappel_Climb";
      pcVar4 = "Player.Rappel_Movement";
      pcVar4 = "RecursiveLoadFromBuffer:  got EOF instead of keyname";
      pcVar4 = "RecursiveLoadFromBuffer:  got empty keyname";
      pcVar4 = "RoundState Transition: entering #%d\n";
      pcVar4 = "RoundState Transition: entering \'%s\'\n";
      pcVar4 = "SteamID (%llu) P2P session started";
      pcVar4 = "\tName\t%s\n";
      pcVar4 = "\tName\t\"%s\"\n";
      pcVar4 = "blood_splatter1";
      pcVar4 = "blood_splatter2";
      pcVar4 = "blood_splatter3";
      pcVar4 = "blood_splatter4";
      pcVar4 = "connecting";
      pcVar4 = "demo_gototick 0 0 1\n";
      pcVar4 = "demo_pause\n";
      pcVar4 = "endmovie\n";
      pcVar4 = "false";
      pcVar4 = "fog_enable 1\n";
      pcVar4 = "fog_override 1\n";
      pcVar4 = "hostage_entity";
      pcVar4 = "ingame/winbanner_ct";
      pcVar4 = "ingame/winbanner_draw";
      pcVar4 = "ingame/winbanner_ter";
      pcVar4 = "minisave %s\n";
      pcVar4 = "point_viewcontrol_multiplayer";
      pcVar4 = "prop_dynamic";
      pcVar4 = "quit\n";
      pcVar4 = "spawning";
      pcVar4 = "steamid";
      pcVar4 = "vip_entity";
      pcVar4 = "voice_decompressed.wav";
      pcVar4 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar2,"cl_cmdrate");
      pcVar4 = (char *)FUN_1039db00(this_00,(uint *)"LobbyBG",(uint)&DAT_1043677a);
      pcVar4 = (char *)FUN_1039db00(this_00,(uint *)"brief_ct",(uint)&DAT_1043677a);
      pcVar4 = (char *)FUN_1039db00(this_00,(uint *)"brief_ter",(uint)&DAT_1043677a);
      pcVar4 = (char *)FUN_1039db00(this_00,(uint *)"description",(uint)&DAT_1043677a);
      pcVar4 = (char *)FUN_1039db00(this_00,(uint *)"display",(uint)&DAT_1043677a);
      pcVar4 = (char *)FUN_1042f3d0(*(void **)((int)this + -0x18),(uint *)"command",
      pcVar4 = (char *)FUN_1042f3d0(local_8,(uint *)"EnableCondition",(uint)&DAT_104eefb3);
      pcVar4 = (char *)FUN_1042f3d0(local_8,(uint *)"command",(uint)&DAT_104eefb3);
      pcVar4 = (char *)FUN_1042f3d0(local_8,(uint *)"menuhint",(uint)&DAT_104eefb3);
      pcVar4 = (char *)FUN_1042f3d0(local_8,(uint *)"menuhintdisabled",(uint)&DAT_104eefb3);
      pcVar4 = (char *)FUN_1042f3d0(local_8,(uint *)"menutitle",(uint)&DAT_104eefb3);
      pcVar4 = (char *)FUN_1042f3d0(this_00,(uint *)"easein",0);
      pcVar4 = (char *)FUN_1042f3d0(this_00,(uint *)"easeout",0);
      pcVar4 = (char *)FUN_1042f3d0(this_00,(uint *)"pageResource",(uint)&DAT_104eefb3);
      pcVar4 = (char *)FUN_1042f3d0(this_00,(uint *)"start",0);
      pcVar4 = FUN_1017c740((byte *)"fog_end %i\n");
      pcVar4 = FUN_1017c740((byte *)"fog_endskybox %i\n");
      pcVar4 = FUN_1017c740((byte *)"fog_start %i\n");
      pcVar4 = FUN_1017c740((byte *)"fog_startskybox %i\n");
      pcVar4 = FUN_1017c740((byte *)"r_farz %i\n");
      pcVar4 = FUN_102640a0(pcVar9,(int)"STEAM_");
      pcVar5 = "";
      pcVar5 = "#FreezePanel_ScreenShot";
      pcVar5 = "#L4D360UI_Enabled";
      pcVar5 = "#Valve_Reject_Background_Map";
      pcVar5 = "#Valve_Reject_Hidden_Game";
      pcVar5 = "#Valve_Reject_Single_Player";
      pcVar5 = "(MMX) ";
      pcVar5 = "(SSE) ";
      pcVar5 = "(SSE2) ";
      pcVar5 = "//mod/%s";
      pcVar5 = "Console";
      pcVar5 = "F";
      pcVar5 = "FCVAR_NEVER_AS_STRING";
      pcVar5 = "LocatorPanel";
      pcVar5 = "MMX ";
      pcVar5 = "NewCancel";
      pcVar5 = "NewComplete";
      pcVar5 = "No Jobs Restarted\n";
      pcVar5 = "None";
      pcVar5 = "PaintSplatBlue";
      pcVar5 = "PaintSplatGreen";
      pcVar5 = "PaintSplatPink";
      pcVar5 = "Resume";
      pcVar5 = "SSE ";
      pcVar5 = "SSE2 ";
      pcVar5 = "This server is using a newer protocol ( %i ) than your client ( %i ).\n";
      pcVar5 = "This server is using an older protocol ( %i ) than your client ( %i ).\n";
      pcVar5 = "Unknown";
      pcVar5 = "Windowed";
      pcVar5 = "[Cloud]: local file %s contains nothing to upload to cloud.\n";
      pcVar5 = "back_end";
      pcVar5 = "bothTeamsReady::%s\n";
      pcVar5 = "bucket1";
      pcVar5 = "callvote ChangeAllTalk;";
      pcVar5 = "callvote RestartMatch;";
      pcVar5 = "demo_gototick 0 0 1\n";
      pcVar5 = "demo_gototick 1 1 1\n";
      pcVar5 = "disconnect;";
      pcVar5 = "false";
      pcVar5 = "front_end";
      pcVar5 = "integer (%i) net (%i)\n";
      pcVar5 = "left_side";
      pcVar5 = "no usable entity found";
      pcVar5 = "prop_physics_multiplayer";
      pcVar5 = "quit\n";
      pcVar5 = "right_side";
      pcVar5 = "selection";
      pcVar5 = "string (%s)\n";
      pcVar5 = "unpause\n";
      pcVar5 = "url ";
      pcVar5 = "weapon_m320";
      pcVar5 = "weapon_mg4";
      pcVar5 = "weapon_rpg7";
      pcVar5 = (char *)FUN_102659b0(pcVar4,"maps/");
      pcVar5 = (char *)FUN_10268930(*(void **)((int)this + -0x44),(uint *)"command",
      pcVar5 = (char *)FUN_1039db00(*(void **)((int)this + -0x44),(uint *)"command",
      pcVar5 = (char *)FUN_1042f3d0(*(void **)((int)this + -0x44),(uint *)"command",
      pcVar5 = (char *)FUN_1042f3d0(local_8,(uint *)"aspect",(uint)"4 by 3");
      pcVar5 = (char *)FUN_1042f3d0(param_1,(uint *)"bitmap_enabled",(uint)&DAT_104eefb3);
      pcVar5 = (char *)FUN_1042f3d0(param_1,(uint *)"bitmap_focus",(uint)&DAT_104eefb3);
      pcVar5 = FUN_0042618f("VProject");
      pcVar5 = FUN_102f35e3("VProject");
      pcVar5 = FUN_1042c450(pcVar8,(int)"models");
      pcVar6 = " bytes";
      pcVar6 = "";
      pcVar6 = "#Atr_Acc";
      pcVar6 = "#Atr_PctPos";
      pcVar6 = "#FileOpenDialog_Directory_Name";
      pcVar6 = "#Valve_CardMustSupportCSM";
      pcVar6 = "#Valve_UnsupportedCard";
      pcVar6 = "%s overflowed reliable buffer\n";
      pcVar6 = "(DORMANT)";
      pcVar6 = "*.dem";
      pcVar6 = "Authentication disabled!!!\n";
      pcVar6 = "CAudioSource is NULL.";
      pcVar6 = "Defusing Bomb";
      pcVar6 = "EDIT_CONNECT.Added";
      pcVar6 = "FCVAR_NEVER_AS_STRING";
      pcVar6 = "GamePoints";
      pcVar6 = "Heli.Bell212_Rotor";
      pcVar6 = "No nearby buttons";
      pcVar6 = "Socket bind failed (%s)\n";
      pcVar6 = "Socket listen failed (%s)\n";
      pcVar6 = "UpdateSystemLevel: System configuration ignoring %s due to command line override\n";
      pcVar6 = "active";
      pcVar6 = "cable/cable.vmt";
      pcVar6 = "connected";
      pcVar6 = "dsp_player";
      pcVar6 = "effects/spark";
      pcVar6 = "empty";
      pcVar6 = "faceposermodel";
      pcVar6 = "hostage_entity";
      pcVar6 = "info_player_terrorist";
      pcVar6 = "ingame_lose";
      pcVar6 = "ingame_win";
      pcVar6 = "keyvalues2";
      pcVar6 = "local";
      pcVar6 = "mapname";
      pcVar6 = "media/StartupVids.txt";
      pcVar6 = "model";
      pcVar6 = "models/vehicles/helicopters/bell212/bell212.mdl";
      pcVar6 = "nomap";
      pcVar6 = "none";
      pcVar6 = "quit\n";
      pcVar6 = "simple_physics_brush";
      pcVar6 = "sp_%d%s.vhv";
      pcVar6 = "sp_hdr_%d%s.vhv";
      pcVar6 = "spawn_in_cars";
      pcVar6 = "theme";
      pcVar6 = "unknown model";
      pcVar6 = (char *)FUN_102659b0(pcVar5,"maps/");
      pcVar6 = (char *)FUN_1039db00(puVar3,(uint *)"EngineStart",(uint)puVar5);
      pcVar6 = (char *)FUN_1039db00(puVar3,(uint *)"EngineStop",(uint)puVar5);
      pcVar6 = (char *)FUN_1039db00(puVar3,(uint *)"Gear1_ThrottleOff",(uint)puVar5);
      pcVar6 = (char *)FUN_1039db00(puVar3,(uint *)"Gear1_ThrottleOff_Mid",(uint)puVar5);
      pcVar6 = (char *)FUN_1042f3d0(pvVar2,(uint *)"command",(uint)&DAT_104eefb3);
      pcVar6 = (char *)FUN_1042f3d0(pvVar2,(uint *)"subtitle",(uint)&DAT_104eefb3);
      pcVar6 = (char *)FUN_1042f3d0(pvVar2,(uint *)"title",(uint)&DAT_104eefb3);
      pcVar6 = (char *)FUN_1042f3d0(pvVar2,(uint *)"video",(uint)&DAT_104eefb3);
      pcVar6 = (char *)FUN_1042f3d0(pvVar3,(uint *)"angles",(uint)"0 0 0");
      pcVar6 = (char *)FUN_1042f3d0(pvVar3,(uint *)"attachment_point",(uint)&DAT_104eefb3);
      pcVar6 = FUN_101f6800((byte *)"ent_setang no entity %d\n");
      pcVar6 = FUN_101f6800((byte *)"ent_setpos no entity %d\n");
      pcVar7 = " != [%s] ";
      pcVar7 = " - \n";
      pcVar7 = " >= [%s] ";
      pcVar7 = " ALLREADY";
      pcVar7 = "!= [%s] ";
      pcVar7 = "";
      pcVar7 = "#L4D360UI_Disabled";
      pcVar7 = "#L4D360UI_Enabled";
      pcVar7 = "#Score_Other";
      pcVar7 = ") != 0\n";
      pcVar7 = "*** Encountered VTF non-square cubemap!\n";
      pcVar7 = "<<illegal>>";
      pcVar7 = "<null>";
      pcVar7 = "<unknown>";
      pcVar7 = ">= [%s] ";
      pcVar7 = "Dead end link: %s\n";
      pcVar7 = "Demo Files (*.dem)";
      pcVar7 = "DrpQueuedMode";
      pcVar7 = "ERROR: path_track (%s) refers to itself as a target!\n";
      pcVar7 = "FCVAR_NEVER_AS_STRING";
      pcVar7 = "MapZoomToLarge";
      pcVar7 = "MapZoomToSmall";
      pcVar7 = "Position: %0.3f, %0.3f, %0.3f\n";
      pcVar7 = "UNKNOWN";
      pcVar7 = "Video: %s doesn\'t exist.";
      pcVar7 = "Video: %s doesn\'t exist.\n";
      pcVar7 = "\n";
      pcVar7 = "celloffset: (%f, %f, %f)\n";
      pcVar7 = "command";
      pcVar7 = "exec config.cfg mod\n";
      pcVar7 = "exec config_default.cfg\n";
      pcVar7 = "items/default";
      pcVar7 = "items/hands/default";
      pcVar7 = "map_name";
      pcVar7 = "no usable entity found";
      pcVar7 = "server_pre_shutdown";
      pcVar7 = "true";
      pcVar7 = "userid";
      pcVar7 = "water";
      pcVar7 = "wchar_t";
      pcVar7 = (char *)FUN_1042f3d0(puVar3,(uint *)"LobbyBG",(uint)&DAT_104eefb3);
      pcVar7 = (char *)FUN_1042f3d0(puVar3,(uint *)"brief_ct",(uint)&DAT_104eefb3);
      pcVar7 = (char *)FUN_1042f3d0(puVar3,(uint *)"brief_ter",(uint)&DAT_104eefb3);
      pcVar7 = (char *)FUN_1042f3d0(puVar3,(uint *)"description",(uint)&DAT_104eefb3);
      pcVar7 = (char *)FUN_1042f3d0(puVar3,(uint *)"display",(uint)&DAT_104eefb3);
      pcVar7 = FUN_1003ef70(&local_328,(byte *)"Act Accuracy: %.1f");
      pcVar7 = FUN_1003ef70(&local_328,(byte *)"Cone %.1f, Bias %.2f");
      pcVar70 = "      pass %d: size is %d, grp uses are ";
      pcVar8 = "      %d work, %d block, ratio %5.2f\n";
      pcVar8 = "    too repetitive; using fallback sorting algorithm\n";
      pcVar8 = " CLIENTREADY";
      pcVar8 = "";
      pcVar8 = "#Achievement_Earned";
      pcVar8 = "#DeathMsg_Slayed";
      pcVar8 = "#DeathMsg_Suicide";
      pcVar8 = "#L4D360UI_AudioOptions_CaptionOff";
      pcVar8 = "#L4D360UI_ColorMode_LCD";
      pcVar8 = "#L4D360UI_ColorMode_Television";
      pcVar8 = "#L4D360UI_SplitScreenDirection_Default";
      pcVar8 = "#L4D360UI_SplitScreenDirection_Vertical";
      pcVar8 = "#TI_Score_Assist";
      pcVar8 = "#TI_Score_DogKill";
      pcVar8 = "#TI_Score_HoSave";
      pcVar8 = "#TI_Score_Kill";
      pcVar8 = "%.3f m_fEngineSpeed  ** BRAKING **";
      pcVar8 = "%s/%s";
      pcVar8 = "%s/bin/%s";
      pcVar8 = "//mod/%s.HL1";
      pcVar8 = "//mod/%s.HL2";
      pcVar8 = "747.Engine_Flameout";
      pcVar8 = "FCVAR_NEVER_AS_STRING";
      pcVar8 = "Friend; Muted";
      pcVar8 = "HALL Detected \n";
      pcVar8 = "Half-Life";
      pcVar8 = "LobbyInvite";
      pcVar8 = "Muted";
      pcVar8 = "alpha";
      pcVar8 = "backpack.dat";
      pcVar8 = "car-10";
      pcVar8 = "car-14";
      pcVar8 = "client created";
      pcVar8 = "keyframe_rope";
      pcVar8 = "left eye";
      pcVar8 = "media/lobby/menu_bg00.ogv";
      pcVar8 = "particle/snow";
      pcVar8 = "quit_gameconsole\n";
      pcVar8 = "steamid";
      pcVar8 = "true";
      pcVar8 = "volume";
      pcVar8 = (char *)FUN_102659b0(pcVar7,"maps/");
      pcVar9 = " LOADING";
      pcVar9 = "";
      pcVar9 = "#Chat_GM";
      pcVar9 = "#Game_PracticeRound";
      pcVar9 = "#Header_InRoom";
      pcVar9 = "#TI_RoundStatus";
      pcVar9 = "%s/%s";
      pcVar9 = "%s/bin/%s";
      pcVar9 = "<<illegal>>";
      pcVar9 = "CHudTICrosshair";
      pcVar9 = "Connection to server timed out.";
      pcVar9 = "DS:CreateSoundBuffer Failed";
      pcVar9 = "DS:GetCaps failed\n";
      pcVar9 = "FCVAR_NEVER_AS_STRING";
      pcVar9 = "Invalid authentication certificate length.\n";
      pcVar9 = "SNDDMA_InitDirect: DS: couldn\'t restore buffer\n";
      pcVar9 = "SNDDMA_InitDirect: DS::Lock Sound Buffer Failed\n";
      pcVar9 = "Server shutting down";
      pcVar9 = "Using secondary sound buffer\n";
      pcVar9 = "actor";
      pcVar9 = "cookies";
      pcVar9 = "endmovie\n";
      pcVar9 = "false";
      pcVar9 = "forklift-1";
      pcVar9 = "hltv_cameraman";
      pcVar9 = "hud/commands/cancel";
      pcVar9 = "hud/commands/stick";
      pcVar9 = "impact_fx_candyjelly";
      pcVar9 = "muzzle_flash_left";
      pcVar9 = "muzzle_flash_right";
      pcVar9 = "refuel_truck-1";
      pcVar9 = "true";
      pcVar9 = FUN_1018dc80(this_00,(uint *)"modelname",0);
      pcVar9 = FUN_1018dc80(this_00,(uint *)"modelname_hwm",0);
      piVar1 != (int *)0x0; piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar1,"game_player_equip"))
      piVar1 = (int *)(*(code *)local_c)("VPhysicsCollision007",0);
      piVar1 = (int *)(*(code *)param_1)("VPhysicsCollision007",0);
      piVar1 = (int *)(**(code **)(*DAT_106cb7f4 + 0x150))("skybox/ubersky","SkyBox textures",1,0);
      piVar1 = (int *)(**(code **)(*DAT_106cb7f4 + 0x150))(local_13c,"SkyBox textures",1,0);
      piVar1 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("vote_changed",0,0);
      piVar1 = (int *)(**(code **)(*piVar3 + 0x2c))("$bottommaterial",0,1);
      piVar1 = (int *)Error("Can\'t find background image %s\n",
      piVar1 = (int *)FUN_100d0740((byte *)"effects/combinemuzzle%d");
      piVar1 = (int *)FUN_100d0740((byte *)"effects/combinemuzzle%d_noz");
      piVar1 = (int *)FUN_100d0740((byte *)"effects/muzzleflash%d");
      piVar1 = (int *)FUN_100d0740((byte *)"effects/muzzleflash%d_noz");
      piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar1,"env_projectedtexture")) {
      piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar1,"point_camera")) {
      piVar1 = FUN_10200f10(local_34,"materials/vgui/title.vtf");
      piVar1 = FUN_102b2d60(this,(int)param_1,"IMECandidatesMenu",1);
      piVar1 = FUN_102dcae0(this,"4");
      piVar1 = FUN_102dcae0(this_00,"");
      piVar1 = FUN_103c9d10(this,(int)param_1,"IMECandidatesMenu",1);
      piVar1 = FUN_103f0bb0(this,"4");
      piVar1 = FUN_103f0bb0(this_00,"");
      piVar1 = FUN_10472550(this,(int)param_1,"IMECandidatesMenu",1);
      piVar1 = FUN_1048d0f0(this,"4");
      piVar1 = FUN_1048d0f0(this_00,"");
      piVar11 = (int *)(**(code **)((int)*local_20 + 0x2c))("$bloomexp",0,1);
      piVar11 = (int *)(**(code **)(*piVar3 + 0x2c))("$C0_X",0,1);
      piVar13 = FUN_10160750(pvVar7,0,"ProgressDialog","#Steam_SubmittingBug_WorkingTitle",
      piVar16[-3] = (int)"Perforce Error!";
      piVar19[-2] = (int)"Description required for submission.";
      piVar19[-3] = (int)"Submission Error!";
      piVar2 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("hltv_message",1,0);
      piVar2 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("hltv_message",1,0);
      piVar2 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))(local_36c,"Decal textures",0,0);
      piVar2 = (int *)(**(code **)(*piVar1 + 0xbc))("$frame",&DAT_1077ed54);
      piVar2 = (int *)FUN_00405740(param_1,uVar5,"VResourceAccessControl001");
      piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar2,"info_NPCSeat");
      piVar2 = FUN_100eed30(piVar2,"player",(float *)(param_1 + 0xc1),local_10)) {
      piVar2 = FUN_102dcae0(this_00,"");
      piVar2 = FUN_10308320(this_00,(int)this,"PanelListPanel2VScroll",
      piVar2 = FUN_103f0bb0(this_00,"");
      piVar2 = FUN_1048d0f0(this_00,"");
      piVar2 = FUN_104c714b(local_1c,&local_c,"",&local_14,0);
      piVar3 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_removeban",0,0);
      piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("flashbang_detonate",0,0);
      piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("hltv_rank_entity",0,0);
      piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("item_pickup",0,0);
      piVar3 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("item_closeby",0,0);
      piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_SmallFB0","RenderTargets",1,0);
      piVar3 = (int *)(**(code **)(*local_24 + 0x2c))("$bloomamount",0,1);
      piVar3 = (int *)(**(code **)(*param_1 + 0xbc))("$decalFadeTime",&DAT_10625884);
      piVar3 = (int *)(**(code **)(*param_1 + 400))("_rt_WaterRefraction",uVar4,uVar4,2,0,0,0xc,1);
      piVar3 = (int *)(**(code **)(*param_8 + 0xbc))("$skipRiggedModels",&DAT_105f8b40);
      piVar3 = (int *)(**(code **)(*piVar3 + 0x2c))("$bloomsaturation",0,1);
      piVar3 = (int *)(**(code **)(iVar2 + 400))("_rt_WaterReflection",uVar4,uVar4,2,uVar5);
      piVar3 = (int *)FUN_10135420("env_smoker",-1,'\x01');
      piVar3 = (int *)FUN_104235d0(*(void **)((int)param_1 * 4 + *piVar2),(uint *)"child");
      piVar3 = (int *)FUN_104d70b0(*(void **)((int)param_1 * 4 + *piVar2),(uint *)"child");
      piVar3 = FUN_102664a0(this,iVar4,&DAT_103236cf,0x200,"Custom user info value");
      piVar3 = FUN_1047c910(this_00,(int)this,"CPanelListPanelVScroll",'\x01',1);
      piVar4 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("hltv_message",1,0);
      piVar4 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("hltv_status",1,0);
      piVar4 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_spawn",0,0);
      piVar4 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("item_closeby",0,0);
      piVar4 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_Health","RenderTargets",1,0);
      piVar4 = (int *)(**(code **)(*local_24[3] + 0x2c))("$alpha",(int)&param_1 + 3,0);
      piVar4 = (int *)(**(code **)(*local_24[DAT_106b5268] + 0x2c))("$alpha",(int)&param_1 + 3,0);
      piVar4 = (int *)(**(code **)(*local_40 + 0x2c))("$depth_feather",&local_5,0);
      piVar4 = (int *)(**(code **)(*local_40 + 0x2c))("$depth_feather",(int)&param_2 + 3,0);
      piVar4 = (int *)(**(code **)(*local_40 + 0x2c))("$depth_feather",(int)&param_4 + 3,0);
      piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$alpha",0,1);
      piVar4 = (int *)(**(code **)(*piVar4 + 0x2c))("$saturation",0,1);
      piVar4 = (int *)(**(code **)(*piVar7 + 0xbc))("$hdrcolorscale",&DAT_10716080);
      piVar4 = (int *)(*pcVar3)("IBSPPACK003",0);
      piVar4 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"info_player_deathmatch");
      piVar4 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar4,"info_player_deathmatch");
      piVar4 = (int *)FUN_10268900(param_1,(uint *)"BuildGroupPtr",0);
      piVar4 = (int *)FUN_1039dad0(param_1,(uint *)"BuildGroupPtr",0);
      piVar4 = (int *)FUN_1042f3a0(param_1,(uint *)"BuildGroupPtr",0);
      piVar4 = (int *)FUN_10444d70(this,(byte *)"BtnEditButtons",0);
      piVar4 = FUN_10295010(pvVar3,0,"tooltip",1);
      piVar4 = FUN_10295010(pvVar5,iVar1,"Description",1);
      piVar4 = FUN_1029c040(pvVar2,(int)this,"OpenButton","#FileOpenDialog_Open",(int)this,
      piVar4 = FUN_1029c040(pvVar2,(int)this,"OpenButton","#FileOpenDialog_Save",(int)this,
      piVar4 = FUN_1029c040(pvVar3,(int)this,"CancelButton","#VGui_Cancel",0,(char *)0x0,1);
      piVar4 = FUN_102a99e0(pvVar2,(int)this,"FileTypeLabel","#FileOpenDialog_File_type",1);
      piVar4 = FUN_102de5a0(pvVar3,0,"hslider",0,1);
      piVar4 = FUN_102de5a0(pvVar3,0,"vslider",1,1);
      piVar4 = FUN_102e5900(pvVar3,(int)this,"Splitter",0,1,1);
      piVar4 = FUN_103da5b0(pvVar3,0,"tooltip",1);
      piVar4 = FUN_103f79e0(pvVar3,0,"hslider",0,1);
      piVar4 = FUN_103f79e0(pvVar3,0,"vslider",1,1);
      piVar4 = FUN_10454240(pvVar2,(int)this,"FileTypeLabel","#FileOpenDialog_File_type",1);
      piVar4 = FUN_104570e0(pvVar3,0,"tooltip",1);
      piVar4 = FUN_10462790(pvVar2,(int)this,"OpenButton","#FileOpenDialog_Open",(int)this,
      piVar4 = FUN_10462790(pvVar2,(int)this,"OpenButton","#FileOpenDialog_Save",(int)this,
      piVar4 = FUN_10462790(pvVar3,(int)this,"CancelButton","#VGui_Cancel",0,(char *)0x0,1);
      piVar4 = FUN_1049c7a0(pvVar3,0,"hslider",0,1);
      piVar4 = FUN_1049c7a0(pvVar3,0,"vslider",1,1);
      piVar4[6] = (int)"buffer error";
      piVar5 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("hltv_rank_camera",0,0);
      piVar5 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("vip_close_exit_car",0,0);
      piVar5 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_Flashbang","RenderTargets",1,0);
      piVar5 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))(local_768,"Decal textures",1,0);
      piVar5 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))(param_1,"Other textures",0,0);
      piVar5 = (int *)(**(code **)(*piVar3 + 0x2c))("$alpha",0,1);
      piVar5 = (int *)(**(code **)(*piVar6 + 0xbc))("$frame",&DAT_105f88d8);
      piVar5 = (int *)FUN_100d0740((byte *)"effects/muzzleflash%d");
      piVar5 = (int *)FUN_100d0740((byte *)"sprites/flamelet%d");
      piVar5 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar5,"hammer_updateignorelist");
      piVar5 = (int *)FUN_10444d70(piVar1,(byte *)"LocalPlayerHighlight",1);
      piVar5 = (int *)FUN_10444d70(piVar1,(byte *)"LocalXP_Desc",1);
      piVar5 = (int *)Warning("Constraint (%s) attached to two shadow objects (%s and %s)!!!\n",
      piVar5 = FUN_102b2d60(pvVar3,param_1,"NewControls",1);
      piVar5 = FUN_102c6890(pvVar4,"Cannot Apply",local_10c,0,1);
      piVar5 = FUN_103c9d10(pvVar3,param_1,"NewControls",1);
      piVar5 = FUN_103d05d0(pvVar4,"Cannot Apply",local_10c,0,1);
      piVar5 = FUN_10472550(pvVar3,param_1,"NewControls",1);
      piVar5 = FUN_10478ab0(pvVar4,"Cannot Apply",local_10c,0,1);
      piVar6 = (int *)(**(code **)(*DAT_106cb7f4 + 0x150))("debug/showz","Other textures",1,0);
      piVar6 = (int *)(**(code **)(*local_40 + 0x2c))("$depth_feather",(int)&param_2 + 3,0);
      piVar6 = (int *)(**(code **)(*piVar6 + 0xbc))("$AlphaTestReference",&DAT_105f88dc);
      piVar6 = (int *)FUN_10444d70(this,(byte *)"BtnSpecCustom",0);
      piVar6 = FUN_102c6890(pvVar5,"#vgui_CreateDirectoryFail_Title",
      piVar6 = FUN_10494810(pvVar5,(int)this,(int *)"#L4D360UI_Multiplayer_Cutsom_Logo",'\x01',0,1);
      piVar7 = (int *)(**(code **)(**ppiVar11 + 0xbc))("$spriteorientation",&DAT_1077ed50);
      piVar7 = (int *)(**(code **)(**ppiVar11 + 0xbc))("$spriteorigin",&DAT_1077ed4c);
      piVar7 = (int *)(**(code **)(*DAT_106cb7f4 + 0x170))(local_43c,"CubeMap textures",1,0);
      piVar7 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("show_freezepanel",0,0);
      piVar7 = (int *)(**(code **)(*piVar11 + 0xbc))("$basetexture",&DAT_105f88e0);
      piVar7 = (int *)FUN_10444d70(piVar5,(byte *)"LocalPlayerHighlight",1);
      piVar7 = (int *)FUN_10444d70(piVar5,(byte *)"LocalXP_Desc",1);
      piVar8 = (int *)(**(code **)(*piVar11 + 0xbc))("$frame",&DAT_105f88e4);
      piVar8 = (int *)FUN_10399410((char *)pbVar1,"round_start",iVar2);
      piVar9 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("item_use",0,0);
      piVar9 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_SmallFB1","RenderTargets",1,0);
      piVar9 = (int *)(**(code **)(*piVar11 + 0xbc))("$AlphaTestReference",&DAT_105f88e8);
      ppbVar4 = (byte **)FUN_101214f0((char **)&param_2,"CallScriptFunction");
      ppcVar5 = FUN_1010b690(local_10,"models/vehicles/cars/car-5_npc.mdl");
      ppcVar5 = FUN_1010b690(local_14,"models/vehicles/cars/car-7_npc.mdl");
      ppcVar5 = FUN_1010b690(local_18,"models/vehicles/cars/car-8_npc.mdl");
      ppcVar5 = FUN_1010b690(local_1c,"models/vehicles/cars/car-13_npc.mdl");
      ppcVar5 = FUN_1010b690(local_8,"models/vehicles/cars/car-2_npc.mdl");
      ppcVar5 = FUN_1010b690(local_c,"models/vehicles/cars/car-3_npc.mdl");
      ppvVar10 = (void **)FUN_10444d70(this,(byte *)"CurrentLoadoutPreview",1);
      ppvVar13 = (void **)FUN_10444d70(piVar5,(byte *)"CurrentLoadoutPreview",1);
      ppvVar2 = (void **)FUN_10135420("prop_rocket_crate",-1,'\x01');
      ppvVar2 = (void **)FUN_10444d70(this,(byte *)"LabelContainer",0);
      ppvVar2 = (void **)FUN_10444d70(this,(byte *)"UserAvatar",1);
      ppvVar3 = (void **)FUN_10444d70(param_1,(byte *)"InfoIcon",0);
      ppvVar4 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)ppvVar4,"func_navmesh_zone")) {
      ppvVar4 = (void **)FUN_1020d910(pvVar9,(int)this,"Audio",1);
      ppvVar5 = (void **)FUN_10268900(param_1,(uint *)"panel",0);
      ppvVar6 = (void **)FUN_10444d70(pvVar3,(byte *)"GameTypeLabel",1);
      ppvVar6 = (void **)FUN_10444d70(pvVar3,(byte *)"LocalReadyLabel",1);
      ppvVar6 = (void **)FUN_10444d70(pvVar3,(byte *)"LocalWaitingSquadSelectionLabel",1);
      ppvVar6 = (void **)FUN_10444d70(pvVar3,(byte *)"RoundLocalStatusLabel",1);
      ppvVar6 = (void **)FUN_10444d70(pvVar3,(byte *)"RoundStatusLabel",1);
      ppvVar6 = (void **)FUN_10444d70(pvVar3,(byte *)"SquadMatesList",1);
      ppvVar6 = (void **)FUN_10444d70(pvVar3,(byte *)"TeamNameLabel",1);
      ppvVar7 = (void **)(**(code **)(*this + 0x914))("weapon_m320",0,0,0);
      ppvVar7 = (void **)(**(code **)(*this + 0x914))("weapon_mg4",0,0,0);
      ppvVar7 = (void **)FUN_10135420("wheeled_controllable",-1,'\x01');
      psVar2 = (short *)(**(code **)(*DAT_107c09f0 + 0x2c))("#GameUI_Icons_XboxButton");
      puVar1 = (uint *)FUN_101f6800((byte *)"OnTriggerChance%d");
      puVar1 = FUN_004017b0(local_214,(byte *)"%s.lst");
      puVar1 = FUN_0041eb80(this,"SessionEnd");
      puVar1 = FUN_0041eb80(this,"SessionStart");
      puVar1 = FUN_10021180(local_1a4,(byte *)"Hostage_%d.Scared");
      puVar1 = FUN_100d0740((byte *)"%s%d:%02d:%02d:%02d");
      puVar1 = FUN_100d0740((byte *)"models/props_construction/gas_tank-1_p%d.mdl");
      puVar1 = FUN_100d0740((byte *)"models/props_construction/gas_tank-2_p%d.mdl");
      puVar1 = FUN_10267d30(this_00,"Command",(uint *)"Command","ToggleSelection");
      puVar1 = FUN_10267e50(this_00,"CheckButtonChecked",(uint *)"state",(uint)param_1);
      puVar1 = FUN_10267e50(this_00,"KeyCodeTyped",(uint *)&DAT_103c8ea4,param_1);
      puVar1 = FUN_10267e50(this_00,"SetSortColumn",(uint *)"column",param_1);
      puVar1 = FUN_10267f50(this,"DialogVariables");
      puVar1 = FUN_10267f50(this,"FileSelectionCancelled");
      puVar1 = FUN_10267f50(this_00,"ItemSelected");
      puVar1 = FUN_10268340(puVar1,(uint *)"track_data",0);
      puVar1 = FUN_1039d270(this_00,"CheckButtonChecked",(uint *)"state",(uint)param_1);
      puVar1 = FUN_1039d270(this_00,"KeyCodeTyped",(uint *)&DAT_105366dc,param_1);
      puVar1 = FUN_1039d270(this_00,"SetSortColumn",(uint *)"column",param_1);
      puVar1 = FUN_1039d370(this,"DialogVariables");
      puVar1 = FUN_1039d370(this_00,"ItemSelected");
      puVar1 = FUN_1042e930(this_00,"CheckButtonChecked",(uint *)"state",(uint)param_1);
      puVar1 = FUN_1042e930(this_00,"KeyCodeTyped",(uint *)&DAT_10539390,param_1);
      puVar1 = FUN_1042e930(this_00,"SetSortColumn",(uint *)"column",param_1);
      puVar1 = FUN_1042ea30(this,"DialogVariables");
      puVar1 = FUN_1042ea30(this,"FileSelectionCancelled");
      puVar1 = FUN_1042ea30(this,"OnSiblingHybridButtonOpened");
      puVar1 = FUN_1042ea30(this_00,"AvatarMousePressed");
      puVar1 = FUN_1042ea30(this_00,"Close");
      puVar1 = FUN_1042ea30(this_00,"ItemSelected");
      puVar10 = FUN_10021180(local_1d0,(byte *)"(%f, %f, %f)");
      puVar10 = FUN_100b10f0(local_15c,(byte *)"hitbox%d_explode_FX");
      puVar10 = FUN_100b10f0(local_15c,(byte *)"hitbox%d_explode_amount");
      puVar10 = FUN_100b10f0(local_15c,(byte *)"hitbox%d_explode_options");
      puVar10 = FUN_100b10f0(local_15c,(byte *)"hitbox%d_impact_amount");
      puVar10 = FUN_10267f50(pvVar7,"EnableSaveButton");
      puVar10 = FUN_1039d370(pvVar7,"EnableSaveButton");
      puVar10 = FUN_1042ea30(pvVar7,"EnableSaveButton");
      puVar2 = (undefined *)FUN_102659b0((char *)local_104,"\r");
      puVar2 = (undefined *)FUN_1042d9d0(local_204,".vmt");
      puVar2 = (undefined4 *)(**(code **)(*DAT_106cb7f4 + 0x150))(puVar6,"edited materials",0,0);
      puVar2 = FUN_10021180(local_124,(byte *)"rappel_offset%i");
      puVar2 = FUN_10021180(local_124,(byte *)"rappel_point%i");
      puVar2 = FUN_10021180(local_140,(byte *)"(%f, %f, %f)");
      puVar2 = FUN_10021180(local_23c,(byte *)"(%f, %f, %f)");
      puVar2 = FUN_10031640(local_1ec,(byte *)"hit%04d_brush%d_%dside");
      puVar2 = FUN_100b10f0(local_110,(byte *)"controls/%s/name");
      puVar2 = FUN_100b10f0(local_110,(byte *)"ent_fire %s fireuser1");
      puVar2 = FUN_100b10f0(local_110,(byte *)"ent_fire %s fireuser2");
      puVar2 = FUN_100b10f0(local_110,(byte *)"particles/%s.psf");
      puVar2 = FUN_100b10f0(local_110,(byte *)"stat_weapon_headshots_%s");
      puVar2 = FUN_100b10f0(local_12c,(byte *)"(%f, %f, %f)");
      puVar2 = FUN_100b10f0(local_21c,(byte *)"stat_weapon_kills_%s");
      puVar2 = FUN_100b10f0(local_328,(byte *)"stat_weapon_shotsfired_%s");
      puVar2 = FUN_100b10f0(local_434,(byte *)"stat_weapon_hits_%s");
      puVar2 = FUN_1010c650(this,"Tracer",&local_20,&local_2c,(float)fVar3,uVar5,pcVar6,uVar7);
      puVar2 = FUN_1017c740((byte *)"vprof/vprof%d.txt");
      puVar2 = FUN_10267d30(this,"Client::ResendGameDetailsRequest",(uint *)&DAT_103300c4,pcVar1);
      puVar2 = FUN_10267d30(this,"Command",(uint *)"Command","UpdateList");
      puVar2 = FUN_10267d30(this_00,"URLClicked",(uint *)&DAT_103daabc,local_804);
      puVar2 = FUN_10267e50(this,"ResizeColumnToContents",(uint *)"column",param_1[0x69]);
      puVar2 = FUN_10267e50(this_00,"Expanded",(uint *)"state",(uint)param_1);
      puVar2 = FUN_10267e50(this_00,"SetState",(uint *)"state",param_2);
      puVar2 = FUN_10267ed0(this_00,"SetText",(uint *)&DAT_10353100,param_2);
      puVar2 = FUN_10267f50(this,"ControlModified");
      puVar2 = FUN_10267f50(this,"FindDefaultButton");
      puVar2 = FUN_10267f50(this,"ItemDeselected");
      puVar2 = FUN_102a99e0(pvVar1,param_1[0x1b],(char *)0x0,"",1);
      puVar2 = FUN_1039d150(this_00,"URLClicked",(uint *)&DAT_10540288,local_804);
      puVar2 = FUN_1039d270(this,"ResizeColumnToContents",(uint *)"column",param_1[0x69]);
      puVar2 = FUN_1039d270(this_00,"Expanded",(uint *)"state",(uint)param_1);
      puVar2 = FUN_1039d270(this_00,"SetState",(uint *)"state",param_2);
      puVar2 = FUN_1039d2f0(this_00,"SetText",(uint *)&DAT_10464104,param_2);
      puVar2 = FUN_1039d370(pvVar1,"MapCameras");
      puVar2 = FUN_1039d370(this,"ControlModified");
      puVar2 = FUN_1039d370(this,"ItemDeselected");
      puVar2 = FUN_103a8fb0(pvVar1,param_1[0x1b],(char *)0x0,"",1);
      puVar2 = FUN_1042e810(this_00,"CommandSubmitted",(uint *)"command",(char *)local_104);
      puVar2 = FUN_1042e810(this_00,"URLClicked",(uint *)&DAT_1055be0c,local_804);
      puVar2 = FUN_1042e930(this,"ResizeColumnToContents",(uint *)"column",param_1[0x69]);
      puVar2 = FUN_1042e930(this_00,"Expanded",(uint *)"state",(uint)param_1);
      puVar2 = FUN_1042e930(this_00,"PollHideCode",(uint *)&DAT_10539390,(uint)param_1);
      puVar2 = FUN_1042e930(this_00,"SetState",(uint *)"state",param_2);
      puVar2 = FUN_1042e9b0(this_00,"SetText",(uint *)&DAT_10524ef8,param_2);
      puVar2 = FUN_1042ea30(pvVar1,"ClientMenu");
      puVar2 = FUN_1042ea30(pvVar1,"FULLSCREENQUAD_WRITEA");
      puVar2 = FUN_1042ea30(pvVar1,"VertexLitGeneric");
      puVar2 = FUN_1042ea30(pvVar1,"fill_viewmask");
      puVar2 = FUN_1042ea30(this,"CloseCompletionList");
      puVar2 = FUN_1042ea30(this,"ControlModified");
      puVar2 = FUN_1042ea30(this,"FindDefaultButton");
      puVar2 = FUN_1042ea30(this,"ItemDeselected");
      puVar2 = FUN_1042ea30(this,"PanelUnSelected");
      puVar2 = FUN_1042ea30(this,"entity_state");
      puVar2 = FUN_1042ee30(pvVar3,(uint *)"ControlPoints",0);
      puVar2 = FUN_10454240(pvVar1,param_1[0x1b],(char *)0x0,"",1);
      puVar3 = (uint *)FUN_1017c740((byte *)"Arg%d");
      puVar3 = (uint *)FUN_101a5c10((byte *)"Disconnected");
      puVar3 = (undefined *)FUN_103991e0((char *)local_208,"_npc.mdl");
      puVar3 = (undefined2 *)_strncpy((char *)_Dest,"unknown_module",sVar8);
      puVar3 = (ushort *)FUN_10434510(&DAT_1071bd30,(short *)&local_8,(undefined4 *)"Timed out.");
      puVar3 = FUN_10021180(local_130,(byte *)"(%f, %f, %f)");
      puVar3 = FUN_10021180(local_24c,(byte *)"(%f, %f, %f)");
      puVar3 = FUN_10021180(puVar11,(byte *)"(%.0f %.0f %.0f)");
      puVar3 = FUN_10031640(puVar5,(byte *)"%s overflowed reliable buffer\n");
      puVar3 = FUN_100b10f0(local_110,(byte *)"Btn%d");
      puVar3 = FUN_100b10f0(local_124,(byte *)"#GameUI_Icons_XboxButton%d");
      puVar3 = FUN_100b10f0(local_238,(byte *)"(%f, %f, %f)");
      puVar3 = FUN_100d0740((byte *)"%.1f %.1f %.1f");
      puVar3 = FUN_100d0740((byte *)"models/player/gibbed/_limbs/arm-%d.mdl");
      puVar3 = FUN_100d0740((byte *)"models/player/gibbed/_limbs/leg-%d.mdl");
      puVar3 = FUN_10190860(pvVar2,0,"BitmapButton","",1);
      puVar3 = FUN_10191380(pvVar2,0,"BitmapPanel",1);
      puVar3 = FUN_101f6800((byte *)"\n\nPLAN TIME (SQUAD) IS: %f\n");
      puVar3 = FUN_102264e0(pvVar9,(int)this,"MainMenu",1);
      puVar3 = FUN_10267d30(this_00,"CreateDirectory",(uint *)&DAT_10358498,pcVar2);
      puVar3 = FUN_10267e50(pvVar2,"LaunchOperation",(uint *)&DAT_10347208,uVar4);
      puVar3 = FUN_10267e50(this_00,"MenuItemHighlight",(uint *)"itemID",param_1);
      puVar3 = FUN_10267f50(pvVar1,"DoCopySelected");
      puVar3 = FUN_10267f50(pvVar1,"DoCutSelected");
      puVar3 = FUN_10267f50(pvVar1,"DoPaste");
      puVar3 = FUN_10267f50(this,"FindDefaultButton");
      puVar3 = FUN_10267f50(this_00,"Hotkey");
      puVar3 = FUN_102a4ef0(pvVar2,param_1,(int *)"Choose .dem file",'\x01',0,1);
      puVar3 = FUN_102c0420(pvVar2,param_1,"Choose .vmf folder",1);
      puVar3 = FUN_10357140(this,"blooddrops");
      puVar3 = FUN_1039d270(this_00,"MenuItemHighlight",(uint *)"itemID",param_1);
      puVar3 = FUN_1039d370(pvVar1,"DoCopySelected");
      puVar3 = FUN_1039d370(pvVar1,"DoCutSelected");
      puVar3 = FUN_1039d370(pvVar1,"DoPaste");
      puVar3 = FUN_1039d370(pvVar2,"manifest");
      puVar3 = FUN_1039d370(this,"FindDefaultButton");
      puVar3 = FUN_1039d370(this_00,"Hotkey");
      puVar3 = FUN_1042e810(pvVar2,"OnItemSelected",(uint *)"panelName",pcVar7);
      puVar3 = FUN_1042e810(this_00,"Command",(uint *)"command","submit");
      puVar3 = FUN_1042e810(this_00,"Command",(uint *)"command",pcVar2);
      puVar3 = FUN_1042e930(this_00,"MenuItemHighlight",(uint *)"itemID",param_1);
      puVar3 = FUN_1042ea30(pvVar1,"DoCopySelected");
      puVar3 = FUN_1042ea30(pvVar1,"DoCutSelected");
      puVar3 = FUN_1042ea30(pvVar1,"DoPaste");
      puVar3 = FUN_1042ea30(pvVar1,"Proxies");
      puVar3 = FUN_1042ea30(pvVar2,"ButtonToggled");
      puVar3 = FUN_1042ea30(pvVar2,"DisconnectedFromGame");
      puVar3 = FUN_1042ea30(pvVar2,"GameUIHidden");
      puVar3 = FUN_1042ea30(pvVar2,"HideAsLoadingPanel");
      puVar3 = FUN_1042ea30(pvVar2,"PanelSelected");
      puVar3 = FUN_1042ea30(pvVar2,"manifest");
      puVar3 = FUN_1042ea30(pvVar2,"playtime");
      puVar3 = FUN_1042ea30(this,"FindDefaultButton");
      puVar3 = FUN_1042ea30(this_00,"Hotkey");
      puVar3 = FUN_1042ea30(this_00,"PanelSelected");
      puVar3 = FUN_1042ee30(puVar3,(uint *)"$selfillum",0);
      puVar4 = (uint *)FUN_1014fb90(pvVar1,(int *)"effects/bubble");
      puVar4 = (uint *)FUN_1014fb90(pvVar1,(int *)"effects/splash2");
      puVar4 = (undefined *)FUN_103991e0((char *)auStack260,"_npc.mdl");
      puVar4 = (undefined *)FUN_103991e0((char *)local_104,"_npc.mdl");
      puVar4 = (undefined4 *)(**(code **)(*piVar6 + 0xbc))("$basetexture",&DAT_105f88d4);
      puVar4 = FUN_10021180(local_110,(byte *)"banid %d %d;");
      puVar4 = FUN_10021180(local_348,(byte *)"(%f, %f, %f)");
      puVar4 = FUN_10031640(local_130,(byte *)"tools/%s.dll");
      puVar4 = FUN_100b10f0(local_128,(byte *)"Rank_%i");
      puVar4 = FUN_100b10f0(local_128,(byte *)"rank_images/%i");
      puVar4 = FUN_100b10f0(local_1a0,(byte *)"%d:%02d");
      puVar4 = FUN_100b10f0(local_21c,(byte *)"Btn%d");
      puVar4 = FUN_100b10f0(local_234,(byte *)"SpcRank_%i");
      puVar4 = FUN_100b10f0(local_234,(byte *)"rank_images/%i");
      puVar4 = FUN_100b10f0(local_344,(byte *)"(%f, %f, %f)");
      puVar4 = FUN_100d0740((byte *)"vgui/%s");
      puVar4 = FUN_101ebd60(pvVar3,(int)this,"BotPage",*(void **)((int)this + 0x29c),1);
      puVar4 = FUN_101f6800((byte *)"%s/%s");
      puVar4 = FUN_101f6800((byte *)"bothTeamsReady::%s\n");
      puVar4 = FUN_10212cf0(uVar5,"occluder poly data",'\x01');
      puVar4 = FUN_10212cf0(uVar5,"occluder vertices",'\x01');
      puVar4 = FUN_10267d30(pvVar3,"Command",(uint *)"Command","DisableColorCorrection");
      puVar4 = FUN_10267d30(pvVar3,"SetText",(uint *)&DAT_10353100,param_2);
      puVar4 = FUN_10267d30(this,"OnEngineLevelLoadingStarted",(uint *)&DAT_1032e50c,param_1);
      puVar4 = FUN_10267d30(this_00,"Command",(uint *)"Command",pcVar5);
      puVar4 = FUN_10267db0(this_01,"TreeViewItemSelected",(uint *)"itemIndex",uVar2,
      puVar4 = FUN_10267e50(pvVar3,"KeyCodeTyped",(uint *)&DAT_103c8ea4,param_1);
      puVar4 = FUN_10267e50(this_00,"KeyCodePressed",(uint *)&DAT_103c8ea4,param_1);
      puVar4 = FUN_10267ed0(pvVar3,"SetText",(uint *)&DAT_10353100,ppuVar2);
      puVar4 = FUN_10267f50(pvVar3,"DoItemSelect");
      puVar4 = FUN_10267f50(this,"FlashWindow");
      puVar4 = FUN_10267f50(this_00,"Hotkey");
      puVar4 = FUN_10267f50(this_00,"ItemDeselected");
      puVar4 = FUN_10267f50(this_00,"tabkv");
      puVar4 = FUN_10268340(this_00,(uint *)"Fonts",1);
      puVar4 = FUN_102c0420(pvVar3,(int)param_1,"Choose .vmf folder",1);
      puVar4 = FUN_1039d150(pvVar3,"SetText",(uint *)&DAT_10464104,param_2);
      puVar4 = FUN_1039d1d0(this_01,"TreeViewItemSelected",(uint *)"itemIndex",uVar2,
      puVar4 = FUN_1039d270(pvVar3,"KeyCodeTyped",(uint *)&DAT_105366dc,param_1);
      puVar4 = FUN_1039d270(this_00,"KeyCodePressed",(uint *)&DAT_105366dc,param_1);
      puVar4 = FUN_1039d2f0(pvVar3,"SetText",(uint *)&DAT_10464104,psVar2);
      puVar4 = FUN_1039d370(pvVar3,"DoItemSelect");
      puVar4 = FUN_1039d370(this,"FlashWindow");
      puVar4 = FUN_1039d370(this_00,"Hotkey");
      puVar4 = FUN_1039d370(this_00,"ItemDeselected");
      puVar4 = FUN_1042e810(pvVar3,"SetText",(uint *)&DAT_10524ef8,param_2);
      puVar4 = FUN_1042e890(this_01,"TreeViewItemSelected",(uint *)"itemIndex",uVar2,
      puVar4 = FUN_1042e930(pvVar3,"KeyCodeTyped",(uint *)&DAT_10539390,param_1);
      puVar4 = FUN_1042e930(this_00,"KeyCodePressed",(uint *)&DAT_10539390,param_1);
      puVar4 = FUN_1042e930(this_01,"ItemSelected",(uint *)"itemID",uVar3);
      puVar4 = FUN_1042e9b0(pvVar3,"SetText",(uint *)&DAT_10524ef8,psVar2);
      puVar4 = FUN_1042ea30(pvVar3,"Center");
      puVar4 = FUN_1042ea30(pvVar3,"ClientMenu");
      puVar4 = FUN_1042ea30(pvVar3,"DoItemSelect");
      puVar4 = FUN_1042ea30(pvVar3,"PanelSelected");
      puVar4 = FUN_1042ea30(this,"FlashWindow");
      puVar4 = FUN_1042ea30(this_00,"Hotkey");
      puVar4 = FUN_1042ea30(this_00,"ItemDeselected");
      puVar4 = FUN_1042ea30(this_00,"tabkv");
      puVar4 = FUN_1042ee30(local_c,(uint *)"DmeSpriteEmitter",1);
      puVar4 = FUN_1042ee30(puVar4,(uint *)"DmeSmokeGrenadeUpdater",1);
      puVar4 = FUN_1042ee30(puVar4,(uint *)"updaters",1);
      puVar5 = (undefined *)FUN_103991e0((char *)local_11c,"_npc.mdl");
      puVar5 = FUN_10021180(&local_258,(byte *)"[%iH]");
      puVar5 = FUN_10021180(auStack784,(byte *)"%s_destroyed.mdl");
      puVar5 = FUN_10021180(local_1d8,(byte *)"scripts/vehicles/%s.txt");
      puVar5 = FUN_10021180(local_310,(byte *)"%s_destroyed.mdl");
      puVar5 = FUN_100b10f0(local_110,(byte *)"Addon%i");
      puVar5 = FUN_100b10f0(local_128,(byte *)"(%f, %f, %f)");
      puVar5 = FUN_100b10f0(local_220,(byte *)"%s - Room %s %s");
      puVar5 = FUN_100b10f0(local_220,(byte *)"-jlobby %i -jroom %i\n");
      puVar5 = FUN_100b10f0(local_224,(byte *)"FlmChapterXXautogenerated_%d/%s");
      puVar5 = FUN_100d0740((byte *)"sound/%s");
      puVar5 = FUN_1017c740((byte *)"%s/sound");
      puVar5 = FUN_10267e50(this_00,"KeyCodeReleased",(uint *)&DAT_103c8ea4,param_1);
      puVar5 = FUN_10267e50(this_00,"KeyTyped",(uint *)"unichar",param_1);
      puVar5 = FUN_10267f50(pvVar2,"OnOpen");
      puVar5 = FUN_10267f50(pvVar2,"SelectFolder");
      puVar5 = FUN_10267f50(pvVar4,"MenuItemSelected");
      puVar5 = FUN_10267f50(pvVar4,"UnlitGeneric");
      puVar5 = FUN_10267f50(pvVar4,"unlitgeneric");
      puVar5 = FUN_10267f50(pvVar4,"wireframe");
      puVar5 = FUN_10267f50(this_00,"MenuClose");
      puVar5 = FUN_10268540(local_10,&local_c,(uint *)"cellcolor",&param_2);
      puVar5 = FUN_10317910(pvVar3,(int)this,"TabContainer",1);
      puVar5 = FUN_10357140(this,"MuzzleFlash_Shotgun_NPC");
      puVar5 = FUN_1039d270(this_00,"KeyCodeReleased",(uint *)&DAT_105366dc,param_1);
      puVar5 = FUN_1039d270(this_00,"KeyTyped",(uint *)"unichar",param_1);
      puVar5 = FUN_1039d370(pvVar4,"MenuItemSelected");
      puVar5 = FUN_1039d370(this_00,"MenuClose");
      puVar5 = FUN_1039d560(this_00,(uint *)"gamemodes",0);
      puVar5 = FUN_1039d560(this_00,(uint *)"global",0);
      puVar5 = FUN_1039d560(this_00,(uint *)"holidays",0);
      puVar5 = FUN_1039d790(local_10,&local_c,(uint *)"cellcolor",&param_2);
      puVar5 = FUN_1042e930(pvVar4,"Settings",(uint *)&DAT_10558f0c,*(uint *)((int)this + 0x870));
      puVar5 = FUN_1042e930(this_00,"KeyCodeReleased",(uint *)&DAT_10539390,param_1);
      puVar5 = FUN_1042e930(this_00,"KeyTyped",(uint *)"unichar",param_1);
      puVar5 = FUN_1042ea30(pvVar2,"OnOpen");
      puVar5 = FUN_1042ea30(pvVar2,"SelectFolder");
      puVar5 = FUN_1042ea30(pvVar4,"MenuItemSelected");
      puVar5 = FUN_1042ea30(pvVar4,"unlitgeneric");
      puVar5 = FUN_1042ea30(pvVar4,"wireframe");
      puVar5 = FUN_1042ea30(this,"MarqueeFinished");
      puVar5 = FUN_1042ea30(this_00,"MenuClose");
      puVar5 = FUN_1042ee30(puVar4,(uint *)"DmeAlphaCosineUpdater",1);
      puVar5 = FUN_1042ee30(puVar4,(uint *)"initializers",1);
      puVar5 = FUN_1042f060(local_10,&local_c,(uint *)"cellcolor",&param_2);
      puVar5 = FUN_10454240(pvVar4,(int)this,"LblMessage",param_1[1],1);
      puVar5 = FUN_104545d0(pvVar4,(int)this,"LblMessage",(ushort *)param_1[2],1);
      puVar6 = (uint *)(**(code **)(*piVar2 + 0x28))("master",&DAT_103236cf,0);
      puVar6 = FUN_0041ee00(this_00,"Error",0);
      puVar6 = FUN_10021180(&local_248,(byte *)"*** %s hit you for %f damage\n");
      puVar6 = FUN_10021180(&local_248,(byte *)"*** You hit %s for %f damage\n");
      puVar6 = FUN_100b10f0(local_150,(byte *)"bind \"%s\" \"%s\"\n");
      puVar6 = FUN_100b10f0(local_150,(byte *)"unbind \"%s\"\n");
      puVar6 = FUN_100b10f0(local_1a0,(byte *)"Label_Tier%i_Mission");
      puVar6 = FUN_100b10f0(puVar10,(byte *)"(%f, %f, %f)");
      puVar6 = FUN_100d0740((byte *)"Count: %i");
      puVar6 = FUN_102435f0((uint *)"DmeElement");
      puVar6 = FUN_10267d30(pvVar3,"CreateNewControl",(uint *)&DAT_10353100,"None");
      puVar6 = FUN_10267f50(pvVar3,"NewFolder");
      puVar6 = FUN_10267f50(pvVar4,"MenuClose");
      puVar6 = FUN_10267f50(pvVar5,"CancelOverwriteFile");
      puVar6 = FUN_10267f50(pvVar5,"OverwriteFile");
      puVar6 = FUN_10267f50(this,"MenuClose");
      puVar6 = FUN_10268340(puVar3,(uint *)"ConnectServerDetailsRequest",0);
      puVar6 = FUN_102e0ab0(pvVar4,(int)this,"Context","9",1);
      puVar6 = FUN_1039d150(pvVar3,"CreateNewControl",(uint *)&DAT_10464104,"None");
      puVar6 = FUN_1039d370(pvVar4,"MenuClose");
      puVar6 = FUN_1039d370(this,"MenuClose");
      puVar6 = FUN_1042e810(pvVar3,"CreateNewControl",(uint *)&DAT_10524ef8,"None");
      puVar6 = FUN_1042e930(pvVar4,"ScrollButtonPressed",(uint *)"index",0);
      puVar6 = FUN_1042e930(pvVar4,"ScrollButtonPressed",(uint *)"index",1);
      puVar6 = FUN_1042e930(pvVar5,"Settings",(uint *)&DAT_10558f0c,uVar3);
      puVar6 = FUN_1042e930(pvVar8,"GM_Kick",(uint *)"userid",*(uint *)((int)this + 0x200));
      puVar6 = FUN_1042e930(pvVar8,"GM_Mute",(uint *)"userid",*(uint *)((int)this + 0x200));
      puVar6 = FUN_1042e930(pvVar8,"GM_Slap",(uint *)"userid",*(uint *)((int)this + 0x200));
      puVar6 = FUN_1042e930(pvVar8,"GM_Slay",(uint *)"userid",*(uint *)((int)this + 0x200));
      puVar6 = FUN_1042e930(pvVar8,"GM_Strip",(uint *)"userid",*(uint *)((int)this + 0x200));
      puVar6 = FUN_1042ea30(pvVar3,"NewFolder");
      puVar6 = FUN_1042ea30(pvVar4,"MenuClose");
      puVar6 = FUN_1042ea30(this,"MenuClose");
      puVar6 = FUN_1042ee30(puVar5,(uint *)"DmeAttachmentVelocityInitializer",1);
      puVar6 = FUN_1042ee30(puVar5,(uint *)"DmeRandomAlphaInitializer",1);
      puVar6 = FUN_1042ee30(puVar5,(uint *)"DmeRandomInterpolatedColorInitializer",1);
      puVar6 = FUN_1042ee30(puVar5,(uint *)"DmeRandomLifetimeInitializer",1);
      puVar6 = FUN_1042ee30(puVar5,(uint *)"DmeRandomRollInitializer",1);
      puVar6 = FUN_1042ee30(puVar5,(uint *)"DmeRandomRollSpeedInitializer",1);
      puVar6 = FUN_1042ee30(puVar5,(uint *)"DmeRandomSizeInitializer",1);
      puVar6 = FUN_1042ee30(puVar5,(uint *)"DmeVoxelPositionInitializer",1);
      puVar6 = FUN_1049d4b0(pvVar4,(int)this,"Context","9",1);
      puVar7 = (uint *)FUN_1014fb90(this_00,(int *)"effects/yellowflare_noz");
      puVar7 = FUN_1017c740((byte *)"%s%04d.jpg");
      puVar7 = FUN_1017c740((byte *)"%s%04d.tga");
      puVar7 = FUN_10267d30(this_00,"command",(uint *)"command","BlendFactorUpdate");
      puVar7 = FUN_10267e50(pvVar5,puVar6,(uint *)"operationPerformed",0);
      puVar7 = FUN_10267e50(pvVar5,puVar6,(uint *)"operationPerformed",1);
      puVar7 = FUN_10267f50(pvVar6,"descriptor");
      puVar7 = FUN_1042e930(pvVar6,"KeyCodePressed",(uint *)&DAT_10539390,(uint)param_1);
      puVar7 = FUN_1042ea30(pvVar6,"Close");
      puVar8 = FUN_10021180(local_148,(byte *)"(%f, %f, %f)");
      puVar8 = FUN_10021180(local_234,(byte *)"%s: %s");
      puVar8 = FUN_100b10f0(local_224,(byte *)"%i(%i)");
      puVar8 = FUN_10243420(puVar6,(uint *)"color");
      puVar8 = FUN_10243420(puVar6,(uint *)"maxDistance");
      puVar8 = FUN_10267f50(pvVar7,"CloseFrameButtonPressed");
      puVar8 = FUN_10267f50(pvVar7,"DeletePanel");
      puVar8 = FUN_1039d370(pvVar7,"CloseFrameButtonPressed");
      puVar8 = FUN_1039d370(pvVar7,"DeletePanel");
      puVar8 = FUN_1042ea30(pvVar7,"CloseFrameButtonPressed");
      puVar8 = FUN_1042ea30(pvVar7,"DeletePanel");
      puVar8 = FUN_1042ee30(puVar3,(uint *)"gamemodes",0);
      puVar8 = FUN_1042ee30(puVar3,(uint *)"global",0);
      puVar8 = FUN_1042ee30(puVar3,(uint *)"holidays",0);
      puVar9 = FUN_10021180(local_124,(byte *)"models/vehicles/cars/%s.mdl");
      puVar9 = FUN_10021180(local_124,(byte *)"scripts/vehicles/%s.txt");
      puVar9 = FUN_10021180(local_1d0,(byte *)"(%f, %f, %f)");
      puVar9 = FUN_10021180(local_2dc,(byte *)"(%f, %f, %f)");
      puVar9 = FUN_100b10f0(local_13c,(byte *)"lo_pt1 %d %d %d %d %d %d %d %d %d %d %d %d %d %d\n");
      puVar9 = FUN_100b10f0(local_13c,(byte *)"lo_pt2 %d %d %d %d %d %d\n");
      pvVar3 = (void *)Warning("Too many dirty renderables!\n");
      pvVar4 = (void *)FUN_1042df20(pbVar14,(byte *)"QuitGame");
      pvVar5 = (void *)FUN_10314ac0(DAT_10693b08,'\x01',(uint *)"lightbartype",'\0');
      pwVar1 = (wchar_t *)(**(code **)(*DAT_106cb7e0 + 0x2c))("#GameUI_Console_SaveGames");
      pwVar1 = L"SAVES";
      return "";
      return "#RC_Mode_Mission";
      return "#TI_GT_BOMBING";
      return "#TI_GT_CASERETRIEVAL";
      return "#TI_GT_FFA";
      return "#TI_GT_HOSTAGEGRAB";
      return "#TI_GT_HOSTAGERESCUE";
      return "#TI_GT_PLANEBOMBING";
      return "#TI_GT_VIPCARESCORT";
      return "#TI_GT_VIPESCAPE";
      return "10.0 Shader Model 4.0";
      return "9.0 Shader Model 2.0b";
      return "9.0 Shader Model 3.0";
      return "Breakable.Computer";
      return "Breakable.MatConcrete";
      return "Breakable.MatFlesh";
      return "Breakable.MatGlass";
      return "Breakable.MatMetal";
      return "Breakable.MatWood";
      return "Chat_Spec";
      return "WSAEACCES";
      return "WSAEADDRINUSE";
      return "WSAEADDRNOTAVAIL";
      return "WSAEAFNOSUPPORT";
      return "WSAEALREADY";
      return "WSAEBADF";
      return "WSAECONNREFUSED";
      return "WSAECONNRESET";
      return "WSAEDESTADDRREQ";
      return "WSAEDISCON";
      return "WSAEFAULT";
      return "WSAEHOSTDOWN";
      return "WSAEINPROGRESS";
      return "WSAEINTR";
      return "WSAEINVAL";
      return "WSAEISCONN";
      return "WSAELOOP";
      return "WSAEMFILE";
      return "WSAEMSGSIZE";
      return "WSAENAMETOOLONG";
      return "WSAENETDOWN";
      return "WSAENETRESET";
      return "WSAENETUNREACH";
      return "WSAENOBUFS";
      return "WSAENOPROTOOPT";
      return "WSAENOTCONN";
      return "WSAENOTSOCK";
      return "WSAEOPNOTSUPP";
      return "WSAEPFNOSUPPORT";
      return "WSAEPROTONOSUPPORT";
      return "WSAEPROTOTYPE";
      return "WSAESHUTDOWN";
      return "WSAESOCKTNOSUPPORT";
      return "WSAETIMEDOUT";
      return "WSAETOOMANYREFS";
      return "WSAEWOULDBLOCK";
      return "WSAHOST_NOT_FOUND";
      return "WSANOTINITIALISED";
      return "WSANO_DATA";
      return "WSANO_RECOVERY";
      return "WSASYSNOTREADY";
      return "WSATRY_AGAIN";
      return "WSAVERNOTSUPPORTED";
      return "WSWSAECONNABORTEDAEINTR";
      return "XBox 360";
      return "accessviolation";
      return "arrayboundsexceeded";
      return "aug";
      return "boolean";
      return "breakpoint";
      return "character";
      return "cstring";
      return "datatypemisalignment";
      return "dsa58";
      return "float";
      return "fltdenormaloperand";
      return "fltdividebyzero";
      return "fltinexactresult";
      return "fltinvalidoperation";
      return "fltoverflow";
      return "fltstackcheck";
      return "fltunderflow";
      return "fp6";
      return "gamemode - 6.0";
      return "gamemode - 7.0";
      return "gamemode - 8.0";
      return "gamemode - 8.1";
      return "hscript";
      return "intdividebyzero";
      return "integer";
      return "intoverflow";
      return "items/weapons/addons/rifle/acog";
      return "items/weapons/addons/rifle/compensator";
      return "items/weapons/addons/rifle/flashlight";
      return "items/weapons/addons/rifle/holosight";
      return "items/weapons/addons/rifle/reddot";
      return "items/weapons/addons/rifle/silencer";
      return "knife";
      return "m14";
      return "mp5";
      return "mp7";
      return "noncontinuableexception";
      return "none";
      return "p90";
      return "pistol";
      return "privinstruction";
      return "sg551";
      return "singlestep";
      return "uratio";
      return "uzi";
      return "variant";
      return "vector";
      return "void";
      sVar1 = *(short *)((int)L"Unable to find #Spec_PlayerItem*" + iVar15);
      sVar4 = _wcscspn(_Str,L"_.,");
      this = (DName *)DName::DName(local_24,"enum ");
      this = FUN_10267f50(pvVar3,"OnEngineLevelLoadingFinished");
      this = FUN_10267f50(pvVar3,"OnEngineLevelLoadingTick");
      this = FUN_102b2d60(pvVar1,param_1,"ContextMenu",1);
      this = FUN_102c6890(pvVar5,"Overwrite Existing File?",local_404,iVar4,iVar7);
      this = FUN_1039d370(pvVar1,"weaponscripts");
      this = FUN_103c9d10(pvVar1,param_1,"ContextMenu",1);
      this = FUN_1042ea30(pvVar1,"weaponscripts");
      this = FUN_1042ea30(pvVar3,"conditions");
      this = FUN_1042ea30(pvVar4,"FadeOutStartGame");
      this = FUN_1042ea30(pvVar4,"MoviePlayer");
      this = FUN_10472550(pvVar1,param_1,"ContextMenu",1);
      this[0x2d] = "models/vehicles/helicopters/bell212/bell212.mdl";
      this[0x2d] = "models/vehicles/helicopters/ka50/ka50.mdl";
      this_00 = (int *)FUN_10135420("hostage_entity",-1,'\x01');
      this_00 = (int *)FUN_10135420("large_metal_gib",-1,'\x01');
      this_00 = (void *)(**(code **)(*piVar4 + 0x2c))(this,"HudSnapShotReminderIn");
      this_00 = FUN_0041eb80(this,"AuthSuccess");
      this_00 = FUN_10267f50(pvVar2,"InputCanceled");
      this_00 = FUN_10267f50(pvVar2,"InputCompleted");
      this_00 = FUN_10267f50(this,"MenuItemSelected");
      this_00 = FUN_10267f50(this,"OnEngineClientSignonStatePrepareChange");
      this_00 = FUN_10267f50(this,"StartSound");
      this_00 = FUN_10267f50(this,"StopSound");
      this_00 = FUN_1039d370(this,"MenuItemSelected");
      this_00 = FUN_1042ea30(pvVar2,"InputCanceled");
      this_00 = FUN_1042ea30(pvVar2,"InputCompleted");
      this_00 = FUN_1042ea30(pvVar4,"CloseTabPage");
      this_00 = FUN_1042ea30(pvVar4,"OpenContextMenu");
      this_00 = FUN_1042ea30(this,"ButtonToggled");
      this_00 = FUN_1042ea30(this,"FlashlightState");
      this_00 = FUN_1042ea30(this,"MenuItemSelected");
      this_00 = FUN_1042ea30(this,"ParticleSystem_Create");
      this_00 = FUN_1042ea30(this,"ParticleSystem_Destroy");
      this_00 = FUN_1042ea30(this,"ProgressLevelName");
      this_00 = FUN_1042ea30(this,"TempEntity");
      this_00 = FUN_1042ea30(this,"unlitgeneric");
      this_01 = (int *)FUN_10268900(this_00,(uint *)"propertysheet",0);
      this_01 = (int *)FUN_1042f3a0(this_00,(uint *)"TIPropertySheet",0);
      this_01 = (int *)FUN_1042f3a0(this_00,(uint *)"propertysheet",0);
      this_01 = FUN_10267d30(this_00,"ControlFactory",(uint *)"ControlName",pcVar1);
      this_01 = FUN_10267f50(this_00,"Client::CmdKeyValues");
      this_01 = FUN_10267f50(this_00,"CurrentDefaultButtonSet");
      this_01 = FUN_10267f50(this_00,"DefaultButtonSet");
      this_01 = FUN_10267f50(this_00,"DialogVariables");
      this_01 = FUN_10267f50(this_00,"FileStateMachineFinished");
      this_01 = FUN_10267f50(this_00,"GetState");
      this_01 = FUN_10267f50(this_00,"OpenContextMenu");
      this_01 = FUN_102a4ef0(this_00,(int)this,(int *)"File Open",'\x01',0,1);
      this_01 = FUN_1039d150(this_00,"ControlFactory",(uint *)"ControlName",pcVar1);
      this_01 = FUN_1039d370(this_00,"CurrentDefaultButtonSet");
      this_01 = FUN_1039d370(this_00,"DialogVariables");
      this_01 = FUN_1039d370(this_00,"GetState");
      this_01 = FUN_1042e810(this_00,"ControlFactory",(uint *)"ControlName",pcVar1);
      this_01 = FUN_1042ea30(this_00,"CurrentDefaultButtonSet");
      this_01 = FUN_1042ea30(this_00,"DefaultButtonSet");
      this_01 = FUN_1042ea30(this_00,"DepthWrite");
      this_01 = FUN_1042ea30(this_00,"DialogVariables");
      this_01 = FUN_1042ea30(this_00,"FlashlightState");
      this_01 = FUN_1042ea30(this_00,"GetState");
      this_01 = FUN_1042ea30(this_00,"LoadoutSelected");
      this_01 = FUN_1042ea30(this_00,"OpenContextMenu");
      this_01 = FUN_1042ea30(this_00,"SetupSlot");
      this_01 = FUN_1042ea30(this_00,"created");
      uVar1 = (*(code *)param_1)("VGUI_InputInternal001",0);
      uVar1 = (**(code **)(*DAT_107c0a04 + 0x150))("particle/rain","ClientEffect textures",1,0);
      uVar1 = (**(code **)(*DAT_107c0a04 + 0x150))("particle/snow","ClientEffect textures",1,0);
      uVar1 = (**(code **)(*piVar3 + 0xc))("userinfo");
      uVar1 = (***(code ***)PTR_DAT_10418bb8)(local_10c,&DAT_1032b700,"DEFAULT_WRITE_PATH");
      uVar1 = DevMsg(1,"Unknown nav property %s\n",param_2);
      uVar1 = FUN_10077120("CAI_BaseNPC",(uint)PTR_s__Schedule_SCHED_IDLE_WANDER_Task_1059234c,
      uVar1 = FUN_10104e40((void *)((int)this + 0x18),param_1,param_2,(uint *)"halfwidth",
      uVar1 = FUN_10104e40((void *)((int)this + 0x18),param_1,param_2,(uint *)"initialValue",
      uVar1 = FUN_10104e40((void *)((int)this + 0x18),param_1,param_2,(uint *)"maxVal",
      uVar1 = FUN_10104e40((void *)((int)this + 0x18),param_1,param_2,(uint *)"sineMax",
      uVar1 = FUN_10104e40((void *)((int)this + 0x20),param_1,param_2,(uint *)"maxVal",
      uVar1 = FUN_10104e40((void *)((int)this + 0x20),param_1,param_2,(uint *)"offset",(byte *)0x0);
      uVar1 = FUN_10104e40((void *)((int)this + 0x20),param_1,param_2,(uint *)"range_in_max",
      uVar1 = FUN_10135420("info_node_link",-1,'\x01');
      uVar1 = FUN_10265ef0((byte *)"soundprecache",param_1);
      uVar1 = FUN_10265ef0(param_1,(byte *)"model");
      uVar1 = FUN_10265f50((byte *)"ATI1N",pbVar2);
      uVar1 = FUN_10265f50((byte *)param_1[0x103],(byte *)"permanent");
      uVar1 = FUN_10265f50(*(byte **)(local_8 + 0x24),(byte *)"player");
      uVar1 = FUN_10265f50(DAT_106829b8,(byte *)"hl1mp");
      uVar1 = FUN_10265f50(local_108,(byte *)"portal2_sixense");
      uVar1 = FUN_10265f50(local_204,(byte *)"checksum");
      uVar1 = FUN_10265f50(param_1,(byte *)"No Steam logon\n");
      uVar1 = FUN_10265f50(param_1,(byte *)"Server shutting down");
      uVar1 = FUN_10265f50(param_1,(byte *)"redosort");
      uVar1 = FUN_10265f50(pbVar2,(byte *)"Connect");
      uVar1 = FUN_102687d0(*param_1,(uint *)"selfDroppable",0);
      uVar1 = FUN_102687d0(param_1,(uint *)"Height",0);
      uVar1 = FUN_1026e000(&DAT_106af84c,(byte *)"g_HunkMemoryStack",iVar3,0x10000,0x2800000,0x10);
      uVar1 = FUN_10399710((byte *)param_1,(byte *)"_ambient");
      uVar1 = FUN_10399710((byte *)param_1,(byte *)"endcolor");
      uVar1 = FUN_10399710((byte *)param_1,(byte *)"materialVar");
      uVar1 = FUN_10399710(param_1,(byte *)"Player");
      uVar1 = FUN_1039d9a0(*param_1,(uint *)"selfDroppable",0);
      uVar1 = FUN_103fabbe("");
      uVar1 = FUN_1042df20((byte *)"specgui",param_1);
      uVar1 = FUN_1042df80((byte *)((int)this + 0x144),(byte *)"@actor_potatos");
      uVar1 = FUN_1042df80((byte *)param_1,(byte *)"GlowProxySize");
      uVar1 = FUN_1042df80(param_1,(byte *)"disableshadows");
      uVar1 = FUN_1042df80(param_1,(byte *)"renderamt");
      uVar1 = FUN_1042f270(*param_1,(uint *)"selfDroppable",0);
      uVar1 = FUN_1042f3d0(this_00,(uint *)"texture",(uint)&DAT_104eefb3);
      uVar1 = Msg("CParticleSystemMgr compiled using an old IMaterialSystem\n");
      uVar1 = Msg("NET_GetLong:  Split packet from %s with inconsistent split size (number %i/ count %i) where size %i not equal to initial size of %i\n"
      uVar1 = Msg("NET_GetLong:  Split packet from %s with too many split parts (number %i/ count %i) where %i is max count allowed\n"
      uVar1 = Msg("Split packet too large! %d bytes from %s\n",puVar2[0xaf],pcVar3);
      uVar1 = Warning("*** Error unserializing skybox texture: %s\n",param_2);
      uVar1 = Warning("Depth must be 1 for cubemaps!\n");
      uVar1 = Warning("Height and width must be equal for cubemaps!\n");
      uVar1 = Warning("vehicleGearVar [%s] not found\n",uVar1);
      uVar10 = (**(code **)(*piVar4 + 0x2c))("$colortint",0,1);
      uVar10 = COM_TimestampedLog("CBaseClient::ProcessServerInfo(done)");
      uVar10 = FUN_1014fb90(this_00,(int *)"effects/fire_cloud2");
      uVar10 = FUN_1014fb90(this_00,(int *)"effects/fire_embers1");
      uVar10 = FUN_1014fb90(this_00,(int *)"effects/fire_embers2");
      uVar10 = FUN_103996b0(pbVar9,(byte *)"inferno");
      uVar11 = (**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameFB1","RenderTargets",1,0);
      uVar11 = FUN_0041e3a0(pbVar3,(byte *)"#base");
      uVar11 = FUN_10265f50(pbVar3,(byte *)"#base");
      uVar11 = FUN_102687d0(param_1,(uint *)"PinnedCornerOffsetX",0);
      uVar11 = FUN_102687d0(param_1,(uint *)"PinnedCornerOffsetY",0);
      uVar11 = FUN_102687d0(param_1,(uint *)"UnpinnedCornerOffsetX",0);
      uVar11 = FUN_102687d0(param_1,(uint *)"UnpinnedCornerOffsetY",0);
      uVar11 = FUN_102687d0(pvVar10,(uint *)"Count",0);
      uVar11 = FUN_10399710(pbVar3,(byte *)"#base");
      uVar11 = FUN_1039d9a0(param_1,(uint *)"PinnedCornerOffsetX",0);
      uVar11 = FUN_1039d9a0(param_1,(uint *)"PinnedCornerOffsetY",0);
      uVar11 = FUN_1039d9a0(param_1,(uint *)"UnpinnedCornerOffsetX",0);
      uVar11 = FUN_1039d9a0(param_1,(uint *)"UnpinnedCornerOffsetY",0);
      uVar11 = FUN_1042df80(pbVar3,(byte *)"#base");
      uVar11 = FUN_1042f270(param_1,(uint *)"PinnedCornerOffsetX",0);
      uVar11 = FUN_1042f270(param_1,(uint *)"PinnedCornerOffsetY",0);
      uVar11 = FUN_1042f270(param_1,(uint *)"UnpinnedCornerOffsetX",0);
      uVar11 = FUN_1042f270(param_1,(uint *)"UnpinnedCornerOffsetY",0);
      uVar12 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_Hostage_Kill_Warning");
      uVar12 = FUN_10314250(param_1,(uint *)"mafia_mode");
      uVar14 = FUN_103aa540(*(void **)(param_1 + 0x250),(byte *)"helmet");
      uVar14 = FUN_103aa540(*(void **)(param_1 + 0x250),(byte *)"holster");
      uVar16 = FUN_101cf7e0(*(void ***)((int)this + 8),(int *)this_01,(byte *)"%c00000000000000");
      uVar2 = (**(code **)(*(int *)((int)this + -4) + 0x84))("bomb_light",(int)this + 0x33e0);
      uVar2 = (**(code **)(*param_1 + 0x1c))((int)this + 0x210,"Player.FallDamage");
      uVar2 = (**(code **)(*piVar1 + 0x2c))("$basetexturescale",(int)&param_1 + 3,0);
      uVar2 = (**(code **)(param_1[1] + 0x84))("glasses");
      uVar2 = (**(code **)(param_1[1] + 0x84))("vehicle_feet_passenger0");
      uVar2 = ConDMsg("Acknowledging reliable snapshot failed: ack %d while waiting for %d.\n",
      uVar2 = FUN_100362c0(this,DAT_104271ec,&param_2,&param_3,"DS_INTERLEAVED",2);
      uVar2 = FUN_100845f0(param_1,(byte *)"angles");
      uVar2 = FUN_100845f0(param_1,(byte *)"origin");
      uVar2 = FUN_100845f0(param_1,(byte *)"targetname");
      uVar2 = FUN_100845f0(param_3,(byte *)"client");
      uVar2 = FUN_100845f0(param_3,(byte *)"server");
      uVar2 = FUN_1014fb90(this_00,(int *)"particle/fire");
      uVar2 = FUN_1014fb90(this_01,(int *)"effects/fire_cloud2");
      uVar2 = FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Protocol OK.");
      uVar2 = FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Upload OK.");
      uVar2 = FUN_101a5c10((byte *)"Update self-referencing, connection dropped.\n");
      uVar2 = FUN_101f3700((int)this,3,"#ChangeTeamDeniedTooFast",(char *)((int)puVar5 + 5),
      uVar2 = FUN_101f3700((int)this,3,"#ChangeTeamNextRound",pcVar4,pcVar9,pcVar10,pcVar11);
      uVar2 = FUN_10265ef0(pbVar1,(byte *)"server_removeban");
      uVar2 = FUN_10265f50((byte *)"-nosave",(byte *)param_1[0x104]);
      uVar2 = FUN_10265f50((byte *)param_1[0x103],(byte *)"setpos");
      uVar2 = FUN_10265f50(local_104,(byte *)"PLAINTEXT");
      uVar2 = FUN_10265f50(local_24,(byte *)"unicode");
      uVar2 = FUN_10265f50(param_1,(byte *)"BringForward");
      uVar2 = FUN_10265f50(param_2,(byte *)"error");
      uVar2 = FUN_10265f50(pbVar1,(byte *)"exclude");
      uVar2 = FUN_10265f50(pbVar1,(byte *)"japanese");
      uVar2 = FUN_10265f50(pbVar3,(byte *)"layout");
      uVar2 = FUN_102687d0((void *)param_1[0x9c],(uint *)"image",0);
      uVar2 = FUN_102687d0(param_2,(uint *)"Height",0);
      uVar2 = FUN_10268900(this_00,(uint *)"propertypage",0);
      uVar2 = FUN_102c09a0(DAT_107a27d0,(uint *)"mafia_mode");
      uVar2 = FUN_10314280(DAT_10693b08,(uint *)"assign_case",'\x01');
      uVar2 = FUN_103996b0(pbVar5,(byte *)"CallScriptFunction");
      uVar2 = FUN_10399710((byte *)param_1,(byte *)"ubersky");
      uVar2 = FUN_10399710((byte *)pauVar4,(byte *)"CrouchWalk");
      uVar2 = FUN_10399710(local_404,(byte *)"Cancel");
      uVar2 = FUN_10399710(param_1,(byte *)"!target2");
      uVar2 = FUN_10399710(param_1,(byte *)"!target3");
      uVar2 = FUN_10399710(param_1,(byte *)"!target4");
      uVar2 = FUN_10399710(param_1,(byte *)"!target5");
      uVar2 = FUN_10399710(param_1,(byte *)"!target6");
      uVar2 = FUN_10399710(param_1,(byte *)"!target7");
      uVar2 = FUN_10399710(param_1,(byte *)"!target8");
      uVar2 = FUN_10399710(pbVar1,(byte *)"japanese");
      uVar2 = FUN_1039d9a0((void *)param_1[0x9c],(uint *)"image",0);
      uVar2 = FUN_1042df20(param_1,(byte *)"countdown");
      uVar2 = FUN_1042df20(pbVar1,(byte *)"player_connect");
      uVar2 = FUN_1042df20(pbVar1,(byte *)"player_death");
      uVar2 = FUN_1042df20(pbVar1,(byte *)"player_disconnect");
      uVar2 = FUN_1042df20(pbVar1,(byte *)"player_info");
      uVar2 = FUN_1042df20(pbVar1,(byte *)"player_spawn");
      uVar2 = FUN_1042df20(pbVar1,(byte *)"player_team");
      uVar2 = FUN_1042df80((byte *)"AlwaysDrawMiniMap_Both",param_1);
      uVar2 = FUN_1042df80((byte *)"AlwaysDrawMiniMap_Off",param_1);
      uVar2 = FUN_1042df80((byte *)"AlwaysDrawMiniMap_On",param_1);
      uVar2 = FUN_1042df80((byte *)"Cancel",pbVar1);
      uVar2 = FUN_1042df80((byte *)"GameInstructor_Off",param_1);
      uVar2 = FUN_1042df80((byte *)"GameInstructor_On",param_1);
      uVar2 = FUN_1042df80((byte *)"HitOutput_Off",param_1);
      uVar2 = FUN_1042df80((byte *)"HitOutput_On",param_1);
      uVar2 = FUN_1042df80((byte *)"Overlay_TopLeft",param_1);
      uVar2 = FUN_1042df80((byte *)"SpawnIntros_Off",param_1);
      uVar2 = FUN_1042df80((byte *)"SpawnIntros_On",param_1);
      uVar2 = FUN_1042df80((byte *)"Tracers_Off",param_1);
      uVar2 = FUN_1042df80((byte *)"Tracers_On",param_1);
      uVar2 = FUN_1042df80(local_84,(byte *)"PISTOL");
      uVar2 = FUN_1042df80(param_1,(byte *)"#L4D360UI_SplitScreenDirection_Vertical");
      uVar2 = FUN_1042df80(param_3,(byte *)"server");
      uVar2 = FUN_1042df80(pbVar1,(byte *)"ColorBlindDisabled");
      uVar2 = FUN_1042df80(pbVar1,(byte *)"ColorBlindEnabled");
      uVar2 = FUN_1042df80(pbVar1,(byte *)"client");
      uVar2 = FUN_1042df80(pbVar1,(byte *)"japanese");
      uVar2 = FUN_1042f270((void *)param_1[0x9c],(uint *)"image",0);
      uVar2 = FUN_1042f270(local_8,(uint *)"enabled",1);
      uVar2 = FUN_1042f270(param_1,(uint *)"framerate",0);
      uVar2 = FUN_1042f270(param_1,(uint *)"magnitude",0);
      uVar2 = FUN_1042f270(pvVar4,(uint *)"index",0);
      uVar2 = FUN_1042f270(this_00,(uint *)"force_pos",0);
      uVar2 = FUN_1042f270(this_00,(uint *)"spotlight",0);
      uVar2 = FUN_1042f3a0(this_00,(uint *)"TIPropertyPage",0);
      uVar2 = FUN_1042f3a0(this_00,(uint *)"propertypage",0);
      uVar2 = FUN_1042f3d0((void *)param_1[0x98],(uint *)"command",(uint)&DAT_104eefb3);
      uVar2 = FUN_1042f3d0(local_8,(uint *)"image",(uint)&DAT_104eefb3);
      uVar2 = FUN_1042f3d0(param_1,(uint *)"typedata",(uint)&DAT_104eefb3);
      uVar2 = FUN_1042f3d0(this,(uint *)"command",(uint)&DAT_104eefb3);
      uVar2 = FUN_1042f3d0(this,(uint *)"icon2",(uint)&DAT_104eefb3);
      uVar2 = FUN_1042f3d0(this_00,(uint *)"pageTitle",(uint)pcVar3);
      uVar2 = Msg("DS:: couldn\'t restore buffer %s\n",param_4);
      uVar2 = Warning("*** Encountered VTF file with an invalid minor version!\n");
      uVar2 = Warning("VPROF PLAYBACK ASSERT (%s, line %d) - stopping playback.\n",
      uVar2 = Warning("Warning! Encountered old format VTF file; please rebuild it!\n");
      uVar3 = (**(code **)(*(int *)(DAT_106a5e98 + 4) + 0x24))("c:\\o.events",&DAT_10474db0,0);
      uVar3 = (**(code **)(*DAT_106a5ea8 + 0x14c))("__particlesDepthWrite",this_01);
      uVar3 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Achievement_Earned",2,local_294,iVar14);
      uVar3 = (**(code **)(*DAT_107c09f0 + 0x2c))("#FreezePanel_ScreenShot",1,local_34);
      uVar3 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_DM_Respawn",1,local_30);
      uVar3 = (**(code **)(*DAT_107c09f0 + 0x2c))("#chat_say_team_ti",1,local_204);
      uVar3 = (**(code **)(*DAT_107c0a08 + 0x14c))("__particlesDepthWrite",this_01);
      uVar3 = (**(code **)(*param_1 + 0x28))("cvarvalue",&DAT_103236cf);
      uVar3 = (**(code **)(*piVar2 + 0xc))("-demo",0);
      uVar3 = (**(code **)(*this + 0xc4))(this,param_1,"#Valve_Reject_CD_Key_Auth_Invalid");
      uVar3 = (**(code **)(*this + 0xc4))(this,param_1,"#Valve_Reject_Invalid_CD_Key");
      uVar3 = (**(code **)(iVar2 + 0xc))("Default",uVar1);
      uVar3 = COM_TimestampedLog("CClientState::SetSignonState: end %i",param_1);
      uVar3 = FUN_100845f0((byte *)param_1,(byte *)"propdata");
      uVar3 = FUN_100845f0((byte *)param_1[0x103],(byte *)"ladder");
      uVar3 = FUN_100df0b0((float *)((int)this + 0x210),"Doesn\'t match NPC hint group.",'\0',
      uVar3 = FUN_100df0b0((float *)((int)this + 0x210),"NPC not in correct state.",'\0',0x42700000)
      uVar3 = FUN_100df0b0((float *)((int)this + 0x210),"Node is locked.",'\0',0x42700000);
      uVar3 = FUN_10186e40((byte *)"No matching RecvTable for SendTable \'%s\'.\n");
      uVar3 = FUN_101fc910("Failed to set video mode - falling back to safe mode settings.\n\nGame will now restart with the new video settings."
      uVar3 = FUN_101fc910("Failed to set video mode - resetting to defaults.\n\nGame will now restart with the new video settings."
      uVar3 = FUN_10265ad0(iVar1,"Infected",8);
      uVar3 = FUN_10265f50((byte *)"infested",(byte *)&DAT_106ad7d0);
      uVar3 = FUN_10265f50(param_1,(byte *)"CopyToClipboard");
      uVar3 = FUN_102687d0(this_01,(uint *)"state",param_2);
      uVar3 = FUN_10268900(this_00,(uint *)"propertypage",0);
      uVar3 = FUN_10268930(this_00,(uint *)"tabname",(uint)&DAT_103236cf);
      uVar3 = FUN_102eb0f0(puVar2,(uint *)"precache_airportvehicles");
      uVar3 = FUN_102eb0f0(puVar2,(uint *)"precache_npcvehicles");
      uVar3 = FUN_102eb0f0(puVar2,(uint *)"precache_vehicles");
      uVar3 = FUN_10314250(param_1,(uint *)"mafia_mode");
      uVar3 = FUN_10362c70((int)"watersplash",&local_6c);
      uVar3 = FUN_103996b0(local_1010,(byte *)"info_mapinfo");
      uVar3 = FUN_103996b0(pbVar1,(byte *)"scripts/vehicles/truck-1.txt");
      uVar3 = FUN_10399710((byte *)"func_gamezone",pbVar6);
      uVar3 = FUN_10399710((byte *)"func_gamezone",pbVar7);
      uVar3 = FUN_10399710(pbVar9,(byte *)"spec_player");
      uVar3 = FUN_1039d9a0(this_01,(uint *)"state",param_2);
      uVar3 = FUN_1042df20((byte *)"round_pre_start",pbVar2);
      uVar3 = FUN_1042df20(local_1010,(byte *)"info_vip_wp");
      uVar3 = FUN_1042df20(local_184,(byte *)"ESCAPE");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"B_BUTTON");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"DOWNARROW");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"LEFTARROW");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"MOUSE1");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"MOUSE2");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"MOUSE3");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"MWHEELDOWN");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"MWHEELUP");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"RIGHTARROW");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"SEMICOLON");
      uVar3 = FUN_1042df20(pbVar1,(byte *)"UPARROW");
      uVar3 = FUN_1042df20(pbVar14,(byte *)"Audio");
      uVar3 = FUN_1042df20(pbVar2,(byte *)"server_spawn");
      uVar3 = FUN_1042df80((byte *)"DeveloperConsoleDisabled",pbVar1);
      uVar3 = FUN_1042df80((byte *)"DeveloperConsoleEnabled",pbVar1);
      uVar3 = FUN_1042df80((byte *)"MouseAccelerationDisabled",pbVar1);
      uVar3 = FUN_1042df80((byte *)"MouseAccelerationEnabled",pbVar1);
      uVar3 = FUN_1042df80((byte *)"RawMouseDisabled",pbVar1);
      uVar3 = FUN_1042df80((byte *)"RawMouseEnabled",pbVar1);
      uVar3 = FUN_1042df80(local_454,(byte *)"instantly");
      uVar3 = FUN_1042df80(param_1,(byte *)"indicator_contain");
      uVar3 = FUN_1042df80(pbVar1,(byte *)"$alpha");
      uVar3 = FUN_1042df80(pbVar1,(byte *)"Video");
      uVar3 = FUN_1042df80(pbVar14,(byte *)"QuitGame_NoConfirm");
      uVar3 = FUN_1042df80(pbVar2,(byte *)"player_death");
      uVar3 = FUN_1042df80(pbVar2,(byte *)"round_start");
      uVar3 = FUN_1042df80(pbVar7,(byte *)"remove");
      uVar3 = FUN_1042f270(param_1,(uint *)"traillength",0);
      uVar3 = FUN_1042f270(this_00,(uint *)"userdata",0);
      uVar3 = FUN_1042f270(this_01,(uint *)"state",param_2);
      uVar3 = FUN_1042f3a0(this_00,(uint *)"TIPropertyPage",0);
      uVar3 = FUN_1042f3a0(this_00,(uint *)"propertypage",0);
      uVar3 = FUN_1042f3d0(this_00,(uint *)"tabname",(uint)&DAT_104eefb3);
      uVar3 = Msg("Ill-formed signify command from client!\n");
      uVar3 = Msg("[%s] %s\n",uVar3);
      uVar3 = Warning("#######################################\n");
      uVar3 = Warning("CEngineTrace::ClipRayToVPhysics : no model; bbox {%g,%g,%g}-{%g,%g,%g}\n",
      uVar3 = Warning("Constraint (%s) attached to two static objects (%s and %s)!!!\n",puVar8,
      uVar3 = Warning("Unable to load sprite material %s!\n",local_224);
      uVar3 = Warning("Warning! Static BSP decal (%s), on NULL model index %i for entity index %i.\n"
      uVar3 = und_strncmp(pcVar5,"generic-type-",0xd);
      uVar4 = (**(code **)(**(int **)((int)this + 0x4610) + 0xc))("Buffer overflow in net message");
      uVar4 = (**(code **)(*DAT_10730cc4 + 0x38))("models/error.mdl",0);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Chat_GM",1,local_c2c);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Inv_SlotPrevCharacter",1,uVar4);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Inv_SlotPrevEquipment",1,uVar4);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Inv_SlotPrevFace",1,uVar4);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Inv_SlotPrevFeet",1,uVar4);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Inv_SlotPrevHands",1,uVar4);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Inv_SlotPrevHelmet",1,uVar4);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Inv_SlotPrevHolster",1,uVar4);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Title_KillStreak_2",0);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Title_KillStreak_3",0);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Title_KillStreak_6",0);
      uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Title_KillStreak_9",0);
      uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("shadertest/wireframe");
      uVar4 = (**(code **)(*param_1 + 0x1c))("clients",0);
      uVar4 = (**(code **)(*param_1 + 0x1c))("otherid",0);
      uVar4 = (**(code **)(*param_1 + 0x1c))("userid",0);
      uVar4 = (**(code **)(*piVar1 + 0x1c))("potentialVotes",0);
      uVar4 = (**(code **)(*piVar1 + 0x24))("-game",0);
      uVar4 = (**(code **)(*piVar3 + 0x20))("-reflectionTextureSize",param_3);
      uVar4 = Error("game_intermission is missing, this is a failure of epic proportions.\n");
      uVar4 = FUN_100b33c0(piVar3,(byte *)"Update delta not found.\n");
      uVar4 = FUN_1014fb90(this_00,(int *)"effects/fire_cloud2");
      uVar4 = FUN_101a5c10((byte *)"Update self-referencing, connection dropped.\n");
      uVar4 = FUN_101f54b0((byte *)"\"%s<%i><%s><%s>\" changed name to \"%s\"\n");
      uVar4 = FUN_101f54b0((byte *)"\"%s<%i><%s><%s>\" committed suicide with \"%s\"\n");
      uVar4 = FUN_101f54b0((byte *)"\"%s<%i><%s><>\" entered the game\n");
      uVar4 = FUN_10265ef0(pbVar3,(byte *)"hltv_title");
      uVar4 = FUN_10265ef0(pbVar3,(byte *)"update_stack");
      uVar4 = FUN_10265f50((byte *)local_44,(byte *)"unknown");
      uVar4 = FUN_10265f50(local_10,(byte *)"-cold");
      uVar4 = FUN_10265f50(local_254,(byte *)"<<Unassigned>>");
      uVar4 = FUN_10265f50(pbVar11,(byte *)"spec_next");
      uVar4 = FUN_10265f50(pbVar3,(byte *)"north");
      uVar4 = FUN_10265f50(pbVar3,(byte *)"sky_ti_09_hdr");
      uVar4 = FUN_10265f50(pbVar5,(byte *)"-jitter");
      uVar4 = FUN_10268930(pvVar3,(uint *)"convar",(uint)&DAT_103236cf);
      uVar4 = FUN_10268930(this_00,(uint *)"tabname",(uint)&DAT_103236cf);
      uVar4 = FUN_10269690(piVar3,param_1,"PROFILE",(int *)0x0);
      uVar4 = FUN_1026b210(this_01,(uint *)"bgColor",*puVar3);
      uVar4 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01');
      uVar4 = FUN_10314280(param_1,(uint *)"spawn_in_cars",'\x01');
      uVar4 = FUN_103996b0(local_1010,(byte *)"worldspawn");
      uVar4 = FUN_10399710((byte *)param_1,(byte *)"Barbed");
      uVar4 = FUN_10399710(pbVar3,(byte *)"north");
      uVar4 = FUN_10399710(pbVar5,(byte *)"sequential");
      uVar4 = FUN_1039fc70(this_01,(uint *)"bgColor",*puVar3);
      uVar4 = FUN_1042df20((byte *)"hltv_message",pbVar3);
      uVar4 = FUN_1042df20((byte *)"hltv_status",pbVar3);
      uVar4 = FUN_1042df20((byte *)"hltv_title",pbVar3);
      uVar4 = FUN_1042df20(local_1010,(byte *)"env_sprite_clientside");
      uVar4 = FUN_1042df20(local_1010,(byte *)"func_stage_props_zone");
      uVar4 = FUN_1042df20(local_1010,(byte *)"prop_ragdoll_clientside");
      uVar4 = FUN_1042df20(local_104,(byte *)"icon_blank");
      uVar4 = FUN_1042df20(pbVar1,(byte *)"ToggleAllTalk");
      uVar4 = FUN_1042df20(pbVar3,(byte *)"game_newmap");
      uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"disableshadows");
      uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"glowcolor");
      uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"glowrange");
      uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"glowstate");
      uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"renderamt");
      uVar4 = FUN_1042df80(pbVar1,(byte *)"VoteMenu");
      uVar4 = FUN_1042df80(pbVar1,(byte *)"use_binding");
      uVar4 = FUN_1042df80(pbVar3,(byte *)"iterate_players");
      uVar4 = FUN_1042df80(pbVar3,(byte *)"north");
      uVar4 = FUN_1042df80(pbVar3,(byte *)"static_icon");
      uVar4 = FUN_1042df80(pbVar6,(byte *)"VGuiModuleTracker001");
      uVar4 = FUN_1042f270(local_8,(uint *)"insethud",0);
      uVar4 = FUN_1042f270(param_1,(uint *)"default",0);
      uVar4 = FUN_1042f270(puVar3,(uint *)"$selfillum",0);
      uVar4 = FUN_1042f270(this_01,(uint *)"y_increment",10);
      uVar4 = FUN_1042f3a0(param_1,(uint *)"baseentity",0);
      uVar4 = FUN_1042f3d0(this_00,(uint *)"tabname",(uint)&DAT_104eefb3);
      uVar4 = FUN_104318f0(this_01,(uint *)"bgColor",*puVar3);
      uVar4 = SteamAPI_GetHSteamPipe("STEAMREMOTESTORAGE_INTERFACE_VERSION013");
      uVar4 = Warning("Bug must have a title\n");
      uVar4 = Warning("Owner not set!\n");
      uVar4 = Warning("ReportType not set!\n");
      uVar5 = (**(code **)(*(int *)((int)this + -4) + 0x84))("Plane_ROOT");
      uVar5 = (**(code **)(*(int *)(iVar4 + 8) + 0x28))(0,"(TacticalTV) %s",uVar5);
      uVar5 = (**(code **)(*(int *)(param_1 + -8) + 0x84))("Root_attachment",&local_20);
      uVar5 = (**(code **)(*(int *)(param_1 + -8) + 0x84))("view_origin",&local_2c);
      uVar5 = (**(code **)(**(int **)(PTR_DAT_106abdd8 + 0x30) + 0x2c))("Camera");
      uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#CharacterFootWareInvalid",2,uVar5);
      uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Score_Other",1,local_1920);
      uVar5 = (**(code **)(*param_1 + 0x1c))("index",0);
      uVar5 = (**(code **)(*piVar2 + 0x1c))("clients");
      uVar5 = (**(code **)(*piVar4 + 0x24))(uVar3,"SteamUtils007");
      uVar5 = (**(code **)(*piVar4 + 0x28))(0x3dcccccd,"Health %d",uVar5);
      uVar5 = (*pcVar19)(&DAT_106a8e30,"\tVar handle returned NULL!\n");
      uVar5 = COM_TimestampedLog("CModAppSystemGroup::Create() - Finish");
      uVar5 = FUN_004062b0(param_1,"datacache.dll");
      uVar5 = FUN_004062b0(param_1,"p4lib.dll");
      uVar5 = FUN_1001fc56(pauVar4,(undefined (*) [16])"-debugbreak");
      uVar5 = FUN_101d1b90((int)"207.173.177.12:27013",(void *)(param_1 + 8));
      uVar5 = FUN_10265f50((byte *)"elementid",local_238);
      uVar5 = FUN_10265f50(pbVar8,(byte *)"UnlitGeneric");
      uVar5 = FUN_10269690(piVar4,(uint *)"pure_server_whitelist.txt",&DAT_10330898,(int *)0x0);
      uVar5 = FUN_1026b2f0(param_1,(uint *)"PanelPtr",(uint)puVar7);
      uVar5 = FUN_10314250(param_1,(uint *)"mafia_mode");
      uVar5 = FUN_10399710((byte *)"Schedule",local_418);
      uVar5 = FUN_10399710((byte *)"elementid",local_238);
      uVar5 = FUN_10399710((byte *)"func_gamezone",pbVar9);
      uVar5 = FUN_10399710((byte *)"m_iHammerID",(byte *)pcVar4);
      uVar5 = FUN_10399710((byte *)param_2[0x102],(byte *)"dmspawn");
      uVar5 = FUN_10399710(local_418,(byte *)"Tasks");
      uVar5 = FUN_10399710(pbVar4,(byte *)"break");
      uVar5 = FUN_1039fd00(param_1,(uint *)"PanelPtr",(uint)puVar7);
      uVar5 = FUN_1042df80((byte *)"elementid",local_238);
      uVar5 = FUN_1042df80((byte *)"m_iHammerID",(byte *)pcVar4);
      uVar5 = FUN_1042df80(local_318,(byte *)"localplayer");
      uVar5 = FUN_1042df80(pbVar4,(byte *)"animatedfriction");
      uVar5 = FUN_1042df80(pbVar4,(byte *)"break");
      uVar5 = FUN_1042f270(this_00,(uint *)"allowClose",0);
      uVar5 = FUN_104319d0(param_1,(uint *)"PanelPtr",(uint)puVar7);
      uVar5 = Msg("Type \'%s\' unknown",&DAT_107973a0);
      uVar5 = SteamAPI_GetHSteamPipe("STEAMREMOTESTORAGE_INTERFACE_VERSION013");
      uVar5 = Warning("Engine wasn\'t able to acquire required interfaces!\n");
      uVar5 = Warning("Unable to save %d bytes to %s\n",local_30,&DAT_10682408);
      uVar6 = (**(code **)(**(int **)(iVar1 + 0x10) + 0x1c))("index",0);
      uVar6 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Header_InRoom",5,local_320,uVar6);
      uVar6 = (**(code **)(*param_1 + 0x28))("weapon",&DAT_1043677a);
      uVar6 = (**(code **)(iVar1 + 0xc))("BudgetLabel",uVar5);
      uVar6 = (**(code **)(iVar2 + 0x84))("muzzle",&local_4c,&local_64);
      uVar6 = (**(code **)(piVar2[1] + 0x50))("hltv_addr");
      uVar6 = (**local_1c)("BudgetLabel",uVar5);
      uVar6 = DevWarning(2,"%s has a stopping path and no valid. Movement activity: %s (prev %s)\n",
      uVar6 = FUN_100aca00(param_1,(byte *)"version number");
      uVar6 = FUN_101c52f0(&DAT_106a4940,(int *)this,(int)"bad control cmd");
      uVar6 = FUN_10265f50((byte *)&DAT_10674cf0,(byte *)"CHAN_STATIC");
      uVar6 = FUN_10265f50((byte *)&local_274,(byte *)"event");
      uVar6 = FUN_10265f50(pbVar5,(byte *)"replace");
      uVar6 = FUN_10265f50(pbVar7,(byte *)"setang");
      uVar6 = FUN_10268a60(pvVar2,(uint *)"xuidReserve",0);
      uVar6 = FUN_103996b0((byte *)_Str1,(byte *)"teargrenade_projectile");
      uVar6 = FUN_10399710(pbVar5,(byte *)"replace");
      uVar6 = FUN_1042df20((byte *)"achievement_earned",pbVar5);
      uVar6 = FUN_1042df20((byte *)"server_cvar",pbVar5);
      uVar6 = FUN_1042df80((byte *)&local_274,(byte *)"event");
      uVar6 = FUN_1042df80(pbVar5,(byte *)"replace");
      uVar6 = FUN_1042df80(pbVar7,(byte *)"client");
      uVar6 = FUN_1042f270(puVar3,(uint *)"FlyoutMenuSettings/noblindnavigation",0);
      uVar6 = FUN_1042f270(puVar3,(uint *)"FlyoutMenuSettings/noleftrightautonav",0);
      uVar6 = FUN_1042f270(puVar3,(uint *)"FlyoutMenuSettings/randomizeitems",0);
      uVar6 = FUN_1042f270(puVar3,(uint *)"FlyoutMenuSettings/solidfill",0);
      uVar6 = Warning("CSceneEntity %s :\"%s\" failed to start sequence \"%s\"\n",puVar9,uVar5,uVar4
      uVar7 = (**(code **)(*(int *)((int)this + -4) + 0x84))("vehicle_engine");
      uVar7 = (**(code **)(iVar2 + 0xc))("Marlett",uVar3);
      uVar7 = ConDMsg("NET_ReceivePacket: %s\n",pcVar5);
      uVar7 = FUN_0041e3a0(pbVar6,(byte *)"#base");
      uVar7 = FUN_10265f50(pbVar6,(byte *)"#base");
      uVar7 = FUN_102687d0(pvVar1,(uint *)"disabled",0);
      uVar7 = FUN_10399710(pbVar12,(byte *)"required");
      uVar7 = FUN_10399710(pbVar6,(byte *)"#base");
      uVar7 = FUN_10399710(pbVar6,(byte *)"solid");
      uVar7 = FUN_1039d9a0(pvVar1,(uint *)"disabled",0);
      uVar7 = FUN_1039db00(pvVar4,(uint *)&DAT_104e985c,(uint)"0 0 0");
      uVar7 = FUN_1042df20(pbVar14,(byte *)"Controller");
      uVar7 = FUN_1042df80((byte *)"volume",pbVar2);
      uVar7 = FUN_1042df80(pbVar6,(byte *)"#base");
      uVar7 = FUN_1042df80(pbVar6,(byte *)"solid");
      uVar7 = FUN_1042f270(pvVar1,(uint *)"disabled",0);
      uVar8 = (**(code **)*puVar1)("defendzone_connector");
      uVar8 = Error("Unable to find %s maplist filename\n",param_4);
      uVar8 = Error("Unable to load %s maplist file: %s\n",param_4,iVar3);
      uVar8 = FUN_101cf7e0(*(void ***)((int)param_1 + 0xc),(int *)param_1,(byte *)"%c00000000000000"
      uVar8 = FUN_10265f50(param_5,(byte *)"keyvalues2_flat_v1");
      uVar8 = FUN_10314280(DAT_10693b08,(uint *)"assign_bomb",'\x01');
      uVar8 = FUN_10314280(DAT_10693b08,(uint *)"spawn_in_cars",'\x01');
      uVar8 = FUN_10314280(param_1,(uint *)"vip_splitsquad",'\x01');
      uVar8 = FUN_10399710(param_5,(byte *)"keyvalues2_flat_v1");
      uVar8 = FUN_10399710(pbVar7,(byte *)"collisionrules");
      uVar8 = FUN_10399710(pbVar7,(byte *)"solid");
      uVar8 = FUN_1039db00(pvVar4,(uint *)&DAT_104e9860,(uint)"0 0 0");
      uVar8 = FUN_1042df80((byte *)"default",pbVar7);
      uVar8 = FUN_1042df80((byte *)"primary",pbVar9);
      uVar8 = FUN_1042df80(param_5,(byte *)"door_close");
      uVar8 = FUN_1042df80(param_5,(byte *)"keyvalues2_flat_v1");
      uVar8 = FUN_1042df80(pbVar7,(byte *)"collisionrules");
      uVar8 = FUN_1042df80(pbVar7,(byte *)"solid");
      uVar9 = (**(code **)(*(int *)((int)this + -4) + 0x84))("vehicle_engine");
      uVar9 = (**(code **)(*DAT_107c09f0 + 0x30))("#RC_Skill_HC");
      uVar9 = (**(code **)(*piVar6 + 0xc))("DefaultVerySmall",0);
      uVar9 = COM_TimestampedLog("CSourceAppSystemGroup::Create() - Took %.4f secs to load libraries and get factories."
      uVar9 = FUN_10265ef0((byte *)"local",(byte *)puVar7);
      uVar9 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01');
      uVar9 = FUN_10314280(DAT_10693b08,(uint *)"spawn_in_cars",'\x01');
      while ((local_418[0] != 0 && (uVar5 = FUN_10399710((byte *)"Schedule",local_418), uVar5 != 0))
      while (cVar1 != '\"') {
     && (iVar3 = (*pcVar2)("VTEX_003",0), iVar3 != 0)) {
     && (piVar3 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("hostname_changed",0,0),
     ((((((char *)this_00[0x17] == "worldspawn" ||
     (((((char *)param_1[0x17] != "prop_physics_override" &&
     (((_DAT_10730d0c = (*(code *)param_1)("XboxSystemInterface002",0), _DAT_10730d0c != 0 &&
     (((bVar6 = FUN_100a6de0(this_00,"prop_physics_multiplayer"), bVar6 ||
     (((char *)param_1[0x17] == "dynamic_prop" ||
     (((char *)param_1[0x17] == "prop_dynamic" ||
     (((char *)param_1[0x17] == "scripted_sequence" ||
     (((char *)param_2[0x17] == "func_nav_blocker" ||
     (((iVar2 = __stricmp(_Str1,".arc"), iVar2 != 0 && (iVar2 = __stricmp(_Str1,".lzh"), iVar2 != 0)
     ((uVar4 = FUN_1042df80(param_3,(byte *)"screenshot"), uVar4 == 0 ||
     (DAT_10683dd0 = (int *)(**(code **)(*DAT_106cb7c4 + 0x44))("mat_picmip"),
     (FUN_10135420("ai_ally_speech_manager",-1,'\x01'), DAT_105fda60 != (int *)0x0)) {
     (FUN_1017f620(this_00,"Player.Suggest_Grenade",0,0), *(char *)((int)this_00 + 0x47a2) == '\0'))
     (bVar1 = FUN_100a6de0(param_1,"func_water"), !bVar1)) {
     (bVar1 = FUN_100a6de0(param_1,"func_water_analog"), !bVar1)) {
     (bVar1 = FUN_100a6de0(param_1,"physics_prop"), bVar1)) {
     (bVar1 = FUN_100a6de0(param_1,"prop_dynamic_override"), !bVar1)) {
     (bVar1 = FUN_100a6de0(param_1,"prop_physics_override"), !bVar1)) {
     (bVar1 = FUN_100a6de0(param_1,"prop_talker"), !bVar1)) {
     (bVar2 = FUN_100a6de0(param_1,"func_water"), pcVar10 = Warning_exref, !bVar2)) {
     (bVar3 = FUN_100a6de0(param_1,"env_sprite_clientside"), !bVar3)) {
     (bVar6 = FUN_100a6de0(this_00,"func_breakable"), bVar6)) {
     (bVar6 = FUN_100a6de0(this_00,"func_breakable_surf"), bVar6)) {
     (cVar1 = (**(code **)(DAT_10681754[1] + 0x48))("stale.txt",&DAT_10323b20), cVar1 != '\0')) {
     (iVar1 = (**(code **)(*DAT_1067e240 + 0x3c))("DispatchPrecache",*(undefined4 *)(param_1 + 900))
     (iVar1 = _wcscmp(param_1,L"ACP"), iVar1 == 0)) {
     (iVar2 = (**(code **)(*DAT_107c09f0 + 0x2c))("#GameUI_Icons_XboxButton"), iVar2 != 0)) {
     (iVar2 = FUN_10061a60(param_1,(byte *)"mouth"), iVar2 != -1)) {
     (iVar2 = FUN_1042d9d0((char *)param_3[1],".wav"), iVar2 != 0)) {
     (iVar4 = (**(code **)(*DAT_1067e240 + 0x3c))("PostSpawn",*param_1), iVar4 != 0)) {
     (iVar5 = FUN_100ae3e0("particle/SmokeStack.vmt"), param_1[0x108] != iVar5)) {
     (local_8 = (undefined (**) [16])FUN_1039d560(this,(uint *)"door_options",0), piVar8 = local_14,
     (param_1 = (int *)(**(code **)(*piVar1 + 0xc))("instancebaseline"), pcVar3 = Error_exref,
     (piVar2 = (int *)FUN_10135420("env_cascade_light",-1,'\x01'), piVar2 != (int *)0x0)) {
     (piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("nav_blocked",0,0), piVar3 != (int *)0x0))
     (piVar3 = (int *)FUN_10135420("predicted_viewmodel",-1,'\x01'), piVar3 != (int *)0x0)) {
     (piVar3 = (int *)FUN_10135420("viewmodel",-1,'\x01'), piVar3 != (int *)0x0)) {
     (piVar4 = (int *)(**(code **)(*DAT_10795608 + 0x2c))("$additive",0,0), piVar4 != (int *)0x0)) {
     (piVar4 = (int *)(**(code **)(*DAT_10795608 + 0x2c))("$basetexture",0,0), piVar4 != (int *)0x0)
     (piVar5 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_cvar",0,0),
     (piVar5 = (int *)FUN_10135420("prop_retrieval_entity",-1,'\x01'), piVar5 != (int *)0x0)) {
     (piVar7 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("vote_failed",0,0), piVar7 != (int *)0x0))
     (piVar7 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("vote_passed",0,0), piVar7 != (int *)0x0))
     (puVar12 = FUN_10268340(param_1,(uint *)"usetitlesafe",0), puVar12 == (uint *)0x0)) {
     (puVar12 = FUN_1039d560(param_1,(uint *)"usetitlesafe",0), puVar12 == (uint *)0x0)) {
     (puVar12 = FUN_1042ee30(param_1,(uint *)"usetitlesafe",0), puVar12 == (uint *)0x0)) {
     (puVar2 = FUN_10267f50(pvVar1,"DebugOptions"), puVar2 != (uint *)0x0)) {
     (puVar2 = FUN_1042ee30(this,(uint *)"TextureData",0), puVar2 != (uint *)0x0)) {
     (puVar3 = FUN_10357140(this_00,"splash"), puVar3 != (undefined4 *)0x0)) {
     (puVar4 = FUN_1039d560(this_00,(uint *)"vehicle_properties",0), puVar4 != (uint *)0x0)) {
     (puVar4 = FUN_1042ee30(param_1,(uint *)"Hotspot",0), puVar4 != (uint *)0x0)) {
     (this = (int *)FUN_10135420("prop_ammo_bag",-1,'\x01'), this != (int *)0x0)) {
     (this_00 = (int *)FUN_10444d70(this,(byte *)"PnlBackground",0), this_00 != (int *)0x0)) {
     (this_00 = FUN_10357140(this,"FX_ElectricSpark"), this_00 != (undefined4 *)0x0)) {
     (this_01 = FUN_10357140(this_00,"CreateDebris 1"), this_01 != (undefined4 *)0x0)) {
     (uVar1 = FUN_102687d0(param_1,(uint *)"Width",0), (int)uVar1 <= DAT_10414c98)) {
     (uVar1 = FUN_10268900(*(void **)*param_1,(uint *)"propertysheet",0), uVar1 != 0)) {
     (uVar1 = FUN_10314250(DAT_10693b08,(uint *)"mafia_mode"), (char)uVar1 != '\0')) {
     (uVar1 = FUN_10399710((byte *)param_1,(byte *)"DisappearDist"), uVar1 == 0)) {
     (uVar1 = FUN_10399710(param_1,(byte *)"disableshadows"), uVar1 == 0)) {
     (uVar1 = FUN_10399710(param_1,(byte *)"renderamt"), uVar1 == 0)) {
     (uVar1 = FUN_10399710(param_1,(byte *)"rendercolor32"), uVar1 == 0)) {
     (uVar1 = FUN_1042f3a0(*(void **)*param_1,(uint *)"TIPropertySheet",0), uVar1 != 0)) {
     (uVar1 = FUN_1042f3a0(*(void **)*param_1,(uint *)"propertysheet",0), uVar1 != 0)) {
     (uVar2 = FUN_10399710((byte *)param_1,(byte *)"material"), uVar2 == 0)) {
     (uVar2 = FUN_10399710((byte *)param_1,(byte *)"shootmodel"), uVar2 == 0)) {
     (uVar2 = FUN_10399710((byte *)param_1,(byte *)"shootsounds"), uVar2 != 0)) {
     (uVar2 = FUN_10399710(pbVar1,(byte *)"break_breakable"), uVar2 == 0)) {
     (uVar2 = FUN_10399710(pbVar1,(byte *)"round_start"), uVar2 == 0)) {
     (uVar2 = FUN_1042df20(pbVar1,(byte *)"game_newmap"), uVar2 != 0)) {
     (uVar2 = FUN_1042df80(param_3,(byte *)"cancelselect"), uVar2 == 0)) {
     (uVar3 = FUN_10265f50(&DAT_105f8070,(byte *)"infested"), uVar3 != 0)) {
     (uVar4 = FUN_0040baf0((uint *)"scripts/items/attributes.ctx"), (char)uVar4 == '\0')) {
     (uVar4 = FUN_10165590(this,(uint *)"onfirstimpact",(byte *)"bloodsplat"), (char)uVar4 != '\0'))
     (uVar4 = FUN_10399710((byte *)param_1,(byte *)"disableshadows"), uVar4 == 0)) {
     (uVar4 = FUN_10399710((byte *)param_1,(byte *)"drawinfastreflection"), uVar4 == 0)) {
     (uVar4 = FUN_10399710((byte *)param_1,(byte *)"health"), uVar4 == 0)) {
     (uVar4 = FUN_10399710((byte *)param_1,(byte *)"renderamt"), uVar4 == 0)) {
     (uVar4 = FUN_10399710((byte *)param_1,(byte *)"rendercolor32"), uVar4 == 0)) {
     (uVar4 = FUN_1042df80(pbVar1,(byte *)"vote_cast"), uVar4 == 0)) {
     (uVar4 = FUN_104d8750(param_1,"GAME",'\0',&local_c), (char)uVar4 == '\0')) {
     (uVar5 = FUN_0040baf0((uint *)"scripts/items/item_manifest.ctx"), (char)uVar5 == '\0')) {
     (uVar5 = FUN_10265f50((byte *)param_1[0x105],(byte *)"LetToolsOverrideLoadGameEnts"),
     (uVar6 = FUN_10051510(param_1,(byte *)"prop_dynamic_override"), (char)uVar6 == '\0')) {
     (uVar6 = FUN_10314280(param_1,(uint *)"spawn_in_cars",'\x01'), (char)uVar6 != '\0')) {
     (uVar7 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01'), (char)uVar7 != '\0')) {
     (uVar8 = FUN_10314250(param_1,(uint *)"mafia_mode"), (char)uVar8 == '\0')) {
    "%s at %.0f %.0f %0.f uses model %s, which has no propdata which means it must be used on a prop_static. DELETED.\n"
    "%s at %.0f %.0f %0.f uses model %s, which has propdata which means that it be used on a prop_physics. DELETED.\n"
    "Adds an I/O connection that will call the named function when the specified output fires";
    "Continue an iteration over the list of entities, providing reference to a previously found entity"
    "ERROR: CPooledVBAllocator_ColorMesh\'s internal mesh (vertex buffer) should have been freed!\n"
    "ERROR: CSOAContainer_Serializable::Unserialize - DMX data does not represent a valid container!\n"
    "ERROR: CSOAContainer_Serializable::Unserialize - found wrong amount of constant data!\n";
    "Find entities by class name within a radius. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search"
    "Find entities by class name. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search"
    "Find entities by model name. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search"
    "Find entities by name within a radius. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search"
    "Find entities by name. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search"
    "Find entities by targetname. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search"
    "Find entities within a radius. Pass \'null\' to start an iteration, or reference to a previously found entity to continue a search"
    "Given a KeyValues object and a key name, find a KeyValues object associated with the key name";
    "Pure server: client has loaded extra file [%s]\\%s. File must be removed to play on this server."
    "Rejecting func_breakablesurf at (%2.2f, %2.2f, %2.2f).  Has multiple faces that aren\'t NODRAW.\n"
    "Retrieve the unique identifier used to refer to the entity within the scripting system";
    "\n*** A special note about internal error number 1007 ***\n\nExperience suggests that a common cause of i.e. 1007\nis unreliable memory or other hardware.  The 1007 assertion\njust happens to cross-check the results of huge numbers of\nmemory reads/writes, and so acts (unintendedly) as a stress\ntest of your memory system.\n\nI suggest the following: try compressing the file again,\npossibly monitoring progress in detail with the -vv flag.\n\n* If the error cannot be reproduced, and/or happens at different\n  points in compression, you may have a flaky memory system.\n  Try a memory-test program.  I have used Memtest86\n  (www.memtest86.com).  At the time of writing it is free (GPLd).\n  Memtest86 tests memory much more thorougly than your BIOSs\n  power-on test, and may find failures that the BIOS doesn\'t.\n\n* If the error can be repeatably reproduced, this is a bug in\n  bzip2, and I would very much like to hear about it.  Please\n  let me know, and, ideally, save a copy of the file causing the\n  problem -- without which I will be unable to investigate it.\n\n"
    "sv_pure:\n\nIf set to 1, the server will force all client files except the whitelisted ones (in pure_server_whitelist.txt) to match the server\'s files. \n\nIf set to 2, the server will force all client files to come from Steam (and it will not load pure_server_whitelist.txt).\n"
    (&DAT_106af800)[DAT_10418eb0] = "AABBTree_CopyDispData";
    (&DAT_106af800)[DAT_10418eb0] = "CopyCoreDispVertData";
    (**(code **)((int)*ppvVar1 + 0xac))("ConstraintBroken",0,0,0,uStack20,local_10,0xffffffff,0,0);
    (**(code **)((int)*this + 0x94))("vehiclescript","scripts/vehicles/helicopter.txt");
    (**(code **)(*(int *)((int)this + 0x1d8) + 8))("specgui",1);
    (**(code **)(*(int *)(param_1 + -0x1d8) + 0x360))("gametype",local_1008);
    (**(code **)(*(int *)(param_1 + -0x1d8) + 0x364))("roomname",(int)puVar7 + 5);
    (**(code **)(*(int *)PTR_DAT_106ac350 + 8))("Slash.Generic",param_2);
    (**(code **)(*(int *)PTR_PTR_106b2a68 + 0x10))("ep2_groggy",puVar4);
    (**(code **)(*(int *)PTR_PTR_106b2a68 + 0x10))("episodic_intro",puVar4);
    (**(code **)(*(int *)PTR_PTR_106b2a68 + 0x10))("episodic_stun",puVar4);
    (**(code **)(*(int *)param_1[0x67] + 0x94))("Disconnect by server.\n");
    (**(code **)(*(int *)param_1[0x700] + 0x10))(uVar2,"session",local_410);
    (**(code **)(*(int *)param_1[0x700] + 0x10))(uVar2,"steamid",local_410);
    (**(code **)(*(int *)param_1[0x700] + 0x10))(uVar2,"version",local_410);
    (**(code **)(*(int *)param_1[0x93] + 0x388))("#GameUI_Icons_DOWN_ARROW");
    (**(code **)(*(int *)param_1[0x94] + 0x388))("#GameUI_Icons_UP_ARROW");
    (**(code **)(*(int *)param_1[0xa4] + 900))("TimeUseTick");
    (**(code **)(*(int *)param_1[0xa9] + 0x388))("console");
    (**(code **)(*(int *)param_1[0xaa] + 0x388))("console");
    (**(code **)(*(int *)param_1[0xab] + 0x388))("console");
    (**(code **)(*(int *)piVar9[0xba] + 0xd4))("bug.zip");
    (**(code **)(**(int **)((int)param_1 + 0x280) + 0x388))("#GameUI_RefreshLogin_Login");
    (**(code **)(**(int **)((int)param_1 + 0x280) + 0x49c))("Login");
    (**(code **)(**(int **)((int)this + 0x19dc) + 0x354))("FileNameLabel",0);
    (**(code **)(**(int **)((int)this + 0x19dc) + 0x354))("FolderUpButton",0);
    (**(code **)(**(int **)((int)this + 0x19dc) + 0x354))("FullPathEdit",0);
    (**(code **)(**(int **)((int)this + 0x19dc) + 0x354))("LookInLabel",0);
    (**(code **)(**(int **)((int)this + 0x19dc) + 0x354))("NewFolderButton",0);
    (**(code **)(**(int **)((int)this + 0x19dc) + 0x354))("OpenInExplorerButton",0);
    (**(code **)(**(int **)((int)this + 0x1e8) + 0x388))("#error");
    (**(code **)(**(int **)((int)this + 0x1e8) + 0x388))("Disconnected");
    (**(code **)(**(int **)((int)this + 0x1ec) + 900))("headshot");
    (**(code **)(**(int **)((int)this + 0x228) + 0x360))("savereplay",local_234);
    (**(code **)(**(int **)((int)this + 0x234) + 0x388))("Default");
    (**(code **)(**(int **)((int)this + 0x248) + 0x49c))("Extend");
    (**(code **)(**(int **)((int)this + 0x274) + 0x388))("No File Loaded");
    (**(code **)(**(int **)((int)this + 0x278) + 900))("<enter description here>");
    (**(code **)(**(int **)((int)this + 0x27c) + 0x388))("#MessageBox_OK");
    (**(code **)(**(int **)((int)this + 0x280) + 0x388))("#GameUI_Close");
    (**(code **)(**(int **)((int)this + 0x280) + 0x49c))("Close");
    (**(code **)(**(int **)((int)this + 0x290) + 0x49c))("CopyToClipboard");
    (**(code **)(**(int **)((int)this + 0x410) + 0x360))("FailedReason",local_708);
    (**(code **)(**(int **)((int)this + 0xa8) + 0xc))(*(int **)((int)this + 0xa8),"expecting {");
    (**(code **)(**(int **)((int)this + 0xa8) + 0xc))(*(int **)((int)this + 0xa8),"expecting {\n");
    (**(code **)(**(int **)(param_1 + 0x238) + 0x33c))("Close","#SysMenu_Close","Close",param_1,0);
    (**(code **)(**(int **)(param_1 + 0x290) + 900))("TimeUseTick");
    (**(code **)(**(int **)(param_1 + 0x2a0) + 0x328))("#TextEntry_Copy",puVar3,param_1,0);
    (**(code **)(**(int **)(param_1 + 0x2a0) + 0x328))("#TextEntry_Cut",puVar3,param_1,0);
    (**(code **)(**(int **)(param_1 + 0x2a0) + 0x328))("#TextEntry_Paste",puVar3,param_1,0);
    (**(code **)(**(int **)(param_1 + 0x3c) + 0x14))("___clientsideitemsplaceholder1___");
    (**(code **)(**(int **)(param_1 + 0x478) + 0xc))(uVar4,"Authorization",puVar3);
    (**(code **)(**(int **)(param_1 + 0xd8) + 0x20))(1,"PureServerWhitelist",local_24,local_34[0]);
    (**(code **)(**(int **)(param_1 + 0xd8) + 0x20))(1,"QueryPort",4,&local_8);
    (**(code **)(*DAT_106466ac + 0x15c))("cfg/cpu_level_360.ekv");
    (**(code **)(*DAT_106466ac + 0x15c))("cfg/cpu_level_360_ss.ekv");
    (**(code **)(*DAT_106466ac + 0x15c))("cfg/gpu_level_360.ekv");
    (**(code **)(*DAT_106466ac + 0x15c))("cfg/gpu_mem_level_360.ekv");
    (**(code **)(*DAT_106466ac + 0x15c))("cfg/mem_level_360.ekv");
    (**(code **)(*DAT_106466ac + 0x18))("scripts/sentences.txt",0);
    (**(code **)(*DAT_106466ac + 0x254))("Steam Server Connection Reset by Peer");
    (**(code **)(*DAT_106466ac + 0x94))("autosave\n");
    (**(code **)(*DAT_106466ac + 0x94))("quit\n");
    (**(code **)(*DAT_106466ac + 0x94))("quit\n",iVar3);
    (**(code **)(*DAT_106466ac + 0xa0))(DAT_106466ac,*(undefined4 *)((int)pvVar2 + 0x18),"notarget")
    (**(code **)(*DAT_106466ac + 0xa0))(DAT_106466ac,*(undefined4 *)(iVar4 + 0x18),"cancelselect");
    (**(code **)(*DAT_106466ac + 0xc0))(DAT_106466ac,0x1f,"Exit: YawOffset %.0f",(double)local_c);
    (**(code **)(*DAT_106466b4 + 0x54))("reslists","DEFAULT_WRITE_PATH");
    (**(code **)(*DAT_106466d0 + 0xc))(this_00,"hltv_cameraman",1);
    (**(code **)(*DAT_106466d0 + 0xc))(this_00,"hltv_rank_camera",1);
    (**(code **)(*DAT_106466d0 + 0xc))(this_00,"hltv_rank_entity",1);
    (**(code **)(*DAT_106466d0 + 0xc))(this_00,"player_death",1);
    (**(code **)(*DAT_106466d0 + 0xc))(this_00,"player_hurt",1);
    (**(code **)(*DAT_106466d0 + 0xc))(this_00,"round_end",1);
    (**(code **)(*DAT_106466d0 + 0xc))(this_00,"round_start",1);
    (**(code **)(*DAT_1067e240 + 0x68))(0,"player",&local_10);
    (**(code **)(*DAT_1067e240 + 0x68))(0,"player",&local_c);
    (**(code **)(*DAT_10681754 + 0x4c))("SAVE\\modeswitchsave.sav",0);
    (**(code **)(*DAT_10681754 + 0x4c))("SAVE\\modeswitchsave.tga",0);
    (**(code **)(*DAT_10681754 + 0x4c))((int)puVar5 + 5,"DEFAULT_WRITE_PATH");
    (**(code **)(*DAT_10681754 + 0x4c))(local_108,"DEFAULT_WRITE_PATH");
    (**(code **)(*DAT_10681754 + 0x54))("DownloadLists",&DAT_1032376c);
    (**(code **)(*DAT_10681754 + 0x54))("screenshots","PROFILE");
    (**(code **)(*DAT_10681754 + 0x54))("vprof",0);
    (**(code **)(*DAT_10681754 + 0x54))(local_270,"DEFAULT_WRITE_PATH");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"aniso,",piVar2,iVar7,pcVar12);
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"backbuffer,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"cpu_level,",piVar2,iVar7,pcVar12);
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"csm enabled,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"date,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"demofile,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"device id,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"driver,",piVar2,iVar7,pcVar12);
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"fps variability,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"fxaa,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"height,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"numframes,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"picmip,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"total sec,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"vendor id,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"vsync,");
    (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,uVar2,"\"pfm\" \"1\"\n");
    (**(code **)(*DAT_106ac638 + 0x40))(pauVar3,"GameHeader",param_2,0,DAT_104177e8,DAT_104177ec);
    (**(code **)(*DAT_106ad118 + 0x10))(L"Valve001",*(undefined4 *)(param_1 + 0xc));
    (**(code **)(*DAT_106cb7e0 + 0x24))("resource/l4d360ui_%language%.txt",&DAT_10323b20,1);
    (**(code **)(*DAT_106cb7e8 + 0x40))("bugconsole.txt",&DAT_1032376c,local_1e4,0x104);
    (**(code **)(*DAT_106cb7e8 + 0x4c))(param_1,"PROFILE");
    (**(code **)(*DAT_106cb7f4 + 0x48))("HostState::GameShutdown");
    (**(code **)(*DAT_106cb7f4 + 0x48))("HostState::GameShutdown(active)");
    (**(code **)(*DAT_106cb7f8 + 0x148))("particle");
    (**(code **)(*DAT_106cb814 + 8))("CPooledVBAllocator_ColorMesh::Init");
    (**(code **)(*DAT_106cb814 + 8))("DispInfo_LoadDisplacements");
    (**(code **)(*DAT_106cb870 + 0x84))(&DAT_1033fb30,"explorer.exe",local_340);
    (**(code **)(*DAT_106cb870 + 0xc))(&DAT_1033fb30,"steam://store_demo/220");
    (**(code **)(*DAT_106cb870 + 0xc))(&DAT_1033fb30,"steam://store_demo/400");
    (**(code **)(*DAT_10730cc4 + 0x1bc))("gameui_hide");
    (**(code **)(*DAT_10730cc4 + 0x1bc))("joy_cfg_custom");
    (**(code **)(*DAT_10730cc4 + 0x1bc))("open_econui");
    (**(code **)(*DAT_10730cc4 + 0x1c0))("host_writeconfig_forced\n");
    (**(code **)(*DAT_10730cc4 + 0x1c0))("loadout_READY\n");
    (**(code **)(*DAT_10730cc4 + 0x1c0))("mat_savechanges\n");
    (**(code **)(*DAT_10730cc4 + 0x1c0))("mat_savechanges\n",uVar4);
    (**(code **)(*DAT_10730cc4 + 0x1c0))("unbindall\n");
    (**(code **)(*DAT_10730cc4 + 0x28))("escape");
    (**(code **)(*DAT_10730cc4 + 0x28))("gameui_hide");
    (**(code **)(*DAT_10730cc4 + 0x28))("reload_weapondata_server");
    (**(code **)(*DAT_10730cc4 + 0x28))("startupmenu");
    (**(code **)(*DAT_10730cc4 + 0x28))("voicerecord_toggle off\n");
    (**(code **)(*DAT_10730cc4 + 0x28))("voicerecord_toggle on\n");
    (**(code **)(*DAT_10730cd0 + 0x20))(DAT_10730cd0,&local_20,param_2 * 2.0,"%s::%f",local_140);
    (**(code **)(*DAT_10730ce4 + 0x54))(&DAT_1050bd60,"PROFILE");
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"game_newmap",0);
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"gameinstructor_draw",0);
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"gameinstructor_nodraw",0);
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"map_transition",0);
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"player_death",0);
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"player_disconnect",0);
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"player_team",0);
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"round_end",0);
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"round_start",0);
    (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"set_instructor_group_enabled",0);
    (**(code **)(*DAT_107b55f4 + 0xc))(&local_120,"BlobulatorJobs");
    (**(code **)(*DAT_107c09f0 + 0x24))("resource/platform_%language%.txt",0,0);
    (**(code **)(*DAT_107c09f0 + 0x24))("resource/vgui_%language%.txt",0,0);
    (**(code **)(*DAT_107c09f8 + 0x2c))("tacint","PLATFORM",1);
    (**(code **)(*DAT_107c09f8 + 0x2c))(local_204,"CONFIG",1);
    (**(code **)(*DAT_107c09f8 + 0x54))(&DAT_104eefb3,"CONFIG");
    (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"\t\"%s\"\r\n",pcVar2);
    (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"\t}\r\n\r\n");
    (**(code **)(*DAT_107c0a6c + 0x90))(*(int *)(param_1 + 0x3cc),"vgui/dmg_indicator",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(iVar4,"vgui/hud/icon_arrow_down",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(iVar4,"vgui/hud/icon_arrow_plain",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(iVar5,"vgui/controller_layout_sticks",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(iVar5,"vgui/controller_layout_sticks_look",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(iVar5,"vgui/controller_layout_sticks_move",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(iVar5,"vgui/controller_stick_callouts_360",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(iVar5,"vgui/hud/icon_info",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(iVar5,"vgui/hud/spinner_saving",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(iVar5,"vgui/loadbar_dots",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(uVar1,"icon_lobby",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"hud/leaderboard_dead",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/hud/icon_arrow_right",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(uVar3,"vgui/icon_arrow",1,0);
    (**(code **)(*DAT_107c0a6c + 0x90))(uVar3,"vgui/icon_arrow_down",1,0);
    (**(code **)(*param_1 + 0x28))("address",&DAT_1043677a);
    (**(code **)(*param_1 + 0x28))("networkid",&DAT_1043677a);
    (**(code **)(*param_1 + 0x28))("reason",&DAT_1043677a);
    (**(code **)(*param_1 + 0x2c))(local_108,"BASE_PATH",1);
    (**(code **)(*param_1 + 0x31c))("resource/BugUIPanel_Public.res",0,0,0);
    (**(code **)(*param_1 + 0x35c))("curround",uVar4 + 1);
    (**(code **)(*param_1 + 0x35c))("curstage",uVar4 + 1);
    (**(code **)(*param_1 + 0x35c))("killLimit",iVar2);
    (**(code **)(*param_1 + 0x35c))("maxstage",uVar4);
    (**(code **)(*param_1 + 0x388))("#VAC_ConnectionRefusedTitle",1);
    (**(code **)(*param_1 + 0x388))("< unset >");
    (**(code **)(*param_1 + 0x604))("overview",0,0);
    (**(code **)(*param_1 + 0x604))("specgui",0,0);
    (**(code **)(*param_1 + 0x604))("specmenu",0,0);
    (**(code **)(*param_1 + 0x6c))("models/props_construction/gas_tank-1.mdl");
    (**(code **)(*param_1 + 0x6c))("models/props_construction/gas_tank-2.mdl");
    (**(code **)(*param_1 + 0x6c))("models/vehicles/cars/truck-5_destroyed_p2.mdl",pfVar19);
    (**(code **)(*param_1 + 0x88))("autosave");
    (**(code **)(*param_1 + 0x88))("autosavedangerous");
    (**(code **)(*param_1 + 0xc))(param_1,"expecting {\n");
    (**(code **)(*param_2 + 0xc))("elems",*this,&local_1c,&local_58,1);
    (**(code **)(*piVar1 + 0x128))("QuitGame_NoConfirm");
    (**(code **)(*piVar1 + 0x18))("CurDSoundDevice",param_1);
    (**(code **)(*piVar1 + 0x20))("scores",puVar2);
    (**(code **)(*piVar1 + 0x34))("distance",param_3);
    (**(code **)(*piVar1 + 0x34))("index",*(undefined4 *)(param_1 + 0x28));
    (**(code **)(*piVar1 + 0x34))("ineye",param_6 != '\0');
    (**(code **)(*piVar1 + 0x34))("subject",iVar3);
    (**(code **)(*piVar1 + 0x34))("target1",param_1);
    (**(code **)(*piVar1 + 0x34))("target2",param_2);
    (**(code **)(*piVar1 + 0x34))("theta",param_5);
    (**(code **)(*piVar1 + 0x34))("userid",*(undefined4 *)(param_1 + 0x30));
    (**(code **)(*piVar1 + 0x34))("userid",uVar2);
    (**(code **)(*piVar1 + 0x40))("hint_name",puVar2);
    (**(code **)(*piVar1 + 0x40))("mapname",local_44);
    (**(code **)(*piVar1 + 0x40))("reason",&DAT_1035470c);
    (**(code **)(*piVar1 + 0xac))("InPass",this,this,0,uStack20,local_10,0xffffffff,0,0);
    (**(code **)(*piVar1 + 0xac))("RollStatsCrawl",0,0,0,uStack20,local_10,0xffffffff,0,0);
    (**(code **)(*piVar1 + 0xc))("-usedevshotsfile",&local_8);
    (**(code **)(*piVar1 + 0xc))("-usereslistfile",&local_8);
    (**(code **)(*piVar1 + 8))("scores",1);
    (**(code **)(*piVar1 + 900))("#gameui_paused");
    (**(code **)(*piVar10 + 0x18))("-startmap",puVar7);
    (**(code **)(*piVar11 + 0x34))("userid",uVar9);
    (**(code **)(*piVar13 + 0x34))("priority",1);
    (**(code **)(*piVar13 + 0x34))("userid",param_2);
    (**(code **)(*piVar16 + 0x34))("kicked",uVar13);
    (**(code **)(*piVar16 + 0x34))(piVar16,"Kicked and banned");
    (**(code **)(*piVar16 + 0x40))("duration",local_190);
    (**(code **)(*piVar2 + 0x18))("elems",*puVar1,&local_1c,&local_58,1);
    (**(code **)(*piVar2 + 0x30))("hint_allow_nodraw_target",*(undefined *)((int)this + 0x3ec));
    (**(code **)(*piVar2 + 0x30))("hint_forcecaption",*(undefined *)((int)this + 0x3e1));
    (**(code **)(*piVar2 + 0x30))("hint_local_player_only",local_10);
    (**(code **)(*piVar2 + 0x30))("hint_nooffscreen",*(undefined *)((int)this + 0x3e0));
    (**(code **)(*piVar2 + 0x34))("damagebits",*(undefined4 *)(param_1 + 0x48));
    (**(code **)(*piVar2 + 0x34))("entindex",iVar9,uVar14,pvVar16);
    (**(code **)(*piVar2 + 0x34))("entindex_killed",iVar3);
    (**(code **)(*piVar2 + 0x34))("hint_activator_userid",uVar7);
    (**(code **)(*piVar2 + 0x34))("hint_flags",uVar12 | uVar3 | uVar4 | uVar11);
    (**(code **)(*piVar2 + 0x34))("hint_target",iVar9);
    (**(code **)(*piVar2 + 0x34))("hint_timeout",*(undefined4 *)((int)this + 0x3bc));
    (**(code **)(*piVar2 + 0x34))("password",0);
    (**(code **)(*piVar2 + 0x34))("subject",iVar4);
    (**(code **)(*piVar2 + 0x3c))("hint_icon_offset",*(undefined4 *)((int)this + 0x3d4));
    (**(code **)(*piVar2 + 0x3c))("hint_range",*(undefined4 *)((int)this + 0x3d8));
    (**(code **)(*piVar2 + 0x40))("hint_activator_caption",param_1);
    (**(code **)(*piVar2 + 0x40))("hint_binding",puVar10);
    (**(code **)(*piVar2 + 0x40))("hint_caption",puVar10);
    (**(code **)(*piVar2 + 0x40))("hint_color",local_90);
    (**(code **)(*piVar2 + 0x40))("hint_gamepad_binding",puVar10);
    (**(code **)(*piVar2 + 0x40))("hint_icon_offscreen",puVar10);
    (**(code **)(*piVar2 + 0x40))("hint_icon_onscreen",puVar10);
    (**(code **)(*piVar2 + 0x40))("hint_name",puVar10);
    (**(code **)(*piVar2 + 0x40))("hint_replace_key",puVar10);
    (**(code **)(*piVar2 + 0x40))("hostname",pcVar8);
    (**(code **)(*piVar2 + 0x40))("mapname",local_44);
    (**(code **)(*piVar2 + 0x40))("mapname",param_1);
    (**(code **)(*piVar2 + 0x40))("reason",param_1);
    (**(code **)(*piVar2 + 0x40))(&DAT_103308b4,"WIN32");
    (**(code **)(*piVar2 + 0x740))("weapon_bugbait",0);
    (**(code **)(*piVar2 + 0x94))("targetname","cascadelight");
    (**(code **)(*piVar2 + 0xc))(piVar2,"expecting {\n");
    (**(code **)(*piVar2 + 8))("scores",0);
    (**(code **)(*piVar3 + 0x14))("-makereslists");
    (**(code **)(*piVar3 + 0x14))("-norebuildaudio");
    (**(code **)(*piVar3 + 0x14))("-startmap");
    (**(code **)(*piVar3 + 0x14))("___clientsideitemsplaceholder0___");
    (**(code **)(*piVar3 + 0x18))("-autoquit",0);
    (**(code **)(*piVar3 + 0x18))("-noasync",0);
    (**(code **)(*piVar3 + 0x18))("-nomusic",0);
    (**(code **)(*piVar3 + 0x18))("-norebuildaudio",0);
    (**(code **)(*piVar3 + 0x18))("-nosound",0);
    (**(code **)(*piVar3 + 0x248))(0xfff5940f,"EntityGlowEffects");
    (**(code **)(*piVar3 + 0x34))("blocked",1);
    (**(code **)(*piVar3 + 0x350))("BtnBrightness",~*(byte *)(iVar4 + 0x34) & 1);
    (**(code **)(*piVar3 + 0x388))("#Extend");
    (**(code **)(*piVar3 + 0x40))("hostname",*(undefined4 *)(local_8 + 0x24));
    (**(code **)(*piVar3 + 0x40))("mapname",local_44);
    (**(code **)(*piVar3 + 0xac))("connect",(int)puVar5 + 5);
    (**(code **)(*piVar3 + 0xac))("status",(int)puVar5 + 5);
    (**(code **)(*piVar3 + 0xc))("-startmap",&local_8);
    (**(code **)(*piVar3 + 0xc))("-tools",0);
    (**(code **)(*piVar3 + 0xf0))("TLK_DISSOLVESCREAM");
    (**(code **)(*piVar3 + 8))("AlphaThreshold",*(undefined *)(param_3 + 10));
    (**(code **)(*piVar3 + 8))("DXT1UseAlpha",param_3[9]);
    (**(code **)(*piVar3 + 8))("UseAdaptiveWeighting",param_3[8]);
    (**(code **)(*piVar3 + 8))("scores",*(undefined *)(param_1 + 0xa2));
    (**(code **)(*piVar3 + 8))("scores",0);
    (**(code **)(*piVar4 + 0x18))("-jlobby",(int)puVar5 + 5);
    (**(code **)(*piVar4 + 0x34))("attacker",local_8);
    (**(code **)(*piVar4 + 0x34))("customkill",*(undefined4 *)(param_2 + 0x4c));
    (**(code **)(*piVar4 + 0x34))("holiday",DAT_1068a2d4);
    (**(code **)(*piVar4 + 0x34))("index",piVar1);
    (**(code **)(*piVar4 + 0x34))("priority",7);
    (**(code **)(*piVar4 + 0x34))("round",*(undefined4 *)((int)this + 0x78));
    (**(code **)(*piVar4 + 0x34))("stage",*(undefined4 *)((int)this + 0x7c));
    (**(code **)(*piVar4 + 0x34))("userid",uVar5);
    (**(code **)(*piVar4 + 0x350))("BtnBrightness",~*(byte *)(iVar6 + 0x34) & 1);
    (**(code **)(*piVar4 + 0x350))("BtnCloud",0);
    (**(code **)(*piVar4 + 0x49c))("Cancel");
    (**(code **)(*piVar4 + 0x8ec))("Bomb Defused",3);
    (**(code **)(*piVar4 + 0xac))("InPass",param_1,param_1,0,uStack20,local_10,0xffffffff,0,0);
    (**(code **)(*piVar5 + 0x34))("entityid",param_1);
    (**(code **)(*piVar5 + 0x34))("health",iVar3);
    (**(code **)(*piVar5 + 0x34))("initiator",*(undefined4 *)((int)this + 0x490));
    (**(code **)(*piVar5 + 0x34))("priority",5);
    (**(code **)(*piVar5 + 0x34))("userid",uVar6);
    (**(code **)(*piVar5 + 0x34))("vote_option",uVar6);
    (**(code **)(*piVar5 + 0x40))("cvarname",uVar6);
    (**(code **)(*piVar5 + 0x40))("issue",local_21c);
    (**(code **)(*piVar5 + 0x40))("param1",local_11c);
    (**(code **)(*piVar5 + 0x94))("additionalequipment",pcVar9);
    (**(code **)(*piVar5 + 900))("spinner");
    (**(code **)(*piVar6 + 0x30))("practice",local_14);
    (**(code **)(*piVar6 + 0x34))("target",param_2);
    (**(code **)(*piVar6 + 0x34))("theta",(int)local_1c);
    (**(code **)(*piVar6 + 900))("mm/new/bullet_count");
    (**(code **)(*piVar6 + 900))("mm/new/bullet_terro");
    (**(code **)(*piVar7 + 0x334))("None","None",puVar6,param_1,0);
    (**(code **)(*piVar7 + 0x34))("index",*(undefined4 *)((int)param_1 + 0x30));
    (**(code **)(*piVar7 + 0x40))("details",local_208);
    (**(code **)(*piVar7 + 0x40))("param1",local_108);
    (**(code **)(*this + 0x31c))("resource/LoadingDialogNoBannerSingle.res",0,0,0);
    (**(code **)(*this + 0x31c))("resource/LoadingDialogVAC.res");
    (**(code **)(*this + 0x31c))("resource/LoadingDiscPanel.res",0,0,0);
    (**(code **)(*this + 0x33c))("SecondaryProgressLabel",param_1);
    (**(code **)(*this + 0x350))("BtnSetupMicrophone",0);
    (**(code **)(*this + 0x350))("BtnSetupMicrophone",1);
    (**(code **)(*this + 0x350))("DrpVoicePTT",0);
    (**(code **)(*this + 0x350))("DrpVoicePTT",1);
    (**(code **)(*this + 0x350))("DrpVoicePTT",uVar7);
    (**(code **)(*this + 0x350))("SldBrightness",*(char *)((int)this + 0x9f0) == '\0');
    (**(code **)(*this + 0x354))("ControllerImageCallouts",local_10);
    (**(code **)(*this + 0x354))("Normal_Look",bVar2);
    (**(code **)(*this + 0x354))("Normal_Move",bVar2);
    (**(code **)(*this + 0x354))("Southpaw_Look",param_1);
    (**(code **)(*this + 0x354))("Southpaw_Move",param_1);
    (**(code **)(*this + 0x364))("combo_label",&DAT_104eefb3);
    (**(code **)(*this + 0x388))("#GameUI_Disconnected",1);
    (**(code **)(*this + 0x388))(0,"System",param_2,param_3,param_4,param_5);
    (**(code **)(*this + 0x6c))("models/props_misc/portable_ballistic_wall-1.mdl");
    (**(code **)(*this + 0x914))("weapon_knife",piVar2,0);
    (**(code **)(*this + 0x94))("EngineForce","800000");
    (**(code **)(*this + 0x94))("VehicleScript","scripts/vehicles/smallcar.txt");
    (**(code **)(*this + 0x94))("WheelDamp",&DAT_1049cdec);
    (**(code **)(*this + 0x94))("WheelFriction",&DAT_10438794);
    (**(code **)(*this + 0x94))("WheelFrictionAngular",&DAT_104f278c);
    (**(code **)(*this + 0x94))("WheelRadius",&DAT_104fa94c);
    (**(code **)(*this + 0x94))("WheelSpring",&DAT_10469128);
    (**(code **)(*this + 0x94))("WheelSpringLength",&DAT_1049bd98);
    (**(code **)(*this + 0x94))("WheelTurnSpeed",&DAT_104fa9b0);
    (**(code **)(*this + 0x94))("additionalequipment",pcVar10);
    (**(code **)(*this + 0x94))("model",param_1);
    (**(code **)(*this + 0x94))("origin",(int)puVar4 + 5);
    (**(code **)(*this + 0x94))("solid",&DAT_104b8550);
    (**(code **)(*this + 0x94))("vehiclescript","scripts/vehicles/forklift-1.txt");
    (**(code **)(*this + 0x94))("vehiclescript","scripts/vehicles/yacht-1.txt");
    (**(code **)(*this + 0xc4))(this,param_1,"#Valve_Reject_Bad_Password");
    (**(code **)(*this + 900))("items/default");
    (**(code **)(*this + 900))("items/hands/default");
    (**(code **)(*this + 900))("items/holster/holster1");
    (**(code **)(*this + 900))("items/requisitions/grenade");
    (**(code **)(*this + 900))("items/requisitions/smoke");
    (**(code **)(*this_00 + 0x94))("model",param_1);
    (**(code **)(*this_00 + 0x94))("model",puVar2);
    (**(code **)(*this_00 + 0x94))("solid",&DAT_104b8550);
    (**(code **)(*this_01 + 0x94))("model",(int)puVar9 + 5);
    (**(code **)(*this_01 + 0x94))("vehiclescript",(int)puVar9 + 5);
    (**(code **)(iVar1 + 0x34))("userid",uVar3);
    (**(code **)(iVar1 + 0x388))("#Title_Gift");
    (**(code **)(iVar1 + 0x40))("networkid",uVar3);
    (**(code **)(iVar2 + 0x338))(0,"award","#Score_Award",0,uVar1);
    (**(code **)(iVar2 + 0x338))(0,"killdeath","#Score_KillDeath",0,uVar1);
    (**(code **)(iVar2 + 0x338))(0,"level",&DAT_104eefb3,0x24,uVar1);
    (**(code **)(iVar2 + 0x338))(0,"points","#Score_Score",0,uVar1);
    (**(code **)(iVar2 + 0x338))(0,&DAT_104f4a20,"#Score_Name",0,uVar1);
    (**(code **)(iVar3 + 0x34))("dedicated",cVar1 != '\0');
    (**(code **)(iVar3 + 0x34))("maxplayers",uVar7);
    (**(code **)(iVar3 + 0x40))("address",pcVar8);
    (**(code **)(iVar3 + 0x40))("mapname",uVar7);
    (**(code **)(iVar6 + 0x338))(*(undefined4 *)((int)local_8 + 500),"deaths",&DAT_104eefb3,0,uVar4)
    (**(code **)(iVar6 + 0x40))("networkid",puVar14);
    (**(code **)(iVar7 + 0x338))(*(undefined4 *)((int)local_8 + 500),"frags",&DAT_104eefb3,0,uVar4);
    (**(code **)*param_1)(3,"HudChat.Message",param_2,param_3,0);
    (***(code ***)PTR_DAT_106aeda8)("(mapname)",param_1);
    (**ppcVar2)("(time_float)",puVar6);
    (**ppcVar2)("(time_int)",puVar6);
    (*local_8)("udp/ip  :  %s:%i os(%s) type(%s)\n",uVar4);
    (*pcVar10)("Door %s using obsolete \'Start Open\' spawnflag with \'Spawn Position\' set to \'Open\'. Reverting to old behavior.\n"
    (*pcVar10)("Public Tags   : %s\n",local_404);
    (*pcVar10)("TACTICAL TV:  port %i, delay %.1fs\n",uVar4);
    (*pcVar10)("map     : %s at: %d x, %d y, %d z\n",&DAT_10641148,(int)DAT_104f6208);
    (*pcVar12)("ShowWinPanel::Scoreable: %s\n",puVar9);
    (*pcVar13)("***ERROR PARSING VEHICLE SCRIPT :%s:\n",param_1);
    (*pcVar13)("Inheriting from :%s:\n",pcVar12);
    (*pcVar3)("%s (%s) has an invalid spotlight width %.1f (max %.1f).\n",puVar2,pcVar1);
    (*pcVar3)(DAT_104c2ea8,0,DAT_10414064,"\n%*sStart Stacks:\n",1,&DAT_1032bf90);
    (*pcVar6)("NULL\n");
    (*pcVar8)("%20s (%.1f queued queries per) Job Restarts\n",pcVar5,uVar15,uVar16);
    (*pcVar8)("%20s Job Restart\n",pcVar5);
    (*pcVar8)("%20s Query Reciprocal Throughput (%s cancels)\n",pcVar6,pcVar5);
    (*pcVar8)("Events: %12llu key not found.\n",*(uint *)((int)this + 0x28),
    (*pcVar8)("Gathering Room Settings: [%s]\nFriendly Fire: %i\nPRO: %s\nHC Mode: %s\nKill Limit: %i\n"
    (*pcVar8)("Ticks: %13s Query latency\n",pcVar5);
    (*pcVar8)("Ticks: No Query Latency data\n");
    (*pcVar8)("Time Limit: %i\nGame Mode: %i\nWeapon Filters: %i\nNo Map Switch: %s\nBot Count: %i\nEND ROOM SETTINGS\n"
    (*pcVar8)("setting driver!\n");
    (*pcVar9)("Error: Parsing soundmixers.txt, mixgroup rules incomplete!\n");
    *(char **)(&DAT_1004ff40 + DAT_10052d5c * 8) = "LBH_cur";
    *(char **)(&DAT_1004ff40 + DAT_10052d5c * 8) = "MBH_cur";
    *(char **)((int)param_4 + 0x5c) = "**studio**";
    *(char **)((int)puVar24 + -4) = "Blocked by player on train!\n";
    *(char **)((int)puVar24 + -4) = "Ignoring player blocking train!\n";
    *(char **)(iVar3 + 0x6afa4) = "insufficient lookahead";
    *(char **)(param_1 + 0x14d0) = "rain_storm";
    *(char **)(param_1 + 0x14d4) = "rain_storm_screen";
    *(char **)(param_1 + 0x14d8) = "ash_outer";
    *(char **)(param_1 + 0x14d8) = "rain_outer";
    *(char **)(param_1 + 0x14d8) = "rain_storm_outer";
    *(char **)(param_1 + 0x14d8) = "snow_outer";
    *(char **)(param_1 + 0x444) = "NCHEM";
    *(char **)(param_1 + 0x444) = "NFIRE";
    *(char **)(param_1 + 0x44c) = "ECHEM";
    *(char **)(param_1 + 0x44c) = "EFIRE";
    *(char **)(param_1 + 0x6afa4) = "bad pack level";
    *(char **)(param_1 + 0x6afa4) = "ct_tally: bad match";
    *(char **)(param_1 + 0x6afa4) = "inconsistent bit counts";
    *(char **)(param_5 + 0x18) = "incomplete dynamic bit lengths tree";
    *(char **)(param_5 + 0x18) = "oversubscribed dynamic bit lengths tree";
    *(char **)(param_9 + 0x18) = "incomplete literal/length tree";
    *(char **)(this + 0x30) = "MainThreadNoWait";
    *ppcVar1 = "";
    *ppcVar2 = "AddBroadcastTeamTarget";
    *ppcVar2 = "ConnectOutput";
    *ppcVar2 = "CreateByClassname";
    *ppcVar2 = "Destroy";
    *ppcVar2 = "DisconnectOutput";
    *ppcVar2 = "EmitSound";
    *ppcVar2 = "EstimateLength";
    *ppcVar2 = "EyePosition";
    *ppcVar2 = "FindByClassname";
    *ppcVar2 = "FindByClassnameNearest";
    *ppcVar2 = "FindByClassnameWithin";
    *ppcVar2 = "FindByModel";
    *ppcVar2 = "FindByName";
    *ppcVar2 = "FindByNameNearest";
    *ppcVar2 = "FindByNameWithin";
    *ppcVar2 = "FindByTarget";
    *ppcVar2 = "FindInSphere";
    *ppcVar2 = "FindKey";
    *ppcVar2 = "FindNamedEntity";
    *ppcVar2 = "First";
    *ppcVar2 = "FirstMoveChild";
    *ppcVar2 = "GetAngles";
    *ppcVar2 = "GetAngularVelocity";
    *ppcVar2 = "GetAttachmentAngles";
    *ppcVar2 = "GetAttachmentOrigin";
    *ppcVar2 = "GetBoundingMaxs";
    *ppcVar2 = "GetBoundingMins";
    *ppcVar2 = "GetCenter";
    *ppcVar2 = "GetClassname";
    *ppcVar2 = "GetCurrentScene";
    *ppcVar2 = "GetFirstSubKey";
    *ppcVar2 = "GetForwardVector";
    *ppcVar2 = "GetFov";
    *ppcVar2 = "GetHealth";
    *ppcVar2 = "GetKeyBool";
    *ppcVar2 = "GetKeyFloat";
    *ppcVar2 = "GetKeyInt";
    *ppcVar2 = "GetKeyString";
    *ppcVar2 = "GetLeftVector";
    *ppcVar2 = "GetMaxHealth";
    *ppcVar2 = "GetModelKeyValues";
    *ppcVar2 = "GetModelName";
    *ppcVar2 = "GetMoveParent";
    *ppcVar2 = "GetName";
    *ppcVar2 = "GetNextKey";
    *ppcVar2 = "GetOrigin";
    *ppcVar2 = "GetOwner";
    *ppcVar2 = "GetPreTemplateName";
    *ppcVar2 = "GetRootMoveParent";
    *ppcVar2 = "GetSceneByIndex";
    *ppcVar2 = "GetScriptId";
    *ppcVar2 = "GetScriptScope";
    *ppcVar2 = "GetSoundDuration";
    *ppcVar2 = "GetTeam";
    *ppcVar2 = "GetTeamNumber";
    *ppcVar2 = "GetUpVector";
    *ppcVar2 = "GetVelocity";
    *ppcVar2 = "IsKeyEmpty";
    *ppcVar2 = "IsNoclipping";
    *ppcVar2 = "IsPaused";
    *ppcVar2 = "IsPlayingBack";
    *ppcVar2 = "IsSequenceFinished";
    *ppcVar2 = "LoadSceneFromString";
    *ppcVar2 = "LookupAttachment";
    *ppcVar2 = "NextMovePeer";
    *ppcVar2 = "PrecacheSoundScript";
    *ppcVar2 = "ReleaseKeyValues";
    *ppcVar2 = "RemoveBroadcastTeamTarget";
    *ppcVar2 = "SetAbsOrigin";
    *ppcVar2 = "SetAngles";
    *ppcVar2 = "SetAngularVelocity";
    *ppcVar2 = "SetBodygroup";
    *ppcVar2 = "SetForwardVector";
    *ppcVar2 = "SetFov";
    *ppcVar2 = "SetHealth";
    *ppcVar2 = "SetMaxHealth";
    *ppcVar2 = "SetModel";
    *ppcVar2 = "SetOrigin";
    *ppcVar2 = "SetOwner";
    *ppcVar2 = "SetPoseParameter";
    *ppcVar2 = "SetSize";
    *ppcVar2 = "SetTeam";
    *ppcVar2 = "SetVelocity";
    *ppcVar2 = "ValidateScriptScope";
    *ppcVar2 = "__KeyValueFromFloat";
    *ppcVar2 = "__KeyValueFromInt";
    *ppcVar2 = "__KeyValueFromString";
    *ppcVar2 = "__KeyValueFromVector";
    *ppcVar2 = "entindex";
    *ppcVar3 = "GetPlayerSpeechDuration";
    *ppcVar3 = "IsPlayerSpeaking";
    AddBudgetGroupName(this,"Brush_Model_Rendering",1);
    AddBudgetGroupName(this,"Client_Animation",1);
    AddBudgetGroupName(this,"Detail_Prop_Rendering",1);
    AddBudgetGroupName(this,"Displacement_Rendering",1);
    AddBudgetGroupName(this,"Dynamic_Light_Rendering",1);
    AddBudgetGroupName(this,"Fast Path Model Rendering",1);
    AddBudgetGroupName(this,"FileSystem",6);
    AddBudgetGroupName(this,"Game",6);
    AddBudgetGroupName(this,"Interpolation",1);
    AddBudgetGroupName(this,"Light_Cache",1);
    AddBudgetGroupName(this,"NPCs",6);
    AddBudgetGroupName(this,"Networking",6);
    AddBudgetGroupName(this,"Occlusion",1);
    AddBudgetGroupName(this,"Other_Model_Rendering",1);
    AddBudgetGroupName(this,"Overlays",1);
    AddBudgetGroupName(this,"Particle/Effect_Rendering",1);
    AddBudgetGroupName(this,"Physics",6);
    AddBudgetGroupName(this,"Player",6);
    AddBudgetGroupName(this,"Prediction",1);
    AddBudgetGroupName(this,"Replay",2);
    AddBudgetGroupName(this,"Ropes",1);
    AddBudgetGroupName(this,"Server Animation",6);
    AddBudgetGroupName(this,"Shadow_Rendering",1);
    AddBudgetGroupName(this,"Sound",6);
    AddBudgetGroupName(this,"Static_Prop_Rendering",1);
    AddBudgetGroupName(this,"Swap_Buffers",1);
    AddBudgetGroupName(this,"Texture_Cache",1);
    AddBudgetGroupName(this,"Tools",5);
    AddBudgetGroupName(this,"Unaccounted",6);
    AddBudgetGroupName(this,"VGUI",6);
    AddBudgetGroupName(this,"World Rendering",1);
    COM_TimestampedLog(" CBaseClient::ProcessClassInfo(done)");
    COM_TimestampedLog("*** Map Load: %s",local_78);
    COM_TimestampedLog("Building Panels (staticSteamOverlayPanel)");
    COM_TimestampedLog("CBaseServer::ConnectClient:  GetFreeClient");
    COM_TimestampedLog("CResponseSystem::LoadRuleSet took %f msec",
    COM_TimestampedLog("CWorld::Precache - Finish");
    COM_TimestampedLog("ConsistencyCheck");
    COM_TimestampedLog("CreateGameWindow - Finish");
    COM_TimestampedLog("Factories - Start");
    COM_TimestampedLog("LevelInitPreEntity: end %i",param_1);
    COM_TimestampedLog("LevelInitPreEntity: start %i",param_1);
    COM_TimestampedLog("Load Background Movie - %s",pcVar5);
    COM_TimestampedLog("Load of %s took %.3f msec",puVar1,(double)((float)(fVar8 - fVar7) * 1000.0))
    COM_TimestampedLog("SetMode - Start");
    COM_TimestampedLog("UnserializeStaticProps - end");
    COM_TimestampedLog("UnserializeStaticProps - start");
    COM_TimestampedLog("eng->Load");
    COM_TimestampedLog("g_pClientSidePrediction->Init");
    COM_TimestampedLog("g_pServerPluginHandler->ClientPutInServer");
    COM_TimestampedLog("serverGameDLL->LevelInit");
    COM_TimestampedLog("videomode->Init");
    CVProfile::EnterScope((CVProfile *)g_VProfCurrentProfile_exref,"BotThink",0,"NPCs",false,4);
    CVProfile::EnterScope((CVProfile *)g_VProfCurrentProfile_exref,"CL_CheckCRCs",0,"Steam",false,4)
    CVProfile::EnterScope((CVProfile *)g_VProfCurrentProfile_exref,"S_Update",0,"Sound",false,4);
    CVProfile::EnterScope((CVProfile *)g_VProfCurrentProfile_exref,"SaveGameSlot",0,"Save",false,4);
    ConColorMsg((Color *)&DAT_106a8e20,"GAME INSTRUCTOR: ");
    ConColorMsg((Color *)&DAT_106a8e20,"\t%s: ",puVar4);
    ConColorMsg((Color *)&DAT_106a8e24,"& [%s] ");
    ConColorMsg((Color *)&DAT_106a8e24,") ");
    ConColorMsg((Color *)&DAT_106a8e24,"...\n");
    ConColorMsg((Color *)&DAT_106a8e24,".\n");
    ConColorMsg((Color *)&DAT_106a8e24,"Adding prereq ");
    ConColorMsg((Color *)&DAT_106a8e24,"Initializing prereqs for scripted lesson ");
    ConColorMsg((Color *)&DAT_106a8e24,"Initializing scripted lesson ");
    ConColorMsg((Color *)&DAT_106a8e24,"Lesson ");
    ConColorMsg((Color *)&DAT_106a8e24,"Opportunity ");
    ConColorMsg((Color *)&DAT_106a8e24,"Reset all lesson display and success counts.\n");
    ConColorMsg((Color *)&DAT_106a8e24,"Shutting down...\n");
    ConColorMsg((Color *)&DAT_106a8e24,"\t([%s] ");
    ConColorMsg((Color *)&DAT_106a8e24,"\tFailed delayed player swap!");
    ConColorMsg((Color *)&DAT_106a8e24,"\t[entity1] = [%s]->GetWeapon([%s] ",param_3,uVar15);
    ConColorMsg((Color *)&DAT_106a8e24,"\t[output] = [%s]->Weapon_GetSlot() ");
    ConColorMsg((Color *)&DAT_106a8e24,"\t[output] = [%s]->Weapon_GetSlot([%s] ",param_3,uVar15);
    ConColorMsg((Color *)&DAT_106a8e24,"closed for reason: ");
    ConColorMsg((Color *)&DAT_106a8e24,"defined.\n");
    ConColorMsg((Color *)&DAT_106a8e24,"opened.\n");
    ConColorMsg((Color *)&DAT_106a8e28,"0x%X ",(int)fVar1);
    ConColorMsg((Color *)&DAT_106a8e28,"0x%X",uVar6);
    ConColorMsg((Color *)&DAT_106a8e28,"\"%s\" ",uVar3);
    ConColorMsg((Color *)&DAT_106a8e28,"\"%s\"",piVar16);
    ConColorMsg((Color *)&DAT_106a8e28,"\"%s\"",puVar3);
    ConColorMsg((Color *)&DAT_106a8e2c,"\"%s\" ",uVar5);
    ConColorMsg((Color *)&DAT_106a8e2c,"\"%s\"",pbVar1);
    ConColorMsg((Color *)&DAT_106a8e2c,"\"%s\"",puVar2);
    ConColorMsg((Color *)&DAT_106a8e30,"%s\n",uVar5);
    ConColorMsg((Color *)&DAT_106a8e30,"\"%s\" ",uVar5);
    ConColorMsg((Color *)&local_8,"Bug Repository \'%s\'\n",pcVar2);
    ConColorMsg((Color *)&local_8,"CkeyValuesTokenReader::SeekBackOneToken: No tokens read yet");
    ConColorMsg((Color *)&local_8,"Host_NewGame on map %s%s\n",param_1,pcVar5);
    ConColorMsg((Color *)&local_8,"Receiving uncompressed update from server\n");
    ConColorMsg((Color *)&local_8,"Username \'%s\' -- \'%s\'\n",pcVar2,&local_108);
    ConColorMsg((Color *)&local_8,"\t%s\n",uVar4);
    ConColorMsg((Color *)&local_c," Invalid (no Steam3Client API?)\n");
    ConColorMsg((Color *)&param_1,"-> Reservation cookie %llx:  reason %s\n",iVar2,iVar3,&local_104)
    ConColorMsg((Color *)&param_1,"Accepted P2P connection with %llx\n",*puVar1,puVar1[1]);
    ConColorMsg((Color *)&param_1,"Received connection fail for user %llx %s\n",*piVar2,*piVar1,
    ConColorMsg((Color *)&param_3,"non-entity blocked area %d\n",*(undefined4 *)((int)this + 0x8c));
    ConDMsg("%i CPUs%s, Frequency: %.01f %s,  Features: %s\n",*(undefined *)(iVar2 + 4),&local_20c,
    ConDMsg("%i player server started\n",uVar5);
    ConDMsg("1 CPU, Frequency: %.01f %s,  Features: %s\n",local_c,puVar4,acStack269 + 1);
    ConDMsg("CNetChan::SendDatagram:  Unreliable would overfow, ignoring\n");
    ConDMsg("Can\'t find material proxy \"%s\"\n",param_1);
    ConDMsg("Client sent different SendTable CRC, sending full tables.\n");
    ConDMsg("D= %i bits (%i bytes)\n",param_4[3] - _DAT_106813c0,
    ConDMsg("D[%s]:%s %s, %s, index %i, offset %i, bits %i, value %s\n",param_1,
    ConDMsg("ERROR: couldn\'t open temporary header file.\n");
    ConDMsg("E[%s]:%s %s, %s, index %i, offset %i, bits %i, value %s\n",param_1,
    ConDMsg("Fragment transmission aborted at %i/%i.\n",puVar10[0x4a],puVar10[0x49]);
    ConDMsg("Game started\n");
    ConDMsg("Level unlit, setting \'mat_fullbright 1\'\n");
    ConDMsg("Map_VisCurrentCluster() < 0!\n");
    ConDMsg("Not recording a demo.\n");
    ConDMsg("Refreshing map list...\n");
    ConDMsg("Signon traffic \"%s\":  incoming %s [%d pkts], outgoing %s [%d pkts]\n",uVar4);
    ConDMsg("Spawn Server: %s: [%s]\n",param_1,param_2);
    ConDMsg("Spawn Server: %s\n",param_1);
    ConDMsg("Unable to find skyname ConVar!!!\n");
    ConDMsg("WriteUsercmd: from=%d to=%d\n",*(undefined4 *)(param_3 + 4),
    ConDMsg("\t%s %2.2f -> %2.2f\n",param_2,(double)*param_3);
    ConDMsg("\t%s %2.2f -> %2.2f\n",param_2,(double)param_3);
    ConDMsg("\t%s %d -> %d\n",param_2,(double)param_3,(double)param_4);
    ConDMsg("\t%s %d -> %d\n",param_2,param_3,param_4);
    ConMsg("%-80s - %.80s\n",local_103c,pcVar6);
    ConMsg("%5.2f MB (%d bytes)\n",SUB84((double)((float)iVar1 * 9.536743e-07),0),
    ConMsg("%i lines read\n",iVar5);
    ConMsg("%i users\n",iVar3);
    ConMsg("%s <filename> [path id]: execute a script file\n",puVar6);
    ConMsg("%s = %f\n","snd_front_headphone_position",(double)DAT_10413058);
    ConMsg("%s = %f\n","snd_front_stereo_speaker_position",(double)DAT_10413060);
    ConMsg("%s = %f\n","snd_front_surround_speaker_position",(double)DAT_10413068);
    ConMsg("%s = %f\n","snd_headphone_pan_exponent",(double)DAT_10413070);
    ConMsg("%s = %f\n","snd_headphone_pan_radial_weight",(double)DAT_1041307c);
    ConMsg("%s = %f\n","snd_rear_headphone_position",(double)DAT_1041305c);
    ConMsg("%s = %f\n","snd_rear_stereo_speaker_position",(double)DAT_10413064);
    ConMsg("%s = %f\n","snd_rear_surround_speaker_position",(double)DAT_1041306c);
    ConMsg("%s = %f\n","snd_stereo_speaker_pan_exponent",(double)DAT_10413074);
    ConMsg("%s = %f\n","snd_stereo_speaker_pan_radial_weight",(double)DAT_10426e50);
    ConMsg("%s = %f\n","snd_surround_speaker_pan_exponent",(double)DAT_10413078);
    ConMsg("%s = %f\n","snd_surround_speaker_pan_radial_weight",(double)DAT_10426e54);
    ConMsg("%s is not a valid demo file\n",local_108);
    ConMsg("%s%d %u, ");
    ConMsg("%s%s%s\n",local_2c,pcVar2,pcVar1);
    ConMsg("%s:  password failed.\n",pcVar5);
    ConMsg("%s:send reliable stream overflow\n",pcVar5);
    ConMsg("%s\n",&DAT_106abce8);
    ConMsg("%s\n",pcVar1);
    ConMsg("*******************************************************************\n                      ***  ERROR  ***                              \nVATOM index %d out of range, recompile tier0 with larger atom table\n*******************************************************************\n"
    ConMsg("--- Total %i connected clients ---\n",iVar7);
    ConMsg("-------------\n");
    ConMsg("<slot:userid:\"name\">\n");
    ConMsg("A2A_ACK from %s\n");
    ConMsg("A2A_ACK from %s\n",pcVar18);
    ConMsg("Already recording.\n");
    ConMsg("Bad lightmap extents on material \"%s\"\n",uVar2);
    ConMsg("Bad maxclients (%u) from server.\n",uVar6);
    ConMsg("Bogus key length on CD Key...\n");
    ConMsg("CBaseDemoAction::CreateActionEditor:  Missing edit factory for %s\n",
    ConMsg("CBaseDemoAction::CreateDemoAction:  Missing factory for %s\n",PTR_s_Unknown_10414844);
    ConMsg("Can only dump stats when active in a level\n");
    ConMsg("Can\'t \'user\', not running a server\n",this);
    ConMsg("Can\'t create class tables.\n");
    ConMsg("Can\'t kick \"%s\", name not found\n",pcVar7);
    ConMsg("Can\'t load in multiplayer games.\n");
    ConMsg("Can\'t record during demo playback.\n");
    ConMsg("Can\'t record on dedicated server.\n");
    ConMsg("Can\'t retry, no previous TacticalTV connection\n");
    ConMsg("Cbuf_AddText: buffer overflow\n");
    ConMsg("Changelevel invalid during demo playback\n");
    ConMsg("Commencing connection retry to ");
    ConMsg("Completed TacticalTV demo \"%s\", recording time %.1f\n",this,
    ConMsg("Config file %s is read-only!!\n",local_140);
    ConMsg("Connected to %s\n",pcVar4);
    ConMsg("Corrupted!\n");
    ConMsg("Could not read BSP header for map [%s].\n",param_2);
    ConMsg("Couldn\'t dispatch user message (%i)\n",*(undefined4 *)(param_1 + 0x10));
    ConMsg("Couldn\'t open kb_def.lst\n");
    ConMsg("Couldn\'t spawn server %s\n");
    ConMsg("CreateFragmentsFromFile: \'%s\' doesn\'t exist.\n",piVar1);
    ConMsg("CreateFragmentsFromFile: \'%s\' size exceeds net_maxfilesize limit (%i MB).\n",piVar1,
    ConMsg("CreateFragmentsFromFile: \'%s\' too big (max %i bytes).\n",piVar1,0x3ffffff);
    ConMsg("Current:\n");
    ConMsg("Deferring connect command!\n");
    ConMsg("Disconnect: %s.\n",param_1);
    ConMsg("Displacement %3d, location ( % 10.2f % 10.2f % 10.2f ), collision flags: %s %s %s\n",
    ConMsg("ERROR: CBaseDemoAction::NameForType type %i out of range\n",*(uint *)((int)this + 4));
    ConMsg("ERROR: CBaseDemoAction::NameForType type %i out of range\n",param_1);
    ConMsg("ERROR: couldn\'t open %s.\n",local_108);
    ConMsg("ERROR: couldn\'t open.\n");
    ConMsg("FORCEWRITE is enabled, making file writeable\n");
    ConMsg("Failed to load %s\n",param_1);
    ConMsg("Failed to read demo header.\n");
    ConMsg("File not found or failed to open.\n");
    ConMsg("HLTV SendTable CRC differs from server.\n");
    ConMsg("Host_WriteConfiguration: Wrote %s\n",local_140);
    ConMsg("ID filter list: %i entries\n",DAT_1063bec8);
    ConMsg("ID filter list: %i entry\n",1);
    ConMsg("ID filter list: empty\n");
    ConMsg("IP filter list: %i entries\n",DAT_1063beb4);
    ConMsg("IP filter list: %i entry\n",1);
    ConMsg("IP filter list: empty\n");
    ConMsg("Mod doesn\'t support TacticalTV. No director module found.\n");
    ConMsg("Must have at least one player.\n");
    ConMsg("No # necessary\n");
    ConMsg("No active net channels.\n");
    ConMsg("No panels starting with %s\n");
    ConMsg("Not playing a local game.\n");
    ConMsg("Note: should use \"addip\" instead of \"banip\".\n");
    ConMsg("Only the server may changelevel\n");
    ConMsg("Precache table %s:  %i of %i slots used\n");
    ConMsg("Reading %s...\n",local_144);
    ConMsg("Received packet entities while connecting!\n");
    ConMsg("Recording to \"%s\", length %s.\n",uVar5);
    ConMsg("Server (%s) is not a TacticalTV proxy.\n",uVar2);
    ConMsg("Server didn\'t specify a gamedir, assuming no change\n");
    ConMsg("Server returned version %i, expected %i.\n",*(undefined4 *)(param_1 + 0x10),uVar6);
    ConMsg("StartRecording: couldn\'t open demo file %s.\n",param_1);
    ConMsg("TCP -> %s: ACKN seq=%i\n",pcVar2,param_1);
    ConMsg("TCP -> %s: sz=%i seq=%i\n",pcVar2,uVar4,uVar5);
    ConMsg("TacticalTV client not found.\n");
    ConMsg("TacticalTV in Master-Only mode.\n");
    ConMsg("TacticalTV not active.\n");
    ConMsg("This game doesn\'t support save/restore.");
    ConMsg("Too many players\n");
    ConMsg("Total displacements: %d\nCollision stats: %d with physics, %d with hull, %d with ray.\n"
    ConMsg("Usage:  addip < minutes > < ipaddress >\nUse 0 minutes for permanent\n");
    ConMsg("Usage:  banid < minutes > < userid | uniqueid > { kick }\n");
    ConMsg("Usage:  connect <server> <# of players>\n");
    ConMsg("Usage:  connect <server>\n");
    ConMsg("Usage:  kick < name >\n");
    ConMsg("Usage:  kickid < userid | uniqueid > { message }\n");
    ConMsg("Usage:  kickid_ex < userid | uniqueid > < force ( 0 / 1 ) > { message }\n");
    ConMsg("Usage:  log < on | off >\n");
    ConMsg("Usage:  logaddress_add ip:port\n");
    ConMsg("Usage:  logaddress_del ip:port\n");
    ConMsg("Usage:  pingserver <server:ip>\n");
    ConMsg("Usage:  removeid < slot | uniqueid >\n");
    ConMsg("Usage:  removeip < slot | ipaddress >\n");
    ConMsg("Usage:  tv_record  <filename>\n");
    ConMsg("Usage:  vgui_showpanel panelname\n");
    ConMsg("Usage:  writeconfig <controller index> <filename.cfg>\n");
    ConMsg("Usage:  writeconfig <filename.cfg>\n");
    ConMsg("Usage: user <username / userid>\n");
    ConMsg("Usage:\nsetmaster <add | remove | enable | disable> <IP:port>\n");
    ConMsg("Use 0 minutes for permanent\n");
    ConMsg("WARNING: CopyExitingEnt on full update.\n");
    ConMsg("WARNING: LeavePVS on full update");
    ConMsg("Warning:  Can\'t add NULL string to table %s\n",uVar2);
    ConMsg("\"%s\" = \"%s\"\n",puVar4,(&DAT_10686268)[iVar2 * 2]);
    ConMsg("\"%s\" isn\'t a valid key\n",puVar2);
    ConMsg("\"absolute_maxplayers\" is \"%u\"\n",local_8);
    ConMsg("\"default_maxplayers\" is \"%u\"\n",local_c);
    ConMsg("\"max_splitscreen_players\" is \"%u\" (limited by -tools mode)\n",DAT_10417460);
    ConMsg("\"mininum_maxplayers\" is \"%u\"\n",param_1);
    ConMsg("\n!!!\n\nClientCommandKeyValues:  Some entity tried to stuff \'%s\' to console buffer of entity %i when maxclients was set to %i, ignoring\n\n"
    ConMsg("\nHost_Error: %s\n\n",local_404);
    ConMsg("banid:  couldn\'t find userid %d\n");
    ConMsg("banid:  user filter list is full\n");
    ConMsg("bench_start %s: invalid path.\n",pauVar2);
    ConMsg("bind <key> [command] : attach a command to a key\n");
    ConMsg("box x1 y1 z1 x2 y2 z2\n");
    ConMsg("cl_view entity#\nCurrent %i\n",uVar2);
    ConMsg("connect:  can\'t parse \'%s\'\n",pbVar9);
    ConMsg("connect_splitscreen:  can\'t parse \'%s\'\n",pbVar11);
    ConMsg("couldn\'t open %s\n",local_144);
    ConMsg("currently logging to: ");
    ConMsg("host_runofftime would run off %.2f minutes!!! ignoring\n",(double)(fVar1 * 0.01666667));
    ConMsg("load <savename>: load a game\n");
    ConMsg("logaddress_add:  %s\n",pcVar3);
    ConMsg("logaddress_add:  must specify a valid port\n");
    ConMsg("logaddress_add:  unable to resolve %s\n",local_30);
    ConMsg("logaddress_add:  unparseable address\n");
    ConMsg("logaddress_del:  %s\n",pcVar3);
    ConMsg("logaddress_del:  must specify a valid port\n");
    ConMsg("logaddress_del:  unable to resolve %s\n",local_30);
    ConMsg("logaddress_del:  unparseable address\n");
    ConMsg("logaddress_delall:  all addresses cleared\n");
    ConMsg("logaddress_list:  no addresses in the list\n");
    ConMsg("logaddress_list: %i entries\n",iVar3);
    ConMsg("logaddress_list: %i entry\n",1);
    ConMsg("module %s not loaded\n",param_1);
    ConMsg("no/bad material\n");
    ConMsg("pClass->m_ClassID(%i) >= %i\n",puVar3[3],*(int *)(piVar5[0x50] + 0x104));
    ConMsg("psurface NULL in R_DecalCreate!\n");
    ConMsg("removeip:  filter removed for %s, IP %s\n",puVar4,local_24);
    ConMsg("sample_lighting usage: lightprobe <base file name> [cubemap dimension]\n");
    ConMsg("skipping %s output when in map edit mode\n",pcVar6);
    ConMsg("skipping %s output, no keys bound\n",pcVar6);
    ConMsg("uniqueid \"%s\" not found\n",param_2);
    DAT_10034b4c = VR_GetGenericInterface("IVRSystem_016",local_8);
    DAT_10034b68 = VR_GetGenericInterface("IVRExtendedDisplay_001",&local_8);
    DAT_10427080 = GetProcAddress(hModule,"DirectSoundCreate");
    DAT_104274ac = FUN_10038f40((int)"SndMix",FUN_10047740);
    DAT_104e334c = (int *)(*DAT_104e3348)("VClientPrediction001",0);
    DAT_104e3358 = (*DAT_104e3348)("ClientLeafSystem002",0);
    DAT_104e335c = (*DAT_104e3348)("VClientEntityList003",0);
    DAT_104e3360 = (*DAT_104e3348)("ClientAlphaPropertyMgrV001",0);
    DAT_104e42d4 = FUN_102866e0((uint *)"CBaseActionEditDialog");
    DAT_104e42e0 = FUN_10286590((undefined4 *)"CBaseActionEditDialog");
    DAT_104e42f4 = FUN_102866e0((uint *)"CBaseActionPlaySoundStartDialog");
    DAT_104e4300 = FUN_10286590((undefined4 *)"CBaseActionPlaySoundStartDialog");
    DAT_104e430c = FUN_102866e0((uint *)"CDemoEditorPanel");
    DAT_104e4318 = FUN_10286590((undefined4 *)"CDemoEditorPanel");
    DAT_104e4320 = FUN_102866e0((uint *)"MenuButton");
    DAT_104e4328 = FUN_10286590((undefined4 *)"MenuButton");
    DAT_104e4334 = FUN_102866e0((uint *)"CDemoSmootherPanel");
    DAT_104e4340 = FUN_10286590((undefined4 *)"CDemoSmootherPanel");
    DAT_104e4354 = FUN_102866e0((uint *)"CDemoUIPanel");
    DAT_104e4360 = FUN_10286590((undefined4 *)"CDemoUIPanel");
    DAT_104e436c = FUN_102866e0((uint *)"CDemoUIPanel2");
    DAT_104e4378 = FUN_10286590((undefined4 *)"CDemoUIPanel2");
    DAT_104e43f0 = FUN_102866e0((uint *)"Panel");
    DAT_104e43f8 = FUN_10286590((undefined4 *)"Panel");
    DAT_104e4618 = FUN_102866e0((uint *)"CFogUIPanel");
    DAT_104e4624 = FUN_10286590((undefined4 *)"CFogUIPanel");
    DAT_104f28e0 = FUN_102866e0((uint *)"CSkyUIPanel");
    DAT_104f28ec = FUN_10286590((undefined4 *)"CSkyUIPanel");
    DAT_104f2e94 = FUN_102866e0((uint *)"TileViewPanelEx");
    DAT_104f2ea0 = FUN_10286590((undefined4 *)"TileViewPanelEx");
    DAT_104f2eac = FUN_102866e0((uint *)"CVmtTextEntry");
    DAT_104f2eb8 = FUN_10286590((undefined4 *)"CVmtTextEntry");
    DAT_104f2ec4 = FUN_102866e0((uint *)"CRenderTextureEditor");
    DAT_104f2ed0 = FUN_10286590((undefined4 *)"CRenderTextureEditor");
    DAT_104f2edc = FUN_102866e0((uint *)"CRenderTexturesListViewPanel");
    DAT_104f2ee8 = FUN_10286590((undefined4 *)"CRenderTexturesListViewPanel");
    DAT_104f2f04 = FUN_102866e0((uint *)"CTextureListPanel");
    DAT_104f2f10 = FUN_10286590((undefined4 *)"CTextureListPanel");
    DAT_104f2f28 = FUN_102866e0((uint *)"TxViewPanel");
    DAT_104f2f34 = FUN_10286590((undefined4 *)"TxViewPanel");
    DAT_104f33a4 = FUN_102866e0((uint *)"CPrecisionSlider");
    DAT_104f33b0 = FUN_10286590((undefined4 *)"CPrecisionSlider");
    DAT_104f33bc = FUN_102866e0((uint *)"CColorCorrectionUIChildPanel");
    DAT_104f33c8 = FUN_10286590((undefined4 *)"CColorCorrectionUIChildPanel");
    DAT_104f33d4 = FUN_102866e0((uint *)"CColorCurvesEditPanel");
    DAT_104f33e0 = FUN_10286590((undefined4 *)"CColorCurvesEditPanel");
    DAT_104f33ec = FUN_102866e0((uint *)"CColorCurvesUIPanel");
    DAT_104f33f8 = FUN_10286590((undefined4 *)"CColorCurvesUIPanel");
    DAT_104f3404 = FUN_102866e0((uint *)"CColorHistogramPanel");
    DAT_104f3410 = FUN_10286590((undefined4 *)"CColorHistogramPanel");
    DAT_104f341c = FUN_102866e0((uint *)"CColorSlider");
    DAT_104f3428 = FUN_10286590((undefined4 *)"CColorSlider");
    DAT_104f3434 = FUN_102866e0((uint *)"CColorLevelsUIPanel");
    DAT_104f3440 = FUN_10286590((undefined4 *)"CColorLevelsUIPanel");
    DAT_104f344c = FUN_102866e0((uint *)"CFullScreenSelectionPanel");
    DAT_104f3458 = FUN_10286590((undefined4 *)"CFullScreenSelectionPanel");
    DAT_104f3464 = FUN_102866e0((uint *)"CUncorrectedImagePanel");
    DAT_104f3470 = FUN_10286590((undefined4 *)"CUncorrectedImagePanel");
    DAT_104f347c = FUN_102866e0((uint *)"CSelectedHSVUIPanel");
    DAT_104f3488 = FUN_10286590((undefined4 *)"CSelectedHSVUIPanel");
    DAT_104f3494 = FUN_102866e0((uint *)"CColorLookupUIPanel");
    DAT_104f34a0 = FUN_10286590((undefined4 *)"CColorLookupUIPanel");
    DAT_104f34ac = FUN_102866e0((uint *)"CColorBalanceUIPanel");
    DAT_104f34b8 = FUN_10286590((undefined4 *)"CColorBalanceUIPanel");
    DAT_104f34c4 = FUN_102866e0((uint *)"CLookupViewPanel");
    DAT_104f34d0 = FUN_10286590((undefined4 *)"CLookupViewPanel");
    DAT_104f34dc = FUN_102866e0((uint *)"CLookupViewWindow");
    DAT_104f34e8 = FUN_10286590((undefined4 *)"CLookupViewWindow");
    DAT_104f34f4 = FUN_102866e0((uint *)"CNewOperationDialog");
    DAT_104f3500 = FUN_10286590((undefined4 *)"CNewOperationDialog");
    DAT_104f350c = FUN_102866e0((uint *)"COperationListPanel");
    DAT_104f3518 = FUN_10286590((undefined4 *)"COperationListPanel");
    DAT_104f3524 = FUN_102866e0((uint *)"CColorOperationListPanel");
    DAT_104f3530 = FUN_10286590((undefined4 *)"CColorOperationListPanel");
    DAT_104f3540 = FUN_102866e0((uint *)"CColorCorrectionUIPanel");
    DAT_104f354c = FUN_10286590((undefined4 *)"CColorCorrectionUIPanel");
    DAT_105f9738 = (**(code **)(*DAT_106cb874 + 0x34))(&DAT_105f9734,"ColorMesh",&local_14,0);
    DAT_10646738 = (int *)(**(code **)(*DAT_106a5e74 + 0x44))("sv_minupdaterate");
    DAT_10646740 = (int *)(**(code **)(*DAT_106a5e74 + 0x44))("sv_maxupdaterate");
    DAT_10646744 = (int *)(**(code **)(*DAT_106a5e74 + 0x44))("sv_client_min_interp_ratio");
    DAT_10646748 = (int *)(**(code **)(*DAT_106a5e74 + 0x44))("sv_client_max_interp_ratio");
    DAT_106537b0 = FUN_102e4700("ACT_DOOR_OPEN");
    DAT_106537b4 = FUN_102e4700("ACT_DOOR_LOCKED");
    DAT_1065449c = (**(code **)(*piVar2 + 0xc))("blockLOS",1);
    DAT_106544a0 = (**(code **)(*piVar2 + 0xc))("AIWalkable",1);
    DAT_106544a4 = (**(code **)(*piVar2 + 0xc))("damage_table",1);
    DAT_106544a8 = (**(code **)(*piVar2 + 0xc))("physicsmode",1);
    DAT_106544ac = (**(code **)(*piVar2 + 0xc))("multiplayer_break",1);
    DAT_106544b0 = (**(code **)(*piVar2 + 0xc))("dmg.bullets",1);
    DAT_106544b4 = (**(code **)(*piVar2 + 0xc))("dmg.club",1);
    DAT_106544b8 = (**(code **)(*piVar2 + 0xc))("dmg.explosive",1);
    DAT_106544bc = (**(code **)(*piVar2 + 0xc))("health",1);
    DAT_106544c0 = (**(code **)(*piVar2 + 0xc))("breakable_model",1);
    DAT_106544c4 = (**(code **)(*piVar2 + 0xc))("breakable_skin",1);
    DAT_106544c8 = (**(code **)(*piVar2 + 0xc))("breakable_count",1);
    DAT_106544cc = (**(code **)(*piVar2 + 0xc))("explosive_damage",1);
    DAT_106544d0 = (**(code **)(*piVar2 + 0xc))("explosive_radius",1);
    DAT_106544d4 = (**(code **)(*piVar2 + 0xc))("allowstatic",1);
    DAT_106544d8 = (**(code **)(*piVar2 + 0xc))("pusher_duration",1);
    DAT_106544dc = (**(code **)(*piVar2 + 0xc))("pusher_force",1);
    DAT_106544e0 = (**(code **)(*piVar2 + 0xc))("pusher_invert",1);
    DAT_1066afd8 = FUN_102866e0((uint *)"Frame");
    DAT_1066afe0 = FUN_10286590((undefined4 *)"Frame");
    DAT_1066aff4 = FUN_102866e0((uint *)"CBugUIPanel");
    DAT_1066b000 = FUN_10286590((undefined4 *)"CBugUIPanel");
    DAT_10674c9c = (*DAT_106abaa8)("VPhysicsSurfaceProps001",0);
    DAT_10674ca0 = (*DAT_106abaa8)("VPhysicsCollision007",0);
    DAT_10684924 = FUN_10267f50(this,"LaunchOptions");
    DAT_106ad11c = LoadLibraryA("user32.dll");
    DAT_106af98c = FUN_102866e0((uint *)"CPerfUIChildPanel");
    DAT_106af998 = FUN_10286590((undefined4 *)"CPerfUIChildPanel");
    DAT_106af9a4 = FUN_102866e0((uint *)"CPropFadeUIPanel");
    DAT_106af9b0 = FUN_10286590((undefined4 *)"CPropFadeUIPanel");
    DAT_106af9bc = FUN_102866e0((uint *)"CAreaPortalsUIPanel");
    DAT_106af9c8 = FUN_10286590((undefined4 *)"CAreaPortalsUIPanel");
    DAT_106af9d4 = FUN_102866e0((uint *)"COcclusionUIPanel");
    DAT_106af9e0 = FUN_10286590((undefined4 *)"COcclusionUIPanel");
    DAT_106af9ec = FUN_102866e0((uint *)"CPerfUIPanel");
    DAT_106af9f8 = FUN_10286590((undefined4 *)"CPerfUIPanel");
    DAT_106afa44 = FUN_102866e0((uint *)"EditablePanel");
    DAT_106afa4c = FUN_10286590((undefined4 *)"EditablePanel");
    DAT_106b0544 = FUN_102866e0((uint *)"Button");
    DAT_106b054c = FUN_10286590((undefined4 *)"Button");
    DAT_106b0554 = FUN_102866e0((uint *)"CheckButton");
    DAT_106b055c = FUN_10286590((undefined4 *)"CheckButton");
    DAT_106b0564 = FUN_102866e0((uint *)"PropertyPage");
    DAT_106b056c = FUN_10286590((undefined4 *)"PropertyPage");
    DAT_106b0574 = FUN_102866e0((uint *)"PropertyDialog");
    DAT_106b057c = FUN_10286590((undefined4 *)"PropertyDialog");
    DAT_106b0588 = FUN_102866e0((uint *)"TreeView");
    DAT_106b0590 = FUN_10286590((undefined4 *)"TreeView");
    DAT_106b0a28 = FUN_102866e0((uint *)"CDrawTreeFrame");
    DAT_106b0a34 = FUN_10286590((undefined4 *)"CDrawTreeFrame");
    DAT_106b0f98 = FUN_102866e0((uint *)"CProfileHierarchyPanel");
    DAT_106b0fa4 = FUN_10286590((undefined4 *)"CProfileHierarchyPanel");
    DAT_106b0fb0 = FUN_102866e0((uint *)"CVProfPanel");
    DAT_106b0fbc = FUN_10286590((undefined4 *)"CVProfPanel");
    DAT_106b11e8 = FUN_102866e0((uint *)"CProfileTree");
    DAT_106b11f4 = FUN_10286590((undefined4 *)"CProfileTree");
    DAT_106b1200 = FUN_102866e0((uint *)"CVProfLabel");
    DAT_106b120c = FUN_10286590((undefined4 *)"CVProfLabel");
    DAT_106b6b80 = (**(code **)(piVar5[1] + 0x84))("anim_attachment_LH");
    DAT_106b6b84 = (**(code **)(piVar3[1] + 0x84))("anim_attachment_LH");
    DAT_106c6cb0 = FUN_1042ea30(this,"ClientMenu");
    DAT_106cb888 = (*(code *)puVar1)("VSoundEmitter003",0);
    DAT_106cca88 = FUN_103b29d0((uint *)"Button");
    DAT_106cca94 = FUN_103b2880((undefined4 *)"Button");
    DAT_106ce2d8 = FUN_103b29d0((uint *)"EditablePanel");
    DAT_106ce2e4 = FUN_103b2880((undefined4 *)"EditablePanel");
    DAT_106ce518 = FUN_103b29d0((uint *)"ImagePanel");
    DAT_106ce524 = FUN_103b2880((undefined4 *)"ImagePanel");
    DAT_106ce968 = FUN_103b29d0((uint *)"Label");
    DAT_106ce974 = FUN_103b2880((undefined4 *)"Label");
    DAT_106ce988 = FUN_103b29d0((uint *)"PercentageCroppedImageLabel");
    DAT_106ce994 = FUN_103b2880((undefined4 *)"PercentageCroppedImageLabel");
    DAT_106cfe64 = FUN_103b28c0(&DAT_106cfee8,(uint *)"Panel");
    DAT_106cfe70 = FUN_103b27c0(&DAT_106cff40,(undefined4 *)"Panel");
    DAT_106cfea4 = FUN_103b28c0(&DAT_106cfee8,(uint *)"CDragDropHelperPanel");
    DAT_106cfeb0 = FUN_103b27c0(&DAT_106cff40,(undefined4 *)"CDragDropHelperPanel");
    DAT_106cffb8 = FUN_103b29d0((uint *)"ToggleButton");
    DAT_106cffc4 = FUN_103b2880((undefined4 *)"ToggleButton");
    DAT_106cffec = FUN_103b29d0((uint *)"AnimatingImagePanel");
    DAT_106cfff8 = FUN_103b2880((undefined4 *)"AnimatingImagePanel");
    DAT_106d083c = FUN_103b29d0((uint *)"CheckButton");
    DAT_106d0848 = FUN_103b2880((undefined4 *)"CheckButton");
    DAT_106d0874 = FUN_103b29d0((uint *)"ComboBox");
    DAT_106d0880 = FUN_103b2880((undefined4 *)"ComboBox");
    DAT_106d08a8 = FUN_103b29d0((uint *)"CvarToggleCheckButton");
    DAT_106d08b0 = FUN_103b2880((undefined4 *)"CvarToggleCheckButton");
    DAT_106d08dc = FUN_103b29d0((uint *)"Divider");
    DAT_106d08e8 = FUN_103b2880((undefined4 *)"Divider");
    DAT_106d090c = FUN_103b29d0((uint *)"ExpandButton");
    DAT_106d0918 = FUN_103b2880((undefined4 *)"ExpandButton");
    DAT_106d0944 = FUN_103b29d0((uint *)"GraphPanel");
    DAT_106d0950 = FUN_103b2880((undefined4 *)"GraphPanel");
    DAT_106d0978 = FUN_103b29d0((uint *)"ListPanel");
    DAT_106d0984 = FUN_103b2880((undefined4 *)"ListPanel");
    DAT_106d09c4 = FUN_103b29d0((uint *)"ListViewPanel");
    DAT_106d09d0 = FUN_103b2880((undefined4 *)"ListViewPanel");
    DAT_106d09dc = FUN_103b29d0((uint *)"ListViewItem");
    DAT_106d09e8 = FUN_103b2880((undefined4 *)"ListViewItem");
    DAT_106d0a40 = FUN_103b29d0((uint *)"MenuSeparator");
    DAT_106d0a4c = FUN_103b2880((undefined4 *)"MenuSeparator");
    DAT_106d0a70 = FUN_103b29d0((uint *)"MenuBar");
    DAT_106d0a7c = FUN_103b2880((undefined4 *)"MenuBar");
    DAT_106d0aa4 = FUN_103b29d0((uint *)"MenuButton");
    DAT_106d0ab0 = FUN_103b2880((undefined4 *)"MenuButton");
    DAT_106d0ad8 = FUN_103b29d0((uint *)"MenuItem");
    DAT_106d0ae4 = FUN_103b2880((undefined4 *)"MenuItem");
    DAT_106d0b10 = FUN_103b29d0((uint *)"MessageBox");
    DAT_106d0b1c = FUN_103b2880((undefined4 *)"MessageBox");
    DAT_106d0b68 = FUN_103b29d0((uint *)"ProgressBar");
    DAT_106d0b74 = FUN_103b2880((undefined4 *)"ProgressBar");
    DAT_106d0b80 = FUN_103b29d0((uint *)"ContinuousProgressBar");
    DAT_106d0b8c = FUN_103b2880((undefined4 *)"ContinuousProgressBar");
    DAT_106d0b98 = FUN_103b29d0((uint *)"ImageProgressBar");
    DAT_106d0ba4 = FUN_103b2880((undefined4 *)"ImageProgressBar");
    DAT_106d0fd0 = FUN_103b29d0((uint *)"CircularProgressBar");
    DAT_106d0fdc = FUN_103b2880((undefined4 *)"CircularProgressBar");
    DAT_106d1000 = FUN_103b29d0((uint *)"RadioButton");
    DAT_106d100c = FUN_103b2880((undefined4 *)"RadioButton");
    DAT_106d1438 = FUN_103b29d0((uint *)"ClickPanel");
    DAT_106d1444 = FUN_103b2880((undefined4 *)"ClickPanel");
    DAT_106d1450 = FUN_103b29d0((uint *)"RichText");
    DAT_106d145c = FUN_103b2880((undefined4 *)"RichText");
    DAT_106d1470 = FUN_103b29d0((uint *)"RichTextInterior");
    DAT_106d147c = FUN_103b2880((undefined4 *)"RichTextInterior");
    DAT_106d18a8 = FUN_103b29d0((uint *)"ScalableImagePanel");
    DAT_106d18b4 = FUN_103b2880((undefined4 *)"ScalableImagePanel");
    DAT_106d1d08 = FUN_103b29d0((uint *)"ScrollBar");
    DAT_106d1d14 = FUN_103b2880((undefined4 *)"ScrollBar");
    DAT_106d1d40 = FUN_103b29d0((uint *)"TextEntry");
    DAT_106d1d4c = FUN_103b2880((undefined4 *)"TextEntry");
    DAT_106d2188 = FUN_103b29d0((uint *)"TreeView");
    DAT_106d2194 = FUN_103b2880((undefined4 *)"TreeView");
    DAT_106d21a0 = FUN_103b29d0((uint *)"TreeNodeText");
    DAT_106d21ac = FUN_103b2880((undefined4 *)"TreeNodeText");
    DAT_106d21b8 = FUN_103b29d0((uint *)"TreeNodeDropPanel");
    DAT_106d21c4 = FUN_103b2880((undefined4 *)"TreeNodeDropPanel");
    DAT_106d21d0 = FUN_103b29d0((uint *)"TreeNode");
    DAT_106d21dc = FUN_103b2880((undefined4 *)"TreeNode");
    DAT_106d2204 = FUN_103b29d0((uint *)"CTreeViewListControl");
    DAT_106d2210 = FUN_103b2880((undefined4 *)"CTreeViewListControl");
    DAT_106d2234 = FUN_103b29d0((uint *)"URLLabel");
    DAT_106d2240 = FUN_103b2880((undefined4 *)"URLLabel");
    DAT_106d2668 = FUN_103b29d0((uint *)"CountdownLabel");
    DAT_106d2674 = FUN_103b2880((undefined4 *)"CountdownLabel");
    DAT_106d2698 = FUN_103b29d0((uint *)"MessagingPanel");
    DAT_106d26a4 = FUN_103b2880((undefined4 *)"MessagingPanel");
    DAT_106d2804 = FUN_103b29d0((uint *)"AnimationController");
    DAT_106d2810 = FUN_103b2880((undefined4 *)"AnimationController");
    DAT_106d28dc = FUN_103b29d0((uint *)"BuildModeDialog");
    DAT_106d28e8 = FUN_103b2880((undefined4 *)"BuildModeDialog");
    DAT_106d2904 = FUN_103b29d0((uint *)"CSmallTextEntry");
    DAT_106d2910 = FUN_103b2880((undefined4 *)"CSmallTextEntry");
    DAT_106d291c = FUN_103b29d0((uint *)"CBuildModeNavCombo");
    DAT_106d2928 = FUN_103b2880((undefined4 *)"CBuildModeNavCombo");
    DAT_106d39e0 = FUN_103b29d0((uint *)"Frame");
    DAT_106d39ec = FUN_103b2880((undefined4 *)"Frame");
    DAT_106d3a00 = FUN_103b29d0((uint *)"FrameSystemButton");
    DAT_106d3a0c = FUN_103b2880((undefined4 *)"FrameSystemButton");
    DAT_106d3c20 = FUN_103b29d0((uint *)"ScrollBarSlider");
    DAT_106d3c2c = FUN_103b2880((undefined4 *)"ScrollBarSlider");
    DAT_106d3c3c = FUN_103b29d0((uint *)"PanelListPanel");
    DAT_106d3c48 = FUN_103b2880((undefined4 *)"PanelListPanel");
    DAT_106decac = FUN_102866e0((uint *)"CCurveEditorPanel");
    DAT_106decb8 = FUN_10286590((undefined4 *)"CCurveEditorPanel");
    DAT_106decc8 = FUN_102866e0((uint *)"CProceduralTexturePanel");
    DAT_106decd4 = FUN_10286590((undefined4 *)"CProceduralTexturePanel");
    DAT_106f1bd4 = (int *)(**(code **)(*DAT_106cb7f8 + 0x14c))("__utilWireframe",puVar5);
    DAT_106f1bd8 = (int *)(**(code **)(*DAT_106cb7f8 + 0x14c))("__utilWireframeIgnoreZ",puVar5);
    DAT_106f1bdc = (int *)(**(code **)(*DAT_106cb7f8 + 0x14c))("__utilVertexColor",puVar5);
    DAT_106f1be0 = (int *)(**(code **)(*DAT_106cb7f8 + 0x14c))("__utilVertexColorIgnoreZ",puVar5);
    DAT_106f1d40 = FUN_102865d0(&DAT_106f1d88,(uint *)"CDragDropHelperPanel");
    DAT_106f1d4c = FUN_102864d0(&DAT_106f1de0,(undefined4 *)"CDragDropHelperPanel");
    DAT_106f1e78 = FUN_102866e0((uint *)"AnimationController");
    DAT_106f1e84 = FUN_10286590((undefined4 *)"AnimationController");
    DAT_106f3548 = FUN_102866e0((uint *)"TextEntry");
    DAT_106f3554 = FUN_10286590((undefined4 *)"TextEntry");
    DAT_106f3df8 = FUN_102866e0((uint *)"ComboBox");
    DAT_106f3e04 = FUN_10286590((undefined4 *)"ComboBox");
    DAT_106f3e44 = FUN_102866e0((uint *)"FrameSystemButton");
    DAT_106f3e50 = FUN_10286590((undefined4 *)"FrameSystemButton");
    DAT_106f4060 = FUN_102866e0((uint *)"FileOpenDialog");
    DAT_106f406c = FUN_10286590((undefined4 *)"FileOpenDialog");
    DAT_106f408c = FUN_102866e0((uint *)"FileNameComboBox");
    DAT_106f4098 = FUN_10286590((undefined4 *)"FileNameComboBox");
    DAT_106f40f8 = FUN_102866e0((uint *)"PercentageCroppedImageLabel");
    DAT_106f4104 = FUN_10286590((undefined4 *)"PercentageCroppedImageLabel");
    DAT_106f5538 = FUN_102866e0((uint *)"ListPanel");
    DAT_106f5544 = FUN_10286590((undefined4 *)"ListPanel");
    DAT_106f55b8 = FUN_102866e0((uint *)"MenuSeparator");
    DAT_106f55c4 = FUN_10286590((undefined4 *)"MenuSeparator");
    DAT_106f560c = FUN_102866e0((uint *)"ToggleButton");
    DAT_106f5618 = FUN_10286590((undefined4 *)"ToggleButton");
    DAT_106f5660 = FUN_102866e0((uint *)"ProgressBar");
    DAT_106f566c = FUN_10286590((undefined4 *)"ProgressBar");
    DAT_106f5678 = FUN_102866e0((uint *)"ContinuousProgressBar");
    DAT_106f5684 = FUN_10286590((undefined4 *)"ContinuousProgressBar");
    DAT_106f5690 = FUN_102866e0((uint *)"ImageProgressBar");
    DAT_106f569c = FUN_10286590((undefined4 *)"ImageProgressBar");
    DAT_106f5ac4 = FUN_102866e0((uint *)"Slider");
    DAT_106f5ad0 = FUN_10286590((undefined4 *)"Slider");
    DAT_106f5f20 = FUN_102866e0((uint *)"ScrollBar");
    DAT_106f5f2c = FUN_10286590((undefined4 *)"ScrollBar");
    DAT_106f5f54 = FUN_102866e0((uint *)"ListViewPanel");
    DAT_106f5f60 = FUN_10286590((undefined4 *)"ListViewPanel");
    DAT_106f5f6c = FUN_102866e0((uint *)"ListViewItem");
    DAT_106f5f78 = FUN_10286590((undefined4 *)"ListViewItem");
    DAT_106f5f88 = FUN_102866e0((uint *)"FileOpenStateMachine");
    DAT_106f5f94 = FUN_10286590((undefined4 *)"FileOpenStateMachine");
    DAT_106f5fc4 = FUN_102866e0((uint *)"RadioButton");
    DAT_106f5fd0 = FUN_10286590((undefined4 *)"RadioButton");
    DAT_106f63f0 = FUN_102866e0((uint *)"DirectorySelectDialog");
    DAT_106f63fc = FUN_10286590((undefined4 *)"DirectorySelectDialog");
    DAT_106f6408 = FUN_102866e0((uint *)"CreateDirectoryDialog");
    DAT_106f6414 = FUN_10286590((undefined4 *)"CreateDirectoryDialog");
    DAT_106f643c = FUN_102866e0((uint *)"ImagePanel");
    DAT_106f6448 = FUN_10286590((undefined4 *)"ImagePanel");
    DAT_106f6870 = FUN_102866e0((uint *)"AnimatingImagePanel");
    DAT_106f687c = FUN_10286590((undefined4 *)"AnimatingImagePanel");
    DAT_106f70c4 = FUN_102866e0((uint *)"CvarToggleCheckButton");
    DAT_106f70cc = FUN_10286590((undefined4 *)"CvarToggleCheckButton");
    DAT_106f70f8 = FUN_102866e0((uint *)"Divider");
    DAT_106f7104 = FUN_10286590((undefined4 *)"Divider");
    DAT_106f7128 = FUN_102866e0((uint *)"ExpandButton");
    DAT_106f7134 = FUN_10286590((undefined4 *)"ExpandButton");
    DAT_106f7160 = FUN_102866e0((uint *)"GraphPanel");
    DAT_106f716c = FUN_10286590((undefined4 *)"GraphPanel");
    DAT_106f7190 = FUN_102866e0((uint *)"MenuBar");
    DAT_106f719c = FUN_10286590((undefined4 *)"MenuBar");
    DAT_106f71c4 = FUN_102866e0((uint *)"MenuItem");
    DAT_106f71d0 = FUN_10286590((undefined4 *)"MenuItem");
    DAT_106f71fc = FUN_102866e0((uint *)"MessageBox");
    DAT_106f7208 = FUN_10286590((undefined4 *)"MessageBox");
    DAT_106f7234 = FUN_102866e0((uint *)"CircularProgressBar");
    DAT_106f7240 = FUN_10286590((undefined4 *)"CircularProgressBar");
    DAT_106f7268 = FUN_102866e0((uint *)"ClickPanel");
    DAT_106f7274 = FUN_10286590((undefined4 *)"ClickPanel");
    DAT_106f7280 = FUN_102866e0((uint *)"RichText");
    DAT_106f728c = FUN_10286590((undefined4 *)"RichText");
    DAT_106f72a0 = FUN_102866e0((uint *)"RichTextInterior");
    DAT_106f72ac = FUN_10286590((undefined4 *)"RichTextInterior");
    DAT_106f76d8 = FUN_102866e0((uint *)"ScalableImagePanel");
    DAT_106f76e4 = FUN_10286590((undefined4 *)"ScalableImagePanel");
    DAT_106f7b14 = FUN_102866e0((uint *)"TreeNodeText");
    DAT_106f7b20 = FUN_10286590((undefined4 *)"TreeNodeText");
    DAT_106f7b2c = FUN_102866e0((uint *)"TreeNodeDropPanel");
    DAT_106f7b38 = FUN_10286590((undefined4 *)"TreeNodeDropPanel");
    DAT_106f7b44 = FUN_102866e0((uint *)"TreeNode");
    DAT_106f7b50 = FUN_10286590((undefined4 *)"TreeNode");
    DAT_106f7b78 = FUN_102866e0((uint *)"CTreeViewListControl");
    DAT_106f7b84 = FUN_10286590((undefined4 *)"CTreeViewListControl");
    DAT_106f7ba8 = FUN_102866e0((uint *)"URLLabel");
    DAT_106f7bb4 = FUN_10286590((undefined4 *)"URLLabel");
    DAT_106f7fe0 = FUN_102866e0((uint *)"CountdownLabel");
    DAT_106f7fec = FUN_10286590((undefined4 *)"CountdownLabel");
    DAT_106f8010 = FUN_102866e0((uint *)"MessagingPanel");
    DAT_106f801c = FUN_10286590((undefined4 *)"MessagingPanel");
    DAT_106f81c4 = FUN_102866e0((uint *)"BuildModeDialog");
    DAT_106f81d0 = FUN_10286590((undefined4 *)"BuildModeDialog");
    DAT_106f81ec = FUN_102866e0((uint *)"CSmallTextEntry");
    DAT_106f81f8 = FUN_10286590((undefined4 *)"CSmallTextEntry");
    DAT_106f8204 = FUN_102866e0((uint *)"CBuildModeNavCombo");
    DAT_106f8210 = FUN_10286590((undefined4 *)"CBuildModeNavCombo");
    DAT_106f92b4 = FUN_102866e0((uint *)"BaseInputDialog");
    DAT_106f92c0 = FUN_10286590((undefined4 *)"BaseInputDialog");
    DAT_106f92cc = FUN_102866e0((uint *)"InputDialog");
    DAT_106f92d8 = FUN_10286590((undefined4 *)"InputDialog");
    DAT_106f92e8 = FUN_102866e0((uint *)"ScrollBarSlider");
    DAT_106f92f4 = FUN_10286590((undefined4 *)"ScrollBarSlider");
    DAT_106f9304 = FUN_102866e0((uint *)"COperationFileListFrame");
    DAT_106f9310 = FUN_10286590((undefined4 *)"COperationFileListFrame");
    DAT_106f931c = FUN_102866e0((uint *)"CPerforceFileListFrame");
    DAT_106f9328 = FUN_10286590((undefined4 *)"CPerforceFileListFrame");
    DAT_106f9338 = FUN_102866e0((uint *)"CSaveDocumentQuery");
    DAT_106f9344 = FUN_10286590((undefined4 *)"CSaveDocumentQuery");
    DAT_106f9354 = FUN_102866e0((uint *)"ContextLabel");
    DAT_106f9360 = FUN_10286590((undefined4 *)"ContextLabel");
    DAT_106f936c = FUN_102866e0((uint *)"PageTab");
    DAT_106f9378 = FUN_10286590((undefined4 *)"PageTab");
    DAT_106f9384 = FUN_102866e0((uint *)"PropertySheet");
    DAT_106f9390 = FUN_10286590((undefined4 *)"PropertySheet");
    DAT_106f93ac = FUN_102866e0((uint *)"PanelListPanel");
    DAT_106f93b8 = FUN_10286590((undefined4 *)"PanelListPanel");
    DAT_106f97d0 = FUN_102866e0((uint *)"Splitter");
    DAT_106f97dc = FUN_10286590((undefined4 *)"Splitter");
    DAT_106f97e8 = FUN_102866e0((uint *)"SplitterHandle");
    DAT_106f97f4 = FUN_10286590((undefined4 *)"SplitterHandle");
    DAT_106f9800 = FUN_102866e0((uint *)"SplitterChildPanel");
    DAT_106f980c = FUN_10286590((undefined4 *)"SplitterChildPanel");
    DAT_1072ef74 = (**(code **)(*DAT_107c09d0 + 0x44))("dsp_volume");
    DAT_1072ef78 = (**(code **)(*DAT_107c09d0 + 0x44))("snd_soundmixer");
    DAT_10730128 = FUN_10445410((uint *)"EditablePanel");
    DAT_10730130 = FUN_104452c0((undefined4 *)"EditablePanel");
    DAT_1076e404 = FUN_10445410((uint *)"Panel");
    DAT_1076e40c = FUN_104452c0((undefined4 *)"Panel");
    DAT_1076e414 = FUN_10445410((uint *)"TextEntry");
    DAT_1076e41c = FUN_104452c0((undefined4 *)"TextEntry");
    DAT_1076e424 = FUN_10445410((uint *)"TIRichText");
    DAT_1076e42c = FUN_104452c0((undefined4 *)"TIRichText");
    DAT_1076e59c = FUN_10445410((uint *)"CHudChatHistory");
    DAT_1076e5a8 = FUN_104452c0((undefined4 *)"CHudChatHistory");
    DAT_1076e5b4 = FUN_10445410((uint *)"CBaseHudChat");
    DAT_1076e5c0 = FUN_104452c0((undefined4 *)"CBaseHudChat");
    DAT_1076eed0 = FUN_10445410((uint *)"CLocatorPanel");
    DAT_1076eedc = FUN_104452c0((undefined4 *)"CLocatorPanel");
    DAT_1076ef00 = FUN_10445410((uint *)"CHudNumericDisplay");
    DAT_1076ef0c = FUN_104452c0((undefined4 *)"CHudNumericDisplay");
    DAT_107745c4 = FUN_10445410((uint *)"CHudMenu");
    DAT_107745d0 = FUN_104452c0((undefined4 *)"CHudMenu");
    DAT_107745ec = FUN_10445410((uint *)"CHudMessage");
    DAT_107745f8 = FUN_104452c0((undefined4 *)"CHudMessage");
    DAT_10777b8c = OpenFileMappingW(0xf001f,0,L"MumbleLink");
    DAT_1077c370 = (**(code **)(*piVar2 + 0xc))("blockLOS",1);
    DAT_1077c374 = (**(code **)(*piVar2 + 0xc))("AIWalkable",1);
    DAT_1077c378 = (**(code **)(*piVar2 + 0xc))("damage_table",1);
    DAT_1077c37c = (**(code **)(*piVar2 + 0xc))("physicsmode",1);
    DAT_1077c380 = (**(code **)(*piVar2 + 0xc))("multiplayer_break",1);
    DAT_1077c384 = (**(code **)(*piVar2 + 0xc))("dmg.bullets",1);
    DAT_1077c388 = (**(code **)(*piVar2 + 0xc))("dmg.club",1);
    DAT_1077c38c = (**(code **)(*piVar2 + 0xc))("dmg.explosive",1);
    DAT_1077c390 = (**(code **)(*piVar2 + 0xc))("health",1);
    DAT_1077c394 = (**(code **)(*piVar2 + 0xc))("breakable_model",1);
    DAT_1077c398 = (**(code **)(*piVar2 + 0xc))("breakable_skin",1);
    DAT_1077c39c = (**(code **)(*piVar2 + 0xc))("breakable_count",1);
    DAT_1077c3a0 = (**(code **)(*piVar2 + 0xc))("explosive_damage",1);
    DAT_1077c3a4 = (**(code **)(*piVar2 + 0xc))("explosive_radius",1);
    DAT_1077c3a8 = (**(code **)(*piVar2 + 0xc))("allowstatic",1);
    DAT_1077c3ac = (**(code **)(*piVar2 + 0xc))("pusher_duration",1);
    DAT_1077c3b0 = (**(code **)(*piVar2 + 0xc))("pusher_force",1);
    DAT_1077c3b4 = (**(code **)(*piVar2 + 0xc))("pusher_invert",1);
    DAT_10780010 = FUN_10445410((uint *)"CAvatarImagePanel");
    DAT_1078001c = FUN_104452c0((undefined4 *)"CAvatarImagePanel");
    DAT_10780038 = FUN_10445410((uint *)"Label");
    DAT_10780040 = FUN_104452c0((undefined4 *)"Label");
    DAT_10780048 = FUN_10445410((uint *)"Button");
    DAT_10780050 = FUN_104452c0((undefined4 *)"Button");
    DAT_107800b4 = FUN_10445410((uint *)"CCenterStringLabel");
    DAT_107800c0 = FUN_104452c0((undefined4 *)"CCenterStringLabel");
    DAT_1078037c = FUN_10445410((uint *)"CFPSPanel");
    DAT_10780388 = FUN_104452c0((undefined4 *)"CFPSPanel");
    DAT_10780ffc = FUN_10445410((uint *)"CNotificationToastManager");
    DAT_10781008 = FUN_104452c0((undefined4 *)"CNotificationToastManager");
    DAT_10781458 = FUN_10445410((uint *)"VideoPanel");
    DAT_10781464 = FUN_104452c0((undefined4 *)"VideoPanel");
    DAT_107827d0 = (**(code **)(*DAT_107c0a04 + 0x150))("dev/no_pixel_write","Other textures",1,0);
    DAT_1079363c = FUN_10445410((uint *)"CBaseModelPanel");
    DAT_10793648 = FUN_104452c0((undefined4 *)"CBaseModelPanel");
    DAT_10793664 = FUN_10445410((uint *)"Frame");
    DAT_1079366c = FUN_104452c0((undefined4 *)"Frame");
    DAT_10793678 = FUN_10445410((uint *)"CBaseViewport");
    DAT_10793684 = FUN_104452c0((undefined4 *)"CBaseViewport");
    DAT_10793794 = FUN_10445410((uint *)"CClientScoreBoardDialog");
    DAT_107937a0 = FUN_104452c0((undefined4 *)"CClientScoreBoardDialog");
    DAT_107937b0 = FUN_10445410((uint *)"CommandMenu");
    DAT_107937bc = FUN_104452c0((undefined4 *)"CommandMenu");
    DAT_107937c8 = FUN_10445410((uint *)"CIconPanel");
    DAT_107937d4 = FUN_104452c0((undefined4 *)"CIconPanel");
    DAT_107937f4 = FUN_10445410((uint *)"CMapOverview");
    DAT_10793800 = FUN_104452c0((undefined4 *)"CMapOverview");
    DAT_10793be0 = FUN_10445410((uint *)"CNavProgress");
    DAT_10793bec = FUN_104452c0((undefined4 *)"CNavProgress");
    DAT_10793bfc = FUN_10445410((uint *)"CSpectatorGUI");
    DAT_10793c08 = FUN_104452c0((undefined4 *)"CSpectatorGUI");
    DAT_10793d54 = FUN_10445410((uint *)"CTeamMenu");
    DAT_10793d60 = FUN_104452c0((undefined4 *)"CTeamMenu");
    DAT_10793d6c = FUN_10445410((uint *)"CTextWindow");
    DAT_10793d78 = FUN_104452c0((undefined4 *)"CTextWindow");
    DAT_10795608 = (int *)(**(code **)(*DAT_107c0a08 + 0x14c))("debug_rt",this_00);
    DAT_10795620 = (int *)(**(code **)(*DAT_107c0a04 + 0x14c))("__skymask_draw",puVar2);
    DAT_10795624 = (int *)(**(code **)(*DAT_107c0a04 + 0x14c))("__viewmodelmask_draw",puVar2);
    DAT_10795628 = (int *)(**(code **)(*DAT_107c0a04 + 0x14c))("_skymask_restore",puVar2);
    DAT_1079562c = (int *)(**(code **)(*DAT_107c0a04 + 0x14c))("__skymask_combine",puVar2);
    DAT_10795630 = (int *)(**(code **)(*DAT_107c0a04 + 0x14c))("__viewmodelmask_combine",puVar2);
    DAT_107959f0 = FUN_10445410((uint *)"CheckButton");
    DAT_107959f8 = FUN_104452c0((undefined4 *)"CheckButton");
    DAT_10795a10 = FUN_10445410((uint *)"CCreateMultiplayerGameBotPage");
    DAT_10795a1c = FUN_104452c0((undefined4 *)"CCreateMultiplayerGameBotPage");
    DAT_10795a2c = FUN_10445410((uint *)"CCreateMultiplayerGameDialog");
    DAT_10795a38 = FUN_104452c0((undefined4 *)"CCreateMultiplayerGameDialog");
    DAT_10795a48 = FUN_10445410((uint *)"PropertyPage");
    DAT_10795a50 = FUN_104452c0((undefined4 *)"PropertyPage");
    DAT_10795ae0 = FUN_10445410((uint *)"CCreateMultiplayerGameServerPage");
    DAT_10795aec = FUN_104452c0((undefined4 *)"CCreateMultiplayerGameServerPage");
    DAT_10795b24 = FUN_10445410((uint *)"CCvarSlider");
    DAT_10795b30 = FUN_104452c0((undefined4 *)"CCvarSlider");
    DAT_10795b60 = FUN_10445410((uint *)"CCvarToggleCheckButton");
    DAT_10795b6c = FUN_104452c0((undefined4 *)"CCvarToggleCheckButton");
    DAT_10795bb8 = FUN_10445410((uint *)"CGameConsoleDialog");
    DAT_10795bc4 = FUN_104452c0((undefined4 *)"CGameConsoleDialog");
    DAT_107972b0 = FUN_10445410((uint *)"CMouseMessageForwardingPanel");
    DAT_107972bc = FUN_104452c0((undefined4 *)"CMouseMessageForwardingPanel");
    DAT_10797308 = FUN_10445410((uint *)"ImagePanel");
    DAT_10797310 = FUN_104452c0((undefined4 *)"ImagePanel");
    DAT_10797328 = FUN_10445410((uint *)"CGammaDialog");
    DAT_10797334 = FUN_104452c0((undefined4 *)"CGammaDialog");
    DAT_10797350 = FUN_10445410((uint *)"ScrollBar");
    DAT_10797358 = FUN_104452c0((undefined4 *)"ScrollBar");
    DAT_10797364 = FUN_10445410((uint *)"CPanelListPanel");
    DAT_10797370 = FUN_104452c0((undefined4 *)"CPanelListPanel");
    DAT_10797810 = FUN_10445410((uint *)"URLButton");
    DAT_1079781c = FUN_104452c0((undefined4 *)"URLButton");
    DAT_10797c30 = FUN_10445410((uint *)"SectionedListPanel");
    DAT_10797c38 = FUN_104452c0((undefined4 *)"SectionedListPanel");
    DAT_10797e34 = FUN_10445410((uint *)"CBaseModFrame");
    DAT_10797e40 = FUN_104452c0((undefined4 *)"CBaseModFrame");
    DAT_1079825c = FUN_10445410((uint *)"CBaseModPanel");
    DAT_10798268 = FUN_104452c0((undefined4 *)"CBaseModPanel");
    DAT_107982e4 = FUN_10445410((uint *)"TIGameOptions");
    DAT_107982f0 = FUN_104452c0((undefined4 *)"TIGameOptions");
    DAT_10798324 = FUN_10445410((uint *)"GameModes");
    DAT_10798330 = FUN_104452c0((undefined4 *)"GameModes");
    DAT_107984a4 = FUN_10445410((uint *)"CBaseModTransitionPanel");
    DAT_107984b0 = FUN_104452c0((undefined4 *)"CBaseModTransitionPanel");
    DAT_107986e4 = FUN_10445410((uint *)"Achievements");
    DAT_107986f0 = FUN_104452c0((undefined4 *)"Achievements");
    DAT_107986fc = FUN_10445410((uint *)"AchievementGenericPanelList");
    DAT_10798708 = FUN_104452c0((undefined4 *)"AchievementGenericPanelList");
    DAT_10798718 = FUN_10445410((uint *)"CAdvancedVideo");
    DAT_10798724 = FUN_104452c0((undefined4 *)"CAdvancedVideo");
    DAT_10798738 = FUN_10445410((uint *)"Audio");
    DAT_10798744 = FUN_104452c0((undefined4 *)"Audio");
    DAT_10798754 = FUN_10445410((uint *)"AudioVideo");
    DAT_10798760 = FUN_104452c0((undefined4 *)"AudioVideo");
    DAT_10798770 = FUN_10445410((uint *)"ControllerOptions");
    DAT_1079877c = FUN_104452c0((undefined4 *)"ControllerOptions");
    DAT_107987c8 = FUN_10445410((uint *)"ControllerOptionsButtons");
    DAT_107987d4 = FUN_104452c0((undefined4 *)"ControllerOptionsButtons");
    DAT_107987e8 = FUN_10445410((uint *)"ControllerOptionsSticks");
    DAT_107987f4 = FUN_104452c0((undefined4 *)"ControllerOptionsSticks");
    DAT_10798844 = FUN_10445410((uint *)"CDialogListButton");
    DAT_10798850 = FUN_104452c0((undefined4 *)"CDialogListButton");
    DAT_10798878 = FUN_10445410((uint *)"DropDownMenu");
    DAT_10798884 = FUN_104452c0((undefined4 *)"DropDownMenu");
    DAT_10798894 = FUN_10445410((uint *)"CExtrasDialog");
    DAT_107988a0 = FUN_104452c0((undefined4 *)"CExtrasDialog");
    DAT_107988ac = FUN_10445410((uint *)"CInfoLabel");
    DAT_107988b8 = FUN_104452c0((undefined4 *)"CInfoLabel");
    DAT_107988c4 = FUN_10445410((uint *)"CInfoListItem");
    DAT_107988d0 = FUN_104452c0((undefined4 *)"CInfoListItem");
    DAT_107988e0 = FUN_10445410((uint *)"CFadeOutStartGame");
    DAT_107988ec = FUN_104452c0((undefined4 *)"CFadeOutStartGame");
    DAT_107988fc = FUN_10445410((uint *)"CFadeOutToEconUI");
    DAT_10798908 = FUN_104452c0((undefined4 *)"CFadeOutToEconUI");
    DAT_10798930 = FUN_10445410((uint *)"FlyoutMenu");
    DAT_1079893c = FUN_104452c0((undefined4 *)"FlyoutMenu");
    DAT_10798a04 = FUN_10445410((uint *)"CBaseModFooterPanel");
    DAT_10798a10 = FUN_104452c0((undefined4 *)"CBaseModFooterPanel");
    DAT_10798a1c = FUN_10445410((uint *)"CFooterBitmapButton");
    DAT_10798a28 = FUN_104452c0((undefined4 *)"CFooterBitmapButton");
    DAT_10798a3c = FUN_10445410((uint *)"GenericConfirmation");
    DAT_10798a48 = FUN_104452c0((undefined4 *)"GenericConfirmation");
    DAT_10798a58 = FUN_10445410((uint *)"GenericPanelList");
    DAT_10798a64 = FUN_104452c0((undefined4 *)"GenericPanelList");
    DAT_10798a74 = FUN_10445410((uint *)"Panel_PassNavigationToParent");
    DAT_10798a80 = FUN_104452c0((undefined4 *)"Panel_PassNavigationToParent");
    DAT_10798a90 = FUN_10445410((uint *)"GenericWaitScreen");
    DAT_10798a9c = FUN_104452c0((undefined4 *)"GenericWaitScreen");
    DAT_10798b74 = FUN_10445410((uint *)"BaseModHybridButton");
    DAT_10798b80 = FUN_104452c0((undefined4 *)"BaseModHybridButton");
    DAT_10798bf4 = FUN_10445410((uint *)"InGameMainMenu");
    DAT_10798c00 = FUN_104452c0((undefined4 *)"InGameMainMenu");
    DAT_10798c28 = FUN_10445410((uint *)"CKeyBindings");
    DAT_10798c34 = FUN_104452c0((undefined4 *)"CKeyBindings");
    DAT_10798c54 = (**(code **)(*piVar1 + 0xc))("Binding",1);
    DAT_10798dcc = FUN_10445410((uint *)"LoadingProgress");
    DAT_10798dd8 = FUN_104452c0((undefined4 *)"LoadingProgress");
    DAT_10798e9c = FUN_10445410((uint *)"MainMenu");
    DAT_10798ea8 = FUN_104452c0((undefined4 *)"MainMenu");
    DAT_10798ecc = FUN_10445410((uint *)"BaseModMenuBackground");
    DAT_10798ed8 = FUN_104452c0((undefined4 *)"BaseModMenuBackground");
    DAT_10798f5c = FUN_10445410((uint *)"CMoviePlayer");
    DAT_10798f68 = FUN_104452c0((undefined4 *)"CMoviePlayer");
    DAT_10798f78 = FUN_10445410((uint *)"Multiplayer");
    DAT_10798f84 = FUN_104452c0((undefined4 *)"Multiplayer");
    DAT_10798f98 = FUN_10445410((uint *)"Options");
    DAT_10798fa4 = FUN_104452c0((undefined4 *)"Options");
    DAT_10798fb8 = FUN_10445410((uint *)"PasswordEntry");
    DAT_10798fc4 = FUN_104452c0((undefined4 *)"PasswordEntry");
    DAT_10798fe4 = FUN_10445410((uint *)"SliderControl");
    DAT_10798ff0 = FUN_104452c0((undefined4 *)"SliderControl");
    DAT_10799000 = FUN_10445410((uint *)"CSoundTest");
    DAT_1079900c = FUN_104452c0((undefined4 *)"CSoundTest");
    DAT_10799024 = FUN_10445410((uint *)"CTransitionScreen");
    DAT_10799030 = FUN_104452c0((undefined4 *)"CTransitionScreen");
    DAT_10799040 = FUN_10445410((uint *)"Video");
    DAT_1079904c = FUN_104452c0((undefined4 *)"Video");
    DAT_1079905c = FUN_10445410((uint *)"VoteOptions");
    DAT_10799068 = FUN_104452c0((undefined4 *)"VoteOptions");
    DAT_10799078 = FUN_10445410((uint *)"XboxLiveOptions");
    DAT_10799084 = FUN_104452c0((undefined4 *)"XboxLiveOptions");
    DAT_1079920c = FUN_10445410((uint *)"TIRankListFrame");
    DAT_10799218 = FUN_104452c0((undefined4 *)"TIRankListFrame");
    DAT_10799224 = FUN_10445410((uint *)"TIMessageBox");
    DAT_10799230 = FUN_104452c0((undefined4 *)"TIMessageBox");
    DAT_1079923c = FUN_10445410((uint *)"TIPopUp_Base");
    DAT_10799248 = FUN_104452c0((undefined4 *)"TIPopUp_Base");
    DAT_10799254 = FUN_10445410((uint *)"CBaseItemPurchasingPopup");
    DAT_10799260 = FUN_104452c0((undefined4 *)"CBaseItemPurchasingPopup");
    DAT_1079926c = FUN_10445410((uint *)"CPopUp_Purchase_Buy");
    DAT_10799278 = FUN_104452c0((undefined4 *)"CPopUp_Purchase_Buy");
    DAT_107992a0 = FUN_10445410((uint *)"CTINotificationToast");
    DAT_107992ac = FUN_104452c0((undefined4 *)"CTINotificationToast");
    DAT_107992e0 = FUN_10445410((uint *)"CWeaponStatsPanel");
    DAT_107992ec = FUN_104452c0((undefined4 *)"CWeaponStatsPanel");
    DAT_107992f8 = FUN_10445410((uint *)"CTIItemAttributePanel");
    DAT_10799304 = FUN_104452c0((undefined4 *)"CTIItemAttributePanel");
    DAT_10799310 = FUN_10445410((uint *)"CTIItemAttributesPanel");
    DAT_1079931c = FUN_104452c0((undefined4 *)"CTIItemAttributesPanel");
    DAT_10799358 = FUN_10445410((uint *)"CTeamListPanel");
    DAT_10799364 = FUN_104452c0((undefined4 *)"CTeamListPanel");
    DAT_1079a024 = FUN_10445410((uint *)"CBackpack_ContentsList");
    DAT_1079a030 = FUN_104452c0((undefined4 *)"CBackpack_ContentsList");
    DAT_1079a03c = FUN_10445410((uint *)"CBackpackSlotItem");
    DAT_1079a048 = FUN_104452c0((undefined4 *)"CBackpackSlotItem");
    DAT_1079a058 = FUN_10445410((uint *)"TICheckButton");
    DAT_1079a064 = FUN_104452c0((undefined4 *)"TICheckButton");
    DAT_1079a09c = FUN_10445410((uint *)"CInventoryItem");
    DAT_1079a0a8 = FUN_104452c0((undefined4 *)"CInventoryItem");
    DAT_1079a0b4 = FUN_10445410((uint *)"CSlotItem");
    DAT_1079a0c0 = FUN_104452c0((undefined4 *)"CSlotItem");
    DAT_1079a0cc = FUN_10445410((uint *)"CRequisitionComboBox");
    DAT_1079a0d8 = FUN_104452c0((undefined4 *)"CRequisitionComboBox");
    DAT_1079a110 = FUN_10445410((uint *)"TIMainMenuLocalUserInfoContainer");
    DAT_1079a11c = FUN_104452c0((undefined4 *)"TIMainMenuLocalUserInfoContainer");
    DAT_1079a144 = FUN_10445410((uint *)"TIMainMenuSocialContainer");
    DAT_1079a150 = FUN_104452c0((undefined4 *)"TIMainMenuSocialContainer");
    DAT_1079a160 = FUN_10445410((uint *)"CContextMenuBase");
    DAT_1079a16c = FUN_104452c0((undefined4 *)"CContextMenuBase");
    DAT_1079a178 = FUN_10445410((uint *)"CFriendsListPanel");
    DAT_1079a184 = FUN_104452c0((undefined4 *)"CFriendsListPanel");
    DAT_1079a1ac = FUN_10445410((uint *)"KeyboardMouse");
    DAT_1079a1b8 = FUN_104452c0((undefined4 *)"KeyboardMouse");
    DAT_1079a1c4 = FUN_10445410((uint *)"CHudClock");
    DAT_1079a1d0 = FUN_104452c0((undefined4 *)"CHudClock");
    DAT_1079a274 = FUN_10445410((uint *)"CTIFreezePanel");
    DAT_1079a280 = FUN_104452c0((undefined4 *)"CTIFreezePanel");
    DAT_1079a28c = FUN_10445410((uint *)"HorizontalGauge");
    DAT_1079a298 = FUN_104452c0((undefined4 *)"HorizontalGauge");
    DAT_1079a5b4 = FUN_10445410((uint *)"CHudFullscreen");
    DAT_1079a5c0 = FUN_104452c0((undefined4 *)"CHudFullscreen");
    DAT_1079a5cc = FUN_10445410((uint *)"CHudGrenades");
    DAT_1079a5d8 = FUN_104452c0((undefined4 *)"CHudGrenades");
    DAT_1079a5f4 = FUN_10445410((uint *)"CHudHoldingObject");
    DAT_1079a600 = FUN_104452c0((undefined4 *)"CHudHoldingObject");
    DAT_1079a61c = FUN_10445410((uint *)"CHUDMissionStatus");
    DAT_1079a628 = FUN_104452c0((undefined4 *)"CHUDMissionStatus");
    DAT_1079a77c = FUN_10445410((uint *)"CHudOBJLocator");
    DAT_1079a788 = FUN_104452c0((undefined4 *)"CHudOBJLocator");
    DAT_1079a7c4 = FUN_10445410((uint *)"CHudHealth");
    DAT_1079a7d0 = FUN_104452c0((undefined4 *)"CHudHealth");
    DAT_1079a804 = FUN_10445410((uint *)"CTIHudChatLine");
    DAT_1079a810 = FUN_104452c0((undefined4 *)"CTIHudChatLine");
    DAT_1079a81c = FUN_10445410((uint *)"CTIHudChatInputLine");
    DAT_1079a828 = FUN_104452c0((undefined4 *)"CTIHudChatInputLine");
    DAT_1079a834 = FUN_10445410((uint *)"CTIHudChat");
    DAT_1079a840 = FUN_104452c0((undefined4 *)"CTIHudChat");
    DAT_1079a8b0 = FUN_10445410((uint *)"CHudTICrosshair");
    DAT_1079a8bc = FUN_104452c0((undefined4 *)"CHudTICrosshair");
    DAT_1079a9d0 = FUN_10445410((uint *)"CHudDamageIndicator");
    DAT_1079a9dc = FUN_104452c0((undefined4 *)"CHudDamageIndicator");
    DAT_1079aa64 = FUN_10445410((uint *)"TIHudDeathNotice");
    DAT_1079aa70 = FUN_104452c0((undefined4 *)"TIHudDeathNotice");
    DAT_1079aa84 = FUN_10445410((uint *)"CHudDisplayBonuses");
    DAT_1079aa90 = FUN_104452c0((undefined4 *)"CHudDisplayBonuses");
    DAT_1079abd4 = FUN_10445410((uint *)"KilledByPanel");
    DAT_1079abe0 = FUN_104452c0((undefined4 *)"KilledByPanel");
    DAT_1079ac54 = FUN_10445410((uint *)"CHudGamePanel");
    DAT_1079ac60 = FUN_104452c0((undefined4 *)"CHudGamePanel");
    DAT_1079ad34 = FUN_10445410((uint *)"CHUDPlayerHitOutput");
    DAT_1079ad40 = FUN_104452c0((undefined4 *)"CHUDPlayerHitOutput");
    DAT_1079ad50 = FUN_10445410((uint *)"CHudWeaponSelection");
    DAT_1079ad5c = FUN_104452c0((undefined4 *)"CHudWeaponSelection");
    DAT_1079adb0 = FUN_10445410((uint *)"CHUDHealthVehicle");
    DAT_1079adbc = FUN_104452c0((undefined4 *)"CHUDHealthVehicle");
    DAT_1079ae10 = FUN_10445410((uint *)"CHudVoiceSelfStatus");
    DAT_1079ae1c = FUN_104452c0((undefined4 *)"CHudVoiceSelfStatus");
    DAT_1079ae48 = FUN_10445410((uint *)"CHudVoiceStatus");
    DAT_1079ae54 = FUN_104452c0((undefined4 *)"CHudVoiceStatus");
    DAT_1079ae74 = FUN_10445410((uint *)"VoteBarPanel");
    DAT_1079ae80 = FUN_104452c0((undefined4 *)"VoteBarPanel");
    DAT_1079ae90 = FUN_10445410((uint *)"CVoteSetupDialog");
    DAT_1079ae9c = FUN_104452c0((undefined4 *)"CVoteSetupDialog");
    DAT_1079aea8 = FUN_10445410((uint *)"CHudVote");
    DAT_1079aeb4 = FUN_104452c0((undefined4 *)"CHudVote");
    DAT_1079af84 = FUN_10445410((uint *)"CHudAmmo");
    DAT_1079af90 = FUN_104452c0((undefined4 *)"CHudAmmo");
    DAT_1079d0d4 = (**(code **)(*DAT_107c0a08 + 0x14c))("__INVULN_BLUE",puVar2);
    DAT_1079d0d8 = (**(code **)(*DAT_107c0a08 + 0x14c))("__INVULN_RED",puVar2);
    DAT_107a88ec = FUN_10445410((uint *)"TIViewport");
    DAT_107a88f8 = FUN_104452c0((undefined4 *)"TIViewport");
    DAT_107a9124 = FUN_10445410((uint *)"FullscreenTIViewport");
    DAT_107a9130 = FUN_104452c0((undefined4 *)"FullscreenTIViewport");
    DAT_107a913c = FUN_10445410((uint *)"ClientModeTINormalFullscreen");
    DAT_107a9148 = FUN_104452c0((undefined4 *)"ClientModeTINormalFullscreen");
    DAT_107a9154 = FUN_10445410((uint *)"CPolygonButton");
    DAT_107a9160 = FUN_104452c0((undefined4 *)"CPolygonButton");
    DAT_107a916c = FUN_10445410((uint *)"CRadialButton");
    DAT_107a9178 = FUN_104452c0((undefined4 *)"CRadialButton");
    DAT_107a9194 = FUN_10445410((uint *)"CRadialMenuPanel");
    DAT_107a91a0 = FUN_104452c0((undefined4 *)"CRadialMenuPanel");
    DAT_107a91ac = FUN_10445410((uint *)"CRadialMenu");
    DAT_107a91b8 = FUN_104452c0((undefined4 *)"CRadialMenu");
    DAT_107a9584 = FUN_10445410((uint *)"CEORTeamScores");
    DAT_107a9590 = FUN_104452c0((undefined4 *)"CEORTeamScores");
    DAT_107a959c = FUN_10445410((uint *)"CRoundWinHeader");
    DAT_107a95a8 = FUN_104452c0((undefined4 *)"CRoundWinHeader");
    DAT_107a95b4 = FUN_10445410((uint *)"CRoundWinScores");
    DAT_107a95c0 = FUN_104452c0((undefined4 *)"CRoundWinScores");
    DAT_107a95cc = FUN_10445410((uint *)"CRoundWinPersonalStats");
    DAT_107a95d8 = FUN_104452c0((undefined4 *)"CRoundWinPersonalStats");
    DAT_107a95e4 = FUN_10445410((uint *)"CRoundWinPanel");
    DAT_107a95f0 = FUN_104452c0((undefined4 *)"CRoundWinPanel");
    DAT_107a95fc = FUN_10445410((uint *)"CHudPanelRoundWin");
    DAT_107a9608 = FUN_104452c0((undefined4 *)"CHudPanelRoundWin");
    DAT_107a9624 = FUN_10445410((uint *)"CScoreHeader");
    DAT_107a9630 = FUN_104452c0((undefined4 *)"CScoreHeader");
    DAT_107a963c = FUN_10445410((uint *)"CScoreListItem");
    DAT_107a9648 = FUN_104452c0((undefined4 *)"CScoreListItem");
    DAT_107a9654 = FUN_10445410((uint *)"CScoreListPanel");
    DAT_107a9660 = FUN_104452c0((undefined4 *)"CScoreListPanel");
    DAT_107a966c = FUN_10445410((uint *)"CTIScoreboard");
    DAT_107a9678 = FUN_104452c0((undefined4 *)"CTIScoreboard");
    DAT_107a9684 = FUN_10445410((uint *)"CTISpectatorMenu");
    DAT_107a9690 = FUN_104452c0((undefined4 *)"CTISpectatorMenu");
    DAT_107a969c = FUN_10445410((uint *)"CSpectatorPlayerItem");
    DAT_107a96a8 = FUN_104452c0((undefined4 *)"CSpectatorPlayerItem");
    DAT_107a96b4 = FUN_10445410((uint *)"CSpectatorPlayerList");
    DAT_107a96c0 = FUN_104452c0((undefined4 *)"CSpectatorPlayerList");
    DAT_107a96cc = FUN_10445410((uint *)"CTISpectatorGUI");
    DAT_107a96d8 = FUN_104452c0((undefined4 *)"CTISpectatorGUI");
    DAT_107a96f4 = FUN_10445410((uint *)"CTITeamMenu");
    DAT_107a9700 = FUN_104452c0((undefined4 *)"CTITeamMenu");
    DAT_107a970c = FUN_10445410((uint *)"CSDKTextWindow");
    DAT_107a9718 = FUN_104452c0((undefined4 *)"CSDKTextWindow");
    DAT_107a97d8 = FUN_10445410((uint *)"CHudMiniMap");
    DAT_107a97e4 = FUN_104452c0((undefined4 *)"CHudMiniMap");
    DAT_107a98fc = FUN_10445410((uint *)"CPlanCreationMenu");
    DAT_107a9908 = FUN_104452c0((undefined4 *)"CPlanCreationMenu");
    DAT_107a9914 = FUN_10445410((uint *)"CVoiceListItem");
    DAT_107a9920 = FUN_104452c0((undefined4 *)"CVoiceListItem");
    DAT_107a992c = FUN_10445410((uint *)"CVoiceListPanel");
    DAT_107a9938 = FUN_104452c0((undefined4 *)"CVoiceListPanel");
    DAT_107a9944 = FUN_10445410((uint *)"TIVoiceControl");
    DAT_107a9950 = FUN_104452c0((undefined4 *)"TIVoiceControl");
    DAT_107a996c = FUN_10445410((uint *)"CVoicePlayerListContext");
    DAT_107a9978 = FUN_104452c0((undefined4 *)"CVoicePlayerListContext");
    DAT_107a9998 = FUN_10445410((uint *)"TIImageButton");
    DAT_107a99a0 = FUN_104452c0((undefined4 *)"TIImageButton");
    DAT_107a99ac = FUN_10445410((uint *)"TIScrollBar");
    DAT_107a99b8 = FUN_104452c0((undefined4 *)"TIScrollBar");
    DAT_107a99c4 = FUN_10445410((uint *)"CChatRichText");
    DAT_107a99d0 = FUN_104452c0((undefined4 *)"CChatRichText");
    DAT_107a99dc = FUN_10445410((uint *)"CChatPanel");
    DAT_107a99e8 = FUN_104452c0((undefined4 *)"CChatPanel");
    DAT_107a99f4 = FUN_10445410((uint *)"CTimeLabel");
    DAT_107a9a00 = FUN_104452c0((undefined4 *)"CTimeLabel");
    DAT_107a9a40 = FUN_10445410((uint *)"CTIMDLPanel");
    DAT_107a9a4c = FUN_104452c0((undefined4 *)"CTIMDLPanel");
    DAT_107a9a58 = FUN_10445410((uint *)"CPlayerPreviewPanel");
    DAT_107a9a64 = FUN_104452c0((undefined4 *)"CPlayerPreviewPanel");
    DAT_107a9a78 = FUN_10445410((uint *)"CItemPreviewPanel");
    DAT_107a9a84 = FUN_104452c0((undefined4 *)"CItemPreviewPanel");
    DAT_107a9a98 = FUN_10445410((uint *)"CFilterablePanelListPanel");
    DAT_107a9aa4 = FUN_104452c0((undefined4 *)"CFilterablePanelListPanel");
    DAT_107a9ab0 = FUN_10445410((uint *)"CFilterComboBox");
    DAT_107a9abc = FUN_104452c0((undefined4 *)"CFilterComboBox");
    DAT_107a9ac8 = FUN_10445410((uint *)"CKeyLabel");
    DAT_107a9ad4 = FUN_104452c0((undefined4 *)"CKeyLabel");
    DAT_107a9ae0 = FUN_10445410((uint *)"CTipPanel");
    DAT_107a9aec = FUN_104452c0((undefined4 *)"CTipPanel");
    DAT_107a9fc8 = FUN_10445410((uint *)"TIUserAvatarPanel");
    DAT_107a9fd4 = FUN_104452c0((undefined4 *)"TIUserAvatarPanel");
    DAT_107a9fe0 = FUN_10445410((uint *)"TIHorizontalList");
    DAT_107a9fec = FUN_104452c0((undefined4 *)"TIHorizontalList");
    DAT_107a9ffc = FUN_10445410((uint *)"TIAvatarSelectionList");
    DAT_107aa008 = FUN_104452c0((undefined4 *)"TIAvatarSelectionList");
    DAT_107aa014 = FUN_10445410((uint *)"TILocalInfoLabel");
    DAT_107aa020 = FUN_104452c0((undefined4 *)"TILocalInfoLabel");
    DAT_107aa02c = FUN_10445410((uint *)"CTIUserStatLabel");
    DAT_107aa038 = FUN_104452c0((undefined4 *)"CTIUserStatLabel");
    DAT_107aa044 = FUN_10445410((uint *)"CTIUserStatContainer");
    DAT_107aa050 = FUN_104452c0((undefined4 *)"CTIUserStatContainer");
    DAT_107aa05c = FUN_10445410((uint *)"BorderedPanel");
    DAT_107aa068 = FUN_104452c0((undefined4 *)"BorderedPanel");
    DAT_107aa074 = FUN_10445410((uint *)"ExclusiveEditablePanel");
    DAT_107aa080 = FUN_104452c0((undefined4 *)"ExclusiveEditablePanel");
    DAT_107aa534 = FUN_10445410((uint *)"MarqueeLabel");
    DAT_107aa540 = FUN_104452c0((undefined4 *)"MarqueeLabel");
    DAT_107aa964 = FUN_10445410((uint *)"PanelListPanel2");
    DAT_107aa970 = FUN_104452c0((undefined4 *)"PanelListPanel2");
    DAT_107aad94 = FUN_10445410((uint *)"PropertyBox");
    DAT_107aada0 = FUN_104452c0((undefined4 *)"PropertyBox");
    DAT_107aadfc = FUN_10445410((uint *)"TIButton");
    DAT_107aae08 = FUN_104452c0((undefined4 *)"TIButton");
    DAT_107aae14 = FUN_10445410((uint *)"TIImageButtonToggle");
    DAT_107aae20 = FUN_104452c0((undefined4 *)"TIImageButtonToggle");
    DAT_107aae2c = FUN_10445410((uint *)"TIRadioButton");
    DAT_107aae38 = FUN_104452c0((undefined4 *)"TIRadioButton");
    DAT_107aae44 = FUN_10445410((uint *)"TIConVarCheckButton");
    DAT_107aae50 = FUN_104452c0((undefined4 *)"TIConVarCheckButton");
    DAT_107aaeac = FUN_10445410((uint *)"TIPropertyPage");
    DAT_107aaeb8 = FUN_104452c0((undefined4 *)"TIPropertyPage");
    DAT_107aaec8 = FUN_10445410((uint *)"TITabContainer");
    DAT_107aaed4 = FUN_104452c0((undefined4 *)"TITabContainer");
    DAT_107aaee0 = FUN_10445410((uint *)"TIPageTab");
    DAT_107aaeec = FUN_104452c0((undefined4 *)"TIPageTab");
    DAT_107aaef8 = FUN_10445410((uint *)"TIPropertySheet");
    DAT_107aaf04 = FUN_104452c0((undefined4 *)"TIPropertySheet");
    DAT_107aaf1c = FUN_10445410((uint *)"CExButton");
    DAT_107aaf28 = FUN_104452c0((undefined4 *)"CExButton");
    DAT_107aaf34 = FUN_10445410((uint *)"CExImageButton");
    DAT_107aaf40 = FUN_104452c0((undefined4 *)"CExImageButton");
    DAT_107aaf4c = FUN_10445410((uint *)"CExLabel");
    DAT_107aaf58 = FUN_104452c0((undefined4 *)"CExLabel");
    DAT_107aaf64 = FUN_10445410((uint *)"CExRichText");
    DAT_107aaf70 = FUN_104452c0((undefined4 *)"CExRichText");
    DAT_107aaf7c = FUN_10445410((uint *)"CRichTextWithScrollbarBorders");
    DAT_107aaf88 = FUN_104452c0((undefined4 *)"CRichTextWithScrollbarBorders");
    DAT_107aaf94 = FUN_10445410((uint *)"CExplanationPopup");
    DAT_107aafa0 = FUN_104452c0((undefined4 *)"CExplanationPopup");
    DAT_107ac1a4 = FUN_10445410((uint *)"CNotificationToastControl");
    DAT_107ac1b0 = FUN_104452c0((undefined4 *)"CNotificationToastControl");
    DAT_107ac1bc = FUN_10445410((uint *)"CNotificationQueuePanel");
    DAT_107ac1c8 = FUN_104452c0((undefined4 *)"CNotificationQueuePanel");
    DAT_107ac1d4 = FUN_10445410((uint *)"CNotificationsPresentPanel");
    DAT_107ac1e0 = FUN_104452c0((undefined4 *)"CNotificationsPresentPanel");
    DAT_107ac1ec = FUN_10445410((uint *)"CTILocalPlayerPlanPanel");
    DAT_107ac1f8 = FUN_104452c0((undefined4 *)"CTILocalPlayerPlanPanel");
    DAT_107ac224 = FUN_10445410((uint *)"CTISquadButton");
    DAT_107ac230 = FUN_104452c0((undefined4 *)"CTISquadButton");
    DAT_107ac244 = FUN_10445410((uint *)"CTIGamePanel");
    DAT_107ac250 = FUN_104452c0((undefined4 *)"CTIGamePanel");
    DAT_107ac300 = FUN_104452c0((undefined4 *)"CDummyPanel");
    DAT_107ac30c = FUN_10445410((uint *)"CLoadoutSlotPanel");
    DAT_107ac318 = FUN_104452c0((undefined4 *)"CLoadoutSlotPanel");
    DAT_107ac324 = FUN_10445410((uint *)"CLoadoutSlotTitleLabel");
    DAT_107ac330 = FUN_104452c0((undefined4 *)"CLoadoutSlotTitleLabel");
    DAT_107ac33c = FUN_10445410((uint *)"CLoadoutSlotLabelItemImage");
    DAT_107ac348 = FUN_104452c0((undefined4 *)"CLoadoutSlotLabelItemImage");
    DAT_107ac354 = FUN_10445410((uint *)"CLoadoutSlotLabelItemLabel");
    DAT_107ac360 = FUN_104452c0((undefined4 *)"CLoadoutSlotLabelItemLabel");
    DAT_107ac36c = FUN_10445410((uint *)"CLoadoutSlotLabel");
    DAT_107ac378 = FUN_104452c0((undefined4 *)"CLoadoutSlotLabel");
    DAT_107ac384 = FUN_10445410((uint *)"CLoadoutSlotPreview");
    DAT_107ac390 = FUN_104452c0((undefined4 *)"CLoadoutSlotPreview");
    DAT_107ac398 = FUN_10445410((uint *)"CLoadoutSlotPreview");
    DAT_107ac3a0 = FUN_104452c0((undefined4 *)"CLoadoutSlotPreview");
    DAT_107ac3a8 = FUN_10445410((uint *)"CLoadoutSlotPreview");
    DAT_107ac3b0 = FUN_104452c0((undefined4 *)"CLoadoutSlotPreview");
    DAT_107b4bc0 = (uint *)FUN_1014fb90(this,(int *)"effects/spark");
    DAT_107b4c8c = (**(code **)(*piVar1 + 0xc))("gamekeyvalues",1);
    DAT_107d40c8 = FUN_10445410((uint *)"CPotteryWheelPanel");
    DAT_107d40d4 = FUN_104452c0((undefined4 *)"CPotteryWheelPanel");
    DAT_107d4844 = FUN_10445410((uint *)"CMDLPanel");
    DAT_107d4850 = FUN_104452c0((undefined4 *)"CMDLPanel");
    DAT_1083fffc = (int *)(**(code **)(*DAT_107c0a08 + 0x14c))("__utilWireframe",puVar5);
    DAT_10840000 = (int *)(**(code **)(*DAT_107c0a08 + 0x14c))("__utilWireframeIgnoreZ",puVar5);
    DAT_10840120 = FUN_10445300(&DAT_10840168,(uint *)"CDragDropHelperPanel");
    DAT_1084012c = FUN_10445200(&DAT_108401c0,(undefined4 *)"CDragDropHelperPanel");
    DAT_10840258 = FUN_10445410((uint *)"AnimationController");
    DAT_10840264 = FUN_104452c0((undefined4 *)"AnimationController");
    DAT_10841948 = FUN_10445410((uint *)"PercentageCroppedImageLabel");
    DAT_10841954 = FUN_104452c0((undefined4 *)"PercentageCroppedImageLabel");
    DAT_108431b8 = FUN_10445410((uint *)"ClickPanel");
    DAT_108431c4 = FUN_104452c0((undefined4 *)"ClickPanel");
    DAT_108431d0 = FUN_10445410((uint *)"RichText");
    DAT_108431dc = FUN_104452c0((undefined4 *)"RichText");
    DAT_108431f0 = FUN_10445410((uint *)"RichTextInterior");
    DAT_108431fc = FUN_104452c0((undefined4 *)"RichTextInterior");
    DAT_10843ec8 = FUN_10445410((uint *)"ToggleButton");
    DAT_10843ed4 = FUN_104452c0((undefined4 *)"ToggleButton");
    DAT_10843efc = FUN_10445410((uint *)"AnimatingImagePanel");
    DAT_10843f08 = FUN_104452c0((undefined4 *)"AnimatingImagePanel");
    DAT_10844770 = FUN_10445410((uint *)"ComboBox");
    DAT_1084477c = FUN_104452c0((undefined4 *)"ComboBox");
    DAT_108447a4 = FUN_10445410((uint *)"CvarToggleCheckButton");
    DAT_108447ac = FUN_104452c0((undefined4 *)"CvarToggleCheckButton");
    DAT_108447d8 = FUN_10445410((uint *)"Divider");
    DAT_108447e4 = FUN_104452c0((undefined4 *)"Divider");
    DAT_10844808 = FUN_10445410((uint *)"ExpandButton");
    DAT_10844814 = FUN_104452c0((undefined4 *)"ExpandButton");
    DAT_10844840 = FUN_10445410((uint *)"GraphPanel");
    DAT_1084484c = FUN_104452c0((undefined4 *)"GraphPanel");
    DAT_10844874 = FUN_10445410((uint *)"ListPanel");
    DAT_10844880 = FUN_104452c0((undefined4 *)"ListPanel");
    DAT_108448c0 = FUN_10445410((uint *)"ListViewPanel");
    DAT_108448cc = FUN_104452c0((undefined4 *)"ListViewPanel");
    DAT_108448d8 = FUN_10445410((uint *)"ListViewItem");
    DAT_108448e4 = FUN_104452c0((undefined4 *)"ListViewItem");
    DAT_1084493c = FUN_10445410((uint *)"MenuSeparator");
    DAT_10844948 = FUN_104452c0((undefined4 *)"MenuSeparator");
    DAT_1084496c = FUN_10445410((uint *)"MenuBar");
    DAT_10844978 = FUN_104452c0((undefined4 *)"MenuBar");
    DAT_108449a0 = FUN_10445410((uint *)"MenuButton");
    DAT_108449ac = FUN_104452c0((undefined4 *)"MenuButton");
    DAT_108449d4 = FUN_10445410((uint *)"MenuItem");
    DAT_108449e0 = FUN_104452c0((undefined4 *)"MenuItem");
    DAT_10844a0c = FUN_10445410((uint *)"MessageBox");
    DAT_10844a18 = FUN_104452c0((undefined4 *)"MessageBox");
    DAT_10844a64 = FUN_10445410((uint *)"ProgressBar");
    DAT_10844a70 = FUN_104452c0((undefined4 *)"ProgressBar");
    DAT_10844a7c = FUN_10445410((uint *)"ContinuousProgressBar");
    DAT_10844a88 = FUN_104452c0((undefined4 *)"ContinuousProgressBar");
    DAT_10844a94 = FUN_10445410((uint *)"ImageProgressBar");
    DAT_10844aa0 = FUN_104452c0((undefined4 *)"ImageProgressBar");
    DAT_10844ed0 = FUN_10445410((uint *)"CircularProgressBar");
    DAT_10844edc = FUN_104452c0((undefined4 *)"CircularProgressBar");
    DAT_10844f00 = FUN_10445410((uint *)"RadioButton");
    DAT_10844f0c = FUN_104452c0((undefined4 *)"RadioButton");
    DAT_10845338 = FUN_10445410((uint *)"ScalableImagePanel");
    DAT_10845344 = FUN_104452c0((undefined4 *)"ScalableImagePanel");
    DAT_108457bc = FUN_10445410((uint *)"TreeView");
    DAT_108457c8 = FUN_104452c0((undefined4 *)"TreeView");
    DAT_108457d4 = FUN_10445410((uint *)"TreeNodeText");
    DAT_108457e0 = FUN_104452c0((undefined4 *)"TreeNodeText");
    DAT_108457ec = FUN_10445410((uint *)"TreeNodeDropPanel");
    DAT_108457f8 = FUN_104452c0((undefined4 *)"TreeNodeDropPanel");
    DAT_10845804 = FUN_10445410((uint *)"TreeNode");
    DAT_10845810 = FUN_104452c0((undefined4 *)"TreeNode");
    DAT_10845838 = FUN_10445410((uint *)"CTreeViewListControl");
    DAT_10845844 = FUN_104452c0((undefined4 *)"CTreeViewListControl");
    DAT_10845868 = FUN_10445410((uint *)"URLLabel");
    DAT_10845874 = FUN_104452c0((undefined4 *)"URLLabel");
    DAT_10845ca0 = FUN_10445410((uint *)"CountdownLabel");
    DAT_10845cac = FUN_104452c0((undefined4 *)"CountdownLabel");
    DAT_10845cd0 = FUN_10445410((uint *)"MessagingPanel");
    DAT_10845cdc = FUN_104452c0((undefined4 *)"MessagingPanel");
    DAT_10845e04 = FUN_10445410((uint *)"FrameSystemButton");
    DAT_10845e10 = FUN_104452c0((undefined4 *)"FrameSystemButton");
    DAT_1084603c = FUN_10445410((uint *)"CSectionHeader");
    DAT_10846048 = FUN_104452c0((undefined4 *)"CSectionHeader");
    DAT_10846054 = FUN_10445410((uint *)"CItemButton");
    DAT_10846060 = FUN_104452c0((undefined4 *)"CItemButton");
    DAT_10847084 = FUN_10445410((uint *)"PanelListPanel");
    DAT_10847090 = FUN_104452c0((undefined4 *)"PanelListPanel");
    DAT_108474c0 = FUN_10445410((uint *)"PropertyDialog");
    DAT_108474cc = FUN_104452c0((undefined4 *)"PropertyDialog");
    DAT_108474f4 = FUN_10445410((uint *)"Slider");
    DAT_10847500 = FUN_104452c0((undefined4 *)"Slider");
    DAT_10847910 = FUN_10445410((uint *)"CConsolePanel");
    DAT_1084791c = FUN_104452c0((undefined4 *)"CConsolePanel");
    DAT_10847928 = FUN_10445410((uint *)"CConsoleDialog");
    DAT_10847934 = FUN_104452c0((undefined4 *)"CConsoleDialog");
    DAT_10847940 = FUN_10445410((uint *)"CNonFocusableMenu");
    DAT_1084794c = FUN_104452c0((undefined4 *)"CNonFocusableMenu");
    DAT_10847b68 = FUN_10445410((uint *)"FileOpenDialog");
    DAT_10847b74 = FUN_104452c0((undefined4 *)"FileOpenDialog");
    DAT_10847b94 = FUN_10445410((uint *)"FileNameComboBox");
    DAT_10847ba0 = FUN_104452c0((undefined4 *)"FileNameComboBox");
    DAT_10847bf8 = FUN_10445410((uint *)"ScrollableEditablePanel");
    DAT_10847c04 = FUN_104452c0((undefined4 *)"ScrollableEditablePanel");
    DAT_10847c24 = FUN_10445410((uint *)"ScrollBarSlider");
    DAT_10847c30 = FUN_104452c0((undefined4 *)"ScrollBarSlider");
    DAT_10847c40 = FUN_10445410((uint *)"ContextLabel");
    DAT_10847c4c = FUN_104452c0((undefined4 *)"ContextLabel");
    DAT_10847c58 = FUN_10445410((uint *)"PageTab");
    DAT_10847c64 = FUN_104452c0((undefined4 *)"PageTab");
    DAT_10847c70 = FUN_10445410((uint *)"PropertySheet");
    DAT_10847c7c = FUN_104452c0((undefined4 *)"PropertySheet");
    DAT_10847cd8 = FUN_10445410((uint *)"BuildModeDialog");
    DAT_10847ce4 = FUN_104452c0((undefined4 *)"BuildModeDialog");
    DAT_10847d00 = FUN_10445410((uint *)"CSmallTextEntry");
    DAT_10847d0c = FUN_104452c0((undefined4 *)"CSmallTextEntry");
    DAT_10847d18 = FUN_10445410((uint *)"CBuildModeNavCombo");
    DAT_10847d24 = FUN_104452c0((undefined4 *)"CBuildModeNavCombo");
    DAT_10847db8 = FUN_10445410((uint *)"BaseInputDialog");
    DAT_10847dc4 = FUN_104452c0((undefined4 *)"BaseInputDialog");
    DAT_10847dd0 = FUN_10445410((uint *)"InputDialog");
    DAT_10847ddc = FUN_104452c0((undefined4 *)"InputDialog");
    DName::DName((DName *)param_1,"unknown ecsu\'");
    DName::operator__((DName *)&local_10,"double");
    DName::operator__((DName *)&local_1c,")[");
    DVar2 = ConDMsg("NET_ThreadListen: %s\n",pcVar4);
    DVar2 = Msg("TCP <- %s: connection request.\n",pcVar4);
    DVar2 = Warning("CGameEventManager::AddListener: event \'%s\' unknown.\n",param_2);
    DevMsg("  %d (0x%p) : %s\n",uVar4,uVar2,uVar2);
    DevMsg("  criterion \'%25s\':\'%15s\' ");
    DevMsg("%3s % 2i : %20s\n",puVar3,iVar4,iVar2 + 0x4b6c + iVar1);
    DevMsg("%d ");
    DevMsg("%d - %s - %ld\n",iVar5,puVar3,iVar1);
    DevMsg("%f ");
    DevMsg("%i (seq %i) %s : src %d : ch %d : %d dB : vol %.2f : time %.3f (%.4f delay) @%.1f %.1f %.1f\n"
    DevMsg("%s (%s) has an invalid spotlight length <= 0, setting to 500\n");
    DevMsg("%s (%s) has an invalid spotlight width <= 0, setting to 10\n");
    DevMsg("%s directly referenced wave %s (should use game_sounds.txt system instead)\n",param_2,
    DevMsg("%s earning %i requsition points\n",uVar3);
    DevMsg("%s",param_1);
    DevMsg("%sDelay[%d]: ",iVar1,iVar2);
    DevMsg("%sDelay[%d]: ",iVar1,iVar3);
    DevMsg("%sFilter: %08X [Addr]\n",iVar1,param_1);
    DevMsg("%sL: %d\n",iVar1,param_1[0x28]);
    DevMsg("%sM: %d\n",iVar1,param_1[0x29]);
    DevMsg("%sModDelay[%d]: ",iVar1,iVar3);
    DevMsg("%sN: %d\n",iVar1,param_1[0x2a]);
    DevMsg("%sPSET[%d]: ");
    DevMsg("%sa[] = ",iVar1);
    DevMsg("%sb[] = ",iVar1);
    DevMsg("%spf1:",iVar1);
    DevMsg("%spf2:",iVar1);
    DevMsg("%spf3:",iVar1);
    DevMsg("%sw[] = ",iVar1);
    DevMsg("(%s:%s) \n");
    DevMsg("***ERROR PARSING VEHICLE SCRIPT :%s:\n",param_1);
    DevMsg("**ERROR - Unspecified gib dir method in func_breakable!\n");
    DevMsg("----------------------------------------\n");
    DevMsg("---------------------------\nTotal missing files %i\n",uVar2);
    DevMsg("...done building AI node graph, %f seconds\n");
    DevMsg("...done determining links. %f seconds\n");
    DevMsg("...done determining zones. %f seconds\n",
    DevMsg("...done forcing dynamic link neighbors. %f seconds\n");
    DevMsg("...done initializing node neighbors. %f seconds\n",in_XMM0_Qa);
    DevMsg("...done initializing node positions. %f seconds\n");
    DevMsg(": In stopped anim. ");
    DevMsg(": Stopped for %.2f. ",SUB84(dVar7,0),(int)((ulonglong)dVar7 >> 0x20));
    DevMsg("AI Disabled.\n");
    DevMsg("AI Enabled.\n");
    DevMsg("AMP_Print is not implemented\n");
    DevMsg("Activity: %s  -  Ideal Activity: %s\n",pcVar2,pcVar3);
    DevMsg("AddtoGlowList is trying to add a glowproperty with an invalid outer class. Bail\n");
    DevMsg("All Particle Systems:\n");
    DevMsg("Attempted to create link to node that doesn\'t exist\n");
    DevMsg("Attempted to link a node to itself\n");
    DevMsg("Bad auth data from %s\n",pcVar5);
    DevMsg("Bodygroup!\n");
    DevMsg("Building AI node graph...\n");
    DevMsg("CBaseAnimatingOverlay::AddGesture:  model %s missing activity %s\n",puVar7,pcVar4);
    DevMsg("CBaseViewport::AddNewPanel: panel with name \'%s\' already exists.\n",uVar4);
    DevMsg("CClientState::ProcessGameEvent: KeyValue length mismatch.\n");
    DevMsg("CClientState::ProcessGameEvent: UnserializeKeyValue failed.\n");
    DevMsg("CEventLog::PrintPlayerEvent: Failed to find player (userid: %i, event: %s)\n",iVar2,
    DevMsg("CFuncStageBlocker::Old Version, use boolean checks.\n");
    DevMsg("CGameEventManager: couldn\'t register event \'%s\', limit reached (%i).\n",puVar3,uVar13
    DevMsg("CHLTVServer: failed to serialize event \'%s\'.\n",uVar2);
    DevMsg("CHLTVServer::FireGameEvent: failed to serialize event \'%s\'.\n",uVar2);
    DevMsg("CNavArea::IncrementPlayerCount: Overflow\n");
    DevMsg("CNavArea::IncrementPlayerCount: Underflow\n");
    DevMsg("CRS_Print is not implemented\n");
    DevMsg("CSoundEmitterSystem::EmitSound(%s) took %f milliseconds (client)\n",param_3[1],
    DevMsg("CTempEnts::TIPhysicsProp: model [unknown-debugme] not found\n");
    DevMsg("CUIGameData::OpenWaitScreen - setting navback to %s instead of waitscreen\n",puVar4);
    DevMsg("CUserMessages::DispatchUserMessage:  Bogus msg type %i (max == %i)\n",param_1,
    DevMsg("CUserMessages::DispatchUserMessage:  Bogus msg type %i (max == %i)\n",param_2,
    DevMsg("CUserMessages::DispatchUserMessage:  Missing client entry for msg type %i\n",param_1);
    DevMsg("CUserMessages::DispatchUserMessage:  Missing client entry for msg type %i\n",param_2);
    DevMsg("C_PropRagDollClientSide::Initialize: PhysModelParseSolid failed for entity %i.\n",iVar4)
    DevMsg("CanFitAtNode() called with no network!\n");
    DevMsg("Changing to room type %d.\n",param_2);
    DevMsg("Cine died!\n");
    DevMsg("Computed lighting for %d/%d areas\n",iVar6,DAT_1067f854);
    DevMsg("Contexts to set \'%s\' on %s, ",*(int *)((int)this + 0xa0),pcVar1);
    DevMsg("Could not AllocSound() for Client Reserve! (DLL)\n");
    DevMsg("Couldn\'t load %s\n",param_1);
    DevMsg("Created class baseline: %i classes, %i bytes.\n",iVar3,iVar4);
    DevMsg("Critical Error; hit an infinite loop in EnumerateElementsAlongRay_Ray; just returning because we hit %i loops..why is this happening?!\n"
    DevMsg("DAS: Min Preset Index: %i\nDAS: Max Preset Index: %i\n",iVar3,iVar3 + 1);
    DevMsg("DS:5.1 speaker configuration detected\n");
    DevMsg("DS:7.1 speaker configuration detected\n");
    DevMsg("DS:headphone configuration detected\n");
    DevMsg("DS:mono configuration detected\n");
    DevMsg("DS:quad speaker configuration detected\n");
    DevMsg("DS:stereo speaker configuration detected\n");
    DevMsg("DS:surround speaker configuration detected\n");
    DevMsg("DSP PARSE ERROR! token not found in dsp_presets.txt. Preset: %3.0f \n",(double)param_2);
    DevMsg("DSP: Warning, failed to allocate chorus.\n");
    DevMsg("DSP: Warning, failed to allocate delay line.\n");
    DevMsg("DSP: Warning, failed to allocate diffusor.\n");
    DevMsg("DSP: Warning, failed to allocate mod delay.\n");
    DevMsg("DSP: Warning, failed to allocate pitch shifter.\n",this);
    DevMsg("DSP: Warning, failed to allocate reverb.\n");
    DevMsg("DenyFile: %s (ID %i)\n",param_1,param_2);
    DevMsg("Determining links...\n");
    DevMsg("Determining zones...\n");
    DevMsg("DirectSound create failed\n");
    DevMsg("DirectSound failed to init\n");
    DevMsg("DirectSound initialized\n");
    DevMsg("Disabling motion on phys prop");
    DevMsg("Discarded rule %s\n",local_98);
    DevMsg("Discarding repository \'%s\' due to cache system version change\n",puVar1);
    DevMsg("Discarding repository \'%s\' due to cache system version change\n",puVar4);
    DevMsg("Don\'t know how to reconsitite models for physobj array \n");
    DevMsg("EFO_Print is not implemented\n");
    DevMsg("ENABLING Game Panel\n");
    DevMsg("ENV_Print is not implemented\n");
    DevMsg("ERROR: %s First added %s must be first LOCALID!\n",param_3,param_4);
    DevMsg("ERROR: Adding symbol to uninitialized table %s\n",param_4);
    DevMsg("ERROR: Can\'t init spring %s from \"%s\" to \"%s\"\n",pcVar5,puVar7,puVar6);
    DevMsg("ERROR: Hinge with bad data!!!\n");
    DevMsg("ERROR: INVALID RALLY POINT SELECTION METHOD. Assault will not function.\n");
    DevMsg("ERROR: LoadSchd (%s): Unknown schedule type (%s)\n",param_1,pbVar4);
    DevMsg("ERROR: Trying initialize links with no WC ID table!\n");
    DevMsg("ERROR: Unconnected ladder bottom at ( %g, %g, %g )\n");
    DevMsg("ERROR: Unconnected ladder top at ( %g, %g, %g )\n",(double)*this,
    DevMsg("ERROR: failed to alloc Beam_t!\n");
    DevMsg("ERROR: too many nodes (%i) in map, deleting last node.\n",0x5dc);
    DevMsg("EmitSound:  Voice wave file %s doesn\'t specify CHAN_VOICE or CHAN_STREAM for sound %s\n"
    DevMsg("Entity %s is not an NPC.\n",pcVar7);
    DevMsg("Error!  Soundscape recursion overrun!\n");
    DevMsg("Error: Invalid SoundEntry hash %i received on client\n",*puVar8);
    DevMsg("Error: MixGroup %i, in LayerTriggers cannot be resolved!\n",param_2);
    DevMsg("Error: MixGroup %s, in LayerTriggers cannot be resolved!\n",param_2);
    DevMsg("Error: Parsing soundmixers.txt, mixgroup rules incomplete!\n");
    DevMsg("Error: Parsing soundmixers.txt, soundmixer mix group values incomplete!\n");
    DevMsg("Error: mat_queue_mode must be 0 to dump debug rendertargets\n");
    DevMsg("Exclusive root: %s\n",uVar1);
    DevMsg("Explicitly not playing background movie here.");
    DevMsg("FCVAR_CHEAT cvars reverted to defaults.\n");
    DevMsg("Failed to open client state file %s\n",param_1);
    DevMsg("FireEvent: event \'%s\' not registered.\n",uVar9);
    DevMsg("Forcing dynamic link neighbors...\n");
    DevMsg("Found soundscape entity with no soundscape name.\n");
    DevMsg("GameEventTransmitter: failed to serialize event \'%s\'.\n",uVar3);
    DevMsg("GetScheduleOfType(): No CASE for Schedule Type %d!\n",uVar1);
    DevMsg("Giving %s a %s (addonbits: %i)\n",uVar2);
    DevMsg("Groundent:%s\n\n",puVar6);
    DevMsg("Hunk_OnMapStart: %d\n",iVar2);
    DevMsg("IP COUNTRY CODE: %s\n",pcVar2);
    DevMsg("Inheriting from :%s:\n",pcVar13);
    DevMsg("Initializing node neighbors...\n");
    DevMsg("Initializing node positions...\n");
    DevMsg("Invalid aggressiveness value %d\n",iVar1);
    DevMsg("Invalid aggressiveness value %d\n",iVar3);
    DevMsg("IsConnected called with invalid node IDs!\n");
    DevMsg("KeyValues::ParseIncludedKeys: Couldn\'t load included keyvalue file %s\n",local_208);
    DevMsg("KeyValues::SaveToFile: couldn\'t open file \"%s\" in path \"%s\".\n",puVar4,puVar2);
    DevMsg("LEVEL DESIGN ERROR: Sprite %s with bad scale %f [0..%f]\n");
    DevMsg("LFO_Print is not implemented\n");
    DevMsg("Matched rule \'%s\', ",(int)this + 0x41);
    DevMsg("Math Counter %s ignoring ADD because it is disabled\n",pcVar1);
    DevMsg("Math Counter %s ignoring DIVIDE because it is disabled\n",pcVar1);
    DevMsg("Math Counter %s ignoring MULTIPLY because it is disabled\n",pcVar1);
    DevMsg("Math Counter %s ignoring SETMAXVALUENOFIRE because it is disabled\n",pcVar2);
    DevMsg("Math Counter %s ignoring SETMAXVALUENOFIRE because the value is less than the Minimum Value!\n"
    DevMsg("Math Counter %s ignoring SETMINVALUENOFIRE because it is disabled\n",pcVar2);
    DevMsg("Math Counter %s ignoring SETMINVALUENOFIRE because the value is greater than the Maximum Value!\n"
    DevMsg("Math Counter %s ignoring SETVALUE because it is disabled\n",pcVar1);
    DevMsg("Math Counter %s ignoring SETVALUENOFIRE because it is disabled\n",pcVar1);
    DevMsg("Math Counter %s ignoring SUBTRACT because it is disabled\n",pcVar1);
    DevMsg("Missing CD Key from registry, inserting blank key\n");
    DevMsg("Missing sprite material %s\n",param_1);
    DevMsg("MixGroup %s:\n",&DAT_10674cf0);
    DevMsg("MixLayer triggered %s:\n",&DAT_10674cf0);
    DevMsg("NET_SendLoopPacket:  invalid socket (%i).\n",ppvVar1);
    DevMsg("NEW RATES: Rate: %i UpdateRate:%i CmdRate: %i\n",uVar1,uVar3,uVar4);
    DevMsg("NULL\n");
    DevMsg("New Particle Systems Matching \'%s\':\n",param_1);
    DevMsg("No AutoSaveDangerous Outstanding...Nothing to do.\n");
    DevMsg("No RunTask entry for %s\n",uVar15);
    DevMsg("No Schedule, ");
    DevMsg("No demos in list, use startdemos <demoname> <demoname2> to specify\n");
    DevMsg("No enemy ");
    DevMsg("No known TV shot for event %s\n",pbVar1);
    DevMsg("Node %d has too many links\n",*param_1);
    DevMsg("Node %d has too many links\n",param_1);
    DevMsg("Node %d has too many links\n",param_2);
    DevMsg("Note: Strange link found between nodes in AI node graph\n");
    DevMsg("POST MADE VISIBLE\n");
    DevMsg("PTC_Print is not implemented\n");
    DevMsg("Parameters: mix group name, [vol, mute, solo], value");
    DevMsg("Player %s now on squad %d\n",uVar3);
    DevMsg("Protocol error from %s\n",pcVar5);
    DevMsg("Purging %d data change events without processing\n",(uint)(ushort)DAT_106ab942);
    DevMsg("Queueuing item %d for user %s\n",uVar2);
    DevMsg("RECEIVED POSITION CORRECTION FROM SERVER\n");
    DevMsg("Rate was not found in registry, using default of balanced.\n");
    DevMsg("Reading: %s\n",param_1);
    DevMsg("RemoveListenerOld: couldn\'t find listener\n");
    DevMsg("RequestFile: %s (ID %i)\n",param_1,*(undefined4 *)((int)this + 0x428));
    DevMsg("Requesting full game update (%s)...\n",param_1);
    DevMsg("Reservation request from %s rejected: server already reserved (for %d more seconds)\n",
    DevMsg("Reservation request from %s rejected: server not empty\n");
    DevMsg("Reservation request from address %s, but challenges exclusive for %s\n",pcVar7,pcVar4);
    DevMsg("Reservation request from unknown address %s\n");
    DevMsg("ResetSequence : %s: %s -> %s\n",puVar4,pcVar3,pcVar2);
    DevMsg("ResetSequenceInfo");
    DevMsg("Room %d Info:\n Master(%d) Host(%llu)",uVar2);
    DevMsg("RoomID: %i\n",iVar2,pcVar5,pcVar4,uVar6);
    DevMsg("SCRIPT_CUSTOM_MOVE: %s has no sequence:%s\n",puVar5,puVar4);
    DevMsg("SOS: GetOpvar %s, %f\n",puVar2,(double)(float)param_1);
    DevMsg("SOS: GetOpvar %s, %f\n",puVar2,(double)(float)param_1,ppiVar3);
    DevMsg("STATE_VIP_FINDGOAL:Find Goal\n");
    DevMsg("S_StartSound: %s Stopped.\n");
    DevMsg("Schedule %s, ",pcVar3);
    DevMsg("Script condition warning: Invalid setting for Maximum/Minimum state\n");
    DevMsg("Search criteria:\n");
    DevMsg("Serializing event \'%s\' (%i):\n");
    DevMsg("Server not active, ignoring %s\n",pcVar5);
    DevMsg("SetActivityAndSequence : %s: %s:%s -> %s:%s / %s:%s\n",puVar11,pcVar8,pcVar7,pcVar6,
    DevMsg("SetIdealActivity : %s: %s -> %s\n",puVar11,pcVar6,pcVar5);
    DevMsg("Setting MixLayer %s : mix %f\n",pfVar3 + 1,(double)(float)fVar5);
    DevMsg("Setting max routable payload size from %d to %d for %s\n",
    DevMsg("ShouldCollide is returning different values.. FIX THIS\n");
    DevMsg("Size of bsp file \'%s\' is %u bytes.\n",puVar3,uVar4);
    DevMsg("Skipping WriteManifest, no entries in sound precache string table\n");
    DevMsg("SplitContext:  warning, ignoring context \'%s\', missing colon separator!\n",param_3);
    DevMsg("StartRelay: not connected.\n");
    DevMsg("State: %s, ",(&PTR_DAT_105897f0)[param_1[0x229]]);
    DevMsg("Successfully loaded particle effects manifest \'%s\' for map \'%s\'\n",local_1ac,
    DevMsg("TI_FireBullets: LookupWeaponInfoSlot failed for weapon %s\n",local_13c);
    DevMsg("TI_FireBullets: weapon alias for ID %i not found\n",param_4);
    DevMsg("Updating goal pos while jumping!\n");
    DevMsg("VOX_ReadSentenceFile: %s couldn\'t allocate %i bytes for data\n",param_1,uVar5);
    DevMsg("VOX_ReadSentenceFile: %s has invalid size %i\n",param_1,uVar5);
    DevMsg("VOX_TouchSound: no sentence named %s\n",param_1);
    DevMsg("Vote Controller Not Found!\n");
    DevMsg("WARNING: Level contains NPCs but has no path nodes\n");
    DevMsg("WARNING: TestHull used and never returned!\n");
    DevMsg("Warning! Client physic props overflow *max %i).\n",iVar2);
    DevMsg("Warning! Client physic props overflow *max %i).\n",iVar5);
    DevMsg("Warning! GetMaterialIndex: couldn\'t find material %s\n ",param_1);
    DevMsg("Warning! decoration overflow *max %i).\n",iVar2);
    DevMsg("Warning: AI hint has incorrect or no AI node\n");
    DevMsg("Warning: NULL Return from GetBestScent\n");
    DevMsg("Warning: NULL Return from GetBestSound\n");
    DevMsg("Warning: S_StartSound (%s) Ignored, called with pitch 0\n");
    DevMsg("Wave sound initialized\n");
    DevMsg("Will not ban kicked player: net channel was idle for %.2f sec.\n",(double)fVar7);
    DevMsg("WorkspaceBounds: %i %i %i %i\n",local_10,local_c,local_8,param_1);
    DevMsg("WriteManifest:  Persisting cache manifest \'%s\' (%d entries)\n",local_234,iVar2);
    DevMsg("XVoice: voice data payload for %p: %d bytes\n",param_1,local_8);
    DevMsg("[%s] NOW OFF ELEVATOR\n","Client");
    DevMsg("[%s] NOW OFF ELEVATOR\n","Server");
    DevMsg("[%s] bash; base: %f, attributes: %f\n",uVar8);
    DevMsg("[CARDEBUG]  CREATE::MOTION CONTROLLER [%s]\n","Client");
    DevMsg("[CARDEBUG]  CREATE::MOTION CONTROLLER [%s]\n","Server");
    DevMsg("[CARDEBUG] DESTROY::MOTION CONTROLLER [%s]\n","Client");
    DevMsg("[CARDEBUG] DESTROY::MOTION CONTROLLER [%s]\n","Server");
    DevMsg("[CARDEBUG] InitServerPhysics ( DRIVEABLE ) [%s]\n","Server");
    DevMsg("[CARDEBUG] InitServerPhysics ( NOT DRIVEABLE ) [%s]\n","Server");
    DevMsg("[CARDEBUG] LOAD::CAR VELOCITY: [%s] POS: [%s] ANG: [%s] [%s] \n",(int)puVar5 + 5,
    DevMsg("[CARDEBUG] LOAD::CAR VELOCITY: [%s] POS: [%s] ANG: [%s] [%s] \n",(int)puVar6 + 5,
    DevMsg("[CARDEBUG] SWITCHED TO CLIENT_SIM_DEFAULT [%s]\n");
    DevMsg("[CARDEBUG] SWITCHED TO CLIENT_SIM_LOCALDRIVER [%s]\n");
    DevMsg("[CARDEBUG] SWITCHED TO SERVER_SIM_NODRIVER [%s]\n");
    DevMsg("[Cloud]: Cloud unavailable.\n");
    DevMsg("[Cloud]: FAILED loading %s from remote storage - version compatibility broken\n",pcVar10
    DevMsg("[Cloud]: FAILED loading %s from remote storage\n",pcVar16);
    DevMsg("[Cloud]: FAILED saving %s in remote storage, quota full.\n",pcVar8);
    DevMsg("[Cloud]: FAILED saving %s in remote storage\n",pcVar13);
    DevMsg("[Cloud]: FAILED saving %s, cloud unavailable\n",pcVar8);
    DevMsg("[Cloud]: FAILED saving %s, unable to retrieve QUOTA\n",pcVar8);
    DevMsg("[Map] Preparing script file: %s\n",local_d8);
    DevMsg("[RULES] ** %s MVP: %s (%i)\n",uVar2);
    DevMsg("[RULES] Bots: %i\n",uVar4);
    DevMsg("[RULES] Out Of Zone Penalty Lifted!!~!!~\n");
    DevMsg("[Requisition]%s has %d points and a %f scale.\n",uVar4);
    DevMsg("[SnapEyesLater] Snapping Angles to: %s\n",(int)puVar9 + 5);
    DevMsg("[Sound DSP] Free previous preset %d.\n",*(undefined4 *)(param_1 + 0x34));
    DevMsg("[debug] SPAWNED BOSS CAR FOR TERRORISTS\n");
    DevMsg("[debug] SPAWNED VIP CAR FOR COUNTER-TERRORISTS\n");
    DevMsg("\'%20s\' vs. \'%20s\' = ");
    DevMsg("\n***\nFAILED to create private ScriptScope. ABORTING script\n***\n");
    DevMsg("\nEnemy is %s",puVar6);
    DevMsg("\n\n\n\nNUMBER OF TIPS: %i\n\n",local_10);
    DevMsg("dB drop: %1.4f \n",(double)local_1c);
    DevMsg("device guid: %s\n",_DAT_10427228,puVar13,pcVar14,uVar15,uVar11,uVar10,uVar9,uVar8,uVar7,
    DevMsg("dropping all clients\n");
    DevMsg("failed to load scripts/GameUIAnimations.txt\n");
    DevMsg("move_rope has TextureScale less than 0.1 at (%2.2f, %2.2f, %2.2f)\n",
    DevMsg("numslots -1 calcing\n");
    DevMsg("room is invalid\n");
    DevMsg("tick %i, cmd %s \n",param_2,local_2c[uVar1 & 0xff]);
    DevMsg("total preset slots used: %d \n",iVar2);
    DevMsg("unregistering glow from entity: %i\n",*(undefined4 *)(param_1 + 0x474));
    DevMsg("usedTime: %f curTime: %f (%f)\n",(double)fVar1,(double)*(float *)(DAT_10646018 + 0x10));
    DevMsg("}\n");
    DevMsg(1,"%s (%s) was unable to point at an entity named: %s\n",puVar5,pcVar3,pcVar4);
    DevMsg(1,"Angle sensor \'%s\' could not find look at entity \'%s\'.\n",pcVar3,puVar4);
    DevMsg(1,"Audio Caches using \'%s\' as suffix\n",puVar5);
    DevMsg(1,"Bogus pmove player movetype %i on (%i) 0=cl 1=sv\n",*(undefined *)(param_1[1] + 0xe2),
    DevMsg(1,"Bogus pmove player movetype %i on (%i) 0=cl 1=sv\n",*(undefined *)(param_1[5] + 0x358)
    DevMsg(1,"CDummyMaterialProxy::CDummyMaterialProxy()\n");
    DevMsg(1,"CGameEventManager: unknown type %i for key \'%s\' [%s].\n",uVar14,puVar12,uVar17);
    DevMsg(1,"CL_ProcessPacketEntities: frame window too big (>%i)\n",0x80);
    DevMsg(1,"CResponseSystem:  %s (%i rules, %i criteria, and %i responses)\n",local_10c,iVar8,
    DevMsg(1,"Error! CMapOverview::SetMap: couldn\'t load file %s.\n",local_118);
    DevMsg(1,"Firing PickRandom input on logic_case %s with no cases set up\n",pcVar2);
    DevMsg(1,"Leaf %d, Area %d, Cluster %d\n",iVar1,iVar3,iVar2);
    DevMsg(1,"Scripted Sequence stripped on level transition for %s\n",pcVar3);
    DevMsg(1,"Stopping All Sounds...\n");
    DevMsg(1,"TRAIN(%s): Blocked by %s\n",pcVar3,puVar5);
    DevMsg(1,"Voice_Spatialize changing voice tweak entity from %d to %d\n",DAT_104ca7a8,uVar2);
    DevMsg(1,"Warning, funcladder with blocked bottom point (%.2f %.2f %.2f) stuck in (%s)\n",
    DevMsg(1,"Warning, funcladder with blocked top point (%.2f %.2f %.2f) stuck in (%s)\n",
    DevMsg(1,"ignore:  %d \'%s\'\n",param_1,puVar2);
    DevMsg(1,(byte *)"PME Initialized.\n");
    DevMsg(1,(byte *)"PME Uninitialized.\n");
    DevMsg(2,"%s (%s): StopSchedule called on NPC %s.\n",puVar4,pcVar3,pcVar2);
    DevMsg(2,"%s \"%s\"\n",param_3,pcVar9);
    DevMsg(2,"Firing: (%s)\n",param_1);
    DevMsg(2,"InputCancelScript: Cancelling script \'%s\'\n",puVar1);
    DevMsg(2,"Not Playing sentence %s\n",puVar4);
    DevMsg(2,"Putting entity to sleep: %s\n",puVar3);
    DevMsg(2,"Script failed to find output \"%s\"\n",pbVar1);
    DevMsg(2,"SpeakDispatchResponse:  Entity ( %i/%s ) already speaking, forcing \'%s\'\n",iVar9,
    DevMsg(2,"Stripped\n");
    DevMsg(2,"TRAIN(%s), speed to %.2f\n",pcVar2,dVar3);
    DevMsg(2,"TRAIN(%s): Speed is 0\n",pcVar1);
    DevMsg(2,"TrackTrain %s arrived at %s, speed to %4.2f\n",pcVar3,pcVar2,dVar5);
    DevMsg(2,"Warning! Dropped %i unreliable sounds for client %s.\n",
    DevMsg(2,"Warning: Deleting orphaned children of %s\n",puVar3);
    DevMsg(2,"aiscripted_schedule - StopSchedule called, but schedule\'s never started.\n");
    DevMsg(2,"aiscripted_schedule - no schedule or state has been set!\n");
    DevMsg(2,"aiscripted_schedule - not playing schedule again: not flagged to repeat\n");
    DevMsg(2,"at %s\n",pcVar1);
    DevMsg(2,"input: (%s,%d) -> (%s,%s), from (%s)\n",param_1,pcVar4,pcVar3,pcVar1,param_2);
    DevMsg(2,"input: (%s,%s) -> (%s,%s), from (%s)\n",param_1,pcVar3,puVar2,pcVar4,param_2);
    DevMsg(2,"output: (%s,%s) -> (%s,%s,%.1f)\n",puVar4,pcVar1,uVar6,dVar5);
    DevMsg(2,"scripted_sequence %d:\"%s\" using NPC %d:\"%s\"(%s)\n",iVar7,pcVar4,iVar3,puVar6,
    DevMsg(3,"[FOVDEBUG]: FLERP desired fov: %f previous FOV: %f (flerpFOV: %f)\n",(double)local_c,
    DevWarning(" Bad convar found in %s - %s\n",param_3,puVar2);
    DevWarning("%s %s failed Urgent Movement, abandoning schedule\n",pcVar6,uVar5);
    DevWarning("%s %s failed Urgent Movement, abandoning schedule\n",pcVar7,uVar6);
    DevWarning("%s: Could not find info_lighting_relative \'%s\'!\n",puVar2,pcVar1);
    DevWarning("%s: Could not find lighting origin entity named \'%s\'!\n",puVar2,pcVar1);
    DevWarning("%s: Could not find path_track \'%s\'!\n",puVar4,pcVar3);
    DevWarning("%s: Specified entity \'%s\' must be a path_track!\n",puVar5,puVar4);
    DevWarning("%s: can\'t find %s\n",puVar3,pcVar1);
    DevWarning("**Attempting to update point_spotlight but target ent is NULL\n");
    DevWarning("- Look near (%.1f, %.1f, %.1f)\n",(double)local_10,(double)local_c,(double)local_8);
    DevWarning("- This implies you have a surface (usually a displacement) embedded in solid.\n");
    DevWarning("A Hiding Spot is off of the Nav Mesh at setpos %.0f %.0f %.0f\n",
    DevWarning("Attempted to HideLoadingPlaque when not loading...\n");
    DevWarning("Attempted to add control point to NULL particle effect!\n");
    DevWarning("CSoundPatch::Update:  Removing CSoundPatch (%s) with NULL EHandle\n",
    DevWarning("CSoundPatch::Update:  Removing CSoundPatch (%s) with NULL EHandle\n",puVar5);
    DevWarning("Called Resume() on a thread that is not suspended!\n");
    DevWarning("Can\'t find soundscape: %s\n",puVar3);
    DevWarning("Cannot display waitscreen! Active window of higher priority: %s\n",uVar5);
    DevWarning("Cleared most recent save!\n");
    DevWarning("Client: Missing precache for particle system \"%s\"!\n",param_1);
    DevWarning("Degenerate Navigation Area #%d at setpos %g %g %g\n",
    DevWarning("Error: MixGroup %s cannot be resolved!\n",param_1);
    DevWarning("Error: SoundEmitterSystem not initialized in engine!\n");
    DevWarning("Error: Unable to get SoundEntry name for entry : %i",*puVar8);
    DevWarning("Error: Unable to get parameters for soundentry %s",*(undefined4 *)(param_1 + 0x50));
    DevWarning("Failed to get collision model (%d, %d), %s (%s)\n",
    DevWarning("Game instructor hit MAX_UNCLUTTER_ITERATIONS!\n");
    DevWarning("Invalid lesson action type used with \"%s\" variable type.\n");
    DevWarning("Invalid lesson action type used with \"%s\" variable type.\n",param_3);
    DevWarning("Invalid lesson specified: \"%s\".",puVar6);
    DevWarning("Loaded bad game %s\n",param_1);
    DevWarning("Locator Target has no onscreen texture name!\n");
    DevWarning("Missing %s\n",local_10c);
    DevWarning("Module %s is a debug build\n",param_1);
    DevWarning("Move goal with no route!\n");
    DevWarning("Move requested with no route!\n");
    DevWarning("No conversion from %s to float now\n",pcVar1);
    DevWarning("Performance Warning: large friction system (%d objects)!!!\n",param_2);
    DevWarning("Player %s calling LeavePlanningAndSpawn\n",uVar2);
    DevWarning("Server: Missing precache for effect \"%s\"!\n",param_1);
    DevWarning("Server: Missing precache for particle system \"%s\"!\n",param_1);
    DevWarning("SetLastActiveUserId: %d -> %d\n",*(int *)((int)this + 0x2c4),0);
    DevWarning("SetLastActiveUserId: %d -> %d\n",*(int *)((int)this + 0x2c4),param_1);
    DevWarning("Sound: Failed to lock.\n");
    DevWarning("Sound: Out of memory.\n");
    DevWarning("Sound: failed to prepare wave headers\n");
    DevWarning("Starting sound \'%s\' while system disabled.\n",local_150);
    DevWarning("SurfFlagsToSortGroup:  unhandled flags (%X) (%s)!\n",param_2,uVar1);
    DevWarning("env_shake %s with \"Don\'t shake view\" spawnflag set without \"Shake physics\" or \"Shake ropes\" spawnflags set."
    DevWarning("env_sprite at setpos %0.0f %0.0f %0.0f has invalid glow size %f - clamping to %f\n",
    DevWarning("scripted_sequence %d:%s - restarting dormant entity %d:%s : %.1f:%.1f\n",local_8,
    DevWarning(1,"CViewRenderBeams::DrawBeam:  Unknown beam type %i\n",
    DevWarning(1,"Can\'t create temporary entity with NULL model!\n");
    DevWarning(1,"Unhandled animation event %d for %s\n",uVar4,puVar3);
    DevWarning(1,"temporary ent model invalid\n");
    DevWarning(2,"Asking FirstTimeSeen for enemy that\'s not in my memory!!\n");
    DevWarning(2,"Asking LastTimeSeen for enemy that\'s not in my memory!!\n");
    DevWarning(2,"CBaseAnimating::LastVisibleCycle( %d ) NULL pstudiohdr on %s!\n",param_2,puVar4);
    DevWarning(2,"CBaseAnimating::LastVisibleCycle( %d ) NULL pstudiohdr on %s!\n",param_2,uVar3);
    DevWarning(2,"CBaseAnimating::SequenceDuration( %d ) NULL pstudiohdr on %s!\n",param_2,puVar3);
    DevWarning(2,"CBaseAnimating::SequenceDuration( %d ) out of range\n",param_2);
    DevWarning(2,"C_BaseAnimating::SequenceDuration( %d ) out of range\n",param_2);
    DevWarning(2,"Can\'t Create Route!\n");
    DevWarning(2,"FindCover() - %s has no nearest node! (Check near %f %f %f)\n",puVar14,
    DevWarning(2,"GibShooter Body is <= 1!\n");
    DevWarning(2,"Invalid State for SelectSchedule!\n");
    DevWarning(2,"NPC_STATE IS NONE!\n");
    DevWarning(2,"OFFGROUND!\n");
    DevWarning(2,"SUB_Remove called on entity with health > 0\n");
    DevWarning(2,"Script failed for %s\n",puVar3);
    DrawTextA(param_1,"Running with -noshaderapi",-1,&local_28,0x825);
    Error("*** exceeded concurrent buildview push ***\n");
    Error("*** exceeded max concurrent buildviews ***\n");
    Error("AI_ResponseSystem:  Unxpected TokenWaiting() with NULL buffer in %s",
    Error("APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n",DAT_0044aa6c);
    Error("APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n",DAT_10034e0c);
    Error("APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n",DAT_106a60f4);
    Error("APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n",DAT_106cba44);
    Error("APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n",DAT_107c0c54);
    Error("All hud elements must derive from vgui::Panel * (%s)\n",uVar7);
    Error("CAudioSourceMemWave (%s): GetDataPointer() failed.",pcVar3);
    Error("CGameUI::Initialize() failed to get necessary interfaces\n");
    Error("CL_AddPostDataUpdateCall: overflowed u.m_PostDataUpdateCalls");
    Error("CL_GetPrecacheUserData(%d,%d) - length (%d) invalid.",uVar3);
    Error("CLocalNetworkBackdoor::EntState - missing client class %d",param_3);
    Error("CParticleEffectBinding::DrawMaterialParticles: too many particles (%d should be less than %d)"
    Error("CTSListBase: Misaligned list\n");
    Error("CTSQueue: Misaligned queue\n");
    Error("CUserMessages::GetUserMessageSize( %i ) out of range!!!\n",param_1);
    Error("CUtlBlockMemory overflow!\n");
    Error("CUtlBuffer::VaPrintf: String overflowed buffer [%d]\n",0x2000);
    Error("Could not get IGameUI interface %s from %s\n","GameUI011","client");
    Error("Couldn\'t write bitmap data snapshot.\n");
    Error("CullPropsFromProxies: overflow in \'%s\'.",*(undefined4 *)(param_1 + 8));
    Error("DispInfo_LoadDisplacements: nDisplacements (%d) > MAX_MAP_DISPINFO (%d)",uVar1,0x800);
    Error("Exceeded max number of datatable proxies in SendTable_BuildHierarchy()");
    Error("FileSystem_AddLoadedSearchPath - Can\'t resolve pathname for \'%s\'",local_108);
    Error("GetDynamicBaseline: NULL baseline table");
    Error("GetDynamicBaseline: invalid class index \'%d\'",param_1);
    Error("HLTV_CopyNewEntity: GetDynamicBaseline(%d) failed.",param_2);
    Error("InitGameRules: game rules entity (%s) not created",param_1);
    Error("InitSingleton: pEmitter is NULL");
    Error("InitStaticGlobals: game rules entity (%s) not created",param_1);
    Error("Invalid directory size %d for %s\n",iVar4,piVar1);
    Error("Invalid file id for %s\n",piVar1);
    Error("Invalid file version for %s\n",piVar1);
    Error("Invalid or corrupt background texture %s\n",param_2);
    Error("Maplist file \'%s\' empty or missing!!!\n",puVar7);
    Error("Must include memoverride.cpp in your project.");
    Error("OnGameRulesCreationStringChanged: game rules entity (%s) not created",pbVar4);
    Error("OnStaticGlobalsCreationStringChanged: game rules entity (%s) not created",pbVar4);
    Error("Overflowed a PropIndicesCollection_t on %s\n",
    Error("PasswordEntry Missing Title");
    Error("Player indexes too large: %d %d",param_1 % 0x21,param_1 / 0x21);
    Error("RecvTable_Decode: table \'%s\' missing a decoder.",*(undefined4 *)(param_1 + 0xc));
    Error("RecvTable_Decode: table \'%s\' missing a decoder.",*(undefined4 *)(param_4 + 0xc));
    Error("RecvTable_DecodeZeros: table \'%s\' missing a decoder.",*(undefined4 *)(param_1 + 0xc));
    Error("RecvTable_MergeDeltas: invalid parameters passed.");
    Error("RecvTable_MergeDeltas: overflowed in RecvTable \'%s\'.",*(undefined4 *)(param_1 + 0xc));
    Error("RecvTable_MergeDeltas: table \'%s\' is missing its decoder.",
    Error("SV_EnsureInstanceBaseline: edict %d missing ent",param_2);
    Error("SV_GetInstanceBaseline: missing instance baseline for class \'%s\'",*param_1);
    Error("S_FindName: NULL\n");
    Error("SendPropFloat( %s ) is referencing a CNetworkVector, but must be referencing a CNetworkVectorXYZ or CNetworkVectorXY_SeparateZ"
    Error("SendTable_BuildHierarchy: overflowed prop buffer.");
    Error("SendTable_CalcDelta: m_bfFromState overflowed %d max %d on datatable \'%s\'.",
    Error("SendTable_CalcDelta: m_bfToState overflowed %d max %d on datatable \'%s\'.",param_1[0x21]
    Error("SendTable_CalcDelta: overflowed props %d max %d on datatable \'%s\'.",param_1[0x21],
    Error("SendTable_Encode: Missing m_pPrecalc for SendTable %s.",*(undefined4 *)(param_1 + 8));
    Error("SendTable_Encode: Missing m_pPrecalc for SendTable %s.",*(undefined4 *)(param_2 + 8));
    Error("SendTable_Encode: pRecipients array too small.");
    Error("SendTable_GetNumFlatProps: missing pPrecalc.");
    Error("SendTable_Init: called twice.");
    Error("Test_ProxyToggle_EnsureValue: value (%d) doesn\'t match wanted value (%d).",
    Error("This game doesn\'t support server benchmarks (no CServerBenchmarkHook found).");
    Error("Too many proxies for datatable %s.",*(undefined4 *)(param_1 + 8));
    Error("Unable to load manifest file \'%s\'\n","scripts/soundscapes_manifest.txt");
    Error("Unable to load manifest file \'%s\'\n",PTR_s_scripts_surfaceproperties_manife_105c5300);
    Error("Unable to load manifest file \'%s\'\n",PTR_s_scripts_surfaceproperties_manife_106af5b8);
    Error("Unable to maplist file %s\n",local_348);
    Error("Unable to parse keyvalues from \'%s\'\n",local_288);
    Error("Unknown LUMP_LEAFS version\n");
    Error("UpdatePlayerName with bogus slot %d\n",param_1);
    Error("WRITE_BYTE called with no active message\n");
    Error("WRITE_BYTES called with no active message\n");
    Error("WRITE_SHORT called with no active message\n");
    Error("WriteBool called with no active message\n");
    Error("WriteEHandle called with no active message\n");
    Error("WriteFloat called with no active message\n");
    Error("WriteLong called with no active message\n");
    Error("WriteString called with no active message\n");
    Error("WriteUBitLong called with no active message\n");
    Error("WriteVec3Coord called with no active message\n");
    Error("WriteVec3Normal called with no active message\n");
    Error("classname missing from entity!\n");
    Error("classname missing from fakeentity!\n");
    Error("pBSPData->numareas > MAX_MAP_AREAS");
    Error("prop_door with no model at %.2f %.2f %.2f\n");
    Error((byte *)"CTSListBase: Misaligned list\n");
    Error((byte *)"CTSQueue: Misaligned queue\n");
    Error((byte *)"CatchAndWriteContext_t::Set w/o a function pointer!");
    Error((byte *)"Out of thread local storage!\n");
    Error((byte *)"Plat_GetModuleFilename: The buffer given is too small (%d bytes).");
    Error((byte *)"SBH configuration error: %d/%d pools initialized\n");
    FUN_00401c70('\0',3,(byte *)"Should not be using filesystem_steam anymore!");
    FUN_00405740(param_1,uVar1,"VEngineCvar007");
    FUN_00405740(param_1,uVar5,"SourceVirtualReality001");
    FUN_0040f440(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Posting (%d):\n %s\n");
    FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Heart beat timed out (failed: %d)");
    FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Logged in server(%u) now(%u) offset(%d)");
    FUN_00410890((int)param_1,extraout_DL,"design");
    FUN_00410890((int)param_1,extraout_DL,"quality");
    FUN_00410890((int)this,extraout_DL,"business");
    FUN_0041dfc0((char *)&local_ec,0x80,(byte *)"FixAPI Region %d");
    FUN_0041dfc0((char *)local_128,0x104,(byte *)"scripts/items/%s.ctx");
    FUN_0041dfc0(acStack164,0x80,(byte *)"float( %f )");
    FUN_0041dfc0(acStack164,0x80,(byte *)"int( %d = 0x%X )");
    FUN_0041dfc0(acStack164,0x80,(byte *)"ptr( 0x%p )");
    FUN_0041dfc0(acStack164,0x80,(byte *)"u64( %lld = 0x%llX )");
    FUN_0041dfc0(acStack164,iVar5 * 2 + 0x40,(byte *)"%ls [wstring, len = %d]");
    FUN_0041dfc0(local_108,0x104,(byte *)"%s/%s");
    FUN_0041dfc0(local_174,0xff,(byte *)"http://api.gameanalytics.com/1/%s/%s");
    FUN_0041dfc0(local_30c,0x200,(byte *)"%s -reslistdir %s -rebuildaudio");
    FUN_0041dfc0(local_30c,0x200,(byte *)"%s\\%s");
    FUN_0041dfc0(local_410,0x104,(byte *)"%s\\%s");
    FUN_0041dfc0(local_410,0xff,(byte *)"%s/Session/Check");
    FUN_0041dfc0(local_44,0x40,(byte *)"%d %d %d %d");
    FUN_0041dfc0(local_610,0x200,(byte *)"%s %s %s -reslistdir %s");
    FUN_0041dfc0(local_84,0x80,(byte *)"AuthFailure:%d");
    FUN_0041dfc0(local_84,0x80,(byte *)"PurchaseItem:%d:%d");
    FUN_0041dfc0(local_84,0x80,(byte *)"SocketError:%d");
    FUN_0041dfc0(local_84,0x80,(byte *)"map_%llu_%d_%d");
    FUN_0041dfc0(local_84,0x80,(byte *)"module_%d");
    FUN_0041e120(local_410,".dll",0x400,0xffffffff);
    FUN_0041e380((int)(param_1 + 2),"");
    FUN_00420e80(&DAT_00447480," ReadToken overflow");
    FUN_00420e80(&DAT_00447480,"RecursiveLoadFromBuffer:  recursion overflow");
    FUN_00420f80(this_00,"value",param_6);
    FUN_00420f80(this_00,"x",param_7);
    FUN_00420f80(this_00,"y",param_8);
    FUN_00420f80(this_00,"z",param_9);
    FUN_00420fb0(this_00,"steamworks",1);
    FUN_00420fb0(this_01,"amount",param_4);
    FUN_00420fd0(this_00,"area",local_84);
    FUN_00420fd0(this_01,"currency",param_3);
    FUN_004213b0((char *)local_88,0x40,(int)L"%d %d %d %d");
    FUN_00421620(&DAT_00456f3c,"developer");
    FUN_004230e0(this_00,(byte *)"\"event_id\": \"%s\"");
    FUN_004230e0(this_00,(byte *)"\"user_id\": \"%llu\",\"session_id\": \"%s\",\"build\": \"%s\",");
    FUN_00423420(local_250,"");
    FUN_10005190((void *)(param_1 + 0x30),"vr/vr_distort_texture_left","Other",1);
    FUN_10005190((void *)(param_1 + 0x30),"vr/vr_distort_texture_left_nort","Other",1);
    FUN_10011770(param_1,(int **)"iostream stream error",(int *)0x15);
    FUN_10013e40(&DAT_10833d18,"ntdll.dll","NtQuerySystemInformation");
    FUN_1002103b((byte *)"Parameter file \'%s\' not found, skipping...");
    FUN_10021180(&local_154,(byte *)"%s (%s): %s [%0.2f]");
    FUN_10021180(local_110,(byte *)"NPC %s failed to stop properly, slamming activity\n");
    FUN_10021180(local_110,(byte *)"[Nav] %s");
    FUN_10021180(local_114,(byte *)"[Nav] %s");
    FUN_10021180(local_118,(byte *)"[Nav] %s");
    FUN_10021180(local_124,(byte *)"[Nav] %s");
    FUN_10021180(local_140,(byte *)"Node pathfind failed, no route to dest %d\n");
    FUN_10021180(local_14c,(byte *)"[Nav] %s");
    FUN_10021180(local_178,(byte *)"[Nav] %s");
    FUN_10021180(local_190,(byte *)"Car_Police_Siren_%s");
    FUN_10021180(local_21c,(byte *)"CAI_Navigator::StopMoving( %d )\n");
    FUN_10021180(local_21c,(byte *)"[Nav] %s");
    FUN_10021180(local_24c,(byte *)"Node pathfind failed, no route to source %d\n");
    FUN_1002158b(_File,(byte *)"Fixed Page SBH:\n");
    FUN_1002158b(_File,(byte *)"Secondary Fixed Page SBH:\n");
    FUN_1002158b(_File,(byte *)"\nFallback SBH:\n");
    FUN_1002158b(param_2,(byte *)"%s is Empty\n");
    FUN_1002158b(param_2,(byte *)"Totals (%s): Committed:%16s Allocated:%16s\n");
    FUN_1002169d((char *)(this + 0x38),0x1f,(byte *)"Thread(%p/%p)");
    FUN_10031640(&local_214,(byte *)"tools/%s.dll");
    FUN_10031640(&local_218,(byte *)"tools/%s.dll");
    FUN_10034d68("map/set<T> too long");
    FUN_10034d68("string too long");
    FUN_10034d68("vector<T> too long");
    FUN_10034d96("invalid string position");
    FUN_100391a0(&local_9,"NET_SendPacket_Compress",0,"Networking",false,4);
    FUN_100391a0(&local_9,"NET_SendPacket_CompressVoice",0,"Networking",false,4);
    FUN_1003d710("PrintChannel",&DAT_10427a80 + uVar1 * 0x53,(undefined1 *)0x0);
    FUN_1003ef70(&local_140,(byte *)"scripts/vscripts/%s");
    FUN_1003ef70(&local_140,(byte *)"scripts/vscripts/%s%s");
    FUN_1003ff90(*(void **)((int)param_1 + 4),(int)"Standoff behavior parms changed");
    FUN_1003ff90(*(void **)(param_1 + 4),(int)"Initializing assault behavior");
    FUN_1003ff90(param_1,(int)"Stopping scripted schedule");
    FUN_1003ff90(this,(int)"CAI_BaseNPC::ClearAllSchedules");
    FUN_100400f0(&DAT_107a3268,"AMMO_00BUCKSHOT",0x20000800,1,0,0,100,0x431bcba3,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_40MM_GRENADE",0x1000000,1,0,0,4,0x3f800000,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_OOZ_BULLETS",0x2000002,1,0,0,1,0x445a1d17,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_PISTOL_357SIG",2,1,0,0,200,0x4312d654,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_PISTOL_44MAG",2,1,0,0,200,0x43284254,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_PISTOL_45ACP",2,1,0,0,200,0x43046d17,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_PISTOL_9MM",2,1,0,0,200,0x42a5885d,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_RIFLE_556NATO",2,1,0,0,400,0x42e9b174,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_RIFLE_762MM",2,1,0,0,400,0x43808800,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_ROCKET",0x1000000,1,0,0,3,0x3f800000,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_SMG_46MM",2,1,0,0,400,0x423af45d,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_SMG_9MM",2,1,0,0,400,0x42dff4ba,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_SNIPER_338LAPUA",2,1,0,0,100,0x44120ee9,0,4,8);
    FUN_100400f0(&DAT_107a3268,"AMMO_SNIPER_50BMG",2,1,0,0,100,0x44120ee9,0,4,8);
    FUN_1004a460(this,&local_14,0,0,0,0xffffffff,0.0,"BaseCombatWeapon_HideThink");
    FUN_1004a840(param_1,(int **)"iostream stream error",(int *)0x15);
    FUN_10057220(&DAT_10515220,(byte *)"%s : %8.2f:  start %s");
    FUN_1005e5e0(this,"anim_attachment_RH",local_1c,local_10);
    FUN_10063ca0(1,0,(uint)"clientragdollcreate");
    FUN_10063ca0(1,0,(uint)"hitzonecreate");
    FUN_10063ca0(1,0,(uint)"vomit");
    FUN_1006c3e0("BigNet",0x100);
    FUN_1006c3e0("BigNet",0x200);
    FUN_1006c3e0("BigNet",0x40);
    FUN_1006c3e0("BigNet",0x400);
    FUN_1006c3e0("BigNet",0x80);
    FUN_1006c3e0("BigNet",1);
    FUN_1006c3e0("BigNet",8);
    FUN_10076710(this,"PreEntityPacketReceived",param_1 - 1,0);
    FUN_10076d60(this,"client_ragdoll");
    FUN_10085b70(&DAT_10694980,"AMMO_00BUCKSHOT",0x20000800,1,0,0,100,0x431bcba3,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_40MM_GRENADE",0x1000000,1,0,0,4,0x3f800000,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_OOZ_BULLETS",0x2000002,1,0,0,1,0x445a1d17,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_PISTOL_357SIG",2,1,0,0,200,0x4312d654,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_PISTOL_44MAG",2,1,0,0,200,0x43284254,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_PISTOL_45ACP",2,1,0,0,200,0x43046d17,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_PISTOL_9MM",2,1,0,0,200,0x42a5885d,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_RIFLE_556NATO",2,1,0,0,400,0x42e9b174,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_RIFLE_762MM",2,1,0,0,400,0x43808800,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_ROCKET",0x1000000,1,0,0,3,0x3f800000,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_SMG_46MM",2,1,0,0,400,0x423af45d,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_SMG_9MM",2,1,0,0,400,0x42dff4ba,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_SNIPER_338LAPUA",2,1,0,0,100,0x44120ee9,0,4,8);
    FUN_10085b70(&DAT_10694980,"AMMO_SNIPER_50BMG",2,1,0,0,100,0x44120ee9,0,4,8);
    FUN_100949c0(this,1,(byte *)"AMMO_ROCKET",0);
    FUN_100949c0(this,2,(byte *)"AMMO_40MM_GRENADE",0);
    FUN_1009fae0(5,0x6b,0xff,0x5f,0x5f,0xff,(byte *)"World Bounds: (%f,%f,%f) - (%f,%f,%f)");
    FUN_100a2860(&local_168,(byte *)"[%6.2f] %6.3f %6.3f");
    FUN_100a2860(&local_48c,(byte *)"[%7d] %9.2f %9.2f %8.2fp");
    FUN_100a29b0(param_1,param_2,(byte *)"FADEINOUT \"1\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"FFADE_IN \"1\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"FFADE_MODULATE \"1\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"FFADE_OUT \"1\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"FFADE_PURGE \"1\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"FFADE_STAYOUT \"1\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"FLICKER \"1\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"WRITEOUT \"1\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"skiptotick \"%i\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"skiptotime \"%.3f\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"starttick \"%i\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"starttime \"%.3f\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"stoptick \"%i\"\n");
    FUN_100a29b0(param_1,param_2,(byte *)"target \"%s\"\n");
    FUN_100a4790(param_1,"NPC w/no reachable nodes!",5);
    FUN_100a7bb0("item_healthvial",(undefined8 *)((int)this + 0x210),
    FUN_100a7bb0("tistaticglobalsproxy",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
    FUN_100a9cb0(param_1,iVar2,"Enemy too far to attack",0,0,0xff,0xff,0xff);
    FUN_100a9cb0(param_1,iVar2,"HAS FL_FLY",0,0xff,0xff,0xff,0xff);
    FUN_100a9cb0(param_1,iVar2,"Not obstructing nav",0x3c279bbb,0xff,0xff,0xff,0xff);
    FUN_100a9cb0(param_1,iVar3 + 1,"Available",0,0xff,0xff,0xff,0xff);
    FUN_100a9cb0(param_1,iVar3,"LOCKED",0,0xff,0xff,0xff,0xff);
    FUN_100ad410(param_1,(uint *)"scripts/instructor_lessons.txt");
    FUN_100ad410(param_1,(uint *)"scripts/mod_lessons.txt");
    FUN_100ae3e0("sprites/blueglow1.vmt");
    FUN_100aeb90(param_1,"linear interp angles");
    FUN_100aeb90(param_1,"revert point");
    FUN_100aeb90(param_1,"save key");
    FUN_100aeb90(param_1,"smooth angles");
    FUN_100aeb90(param_1,"smooth origin");
    FUN_100aeb90(param_1,"toggle keyframe");
    FUN_100aeb90(param_1,"toggle look target");
    FUN_100aeb90(this,"OnSetKeys");
    FUN_100aec30(param_1,"linear interp angles");
    FUN_100aec30(param_1,"revert point");
    FUN_100aec30(param_1,"save key");
    FUN_100aec30(param_1,"smooth angles");
    FUN_100aec30(param_1,"smooth origin");
    FUN_100aec30(param_1,"toggle keyframe");
    FUN_100aec30(param_1,"toggle look target");
    FUN_100aec30(this,"OnSetKeys");
    FUN_100af5e0(this,pcVar2,"InputRunScript");
    FUN_100b1cb0(param_1,"prop_dynamic");
    FUN_100b1cb0(param_1,"prop_physics");
    FUN_100b2d70(this,"SetParentAttachment",pbVar2,'\0');
    FUN_100b2d70(this,"SetParentAttachmentMaintainOffset",pbVar2,'\x01');
    FUN_100b3370(uVar5,"ReadDeletions",'\0');
    FUN_100b3370(unaff_EDI,"ReadLeavePVS",'\0');
    FUN_100b33c0(piVar3,(byte *)"Forced by cvar\n");
    FUN_100b7ec0(param_1,*(float *)(DAT_10646018 + 0x10) + 0.05,"DoorSolidityContext");
    FUN_100b7ec0(param_1,*(float *)(DAT_10646018 + 0x10) + 0.1,"Ctx_Vanish");
    FUN_100b7ec0(param_1,*(float *)(DAT_10646018 + 0x10),"Context_SUB_Fadeout");
    FUN_100b8210(param_1,0,0.0,"Ctx_Vanish");
    FUN_100b8210(param_1,0,0.0,"PROP_CLEARFLAGS");
    FUN_100b8210(param_1,FUN_100b08c0,*(float *)(DAT_10646018 + 0x10) + fVar5,"ScriptThink");
    FUN_100b8210(param_1,FUN_100e2ae0,*(float *)(DAT_10646018 + 0x10) + local_8,"MovingSound");
    FUN_100b8210(param_1,FUN_101994c0,*(float *)(DAT_10646018 + 0x10) + 0.5,"AreaPortal");
    FUN_100b8210(param_1,FUN_101ebbd0,*(float *)(DAT_10646018 + 0x10),"NavContext");
    FUN_100b8210(param_1,FUN_102eced0,*(float *)(DAT_10646018 + 0x10),"DelayedPushForceThink");
    FUN_100b8210(this,0,*(float *)(DAT_10646018 + 0x10),"DelayedPushForceThink");
    FUN_100b8210(this,0,0.0,"BaseCombatWeapon_HideThink");
    FUN_100b8210(this,0,0.0,"Ctx_Vanish");
    FUN_100b8210(this,FUN_100afb20,*(float *)(DAT_10646018 + 0x10) + param_1,"Context_SUB_Fadeout");
    FUN_100b8210(this,FUN_100b3140,*(float *)(DAT_10646018 + 0x10) + param_2,"ShadowCastDistThink");
    FUN_100b8210(this,FUN_10160920,*(float *)(DAT_10646018 + 0x10) + 45.0,"DieContext");
    FUN_100b8210(this,FUN_102d2dc0,*(float *)(DAT_10646018 + 0x10),"GrabbedContextThink");
    FUN_100b8210(this,FUN_102eced0,*(float *)(DAT_10646018 + 0x10),"DelayedPushForceThink");
    FUN_100d0610(&DAT_105a0e40,piVar5,"KilledNPC",0.3,(int *)this,(int *)this,0.0);
    FUN_100d0740((byte *)"fov %f\n");
    FUN_100d0790(&DAT_105a0e40,"game_player_manager","OnPlayerSpawn",0.0,fStack20,local_10,-NAN,0.0,
    FUN_100dae40(0x11,(byte *)"Ent changes: %3d, prop changes: %3d");
    FUN_100dae40(0xf,(byte *)"----- dt_ShowPartialChangeEnts -----");
    FUN_100daf30(&local_1c,(byte *)"%50s%15s%15s%15s");
    FUN_100daf30(&local_1c,(byte *)"%d total faces in scene");
    FUN_100daf30(&local_1c,(byte *)"Printing %d top offending models");
    FUN_100daf30(&local_2c,(byte *)"WARNING:  OS Paged Pool Memory Low");
    FUN_100daf30(&local_40,(byte *)"Total Channels: %i");
    FUN_100daf30(&local_48,(byte *)"Texture Memory Usage: %s Kb / %s Kb");
    FUN_100daf30((int *)local_1c,(byte *)"   REC   ");
    FUN_100daf30((int *)local_1c,(byte *)"  PLAY   ");
    FUN_100daf30(local_38,(byte *)"IO stats is disabled.\n");
    FUN_100df7b0(0x3ce66666,0x3f2b851f,0.1,0xfa,0xfa,200,0xff,(int)"Headphone Pan Law");
    FUN_100df7b0(0x3ce66666,0x3f2b851f,0.1,0xfa,0xfa,200,0xff,(int)"Speaker Pan Law");
    FUN_100dfc90(puVar2,0,10.0,1.0,(int)"DSP NODE");
    FUN_100dfdd0((void *)((int)&param_2 + 3),"CClientShadowMgr::AddShadowToReceiver",0,
    FUN_100e3de0((undefined4 *)&DAT_10609198,2,4,"m_hViewModel",0,0x80);
    FUN_100e3de0((undefined4 *)&DAT_10640d64,10,4,"m_iszOverlayNames",0,0x80);
    FUN_100e3de0((undefined4 *)&DAT_10640e0c,10,4,"m_flOverlayTimes",0,0x80);
    FUN_100e3de0((undefined4 *)&DAT_1064f8c4,0x20,0xc,"m_ragAngles",0,0x80);
    FUN_100e3de0((undefined4 *)&DAT_1064f96c,0x20,0xc,"m_ragPos",0,0x80);
    FUN_100e3de0((undefined4 *)&DAT_10675648,0x20,0,"\"player_array\"",FUN_101d9760,0x80);
    FUN_100e3de0((undefined4 *)&DAT_106a08bc,0x10,0xc,"m_vecPoints",0,0x80);
    FUN_100e3e30((undefined4 *)&DAT_1060aed8,"m_angRotation[0]",0x300310,4,1.821688e-44,0x40000,
    FUN_100e3e30((undefined4 *)&DAT_1060af2c,"m_angRotation[1]",0x300314,4,1.821688e-44,0x40000,
    FUN_100e3e30((undefined4 *)&DAT_1060af80,"m_angRotation[2]",0x300318,4,1.821688e-44,0x40000,
    FUN_100e3e30((undefined4 *)&DAT_106840c8,"m_vecAngles[0]",0x10001c,4,1.821688e-44,0,FUN_100e45e0
    FUN_100e3e30((undefined4 *)&DAT_1068411c,"m_vecAngles[1]",0x100020,4,1.821688e-44,0,FUN_100e45e0
    FUN_100e3e30((undefined4 *)&DAT_10686368,"m_angEyeAngles[0]",0x301340,4,1.541428e-44,0x40000,
    FUN_100e3e30((undefined4 *)&DAT_106863bc,"m_angEyeAngles[1]",0x301344,4,1.541428e-44,0x40000,
    FUN_100e3e30((undefined4 *)&DAT_10691d28,"m_vecAngles[0]",0x10001c,4,1.821688e-44,0,FUN_100e45e0
    FUN_100e3e30((undefined4 *)&DAT_10691d7c,"m_vecAngles[1]",0x100020,4,1.821688e-44,0,FUN_100e45e0
    FUN_100e3e30((undefined4 *)&DAT_10696d28,"m_angRotation[0]",0x300310,4,1.541428e-44,0x40000,
    FUN_100e3e30((undefined4 *)&DAT_10696d7c,"m_angRotation[1]",0x300314,4,1.541428e-44,0x40000,
    FUN_100e3e30((undefined4 *)&DAT_10696dd0,"m_angRotation[2]",0x300318,4,1.541428e-44,0x40000,
    FUN_100e3e30((undefined4 *)&DAT_106a115c,"m_angRotation[0]",0x100030,4,1.821688e-44,0,
    FUN_100e3e30((undefined4 *)&DAT_106a11b0,"m_angRotation[1]",0x100034,4,1.821688e-44,0,
    FUN_100e3e30((undefined4 *)&DAT_106a1204,"m_angRotation[2]",0x100038,4,1.821688e-44,0,
    FUN_100e3e30((undefined4 *)&DAT_106a465c,"m_angRotation[0]",0x100018,4,1.821688e-44,0,
    FUN_100e3e30((undefined4 *)&DAT_106a46b0,"m_angRotation[1]",0x10001c,4,1.821688e-44,0,
    FUN_100e3e30((undefined4 *)&DAT_106a4704,"m_angRotation[2]",0x100020,4,1.821688e-44,0,
    FUN_100e3f00((undefined4 *)&DAT_106040a8,(uint *)"m_flPoseParameter",(uint *)0x418,4,
    FUN_100e3f00((undefined4 *)&DAT_106041a4,(uint *)"m_flEncodedController",(uint *)0x478,4,
    FUN_100e3f00((undefined4 *)&DAT_1060502c,(uint *)"m_hMyWeapons",(uint *)0x788,4,(uint *)0x5,
    FUN_100e3f00((undefined4 *)&DAT_106084c8,(uint *)"m_iAmmo",(uint *)0x74c,4,(uint *)0xf,
    FUN_100e3f00((undefined4 *)&DAT_10609fc0,(uint *)"m_hAttachEntity",(uint *)0x3d4,4,(uint *)0xa,
    FUN_100e3f00((undefined4 *)&DAT_1060a014,(uint *)"m_nAttachIndex",(uint *)&DAT_000003fc,4,
    FUN_100e3f00((undefined4 *)&DAT_1060f38c,(uint *)"m_flFrozenPerHitbox",(uint *)&DAT_000003c8,4,
    FUN_100e3f00((undefined4 *)&DAT_10643f00,(uint *)"m_RawPanelBitVec",(uint *)0xef0,1,
    FUN_100e3f00((undefined4 *)&DAT_1064e488,(uint *)"m_vServerControlPoints",(uint *)0x4d0,0xc,
    FUN_100e3f00((undefined4 *)&DAT_1064e4dc,(uint *)"m_iServerControlPointAssignments",
    FUN_100e3f00((undefined4 *)&DAT_1064e530,(uint *)"m_hControlPointEnts",(uint *)0x600,4,
    FUN_100e3f00((undefined4 *)&DAT_1064e584,(uint *)"m_iControlPointParents",(uint *)0x6fc,1,
    FUN_100e3f00((undefined4 *)&DAT_106510d4,(uint *)"m_iPing",(uint *)&DAT_000003b4,4,(uint *)0x21,
    FUN_100e3f00((undefined4 *)&DAT_10651128,(uint *)"m_iFrags",(uint *)0x438,4,(uint *)0x21,
    FUN_100e3f00((undefined4 *)&DAT_1065117c,(uint *)"m_iDeaths",(uint *)0x4bc,4,(uint *)0x21,
    FUN_100e3f00((undefined4 *)&DAT_106511d0,(uint *)"m_bConnected",(uint *)0x540,4,(uint *)0x21,
    FUN_100e3f00((undefined4 *)&DAT_10651224,(uint *)"m_iTeam",(uint *)0x5c4,4,(uint *)0x21,
    FUN_100e3f00((undefined4 *)&DAT_10651278,(uint *)"m_bAlive",(uint *)0x648,1,(uint *)0x21,
    FUN_100e3f00((undefined4 *)&DAT_106512cc,(uint *)"m_iHealth",(uint *)0x66c,4,(uint *)0x21,
    FUN_100e3f00((undefined4 *)&DAT_10651604,(uint *)"m_chAreaBits",(uint *)&DAT_00000004,1,
    FUN_100e3f00((undefined4 *)&DAT_10651658,(uint *)"m_chAreaPortalBits",(uint *)&DAT_00000024,1,
    FUN_100e3f00((undefined4 *)&DAT_10652a48,(uint *)"m_flPostProcessParameters",
    FUN_100e3f00((undefined4 *)&DAT_10672e54,(uint *)"m_chCurrentSlideLists",(uint *)0x4d0,1,
    FUN_100e3f00((undefined4 *)&DAT_1067d704,(uint *)"m_flValues",(uint *)&DAT_00000008,4,
    FUN_100e3f00((undefined4 *)&DAT_1067d758,(uint *)"m_nValueCounts",(uint *)0x108,4,
    FUN_100e3f00((undefined4 *)&DAT_10684540,(uint *)"m_iFixUserId",(uint *)0x6f4,4,(uint *)0x21,
    FUN_100e3f00((undefined4 *)&DAT_10684594,(uint *)"m_iExperience",(uint *)0x778,4,(uint *)0x21,
    FUN_100e3f00((undefined4 *)&DAT_106845e8,(uint *)"m_iExperience_Delta",(uint *)0x7fc,4,
    FUN_100e3f00((undefined4 *)&DAT_10686560,(uint *)"m_AddonModelWeaponIDs",(uint *)0x1744,4,
    FUN_100e3f00((undefined4 *)&DAT_10687130,(uint *)"m_iGrenades",(uint *)0x17c4,4,
    FUN_100e3f00((undefined4 *)&DAT_1068ae58,(uint *)"m_nVoteOptionCount",(uint *)&DAT_000003bc,4,
    FUN_100e3f00((undefined4 *)&DAT_1068c048,(uint *)"m_fireXDelta",(uint *)&DAT_000003b4,4,
    FUN_100e3f00((undefined4 *)&DAT_1068c09c,(uint *)"m_fireYDelta",(uint *)0x4b4,4,
    FUN_100e3f00((undefined4 *)&DAT_1068c0f0,(uint *)"m_fireZDelta",(uint *)0x5b4,4,
    FUN_100e3f00((undefined4 *)&DAT_10694728,(uint *)"m_NetworkWaitList",(uint *)0x4ac0,4,
    FUN_100e3f00((undefined4 *)&DAT_1069477c,(uint *)"m_NetworkWaitList_LoadPercent",(uint *)0x4b34,
    FUN_100e3f00((undefined4 *)&DAT_106961b0,(uint *)"m_VehicleFlags",(uint *)0x6b8,4,
    FUN_100e3f00((undefined4 *)&DAT_106964a4,(uint *)"m_pPassengers",(uint *)0x500,4,
    FUN_100e40c0((undefined4 *)&DAT_105fb71c,"baseclass",0,PTR_DAT_10599b6c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10603e5c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10604444,"serveranimdata",0,&DAT_10603bb4,FUN_100b1010,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106049dc,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10604a30,"overlay_vars",0,&DAT_10604654,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10604edc,"baseclass",0,PTR_DAT_1059d36c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10604f30,"bcc_localdata",0,&DAT_10604bd8,FUN_10095e30,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10605694,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106056e8,"LocalWeaponData",0,&DAT_106051c8,FUN_1009ddf0,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060573c,"LocalActiveWeaponData",0,&DAT_106051b0,FUN_1009ddf0,
    FUN_100e40c0((undefined4 *)&DAT_1060641c,"AnimTimeMustBeFirst",0,&DAT_10605a70,FUN_100b1010,0x80
    FUN_100e40c0((undefined4 *)&DAT_106066bc,"m_Collision",0xf0,&DAT_1060ba3c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10606710,"m_Glow",0x14c,&DAT_1064b008,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10606da0,"predictable_id",0,&DAT_10605a88,FUN_100b1170,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106076ac,"baseclass",0,PTR_DAT_10599600,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10607a5c,"baseclass",0,PTR_DAT_10599b6c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10607e24,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106083cc,"m_Local",0x870,&DAT_10651584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10608b5c,"baseclass",0,PTR_DAT_10599b6c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10609534,"localdata",0,&DAT_10608270,FUN_100c3820,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060a6a4,"beampredictable_id",0,&DAT_10609d3c,FUN_100c8160,0x80)
    FUN_100e40c0((undefined4 *)&DAT_1060a7d4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060ac14,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060ad34,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060b0f4,"baseclass",0,PTR_DAT_105d6b7c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060d04c,"baseclass",0,PTR_DAT_105d6b7c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060d1dc,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060e04c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060e1ac,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060e6c4,"m_EnvWindShared",0x3b4,&DAT_1060dd0c,FUN_100e4630,0x80
    FUN_100e40c0((undefined4 *)&DAT_1060e794,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060ea34,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060ecd4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060f11c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1060f2e4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1063f5cc,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1063f674,"m_Info",0x3b8,&DAT_1063f724,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1063f95c,"baseclass",0,PTR_DAT_105d6234,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10640024,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10640454,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10640cbc,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10640fd4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106411b4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1064257c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10643414,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106439d4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10643c0c,"baseclass",0,PTR_DAT_105b3274,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106443d8,"m_Collision",0xf0,&DAT_1060ba3c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106444a4,"baseclass",0,PTR_DAT_105e5afc,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1064473c,"baseclass",0,PTR_DAT_105d6b7c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10644c34,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10644e54,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10644f34,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106450fc,"baseclass",0,PTR_DAT_105d6b7c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10645434,"baseclass",0,PTR_DAT_105bd6a8,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10645534,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1064c87c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1064cdbc,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1064efc4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1064f81c,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1064fb34,"baseclass",0,PTR_DAT_105c26d0,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1064fd84,"baseclass",0,PTR_DAT_105cc598,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10650254,"baseclass",0,PTR_DAT_105b3274,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106503c4,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1065222c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106529f4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10652b74,"baseclass",0,PTR_DAT_1059e75c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10653234,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10653374,"baseclass",0,PTR_DAT_105cc57c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1065350c,"baseclass",0,PTR_DAT_105cc57c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1065384c,"baseclass",0,PTR_DAT_105cc52c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10653bbc,"baseclass",0,PTR_DAT_105cc560,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10653cc4,"baseclass",0,PTR_DAT_105c5320,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10653e3c,"baseclass",0,PTR_DAT_105cc598,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10672d04,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10674034,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10674224,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10674864,"baseclass",0,PTR_DAT_105d63ac,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10674b9c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106757e4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10675b2c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10675f2c,"baseclass",0,PTR_DAT_105d6b7c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10676a04,"baseclass",0,PTR_DAT_105d974c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10676b2c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1067da74,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1067e45c,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1067f1a4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10683b84,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10683d7c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106844ec,"baseclass",0,PTR_DAT_105c8614,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106858d8,"m_flJumpTimer",0x1bc4,&DAT_1067d44c,FUN_100e4630,0x80)
    FUN_100e40c0((undefined4 *)&DAT_1068592c,"m_flRappelJumpTimer",0x1bd4,&DAT_1067d44c,FUN_100e4630
    FUN_100e40c0((undefined4 *)&DAT_10685980,"m_Timer_DM_Respawn",0x1c1c,&DAT_1067d44c,FUN_100e4630,
    FUN_100e40c0((undefined4 *)&DAT_10685f24,"baseclass",0,PTR_DAT_1059e58c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10686410,"m_Shared",0x1354,&DAT_10692dc8,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10686464,"TI_LPDT",0,&DAT_10684a2c,FUN_100c3820,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106864b8,"TI_RPDT",0,&DAT_10684a44,FUN_100c3840,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106886dc,"baseclass",0,PTR_DAT_105e0c88,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10688a24,"baseclass",0,PTR_DAT_105e0c88,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10688bec,"baseclass",0,PTR_DAT_105e0c88,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068900c,"baseclass",0,PTR_DAT_105e0c88,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10689444,"baseclass",0,PTR_DAT_105e0c88,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068969c,"baseclass",0,PTR_DAT_105e0c88,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106898fc,"baseclass",0,PTR_DAT_105e0c88,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10689cd4,"baseclass",0,PTR_DAT_105d7d5c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068a11c,"baseclass",0,PTR_DAT_105de9d4,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068a1cc,"baseclass",0,PTR_DAT_105de9d4,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068a27c,"baseclass",0,PTR_DAT_105de9d4,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068ad5c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068b174,"baseclass",0,PTR_DAT_105d974c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068b6dc,"baseclass",0,PTR_DAT_105bd6a8,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068b7fc,"baseclass",0,PTR_DAT_105bd6a8,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068bff4,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068c38c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068c47c,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068c5bc,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068c694,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068c94c,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068cad4,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068d0ac,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068dfcc,"baseclass",0,PTR_DAT_105cc4b0,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068e124,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1068f54c,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106902a4,"baseclass",0,PTR_DAT_10599b6c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10690ee4,"baseclass",0,PTR_DAT_10599b6c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10692884,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106938bc,"sdksharedlocaldata",0,&DAT_10692db0,FUN_100c3820,0x80)
    FUN_100e40c0((undefined4 *)&DAT_10693a54,"baseclass",0,PTR_DAT_105cc490,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106948d4,"baseclass",0,PTR_DAT_105b6fb0,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10694928,"tacint_gamerules_data",0,&DAT_10693ce8,FUN_103152d0,
    FUN_100e40c0((undefined4 *)&DAT_10694f9c,"ti_static_globals_data",0,&DAT_10694e20,FUN_103173a0,
    FUN_100e40c0((undefined4 *)&DAT_106950dc,"baseclass",0,PTR_DAT_105e0760,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10695574,"baseclass",0,PTR_DAT_105e1f74,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10695b24,"baseclass",0,PTR_DAT_105e1dd4,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10695bd4,"baseclass",0,PTR_DAT_105e1dd4,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10695c84,"baseclass",0,PTR_DAT_105e1dd8,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10695d34,"baseclass",0,PTR_DAT_105e1f54,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069615c,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069698c,"baseclass",0,PTR_DAT_105e1f18,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10697844,"baseclass",0,PTR_DAT_105e1f54,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106981b4,"baseclass",0,PTR_DAT_105e1f74,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10698384,"baseclass",0,PTR_DAT_1059e120,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10698d24,"baseclass",0,PTR_DAT_1059a268,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10698d78,"WeaponTIBaseLocal",0,&DAT_106988dc,FUN_1009ddf0,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106996fc,"m_meleeSwingTimer",0x6cc,&DAT_1067d44c,FUN_100e4630,
    FUN_100e40c0((undefined4 *)&DAT_106997ac,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10699950,"LocalActiveMeleeData",0,&DAT_1069917c,FUN_1009ddf0,
    FUN_100e40c0((undefined4 *)&DAT_10699a2c,"baseclass",0,PTR_DAT_105e2148,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10699b04,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10699bdc,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10699cb4,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10699d8c,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10699e64,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_10699f3c,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069a014,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069a0ec,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069a1c4,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069a2f4,"baseclass",0,PTR_DAT_10598b9c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069a424,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069a52c,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069a684,"baseclass",0,PTR_DAT_10599b6c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069a7b4,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069a8bc,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069aa14,"baseclass",0,PTR_DAT_10599b6c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069ab44,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069ac1c,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069acf4,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069adcc,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069aea4,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069af7c,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b054,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b12c,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b204,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b2dc,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b3b4,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b4e4,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b614,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b744,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b874,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069b94c,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069ba24,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069bafc,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069bbd4,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069bcac,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069bd84,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069be5c,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069bf34,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069c00c,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069c0e4,"baseclass",0,PTR_DAT_105e211c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069c39c,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069c63c,"baseclass",0,PTR_DAT_1059ae2c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069ca24,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069cfdc,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069d594,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069d8ac,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069dbe4,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069dd3c,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069e284,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069e9ac,"baseclass",0,PTR_DAT_105d63ac,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069ed2c,"baseclass",0,PTR_DAT_1059e584,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069f334,"baseclass",0,PTR_DAT_105e5a74,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069f9ec,"baseclass",0,PTR_DAT_105e5a80,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069fc6c,"baseclass",0,PTR_DAT_105e5a80,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069fe44,"baseclass",0,PTR_DAT_105e5a80,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_1069ffc4,"baseclass",0,PTR_DAT_105e5a80,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a01ac,"baseclass",0,PTR_DAT_105e5a80,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a0384,"baseclass",0,PTR_DAT_105e5a80,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a056c,"baseclass",0,PTR_DAT_105e5a80,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a0d8c,"baseclass",0,PTR_DAT_105e5afc,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a10b4,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a154c,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a1754,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a1a5c,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a1d5c,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a200c,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a22bc,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a26b4,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a2708,"m_EffectData",0xc,&DAT_1060d484,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a29d4,"baseclass",0,PTR_DAT_105e5afc,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a2d6c,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a2fc4,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a326c,"baseclass",0,PTR_DAT_105e5afc,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a344c,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a39e4,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a3c8c,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a3e74,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a3fc4,"baseclass",0,PTR_DAT_105e5afc,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a4174,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a439c,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a45b4,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a49a4,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a4ba4,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a4df4,"baseclass",0,PTR_DAT_105e5afc,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a4f44,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a519c,"baseclass",0,PTR_DAT_105e5afc,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a5394,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a55f4,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e40c0((undefined4 *)&DAT_106a58e4,"baseclass",0,PTR_DAT_105e393c,FUN_100e4630,0x80);
    FUN_100e4130((undefined4 *)&DAT_106053e4,"DT_AnimTimeMustBeFirst","m_flAnimTime");
    FUN_100e4130((undefined4 *)&DAT_106055e4,"DT_AnimTimeMustBeFirst","m_flAnimTime");
    FUN_100e4130((undefined4 *)&DAT_1060968c,"DT_GlowProperty","m_iGlowType");
    FUN_100e4130((undefined4 *)&DAT_106096e0,"DT_GlowProperty","m_nGlowRange");
    FUN_100e4130((undefined4 *)&DAT_10609734,"DT_GlowProperty","m_nGlowRangeInverse");
    FUN_100e4130((undefined4 *)&DAT_10609788,"DT_GlowProperty","m_glowColorOverride");
    FUN_100e4130((undefined4 *)&DAT_106097dc,"DT_GlowProperty","m_iGlowTeam");
    FUN_100e4130((undefined4 *)&DAT_10609830,"DT_GlowProperty","m_bFlashing");
    FUN_100e4130((undefined4 *)&DAT_10609884,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_106098d8,"DT_ServerAnimationData","m_flCycle");
    FUN_100e4130((undefined4 *)&DAT_1060992c,"DT_BaseEntity","m_nModelIndex");
    FUN_100e4130((undefined4 *)&DAT_1060ad88,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_1060addc,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_1060ae30,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_10643468,"DT_GlowProperty","m_iGlowType");
    FUN_100e4130((undefined4 *)&DAT_106434bc,"DT_GlowProperty","m_nGlowRange");
    FUN_100e4130((undefined4 *)&DAT_10643510,"DT_GlowProperty","m_nGlowRangeInverse");
    FUN_100e4130((undefined4 *)&DAT_10643564,"DT_GlowProperty","m_glowColorOverride");
    FUN_100e4130((undefined4 *)&DAT_106435b8,"DT_GlowProperty","m_iGlowTeam");
    FUN_100e4130((undefined4 *)&DAT_1064360c,"DT_GlowProperty","m_bFlashing");
    FUN_100e4130((undefined4 *)&DAT_10643660,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_106436b4,"DT_ServerAnimationData","m_flCycle");
    FUN_100e4130((undefined4 *)&DAT_10644790,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_10653560,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_106535b4,"DT_BaseAnimating","m_flPlaybackRate");
    FUN_100e4130((undefined4 *)&DAT_10653608,"DT_BaseAnimating","m_nMuzzleFlashParity");
    FUN_100e4130((undefined4 *)&DAT_1065365c,"DT_BaseAnimatingOverlay","overlay_vars");
    FUN_100e4130((undefined4 *)&DAT_106536b0,"DT_BaseFlex","m_flexWeight");
    FUN_100e4130((undefined4 *)&DAT_10653704,"DT_BaseFlex","m_blinktoggle");
    FUN_100e4130((undefined4 *)&DAT_106538a0,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_106538f4,"DT_BaseAnimating","m_flPlaybackRate");
    FUN_100e4130((undefined4 *)&DAT_10653948,"DT_BaseAnimating","m_nMuzzleFlashParity");
    FUN_100e4130((undefined4 *)&DAT_1065399c,"DT_BaseAnimatingOverlay","overlay_vars");
    FUN_100e4130((undefined4 *)&DAT_106539f0,"DT_BaseFlex","m_flexWeight");
    FUN_100e4130((undefined4 *)&DAT_10653a44,"DT_BaseFlex","m_blinktoggle");
    FUN_100e4130((undefined4 *)&DAT_10653e90,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_10653ee4,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_10653fe0,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_10674614,"DT_GlowProperty","m_iGlowType");
    FUN_100e4130((undefined4 *)&DAT_10674668,"DT_GlowProperty","m_nGlowRange");
    FUN_100e4130((undefined4 *)&DAT_106746bc,"DT_GlowProperty","m_nGlowRangeInverse");
    FUN_100e4130((undefined4 *)&DAT_10674710,"DT_GlowProperty","m_glowColorOverride");
    FUN_100e4130((undefined4 *)&DAT_10674764,"DT_GlowProperty","m_iGlowTeam");
    FUN_100e4130((undefined4 *)&DAT_106747b8,"DT_GlowProperty","m_bFlashing");
    FUN_100e4130((undefined4 *)&DAT_10685f78,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_10685fcc,"DT_BaseAnimatingOverlay","overlay_vars");
    FUN_100e4130((undefined4 *)&DAT_10686020,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_10686074,"DT_BaseAnimating","m_flPlaybackRate");
    FUN_100e4130((undefined4 *)&DAT_106860c8,"DT_BaseAnimating","m_nSequence");
    FUN_100e4130((undefined4 *)&DAT_1068611c,"DT_BaseAnimating","m_nNewSequenceParity");
    FUN_100e4130((undefined4 *)&DAT_10686170,"DT_BaseAnimating","m_nResetEventsParity");
    FUN_100e4130((undefined4 *)&DAT_106861c4,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_10686218,"DT_BaseAnimating","m_nBody");
    FUN_100e4130((undefined4 *)&DAT_1068626c,"DT_ServerAnimationData","m_flCycle");
    FUN_100e4130((undefined4 *)&DAT_106862c0,"DT_AnimTimeMustBeFirst","m_flAnimTime");
    FUN_100e4130((undefined4 *)&DAT_10686314,"DT_BaseAnimating","m_bClientSideAnimation");
    FUN_100e4130((undefined4 *)&DAT_10688784,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_10688ce8,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_10688d3c,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_10688d90,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_106890b4,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_10689108,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_1068915c,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_106891b0,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_1068b1c8,"DT_CollisionProperty","m_vecSpecifiedSurroundingMins")
    FUN_100e4130((undefined4 *)&DAT_1068b21c,"DT_CollisionProperty","m_vecSpecifiedSurroundingMaxs")
    FUN_100e4130((undefined4 *)&DAT_1068b270,"DT_GlowProperty","m_iGlowType");
    FUN_100e4130((undefined4 *)&DAT_1068b2c4,"DT_GlowProperty","m_nGlowRange");
    FUN_100e4130((undefined4 *)&DAT_1068b318,"DT_GlowProperty","m_nGlowRangeInverse");
    FUN_100e4130((undefined4 *)&DAT_1068b36c,"DT_GlowProperty","m_glowColorOverride");
    FUN_100e4130((undefined4 *)&DAT_1068b3c0,"DT_GlowProperty","m_iGlowTeam");
    FUN_100e4130((undefined4 *)&DAT_1068b414,"DT_GlowProperty","m_bFlashing");
    FUN_100e4130((undefined4 *)&DAT_1068b468,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_1068b4bc,"DT_ServerAnimationData","m_flCycle");
    FUN_100e4130((undefined4 *)&DAT_1068c6e8,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_1068c73c,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_1068d544,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_1068d598,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_1068d694,"DT_CollisionProperty","m_vecSpecifiedSurroundingMins")
    FUN_100e4130((undefined4 *)&DAT_1068d6e8,"DT_CollisionProperty","m_vecSpecifiedSurroundingMaxs")
    FUN_100e4130((undefined4 *)&DAT_1068d73c,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_1068d790,"DT_BaseEntity","m_fEffects");
    FUN_100e4130((undefined4 *)&DAT_1068d7e4,"DT_BaseEntity","m_clrRender");
    FUN_100e4130((undefined4 *)&DAT_1068d838,"DT_BaseEntity","m_hOwnerEntity");
    FUN_100e4130((undefined4 *)&DAT_1068d88c,"DT_BaseEntity","m_hEffectEntity");
    FUN_100e4130((undefined4 *)&DAT_1068d8e0,"DT_BaseEntity","m_iParentAttachment");
    FUN_100e4130((undefined4 *)&DAT_1068d934,"DT_BaseEntity","m_cellX");
    FUN_100e4130((undefined4 *)&DAT_1068d988,"DT_BaseEntity","m_cellY");
    FUN_100e4130((undefined4 *)&DAT_1068d9dc,"DT_BaseEntity","m_cellZ");
    FUN_100e4130((undefined4 *)&DAT_1068da30,"DT_BaseFlex","m_flexWeight");
    FUN_100e4130((undefined4 *)&DAT_1068da84,"DT_BaseFlex","m_blinktoggle");
    FUN_100e4130((undefined4 *)&DAT_1068dad8,"DT_BaseFlex","m_viewtarget");
    FUN_100e4130((undefined4 *)&DAT_1068db2c,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_1068db80,"DT_BaseAnimating","m_flPlaybackRate");
    FUN_100e4130((undefined4 *)&DAT_1068dbd4,"DT_BaseAnimating","m_nForceBone");
    FUN_100e4130((undefined4 *)&DAT_1068dc28,"DT_BaseAnimating","m_vecForce");
    FUN_100e4130((undefined4 *)&DAT_1068dc7c,"DT_BaseAnimating","m_nSkin");
    FUN_100e4130((undefined4 *)&DAT_1068dcd0,"DT_BaseAnimating","m_flModelWidthScale");
    FUN_100e4130((undefined4 *)&DAT_1068dd24,"DT_BaseAnimating","m_flEncodedController");
    FUN_100e4130((undefined4 *)&DAT_1068dd78,"DT_BaseAnimating","m_nMuzzleFlashParity");
    FUN_100e4130((undefined4 *)&DAT_1068ddcc,"DT_BaseAnimating","m_hLightingOrigin");
    FUN_100e4130((undefined4 *)&DAT_1068de20,"DT_BaseAnimating","m_hLightingOriginRelative");
    FUN_100e4130((undefined4 *)&DAT_1068de74,"DT_BaseAnimating","m_fadeMinDist");
    FUN_100e4130((undefined4 *)&DAT_1068dec8,"DT_BaseAnimating","m_fadeMaxDist");
    FUN_100e4130((undefined4 *)&DAT_1068df1c,"DT_BaseAnimating","m_flFadeScale");
    FUN_100e4130((undefined4 *)&DAT_1068e1cc,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_1068e220,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_1068e370,"DT_CollisionProperty","m_vecSpecifiedSurroundingMins")
    FUN_100e4130((undefined4 *)&DAT_1068e3c4,"DT_CollisionProperty","m_vecSpecifiedSurroundingMaxs")
    FUN_100e4130((undefined4 *)&DAT_1068e418,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_1068e46c,"DT_BaseEntity","m_fEffects");
    FUN_100e4130((undefined4 *)&DAT_1068e4c0,"DT_BaseEntity","m_clrRender");
    FUN_100e4130((undefined4 *)&DAT_1068e514,"DT_BaseEntity","m_hOwnerEntity");
    FUN_100e4130((undefined4 *)&DAT_1068e568,"DT_BaseEntity","m_hEffectEntity");
    FUN_100e4130((undefined4 *)&DAT_1068e5bc,"DT_BaseEntity","m_iParentAttachment");
    FUN_100e4130((undefined4 *)&DAT_1068e610,"DT_BaseEntity","m_cellX");
    FUN_100e4130((undefined4 *)&DAT_1068e664,"DT_BaseEntity","m_cellY");
    FUN_100e4130((undefined4 *)&DAT_1068e6b8,"DT_BaseEntity","m_cellZ");
    FUN_100e4130((undefined4 *)&DAT_1068e70c,"DT_BaseFlex","m_flexWeight");
    FUN_100e4130((undefined4 *)&DAT_1068e760,"DT_BaseFlex","m_blinktoggle");
    FUN_100e4130((undefined4 *)&DAT_1068e7b4,"DT_BaseFlex","m_viewtarget");
    FUN_100e4130((undefined4 *)&DAT_1068e808,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_1068e85c,"DT_BaseAnimating","m_flPlaybackRate");
    FUN_100e4130((undefined4 *)&DAT_1068e8b0,"DT_BaseAnimating","m_nForceBone");
    FUN_100e4130((undefined4 *)&DAT_1068e904,"DT_BaseAnimating","m_vecForce");
    FUN_100e4130((undefined4 *)&DAT_1068e958,"DT_BaseAnimating","m_nSkin");
    FUN_100e4130((undefined4 *)&DAT_1068e9ac,"DT_BaseAnimating","m_flModelWidthScale");
    FUN_100e4130((undefined4 *)&DAT_1068ea00,"DT_BaseAnimating","m_flEncodedController");
    FUN_100e4130((undefined4 *)&DAT_1068ea54,"DT_BaseAnimating","m_nMuzzleFlashParity");
    FUN_100e4130((undefined4 *)&DAT_1068eaa8,"DT_BaseAnimating","m_hLightingOrigin");
    FUN_100e4130((undefined4 *)&DAT_1068eafc,"DT_BaseAnimating","m_hLightingOriginRelative");
    FUN_100e4130((undefined4 *)&DAT_1068eb50,"DT_BaseAnimating","m_fadeMinDist");
    FUN_100e4130((undefined4 *)&DAT_1068eba4,"DT_BaseAnimating","m_fadeMaxDist");
    FUN_100e4130((undefined4 *)&DAT_1068ebf8,"DT_BaseAnimating","m_flFadeScale");
    FUN_100e4130((undefined4 *)&DAT_1068f7ec,"DT_CollisionProperty","m_vecSpecifiedSurroundingMins")
    FUN_100e4130((undefined4 *)&DAT_1068f840,"DT_CollisionProperty","m_vecSpecifiedSurroundingMaxs")
    FUN_100e4130((undefined4 *)&DAT_1068f894,"DT_BaseEntity","m_iParentAttachment");
    FUN_100e4130((undefined4 *)&DAT_1068f8e8,"DT_BaseFlex","m_flexWeight");
    FUN_100e4130((undefined4 *)&DAT_1068f93c,"DT_BaseFlex","m_blinktoggle");
    FUN_100e4130((undefined4 *)&DAT_1068f990,"DT_BaseFlex","m_viewtarget");
    FUN_100e4130((undefined4 *)&DAT_1068f9e4,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_1068fa38,"DT_BaseAnimating","m_flPlaybackRate");
    FUN_100e4130((undefined4 *)&DAT_1068fa8c,"DT_BaseAnimating","m_nForceBone");
    FUN_100e4130((undefined4 *)&DAT_1068fae0,"DT_BaseAnimating","m_vecForce");
    FUN_100e4130((undefined4 *)&DAT_1068fb34,"DT_BaseAnimating","m_flModelWidthScale");
    FUN_100e4130((undefined4 *)&DAT_1068fb88,"DT_BaseAnimating","m_flEncodedController");
    FUN_100e4130((undefined4 *)&DAT_1068fbdc,"DT_BaseAnimating","m_nMuzzleFlashParity");
    FUN_100e4130((undefined4 *)&DAT_1068fc30,"DT_BaseAnimating","m_fadeMinDist");
    FUN_100e4130((undefined4 *)&DAT_1068fc84,"DT_BaseAnimating","m_fadeMaxDist");
    FUN_100e4130((undefined4 *)&DAT_1068fcd8,"DT_BaseAnimating","m_flFadeScale");
    FUN_100e4130((undefined4 *)&DAT_1068fd2c,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_1068fd80,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_106902f8,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_1069034c,"DT_BaseAnimating","m_flPlaybackRate");
    FUN_100e4130((undefined4 *)&DAT_106903a0,"DT_BaseAnimating","m_nSequence");
    FUN_100e4130((undefined4 *)&DAT_106903f4,"DT_BaseAnimating","m_nNewSequenceParity");
    FUN_100e4130((undefined4 *)&DAT_10690448,"DT_BaseAnimating","m_nResetEventsParity");
    FUN_100e4130((undefined4 *)&DAT_1069049c,"DT_BaseAnimatingOverlay","overlay_vars");
    FUN_100e4130((undefined4 *)&DAT_10690544,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_10690598,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_106907e4,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_10690838,"DT_BaseCombatCharacter","m_hMyWeapons");
    FUN_100e4130((undefined4 *)&DAT_10690f38,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_10690f8c,"DT_BaseAnimating","m_flPlaybackRate");
    FUN_100e4130((undefined4 *)&DAT_10690fe0,"DT_BaseAnimating","m_nSequence");
    FUN_100e4130((undefined4 *)&DAT_10691034,"DT_BaseAnimating","m_nNewSequenceParity");
    FUN_100e4130((undefined4 *)&DAT_10691088,"DT_BaseAnimating","m_nResetEventsParity");
    FUN_100e4130((undefined4 *)&DAT_106910dc,"DT_BaseAnimatingOverlay","overlay_vars");
    FUN_100e4130((undefined4 *)&DAT_10691130,"DT_BaseCombatCharacter","m_hMyWeapons");
    FUN_100e4130((undefined4 *)&DAT_10691814,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_10691868,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_106918bc,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_10693aa8,"DT_BaseEntity","m_nModelIndex");
    FUN_100e4130((undefined4 *)&DAT_10696c80,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_10696cd4,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_10696ecc,"DT_CollisionProperty","m_vecSpecifiedSurroundingMins")
    FUN_100e4130((undefined4 *)&DAT_10696f20,"DT_CollisionProperty","m_vecSpecifiedSurroundingMaxs")
    FUN_100e4130((undefined4 *)&DAT_10696f74,"DT_BaseEntity","m_hOwnerEntity");
    FUN_100e4130((undefined4 *)&DAT_10696fc8,"DT_BaseEntity","m_hEffectEntity");
    FUN_100e4130((undefined4 *)&DAT_1069701c,"DT_BaseEntity","m_iParentAttachment");
    FUN_100e4130((undefined4 *)&DAT_10697070,"DT_BaseFlex","m_flexWeight");
    FUN_100e4130((undefined4 *)&DAT_106970c4,"DT_BaseFlex","m_blinktoggle");
    FUN_100e4130((undefined4 *)&DAT_10697118,"DT_BaseFlex","m_viewtarget");
    FUN_100e4130((undefined4 *)&DAT_1069716c,"DT_BaseAnimating","m_nForceBone");
    FUN_100e4130((undefined4 *)&DAT_106971c0,"DT_BaseAnimating","m_vecForce");
    FUN_100e4130((undefined4 *)&DAT_10697214,"DT_BaseAnimating","m_flModelWidthScale");
    FUN_100e4130((undefined4 *)&DAT_10697268,"DT_BaseAnimating","m_flEncodedController");
    FUN_100e4130((undefined4 *)&DAT_106972bc,"DT_BaseAnimating","m_nMuzzleFlashParity");
    FUN_100e4130((undefined4 *)&DAT_10697310,"DT_BaseAnimating","m_hLightingOrigin");
    FUN_100e4130((undefined4 *)&DAT_10697364,"DT_BaseAnimating","m_hLightingOriginRelative");
    FUN_100e4130((undefined4 *)&DAT_106973b8,"DT_BaseAnimating","m_fadeMinDist");
    FUN_100e4130((undefined4 *)&DAT_1069740c,"DT_BaseAnimating","m_fadeMaxDist");
    FUN_100e4130((undefined4 *)&DAT_10697460,"DT_BaseAnimating","m_flFadeScale");
    FUN_100e4130((undefined4 *)&DAT_10697dd8,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_10697e2c,"DT_BaseAnimating","m_flPlaybackRate");
    FUN_100e4130((undefined4 *)&DAT_10697e80,"DT_BaseAnimating","m_nSequence");
    FUN_100e4130((undefined4 *)&DAT_10697ed4,"DT_BaseAnimating","m_nNewSequenceParity");
    FUN_100e4130((undefined4 *)&DAT_10697f28,"DT_BaseAnimating","m_nResetEventsParity");
    FUN_100e4130((undefined4 *)&DAT_10697f7c,"DT_BaseAnimatingOverlay","overlay_vars");
    FUN_100e4130((undefined4 *)&DAT_10697fd0,"DT_ServerAnimationData","m_flCycle");
    FUN_100e4130((undefined4 *)&DAT_10698024,"DT_AnimTimeMustBeFirst","m_flAnimTime");
    FUN_100e4130((undefined4 *)&DAT_10698078,"DT_BaseEntity","m_iName");
    FUN_100e4130((undefined4 *)&DAT_106983d8,"DT_GlowProperty","m_iGlowType");
    FUN_100e4130((undefined4 *)&DAT_1069842c,"DT_GlowProperty","m_nGlowRange");
    FUN_100e4130((undefined4 *)&DAT_10698480,"DT_GlowProperty","m_nGlowRangeInverse");
    FUN_100e4130((undefined4 *)&DAT_106984d4,"DT_GlowProperty","m_glowColorOverride");
    FUN_100e4130((undefined4 *)&DAT_10698528,"DT_GlowProperty","m_iGlowTeam");
    FUN_100e4130((undefined4 *)&DAT_1069857c,"DT_GlowProperty","m_bFlashing");
    FUN_100e4130((undefined4 *)&DAT_106985d0,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_10698624,"DT_ServerAnimationData","m_flCycle");
    FUN_100e4130((undefined4 *)&DAT_10698678,"DT_BaseCombatCharacter","m_hMyWeapons");
    FUN_100e4130((undefined4 *)&DAT_10698774,"DT_BaseEntity","m_vecOrigin");
    FUN_100e4130((undefined4 *)&DAT_106987c8,"DT_BaseEntity","m_angRotation");
    FUN_100e4130((undefined4 *)&DAT_10698dcc,"DT_BaseAnimating","m_flPoseParameter");
    FUN_100e4130((undefined4 *)&DAT_10698e20,"DT_BaseAnimating","m_nNewSequenceParity");
    FUN_100e4130((undefined4 *)&DAT_10698e74,"DT_BaseAnimating","m_nResetEventsParity");
    FUN_100e4130((undefined4 *)&DAT_10698ec8,"DT_BaseEntity","m_flSimulationTime");
    FUN_100e4130((undefined4 *)&DAT_10699800,"DT_WeaponTIBase","m_bCanMidReload");
    FUN_100e4130((undefined4 *)&DAT_10699854,"DT_WeaponTIBase","m_iSecondaryPressedIncrement");
    FUN_100e4130((undefined4 *)&DAT_106998a8,"DT_WeaponTIBase","m_flDecreaseShotsFired");
    FUN_100e4130((undefined4 *)&DAT_106998fc,"DT_WeaponTIBase","m_flDecreaseShotsFiredStart");
    FUN_100e4160((undefined4 *)&DAT_105fbab8,"m_flTimePingEffect",0xd40,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_10603dac,"m_flCycle",0x410,4,1.401298e-44,0x40008,0.0,1.0,
    FUN_100e4160((undefined4 *)&DAT_10604054,"m_flModelScale",0x3e0,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10604150,"m_flPlaybackRate",0x3e4,4,1.121039e-44,0x10,-4.0,12.0,
    FUN_100e4160((undefined4 *)&DAT_10604498,"m_flFrozen",0x4b0,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10604780,"m_flCycle",0xc,4,1.401298e-44,8,0.0,1.0,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106047d4,"m_flPrevCycle",0x10,4,1.401298e-44,8,0.0,1.0,
    FUN_100e4160((undefined4 *)&DAT_10604828,"m_flWeight",0x14,4,1.121039e-44,0,0.0,1.0,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1060695c,"m_flElasticity",0x1fc,4,0.0,2,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106069b0,"m_flShadowCastDistance",0x360,4,1.681558e-44,1,0.0,
    FUN_100e4160((undefined4 *)&DAT_10606ef0,"m_fadeMinDist",0x354,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10606f44,"m_fadeMaxDist",0x358,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10606f98,"m_flFadeScale",0x35c,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10607ab0,"m_flDamage",0x7cc,4,1.401298e-44,8,0.0,256.0,
    FUN_100e4160((undefined4 *)&DAT_10607b04,"m_DmgRadius",0x7c0,4,1.401298e-44,8,0.0,1024.0,
    FUN_100e4160((undefined4 *)&DAT_10608474,"m_flFriction",0x1f8,4,1.121039e-44,8,0.0,4.0,
    FUN_100e4160((undefined4 *)&DAT_10608618,"m_vecVelocity[0]",0x300228,4,4.484155e-44,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_1060866c,"m_vecVelocity[1]",0x30022c,4,4.484155e-44,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_106086c0,"m_vecVelocity[2]",0x300230,4,4.484155e-44,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_10608810,"m_flConstraintRadius",0xf60,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10608864,"m_flConstraintWidth",0xf64,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106088b8,"m_flConstraintSpeedFactor",0xf68,4,0.0,4,0.0,-121121.1
    FUN_100e4160((undefined4 *)&DAT_10608960,"m_flDeathTime",0xbcc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10608a08,"m_flLaggedMovementValue",0xff0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10608ea4,"m_flMaxspeed",0xeb8,4,1.681558e-44,8,0.0,2048.0,
    FUN_100e4160((undefined4 *)&DAT_1060909c,"m_flFOVTime",0xbe4,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10609ad0,"m_flPlaybackRate",0x3e4,4,1.121039e-44,0x10,-4.0,12.0,
    FUN_100e4160((undefined4 *)&DAT_1060a0bc,"m_fHaloScale",0x430,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1060a110,"m_fWidth",0x424,4,1.401298e-44,0x10,0.0,102.3,
    FUN_100e4160((undefined4 *)&DAT_1060a164,"m_fEndWidth",0x428,4,1.401298e-44,0x10,0.0,102.3,
    FUN_100e4160((undefined4 *)&DAT_1060a1b8,"m_fFadeLength",0x42c,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060a20c,"m_fAmplitude",0x434,4,1.121039e-44,8,0.0,64.0,
    FUN_100e4160((undefined4 *)&DAT_1060a260,"m_fStartFrame",0x438,4,1.121039e-44,8,0.0,256.0,
    FUN_100e4160((undefined4 *)&DAT_1060a2b4,"m_fSpeed",0x43c,4,1.121039e-44,4,0.0,100.0,
    FUN_100e4160((undefined4 *)&DAT_1060a3b0,"m_flFrameRate",0x3b4,4,1.401298e-44,0x10,-25.0,25.0,
    FUN_100e4160((undefined4 *)&DAT_1060a404,"m_flHDRColorScale",0x3b8,4,0.0,4,0.0,100.0,
    FUN_100e4160((undefined4 *)&DAT_1060a458,"m_flFrame",0x440,4,2.802597e-44,0x40008,0.0,256.0,
    FUN_100e4160((undefined4 *)&DAT_1060a924,"m_flSpotlightMaxLength",0x3bc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060a978,"m_flSpotlightGoalWidth",0x3c0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060a9cc,"m_flHDRColorScale",0x3c4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060aa20,"m_flRotationSpeed",0x3d0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060ac68,"m_flConveyorSpeed",0x3c4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060c448,"m_MinFalloff",0x3d8,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060c49c,"m_MaxFalloff",0x3dc,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060c4f0,"m_flCurWeight",0x3e0,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060c544,"m_flMaxWeight",0x3cc,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060c598,"m_flFadeInDuration",0x3b4,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_1060c5ec,"m_flFadeOutDuration",0x3b8,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_1060cbd4,"m_Weight",0x4e4,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060d0a0,"m_flWaveHeight",0x484,4,1.121039e-44,0x10,0.0,8.0,
    FUN_100e4160((undefined4 *)&DAT_1060d2d8,"m_Radius",0x3b8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1060d380,"m_InnerAngle",0x3c0,4,1.121039e-44,0,0.0,360.0,
    FUN_100e4160((undefined4 *)&DAT_1060d3d4,"m_OuterAngle",0x3c4,4,1.121039e-44,0,0.0,360.0,
    FUN_100e4160((undefined4 *)&DAT_1060d428,"m_SpotRadius",0x3c8,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1060d4f4,"m_vOrigin.x",0,4,-NAN,0x4000,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060d548,"m_vOrigin.y",4,4,-NAN,0x4000,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060d59c,"m_vOrigin.z",8,4,-NAN,0x4000,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060d5f0,"m_vStart.x",0xc,4,-NAN,0x4000,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060d644,"m_vStart.y",0x10,4,-NAN,0x4000,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060d698,"m_vStart.z",0x14,4,-NAN,0x4000,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060d7e8,"m_flMagnitude",0x3c,4,1.681558e-44,8,0.0,1023.0,
    FUN_100e4160((undefined4 *)&DAT_1060d83c,"m_flScale",0x38,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1060db84,"m_flRadius",0x40,4,1.401298e-44,8,0.0,1023.0,
    FUN_100e4160((undefined4 *)&DAT_1060e3cc,"m_flMinGustDelay",0x20,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060e420,"m_flMaxGustDelay",0x24,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060e570,"m_flInitialWindSpeed",0x70,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060e5c4,"m_flStartTime",4,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1060e618,"m_flGustDuration",0x28,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060eb30,"m_scrollRate",0x3cc,4,1.121039e-44,0,-4.0,4.0,
    FUN_100e4160((undefined4 *)&DAT_1060eb84,"m_flWidth",0x3d0,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1060ed7c,"m_flFadeInStart",0x3b8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060edd0,"m_flFadeInLength",0x3bc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060ee24,"m_flFadeOutModelStart",0x3c0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060ee78,"m_flFadeOutModelLength",0x3c4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060eecc,"m_flFadeOutStart",0x3c8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060ef20,"m_flFadeOutLength",0x3cc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1060f3e0,"m_flFrozen",0x3c0,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1063f7b4,"m_flLifetime",8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1063f808,"m_flStartSize",0xc,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1063f85c,"m_flEndSize",0x10,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1063fd4c,"m_flMaxShadowDist",0x3d8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1063fecc,"m_flFadeStartDist",0x3b4,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_1063ff20,"m_flFadeEndDist",0x3b8,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106400cc,"m_flNearBlurDepth",0x3c4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10640120,"m_flNearFocusDepth",0x3c8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10640174,"m_flFarFocusDepth",0x3cc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106401c8,"m_flFarBlurDepth",0x3d0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1064021c,"m_flNearBlurRadius",0x3d4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10640270,"m_flFarBlurRadius",0x3d8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106405a4,"m_flLightFOV",0x3bc,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1064079c,"m_flBrightnessScale",0x3c8,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_10640844,"m_flColorTransitionTime",0x3d0,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_10640898,"m_flAmbient",0x3d4,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10640994,"m_flNearZ",0x4e0,4,2.242078e-44,8,0.0,500.0,
    FUN_100e4160((undefined4 *)&DAT_106409e8,"m_flFarZ",0x4e4,4,2.522337e-44,8,0.0,2500.0,
    FUN_100e4160((undefined4 *)&DAT_10640a90,"m_flProjectionSize",0x4ec,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_10640ae4,"m_flRotation",0x4f0,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10640b8c,"m_flRange",0x4f4,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10640db8,"m_flOverlayTimes",0x3dc,4,1.541428e-44,8,-1.0,63.0,
    FUN_100e4160((undefined4 *)&DAT_10640e60,"m_flStartTime",0x404,4,4.484155e-44,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10641028,"m_flDuration",0x3b4,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_10641304,"m_flCustomAutoExposureMin",0x3b8,4,0.0,4,0.0,-121121.1
    FUN_100e4160((undefined4 *)&DAT_10641358,"m_flCustomAutoExposureMax",0x3bc,4,0.0,4,0.0,-121121.1
    FUN_100e4160((undefined4 *)&DAT_106413ac,"m_flCustomBloomScale",0x3c0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10641400,"m_flCustomBloomScaleMinimum",0x3c4,4,0.0,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_10641454,"m_flBloomExponent",0x3c8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106414a8,"m_flBloomSaturation",0x3cc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106414fc,"m_flTonemapPercentTarget",0x3d0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10641550,"m_flTonemapPercentBrightPixels",0x3d4,4,0.0,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_106415a4,"m_flTonemapMinAvgLum",0x3d8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106415f8,"m_flTonemapRate",0x3dc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106425d0,"m_flStartScale",0x3b4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10642624,"m_flScale",0x3b8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10642678,"m_flScaleTime",0x3bc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10642948,"m_angle",0x504,4,9.809089e-45,0,0.0,360.0,FUN_10106510
    FUN_100e4160((undefined4 *)&DAT_10642b40,"m_waterLevel",0x530,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10642e50,"m_fog.start",0x3d4,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10642ea4,"m_fog.end",0x3d8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10642ef8,"m_fog.maxdensity",0x3e0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10642f4c,"m_fog.farz",0x3dc,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10643048,"m_fog.startLerpTo",0x3e4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1064309c,"m_fog.endLerpTo",1000,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106430f0,"m_fog.maxdensityLerpTo",0x3ec,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10643144,"m_fog.lerptime",0x3f0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10643198,"m_fog.duration",0x3f4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106431ec,"m_fog.HDRColorScale",0x400,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10643240,"m_fog.ZoomFogScale",0x3fc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10643708,"m_flFadeDist",0x3c4,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1064375c,"m_flFadeStartDist",0x3c0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106437b0,"m_flTranslucencyLimit",0x3c8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10643d08,"m_flPanelWidth",0x494,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10643d5c,"m_flPanelHeight",0x498,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10644138,"m_flSizeMin",0x3bc,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1064418c,"m_flSizeMax",0x3c0,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10644384,"m_FallSpeed",0x3d4,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106444f8,"m_flSize",0x18,4,-NAN,2,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1064454c,"m_flSpeed",0x1c,4,-NAN,2,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10644838,"m_acceleration",0x460,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1064488c,"m_currentSpeed",0x45c,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106448e0,"m_movementStartTime",0x464,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10644934,"m_movementStartSpeed",0x468,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10644988,"m_movementStartZ",0x46c,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106449dc,"m_destinationFloorPosition",0x470,4,0.0,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_10644a30,"m_maxSpeed",0x458,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10645684,"m_ParticleDrawWidth",0x4c0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106456d8,"m_ParticleSpacingDistance",0x4c4,4,0.0,4,0.0,-121121.1
    FUN_100e4160((undefined4 *)&DAT_1064572c,"m_DensityRampSpeed",0x4c8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10645780,"m_RotationSpeed",0x4cc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106457d4,"m_MovementSpeed",0x4d0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10645828,"m_Density",0x4d4,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1064587c,"m_maxDrawDistance",0x4d8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1064c0b4,"m_flGlowProxySize",0x3c8,4,8.407791e-45,0x10,0.0,64.0,
    FUN_100e4160((undefined4 *)&DAT_1064c108,"HDRColorScale",0x3cc,4,0.0,4,0.0,100.0,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1064cac8,"m_flFramerate",0x6c0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1064cb70,"m_flFloatLerpStartValue",0x6c8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1064cbc4,"m_flFloatLerpEndValue",0x6cc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1064cc18,"m_flFloatLerpTransitionTime",0x6d0,4,0.0,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_1064e3e0,"m_flStartTime",0x4cc,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1064fa14,"m_flBlendWeight",0xbc8,4,1.121039e-44,8,0.0,1.0,
    FUN_100e4160((undefined4 *)&DAT_10651700,"m_flFOVRate",0x40,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10651754,"m_flFallVelocity",100,4,2.382207e-44,0x40000,-4096.0,
    FUN_100e4160((undefined4 *)&DAT_10651850,"m_flLastShotROF",0x88,4,1.121039e-44,0x40000,0.0,3.0,
    FUN_100e4160((undefined4 *)&DAT_106518f8,"m_flStepSize",0x90,4,2.242078e-44,0x10,0.0,128.0,
    FUN_100e4160((undefined4 *)&DAT_10651bec,"m_skybox3d.fog.start",0xd0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10651c40,"m_skybox3d.fog.end",0xd4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10651c94,"m_skybox3d.fog.maxdensity",0xdc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10651ce8,"m_skybox3d.fog.HDRColorScale",0xfc,4,0.0,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_10652280,"m_FOV",0x3bc,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80);
    FUN_100e4160((undefined4 *)&DAT_106522d4,"m_Resolution",0x3c0,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_106523d0,"m_flFogStart",0x3cc,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_10652424,"m_flFogEnd",0x3d0,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10652478,"m_flFogMaxDensity",0x3d4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10653d6c,"m_fMass",0x580,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80
    FUN_100e4160((undefined4 *)&DAT_10654088,"m_fMass",0x7ac,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80
    FUN_100e4160((undefined4 *)&DAT_10670ef8,"m_TextureScale",0x3c8,4,1.401298e-44,0,0.1,10.0,
    FUN_100e4160((undefined4 *)&DAT_10670f4c,"m_Width",0x3c4,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80
    FUN_100e4160((undefined4 *)&DAT_10670fa0,"m_flScrollSpeed",0x3f0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1067238c,"m_flForceClientTime",0x40c,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_106729c4,"m_flShadowMaxDist",0x3c4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10672ea8,"m_fMinSlideTime",0x4e0,4,1.541428e-44,0,0.0,20.0,
    FUN_100e4160((undefined4 *)&DAT_10672efc,"m_fMaxSlideTime",0x4e4,4,1.541428e-44,0,0.0,20.0,
    FUN_100e4160((undefined4 *)&DAT_10673e58,"m_MinFalloff",0x3d4,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10673eac,"m_MaxFalloff",0x3d8,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10673f00,"m_flCurWeight",0x3dc,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10674088,"m_flLightScale",0x3b4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106740dc,"m_Radius",0x3b8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10674320,"m_flScaleTime",0x3d4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10674374,"m_flSpriteScale",0x3d0,4,1.121039e-44,0x10,0.0,64.0,
    FUN_100e4160((undefined4 *)&DAT_106743c8,"m_flGlowProxySize",0x3dc,4,8.407791e-45,0x10,0.0,64.0,
    FUN_100e4160((undefined4 *)&DAT_1067441c,"m_flHDRColorScale",0x3e0,4,0.0,4,0.0,100.0,
    FUN_100e4160((undefined4 *)&DAT_10674470,"m_flSpriteFramerate",0x3bc,4,1.121039e-44,0x10,0.0,
    FUN_100e4160((undefined4 *)&DAT_106744c4,"m_flFrame",0x3c0,4,2.802597e-44,8,0.0,256.0,
    FUN_100e4160((undefined4 *)&DAT_10674518,"m_flBrightnessTime",0x3cc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10674c98,"m_flMoveTargetTime",0x424,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_10675068,"HDRColorScale",0x3ec,4,0.0,4,0.0,100.0,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106750bc,"m_DiscSize",0x3f4,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10675110,"m_SunIntensity",0x3f8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10675164,"m_DiscFocus",0x3fc,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106751b8,"m_CoronaSize",0x400,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1067520c,"m_CoronaFocus",0x404,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1067d534,"m_timestamp",4,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80
    FUN_100e4160((undefined4 *)&DAT_1067d5e4,"m_duration",8,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80)
    FUN_100e4160((undefined4 *)&DAT_1067d638,"m_timestamp",0xc,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1067d800,"m_flInterval",0x20c,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1067d854,"m_flFinalValue",0x210,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1067dac8,"m_flWidth",0x3bc,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1067db1c,"m_flHeight",0x3c0,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1067e55c,"m_flCheapWaterStartDistance",0x3b4,4,0.0,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_1067e5b0,"m_flCheapWaterEndDistance",0x3b8,4,0.0,4,0.0,-121121.1
    FUN_100e4160((undefined4 *)&DAT_1067f1f8,"m_flWaveHeight",0x3bc,4,1.121039e-44,0x10,0.0,8.0,
    FUN_100e4160((undefined4 *)&DAT_1067f348,"m_flMaxOccludeeArea",0x3d8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1067f39c,"m_flMinOccluderArea",0x3dc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1067f3f0,"m_flMaxPropScreenSpaceWidth",0x3e4,4,0.0,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_1067f444,"m_flMinPropScreenSpaceWidth",0x3e0,4,0.0,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_1067f6e4,"m_atmosphericdensity",0x410,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1067f738,"m_kmie",0x414,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80)
    FUN_100e4160((undefined4 *)&DAT_1067f78c,"m_zenith",0x418,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1067f7e0,"m_HorizonCorrection",0x404,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10683c2c,"m_flScale",0x3b8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_10683e24,"m_flScale",0x3b8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106842c0,"m_flSpreadInnacuracy",0x34,4,1.401298e-44,0,0.0,1.0,
    FUN_100e4160((undefined4 *)&DAT_10684314,"m_flSpread",0x38,4,1.401298e-44,0,0.0,2.0,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_10684410,"m_fRange",0x44,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106851f4,"m_vecOrigin[2]",0x50030c,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1068529c,"m_flCurrentLeanValue",0x189c,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106852f0,"m_flCurrentDuckFraction",0x18a0,4,-NAN,4,0.0,-121121.1
    FUN_100e4160((undefined4 *)&DAT_10685398,"m_flLastPunchPitch",0x1838,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_10685cd0,"m_vecOrigin[2]",0x50030c,4,7.006492e-45,0x10000,0.0,
    FUN_100e4160((undefined4 *)&DAT_10685d24,"m_vecViewOffset[0]",0x300320,4,1.401298e-44,0x40000,
    FUN_100e4160((undefined4 *)&DAT_10685d78,"m_vecViewOffset[1]",0x300324,4,1.401298e-44,0x40000,
    FUN_100e4160((undefined4 *)&DAT_10685dcc,"m_vecViewOffset[2]",0x300328,4,1.401298e-44,0x40000,
    FUN_100e4160((undefined4 *)&DAT_10685e20,"m_flCurrentLeanValue",0x189c,4,1.401298e-44,0x40000,
    FUN_100e4160((undefined4 *)&DAT_10685e74,"m_flCurrentDuckFraction",0x18a0,4,1.401298e-44,0x40000
    FUN_100e4160((undefined4 *)&DAT_106868fc,"m_flGoalSpeedRatio",0x1818,4,1.121039e-44,4,0.0,1.0,
    FUN_100e4160((undefined4 *)&DAT_10686e90,"m_flFreezeMovementDuration",(int)&DAT_000018a8,4,
    FUN_100e4160((undefined4 *)&DAT_10686ee4,"m_flFreezeMovementFactor",(int)&DAT_000018ac,4,
    FUN_100e4160((undefined4 *)&DAT_10687678,"m_flSequenceCycle",0x528,4,1.121039e-44,8,0.0,1.0,
    FUN_100e4160((undefined4 *)&DAT_10688acc,"m_flExplodeTime",0x544,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1068c9a0,"m_flDurationLocked",0x4f0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1068c9f4,"m_flInitialLockTime",0x4f4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1068e31c,"m_flVehicleMass",0x500,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1068fe7c,"m_vecOrigin[2]",0x50030c,4,7.006492e-45,0x10000,0.0,
    FUN_100e4160((undefined4 *)&DAT_106912d4,"m_flMaxSpeed",0x7d8,4,1.261169e-44,4,0.0,400.0,
    FUN_100e4160((undefined4 *)&DAT_10691ecc,"m_flSpread",0x30,4,1.401298e-44,0,0.0,1.0,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_10693030,"m_flStamina",0x18,4,0.0,0x40000,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10693084,"m_flLeanTime",0x1c,4,1.681558e-44,8,0.0,2048.0,
    FUN_100e4160((undefined4 *)&DAT_10694824,"m_fTimeOfDay",0x5c,4,4.484155e-44,0x40000,0.0,
    FUN_100e4160((undefined4 *)&DAT_106965a0,"m_vecNetworkedPhysicsVelocity[0]",0x300658,4,
    FUN_100e4160((undefined4 *)&DAT_106965f4,"m_vecNetworkedPhysicsVelocity[1]",0x30065c,4,
    FUN_100e4160((undefined4 *)&DAT_10696648,"m_vecNetworkedPhysicsVelocity[2]",0x300660,4,
    FUN_100e4160((undefined4 *)&DAT_10696a34,"m_flCollisionTorqueYaw",0xe00,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10696e78,"m_vecOrigin[2]",0x50030c,4,7.006492e-45,0x10000,0.0,
    FUN_100e4160((undefined4 *)&DAT_10697cdc,"m_flRefuelingTruckBombTimer",0x15dc,4,1.401298e-44,
    FUN_100e4160((undefined4 *)&DAT_10699408,"m_flNextTraceAttackTime",0x628,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_1069945c,"m_flRestrictViewTime",0x68c,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&DAT_106994b0,"m_flStunnedTime",0x69c,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_10699504,"m_flComboEnergy",0x6a0,4,4.484155e-44,0,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069c444,"m_FadeStartTime",0x3bc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069c498,"m_FadeEndTime",0x3c0,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069c690,"m_flScale",0x3b8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069c6e4,"m_flScaleTime",0x3bc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069ca78,"m_SpawnRate",0x3d0,4,1.121039e-44,0,1.0,1024.0,
    FUN_100e4160((undefined4 *)&DAT_1069cb74,"m_ParticleLifetime",0x3d4,4,2.242078e-44,0x10,0.1,
    FUN_100e4160((undefined4 *)&DAT_1069cbc8,"m_StopEmitTime",0x3d8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069cc1c,"m_MinSpeed",0x3dc,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069cc70,"m_MaxSpeed",0x3e0,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069ccc4,"m_MinDirectedSpeed",0x3f0,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069cd18,"m_MaxDirectedSpeed",0x3f4,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069cd6c,"m_StartSize",0x3e4,4,-NAN,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1069cdc0,"m_EndSize",1000,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069ce14,"m_SpawnRadius",0x3ec,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069cf10,"m_Opacity",0x3cc,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069d030,"m_SpawnRate",0x3d0,4,1.121039e-44,0,1.0,1024.0,
    FUN_100e4160((undefined4 *)&DAT_1069d12c,"m_ParticleLifetime",0x3d4,4,2.242078e-44,0x10,0.1,
    FUN_100e4160((undefined4 *)&DAT_1069d180,"m_StopEmitTime",0x3d8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069d1d4,"m_MinSpeed",0x3dc,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069d228,"m_MaxSpeed",0x3e0,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069d27c,"m_StartSize",0x3e4,4,-NAN,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1069d2d0,"m_EndSize",1000,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069d324,"m_SpawnRadius",0x3ec,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069d420,"m_Opacity",0x3cc,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069d4c8,"m_flFlareScale",0x3fc,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069d5e8,"m_flSpawnRate",0x3c0,4,1.121039e-44,0,1.0,1024.0,
    FUN_100e4160((undefined4 *)&DAT_1069d690,"m_flParticleLifetime",0x3c4,4,2.242078e-44,0x10,0.1,
    FUN_100e4160((undefined4 *)&DAT_1069d6e4,"m_flStartSize",0x3c8,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069d738,"m_flEndSize",0x3cc,4,-NAN,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1069d78c,"m_flSpawnRadius",0x3d0,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069d900,"m_flSpawnRate",0x3b8,4,1.121039e-44,0,1.0,1024.0,
    FUN_100e4160((undefined4 *)&DAT_1069d954,"m_flParticleLifetime",0x3bc,4,2.242078e-44,0x10,0.1,
    FUN_100e4160((undefined4 *)&DAT_1069d9a8,"m_flStartSize",0x3c0,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069d9fc,"m_flEndSize",0x3c4,4,-NAN,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1069da50,"m_flSpawnRadius",0x3c8,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069dc8c,"m_flLifetime",0x3b8,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1069dd90,"m_SpawnRate",0x3c4,4,1.121039e-44,0,1.0,1024.0,
    FUN_100e4160((undefined4 *)&DAT_1069de38,"m_ParticleLifetime",0x3c8,4,2.242078e-44,0x10,0.1,
    FUN_100e4160((undefined4 *)&DAT_1069de8c,"m_StopEmitTime",0x3cc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069dee0,"m_MinSpeed",0x3d0,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069df34,"m_MaxSpeed",0x3d4,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069df88,"m_MinDirectedSpeed",0x3e4,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069dfdc,"m_MaxDirectedSpeed",1000,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069e030,"m_StartSize",0x3d8,4,-NAN,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1069e084,"m_EndSize",0x3dc,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069e0d8,"m_SpawnRadius",0x3e0,4,-NAN,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069e180,"m_Opacity",0x3c0,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069e2d8,"m_SpreadSpeed",0x3b4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069e32c,"m_Speed",0x3b8,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80
    FUN_100e4160((undefined4 *)&DAT_1069e380,"m_StartSize",0x3bc,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069e3d4,"m_EndSize",0x3c0,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069e428,"m_Rate",0x3c4,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80)
    FUN_100e4160((undefined4 *)&DAT_1069e47c,"m_JetLength",0x3c8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069e524,"m_flBaseSpread",0x3d4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069e578,"m_flRollSpeed",0x3cc,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069e674,"m_DirLight.m_flIntensity",0x414,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069e770,"m_AmbientLight.m_flIntensity",0x3f4,4,0.0,4,0.0,
    FUN_100e4160((undefined4 *)&DAT_1069e818,"m_flTwist",0x418,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069ea00,"m_flLifeTime",0x404,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1069ea54,"m_flStartWidth",0x408,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069eaa8,"m_flEndWidth",0x40c,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1069eafc,"m_flStartWidthVariance",0x410,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069eb50,"m_flTextureRes",0x414,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069eba4,"m_flMinFadeLength",0x418,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069ec4c,"m_flSkyboxScale",0x428,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069ed80,"m_SpreadSpeed",0x3b4,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069edd4,"m_Speed",0x3b8,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80
    FUN_100e4160((undefined4 *)&DAT_1069ee28,"m_StartSize",0x3bc,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069ee7c,"m_EndSize",0x3c0,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069eed0,"m_Rate",0x3c4,4,0.0,4,0.0,-121121.1,FUN_100e4650,0x80)
    FUN_100e4160((undefined4 *)&DAT_1069ef24,"m_JetLength",0x3c8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069f0c8,"m_flRollSpeed",0x3d8,4,0.0,4,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_1069f55c,"m_fLife",0x1c,4,1.121039e-44,0,0.0,25.6,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_1069f5b0,"m_fWidth",0x20,4,1.401298e-44,0,0.0,128.0,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_1069f604,"m_fEndWidth",0x24,4,1.401298e-44,0,0.0,128.0,
    FUN_100e4160((undefined4 *)&DAT_1069f6ac,"m_fAmplitude",0x2c,4,1.121039e-44,0,0.0,64.0,
    FUN_100e4160((undefined4 *)&DAT_106a0614,"m_flStartRadius",0x54,4,2.242078e-44,0x10,0.0,4096.0,
    FUN_100e4160((undefined4 *)&DAT_106a0668,"m_flEndRadius",0x58,4,2.242078e-44,0x10,0.0,4096.0,
    FUN_100e4160((undefined4 *)&DAT_106a13fc,"m_fTime",0x48,4,1.401298e-44,0,0.0,102.4,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a18a4,"m_fHeight",0x24,4,2.382207e-44,0,-16384.0,16384.0,
    FUN_100e4160((undefined4 *)&DAT_106a194c,"m_fSpeed",0x30,4,2.382207e-44,0,-16384.0,16384.0,
    FUN_100e4160((undefined4 *)&DAT_106a1bac,"m_flWaterZ",0x24,4,2.382207e-44,0,-16384.0,16384.0,
    FUN_100e4160((undefined4 *)&DAT_106a1c54,"m_fSpeed",0x30,4,2.382207e-44,0,-16384.0,16384.0,
    FUN_100e4160((undefined4 *)&DAT_106a24b4,"m_fRadius",0x18,4,1.121039e-44,0x10,0.0,2560.0,
    FUN_100e4160((undefined4 *)&DAT_106a2508,"m_fTime",0x2c,4,1.121039e-44,8,0.0,25.6,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a255c,"m_fDecay",0x30,4,1.121039e-44,8,0.0,2560.0,
    FUN_100e4160((undefined4 *)&DAT_106a2a7c,"m_fScale",0x1c,4,1.261169e-44,0,0.0,51.2,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a35f0,"m_flWidth",0x3c,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a3644,"m_flHeight",0x40,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a3698,"m_flShardSize",0x44,4,0.0,4,0.0,-121121.1,FUN_100e4650
    FUN_100e4160((undefined4 *)&DAT_106a3ae0,"m_fScale",0x1c,4,1.121039e-44,8,0.0,25.6,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a3b34,"m_fLife",0x20,4,1.121039e-44,8,0.0,25.6,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a4270,"m_flScale",0x24,4,-NAN,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a43f0,"m_vecOrigin[0]",0x30000c,4,-NAN,2,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106a4444,"m_vecOrigin[1]",0x300010,4,-NAN,2,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106a4498,"m_vecOrigin[2]",0x300014,4,-NAN,2,0.0,-121121.1,
    FUN_100e4160((undefined4 *)&DAT_106a4ca0,"m_flDistance",0x1c,4,1.401298e-44,0x10,0.0,1024.0,
    FUN_100e4160((undefined4 *)&DAT_106a5040,"m_fScale",0x1c,4,1.121039e-44,8,0.0,25.6,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a5490,"m_fScale",0x1c,4,1.121039e-44,8,0.0,25.6,FUN_100e4650,
    FUN_100e4160((undefined4 *)&DAT_106a5744,"m_fNoise",0x2c,4,1.121039e-44,8,0.0,2.56,FUN_100e4650,
    FUN_100e4160((undefined4 *)&stack0xffffffa4,"m_flEncodedController",0x478,4,1.541428e-44,8,0.0,
    FUN_100e4160((undefined4 *)&stack0xffffffa4,"m_flFrozenPerHitbox",0x3c8,4,4.484155e-44,0,0.0,
    FUN_100e4160((undefined4 *)&stack0xffffffa4,"m_flPoseParameter",0x418,4,1.541428e-44,0,0.0,1.0,
    FUN_100e4160((undefined4 *)&stack0xffffffa4,"m_flPostProcessParameters",0x3b4,4,4.484155e-44,0,
    FUN_100e4160((undefined4 *)&stack0xffffffa4,"m_flValues",8,4,0.0,4,0.0,-121121.1,FUN_100e4650,
    FUN_100e4160((undefined4 *)&stack0xffffffa4,"m_nValueCounts",0x108,4,0.0,4,0.0,-121121.1,
    FUN_100e42c0((undefined4 *)&DAT_105fb6c8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_105fb770,"m_lifeState",0x271,1,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_105fb8c0,"m_iDeathPose",0x8e8,4,0xc,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_105fb914,"m_iDeathFrame",0x8ec,4,5,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_105fb9bc,"m_iSpeedModRadius",0xd38,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_105fba10,"m_iSpeedModSpeed",0xd3c,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10603d58,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10603e08,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10603eb0,"m_nForceBone",0x3c4,4,8,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10603f58,"m_nSkin",0x3d4,4,10,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10603fac,"m_nBody",0x3d8,4,0x20,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10604000,"m_nHitboxSet",0x3dc,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106040fc,"m_nSequence",0x414,4,0xc,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106041f8,"m_bClientSideAnimation",0x488,1,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1060424c,"m_bClientSideFrameReset",0x489,1,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106042f4,"m_nNewSequenceParity",0x48c,4,3,0x40001,
    FUN_100e42c0((undefined4 *)&DAT_10604348,"m_nResetEventsParity",0x490,4,3,0x40001,
    FUN_100e42c0((undefined4 *)&DAT_1060439c,"m_nMuzzleFlashParity",0x495,1,2,0x40001,
    FUN_100e42c0((undefined4 *)&DAT_106044ec,"m_ScaleType",1000,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106046d8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060472c,"m_nSequence",8,4,0xc,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060487c,"m_nOrder",0x3c,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106048d8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10604988,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10604d80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10604e30,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10604e88,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10604fd8,"m_LastHitGroup",0x70c,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10605240,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060533c,"m_nNextThinkTick",0xa4,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10605440,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060553c,"m_iPrimaryAmmoType",0x508,4,8,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10605590,"m_iSecondaryAmmoType",0x50c,4,8,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10605640,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10605790,"m_iViewModelIndex",0x4fc,4,0xd,0,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_106057e4,"m_iWorldModelIndex",0x500,4,0xd,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10605838,"m_iState",0x504,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10606218,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060626c,"m_flAnimTime",100,4,8,0x140001,FUN_100b0bf0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106062c8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10606370,"m_bIsPlayerSimulated",0x273,1,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106063c8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10606470,"m_flSimulationTime",0x68,4,8,0x140001,FUN_100b1220,0);
    FUN_100e42c0((undefined4 *)&DAT_106064c4,"m_cellbits",0x2f4,4,5,1,(undefined *)0x0,0x20);
    FUN_100e42c0((undefined4 *)&DAT_10606518,"m_cellX",0x2f8,4,10,1,FUN_100b0f50,0x20);
    FUN_100e42c0((undefined4 *)&DAT_1060656c,"m_cellY",0x2fc,4,10,1,FUN_100b0f90,0x20);
    FUN_100e42c0((undefined4 *)&DAT_106065c0,"m_cellZ",0x300,4,10,1,FUN_100b0fd0,0x20);
    FUN_100e42c0((undefined4 *)&DAT_10606668,"m_nModelIndex",0xc2,2,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10606764,"m_nRenderFX",0xc0,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106067b8,"m_nRenderMode",0xc1,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060680c,"m_fEffects",0xa8,4,0xf,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10606860,"m_clrRender",0xc4,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106068b4,"m_iTeamNum",0x33c,4,6,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10606908,"m_CollisionGroup",0x188,4,6,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10606b00,"m_iParentAttachment",0xe1,1,6,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10606bfc,"movetype",0xe2,1,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10606c50,"movecollide",0xe3,1,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10606cf8,"m_iTextureFrameIndex",0x238,1,8,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10606df4,"m_bSimulatedEveryTick",0x239,1,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10606e48,"m_bAnimatedEveryTick",0x23a,1,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10606fec,"m_fGameFlags",0x3b0,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10607040,"m_lifeState",0x271,1,iVar1 + 1,uVar2,puVar3,uVar4);
    FUN_100e42c0((undefined4 *)&DAT_10607658,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10607a08,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10607b58,"m_bIsLive",0x7bd,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10607c54,"m_fFlags",0xd4,4,10,1,FUN_100c3800,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10607dd0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106082c8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060831c,"deadflag",4,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10608378,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060851c,"m_nTickBase",0xf14,4,-1,0,(undefined *)0x0,1);
    FUN_100e42c0((undefined4 *)&DAT_10608570,"m_nNextThinkTick",0xa4,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106089b4,"m_nWaterLevel",0x197,1,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10608ab0,"m_nContinuousUseType",0x7bc,4,4,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10608b08,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10608c04,"m_afPhysicsFlags",0xb90,4,6,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10608d54,"m_iHealth",0x254,4,0x10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10608da8,"m_iMaxHealth",0x250,4,10,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10608dfc,"m_iBonusProgress",0xb9c,4,0xf,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10608e50,"m_iBonusChallenge",0xba0,4,4,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10608ef8,"m_fFlags",0xd4,4,10,0x40001,FUN_100c3800,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10608f4c,"m_iObserverMode",0xbd4,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10608ff4,"m_iFOV",0xbd8,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10609048,"m_iFOVStart",0xbe0,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106090f0,"m_iDefaultFOV",0xbdc,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10609294,"m_ladderSurfaceProps",0xebc,4,0,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106092e8,"m_ubEFNoInterpParity",0x10b0,4,2,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10609438,"m_vphysicsCollisionState",0xc14,4,-1,0,
    FUN_100e42c0((undefined4 *)&DAT_10609638,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106099d4,"m_nBody",0x3d8,4,0x20,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10609a28,"m_nSkin",0x3d4,4,10,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10609a7c,"m_nSequence",0x414,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10609b24,"m_fEffects",0xa8,4,0xf,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10609b78,"m_nAnimationParity",0x4fc,4,3,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10609c20,"m_nNewSequenceParity",0x48c,4,3,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10609c74,"m_nResetEventsParity",0x490,4,3,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10609cc8,"m_nMuzzleFlashParity",0x495,1,2,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10609d70,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10609e18,"m_bIsPlayerSimulated",0x273,1,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10609e70,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10609ec4,"m_nBeamType",0x3cc,4,iVar1 + 1,uVar13,puVar15,uVar17);
    FUN_100e42c0((undefined4 *)&DAT_10609f18,"m_nBeamFlags",0x3d0,4,0x12,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10609f6c,"m_nNumBeamEnts",0x3c4,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060a068,"m_nHaloIndex",0x3c8,4,0x10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060a308,"m_nRenderFX",0xc0,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060a35c,"m_nRenderMode",0xc1,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060a4ac,"m_clrRender",0xc4,4,0x20,0x40001,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060a500,"m_nClipStyle",0x444,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060a5a8,"m_nModelIndex",0xc2,2,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060a780,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060a828,"m_nHaloIndex",0x3b4,4,0x10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060aa74,"m_nRotationAxis",0x3cc,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060abc0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060ace0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060afd4,"m_flSimulationTime",0x68,4,8,0x140001,
    FUN_100e42c0((undefined4 *)&DAT_1060afd4,"m_flSimulationTime",0x68,4,8,0x140001,&LAB_100caf80,
    FUN_100e42c0((undefined4 *)&DAT_1060b0a0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060ba78,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060bb74,"m_nSolidType",0x22,1,3,1,FUN_100d71c0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060bbc8,"m_usSolidFlags",0x20,2,0xc,1,FUN_100d71e0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060bc1c,"m_nSurroundType",0x2a,1,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060bc70,"m_triggerBloat",0x23,1,0,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060c3a0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060cb80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060cff8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060d188,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060d230,"m_Flags",0x3b5,1,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060d284,"m_LightStyle",0x3b6,1,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060d32c,"m_Exponent",0x3bc,4,8,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060d4a0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060d794,"m_fFlags",0x30,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060d890,"m_nAttachmentIndex",0x44,4,5,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060d938,"m_iEffectName",100,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060d98c,"m_nMaterial",0x4c,4,0xd,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060d9e0,"m_nDamageType",0x50,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060da34,"m_nHitBox",0x54,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060da88,"entindex",0x34,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060dadc,"m_nOtherEntIndex",0x58,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060db30,"m_nColor",0x5c,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060dbd8,"m_ParticleColor",0x5e,4,0x20,1,FUN_101c2770,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060dff8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060e0a0,"m_nPrecipType",0x3b4,4,iVar1 + 1,uVar2,puVar3,uVar4);
    FUN_100e42c0((undefined4 *)&DAT_1060e158,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060e228,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060e27c,"m_iMinWind",0xc,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e2d0,"m_iMaxWind",0x10,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e324,"m_iMinGust",0x18,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e378,"m_iMaxGust",0x1c,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e474,"m_iGustDirChange",0x2c,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e4c8,"m_iWindSeed",8,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e51c,"m_iInitialWindDir",0x6c,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e670,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060e740,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060e7e8,"m_nDensity",0x3b4,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e83c,"m_nLifetime",0x3b8,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e890,"m_nSpeed",0x3bc,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e8e4,"m_bEmit",0x3c0,1,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060e9e0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060ec80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060ef74,"m_nDissolveType",0x3d0,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060f01c,"m_nMagnitude",0x3e0,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1060f0c8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1060f290,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1063f578,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1063f620,"m_iMaterialName",0x3b4,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1063f760,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1063f908,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1063fb00,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1063fca4,"m_LightColor",0x3cf,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1063fcf8,"m_LightColorScale",0x3d4,4,0x20,0,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1063fe78,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1063ffd0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10640078,"m_bDOFEnabled",0x3c0,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10640400,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106407f0,"m_LightColor",0x3cc,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10640940,"m_nSpotlightTextureFrame",0x4dc,4,-1,0,
    FUN_100e42c0((undefined4 *)&DAT_10640a3c,"m_nShadowQuality",0x4e8,4,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10640b38,"m_iStyle",0x4f8,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10640c68,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10640eb4,"m_iDesiredOverlay",0x408,4,5,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10640f80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064107c,"m_nType",0x3b8,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10641160,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10641208,"m_bUseCustomAutoExposureMin",0x3b4,1,1,1,
    FUN_100e42c0((undefined4 *)&DAT_1064125c,"m_bUseCustomAutoExposureMax",0x3b5,1,1,1,
    FUN_100e42c0((undefined4 *)&DAT_106412b0,"m_bUseCustomBloomScale",0x3b6,1,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10642528,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106426cc,"m_nFlags",0x3c0,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10642720,"m_nFlameModelIndex",0x3c4,4,0xd,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10642774,"m_nFlameFromAboveModelIndex",0x3c8,4,0xd,0,
    FUN_100e42c0((undefined4 *)&DAT_106428a0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10642a98,"m_nModelIndex",0xc2,2,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10642aec,"m_lifeState",0x271,1,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10642c58,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10642cac,"m_fog.enable",0x3f8,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10642d00,"m_fog.blend",0x3f9,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10642da8,"m_fog.colorPrimary",0x3c4,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10642dfc,"m_fog.colorSecondary",0x3c8,4,0x20,1,FUN_100e4650,0x80
    FUN_100e42c0((undefined4 *)&DAT_10642fa0,"m_fog.colorPrimaryLerpTo",0x3cc,4,0x20,1,FUN_100e4650,
    FUN_100e42c0((undefined4 *)&DAT_10642ff4,"m_fog.colorSecondaryLerpTo",0x3d0,4,0x20,1,
    FUN_100e42c0((undefined4 *)&DAT_106433c0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10643804,"m_iBackgroundModelIndex",0x3d0,4,0xd,0,
    FUN_100e42c0((undefined4 *)&DAT_10643980,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10643bb8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10643c60,"m_nNumWide",0x48c,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10643cb4,"m_nNumHigh",0x490,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10643e58,"m_bIsBroken",0x4b4,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10643eac,"m_nSurfaceType",0x4b8,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10643fe8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064403c,"m_Color",0x3b4,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10644090,"m_SpawnRate",0x3b8,4,0xc,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106440e4,"m_SpeedMax",0x3c4,4,0xc,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106441e0,"m_DistMax",0x3d0,4,0x10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10644234,"m_LifetimeMin",0x3c8,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10644288,"m_LifetimeMax",0x3cc,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106442dc,"m_DustFlags",0x3d8,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10644330,"m_nModelIndex",0xc2,2,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10644450,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106446e8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10644be0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10644e00,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10644ee0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10644f88,"m_nDisappearMinDist",0x3b4,4,0x10,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10644fdc,"m_nDisappearMaxDist",0x3b8,4,0x10,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106450a8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106451a4,"m_fFlags",0xd4,4,0,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10645230,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106452d8,"m_nOccluderIndex",0x3b8,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106453e0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106454e0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10645588,"m_Color1",0x3b4,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106455dc,"m_Color2",0x3b8,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106458d0,"m_spawnflags",0x344,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10646a58,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064b040,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064b094,"m_iGlowType",4,4,0,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064b0e8,"m_nGlowRange",8,4,0,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064b13c,"m_nGlowRangeInverse",0xc,4,0,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064b190,"m_glowColorOverride",0x10,4,0,0,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064b1e4,"m_iGlowTeam",0x14,4,5,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064ba50,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064baa4,"m_iTextureFrameIndex",0x238,1,8,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1064baf8,"m_iOverlayID",0x3b4,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064bd18,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064bd6c,"m_clrRender",0xc4,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064bdc0,"m_nHorizontalSize",0x3b4,4,0x10,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1064be14,"m_nVerticalSize",0x3b8,4,0x10,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064be68,"m_nMinDist",0x3bc,4,0x10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064bebc,"m_nMaxDist",0x3c0,4,0x10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064bf10,"m_nOuterMaxDist",0x3c4,4,0x10,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064bf64,"m_spawnflags",0x344,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064c828,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064c9cc,"m_iFrameStart",0x6b4,4,8,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064ca20,"m_iFrameEnd",0x6b8,4,8,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064ca74,"m_bWrap",0x6bc,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064cb1c,"m_bNewAnimCommandsSemaphore",0x6c4,1,1,1,
    FUN_100e42c0((undefined4 *)&DAT_1064cc6c,"m_nModifyMode",0x6d4,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064cd68,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064e098,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064e140,"m_fEffects",0xa8,4,0xf,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064e23c,"m_iParentAttachment",0xe1,1,6,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064e2e4,"m_iEffectIndex",0x4c8,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064e38c,"m_nStopType",0x4c4,4,iVar1 + 1,uVar17,puVar19,uVar21);
    FUN_100e42c0((undefined4 *)&DAT_1064ef70,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064f018,"m_modelIndex",0x3b4,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064f06c,"m_solidIndex",0x3b8,4,6,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1064f7c8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064fa68,"m_nOverlaySequence",0xbcc,4,0xb,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1064fae0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064fb88,"m_boneIndexAttached",0xed4,4,8,1,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_1064fbdc,"m_ragdollAttachedObjectIndex",0xed8,4,6,1,
    FUN_100e42c0((undefined4 *)&DAT_1064fd30,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1064fe80,"m_nShatterFlags",0x7ac,4,3,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10650200,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10650370,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10651080,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106515b0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106516ac,"m_iHideHUD",0x3c,4,0xc,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106518a4,"m_bDrawViewmodel",0x8c,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1065194c,"m_skybox3d.scale",0x9c,4,0xc,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106519f4,"m_skybox3d.area",0xac,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10651a48,"m_skybox3d.fog.enable",0xf4,1,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10651a9c,"m_skybox3d.fog.blend",0xf5,1,1,1,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_10651b44,"m_skybox3d.fog.colorPrimary",0xc0,4,0x20,1,
    FUN_100e42c0((undefined4 *)&DAT_10651b98,"m_skybox3d.fog.colorSecondary",0xc4,4,0x20,1,
    FUN_100e42c0((undefined4 *)&DAT_10651fdc,"m_audio.soundscapeIndex",500,4,0x11,0,(undefined *)0x0
    FUN_100e42c0((undefined4 *)&DAT_10652030,"m_audio.localBits",0x1f8,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10652084,"m_audio.entIndex",0x1fc,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106521d8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10652328,"m_bFogEnable",0x3c4,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1065237c,"m_FogColor",0x3c5,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106524cc,"m_bActive",0x3d8,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10652520,"m_bUseScreenAspectRatio",0x3d9,1,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106529a0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10652b20,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106531e0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10653320,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106534b8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106537f8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10653a98,"m_eDoorState",0x710,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10653b68,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10653c70,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10653d18,"m_iPhysicsMode",0x57c,4,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10653de8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10654034,"m_iPhysicsMode",0x7a8,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106705d0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10670624,"m_iCurrentMaxRagdollCount",0x3b4,4,6,0,
    FUN_100e42c0((undefined4 *)&DAT_10670a60,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10670b5c,"m_iStartAttachment",0x400,2,5,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10670bb0,"m_iEndAttachment",0x402,2,5,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10670c04,"m_Slack",0x3c0,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10670c58,"m_RopeLength",0x3e4,4,0xf,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10670cac,"m_fLockedPoints",1000,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10670d00,"m_nChangeCount",0x3e0,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10670d54,"m_RopeFlags",0x3b8,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10670da8,"m_nSegments",0x3cc,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10670e50,"m_iRopeMaterialModelIndex",0x3d8,4,0x10,1,
    FUN_100e42c0((undefined4 *)&DAT_10670ea4,"m_Subdiv",0x3dc,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067109c,"m_iParentAttachment",0xe1,1,6,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106710f0,"m_nMinCPULevel",0x23c,1,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10671144,"m_nMaxCPULevel",0x23d,1,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10671198,"m_nMinGPULevel",0x23e,1,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106711ec,"m_nMaxGPULevel",0x23f,1,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106721e8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067223c,"m_nSceneStringIndex",0x460,4,0xd,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106728c8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10672970,"m_shadowColor",0x3c0,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10672cb0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10672f50,"m_iCycleType",0x4e8,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10673db0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10673fe0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106741d0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106742cc,"m_nAttachment",0x3b8,4,8,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067456c,"m_nBrightness",0x3c8,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10674810,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10674b48,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10674c44,"m_movementType",0x420,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10674d20,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10674d74,"m_clrRender",0xc4,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10674dc8,"m_clrOverlay",0x3dc,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10674e70,"m_bOn",0x3e0,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10674ec4,"m_nSize",0x3d4,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10674f18,"m_nOverlaySize",0x3d8,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10674f6c,"m_nMaterial",0x3e4,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10674fc0,"m_nOverlayMaterial",1000,4,0x20,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10675014,"m_RayStrength",0x3f0,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10675450,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106754a4,"m_iTeamNum",0x40c,4,5,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106754f8,"m_iScore",0x3fc,4,0,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067554c,"m_iRoundsWon",0x400,4,8,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106755f4,"player_array_element",0,4,10,1,FUN_101d9770,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10675790,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067588c,"m_bSendHandle",0x3b8,1,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10675ad8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10675ed8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10675fd4,"m_spawnflags",0x344,4,-1,4,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106769b0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10676ad8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067d4e0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067d590,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067d6b0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067d7ac,"m_nBucketCount",0x208,4,iVar2,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067d8a8,"m_nCompressionType",0x214,4,-1,1,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_1067da20,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067dbc4,"m_nPanelName",0x3c4,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067dc18,"m_fScreenFlags",0x3d0,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067dc6c,"m_nOverlayMaterial",0x3cc,4,10,1,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_1067e408,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067e508,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067f150,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1067f2f4,"m_bStartDark",0x3ec,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067f4ec,"m_bColdWorld",0x3ed,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067f540,"m_nMaxBlobCount",0x3f8,4,0,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067f594,"m_SkyColor",0x3fc,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067f5e8,"m_SkyColor2",0x400,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067f63c,"m_nightskycolor",0x408,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1067f690,"m_nightskycolor2",0x40c,4,0x20,1,FUN_100e4650,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10683b30,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10683bd8,"m_bEmit",0x3b4,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10683d28,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10683dd0,"m_bEmit",0x3b4,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10683ecc,"m_iAlpha",0x3c8,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10684020,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10684170,"m_iWeaponID",0x28,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106841c4,"m_iAddonBits",0x2c,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10684218,"m_iSeed",0x30,4,0x10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068426c,"m_iPlayer",0xc,4,6,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106843bc,"m_iDamage",0x40,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10684498,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10684ea8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10684f50,"m_iEvent",0x10,4,iVar1 + 1,uVar2,puVar3,uVar4);
    FUN_100e42c0((undefined4 *)&DAT_106850f8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068514c,"m_iShotsFired",0x134c,4,6,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106855e4,"m_iActiveGoggles",0x17fc,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10685734,"m_iZoneFlags",&DAT_000018bc,4,8,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10685830,"m_iRequisitionPoints",0x1804,4,-1,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10685884,"m_iCurrentWaypointGoal",0x1808,4,-1,0,(undefined *)0x0
    FUN_100e42c0((undefined4 *)&DAT_10685b24,"m_iDramaCameraType",0x1cb4,4,iVar1 + 1,uVar2,puVar3,
    FUN_100e42c0((undefined4 *)&DAT_10685c28,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10685ed0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068650c,"m_iWeaponBits",0x1740,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10686608,"m_iCarriedObject",&DAT_0000186c,4,iVar1 + 1,uVar5,
    FUN_100e42c0((undefined4 *)&DAT_10686704,"m_iVehicleSlot",0x1c64,4,iVar1 + 1,uVar5,puVar2,uVar17
    FUN_100e42c0((undefined4 *)&DAT_10686758,"m_iPlayerState",0x1498,4,iVar1 + 1,uVar5,puVar2,uVar17
    FUN_100e42c0((undefined4 *)&DAT_106867ac,"m_iSpawnInterpCounter",0x14b8,4,4,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10686800,"m_iShouldBecomeRagdoll",0x14b4,4,3,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106868a8,"m_iLimpSide",0x181c,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10686b48,"m_mDir",0x187c,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10686b9c,"m_iLeanState",0x1824,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10686c98,"m_iRopeLength",0x1884,4,0xc,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10686cec,"m_iSquad",0x1888,4,4,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10686d40,"m_iHeadBodyGroup",0x1890,4,6,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10686d94,"m_iGibbedBodyGroup",0x1894,4,4,1,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_10686de8,"m_iMediKitHealth",0x18b4,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10686f38,"m_iFreezeMode",&DAT_000018b0,4,4,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10687184,"m_iActiveGrenadeType",0x17e4,4,6,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106871d8,"m_iNumNearTeamates",0x18e0,4,4,1,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_1068722c,"m_iPlayerType",0x18e4,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10687280,"m_iGameTypeRole",0x18e8,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106872d4,"m_iEquipmentQueueSlot",0x18f0,4,5,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106873d8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106874d4,"m_nModelIndex",0xc2,2,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10687528,"m_nForceBone",0x3c4,4,8,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10687624,"m_nSequence",0x520,4,0xc,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10688688,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106889d0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10688a78,"m_BombStatus",0x540,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10688b98,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10688c40,"m_iCO2Left",0x534,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10688fb8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106893f0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10689648,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106896f0,"m_iShieldMaterial",0x564,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10689744,"m_iPenetrateCount",0x568,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106898a8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10689c80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10689d28,"m_iCurrentKillCount",0x52c,4,-1,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10689d7c,"m_iTotalKillCount",0x530,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10689dd0,"m_iAlphaPlan",0x460,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10689e24,"m_iBetaPlan",0x464,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10689e78,"m_iCharliePlan",0x468,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10689ecc,"m_iActiveSquadsThisStage",0x46c,4,6,1,(undefined *)0x0
    FUN_100e42c0((undefined4 *)&DAT_10689f20,"m_iScoreTotal",0x478,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10689f74,"m_iHostagesKilled",0x47c,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068a0c8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068a178,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068a228,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068ad08,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068adb0,"m_iActiveIssueIndex",0x3b4,4,-1,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1068ae04,"m_iOnlyTeamToVote",0x3b8,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068aeac,"m_nPotentialVotes",0x3d0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068b120,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068b510,"m_iZoneType",0x4e4,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068b564,"m_iStageAvailable",0x3a8,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068b5b8,"m_iBombZoneID",0x4e8,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068b688,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068b7a8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068bfa0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068c144,"m_fireCount",0x9b4,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068c338,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068c428,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068c568,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068c640,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068c8f8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068ca80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068cb28,"m_spawnflags",0x344,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068d058,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068d100,"m_iPlaneType",0x4f0,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068d154,"m_iRightWing_BrakeFlap",0x4f4,4,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1068d1a8,"m_iRightWing_BrakeFlap2",0x4f8,4,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1068d1fc,"m_iLeftWing_BrakeFlap",0x4fc,4,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1068d250,"m_iLeftWing_BrakeFlap2",0x500,4,1,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1068d2a4,"m_iTailMiddleFlap",0x508,4,3,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068d2f8,"m_iTailLeftFlap",0x50c,4,3,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068d34c,"m_iTailRightFlap",0x510,4,3,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068d3a0,"m_iFrontWheelTurn",0x514,4,3,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068d3f4,"m_iEngineSpin",0x504,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068df78,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068e0d0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068f4f8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1068f648,"m_iHealth",0x254,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068f69c,"m_iNPCDriverModel",0xeb4,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068f6f0,"m_iTeleportState",0xeb8,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068f744,"m_iCarType",0xebc,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1068f798,"m_iVehicleColour",0xec0,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106900b8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10690160,"m_iActivity",0x10,4,iVar1 + 1,uVar2,puVar3,uVar4);
    FUN_100e42c0((undefined4 *)&DAT_10690250,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106904f0,"m_State",0x7c0,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069073c,"m_iHealth",0x254,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10690790,"m_iMaxHealth",0x250,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10690c80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10690d28,"m_iEvent",0x10,4,iVar1 + 1,uVar2,puVar3,uVar4);
    FUN_100e42c0((undefined4 *)&DAT_10690e90,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10691184,"m_State",0x7dc,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069122c,"m_iHealth",0x254,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10691280,"m_iMaxHealth",0x250,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10691424,"m_iWalkStyle",0x7e0,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10691478,"m_iCrouchWalkStyle",0x7e4,4,3,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106914cc,"m_iDancingActivity",0x7e8,4,4,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10691574,"m_iNPCType",0x808,4,iVar1 + 1,uVar2,puVar3,uVar4);
    FUN_100e42c0((undefined4 *)&DAT_106916c4,"m_iVehicleSlot",0x804,4,iVar1 + 1,uVar2,puVar3,uVar4);
    FUN_100e42c0((undefined4 *)&DAT_10691718,"m_iCarriedObject",0x80c,4,iVar1 + 1,uVar2,puVar3,uVar4
    FUN_100e42c0((undefined4 *)&DAT_10691c80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10691dd0,"m_iWeaponID",0x28,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10691e24,"m_iSeed",0x2c,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10691e78,"m_iHostage",0xc,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10692830,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10692e38,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10692e8c,"m_iZoomLevel",0x40,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10692f88,"m_iPreviousZoomLevel",0x4c,4,4,0,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_10692fdc,"m_iSpeedScale",100,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10693130,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10693184,"m_iMovementState",0x68,4,iVar1 + 1,uVar2,puVar3,uVar4)
    FUN_100e42c0((undefined4 *)&DAT_10693328,"m_iReloadWhenEmpty",0xc,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069337c,"m_iCharacterItemID",0x88,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106933d0,"m_iHelmetItemID",0x8c,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10693424,"m_iMaskItemID",0x90,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10693478,"m_iGlovesItemID",0x94,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106934cc,"m_iShoesItemID",0x98,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10693520,"m_iHolsterItemID",0x9c,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10693574,"m_iMeleeWeaponItemID",0xa0,4,-1,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106935c8,"m_iPrimaryWeaponItemID",0xa4,4,-1,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1069361c,"m_iSecondaryWeaponItemID",0xa8,4,-1,0,(undefined *)0x0
    FUN_100e42c0((undefined4 *)&DAT_10693670,"m_iEquipmentItemID",0xac,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106936c4,"m_iRequisitionTier1ItemID",0xb0,4,-1,0,
    FUN_100e42c0((undefined4 *)&DAT_10693718,"m_iRequisitionTier2ItemID",0xb4,4,-1,0,
    FUN_100e42c0((undefined4 *)&DAT_10693a00,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10693ea0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10693ef4,"m_iRoundState",0x70,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10693f48,"m_iPreviousRoundState",0x74,4,-1,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10693f9c,"m_iCurrentRound",0x78,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10693ff0,"m_iCurrentStage",0x7c,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10694044,"m_iMaxStages",0x80,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10694098,"m_iNumScorableHostages",0x310,4,4,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106940ec,"m_iHostagesCTRescued",0x2c8,4,4,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10694140,"m_iHostagesTerRescued",0x2cc,4,4,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10694194,"m_iGameType",0x4a4c,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069423c,"m_iClockDuration",0x8c,4,0x10,4,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10694338,"m_iPercentageVIPTravelled",0x2c4,4,-1,0,
    FUN_100e42c0((undefined4 *)&DAT_10694488,"m_iAttackingTeam",0x68,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106944dc,"m_iDefendingTeam",0x6c,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10694880,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10694e98,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10694f48,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10695088,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10695520,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10695ad0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10695b80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10695c30,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10695ce0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10696108,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10696258,"m_iDamageFlags",0x94c,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106963a8,"m_iMaxSlots",0x950,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106963fc,"m_iVehicleType",0x4f4,4,3,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10696450,"m_iStartHealth",0x4fc,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10696938,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10696adc,"m_iHealth",0x254,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10696b30,"m_iVehicleColour",0xe08,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106977f0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10697898,"m_iGear",0x1520,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106978ec,"m_iWheelRadius",0x15b0,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10697940,"m_iWheelRadiusFlat",0x15b4,4,4,1,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_10697994,"m_iWheelSpringConstant",0x15b8,4,8,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_106979e8,"m_iWheelDamp",0x15bc,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10697a3c,"m_iWheelFriction",0x15c0,4,6,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10697a90,"m_iWheelFrictionAngular",0x15c4,4,6,1,(undefined *)0x0
    FUN_100e42c0((undefined4 *)&DAT_10697ae4,"m_iWheelTurnSpeed",0x15c8,4,-1,0,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_10697b38,"m_iEngineForce",0x15cc,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10697b8c,"m_iSkidTheta",0x15d0,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10697be0,"m_iSpinModifier",0x15d8,4,7,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10697c34,"engineState",0x14d8,4,iVar1 + 1,uVar2,puVar3,uVar4);
    FUN_100e42c0((undefined4 *)&DAT_10697c88,"m_iWheelTurn",0x15d4,4,2,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10697d84,"m_iTireStatus",0x15e4,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10698160,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10698330,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106986cc,"m_iGrenadeType",0x7e8,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10698980,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10698a7c,"m_iLastAnim",0x634,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10698b78,"m_iSecondaryPressedIncrement",0x658,4,3,1,
    FUN_100e42c0((undefined4 *)&DAT_10698bcc,"m_nAttack2Debounce",0x65c,4,0x20,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10698c20,"m_iFixItemID",0x660,4,-1,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_10698cd0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10698f1c,"m_iAccessories",0x638,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106992b8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106993b4,"m_iNumOfTraceAttacks",0x62c,4,-1,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_10699600,"m_iNextPrimaryAttackIndex",0x6c4,4,4,1,
    FUN_100e42c0((undefined4 *)&DAT_10699758,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106999d8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10699ab0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10699b88,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10699c60,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10699d38,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10699e10,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10699ee8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_10699fc0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069a098,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069a170,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069a2a0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069a3d0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069a4d8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069a630,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069a760,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069a868,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069a9c0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069aaf0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069abc8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069aca0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069ad78,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069ae50,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069af28,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b000,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b0d8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b1b0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b288,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b360,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b408,"m_iInSpecialReload",0x698,4,2,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b490,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b538,"m_iInSpecialReload",0x698,4,2,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b5c0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b668,"m_iInSpecialReload",0x698,4,2,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b6f0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b798,"m_iInSpecialReload",0x698,4,2,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b820,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b8f8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069b9d0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069baa8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069bb80,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069bc58,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069bd30,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069be08,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069bee0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069bfb8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069c090,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069c170,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069c1f8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069c348,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069c4ec,"m_GrenType",0x3b5,1,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069c540,"m_CurrentStage",0x3b4,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069c5e8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069c738,"m_nFlags",0x3c0,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069c78c,"m_nPlasmaModelIndex",0x3c4,4,0xd,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1069c7e0,"m_nPlasmaModelIndex2",0x3c8,4,0xd,0,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&DAT_1069c834,"m_nGlowModelIndex",0x3cc,4,0xd,0,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&DAT_1069c9d0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069cebc,"m_nAttachment",0x3fc,4,0x20,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069cf88,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069d3cc,"m_nAttachment",0x3f4,4,0x20,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069d474,"m_bDamaged",0x3f8,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069d540,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069d858,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069db90,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069dc38,"m_nAttachment",0x3b4,4,0x20,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069dce8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069e230,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069e4d0,"m_bEmit",0x3d0,4,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069e958,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069ecd8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069ef78,"m_bEmit",0x3cc,4,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069efcc,"m_bFaceLeft",0x3d0,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f020,"m_nType",0x3d4,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f074,"m_spawnflags",0x344,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f1e0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069f2e0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069f3b8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069f40c,"m_nModelIndex",0xc,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f460,"m_nHaloIndex",0x10,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f4b4,"m_nStartFrame",0x14,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f508,"m_nFrameRate",0x18,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f658,"m_nFadeLength",0x28,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f700,"m_nSpeed",0x40,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f8a4,"m_nFlags",0x44,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069f998,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069fa40,"m_nStartEntity",0x48,4,0x18,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069fa94,"m_nEndEntity",0x58,4,0x18,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069fc18,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069fcc0,"m_nStartEntity",0x48,4,0x18,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069fd14,"m_nEndEntity",0x4c,4,0x18,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069fdf0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_1069fe98,"m_iEntIndex",0x48,4,0x18,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_1069ff70,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a0018,"m_nStartEntity",0x48,4,0x18,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a006c,"m_nEndEntity",0x4c,4,0x18,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a0158,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a0330,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a03d8,"m_nStartEntity",0x48,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a042c,"m_nEndEntity",0x4c,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a0518,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a07c0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a0814,"m_nPoints",0xcc,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a0988,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a0bd4,"m_nSprayModel",0x24,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a0c28,"m_nDropModel",0x28,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a0c7c,"m_nSize",0x3c,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a0d38,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a0f84,"m_nAmount",0x34,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1060,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a1300,"m_nModelIndex",0x40,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1354,"m_nRandomization",0x3c,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a13a8,"m_nCount",0x44,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1450,"m_nFlags",0x4c,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a14f8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a15f4,"m_nEntity",0x18,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1648,"m_nIndex",0x1c,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1700,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a1850,"m_nModelIndex",0x28,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a18f8,"m_nCount",0x2c,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1a08,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a1b58,"m_nModelIndex",0x28,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1c00,"m_nCount",0x2c,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1d08,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a1e58,"m_nModelIndex",0x24,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1eac,"m_nLifeTime",0x28,4,6,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a1fb8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a2108,"m_nEntity",0x24,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a215c,"m_nHitbox",0x28,4,0x10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a21b0,"m_nIndex",0x2c,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2268,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a2460,"exponent",0x28,4,8,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2660,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a27b8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a28b4,"m_bExplosive",0x24,1,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2980,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a2a28,"m_nModelIndex",0x18,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2ad0,"m_nFrameRate",0x20,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2b24,"m_nFlags",0x24,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2bcc,"m_chMaterialType",0x34,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2c20,"m_nRadius",0x38,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2c74,"m_nMagnitude",0x3c,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2d18,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a2dc0,"m_nEntity",0xc,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2e14,"m_nModelIndex",0x10,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2e68,"m_nDensity",0x14,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2ebc,"m_nCurrent",0x18,4,0x10,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a2f70,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a30c0,"m_nEntity",0x24,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3114,"m_nIndex",0x28,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3168,"m_chMaterialType",0x2c,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3218,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a32c0,"m_nType",0x18,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a33f8,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a36ec,"m_nSurfaceType",0x48,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3740,"m_uchFrontColor[0]",0x4c,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3794,"m_uchFrontColor[1]",0x4d,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a37e8,"m_uchFrontColor[2]",0x4e,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a383c,"m_uchBackColor[0]",0x4f,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3890,"m_uchBackColor[1]",0x50,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a38e4,"m_uchBackColor[2]",0x51,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3990,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a3a8c,"m_nModelIndex",0x18,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3b88,"m_nBrightness",0x24,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3c38,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a3d88,"m_iType",0x24,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3e20,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a3ec8,"m_nPlayer",0xc,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a3f70,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a4018,"m_nModelIndex",0x18,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a406c,"m_nReversed",0x1c,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a4120,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a42c4,"m_nType",0x28,4,0x20,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a4348,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a4560,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a47ac,"m_nModelIndex",0x30,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a4800,"m_nSkin",0x34,4,10,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a4854,"m_nFlags",0x38,4,2,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a48a8,"m_nEffects",0x3c,4,0xf,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a4950,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a4a4c,"m_nEntity",0x1c,4,0xb,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a4aa0,"m_nPlayer",0xc,4,iVar1,uVar2,puVar3,uVar4);
    FUN_100e42c0((undefined4 *)&DAT_106a4b50,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a4cf4,"m_nIndex",0x18,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a4da0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a4ef0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a4fec,"m_nModelIndex",0x18,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a5094,"m_nFrameRate",0x20,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a5148,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a51f0,"m_nMagnitude",0x18,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a5244,"m_nTrailLength",0x1c,4,4,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a5340,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a543c,"m_nModelIndex",0x18,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a54e4,"m_nBrightness",0x20,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a55a0,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a56f0,"m_nModelIndex",0x24,4,0xd,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a5798,"m_nSpeed",0x28,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a57ec,"m_nCount",0x30,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&DAT_106a5890,"should_never_see_this",0,4,-1,0,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&DAT_106a598c,"m_nIndex",0x18,4,9,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_AddonModelWeaponIDs",0x1744,4,8,1,
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_NetworkWaitList",0x4ac0,4,0x20,1,(undefined *)0x0
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_NetworkWaitList_LoadPercent",0x4b34,4,0x20,1,
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_RawPanelBitVec",0xef0,1,1,1,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_VehicleFlags",0x6b8,4,6,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_bConnected",0x540,4,1,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_chAreaBits",4,1,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_chAreaPortalBits",0x24,1,8,1,(undefined *)0x0,
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_chCurrentSlideLists",0x4d0,1,8,1,(undefined *)0x0
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_fireXDelta",0x3b4,4,0xf,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_fireYDelta",0x4b4,4,0xf,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_fireZDelta",0x5b4,4,0xf,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iAmmo",0x74c,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iControlPointParents",0x6fc,1,3,1,
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iDeaths",0x4bc,4,0xc,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iExperience",0x778,4,0x20,1,(undefined *)0x0,0x80
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iExperience_Delta",0x7fc,4,0x10,1,
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iFixUserId",0x6f4,4,0x20,1,(undefined *)0x0,0x80)
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iFrags",0x438,4,0x10,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iGrenades",0x17c4,4,8,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iHealth",0x66c,4,10,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iPing",0x3b4,4,10,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iServerControlPointAssignments",0x500,1,-1,1,
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_iTeam",0x5c4,4,4,0,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_nAttachIndex",0x3fc,4,5,1,(undefined *)0x0,0x80);
    FUN_100e42c0((undefined4 *)&stack0xffffffa4,"m_nVoteOptionCount",0x3bc,4,8,1,(undefined *)0x0,
    FUN_100e43b0((undefined4 *)&DAT_10606ca4,"m_angRotation",0x300310,0xc,1.821688e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_1060d6ec,"m_vAngles",0x24,0xc,9.809089e-45,0,FUN_100e4690,0x80);
    FUN_100e43b0((undefined4 *)&DAT_1064c00c,"m_angRotation",0x300310,0xc,1.821688e-44,0,
    FUN_100e43b0((undefined4 *)&DAT_1064e290,"m_angRotation",0x300310,0xc,1.821688e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_1064f870,"m_ragAngles",0xa18,0xc,1.821688e-44,0,FUN_100e4690,
    FUN_100e43b0((undefined4 *)&DAT_10653f38,"m_angRotation",0x300310,0xc,1.121039e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_10688de4,"m_angRotation",0x300310,0xc,1.121039e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_10689204,"m_angRotation",0x300310,0xc,1.121039e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_1068d5ec,"m_angRotation",0x300310,0xc,1.821688e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_1068e274,"m_angRotation",0x300310,0xc,1.261169e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_1068fdd4,"m_angRotation",0x300310,0xc,1.261169e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_106905ec,"m_angRotation",0x300310,0xc,1.121039e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_10691910,"m_angRotation",0x300310,0xc,1.121039e-44,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_10693280,"m_aMovementStateOrientation",0x10007c,0xc,4.484155e-44
    FUN_100e43b0((undefined4 *)&DAT_10698870,"m_angRotation",0x300310,0xc,8.407791e-45,0x40000,
    FUN_100e43b0((undefined4 *)&DAT_106a4c4c,"m_angRotation",0x100020,0xc,1.401298e-44,0,
    FUN_100e4480((undefined4 *)&DAT_106091ec,"m_szLastPlaceName",0x1040,0x12,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_1060c640,"m_netlookupFilename",0x3e4,0x104,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_1060cc28,"m_lookupFilename",0x4ec,0x104,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_106408ec,"m_SpotlightTextureName",0x3d8,0x104,0,FUN_100e4710,
    FUN_100e4480((undefined4 *)&DAT_10640d10,"m_iszOverlayNames",0x3b4,4,0,FUN_101c28f0,0x80);
    FUN_100e4480((undefined4 *)&DAT_10645630,"m_MaterialName",0x3bc,0xff,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_1064c8d0,"m_szMaterialName",0x3b4,0xff,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_1064c924,"m_szMaterialVar",0x4b3,0xff,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_1064c978,"m_szMaterialVarValue",0x5b2,0xff,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_1064e434,"m_szSnapshotFileName",0x3bc,0x104,0,FUN_100e4710,0x80)
    FUN_100e4480((undefined4 *)&DAT_10672dac,"m_szDisplayText",0x3b5,0x80,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_10672e00,"m_szSlideshowDirectory",0x435,0x80,0,FUN_100e4710,0x80
    FUN_100e4480((undefined4 *)&DAT_106755a0,"m_szTeamname",0x3dc,0x20,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_10689498,"m_strObjectName",0x514,0x40,0,FUN_100e4710,0x80);
    FUN_100e4480((undefined4 *)&DAT_106962ac,"m_vehicleScript",0x738,0x100,0,FUN_100e4710,0x80);
    FUN_100e44c0((undefined4 *)&DAT_10603f04,"m_vecForce",0x1003c8,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10606614,"m_vecOrigin",0x500304,0xc,7.006492e-45,0x48000,0.0,
    FUN_100e44c0((undefined4 *)&DAT_10607c00,"m_vecVelocity",0x300228,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10608714,"m_vecBaseVelocity",0x1001a4,0xc,2.802597e-44,0,-1000.0
    FUN_100e44c0((undefined4 *)&DAT_106087bc,"m_vecConstraintCenter",0x100f54,0xc,0.0,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_10609240,"m_vecLadderNormal",0x100ec0,0xc,0.0,0x20,0.0,-121121.1
    FUN_100e44c0((undefined4 *)&DAT_1060a554,"m_vecEndPos",0x100448,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1060a5fc,"m_vecOrigin",0x500304,0xc,2.662467e-44,0x40000,
    FUN_100e44c0((undefined4 *)&DAT_1060ae84,"m_vecOrigin",0x500304,0xc,-NAN,0x40002,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1060bacc,"m_vecMins",0x100008,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1060bb20,"m_vecMaxs",0x100014,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1060bcc4,"m_vecSpecifiedSurroundingMins",0x10002c,0xc,0.0,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_1060bd18,"m_vecSpecifiedSurroundingMaxs",0x100038,0xc,0.0,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_1060c3f4,"m_vecOrigin",0x500304,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1060d740,"m_vNormal",0x18,0xc,0.0,0x20,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1060ea88,"m_targetPosition",0x1003b4,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1060eadc,"m_controlPosition",0x1003c0,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1060efc8,"m_vDissolverOrigin",0x1003d4,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1060f338,"m_vFreezingOrigin",0x1003b4,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1063f9b0,"m_vecColor",0x1003e8,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1063fb54,"m_shadowDirection",0x1003b4,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1063fba8,"m_envLightShadowDirection",0x1003c0,0xc,-NAN,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_106428f4,"m_poolOrigin",0x100524,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10642d54,"m_fog.dirPrimary",0x1003b8,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10643db0,"m_vNormal",0x10049c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10643e04,"m_vCorner",0x1004a8,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106445a0,"m_vecDirection",0x100020,0xc,5.605194e-45,0,-1.0,1.0,
    FUN_100e44c0((undefined4 *)&DAT_106447e4,"m_vecOrigin",0x500304,0xc,-NAN,0x40004,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10644c88,"m_vecPlayerMountPositionTop",0x1003d4,0xc,2.802597e-45
    FUN_100e44c0((undefined4 *)&DAT_10644cdc,"m_vecPlayerMountPositionBottom",0x1003e0,0xc,
    FUN_100e44c0((undefined4 *)&DAT_10644d30,"m_vecLadderDir",0x1003b4,0xc,2.802597e-45,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_10645150,"m_vecVelocity",0x300228,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1064bfb8,"m_vecOrigin",0x500304,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1064e0ec,"m_vecOrigin",0x500304,0xc,-NAN,0x40002,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1064f918,"m_ragPos",0x898,0xc,-NAN,2,0.0,-121121.1,FUN_100e4740,
    FUN_100e44c0((undefined4 *)&DAT_1064fc30,"m_attachmentPointBoneSpace",0x100edc,0xc,-NAN,2,0.0,
    FUN_100e44c0((undefined4 *)&DAT_1064fc84,"m_attachmentPointRagdollSpace",0x100ee8,0xc,-NAN,2,0.0
    FUN_100e44c0((undefined4 *)&DAT_1064fed4,"m_vShatterPosition",0x1007b0,0xc,4.484155e-44,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_1064ff28,"m_vShatterForce",0x1007bc,0xc,4.484155e-44,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_106517a8,"m_vecPunchAngle",0x100070,0xc,-NAN,0x40002,0.0,
    FUN_100e44c0((undefined4 *)&DAT_106517fc,"m_vecPunchAngleVel",0x10007c,0xc,-NAN,0x40002,0.0,
    FUN_100e44c0((undefined4 *)&DAT_106519a0,"m_skybox3d.origin",0x1000a0,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10651af0,"m_skybox3d.fog.dirPrimary",0x1000b4,0xc,-NAN,2,0.0,
    FUN_100e44c0((undefined4 *)&DAT_10651d3c,"m_audio.localSound[0]",0x194,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10651d90,"m_audio.localSound[1]",0x1a0,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10651de4,"m_audio.localSound[2]",0x1ac,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10651e38,"m_audio.localSound[3]",0x1b8,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10651e8c,"m_audio.localSound[4]",0x1c4,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10651ee0,"m_audio.localSound[5]",0x1d0,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10651f34,"m_audio.localSound[6]",0x1dc,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10651f88,"m_audio.localSound[7]",0x1e8,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10653f8c,"m_vecOrigin",0x500304,0xc,-NAN,0x42000,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106540dc,"m_collisionMins",0x1007b8,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10654130,"m_collisionMaxs",0x1007c4,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10670ff4,"m_vecOrigin",0x500304,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1067291c,"m_shadowDirection",0x1003b4,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10673e04,"m_vecOrigin",0x500304,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10674bf0,"m_vecFinalDest",0x100408,0xc,4.484155e-44,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_10674e1c,"m_vDirection",0x1003b4,0xc,0.0,0x20,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1067f24c,"m_WorldMins",0x1003c0,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1067f2a0,"m_WorldMaxs",0x1003cc,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10683c80,"m_vecColor",0x3bc,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10683e78,"m_vecColor",0x3bc,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10684074,"m_vecOrigin",0x100010,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10685248,"m_vecViewOffset",0x300320,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10685344,"m_angLastPunchAngle",0x182c,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10685a7c,"m_vecDramaPosition",0x101c9c,0xc,4.484155e-44,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_10685ad0,"m_vecDramaPosition2",0x101ca8,0xc,4.484155e-44,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_106869a4,"m_vecRollVector",0x10183c,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106869f8,"m_vecRappelPoint",0x101848,0xc,0.0,6,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10686aa0,"m_vecRappelWallNormal",0x10185c,0xc,0.0,6,0.0,
    FUN_100e44c0((undefined4 *)&DAT_10687328,"m_vecZoomSway",0x1d18,0xc,4.484155e-44,4,0.0,-121121.1
    FUN_100e44c0((undefined4 *)&DAT_1068742c,"m_vecRagdollOrigin",0x100508,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1068757c,"m_vecForce",0x1003c8,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106875d0,"m_angVelocity",0x100514,0xc,4.484155e-44,4,0.0,
    FUN_100e44c0((undefined4 *)&DAT_10688e38,"m_vecOrigin",0x500304,0xc,-NAN,0x44000,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10689258,"m_vecOrigin",0x500304,0xc,-NAN,0x42000,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10689fc8,"m_vDesignatedAlphaSpawn",0x1004f0,0xc,4.484155e-44,4,
    FUN_100e44c0((undefined4 *)&DAT_1068a01c,"m_vDesignatedBravoSpawn",0x1004fc,0xc,4.484155e-44,4,
    FUN_100e44c0((undefined4 *)&DAT_1068a070,"m_vDesignatedCharlieSpawn",0x100508,0xc,4.484155e-44,4
    FUN_100e44c0((undefined4 *)&DAT_1068d640,"m_vecOrigin",0x500304,0xc,-NAN,0x44000,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1068e2c8,"m_vecOrigin",0x500304,0xc,-NAN,0x44000,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10690640,"m_vecOrigin",0x500304,0xc,-NAN,0x40002,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106917c0,"m_vecGoal",0x102254,0xc,-NAN,0x44000,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10691964,"m_vecOrigin",0x500304,0xc,-NAN,0x44000,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10691cd4,"m_vecOrigin",0x100010,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069322c,"m_vMovementStateLocation",0x100070,0xc,4.484155e-44,4,
    FUN_100e44c0((undefined4 *)&DAT_10694290,"m_vecVIPCaseGoal",0x4a5c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106942e4,"m_vecVIPCarGoal",0x4a68,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106969e0,"m_vecCollisionForce",0x100df4,0xc,-NAN,0x4000,0.0,
    FUN_100e44c0((undefined4 *)&DAT_10698720,"m_vInitialVelocity",0x1007dc,0xc,2.802597e-44,0,
    FUN_100e44c0((undefined4 *)&DAT_1069881c,"m_vecOrigin",0x500304,0xc,-NAN,0x44000,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_10699558,"m_vecLastBonePos",0x100690,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069c24c,"m_vOrigin",0x1003b4,0xc,0.0,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069c2a0,"m_vDirection",0x1003c0,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069cacc,"m_StartColor",0x1003b4,0xc,1.121039e-44,0,0.0,1.0,
    FUN_100e44c0((undefined4 *)&DAT_1069cb20,"m_EndColor",0x1003c0,0xc,1.121039e-44,0,0.0,1.0,
    FUN_100e44c0((undefined4 *)&DAT_1069d084,"m_StartColor",0x1003b4,0xc,1.121039e-44,0,0.0,1.0,
    FUN_100e44c0((undefined4 *)&DAT_1069d0d8,"m_EndColor",0x1003c0,0xc,1.121039e-44,0,0.0,1.0,
    FUN_100e44c0((undefined4 *)&DAT_1069d63c,"m_vecEndColor",0x1003b4,0xc,1.121039e-44,0,0.0,1.0,
    FUN_100e44c0((undefined4 *)&DAT_1069dde4,"m_Color",0x1003b4,0xc,1.121039e-44,0,0.0,1.0,
    FUN_100e44c0((undefined4 *)&DAT_1069e5cc,"m_DirLight.m_vPos",0x3fc,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069e620,"m_DirLight.m_vColor",0x408,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069e6c8,"m_AmbientLight.m_vPos",0x3dc,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069e71c,"m_AmbientLight.m_vColor",1000,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069e7c4,"m_vWind",0x10042c,0xc,0.0,4,0.0,-121121.1,FUN_100e4740
    FUN_100e44c0((undefined4 *)&DAT_1069ebf8,"m_vecSkyboxOrigin",0x10041c,0xc,0.0,4,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069f234,"m_vecPos",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069f288,"m_vecDir",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069fae8,"m_vecStartPoint",0x10004c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_1069fb3c,"m_vecEndPoint",0x10005c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a0200,"m_vecStartPoint",0x100048,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a0254,"m_vecEndPoint",0x100054,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a05c0,"m_vecCenter",0x100048,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a0868,"m_vecPoints",0xc,0xc,-NAN,2,0.0,-121121.1,FUN_100e4740
    FUN_100e44c0((undefined4 *)&DAT_106a09dc,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a0a30,"m_vecDirection",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a0de0,"m_vecDirection",0x100018,0xc,1.541428e-44,0,-10.0,10.0
    FUN_100e44c0((undefined4 *)&DAT_106a1108,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a1258,"m_vecSize",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a12ac,"m_vecVelocity",0x100024,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a15a0,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a17a8,"m_vecMins",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a17fc,"m_vecMaxs",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a1ab0,"m_vecMins",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a1b04,"m_vecMaxs",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a1db0,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a1e04,"m_vecVelocity",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a2060,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a20b4,"m_vecStart",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a2310,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a280c,"m_vecPos",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a2860,"m_vecDir",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a2b78,"m_vecNormal",0x100028,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a3018,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a306c,"m_vecDirection",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a3314,"m_vecDirection",0x10001c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a34a0,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a34f4,"m_vecAngles",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a3548,"m_vecForce",0x100024,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a359c,"m_vecForcePos",0x100030,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a3a38,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a3ce0,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a3d34,"m_vecNormal",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a41c8,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a421c,"m_vecAngles",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a4608,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a4758,"m_vecVelocity",0x100024,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a49f8,"m_vecOrigin",0x100010,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a4bf8,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a4e48,"m_vecEnd",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a4f98,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a5298,"m_vecDir",0x100020,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a53e8,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a5648,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a569c,"m_vecDirection",0x100018,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&DAT_106a5938,"m_vecOrigin",0x10000c,0xc,-NAN,2,0.0,-121121.1,
    FUN_100e44c0((undefined4 *)&stack0xffffffa4,"m_vServerControlPoints",0x4d0,0xc,4.484155e-44,4,
    FUN_100e4550((undefined4 *)&DAT_106851a0,"m_vecOrigin",0x500304,0xc,-NAN,4,0.0,-121121.1,
    FUN_100e4550((undefined4 *)&DAT_10685c7c,"m_vecOrigin",0x500304,0xc,7.006492e-45,0x10000,0.0,
    FUN_100e4550((undefined4 *)&DAT_1068fe28,"m_vecOrigin",0x500304,0xc,7.006492e-45,0x10000,0.0,
    FUN_100e4550((undefined4 *)&DAT_10696e24,"m_vecOrigin",0x500304,0xc,7.006492e-45,0x10000,0.0,
    FUN_100e4820((undefined4 *)&DAT_1060492c,"m_AnimOverlay",0x4f0,(uint *)&DAT_0000004c,
    FUN_100e4820((undefined4 *)&DAT_106723e0,"m_hActorList",0x434,(uint *)&DAT_00000004,
    FUN_100ff720((undefined4 *)&DAT_1071524c,2,4,"m_hViewModel",0);
    FUN_100ff720((undefined4 *)&DAT_107274cc,10,0xff,"m_iszOverlayNames",0);
    FUN_100ff720((undefined4 *)&DAT_10727544,10,4,"m_flOverlayTimes",0);
    FUN_100ff720((undefined4 *)&DAT_1072fbf8,0x20,0,"\"player_array\"",FUN_100c6ac0);
    FUN_100ff720((undefined4 *)&DAT_1077c59c,0x20,0xc,"m_ragAngles",0);
    FUN_100ff720((undefined4 *)&DAT_1077c614,0x20,0xc,"m_ragPos",0);
    FUN_100ff720((undefined4 *)&DAT_107b0c0c,0x10,0xc,"m_vecPoints",0);
    FUN_100ff780((undefined4 *)&DAT_107148e8,"m_iAmmo",(undefined4 *)0x3794,4,0xf,*puVar1,puVar1[1],
    FUN_100ff780((undefined4 *)&DAT_10715b18,"m_hAttachEntity",(undefined4 *)&DAT_00001464,4,10,
    FUN_100ff780((undefined4 *)&DAT_10715b54,"m_nAttachIndex",(undefined4 *)&DAT_0000148c,4,10,
    FUN_100ff780((undefined4 *)&DAT_1071892c,"m_flPoseParameter",(undefined4 *)0x3184,4,0x18,*puVar1
    FUN_100ff780((undefined4 *)&DAT_107189a4,"m_flEncodedController",(undefined4 *)0x1494,4,4,
    FUN_100ff780((undefined4 *)&DAT_107197dc,"m_hMyWeapons",(undefined4 *)0x37d0,4,5,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1071c3a4,"m_chAreaBits",(undefined4 *)&DAT_00000004,1,0x20,
    FUN_100ff780((undefined4 *)&DAT_1071c3e0,"m_chAreaPortalBits",(undefined4 *)&DAT_00000024,1,0x18
    FUN_100ff780((undefined4 *)&DAT_1071dfdc,"m_flFrozenPerHitbox",(undefined4 *)&DAT_0000144c,4,
    FUN_100ff780((undefined4 *)&DAT_10728380,"m_RawPanelBitVec",(undefined4 *)0x1494,1,0x240,*puVar1
    FUN_100ff780((undefined4 *)&DAT_1072a698,"m_vServerControlPoints",(undefined4 *)0x1554,0xc,4,
    FUN_100ff780((undefined4 *)&DAT_1072a6d4,"m_iServerControlPointAssignments",(undefined4 *)0x1584
    FUN_100ff780((undefined4 *)&DAT_1072a710,"m_hControlPointEnts",(undefined4 *)0x1598,4,0x3f,
    FUN_100ff780((undefined4 *)&DAT_1072a74c,"m_iControlPointParents",(undefined4 *)0x1694,1,0x3f,
    FUN_100ff780((undefined4 *)&DAT_1072b204,"m_iPing",(undefined4 *)0x14c8,4,0x21,*puVar1,puVar1[1]
    FUN_100ff780((undefined4 *)&DAT_1072b240,"m_iFrags",(undefined4 *)0x154c,4,0x21,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1072b27c,"m_iDeaths",(undefined4 *)0x15d0,4,0x21,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1072b2b8,"m_bConnected",(undefined4 *)0x1654,1,0x21,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1072b2f4,"m_iTeam",(undefined4 *)0x1678,4,0x21,*puVar1,puVar1[1]
    FUN_100ff780((undefined4 *)&DAT_1072b330,"m_bAlive",(undefined4 *)0x16fc,1,0x21,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1072b36c,"m_iHealth",(undefined4 *)0x1720,4,0x21,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1072b720,"m_flPostProcessParameters",(undefined4 *)0x1440,4,4,
    FUN_100ff780((undefined4 *)&DAT_1072ee44,"m_chCurrentSlideLists",(undefined4 *)0x1558,1,0x10,
    FUN_100ff780((undefined4 *)&DAT_1077b638,"m_hProps",(undefined4 *)0x1440,4,4,*puVar1,puVar1[1],
    FUN_100ff780((undefined4 *)&DAT_1077b674,"m_chPoseIndex",(undefined4 *)&DAT_00001450,1,4,*puVar1
    FUN_100ff780((undefined4 *)&DAT_1077fe64,"m_flValues",(undefined4 *)&DAT_00000008,4,0x40,*puVar1
    FUN_100ff780((undefined4 *)&DAT_1077fea0,"m_nValueCounts",(undefined4 *)&DAT_00000108,4,0x40,
    FUN_100ff780((undefined4 *)&DAT_1079b040,"m_iFixUserId",(undefined4 *)0x17c0,4,0x21,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1079b07c,"m_iExperience",(undefined4 *)0x1844,4,0x21,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1079b0b8,"m_iExperience_Delta",(undefined4 *)0x18c8,4,0x21,
    FUN_100ff780((undefined4 *)&DAT_1079c600,"m_AddonModelWeaponIDs",(undefined4 *)0x47d8,4,3,
    FUN_100ff780((undefined4 *)&DAT_1079cee8,"m_iGrenades",(undefined4 *)0x454c,4,8,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1079e488,"m_nVoteOptionCount",(undefined4 *)&DAT_00001454,4,5,
    FUN_100ff780((undefined4 *)&DAT_1079fdd8,"m_fireXDelta",(undefined4 *)&DAT_0000144c,4,100,
    FUN_100ff780((undefined4 *)&DAT_1079fe14,"m_fireYDelta",(undefined4 *)0x15dc,4,100,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_1079fe50,"m_fireZDelta",(undefined4 *)0x176c,4,100,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_107a30b8,"m_NetworkWaitList",(undefined4 *)0x404d8,4,0x1d,
    FUN_100ff780((undefined4 *)&DAT_107a30f4,"m_NetworkWaitList_LoadPercent",(undefined4 *)0x4054c,4
    FUN_100ff780((undefined4 *)&DAT_107a4558,"m_VehicleFlags",(undefined4 *)0x3524,4,0xe,*puVar1,
    FUN_100ff780((undefined4 *)&DAT_107a4774,"m_pPassengers",(undefined4 *)0x33d0,4,0xe,*puVar1,
    FUN_100ff930((undefined4 *)&DAT_1071364c,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10713688,"LocalWeaponData",0,0,&DAT_1071335c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107136c4,"LocalActiveWeaponData",0,0,&DAT_10713344,FUN_100ff710)
    FUN_100ff930((undefined4 *)&DAT_1071401c,"baseclass",0,0,PTR_DAT_106a7c04,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071421c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10714834,"m_Local",0x392c,0,&DAT_1071c328,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10714d9c,"baseclass",0,0,PTR_DAT_106a7c04,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10714dd8,"localdata",0,0,&DAT_10714728,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10716004,"beampredictable_id",0,0,&DAT_10715920,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107160ec,"baseclass",0,0,PTR_DAT_106a7c04,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071874c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10718b84,"serveranimdata",0,0,&DAT_107167b8,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10718d2c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107194ec,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10719528,"overlay_vars",0,0,&DAT_10719290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107196ec,"baseclass",0,0,PTR_DAT_106a8828,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10719728,"bcc_localdata",0,0,&DAT_107195a4,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10719874,"baseclass",0,0,PTR_DAT_106aa7b4,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071a134,"AnimTimeMustBeFirst",0,0,&DAT_10719c38,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071a710,"m_Collision",0x41c,0,&DAT_10767190,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071a74c,"m_Glow",0x478,0,&DAT_1076df88,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071a800,"predictable_id",0,0,&DAT_10719c84,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071ba2c,"baseclass",0,0,PTR_DAT_106a7bcc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071cc5c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071cdcc,"baseclass",0,0,PTR_DAT_106aa7b4,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071cf54,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071d1cc,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071d34c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071d6b4,"baseclass",0,0,PTR_DAT_106ab7c0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071d874,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071db0c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071ddfc,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071df64,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071e0ec,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071e164,"m_Info",0x152c,0,&DAT_10768494,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1071e2cc,"baseclass",0,0,PTR_DAT_106ab4fc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072644c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10726684,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10726d54,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10726e7c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10727454,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10727674,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10727784,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10727b24,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10727fb4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10728164,"baseclass",0,0,PTR_DAT_106ab00c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10728414,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107284ac,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10728858,"m_Collision",0x41c,0,&DAT_10767190,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107288d4,"baseclass",0,0,PTR_DAT_106c76cc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10728a74,"baseclass",0,0,PTR_DAT_106aa7b4,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10728d24,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10728e34,"baseclass",0,0,PTR_DAT_106aac0c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10728ecc,"baseclass",0,0,PTR_DAT_106aa7b4,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10728fdc,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107290f4,"baseclass",0,0,PTR_DAT_106aac0c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072918c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072934c,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072961c,"m_Collision",0x41c,0,&DAT_10767190,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107296b4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072a044,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072a7fc,"baseclass",0,0,PTR_DAT_106ab00c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072a8b4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072a94c,"baseclass",0,0,PTR_DAT_106ab064,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072abbc,"baseclass",0,0,PTR_DAT_106aa824,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072accc,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072af6c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072b414,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072b6e4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072b7f4,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072b99c,"baseclass",0,0,PTR_DAT_106aa824,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072ba94,"baseclass",0,0,PTR_DAT_106ab37c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072bb8c,"baseclass",0,0,PTR_DAT_106ab380,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072bc0c,"baseclass",0,0,PTR_DAT_106ab008,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072bd04,"baseclass",0,0,PTR_DAT_106ab064,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072e97c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072eb7c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072ed54,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072f26c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072f42c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072f5c4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072fc8c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072fe5c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1072ff6c,"baseclass",0,0,PTR_DAT_106aa7b4,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10730064,"baseclass",0,0,PTR_DAT_106ab7c0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107300e4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107301a4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107303dc,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10730474,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107305ac,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1076907c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1076920c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1077b5fc,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1077bbd4,"baseclass",0,0,PTR_DAT_106a6984,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1077c524,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1077c744,"baseclass",0,0,PTR_DAT_106b005c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1077e9ec,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1077ed0c,"baseclass",0,0,PTR_DAT_106b36e8,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1077edfc,"baseclass",0,0,PTR_DAT_106b36e8,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1077f3ec,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10793e6c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_10793fc4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079b004,"baseclass",0,0,PTR_DAT_106ab0cc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079bfd8,"m_flJumpTimer",0x4754,0,&DAT_1077fc3c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079c014,"m_flRappelJumpTimer",0x4764,0,&DAT_1077fc3c,
    FUN_100ff930((undefined4 *)&DAT_1079c050,"m_Timer_DM_Respawn",0x4774,0,&DAT_1077fc3c,
    FUN_100ff930((undefined4 *)&DAT_1079c45c,"baseclass",0,0,PTR_DAT_106a6964,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079c510,"m_Shared",0x4154,0,&DAT_107a1dd0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079c54c,"TI_LPDT",0,0,&DAT_1079b2f0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079c588,"TI_RPDT",0,0,&DAT_1079b308,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079d704,"baseclass",0,0,PTR_DAT_106c3bf0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079d814,"baseclass",0,0,PTR_DAT_106c3bf0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079d99c,"baseclass",0,0,PTR_DAT_106c3bf0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079dafc,"baseclass",0,0,PTR_DAT_106c3bf0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079dbb4,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079dcfc,"baseclass",0,0,PTR_DAT_106c3bf0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079de0c,"baseclass",0,0,PTR_DAT_106c3bf0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079deec,"baseclass",0,0,PTR_DAT_106ab570,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079e23c,"baseclass",0,0,PTR_DAT_106b6b88,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079e2bc,"baseclass",0,0,PTR_DAT_106b6b88,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079e33c,"baseclass",0,0,PTR_DAT_106b6b88,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079e3d4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079e66c,"baseclass",0,0,PTR_DAT_106ab7c0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079e7dc,"baseclass",0,0,PTR_DAT_106aac0c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079e874,"baseclass",0,0,PTR_DAT_106aac0c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079e90c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079e9bc,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079edbc,"baseclass",0,0,PTR_DAT_106ab378,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079ee54,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079f244,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079f534,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079f7ec,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079f884,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079f994,"baseclass",0,0,PTR_DAT_106c3bf0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079fb84,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_1079fd9c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a0074,"baseclass",0,0,PTR_DAT_106a7c04,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a08cc,"baseclass",0,0,PTR_DAT_106a7c04,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a1954,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a256c,"sdksharedlocaldata",0,0,&DAT_107a1db8,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a2774,"baseclass",0,0,PTR_DAT_106afe48,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a31ec,"baseclass",0,0,PTR_DAT_106aeac0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a3228,"tacint_gamerules_data",0,0,&DAT_107a29a4,FUN_102c17a0)
    FUN_100ff930((undefined4 *)&DAT_107a37fc,"ti_static_globals_data",0,0,&DAT_107a36d8,FUN_102c2b30
    FUN_100ff930((undefined4 *)&DAT_107a38fc,"baseclass",0,0,PTR_DAT_106b6f58,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a3cb4,"baseclass",0,0,PTR_DAT_106c451c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a4164,"baseclass",0,0,PTR_DAT_106c428c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a41e4,"baseclass",0,0,PTR_DAT_106c428c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a4264,"baseclass",0,0,PTR_DAT_106c4290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a42e4,"baseclass",0,0,PTR_DAT_106c44d0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a451c,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a4b7c,"baseclass",0,0,PTR_DAT_106c4420,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a529c,"baseclass",0,0,PTR_DAT_106c44d0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a5734,"baseclass",0,0,PTR_DAT_106c451c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a5824,"baseclass",0,0,PTR_DAT_106a6768,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a5e5c,"baseclass",0,0,PTR_DAT_106a6014,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a5e98,"WeaponTIBaseLocal",0,0,&DAT_107a59d0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a639c,"m_meleeSwingTimer",0x3550,0,&DAT_1077fc3c,FUN_100ff710
    FUN_100ff930((undefined4 *)&DAT_107a641c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a6458,"LocalActiveMeleeData",0,0,&DAT_107a6060,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a64f4,"baseclass",0,0,PTR_DAT_106c49b0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a65cc,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a66a4,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a677c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a6854,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a692c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a6a04,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a6adc,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a6bb4,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a6c8c,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a6d64,"baseclass",0,0,PTR_DAT_106a7290,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a6e3c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a6f2c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a705c,"baseclass",0,0,PTR_DAT_106a7c04,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7134,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7224,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7354,"baseclass",0,0,PTR_DAT_106a7c04,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a742c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7504,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a75dc,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a76b4,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a778c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7864,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a793c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7a14,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7aec,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7bc4,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7c9c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7d74,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7e4c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7f24,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a7ffc,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a80d4,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a81ac,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a8284,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a835c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a8434,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a850c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a85e4,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a86bc,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a8794,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a886c,"baseclass",0,0,PTR_DAT_106c465c,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a8fec,"baseclass",0,0,PTR_DAT_106a6014,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107a90a4,"baseclass",0,0,PTR_DAT_106a6014,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107ad26c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107ad2ec,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107ad6b4,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107ad6f0,"m_EnvWindShared",0x1440,0,&DAT_107ad1c8,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107ad76c,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107ad8dc,"baseclass",0,0,PTR_DAT_106a7ddc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107adb94,"baseclass",0,0,PTR_DAT_106c76cc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107adf2c,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107ae1cc,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107ae5cc,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107ae9cc,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107aebec,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107aee0c,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107aef04,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107af2a4,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107af774,"baseclass",0,0,PTR_DAT_106a6944,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107afbd4,"baseclass",0,0,PTR_DAT_106c70ec,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b00bc,"baseclass",0,0,PTR_DAT_106c7128,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b029c,"baseclass",0,0,PTR_DAT_106c7128,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b03fc,"baseclass",0,0,PTR_DAT_106c7128,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b0524,"baseclass",0,0,PTR_DAT_106c7128,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b069c,"baseclass",0,0,PTR_DAT_106c7128,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b0804,"baseclass",0,0,PTR_DAT_106c7128,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b0974,"baseclass",0,0,PTR_DAT_106c7128,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b0f9c,"baseclass",0,0,PTR_DAT_106c76cc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b11f4,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b1544,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b16c4,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b18fc,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b1b2c,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b1d24,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b1f1c,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b2264,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b22a0,"m_EffectData",0x10,0,&DAT_10767e64,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b24c4,"baseclass",0,0,PTR_DAT_106c76cc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b275c,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b2924,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b2b9c,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b2fa4,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b3194,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b332c,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b3424,"baseclass",0,0,PTR_DAT_106c76cc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b36cc,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b3854,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b39f4,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b3d24,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b3e9c,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b404c,"baseclass",0,0,PTR_DAT_106c76cc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b4144,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b42fc,"baseclass",0,0,PTR_DAT_106c76cc,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b446c,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b462c,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff930((undefined4 *)&DAT_107b484c,"baseclass",0,0,PTR_DAT_106c6db0,FUN_100ff710);
    FUN_100ff990((undefined4 *)&DAT_10714058,"m_flDamage",0x3800,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10714094,"m_DmgRadius",0x37f4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107148ac,"m_flFriction",0x13c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107149d8,"m_vecVelocity[0]",0x10c,4,0,FUN_10090810);
    FUN_100ff990((undefined4 *)&DAT_10714a14,"m_vecVelocity[1]",0x110,4,0,FUN_10090860);
    FUN_100ff990((undefined4 *)&DAT_10714a50,"m_vecVelocity[2]",0x114,4,0,FUN_100908b0);
    FUN_100ff990((undefined4 *)&DAT_10714b40,"m_flConstraintRadius",0x3ca4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10714b7c,"m_flConstraintWidth",0x3ca8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10714bb8,"m_flConstraintSpeedFactor",0x3cac,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10714c30,"m_flDeathTime",0x3cd8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10714ca8,"m_flLaggedMovementValue",0x3e88,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10714ec8,"m_flFOVTime",0x3b44,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715120,"m_flMaxspeed",0x3b94,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715774,"m_flPlaybackRate",&DAT_00001474,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715bcc,"m_fHaloScale",0x14c0,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715c08,"m_fWidth",0x14b4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715c44,"m_fEndWidth",0x14b8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715c80,"m_fFadeLength",&DAT_000014bc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715cbc,"m_fAmplitude",0x14c4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715cf8,"m_fStartFrame",0x14c8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715d34,"m_fSpeed",0x14cc,4,0,FUN_10051d50);
    FUN_100ff990((undefined4 *)&DAT_10715d70,"m_flFrameRate",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715dac,"m_flHDRColorScale",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10715e9c,"m_flFrame",0x14d0,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10716380,"m_flTimePingEffect",0x37f0,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107186cc,"m_flCycle",&DAT_00001470,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107188f0,"m_flModelScale",0x3154,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10718968,"m_flPlaybackRate",&DAT_00001474,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10718bc0,"m_flFrozen",0x3104,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10719338,"m_flCycle",0x1c,4,0,FUN_1006a6c0);
    FUN_100ff990((undefined4 *)&DAT_10719374,"m_flPrevCycle",0x10,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107193b0,"m_flWeight",0x14,4,0,FUN_1006a780);
    FUN_100ff990((undefined4 *)&DAT_107198b0,"m_flWaveHeight",&DAT_00001470,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071a4b8,"m_flElasticity",0x4d4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071a4f4,"m_flShadowCastDistance",0x4d8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071a8f0,"m_fadeMinDist",0x3f4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071a92c,"m_fadeMaxDist",0x3f8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071a968,"m_flFadeScale",0x3fc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071c458,"m_flFOVRate",0x44,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071c494,"m_flFallVelocity",0x58,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071c548,"m_flLastShotROF",0x78,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071c5c0,"m_flStepSize",0x5c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071c7dc,"m_skybox3d.fog.start",0x130,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071c818,"m_skybox3d.fog.end",0x134,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071c854,"m_skybox3d.fog.maxdensity",0x13c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071c890,"m_skybox3d.fog.HDRColorScale",0x15c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071cd10,"m_flMoveTargetTime",&DAT_00001464,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d044,"m_flSpotlightMaxLength",&DAT_00001450,4,0,FUN_100ffbf0
    FUN_100ff990((undefined4 *)&DAT_1071d080,"m_flSpotlightGoalWidth",&DAT_00001454,4,0,FUN_100ffbf0
    FUN_100ff990((undefined4 *)&DAT_1071d0bc,"m_flHDRColorScale",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d134,"m_flRotationSpeed",0x1448,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d3c4,"m_minFalloff",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d400,"m_maxFalloff",&DAT_00001450,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d43c,"m_flCurWeight",&DAT_00001460,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d478,"m_flMaxWeight",&DAT_0000145c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d4b4,"m_flFadeInDuration",&DAT_00001454,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d4f0,"m_flFadeOutDuration",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d72c,"m_MaxWeight",&DAT_0000148c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d768,"m_FadeDuration",0x1490,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d7a4,"m_Weight",0x1494,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d928,"m_Radius",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d9a0,"m_InnerAngle",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071d9dc,"m_OuterAngle",&DAT_00001450,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071da18,"m_SpotRadius",&DAT_00001454,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071db84,"m_flFadeOutStart",0x1448,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071dbc0,"m_flFadeOutLength",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071dbfc,"m_flFadeOutModelStart",&DAT_00001450,4,0,FUN_100ffbf0)
    FUN_100ff990((undefined4 *)&DAT_1071dc38,"m_flFadeOutModelLength",&DAT_00001454,4,0,FUN_100ffbf0
    FUN_100ff990((undefined4 *)&DAT_1071dc74,"m_flFadeInStart",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071dcb0,"m_flFadeInLength",&DAT_0000145c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1071e018,"m_flFrozen",0x1514,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107265f0,"m_flMaxShadowDist",&DAT_00001464,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107266fc,"m_flNearBlurDepth",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726738,"m_flNearFocusDepth",0x1448,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726774,"m_flFarFocusDepth",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107267b0,"m_flFarBlurDepth",&DAT_00001450,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107267ec,"m_flNearBlurRadius",&DAT_00001454,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726828,"m_flFarBlurRadius",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107269e8,"m_fog.start",&DAT_00001460,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726a24,"m_fog.end",&DAT_00001464,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726a60,"m_fog.farz",&DAT_00001468,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726a9c,"m_fog.maxdensity",&DAT_0000146c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726b50,"m_fog.startLerpTo",&DAT_00001470,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726b8c,"m_fog.endLerpTo",&DAT_00001474,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726bc8,"m_fog.maxdensityLerpTo",&DAT_00001478,4,0,FUN_100ffbf0
    FUN_100ff990((undefined4 *)&DAT_10726c04,"m_fog.lerptime",&DAT_0000147c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726c40,"m_fog.duration",0x1480,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726c7c,"m_fog.HDRColorScale",&DAT_0000148c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726cb8,"m_fog.ZoomFogScale",0x1488,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726d90,"m_flSequenceScale",0x34a4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10726f6c,"m_flLightFOV",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107270d4,"m_flBrightnessScale",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072714c,"m_flColorTransitionTime",&DAT_00001470,4,0,
    FUN_100ff990((undefined4 *)&DAT_10727188,"m_flAmbient",&DAT_00001474,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072723c,"m_flNearZ",&DAT_00001478,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727278,"m_flFarZ",&DAT_0000147c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107272f0,"m_flProjectionSize",0x15a4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072732c,"m_flRotation",0x15a8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107273a4,"m_flRange",0x1480,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727508,"m_flOverlayTimes[0]",0x1e38,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727580,"m_flStartTime",0x1e60,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107276b0,"m_flDuration",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727874,"m_flCustomAutoExposureMin",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107278b0,"m_flCustomAutoExposureMax",0x1448,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107278ec,"m_flCustomBloomScale",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727928,"m_flCustomBloomScaleMinimum",&DAT_00001450,4,0,
    FUN_100ff990((undefined4 *)&DAT_10727964,"m_flBloomExponent",&DAT_00001454,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107279a0,"m_flBloomSaturation",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107279dc,"m_flTonemapPercentTarget",&DAT_0000145c,4,0,
    FUN_100ff990((undefined4 *)&DAT_10727a18,"m_flTonemapPercentBrightPixels",&DAT_00001460,4,0,
    FUN_100ff990((undefined4 *)&DAT_10727a54,"m_flTonemapMinAvgLum",&DAT_00001464,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727a90,"m_flTonemapRate",&DAT_00001468,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727b60,"m_flStartScale",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727b9c,"m_flScale",0x1444,4,0,FUN_100a3650);
    FUN_100ff990((undefined4 *)&DAT_10727bd8,"m_flScaleTime",0x1448,4,0,FUN_100a36a0);
    FUN_100ff990((undefined4 *)&DAT_10727e6c,"m_angle",0x341c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727f20,"m_waterLevel",0x3430,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10727ff0,"m_flFadeStartDist",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072802c,"m_flFadeDist",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728068,"m_flTranslucencyLimit",0x1448,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728218,"m_flPanelWidth",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728254,"m_flPanelHeight",&DAT_00001450,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107284e8,"m_flConveyorSpeed",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072863c,"m_flSizeMin",0x1448,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728678,"m_flSizeMax",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072881c,"m_FallSpeed",&DAT_00001460,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728910,"m_flSize",0x1c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072894c,"m_flSpeed",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728aec,"m_acceleration",0x1484,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728b28,"m_currentSpeed",0x1488,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728b64,"m_movementStartTime",&DAT_0000148c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728ba0,"m_movementStartSpeed",0x1490,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728bdc,"m_movementStartZ",0x1494,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10728c18,"m_destinationFloorPosition",&DAT_0000147c,4,0,
    FUN_100ff990((undefined4 *)&DAT_10728c54,"m_maxSpeed",0x1480,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10729204,"m_angRotation[0]",0x124,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10729240,"m_angRotation[1]",0x128,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072927c,"m_angRotation[2]",300,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072943c,"m_ParticleDrawWidth",0x1630,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10729478,"m_ParticleSpacingDistance",0x1634,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107294b4,"m_DensityRampSpeed",0x1638,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107294f0,"m_RotationSpeed",0x163c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072952c,"m_MovementSpeed",0x1640,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10729568,"m_Density",0x1644,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107295a4,"m_maxDrawDistance",0x1648,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10729f14,"m_flGlowProxySize",0x1524,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10729f50,"HDRColorScale",0,0xffffffff,0,FUN_100b01f0);
    FUN_100ff990((undefined4 *)&DAT_1072a1e8,"m_flFramerate",0x1754,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072a260,"m_flFloatLerpStartValue",0x175c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072a29c,"m_flFloatLerpEndValue",0x1760,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072a2d8,"m_flFloatLerpTransitionTime",0x1764,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072a620,"m_flStartTime",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072a838,"m_mass",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072afa8,"m_flStartScale",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072afe4,"m_flScale",0x1444,4,0,FUN_100b58c0);
    FUN_100ff990((undefined4 *)&DAT_1072b020,"m_flScaleTime",0x1448,4,0,FUN_100b5900);
    FUN_100ff990((undefined4 *)&DAT_1072b450,"m_FOV",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072b48c,"m_Resolution",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072b540,"m_flFogStart",&DAT_00001450,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072b57c,"m_flFogEnd",&DAT_00001454,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072b5b8,"m_flFogMaxDensity",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072b86c,"m_fVisibleTime",0x33dc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072b8a8,"m_fRechargeTime",0x33e0,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072bc84,"m_fMass",&DAT_00001450,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072bdf4,"m_fMass",0x33f8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072c9a4,"m_TextureScale",0x1724,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072ca94,"m_Width",0x1730,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072cad0,"m_flScrollSpeed",&DAT_00001474,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072eaa8,"m_flForceClientTime",&DAT_0000144c,4,0,FUN_100bfbc0);
    FUN_100ff990((undefined4 *)&DAT_1072ec30,"m_flShadowMaxDist",&DAT_00001450,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072ee80,"m_fMinSlideTime",0x1570,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072eebc,"m_fMaxSlideTime",0x1574,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072f2e4,"m_minFalloff",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072f320,"m_maxFalloff",&DAT_00001450,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072f35c,"m_flCurWeight",&DAT_00001454,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072f468,"m_flLightScale",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072f4a4,"m_Radius",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072f8f8,"HDRColorScale",0,0xffffffff,0,FUN_100c65d0);
    FUN_100ff990((undefined4 *)&DAT_1072f934,"m_DiscSize",0x15b8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072f970,"m_SunIntensity",0x15bc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072f9ac,"m_DiscFocus",0x15c0,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072f9e8,"m_CoronaSize",0x15c4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1072fa24,"m_CoronaFocus",0x15c8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107301e0,"m_flWidth",0x1448,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1073021c,"m_flHeight",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107304b0,"m_flCheapWaterStartDistance",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107304ec,"m_flCheapWaterEndDistance",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107305e8,"m_flWaveHeight",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107306d8,"m_flMaxOccludeeArea",&DAT_00001460,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10730714,"m_flMinOccluderArea",&DAT_00001464,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10730750,"m_flMaxPropScreenSpaceWidth",&DAT_0000146c,4,0,
    FUN_100ff990((undefined4 *)&DAT_1073078c,"m_flMinPropScreenSpaceWidth",&DAT_00001468,4,0,
    FUN_100ff990((undefined4 *)&DAT_107309a8,"m_atmosphericdensity",&DAT_0000148c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107309e4,"m_kmie",0x1490,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10730a20,"m_zenith",0x1494,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10730a5c,"m_HorizonCorrection",0x1480,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10767ebc,"m_vOrigin.x",0,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10767ef8,"m_vOrigin.y",4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10767f34,"m_vOrigin.z",8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10767f70,"m_vStart.x",0xc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10767fac,"m_vStart.y",0x10,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10767fe8,"m_vStart.z",0x14,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107680d8,"m_flMagnitude",0x3c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10768114,"m_flScale",0x38,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1076836c,"m_flRadius",0x40,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107684ec,"m_flLifetime",8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10768528,"m_flStartSize",0xc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10768564,"m_flEndSize",0x10,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107685fc,"m_flFadeStartDist",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10768638,"m_flFadeEndDist",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077b6ec,"m_fPoseValue",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077b728,"m_fInterpolationTime",&DAT_0000145c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077b7a0,"m_fCycleFrequency",&DAT_00001464,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077b818,"m_fFModTimeOffset",&DAT_0000146c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077b854,"m_fFModRate",&DAT_00001470,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077b890,"m_fFModAmplitude",&DAT_00001474,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077c68c,"m_flBlendWeight",0x37a8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077eaa0,"m_flScaleTime",&DAT_0000147c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077eadc,"m_flSpriteScale",&DAT_00001478,4,0,FUN_10183f00);
    FUN_100ff990((undefined4 *)&DAT_1077eb18,"m_flSpriteFramerate",&DAT_00001464,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077eb54,"m_flGlowProxySize",0x1484,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077eb90,"m_flHDRColorScale",0x1488,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077ebcc,"m_flFrame",&DAT_00001468,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077ec08,"m_flBrightnessTime",&DAT_00001474,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077ee38,"m_flLifeTime",0x1ae4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077ee74,"m_flStartWidth",0x1ae8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077eeb0,"m_flEndWidth",0x1aec,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077eeec,"m_flStartWidthVariance",0x1af0,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077ef28,"m_flTextureRes",0x1af4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077ef64,"m_flMinFadeLength",0x1af8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077efdc,"m_flSkyboxScale",0x1b08,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077fd0c,"m_timestamp",4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077fd8c,"m_duration",8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077fdc8,"m_timestamp",0xc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077ff18,"m_flInterval",0x20c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1077ff54,"m_flFinalValue",0x210,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10793ee4,"m_flScale",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079403c,"m_flScale",0x1444,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107941d8,"m_vecAngles[0]",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10794214,"m_vecAngles[1]",0x24,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10794340,"m_flSpreadInnacuracy",0x38,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079437c,"m_flSpread",0x3c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_10794430,"m_fRange",0x48,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079baec,"m_vecOrigin[2]",0x138,4,0,FUN_100907f0);
    FUN_100ff990((undefined4 *)&DAT_1079bb64,"m_flCurrentLeanValue",0x4624,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079bba0,"m_flCurrentDuckFraction",0x4658,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079bc18,"m_flLastPunchPitch",0x45c4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c2b0,"m_vecOrigin[2]",0x138,4,0,FUN_10090960);
    FUN_100ff990((undefined4 *)&DAT_1079c2ec,"m_vecViewOffset[0]",0x100,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c328,"m_vecViewOffset[1]",0x104,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c364,"m_vecViewOffset[2]",0x108,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c3a0,"m_flCurrentLeanValue",0x4624,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c3dc,"m_flCurrentDuckFraction",0x4658,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c498,"m_angEyeAngles[0]",0x4228,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c4d4,"m_angEyeAngles[1]",0x422c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c894,"m_flGoalSpeedRatio",0x45a0,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c90c,"m_flCurrentLeanValue",0x4624,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079c948,"m_flCurrentDuckFraction",0x4658,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079cd08,"m_flFreezeMovementDuration",0x4690,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079cd44,"m_flFreezeMovementFactor",0x4694,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079d580,"m_flSequenceCycle",0x3450,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079d77c,"m_flExplodeTime",0x3410,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079ef44,"m_flVehicleMass",0x33c8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079f460,"m_vecOrigin[2]",0x138,4,0,FUN_10075d30);
    FUN_100ff990((undefined4 *)&DAT_1079f8c0,"m_flDurationLocked",0x33c0,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_1079f8fc,"m_flInitialLockTime",0x33c4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a09f8,"m_flMaxSpeed",0x3994,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a0cc8,"m_flExplodeBackRecoverTime",0x38d8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a0f00,"m_vecAngles[0]",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a0f3c,"m_vecAngles[1]",0x24,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a102c,"m_flSpread",0x34,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a1f50,"m_flStamina",0x18,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a1f8c,"m_flLeanTime",0x1c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a316c,"m_fTimeOfDay",0x44,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a4828,"m_vecNetworkedPhysicsVelocity[0]",0x3510,4,0,
    FUN_100ff990((undefined4 *)&DAT_107a4864,"m_vecNetworkedPhysicsVelocity[1]",0x3514,4,0,
    FUN_100ff990((undefined4 *)&DAT_107a48a0,"m_vecNetworkedPhysicsVelocity[2]",0x3518,4,0,
    FUN_100ff990((undefined4 *)&DAT_107a4bf4,"m_flCollisionTorqueYaw",0x3bcc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a4d98,"m_angRotation[0]",0x124,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a4dd4,"m_angRotation[1]",0x128,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a4e10,"m_angRotation[2]",300,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a4e88,"m_vecOrigin[2]",0x138,4,0,FUN_10075d30);
    FUN_100ff990((undefined4 *)&DAT_107a55e4,"m_flRefuelingTruckBombTimer",0x9bdc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a6180,"m_flNextTraceAttackTime",0x34a8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a61bc,"m_flRestrictViewTime",0x3510,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a61f8,"m_flStunnedTime",0x3520,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107a6234,"m_flComboEnergy",0x3524,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ad494,"m_flMinGustDelay",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ad4d0,"m_flMaxGustDelay",0x24,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ad5c0,"m_flInitialWindSpeed",0x70,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ad5fc,"m_flStartTime",4,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ad638,"m_flGustDuration",0x28,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ad990,"m_scrollRate",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ad9cc,"m_flWidth",&DAT_0000145c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107adfa4,"m_FadeStartTime",0x153c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107adfe0,"m_FadeEndTime",0x1540,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae208,"m_SpawnRate",0x1528,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae2bc,"m_ParticleLifetime",0x1548,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae2f8,"m_StopEmitTime",0x154c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae334,"m_MinSpeed",0x1550,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae370,"m_MaxSpeed",0x1554,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae3ac,"m_MinDirectedSpeed",0x1558,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae3e8,"m_MaxDirectedSpeed",0x155c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae424,"m_StartSize",0x1560,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae460,"m_EndSize",0x1564,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae49c,"m_SpawnRadius",0x1568,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae550,"m_Opacity",0x1544,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae608,"m_SpawnRate",0x1528,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae6bc,"m_ParticleLifetime",0x1548,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae6f8,"m_StopEmitTime",0x154c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae734,"m_MinSpeed",0x1550,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae770,"m_MaxSpeed",0x1554,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae7ac,"m_StartSize",0x1558,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae7e8,"m_EndSize",0x155c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae824,"m_SpawnRadius",0x1560,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae8d8,"m_Opacity",0x1544,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107ae950,"m_flFlareScale",0x1584,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aea08,"m_flSpawnRate",0x1528,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aea44,"m_flParticleLifetime",0x152c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aea80,"m_flStartSize",0x1530,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aeabc,"m_flEndSize",0x1534,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aeaf8,"m_flSpawnRadius",0x1538,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aec28,"m_flSpawnRate",0x1534,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aeca0,"m_flParticleLifetime",0x1538,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aecdc,"m_flStartSize",0x153c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aed18,"m_flEndSize",0x1540,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aed54,"m_flSpawnRadius",0x1544,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aee84,"m_flLifetime",0x152c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aef40,"m_SpawnRate",0x1528,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aefb8,"m_ParticleLifetime",0x153c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107aeff4,"m_StopEmitTime",0x1544,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af030,"m_MinSpeed",0x1548,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af06c,"m_MaxSpeed",0x154c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af0a8,"m_MinDirectedSpeed",0x1550,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af0e4,"m_MaxDirectedSpeed",0x1554,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af120,"m_StartSize",0x1558,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af15c,"m_EndSize",0x155c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af198,"m_SpawnRadius",0x1560,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af210,"m_Opacity",0x1538,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af2e0,"m_SpreadSpeed",0x1578,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af31c,"m_Speed",0x157c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af358,"m_StartSize",0x1580,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af394,"m_EndSize",0x1584,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af3d0,"m_Rate",0x1588,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af40c,"m_JetLength",0x158c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af484,"m_flBaseSpread",&DAT_00001594,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af4c0,"m_flTwist",0x15e8,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af4fc,"m_flRollSpeed",0x1624,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af5ec,"m_AmbientLight.m_flIntensity",0x15b0,4,0,FUN_100ffbf0)
    FUN_100ff990((undefined4 *)&DAT_107af6a0,"m_DirLight.m_flIntensity",0x15cc,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af7b0,"m_SpreadSpeed",0x1528,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af7ec,"m_Speed",0x152c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af828,"m_StartSize",0x1530,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af864,"m_EndSize",0x1534,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af8a0,"m_Rate",0x1538,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107af8dc,"m_JetLength",0x153c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107afa08,"m_flRollSpeed",0x1550,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107afd5c,"m_fLife",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107afd98,"m_fWidth",0x24,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107afdd4,"m_fEndWidth",0x28,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107afe4c,"m_fAmplitude",0x30,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b09ec,"m_flStartRadius",0x58,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b0a28,"m_flEndRadius",0x5c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b126c,"m_angRotation[0]",0x1c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b12a8,"m_angRotation[1]",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b12e4,"m_angRotation[2]",0x24,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b144c,"m_fTime",0x4c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b17b4,"m_fHeight",0x28,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b182c,"m_fSpeed",0x34,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b19ec,"m_flWaterZ",0x28,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b1a64,"m_fSpeed",0x34,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b2084,"m_fRadius",0x1c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b20c0,"m_fTime",0x30,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b20fc,"m_fDecay",0x34,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b253c,"m_fScale",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b2cc8,"m_flWidth",0x40,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b2d04,"m_flHeight",0x44,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b2d40,"m_flShardSize",0x48,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b3058,"m_fScale",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b3094,"m_fLife",0x24,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b3780,"m_flScale",0x28,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b3890,"m_vecOrigin[0]",0x10,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b38cc,"m_vecOrigin[1]",0x14,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b3908,"m_vecOrigin[2]",0x18,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b3a6c,"m_angRotation[0]",0x1c,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b3aa8,"m_angRotation[1]",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b3ae4,"m_angRotation[2]",0x24,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b3f50,"m_flDistance",0x28,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b41f8,"m_fScale",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b4520,"m_fScale",0x20,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b471c,"m_fNoise",0x30,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b49d4,"m_angRotation[0]",0x124,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b4a10,"m_angRotation[1]",0x128,4,0,FUN_100ffbf0);
    FUN_100ff990((undefined4 *)&DAT_107b4a4c,"m_angRotation[2]",300,4,0,FUN_100ffbf0);
    FUN_100ff9f0(&DAT_1071c368,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107133b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10713464,"m_nNextThinkTick",0xf0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107134e0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10713594,"m_iPrimaryAmmoType",0x33d8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107135d0,"m_iSecondaryAmmoType",0x33dc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10713610,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10713700,"m_iViewModelIndex",0x33cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071373c,"m_iWorldModelIndex",0x33d0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10713778,"m_iState",0x33d4,4,0,FUN_10046620);
    FUN_100ff9f0((undefined4 *)&DAT_10713fe0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107140d0,"m_bIsLive",0x37f1,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714184,"m_fFlags",0xfc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107141e0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714778,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107147b4,"deadflag",4,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107147f8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714924,"m_nTickBase",0x3d44,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714960,"m_nNextThinkTick",0xf0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714c6c,"m_nWaterLevel",0x35a,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714d20,"m_nContinuousUseType",0x3b1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714d60,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714e50,"m_iFOV",0x3b20,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714e8c,"m_iFOVStart",0x3b24,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714f04,"m_iDefaultFOV",0x3c80,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10714f40,"m_afPhysicsFlags",0x3c5c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715030,"m_iHealth",0xf4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071506c,"m_iMaxHealth",0x3edc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107150a8,"m_iBonusProgress",0x3b8c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107150e4,"m_iBonusChallenge",0x3b90,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071515c,"m_fFlags",0xfc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715198,"m_iObserverMode",0x3cb4,4,0,FUN_100909a0);
    FUN_100ff9f0((undefined4 *)&DAT_10715300,"m_ladderSurfaceProps",0x3b3c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071533c,"m_ubEFNoInterpParity",0x3ecc,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071542c,"m_vphysicsCollisionState",0x3ba8,4,0,(undefined *)0x0)
    FUN_100ff9f0((undefined4 *)&DAT_10715648,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107156c0,"m_nSkin",&DAT_00001478,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107156fc,"m_nBody",&DAT_0000147c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715738,"m_nSequence",&DAT_000032d4,4,0,FUN_10050500);
    FUN_100ff9f0((undefined4 *)&DAT_107157b0,"m_fEffects",0xe8,4,0,FUN_100504e0);
    FUN_100ff9f0((undefined4 *)&DAT_107157ec,"m_nAnimationParity",0x33cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715864,"m_nNewSequenceParity",0x1484,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107158a0,"m_nResetEventsParity",0x1488,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107158dc,"m_nMuzzleFlashParity",0x14a4,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715970,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107159e8,"m_bIsPlayerSimulated",0x13d9,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715a28,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715a64,"m_nBeamType",&DAT_0000145c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715aa0,"m_nBeamFlags",&DAT_00001460,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715adc,"m_nNumBeamEnts",&DAT_00001450,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715b90,"m_nHaloIndex",0x1458,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715de8,"m_clrRender",0x6c,4,0,FUN_10075ef0);
    FUN_100ff9f0((undefined4 *)&DAT_10715e24,"m_nRenderFX",0x356,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715e60,"m_nRenderMode",0x357,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715ed8,"m_nClipStyle",0x14d4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715f50,"m_nModelIndex",0x354,2,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10715fc8,"moveparent",0x140,4,0,FUN_10177570);
    FUN_100ff9f0((undefined4 *)&DAT_107160b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10716128,"m_lifeState",0x35b,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10716218,"m_iDeathPose",0x37f4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10716254,"m_iDeathFrame",0x37f8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10716290,"m_iSpeedModRadius",0x37fc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107162cc,"m_iSpeedModSpeed",0x3800,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10716308,"m_bSpeedModActive",0x3807,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718690,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718710,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718788,"m_nSequence",&DAT_000032d4,4,0,FUN_10064070);
    FUN_100ff9f0((undefined4 *)&DAT_107187c4,"m_nForceBone",0x30cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071883c,"m_nSkin",&DAT_00001478,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718878,"m_nBody",&DAT_0000147c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107188b4,"m_nHitboxSet",&DAT_00001454,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107189e0,"m_bClientSideAnimation",0x32b4,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718a1c,"m_bClientSideFrameReset",0x3100,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718a94,"m_nNewSequenceParity",0x1484,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718ad0,"m_nResetEventsParity",0x1488,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718b0c,"m_nMuzzleFlashParity",0x14a4,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718bfc,"m_ScaleType",0x3158,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718cf0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718d68,"m_modelIndex",0x1440,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10718da4,"m_solidIndex",0x1444,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107192c0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107192fc,"m_nSequence",0xc,4,0,FUN_1006a750);
    FUN_100ff9f0((undefined4 *)&DAT_107193ec,"m_nOrder",8,4,0,FUN_1006a710);
    FUN_100ff9f0((undefined4 *)&DAT_10719430,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107194b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107195f0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071966c,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107196b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107197a0,"m_LastHitGroup",0x37e8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10719838,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10719fc0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10719ffc,"m_flAnimTime",0x35c,4,0,FUN_100759b0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a040,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a0b8,"m_bIsPlayerSimulated",0x13d9,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a0f8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a170,"m_flSimulationTime",0x364,4,0,FUN_10076010);
    FUN_100ff9f0((undefined4 *)&DAT_1071a1ac,"m_cellbits",0x70,4,0,FUN_10075a60);
    FUN_100ff9f0((undefined4 *)&DAT_1071a1e8,"m_cellX",0x78,4,0,FUN_10075da0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a224,"m_cellY",0x7c,4,0,FUN_10075e10);
    FUN_100ff9f0((undefined4 *)&DAT_1071a260,"m_cellZ",0x80,4,0,FUN_10075e80);
    FUN_100ff9f0((undefined4 *)&DAT_1071a314,"m_nModelIndex",0x354,2,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a350,"m_fEffects",0xe8,4,0,FUN_10075f40);
    FUN_100ff9f0((undefined4 *)&DAT_1071a38c,"m_nRenderMode",0x357,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a3c8,"m_nRenderFX",0x356,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a404,"m_clrRender",0x6c,4,0,FUN_10075ef0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a440,"m_iTeamNum",0xec,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a47c,"m_CollisionGroup",0x5b4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a5a8,"moveparent",0x140,4,0,FUN_10177570);
    FUN_100ff9f0((undefined4 *)&DAT_1071a5e4,"m_iParentAttachment",0x3ec,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a698,"movetype",0,-1,0,FUN_10075ff0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a6d4,"movecollide",0,-1,0,FUN_10075fd0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a788,"m_iTextureFrameIndex",0x13e1,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a83c,"m_bSimulatedEveryTick",0x13da,1,0,FUN_101775d0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a878,"m_bAnimatedEveryTick",0x13db,1,0,FUN_101775d0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a9a4,"m_fGameFlags",0x143c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071a9e0,"m_lifeState",0x35b,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071b9f0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071c41c,"m_iHideHUD",0x48,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071c584,"m_bDrawViewmodel",0x7f,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071c5fc,"m_skybox3d.scale",0xfc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071c674,"m_skybox3d.area",0x10c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071c6b0,"m_skybox3d.fog.enable",0x154,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071c6ec,"m_skybox3d.fog.blend",0x155,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071c764,"m_skybox3d.fog.colorPrimary",0x120,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_1071c7a0,"m_skybox3d.fog.colorSecondary",0x124,4,0,FUN_100ffbf0)
    FUN_100ff9f0((undefined4 *)&DAT_1071caac,"m_audio.soundscapeIndex",0x1c4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071cae8,"m_audio.localBits",0x1c8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071cb24,"m_audio.entIndex",0x1cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071cc20,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071ccd4,"m_movementType",&DAT_00001460,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071cd90,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071cf18,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071cf90,"m_nHaloIndex",0x1440,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071d0f8,"m_nRotationAxis",0x1444,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071d190,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071d310,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071d678,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071d838,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071d8b0,"m_Flags",0x1440,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071d8ec,"m_LightStyle",0x1441,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071d964,"m_Exponent",0x1448,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071dad0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071dcec,"m_nDissolveType",&DAT_00001460,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071dd64,"m_nMagnitude",&DAT_00001474,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071ddc0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071df28,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071e0b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071e128,"m_iMaterialName",0x1528,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1071e290,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10726410,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10726578,"m_LightColor",0x145a,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_107265b4,"m_LightColorScale",&DAT_00001460,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_10726648,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107266c0,"m_bDOFEnabled",0x1440,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10726880,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107268bc,"m_fog.enable",0x1484,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107268f8,"m_fog.blend",0x1485,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10726970,"m_fog.colorPrimary",&DAT_00001450,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_107269ac,"m_fog.colorSecondary",&DAT_00001454,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_10726ad8,"m_fog.colorPrimaryLerpTo",0x1458,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_10726b14,"m_fog.colorSecondaryLerpTo",&DAT_0000145c,4,0,
    FUN_100ff9f0((undefined4 *)&DAT_10726d18,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10726e40,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727110,"m_LightColor",&DAT_0000145c,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_10727200,"m_nSpotlightTextureFrame",0x1590,4,0,(undefined *)0x0)
    FUN_100ff9f0((undefined4 *)&DAT_107272b4,"m_nShadowQuality",&DAT_00001594,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727368,"m_iStyle",0x1598,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727418,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107275bc,"m_iDesiredOverlay",0x1e64,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727638,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107276ec,"m_nType",0x1444,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727748,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107277c0,"m_bUseCustomAutoExposureMin",0x1440,1,0,
    FUN_100ff9f0((undefined4 *)&DAT_107277fc,"m_bUseCustomAutoExposureMax",0x1441,1,0,
    FUN_100ff9f0((undefined4 *)&DAT_10727838,"m_bUseCustomBloomScale",0x1442,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727ae8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727c14,"m_nFlags",&DAT_0000144c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727c50,"m_nFlameModelIndex",&DAT_00001450,4,0,(undefined *)0x0
    FUN_100ff9f0((undefined4 *)&DAT_10727c8c,"m_nFlameFromAboveModelIndex",&DAT_00001454,4,0,
    FUN_100ff9f0((undefined4 *)&DAT_10727d40,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727ea8,"m_nModelIndex",0x354,2,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727ee4,"m_lifeState",0x35b,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10727f78,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107280a4,"m_iBackgroundModelIndex",&DAT_0000144c,4,0,
    FUN_100ff9f0((undefined4 *)&DAT_10728128,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107281a0,"m_nNumWide",0x1444,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107281dc,"m_nNumHigh",0x1448,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728308,"m_bIsBroken",&DAT_0000146c,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728344,"m_nSurfaceType",&DAT_00001470,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107283d8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728470,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728588,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107285c4,"m_Color",0x1440,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_10728600,"m_SpawnRate",0x1444,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107286b4,"m_LifetimeMin",&DAT_00001454,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107286f0,"m_LifetimeMax",0x1458,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072872c,"m_DustFlags",&DAT_00001464,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728768,"m_SpeedMax",&DAT_00001450,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107287a4,"m_DistMax",&DAT_0000145c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107287e0,"m_nModelIndex",0x354,2,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728898,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728a38,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728ce8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728d60,"m_nDisappearMinDist",0x1440,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728d9c,"m_nDisappearMaxDist",0x1444,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728df8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728e90,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728f44,"m_fFlags",0xfc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10728fa0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729054,"m_nOccluderIndex",0x1440,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107290b8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729150,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107292b8,"m_flSimulationTime",0x364,4,0,FUN_10076010);
    FUN_100ff9f0((undefined4 *)&DAT_10729310,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729388,"m_Color1",0x1528,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_107293c4,"m_Color2",0x152c,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_107295e0,"m_spawnflags",0x164c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729678,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729b28,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729b64,"m_iTextureFrameIndex",0x13e1,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729ba0,"m_iOverlayID",0x1440,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729c80,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729cbc,"m_clrRender",0x6c,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_10729cf8,"m_nHorizontalSize",0x1440,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729d34,"m_nVerticalSize",0x1444,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729d70,"m_nMinDist",0x1448,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729dac,"m_nMaxDist",&DAT_0000144c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729de8,"m_nOuterMaxDist",&DAT_00001450,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729e24,"m_spawnflags",&DAT_00001454,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10729ed8,"moveparent",0x140,4,0,FUN_10177570);
    FUN_100ff9f0((undefined4 *)&DAT_1072a008,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a134,"m_iFrameStart",0x1748,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a170,"m_iFrameEnd",0x174c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a1ac,"m_bWrap",0x1750,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a224,"m_bNewAnimCommandsSemaphore",0x1758,1,0,
    FUN_100ff9f0((undefined4 *)&DAT_1072a314,"m_bFloatLerpWrap",0x1768,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a350,"m_nModifyMode",6000,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a3c8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a440,"m_fEffects",0xe8,4,0,FUN_10075f40);
    FUN_100ff9f0((undefined4 *)&DAT_1072a4b8,"moveparent",0x140,4,0,FUN_10177570);
    FUN_100ff9f0((undefined4 *)&DAT_1072a4f4,"m_iParentAttachment",0x3ec,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a56c,"m_iEffectIndex",0x1440,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a5e4,"m_nStopType",0x1444,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a7c0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a878,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072a910,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072aa00,"m_nShatterFlags",0x33f8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072ab80,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072ac34,"m_spawnflags",0x3cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072ac90,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072af30,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b05c,"m_nFlags",&DAT_0000144c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b098,"m_nPlasmaModelIndex",&DAT_00001450,4,0,
    FUN_100ff9f0((undefined4 *)&DAT_1072b0d4,"m_nPlasmaModelIndex2",&DAT_00001454,4,0,
    FUN_100ff9f0((undefined4 *)&DAT_1072b110,"m_nGlowModelIndex",0x1458,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b1c8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b3d8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b4c8,"m_bFogEnable",0x1448,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b504,"m_FogColor",0x1449,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b5f4,"m_bActive",&DAT_0000145c,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b630,"m_bUseScreenAspectRatio",0x145d,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b6a8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b7b8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072b960,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072ba58,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072bad0,"m_eDoorState",0x33f0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072bb50,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072bbd0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072bc48,"m_iPhysicsMode",&DAT_0000144c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072bcc8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072bdb8,"m_iPhysicsMode",0x33f4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072bec8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072bf04,"m_iCurrentMaxRagdollCount",0x1440,4,0,(undefined *)0x0
    FUN_100ff9f0((undefined4 *)&DAT_1072c710,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072c74c,"m_nChangeCount",0x172c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072c788,"m_iRopeMaterialModelIndex",&DAT_0000147c,4,0,
    FUN_100ff9f0((undefined4 *)&DAT_1072c83c,"m_iStartAttachment",0x1714,2,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072c878,"m_iEndAttachment",0x1716,2,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072c8b4,"m_fLockedPoints",0x1728,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072c8f0,"m_Slack",0x1720,4,0,FUN_100bd000);
    FUN_100ff9f0((undefined4 *)&DAT_1072c92c,"m_RopeLength",0x171c,4,0,FUN_100bd000);
    FUN_100ff9f0((undefined4 *)&DAT_1072c968,"m_RopeFlags",&DAT_00001478,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072c9e0,"m_nSegments",0x1708,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072ca58,"m_Subdiv",0x1718,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072cb48,"moveparent",0x140,4,0,FUN_10177570);
    FUN_100ff9f0((undefined4 *)&DAT_1072cb84,"m_iParentAttachment",0x3ec,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072cbc0,"m_nMinCPULevel",0x13dd,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072cbfc,"m_nMaxCPULevel",0x13de,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072cc38,"m_nMinGPULevel",0x13df,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072cc74,"m_nMaxGPULevel",0x13e0,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072e940,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072e9b8,"m_nSceneStringIndex",&DAT_00001450,4,0,
    FUN_100ff9f0((undefined4 *)&DAT_1072eb40,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072ebf4,"m_shadowColor",&DAT_0000144c,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_1072ed18,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072eef8,"m_iCycleType",0x157c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f230,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f3f0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f588,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f600,"m_bMeasurePerf",0x1441,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f63c,"m_bDisplayPerf",0x1440,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f6a0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f6dc,"m_clrRender",0x6c,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f718,"m_clrOverlay",0x1590,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f790,"m_bOn",0x15a8,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f7cc,"m_nSize",&DAT_00001594,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f808,"m_nOverlaySize",0x1598,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f844,"m_nMaterial",0x15b0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f880,"m_nOverlayMaterial",0x15b4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072f8bc,"m_RayStrength",0x15ac,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072fa90,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072facc,"m_iTeamNum",0x1488,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072fb08,"m_iScore",&DAT_00001474,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072fb44,"m_iRoundsWon",&DAT_00001478,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072fbbc,"player_array_element",0,-1,0,FUN_100c6af0);
    FUN_100ff9f0((undefined4 *)&DAT_1072fc50,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072fda0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072fddc,"m_WithProxy",0x1440,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072fe20,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072ff30,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1072ffe4,"m_spawnflags",0x3cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10730028,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107300a8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10730168,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10730258,"m_fScreenFlags",&DAT_00001474,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10730294,"m_nPanelName",&DAT_00001450,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1073030c,"m_nOverlayMaterial",&DAT_00001470,4,0,(undefined *)0x0
    FUN_100ff9f0((undefined4 *)&DAT_107303a0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10730438,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10730570,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1073069c,"m_bStartDark",&DAT_0000145c,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10730804,"m_bColdWorld",&DAT_00001470,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10730840,"m_iTimeOfDay",&DAT_00001474,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1073087c,"m_nMaxBlobCount",0x1598,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107308b8,"m_SkyColor",&DAT_00001478,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_107308f4,"m_SkyColor2",&DAT_0000147c,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_10730930,"m_nightskycolor",0x1484,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_1073096c,"m_nightskycolor2",0x1488,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_10767200,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107672b4,"m_nSolidType",0x22,1,0,FUN_100f0850);
    FUN_100ff9f0((undefined4 *)&DAT_107672f0,"m_usSolidFlags",0x20,2,0,FUN_100f0870);
    FUN_100ff9f0((undefined4 *)&DAT_1076732c,"m_nSurroundType",0x2a,1,0,FUN_100f07e0);
    FUN_100ff9f0((undefined4 *)&DAT_10767368,"m_triggerBloat",0x23,1,0,FUN_100f07e0);
    FUN_100ff9f0((undefined4 *)&DAT_10767e80,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1076809c,"m_fFlags",0x30,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10768150,"m_nAttachmentIndex",0x44,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107681c8,"m_iEffectName",100,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10768204,"m_nMaterial",0x4c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10768240,"m_nDamageType",0x50,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1076827c,"m_nHitBox",0x54,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107682b8,"entindex",0,-1,0,FUN_10100460);
    FUN_100ff9f0((undefined4 *)&DAT_107682f4,"m_nOtherEntIndex",0x58,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10768330,"m_nColor",0x5c,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107683a8,"m_ParticleColor",0x5e,4,0,FUN_10177540);
    FUN_100ff9f0((undefined4 *)&DAT_107684b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107685c0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10769040,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107691d0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10769a20,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1076dfc0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1076dffc,"m_iGlowType",4,4,0,FUN_10114d40);
    FUN_100ff9f0((undefined4 *)&DAT_1076e038,"m_nGlowRange",8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1076e074,"m_nGlowRangeInverse",0xc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1076e0b0,"m_glowColorOverride",0x10,4,0,FUN_10114ce0);
    FUN_100ff9f0((undefined4 *)&DAT_1076e0ec,"m_iGlowTeam",0x14,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10778078,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077b5c0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077b7dc,"m_nFModType",&DAT_00001468,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077bb98,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077c4e8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077c6c8,"m_nOverlaySequence",0x37b0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077c708,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077c780,"m_boneIndexAttached",0x37e8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077c7bc,"m_ragdollAttachedObjectIndex",0x37e4,4,0,
    FUN_100ff9f0((undefined4 *)&DAT_1077e9b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077ea64,"m_nAttachment",&DAT_00001460,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077ec44,"m_nBrightness",&DAT_00001470,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077ecd0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077edc0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077f3b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077f464,"m_bSendHandle",0x1444,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077fcd0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077fd50,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077fe28,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077fedc,"m_nBucketCount",0x208,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1077ff90,"m_nCompressionType",0x214,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10793e30,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10793ea8,"m_bEmit",0x1440,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10793f88,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10794000,"m_bEmit",0x1440,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107940b4,"m_iAlpha",&DAT_00001454,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10794160,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10794250,"m_iWeaponID",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079428c,"m_iAddonBits",0x30,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107942c8,"m_iSeed",0x34,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_10794304,"m_iPlayer",0x10,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107943f4,"m_iDamage",0x44,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079afc8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079b980,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079b9f8,"m_iEvent",0x14,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ba38,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ba74,"m_iShotsFired",17000,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079bdbc,"m_iActiveGoggles",0x4584,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079beac,"m_iZoneFlags",0x46a0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079bf60,"m_iRequisitionPoints",0x4590,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079bf9c,"m_iCurrentWaypointGoal",0x4594,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c17c,"m_iDramaCameraType",0x48f0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c238,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c420,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c5c4,"m_iWeaponBits",0x48ac,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c678,"m_iCarriedObject",0x45e8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c72c,"m_iVehicleSlot",0x48b8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c768,"m_iPlayerState",0x4420,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c7a4,"m_iSpawnInterpCounter",0x4414,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c7e0,"m_iShouldBecomeRagdoll",0x4408,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079c858,"m_iLimpSide",0x459c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cab0,"m_mDir",0x4600,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079caec,"m_iLeanState",0x45ac,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cba0,"m_iRopeLength",0x4608,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cbdc,"m_iSquad",&DAT_0000460c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cc18,"m_iHeadBodyGroup",0x4610,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cc54,"m_iGibbedBodyGroup",0x4614,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cc90,"m_iMediKitHealth",0x46a4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cd80,"m_iFreezeMode",0x4698,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cf24,"m_iActiveGrenadeType",0x456c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cf60,"m_iNumNearTeamates",0x46a8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cf9c,"m_iPlayerType",0x46ac,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079cfd8,"m_iGameTypeRole",0x46b0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d014,"m_iEquipmentQueueSlot",0x46b8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d3a0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d454,"m_nModelIndex",0x354,2,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d490,"m_nForceBone",0x30cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d544,"m_nSequence",0x343c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d6c8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d740,"m_BombStatus",0x340c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d7d8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d850,"m_iCO2Left",0x33e0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079d960,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079dac0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079db78,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079dcc0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079dd38,"m_iShieldMaterial",0x33e8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079dd74,"m_iPenetrateCount",0x33ec,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ddd0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079deb0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079df28,"m_iCurrentKillCount",0x14d0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079df64,"m_iTotalKillCount",0x14d4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079dfa0,"m_iAlphaPlan",0x1490,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079dfdc,"m_iBetaPlan",0x1494,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e018,"m_iCharliePlan",0x1498,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e054,"m_iActiveSquadsThisStage",0x149c,4,0,(undefined *)0x0)
    FUN_100ff9f0((undefined4 *)&DAT_1079e090,"m_iScoreTotal",0x14c4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e0cc,"m_iHostagesRescued",0x14c8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e108,"m_iHostagesKilled",0x14cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e200,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e280,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e300,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e398,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e410,"m_iActiveIssueIndex",&DAT_0000144c,4,0,FUN_1027b240);
    FUN_100ff9f0((undefined4 *)&DAT_1079e44c,"m_iOnlyTeamToVote",&DAT_00001450,4,0,(undefined *)0x0)
    FUN_100ff9f0((undefined4 *)&DAT_1079e4c4,"m_nPotentialVotes",&DAT_0000146c,4,0,(undefined *)0x0)
    FUN_100ff9f0((undefined4 *)&DAT_1079e630,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e6a8,"m_iZoneType",&DAT_00001478,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e6e4,"m_iStageAvailable",&DAT_0000147c,4,0,(undefined *)0x0)
    FUN_100ff9f0((undefined4 *)&DAT_1079e720,"m_iBombZoneID",0x1480,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e7a0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e838,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e8d0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e980,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079e9f8,"m_iPlaneType",0x33c0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ea34,"m_iRightWing_BrakeFlap",0x33c4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ea70,"m_iRightWing_BrakeFlap2",0x33c8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079eaac,"m_iLeftWing_BrakeFlap",0x33cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079eae8,"m_iLeftWing_BrakeFlap2",0x33d0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079eb24,"m_iTailMiddleFlap",0x33d4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079eb60,"m_iTailLeftFlap",0x33d8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079eb9c,"m_iTailRightFlap",0x33dc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ebd8,"m_iFrontWheelTurn",0x33e0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ec14,"m_iEngineSpin",0x33e4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ed80,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ee18,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f208,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f2f8,"m_iHealth",0xf4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f334,"m_iNPCDriverModel",0x3414,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f370,"m_iTeleportState",0x3418,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f3ac,"m_iCarType",0x341c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f3e8,"m_iVehicleColour",0x3420,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f4f8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f7b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f848,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079f958,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079fb48,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079fbc0,"m_spawnflags",0x3cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079fd60,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079fe8c,"m_fireCount",0x1f3c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079ff80,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_1079fff8,"m_iActivity",0x14,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0038,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a00b0,"m_State",0x38b4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a01dc,"m_iHealth",0xf4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0218,"m_iMaxHealth",0x380c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a07d8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0850,"m_iEvent",0x14,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0890,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0908,"m_State",0x3998,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0980,"m_iHealth",0xf4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a09bc,"m_iMaxHealth",0x3814,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0ae8,"m_iWalkStyle",0x38bc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0b24,"m_iCrouchWalkStyle",0x38c0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0b60,"m_iDancingActivity",0x38c4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0c14,"m_iNPCType",0x38e4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0c8c,"m_iVehicleSlot",0x38e0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0d04,"m_iCarriedObject",0x38e8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0e88,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0f78,"m_iWeaponID",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0fb4,"m_iSeed",0x30,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a0ff0,"m_iHostage",0x10,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a1918,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a1de8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a1e24,"m_iZoomLevel",0x40,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a1ed8,"m_iPreviousZoomLevel",0x4c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a1f14,"m_iSpeedScale",100,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2008,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2044,"m_iMovementState",0x68,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2170,"m_iReloadWhenEmpty",0xc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a21ac,"m_iCharacterItemID",0x88,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a21e8,"m_iHelmetItemID",0x8c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2224,"m_iMaskItemID",0x90,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2260,"m_iGlovesItemID",0x94,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a229c,"m_iShoesItemID",0x98,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a22d8,"m_iHolsterItemID",0x9c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2314,"m_iMeleeWeaponItemID",0xa0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2350,"m_iPrimaryWeaponItemID",0xa4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a238c,"m_iSecondaryWeaponItemID",0xa8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a23c8,"m_iEquipmentItemID",0xac,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2404,"m_iRequisitionTier1ItemID",0xb0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2440,"m_iRequisitionTier2ItemID",0xb4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2738,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2aa0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2adc,"m_iRoundState",0x50,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2b18,"m_iPreviousRoundState",0x54,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2b54,"m_iCurrentRound",0x58,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2b90,"m_iCurrentStage",0x5c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2bcc,"m_iMaxStages",0x60,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2c08,"m_iNumScorableHostages",0x90,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2c44,"m_iHostagesCTRescued",0x7c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2c80,"m_iHostagesTerRescued",0x80,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2cbc,"m_iGameType",0x404ac,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2d34,"m_iClockDuration",0x6c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2de8,"m_iPercentageVIPTravelled",0x78,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2ed8,"m_iAttackingTeam",0x48,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a2f14,"m_iDefendingTeam",0x4c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a31b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a3740,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a37c0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a38c0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a3c78,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a4128,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a41a8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a4228,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a42a8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a44e0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a45d0,"m_iDamageFlags",0x36dc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a46c0,"m_iMaxSlots",0x36e0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a46fc,"m_iVehicleType",0x33c4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a4738,"m_iStartHealth",0x33cc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a4b40,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a4c6c,"m_iHealth",0xf4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a4ca8,"m_iVehicleColour",0x3bd4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5260,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a52d8,"m_iGear",0x9b20,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5314,"m_iWheelRadius",0x9bb0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5350,"m_iWheelRadiusFlat",0x9bb4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a538c,"m_iWheelSpringConstant",0x9bb8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a53c8,"m_iWheelDamp",0x9bbc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5404,"m_iWheelFriction",0x9bc0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5440,"m_iWheelFrictionAngular",0x9bc4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a547c,"m_iWheelTurnSpeed",0x9bc8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a54b8,"m_iEngineForce",0x9bcc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a54f4,"m_iSkidTheta",0x9bd0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5530,"m_iSpinModifier",0x9bd8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a556c,"engineState",0x4384,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a55a8,"m_iWheelTurn",0x9bd4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a565c,"m_iTireStatus",0x9be4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a56f8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a57e8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a589c,"m_iGrenadeType",0x381c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5bc0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5c74,"m_iLastAnim",0x34b4,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5d28,"m_iSecondaryPressedIncrement",0x34d8,4,0,
    FUN_100ff9f0((undefined4 *)&DAT_107a5d64,"m_nAttack2Debounce",0x34dc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5da0,"m_iFixItemID",0x34e0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5e20,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a5ed4,"m_iAccessories",0x34b8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6090,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6144,"m_iNumOfTraceAttacks",0x34ac,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a62e8,"m_iNextPrimaryAttackIndex",0x3548,4,0,(undefined *)0x0
    FUN_100ff9f0((undefined4 *)&DAT_107a63e0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a64b8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6590,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6668,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6740,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6818,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a68f0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a69c8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6aa0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6b78,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6c50,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6d28,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6e00,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a6ef0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7020,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a70f8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a71e8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7318,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a73f0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a74c8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a75a0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7678,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7750,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7828,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7900,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a79d8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7ab0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7b88,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7c60,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7cd8,"m_iInSpecialReload",0x351c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7d38,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7db0,"m_iInSpecialReload",0x351c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7e10,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7e88,"m_iInSpecialReload",0x351c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7ee8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7f60,"m_iInSpecialReload",0x351c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a7fc0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a8098,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a8170,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a8248,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a8320,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a83f8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a84d0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a85a8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a8680,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a8758,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a8830,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a8fb0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107a9068,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ac448,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad230,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad2b0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad328,"m_nPrecipType",&DAT_00001468,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad368,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad3a4,"m_iMinWind",0xc,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad3e0,"m_iMaxWind",0x10,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad41c,"m_iMinGust",0x18,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad458,"m_iMaxGust",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad50c,"m_iGustDirChange",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad548,"m_iWindSeed",8,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad584,"m_iInitialWindDir",0x6c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad678,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad730,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad7a8,"m_nDensity",0x1440,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad7e4,"m_nLifetime",0x1444,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad820,"m_nSpeed",0x1448,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad85c,"m_bEmit",&DAT_0000144c,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ad8a0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107adb58,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107adbd0,"m_nType",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107adc68,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107adef0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ae01c,"m_GrenType",0x1529,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ae058,"m_CurrentStage",0x1528,1,0,FUN_10334170);
    FUN_100ff9f0((undefined4 *)&DAT_107ae190,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ae4d8,"m_bEmit",0x1578,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ae514,"m_nAttachment",0x157c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ae590,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ae860,"m_bEmit",0x1570,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ae89c,"m_nAttachment",0x1574,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ae914,"m_bDamaged",0x1571,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107ae990,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107aebb0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107aed90,"m_bEmit",0x1554,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107aedd0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107aee48,"m_nAttachment",0x1528,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107aeec8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107af1d4,"m_bEmit",0x1570,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107af268,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107af448,"m_bEmit",0x1590,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107af738,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107af918,"m_bEmit",0x1540,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107af954,"m_bFaceLeft",0x1548,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107af990,"m_nType",0x1544,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107af9cc,"m_spawnflags",0x154c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107afae0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107afb98,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107afc30,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107afc6c,"m_nModelIndex",0x10,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107afca8,"m_nHaloIndex",0x14,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107afce4,"m_nStartFrame",0x18,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107afd20,"m_nFrameRate",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107afe10,"m_nFadeLength",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107afe88,"m_nSpeed",0x44,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107affb4,"m_nFlags",0x48,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0080,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b00f8,"m_nStartEntity",0x4c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0134,"m_nEndEntity",0x50,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0260,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b02d8,"m_nStartEntity",0x4c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0314,"m_nEndEntity",0x50,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b03c0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0438,"m_iEntIndex",0x4c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b04e8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0560,"m_nStartEntity",0x4c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b059c,"m_nEndEntity",0x50,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0660,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b07c8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0840,"m_nStartEntity",0x4c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b087c,"m_nEndEntity",0x50,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0938,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0b58,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0b94,"m_nPoints",0xd0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0cb0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0e54,"m_nSprayModel",0x3c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0e90,"m_nDropModel",0x38,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0ecc,"m_nSize",0x40,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b0f60,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1104,"m_nAmount",0x38,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b11b8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1398,"m_nModelIndex",0x44,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b13d4,"m_nRandomization",0x40,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1410,"m_nCount",0x48,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1488,"m_nFlags",0x50,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1508,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b15bc,"m_nEntity",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b15f8,"m_nIndex",0x20,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1688,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1778,"m_nModelIndex",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b17f0,"m_nCount",0x30,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b18c0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b19b0,"m_nModelIndex",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1a28,"m_nCount",0x30,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1af0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1be0,"m_nModelIndex",0x28,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1c1c,"m_nLifeTime",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1ce8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1dd8,"m_nEntity",0x28,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1e14,"m_nHitbox",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1e50,"m_nIndex",0x30,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b1ee0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2048,"exponent",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2228,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2328,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b23dc,"m_bExplosive",0x28,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2488,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2500,"m_nModelIndex",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2578,"m_nFrameRate",0x24,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b25b4,"m_nFlags",0x28,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b262c,"m_chMaterialType",0x38,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2668,"m_nRadius",0x3c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b26a4,"m_nMagnitude",0x40,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2720,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2798,"m_nEntity",0x10,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b27d4,"m_nModelIndex",0x14,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2810,"m_nDensity",0x18,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b284c,"m_nCurrent",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b28e8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b29d8,"m_nEntity",0x34,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2a14,"m_nIndex",0x38,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2a50,"m_chMaterialType",0x3c,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2b60,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2d7c,"m_nSurfaceType",0x50,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2db8,"m_uchFrontColor[0]",0x54,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2df4,"m_uchFrontColor[1]",0x55,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2e30,"m_uchFrontColor[2]",0x56,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2e6c,"m_uchBackColor[0]",0x57,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2ea8,"m_uchBackColor[1]",0x58,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2ee4,"m_uchBackColor[2]",0x59,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b2f68,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b301c,"m_nModelIndex",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b30d0,"m_nBrightness",0x28,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3158,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3248,"m_iType",0x28,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3284,"m_ucFlags",0x2c,1,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b32f0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3368,"m_nPlayer",0x10,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b33e8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3460,"m_nModelIndex",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b349c,"m_nReversed",0x20,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3690,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b37bc,"m_nType",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3818,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b39b8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3b5c,"m_nModelIndex",0x34,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3b98,"m_nFlags",0x3c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3bd4,"m_nSkin",0x38,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3c10,"m_nEffects",0x40,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3ce8,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3d9c,"m_nEntity",0x20,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3dd8,"m_nPlayer",0x10,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3e60,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b3f8c,"m_nIndex",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4010,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4108,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b41bc,"m_nModelIndex",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4234,"m_nFrameRate",0x24,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b42c0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4338,"m_nMagnitude",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4374,"m_nTrailLength",0x20,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4430,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b44e4,"m_nModelIndex",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b455c,"m_nBrightness",0x24,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b45f0,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b46e0,"m_nModelIndex",0x28,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4758,"m_nCount",0x34,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4794,"m_nSpeed",0x2c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4810,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b48c4,"m_nIndex",0x1c,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4920,"should_never_see_this",0,4,0,(undefined *)0x0);
    FUN_100ff9f0((undefined4 *)&DAT_107b495c,"m_clrRender",0x6c,4,0,FUN_100ffbf0);
    FUN_100ff9f0((undefined4 *)&DAT_107b4a88,"moveparent",0x140,4,0,FUN_10177570);
    FUN_100ffac0((undefined4 *)&DAT_10715288,"m_szLastPlaceName",0x3ea8,0x12,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1071a620,"m_iName",0x14c,0x104,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1071a65c,"m_iSignifierName",0x250,0x104,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1071d52c,"m_netLookupFilename",&DAT_00001464,0x104,0,
    FUN_100ffac0((undefined4 *)&DAT_1071d7e0,"m_lookupFilename",0x1498,0x104,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_107271c4,"m_SpotlightTextureName",0x1484,0x104,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_10727490,"m_iszOverlayNames[0]",0x1440,0xff,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_10729400,"m_MaterialName",0x1530,0xff,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1072a080,"m_szMaterialName",0x1440,0xff,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1072a0bc,"m_szMaterialVar",0x153f,0xff,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1072a0f8,"m_szMaterialVarValue",0x163e,0xff,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1072a65c,"m_szSnapshotFileName",&DAT_00001450,0x104,0,
    FUN_100ffac0((undefined4 *)&DAT_1072edcc,"m_szDisplayText",0x1441,0x80,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1072ee08,"m_szSlideshowDirectory",0x14c1,0x80,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1072fb80,"m_szTeamname",&DAT_00001454,0x20,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1072fcc8,"m_SoundName",&DAT_00001468,0x40,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_1072fd04,"m_iszSpriteName",0x14a8,0x100,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_107307c8,"m_iszDetailSpriteMaterial",0x1498,0x100,0,FUN_100ffc50
    FUN_100ffac0((undefined4 *)&DAT_1079db38,"m_strObjectName",0x33e8,0x40,0,FUN_100ffc50);
    FUN_100ffac0((undefined4 *)&DAT_107a460c,"m_vehicleScript",0x35cc,0x100,0,FUN_100ffc50);
    FUN_100ffb30((undefined4 *)&DAT_10714148,"m_vecVelocity",0x10c,0xc,0,FUN_10075f60);
    FUN_100ffb30((undefined4 *)&DAT_10714a8c,"m_vecBaseVelocity",0x118,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10714b04,"m_vecConstraintCenter",0x3c98,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107152c4,"m_vecLadderNormal",0x3b58,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10715f14,"m_vecEndPos",0x14d8,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10715f8c,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10718800,"m_vecForce",0x30c0,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071a29c,"m_vecOrigin",0x130,0xc,0,FUN_10075b40);
    FUN_100ffb30((undefined4 *)&DAT_1071a2d8,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c4d0,"m_vecPunchAngle",0x60,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c50c,"m_vecPunchAngleVel",0x6c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c638,"m_skybox3d.origin",0x100,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c728,"m_skybox3d.fog.dirPrimary",0x114,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c8cc,"m_audio.localSound[0]",0x164,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c908,"m_audio.localSound[1]",0x170,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c944,"m_audio.localSound[2]",0x17c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c980,"m_audio.localSound[3]",0x188,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c9bc,"m_audio.localSound[4]",0x194,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071c9f8,"m_audio.localSound[5]",0x1a0,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071ca34,"m_audio.localSound[6]",0x1ac,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071ca70,"m_audio.localSound[7]",0x1b8,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071cc98,"m_vecFinalDest",&DAT_00001454,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071d388,"m_vecOrigin",0x1440,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071dd28,"m_vDissolverOrigin",&DAT_00001468,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071dfa0,"m_vFreezingOrigin",0x1440,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1071e308,"m_vecColor",0x1568,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10726488,"m_shadowDirection",0x1440,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107264c4,"m_envLightShadowDirection",&DAT_0000144c,0xc,0,
    FUN_100ffb30((undefined4 *)&DAT_10726934,"m_fog.dirPrimary",0x1444,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10727d7c,"m_poolOrigin",0x3424,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10728290,"m_vNormal",&DAT_00001454,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107282cc,"m_vCorner",&DAT_00001460,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10728988,"m_vecDirection",0x24,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10728ab0,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10728f08,"m_vecVelocity",0x10c,0xc,0,FUN_10075f60);
    FUN_100ffb30((undefined4 *)&DAT_107291c8,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10729e60,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10729e9c,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072a404,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072a530,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072aa3c,"m_vShatterPosition",0x33fc,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072aa78,"m_vShatterForce",0x3408,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072bd40,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072bd7c,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072be30,"m_collisionMins",0x33fc,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072be6c,"m_collisionMaxs",0x3408,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072cb0c,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072ebb8,"m_shadowDirection",0x1440,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072f2a8,"m_vecOrigin",0x1440,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1072f754,"m_vDirection",0x159c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10730624,"m_WorldMins",0x1444,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10730660,"m_WorldMaxs",&DAT_00001450,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1076723c,"m_vecMins",8,0xc,0,FUN_100f0830);
    FUN_100ffb30((undefined4 *)&DAT_10767278,"m_vecMaxs",0x14,0xc,0,FUN_100f0810);
    FUN_100ffb30((undefined4 *)&DAT_107673a4,"m_vecSpecifiedSurroundingMins",0x2c,0xc,0,FUN_100f08d0
    FUN_100ffb30((undefined4 *)&DAT_107673e0,"m_vecSpecifiedSurroundingMaxs",0x38,0xc,0,FUN_100f08d0
    FUN_100ffb30((undefined4 *)&DAT_10768024,"m_vAngles",0x24,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10768060,"m_vNormal",0x18,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107690b8,"m_vecPlayerMountPositionTop",&DAT_00001460,0xc,0,
    FUN_100ffb30((undefined4 *)&DAT_107690f4,"m_vecPlayerMountPositionBottom",&DAT_0000146c,0xc,0,
    FUN_100ffb30((undefined4 *)&DAT_10769130,"m_vecLadderDir",0x1440,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1077c560,"m_ragAngles[0]",0x3540,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1077c5d8,"m_ragPos[0]",0x33c0,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1077c7f8,"m_attachmentPointBoneSpace",0x37c0,0xc,0,FUN_100ffca0)
    FUN_100ffb30((undefined4 *)&DAT_1077c834,"m_attachmentPointRagdollSpace",0x37d8,0xc,0,
    FUN_100ffb30((undefined4 *)&DAT_1077efa0,"m_vecSkyboxOrigin",0x1afc,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10793f20,"m_vecColor",0x1448,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_10794078,"m_vecColor",0x1448,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079419c,"m_vecOrigin",0x14,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079bb28,"m_vecViewOffset",0x100,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079bbdc,"m_angLastPunchAngle",0x45b8,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079c104,"m_vecDramaPosition",0x48d8,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079c140,"m_vecDramaPosition2",0x48e4,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079c984,"m_vecRollVector",0x45c8,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079c9c0,"m_vecRappelPoint",0x45d4,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079ca38,"m_vecRappelWallNormal",0x45f0,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079d050,"m_vecZoomSway",0x44f8,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079d3dc,"m_vecRagdollOrigin",0x341c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079d4cc,"m_vecForce",0x30c0,0xc,0,FUN_10276cb0);
    FUN_100ffb30((undefined4 *)&DAT_1079d508,"m_angVelocity",0x3430,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079d8c8,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079d904,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079da14,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079da50,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079e144,"m_vDesignatedAlphaSpawn",0x14a0,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079e180,"m_vDesignatedBravoSpawn",0x14ac,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079e1bc,"m_vDesignatedCharlieSpawn",0x14b8,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079ed04,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079ed40,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079eecc,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079ef08,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_1079f49c,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a00ec,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a0128,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a0d7c,"m_vecGoal",0x38f0,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a0db8,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a0df4,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a0ec4,"m_vecOrigin",0x14,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a20bc,"m_vMovementStateLocation",0x70,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a20f8,"m_aMovementStateOrientation",0x7c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a2d70,"m_vecVIPCaseGoal",0x404bc,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a2dac,"m_vecVIPCarGoal",0x404c8,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a4bb8,"m_vecCollisionForce",0x3bc0,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a5860,"m_vInitialVelocity",0x3810,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a58d8,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a5914,"m_angRotation",0x124,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107a6270,"m_vecLastBonePos",0x3514,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107ad918,"m_targetPosition",0x1440,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107ad954,"m_controlPosition",&DAT_0000144c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107adc0c,"m_vecDirection",0x20,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107adca4,"m_vOrigin",0x1530,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107adce0,"m_vDirection",0x153c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107ae244,"m_StartColor",0x152c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107ae280,"m_EndColor",0x1538,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107ae644,"m_StartColor",0x152c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107ae680,"m_EndColor",0x1538,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107aec64,"m_vecEndColor",0x1528,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107aef7c,"m_Color",0x152c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107af574,"m_AmbientLight.m_vPos",0x1598,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107af5b0,"m_AmbientLight.m_vColor",0x15a4,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107af628,"m_DirLight.m_vPos",0x15b4,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107af664,"m_DirLight.m_vColor",0x15c0,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107af6dc,"m_vWind",0x15dc,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107afb1c,"m_vecPos",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107afb58,"m_vecDir",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b0170,"m_vecStartPoint",0x54,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b01ac,"m_vecEndPoint",0x60,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b06d8,"m_vecStartPoint",0x4c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b0714,"m_vecEndPoint",0x58,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b09b0,"m_vecCenter",0x4c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b0bd0,"m_vecPoints[0]",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b0cec,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b0d28,"m_vecDirection",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b0fd8,"m_vecDirection",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1230,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1320,"m_vecSize",0x28,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b135c,"m_vecVelocity",0x34,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1580,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1700,"m_vecMins",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b173c,"m_vecMaxs",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1938,"m_vecMins",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1974,"m_vecMaxs",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1b68,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1ba4,"m_vecVelocity",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1d60,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1d9c,"m_vecStart",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b1f58,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b2364,"m_vecPos",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b23a0,"m_vecDir",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b25f0,"m_vecNormal",0x2c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b2960,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b299c,"m_vecDirection",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b2bd8,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b2c14,"m_vecAngles",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b2c50,"m_vecForce",0x28,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b2c8c,"m_vecForcePos",0x34,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b2fe0,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b31d0,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b320c,"m_vecNormal",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b3708,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b3744,"m_vecAngles",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b3a30,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b3b20,"m_vecVelocity",0x28,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b3d60,"m_vecOrigin",0x14,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b3ed8,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b3f14,"m_angRotation",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b4088,"m_vecEnd",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b4180,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b43b0,"m_vecDir",0x24,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b44a8,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b4668,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b46a4,"m_vecDirection",0x1c,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b4888,"m_vecOrigin",0x10,0xc,0,FUN_100ffca0);
    FUN_100ffb30((undefined4 *)&DAT_107b4998,"m_vecOrigin",0x130,0xc,0,FUN_100ffca0);
    FUN_100ffb90((undefined4 *)&DAT_1079bab0,"m_vecOrigin",0x130,0xc,0,FUN_100907c0);
    FUN_100ffb90((undefined4 *)&DAT_1079c274,"m_vecOrigin",0x130,0xc,0,FUN_10090900);
    FUN_100ffb90((undefined4 *)&DAT_1079f424,"m_vecOrigin",0x130,0xc,0,FUN_10075c60);
    FUN_100ffb90((undefined4 *)&DAT_107a4e4c,"m_vecOrigin",0x130,0xc,0,FUN_10075c60);
    FUN_100ffdb0((undefined4 *)&DAT_1071946c,"m_AnimOverlay",0x33c0,0x28,(int)FUN_1006a9c0,
    FUN_100ffdb0((undefined4 *)&DAT_1072eae4,"m_hActorList",(int)&DAT_0000145c,4,(int)FUN_100bfce0,
    FUN_1010ac10(&local_10,(byte *)"CreateDebris 2",(float *)(param_1 + 4),&local_4c);
    FUN_10119890(&local_2c,"scripts/game_textures",0);
    FUN_10119890(&local_2c,"scripts/game_textures2",0);
    FUN_10119890(&local_2c,"scripts/hud_textures",0);
    FUN_10119890(&local_2c,"scripts/instructor_modtextures",0);
    FUN_10119890(&local_2c,"scripts/instructor_textures",0);
    FUN_10119890(&local_2c,"scripts/mod_textures",0);
    FUN_1011e360("models/brokenglass/glassbroken_01a");
    FUN_1011e360("models/brokenglass/glassbroken_01b");
    FUN_1011e360("models/brokenglass/glassbroken_01c");
    FUN_1011e360("models/brokenglass/glassbroken_01d");
    FUN_1011e360("models/brokenglass/glassbroken_02a");
    FUN_1011e360("models/brokenglass/glassbroken_02b");
    FUN_1011e360("models/brokenglass/glassbroken_02c");
    FUN_1011e360("models/brokenglass/glassbroken_02d");
    FUN_1011e360("models/brokenglass/glassbroken_03a");
    FUN_1011e360("models/brokenglass/glassbroken_03b");
    FUN_1011e360("models/brokenglass/glassbroken_03c");
    FUN_1011e360("models/brokenglass/glassbroken_03d");
    FUN_1011e360("models/brokenglass/glassbroken_solid");
    FUN_1011e360("models/brokentile/tilebroken_01a");
    FUN_1011e360("models/brokentile/tilebroken_01b");
    FUN_1011e360("models/brokentile/tilebroken_01c");
    FUN_1011e360("models/brokentile/tilebroken_01d");
    FUN_1011e360("models/brokentile/tilebroken_02a");
    FUN_1011e360("models/brokentile/tilebroken_02b");
    FUN_1011e360("models/brokentile/tilebroken_02c");
    FUN_1011e360("models/brokentile/tilebroken_02d");
    FUN_1011e360("models/brokentile/tilebroken_03a");
    FUN_1011e360("models/brokentile/tilebroken_03b");
    FUN_1011e360("models/brokentile/tilebroken_03c");
    FUN_1011e360("models/brokentile/tilebroken_03d");
    FUN_1011e380("env_sparks_directional");
    FUN_1011e380("env_sparks_omni");
    FUN_1011efb0("dynamicmodel_debug.txt",
    FUN_10123410((int)&DAT_1064ae18,puVar2,0,"Schedule",*(int *)(param_1 + 0x2c));
    FUN_10124100((int *)"player_regenerates_health",piVar3,(uint)(*(int *)(local_8 + 0x30) != 0));
    FUN_10131b60(&DAT_10770f5c,"");
    FUN_10131b60((int *)&DAT_1076fabc,"");
    FUN_10131b60((int *)&DAT_1076fac8,"");
    FUN_10131b60((int *)&DAT_1076fad4,"");
    FUN_10131b60((int *)&DAT_1076fae0,"");
    FUN_10131b60((int *)&DAT_1076faec,"");
    FUN_10131b60((int *)&DAT_1076faf8,"");
    FUN_10131b60((int *)&DAT_10770f50,"");
    FUN_10131b60((int *)&DAT_10770f68,"");
    FUN_10131b60((int *)&DAT_10770f74,"");
    FUN_10131b60((int *)&DAT_10770f80,"");
    FUN_10131b60((int *)&DAT_10770f8c,"");
    FUN_10131b60((int *)&DAT_10770f98,"");
    FUN_10131b60((int *)&DAT_10770fa4,"");
    FUN_10131b60((int *)&DAT_10770fb0,"");
    FUN_10131b60((int *)&DAT_10770fc8,"");
    FUN_10131b60((int *)&DAT_10770fe0,"");
    FUN_10131b60((int *)&DAT_10770ff8,"");
    FUN_10131b60((int *)&DAT_10771028,"");
    FUN_10131b60((int *)&DAT_10771034,"");
    FUN_10131b60((int *)&DAT_10772144,"");
    FUN_10131b60((int *)&DAT_10772150,"");
    FUN_10131b60((int *)&DAT_1077215c,"");
    FUN_10131b60((int *)&DAT_10772168,"");
    FUN_10131b60((int *)&DAT_10772174,"");
    FUN_10131b60((int *)&DAT_10772180,"");
    FUN_10131b60((int *)&DAT_10772198,"");
    FUN_10131b60((int *)&DAT_107721a4,"");
    FUN_10131b60((int *)&DAT_107721bc,"");
    FUN_10131b60((int *)&DAT_107721ec,"");
    FUN_10131b60((int *)&DAT_107721f8,"");
    FUN_10131b60((int *)&DAT_10772204,"");
    FUN_10131cf0(&DAT_10770f5c,"");
    FUN_10131cf0((int *)&DAT_1076fabc,"");
    FUN_10131cf0((int *)&DAT_1076fac8,"");
    FUN_10131cf0((int *)&DAT_1076fad4,"");
    FUN_10131cf0((int *)&DAT_1076fae0,"");
    FUN_10131cf0((int *)&DAT_1076faec,"");
    FUN_10131cf0((int *)&DAT_1076faf8,"");
    FUN_10131cf0((int *)&DAT_10770f50,"");
    FUN_10131cf0((int *)&DAT_10770f68,"");
    FUN_10131cf0((int *)&DAT_10770f74,"");
    FUN_10131cf0((int *)&DAT_10770f80,"");
    FUN_10131cf0((int *)&DAT_10770f8c,"");
    FUN_10131cf0((int *)&DAT_10770f98,"");
    FUN_10131cf0((int *)&DAT_10770fa4,"");
    FUN_10131cf0((int *)&DAT_10770fb0,"");
    FUN_10131cf0((int *)&DAT_10770fc8,"");
    FUN_10131cf0((int *)&DAT_10770fe0,"");
    FUN_10131cf0((int *)&DAT_10770fec,"");
    FUN_10131cf0((int *)&DAT_10770ff8,"");
    FUN_10131cf0((int *)&DAT_10771034,"");
    FUN_10131cf0((int *)&DAT_10772144,"");
    FUN_10131cf0((int *)&DAT_10772150,"");
    FUN_10131cf0((int *)&DAT_1077215c,"");
    FUN_10131cf0((int *)&DAT_10772168,"");
    FUN_10131cf0((int *)&DAT_10772174,"");
    FUN_10131cf0((int *)&DAT_10772180,"");
    FUN_10131cf0((int *)&DAT_1077218c,"");
    FUN_10131cf0((int *)&DAT_10772198,"");
    FUN_10131cf0((int *)&DAT_107721a4,"");
    FUN_10131cf0((int *)&DAT_107721bc,"");
    FUN_10131cf0((int *)&DAT_107721ec,"");
    FUN_10131cf0((int *)&DAT_107721f8,"");
    FUN_10131cf0((int *)&DAT_10772204,"");
    FUN_10135420("ai_ally_speech_manager",-1,'\x01');
    FUN_10137bb0(&local_10,(byte *)"hammerid",local_201c);
    FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
    FUN_1013aba0(&local_10,(byte *)"pradius",(char *)local_858);
    FUN_10142270((int)this,(int)local_20,(byte *)"NET_Tick");
    FUN_10142270((int)this,(int)local_20,(byte *)"Temp Entities");
    FUN_10142270(param_1,(int)param_4,(byte *)"Delta Entities Overhead");
    FUN_10142270(param_1,(int)param_4,(byte *)"Delta Finish");
    FUN_10142270(param_1,(int)param_4,(byte *)"Delta: [%d] deletions");
    FUN_101422f0((int)this + -4,iVar4 - iVar3,(byte *)"NetMessage %s");
    FUN_101422f0((int)this,0,(byte *)"Finished [delta %s]");
    FUN_101422f0((int)this,local_14 - iVar5,(byte *)"Total Delta");
    FUN_10142830((int)"env_sparks_omni",*puVar3,*(undefined4 *)(puVar3 + 1),
    FUN_10142830((int)"impact_physics_dust",local_1c,local_14,CONCAT44(uVar1,uVar1),uVar1,local_10,
    FUN_101428a0((int)"fx_heal",CONCAT44(param_4,param_3),param_5,*(undefined8 *)((int)this + 0x21c)
    FUN_101428a0((int)"impact_explosive_ammo_small",*(undefined8 *)(param_3 + 0xc),
    FUN_101428a0((int)"impact_fx_candy",local_10,local_14,DAT_106a6510,DAT_106a6518,0,'\0',
    FUN_101428a0((int)"impact_physics_dust",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,0
    FUN_101428a0((int)"impact_physics_sparks",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8
    FUN_101428a0((int)"vehicle_critical_hit",*(undefined8 *)(param_3 + 0xc),
    FUN_10142900((int)"fx_heli_engine_smoke",1,param_1,iVar2,cVar10,uVar12,iVar13,cVar14);
    FUN_10145ee0((int)"water_spurt",
    FUN_10146090((int)"command_target_ping",*param_1,*(undefined4 *)(param_1 + 1),uVar1,fVar3,
    FUN_10146100((int)"blood_incapacitated",local_c,local_94,local_34,local_2c,
    FUN_10146100((int)"car_explosion",*param_1,*(undefined4 *)(param_1 + 1),local_a4,local_9c,
    FUN_10146100((int)"car_explosion_blacksmoke",*param_1,*(undefined4 *)(param_1 + 1),local_a4,
    FUN_10146100((int)"car_explosion_blacksmoke",*param_1,*(undefined4 *)(param_1 + 1),local_bc,
    FUN_10146100((int)"dirt_vertical_explode",*param_1,*(undefined4 *)(param_1 + 1),param_2,param_3,
    FUN_10146100((int)"dust_impact",*param_1,*(undefined4 *)(param_1 + 1),local_18,local_10,
    FUN_10146100((int)"explodefx_mannequin",*param_3,*(undefined4 *)(param_3 + 1),*param_4,
    FUN_10146100((int)"headshot_gibs",*param_2,*(undefined4 *)(param_2 + 1),
    FUN_10146100((int)"impact_explosive_ammo_world",*puVar1,param_1[5],local_10,local_8,(int *)0x0,
    FUN_10146100((int)"impact_fx_glass_BIG",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
    FUN_10146100((int)"impact_fx_grass_BIG",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
    FUN_10146100((int)"impact_fx_leaf_BIG",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
    FUN_10146100((int)"impact_physics_dust",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
    FUN_10146100((int)"impact_physics_sparks",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8
    FUN_10146100((int)"impact_player",*(undefined8 *)(param_3 + 0xc),*(undefined4 *)(param_3 + 0x14)
    FUN_10146100((int)"impact_player",CONCAT44(fStack12,local_10),local_8,local_1c,local_14,
    FUN_10146100((int)"impact_player_shield",*puVar3,*(float *)(puVar3 + 1) + 37.0,0,0,(int *)0x0,
    FUN_10146100((int)"playerland_generic",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
    FUN_10146100((int)"steam_spew",*puVar2,*(undefined4 *)(puVar2 + 1),*puVar1,
    FUN_10146100((int)"torso_gibs",local_1c,local_14,0xc2b40000,0,(int *)0x0,'\x01',-1);
    FUN_10146100((int)"vehicle_critical_hit",*(undefined8 *)(param_3 + 0xc),
    FUN_10146100((int)"water_bulletsplash",*param_1,*(undefined4 *)(param_1 + 1),local_20,local_18,
    FUN_10146100((int)"water_splash_02_surface2",local_88,local_80,CONCAT44(fStack28,local_20),
    FUN_10146160((int)"777_left_engine_air_vortex",5,piVar1,uVar5,cVar12,iVar3,uVar16,cVar18);
    FUN_10146160((int)"777_left_engine_heatwave",5,piVar1,uVar5,cVar12,iVar3,uVar16,cVar18);
    FUN_10146160((int)"777_right_engine_heatwave",5,piVar1,uVar5,cVar12,iVar3,uVar16,cVar18);
    FUN_10146160((int)"CO2_spew",5,param_1,uVar2,cVar1,iVar3,uVar4,cVar5);
    FUN_10146160((int)"blood_headshot",5,param_1,uVar1,cVar5,iVar2,uVar8,cVar9);
    FUN_10146160((int)"blood_headshot",5,param_1,uVar2,cVar1,iVar3,uVar7,cVar8);
    FUN_10146160((int)"car_explosion",1,piVar1,0xffffffff,'\0',-1,0,'\0');
    FUN_10146160((int)"dissolve",1,piVar3,0xffffffff,'\0',-1,0,'\0');
    FUN_10146160((int)"dog_bite_bloodtrail",5,piVar1,uVar2,cVar3,iVar4,uVar5,cVar6);
    FUN_10146160((int)"large_metal_gib_trail",1,this_00,0xffffffff,'\0',-1,0,'\0');
    FUN_10146160((int)"propane_spew",5,piVar4,uVar1,cVar6,iVar7,uVar8,cVar9);
    FUN_10146160((int)"smoke_engine_spew",5,piVar1,uVar2,cVar3,iVar4,uVar5,cVar6);
    FUN_10146160((int)"smokegrenade_fuse",1,piVar1,0xffffffff,'\0',-1,0,'\0');
    FUN_10146160((int)"spray_vomit",5,piVar1,uVar2,cVar3,iVar4,uVar5,cVar6);
    FUN_10146160((int)"vehicle_smoke_spew",1,piVar1,0xffffffff,'\0',-1,0,'\0');
    FUN_10146330(piVar1,(int)"refuel_truck_smokescreen");
    FUN_10146910((void *)((int)this + 0x4a8),(undefined4 *)"Rocket_Smoke",1,0xffffffff,
    FUN_10146910(param_1 + 300,(undefined4 *)"smouldering_character",1,0xffffffff,DAT_107c1064,
    FUN_10147290((void *)(param_1 + 0x4b0),(undefined4 *)"indicator_capture",1,-1);
    FUN_10147290((void *)(param_1 + 0x4b0),(undefined4 *)"indicator_contain",1,-1);
    FUN_10147290((void *)(param_1 + 0x4b0),(undefined4 *)"indicator_escort",1,-1);
    FUN_10147290((void *)(param_1 + 0x4b0),(undefined4 *)"indicator_kill",1,-1);
    FUN_10147290((void *)(param_1 + 0x4b0),(undefined4 *)"indicator_rescue",1,-1);
    FUN_10149bd0(local_150,(byte *)"L%03i_%03i_%03i_%03i_%i_%04i%02i%02i%02i%02i_");
    FUN_10149bd0(local_254,(byte *)"%s/%s");
    FUN_10149bf0(&DAT_10640a50,(byte *)"L %02i/%02i/%04i - %02i:%02i:%02i: %s");
    FUN_1014a8a0(param_1,(byte *)"Log file closed.\n");
    FUN_1014f6b0(this,"CSimpleEmitter");
    FUN_1014f730(this,"C_Embers");
    FUN_1014f730(this,"FX_ElectricSpark 1");
    FUN_1014f730(this,"FX_MetalScrape 1");
    FUN_1014f730(this,"FX_Smoke");
    FUN_1014fb30(&local_8,"FireTrail");
    FUN_1014fb30(&local_c,"MuzzleFlash");
    FUN_10155b90((int)this,(byte *)"Sending game stats to server %s.");
    FUN_10155b90((int)this,(byte *)"Waiting for response.");
    FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Connection failed.");
    FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Receive failed.");
    FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Send failed.");
    FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Socket creation failed.");
    FUN_10159870((byte *)"increased_maxplayers",(byte *)0x0);
    FUN_10159870((byte *)"low_violence",(byte *)0x0);
    FUN_101599e0((int)param_1,extraout_EDX_00,(undefined (*) [16])"empty");
    FUN_10159ce0(&DAT_10641138,(byte *)"%s %s the game\n");
    FUN_1015da50((byte *)"increased_maxplayers",'\0');
    FUN_1015da50((byte *)"low_violence",'\0');
    FUN_10167820(param_1,(int **)"iostream stream error",(int *)0x15);
    FUN_10169ff0((int)local_10,local_14,local_c,iVar9,(byte *)"color (%d %d %d %d)\n");
    FUN_10169ff0((int)local_10,local_14,local_c,local_1c,(byte *)"EHandle (NULL)");
    FUN_10169ff0((int)local_8,param_1,local_10,iVar8,(byte *)"color (%d %d %d %d)\n");
    FUN_10169ff0((int)local_8,param_1,local_10,iVar8,(byte *)"integer (%i->%s)\n");
    FUN_10169ff0((int)local_8,param_1,local_10,local_1c,(byte *)"EHandle (NULL)");
    FUN_1016a2a0(local_44,"C_BaseEntity::SaveData",iVar1,piVar4);
    FUN_1016a590((int)this,(int)param_1,(byte *)"EHandle (NULL)");
    FUN_1016a590((int)this,(int)param_1,(byte *)"bool (%s)");
    FUN_1016a590((int)this,(int)param_1,(byte *)"color32 (%d %d %d %d)");
    FUN_1016a590((int)this,(int)param_1,(byte *)"float (%f)");
    FUN_1016a590((int)this,(int)param_1,(byte *)"integer (%i)");
    FUN_1016a590((int)this,(int)param_1,(byte *)"quaternion (%f %f %f %f)");
    FUN_1016a590((int)this,(int)param_1,(byte *)"short (%i)");
    FUN_1016a590((int)this,(int)param_1,(byte *)"string (%s)");
    FUN_1016a590((int)this,(int)param_1,(byte *)"vector (%f %f %f)");
    FUN_1016c890(2,"heartbeat\n",0);
    FUN_1016c890(iVar2,"cmd bugunpause\n",0);
    FUN_1016c890(iVar3,"cmd bugpause\n",0);
    FUN_1016c890(iVar3,"cmd bugunpause\n",0);
    FUN_1016c890(iVar3,"fog_enableskybox 0\n",iVar2);
    FUN_10177470((undefined4 *)&DAT_10714870,"m_bSwitchingWeapon",0x3c78,1);
    FUN_10177470((undefined4 *)&DAT_10714bf4,"m_bConstraintPastRadius",0x3cb0,1);
    FUN_10177470((undefined4 *)&DAT_107154a4,"m_bShouldDrawPlayerWhileUsingViewEntity",0x3c90,1);
    FUN_10177470((undefined4 *)&DAT_107154e0,"m_bIsFlashLightOn",0x4114,1);
    FUN_10177470((undefined4 *)&DAT_10716164,"m_bPerformAvoidance",0x3804,1);
    FUN_10177470((undefined4 *)&DAT_107161a0,"m_bIsMoving",0x3805,1);
    FUN_10177470((undefined4 *)&DAT_107161dc,"m_bFadeCorpse",0x3806,1);
    FUN_10177470((undefined4 *)&DAT_10716344,"m_bImportanRagdoll",0x3808,1);
    FUN_10177470((undefined4 *)&DAT_10718a58,"m_bClientSideRagdoll",0x375,1);
    FUN_10177470((undefined4 *)&DAT_10718c38,"m_bSuppressAnimSounds",0x3366,1);
    FUN_10177470((undefined4 *)&DAT_10718c74,"m_bGlowEnabled",0x1445,1);
    FUN_10177470((undefined4 *)&DAT_1071a8b4,"m_bAlternateSorting",0x13dc,1);
    FUN_10177470((undefined4 *)&DAT_1071ce08,"m_usable",&DAT_00001470,1);
    FUN_10177470((undefined4 *)&DAT_1071cfcc,"m_bSpotlightOn",&DAT_0000144c,1);
    FUN_10177470((undefined4 *)&DAT_1071d008,"m_bHasDynamicLight",0x144d,1);
    FUN_10177470((undefined4 *)&DAT_1071d208,"m_bClientPhysics",0x33cc,1);
    FUN_10177470((undefined4 *)&DAT_1071d568,"m_bEnabled",0x1568,1);
    FUN_10177470((undefined4 *)&DAT_1071d5a4,"m_bMaster",0x1569,1);
    FUN_10177470((undefined4 *)&DAT_1071d5e0,"m_bClientSide",0x156a,1);
    FUN_10177470((undefined4 *)&DAT_1071d61c,"m_bExclusive",0x156b,1);
    FUN_10177470((undefined4 *)&DAT_1071d6f0,"m_bEnabled",0x1488,1);
    FUN_10177470((undefined4 *)&DAT_1071de74,"m_bCheapEffect",&DAT_00001454,1);
    FUN_10177470((undefined4 *)&DAT_1071e054,"m_bFinishFreezing",0x1518,1);
    FUN_10177470((undefined4 *)&DAT_10726500,"m_bEnabled",0x1458,1);
    FUN_10177470((undefined4 *)&DAT_1072653c,"m_bUseLightEnvAngles",0x1459,1);
    FUN_10177470((undefined4 *)&DAT_10726ef4,"m_bState",0x1448,1);
    FUN_10177470((undefined4 *)&DAT_10726f30,"m_bAlwaysUpdate",0x1449,1);
    FUN_10177470((undefined4 *)&DAT_10726fa8,"m_bEnableShadows",&DAT_00001450,1);
    FUN_10177470((undefined4 *)&DAT_10726fe4,"m_bSimpleProjection",0x1451,1);
    FUN_10177470((undefined4 *)&DAT_10727020,"m_bLightOnlyTarget",0x1452,1);
    FUN_10177470((undefined4 *)&DAT_1072705c,"m_bLightWorld",0x1453,1);
    FUN_10177470((undefined4 *)&DAT_10727098,"m_bCameraSpace",&DAT_00001454,1);
    FUN_10177470((undefined4 *)&DAT_107275f8,"m_bIsActive",0x1e68,1);
    FUN_10177470((undefined4 *)&DAT_10728c90,"m_isMoving",0x1498,1);
    FUN_10177470((undefined4 *)&DAT_10729018,"m_bActive",0x1444,1);
    FUN_10177470((undefined4 *)&DAT_1072a5a8,"m_bActive",0x1448,1);
    FUN_10177470((undefined4 *)&DAT_1072a9c4,"m_bShatter",0x33f4,1);
    FUN_10177470((undefined4 *)&DAT_1072abf8,"m_bAwake",0x33d0,1);
    FUN_10177470((undefined4 *)&DAT_1072b75c,"m_bMaster",&DAT_00001450,1);
    FUN_10177470((undefined4 *)&DAT_1072b830,"m_bEnabled",0x33d9,1);
    FUN_10177470((undefined4 *)&DAT_1072b9d8,"m_bUseHitboxesForRenderBox",0x33d0,1);
    FUN_10177470((undefined4 *)&DAT_1072ba14,"m_bRenderOnlyInCSM",0x33d1,1);
    FUN_10177470((undefined4 *)&DAT_1072bb0c,"m_bLocked",0x33f9,1);
    FUN_10177470((undefined4 *)&DAT_1072ca1c,"m_bConstrainBetweenEndpoints",0x17b0,1);
    FUN_10177470((undefined4 *)&DAT_1072e9f4,"m_bIsPlayingBack",0x1444,1);
    FUN_10177470((undefined4 *)&DAT_1072ea30,"m_bPaused",0x1445,1);
    FUN_10177470((undefined4 *)&DAT_1072ea6c,"m_bMultiplayer",0x1446,1);
    FUN_10177470((undefined4 *)&DAT_1072ec6c,"m_bDisableShadows",&DAT_00001454,1);
    FUN_10177470((undefined4 *)&DAT_1072eca8,"m_bEnableLocalLightShadows",0x1455,1);
    FUN_10177470((undefined4 *)&DAT_1072ed90,"m_bEnabled",0x1440,1);
    FUN_10177470((undefined4 *)&DAT_1072ef34,"m_bNoListRepeats",0x1580,1);
    FUN_10177470((undefined4 *)&DAT_1072f398,"m_bEnabled",0x155c,1);
    FUN_10177470((undefined4 *)&DAT_1072ffa8,"m_bClientSidePredicted",&DAT_00001470,1);
    FUN_10177470((undefined4 *)&DAT_107683e4,"m_bIsPlayer",0x5d,1);
    FUN_10177470((undefined4 *)&DAT_1076916c,"m_bFakeLadder",0x1479,1);
    FUN_10177470((undefined4 *)&DAT_1076e128,"m_bFlashing",0x18,1);
    FUN_10177470((undefined4 *)&DAT_1077b6b0,"m_bPoseValueParity",&DAT_00001454,1);
    FUN_10177470((undefined4 *)&DAT_1077b764,"m_bInterpolationWrap",&DAT_00001460,1);
    FUN_10177470((undefined4 *)&DAT_1077ec80,"m_bWorldSpaceScale",0x1480,1);
    FUN_10177470((undefined4 *)&DAT_1077ffcc,"m_bStopped",0x218,1);
    FUN_10177470((undefined4 *)&DAT_107943b8,"m_bSilenced",0x40,1);
    FUN_10177470((undefined4 *)&DAT_1079bc90,"m_bPrimingGrenade",0x4574,1);
    FUN_10177470((undefined4 *)&DAT_1079bd44,"m_bThrowingGrenade",0x4580,1);
    FUN_10177470((undefined4 *)&DAT_1079bd80,"m_bPrimedGrenadeVisible",0x4575,1);
    FUN_10177470((undefined4 *)&DAT_1079bdf8,"m_bGogglesActive",0x4588,1);
    FUN_10177470((undefined4 *)&DAT_1079be34,"m_bUsedAmmoCacheThisRound",0x46b4,1);
    FUN_10177470((undefined4 *)&DAT_1079bee8,"m_bOutsideZonePenalty",0x44c5,1);
    FUN_10177470((undefined4 *)&DAT_1079bf24,"m_bMovingObject",0x44c4,1);
    FUN_10177470((undefined4 *)&DAT_1079c08c,"m_bIsReady",0x4264,1);
    FUN_10177470((undefined4 *)&DAT_1079c8d0,"m_bCrippledMovement",0x45a8,1);
    FUN_10177470((undefined4 *)&DAT_1079ca74,"m_bDefending",&DAT_000045fd,1);
    FUN_10177470((undefined4 *)&DAT_1079cb28,"m_bIsRappelling",0x4604,1);
    FUN_10177470((undefined4 *)&DAT_1079cb64,"m_bActivateRappelPhysics",0x4605,1);
    FUN_10177470((undefined4 *)&DAT_1079cdbc,"m_bBlindShooting",0x469c,1);
    FUN_10177470((undefined4 *)&DAT_1079cdf8,"m_bBurninating",0x4518,1);
    FUN_10177470((undefined4 *)&DAT_1079ce34,"m_bExplodeInAir",0x469d,1);
    FUN_10177470((undefined4 *)&DAT_1079ce70,"m_bFreeFalling",0x469e,1);
    FUN_10177470((undefined4 *)&DAT_1079d08c,"m_bIsLeftHanded",0x4954,1);
    FUN_10177470((undefined4 *)&DAT_1079d5bc,"m_bBurninating",0x3454,1);
    FUN_10177470((undefined4 *)&DAT_1079d88c,"m_bSprayingCO2",0x33e4,1);
    FUN_10177470((undefined4 *)&DAT_1079d9d8,"m_bActivated",0x33d8,1);
    FUN_10177470((undefined4 *)&DAT_1079e500,"m_bIsYesNoVote",0x1472,1);
    FUN_10177470((undefined4 *)&DAT_1079e75c,"m_bHiddenIcon",0x1484,1);
    FUN_10177470((undefined4 *)&DAT_1079ec50,"m_bExploded",0x33e8,1);
    FUN_10177470((undefined4 *)&DAT_1079ec8c,"m_bRightEngineDestroyed",0x33e9,1);
    FUN_10177470((undefined4 *)&DAT_1079ecc8,"m_bLeftEngineDestroyed",0x33ea,1);
    FUN_10177470((undefined4 *)&DAT_1079ee90,"m_bExploded",0x33c4,1);
    FUN_10177470((undefined4 *)&DAT_1079f280,"m_bWindowsAreBroken",0x3411,1);
    FUN_10177470((undefined4 *)&DAT_1079f2bc,"m_bExploded",0x3410,1);
    FUN_10177470((undefined4 *)&DAT_1079f9d0,"m_bFolded",0x33e9,1);
    FUN_10177470((undefined4 *)&DAT_1079fbfc,"m_bEnabled",0x33c0,1);
    FUN_10177470((undefined4 *)&DAT_107a0164,"m_bOnFire",0x3808,1);
    FUN_10177470((undefined4 *)&DAT_107a0944,"m_bRescued",0x38b8,1);
    FUN_10177470((undefined4 *)&DAT_107a0b9c,"m_bOnFire",0x38c8,1);
    FUN_10177470((undefined4 *)&DAT_107a0bd8,"m_bFreeFall",0x38c9,1);
    FUN_10177470((undefined4 *)&DAT_107a0c50,"m_bCoweringNearAmmoCache",0x38dc,1);
    FUN_10177470((undefined4 *)&DAT_107a1068,"m_bSilenced",0x38,1);
    FUN_10177470((undefined4 *)&DAT_107a2134,"m_bZooming",0x3c,1);
    FUN_10177470((undefined4 *)&DAT_107a247c,"m_bRappelKicking",0x20,1);
    FUN_10177470((undefined4 *)&DAT_107a24b8,"m_bRappelKick",0x21,1);
    FUN_10177470((undefined4 *)&DAT_107a2530,"m_bIsSprinting",0x14,1);
    FUN_10177470((undefined4 *)&DAT_107a2f50,"m_bOutOfZoneActive",0x84,1);
    FUN_10177470((undefined4 *)&DAT_107a2f8c,"m_bBombPlanted",0x85,1);
    FUN_10177470((undefined4 *)&DAT_107a2fc8,"m_bVIPReachedCarGoal",0x404b4,1);
    FUN_10177470((undefined4 *)&DAT_107a3004,"m_bGameEndLevelProceed",0x8f,1);
    FUN_10177470((undefined4 *)&DAT_107a3040,"m_bVIP_HasCarGoal",0x8c,1);
    FUN_10177470((undefined4 *)&DAT_107a307c,"m_bVIP_HasCaseGoal",0x8d,1);
    FUN_10177470((undefined4 *)&DAT_107a3130,"m_bSaveUserStats",0x8e,1);
    FUN_10177470((undefined4 *)&DAT_107a4320,"m_bCrashed",0x4381,1);
    FUN_10177470((undefined4 *)&DAT_107a4648,"m_bEngineIsOn",0x33c0,1);
    FUN_10177470((undefined4 *)&DAT_107a4684,"m_bIsDisabled",0x33c8,1);
    FUN_10177470((undefined4 *)&DAT_107a47b0,"m_bHaveAnyPassengers",0x36e4,1);
    FUN_10177470((undefined4 *)&DAT_107a47ec,"m_bScriptedMode",0x350c,1);
    FUN_10177470((undefined4 *)&DAT_107a4c30,"m_bIsVIPCar",0x3bd0,1);
    FUN_10177470((undefined4 *)&DAT_107a4ce4,"m_bWindowsAreBroken",0x3bd9,1);
    FUN_10177470((undefined4 *)&DAT_107a4d20,"m_bExploded",0x3bd8,1);
    FUN_10177470((undefined4 *)&DAT_107a4d5c,"m_bVehicleSmoothing",0x3bda,1);
    FUN_10177470((undefined4 *)&DAT_107a5620,"m_bInsidePlaneBombZone",0x9be0,1);
    FUN_10177470((undefined4 *)&DAT_107a5cb0,"m_bDeployedOnce",0x34d5,1);
    FUN_10177470((undefined4 *)&DAT_107a5cec,"m_bCanMidReload",0x34d6,1);
    FUN_10177470((undefined4 *)&DAT_107a5ddc,"m_bFireLeftGun",0x34a4,1);
    FUN_10177470((undefined4 *)&DAT_107a5f10,"m_bIsHolstered",0x34d4,1);
    FUN_10177470((undefined4 *)&DAT_107a60cc,"m_bForceIdle",0x3528,1);
    FUN_10177470((undefined4 *)&DAT_107a6108,"m_bAlreadyPlayingIdle",0x3529,1);
    FUN_10177470((undefined4 *)&DAT_107a6324,"m_bInMeleeSwing",0x354c,1);
    FUN_10177470((undefined4 *)&DAT_107a6360,"m_bPerformCombos",0x354d,1);
    FUN_10177470((undefined4 *)&DAT_107a6f68,"m_bAiming",0x350c,1);
    FUN_10177470((undefined4 *)&DAT_107a6fa4,"m_bSemiAutoLock",0x350d,1);
    FUN_10177470((undefined4 *)&DAT_107a7098,"m_bCreateTrail",0x37f1,1);
    FUN_10177470((undefined4 *)&DAT_107a7260,"m_bAiming",0x350c,1);
    FUN_10177470((undefined4 *)&DAT_107a729c,"m_bSemiAutoLock",0x350d,1);
    FUN_10177470((undefined4 *)&DAT_107a7390,"m_bCreateTrail",0x37f1,1);
    FUN_10177470((undefined4 *)&DAT_107aeb34,"m_bEmit",0x1540,1);
    FUN_10177470((undefined4 *)&DAT_107aeb70,"m_bDontRemove",0x1541,1);
    FUN_10177490((undefined4 *)&DAT_1071351c,"m_iClip1",0x33e0,4,FUN_10177520);
    FUN_10177490((undefined4 *)&DAT_10713558,"m_iClip2",0x33e4,4,FUN_10177520);
    FUN_10177490((undefined4 *)&DAT_107137b4,"m_hOwner",0x33c0,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1071410c,"m_hThrower",0x3808,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1071499c,"m_hLastWeapon",0x3c60,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10714ac8,"m_hConstraintEntity",0x3c94,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10714ce4,"m_hTonemapController",0x3b04,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10714f7c,"m_hUseEntity",0x3c7c,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10714fb8,"m_hGroundEntity",0x148,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10714ff4,"m_hElevator",0x3d20,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107151d4,"m_hObserverTarget",0x3cb8,4,FUN_10090a20);
    FUN_10177490((undefined4 *)&DAT_10715210,"m_hViewModel[0]",0x3c64,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10715378,"m_hPostProcessCtrl",0x40b0,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107153b4,"m_hColorCorrectionCtrl",0x40b4,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107153f0,"m_PlayerFog.m_hCtrl",0x40bc,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10715468,"m_hViewEntity",0x3c8c,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10715684,"m_hWeapon",0x33d0,4,FUN_10050570);
    FUN_10177490((undefined4 *)&DAT_10715828,"m_hOwner",0x33d4,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10718b48,"m_hLightingOrigin",0x3360,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10719764,"m_hActiveWeapon",0x37e4,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1071a530,"m_hOwnerEntity",0x144,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1071a56c,"m_hEffectEntity",0x13ec,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1071a7c4,"m_hPlayerSimulationOwner",0x13e8,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1071de38,"m_hEntAttached",0x1440,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1071e1a0,"m_hConstraintEntity",0x1540,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_10726eb8,"m_hTargetEntity",0x1444,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1072a47c,"m_hOwnerEntity",0x144,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1072a988,"m_hInitBaseAnimating",0x33f0,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1072c7c4,"m_hStartPoint",0x170c,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1072c800,"m_hEndPoint",0x1710,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107302d0,"m_nAttachmentIndex",&DAT_0000146c,4,FUN_10177520);
    FUN_10177490((undefined4 *)&DAT_10730348,"m_hPlayerOwner",0x14d0,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1076818c,"m_nSurfaceProp",0x48,2,FUN_10177610);
    FUN_10177490((undefined4 *)&DAT_1077c650,"m_hUnragdoll",0x37a4,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1077ea28,"m_hAttachedToEntity",&DAT_0000145c,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1077f428,"m_Handle",0x1440,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079b9bc,"m_hPlayer",0x10,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079c0c8,"m_hDramaTarget",0x48d4,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079c1b8,"m_hC4Charge",0x48f4,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079c63c,"m_hRagdoll",0x4270,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079c6b4,"m_hCarriedObject",0x45ec,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079c6f0,"m_hControllable",0x48bc,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079c9fc,"m_RappelTarget",0x45e0,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079ceac,"m_hDog",0x45e4,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079d418,"m_hPlayer",0x3418,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_1079ffbc,"m_hDog",0x10,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a01a0,"m_hMaster",0x383c,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a0814,"m_hHostage",0x10,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a0a34,"m_target",0x38ac,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a0a70,"m_Grabber",0x38b0,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a0aac,"m_pVehicleIn",0x38b4,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a0d40,"m_hCarriedObject",0x38ec,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a1990,"m_hCarrierHandle",0x33c0,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a2e24,"m_pVIPCar",0x74,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a2e60,"m_pPlaneBombTarget",0x70,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a2e9c,"m_pCaseCarrier",0x404b0,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a377c,"SuitcaseEntityVehicle",0x124,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107a4594,"m_hDriver",0x351c,4,FUN_10177570);
    FUN_10177490((undefined4 *)&DAT_107af538,"m_iMaterialModel",0x15ec,4,FUN_10177520);
    FUN_10177490((undefined4 *)&DAT_107b1c58,"m_hOwner",0x30,4,FUN_10177570);
    FUN_101774c0((undefined4 *)&DAT_107159ac,"m_PredictableID",900,4);
    FUN_101774c0((undefined4 *)&DAT_1071a07c,"m_PredictableID",900,4);
    FUN_101774f0((undefined4 *)&DAT_107133ec,"m_flNextPrimaryAttack",0x33c4,4);
    FUN_101774f0((undefined4 *)&DAT_10713428,"m_flNextSecondaryAttack",0x33c8,4);
    FUN_101774f0((undefined4 *)&DAT_107134a0,"m_flTimeWeaponIdle",0x33e8,4);
    FUN_101774f0((undefined4 *)&DAT_1071962c,"m_flNextAttack",0x3790,4);
    FUN_101774f0((undefined4 *)&DAT_1071db48,"m_flStartTime",0x1444,4);
    FUN_101774f0((undefined4 *)&DAT_1079bc54,"m_flNextGrenadeThrow",0x4570,4);
    FUN_101774f0((undefined4 *)&DAT_1079bccc,"m_flThrowGrenadeTimer",0x457c,4);
    FUN_101774f0((undefined4 *)&DAT_1079bd08,"m_flPrimeGrenadeTimer",0x4578,4);
    FUN_101774f0((undefined4 *)&DAT_1079be70,"m_flLastShotFireTime",&DAT_000045b4,4);
    FUN_101774f0((undefined4 *)&DAT_1079c1f4,"m_flOOZCountdown",0x48f8,4);
    FUN_101774f0((undefined4 *)&DAT_1079c81c,"m_flSlowedUntilTime",0x45a4,4);
    FUN_101774f0((undefined4 *)&DAT_1079cccc,"m_flFreezeMovementTime",0x468c,4);
    FUN_101774f0((undefined4 *)&DAT_107a1e60,"m_flReZoomTime",0x48,4);
    FUN_101774f0((undefined4 *)&DAT_107a1e9c,"m_flDelayUnzoomTime",0x44,4);
    FUN_101774f0((undefined4 *)&DAT_107a1fc8,"m_flLastZoomTime",0x50,4);
    FUN_101774f0((undefined4 *)&DAT_107a2080,"m_flMovementStateEntryTime",0x6c,4);
    FUN_101774f0((undefined4 *)&DAT_107a24f4,"m_flRappelKickTime",0x24,4);
    FUN_101774f0((undefined4 *)&DAT_107a2cf8,"m_flClockStartTime",100,4);
    FUN_101774f0((undefined4 *)&DAT_107a5bfc,"m_flDecreaseShotsFired",0x34bc,4);
    FUN_101774f0((undefined4 *)&DAT_107a5c38,"m_flDecreaseShotsFiredStart",0x34c0,4);
    FUN_101774f0((undefined4 *)&DAT_107a62ac,"m_flLastAttackTime",0x3574,4);
    FUN_101774f0((undefined4 *)&DAT_107a6cc8,"m_flExplodeTime",0x33c0,4);
    FUN_101774f0((undefined4 *)&DAT_107a6da0,"m_flExplodeTime",0x33c0,4);
    FUN_101774f0((undefined4 *)&DAT_107adf68,"m_flSpawnTime",0x1538,4);
    FUN_1017bb60('\x01',(byte *)"Disconnect: %s.\n");
    FUN_1017c250("netspike.txt",local_40[0]);
    FUN_1017c740((byte *)"%.1f %%");
    FUN_1017c740((byte *)"soundfade\t%.1f %.1f %.1f %.1f");
    FUN_1017df40((byte *)"%s : %8.2f:  clearing events\n");
    FUN_1017df40((byte *)"%s : %8.2f:  finish %s\n");
    FUN_1017df40((byte *)"%s : %8.2f:  ignored %s\n");
    FUN_1017f460(this,param_1,param_2,uVar3,"player_stand",uVar4,"player_crouch");
    FUN_1017f620((void *)((int)this + -8),"Hostage.Falling_Scream",0,0);
    FUN_1017f620((void *)((int)this + -8),"Hostage.OnFire_Scream",0,0);
    FUN_1017f620((void *)((int)this + -8),"Hostage.PainScream",0,0);
    FUN_1017f620((void *)((int)this + -8),"Hostage.ShortScream",0,0);
    FUN_1017f620((void *)param_1[5],"Hostage.Falling_Scream",0,0);
    FUN_1017f620(*(void **)((int)this + 0x290),"Hostage.BodyCheck",0,0);
    FUN_1017f620(*(void **)((int)this + 0x290),"Player.PainScream",0,0);
    FUN_1017f620(param_1,"Weapon_RPG7.Fire",0,0);
    FUN_1017f620(this,"Flesh.BulletImpact",0,0);
    FUN_1017f620(this,"Player.AmbientUnderWater",0,0);
    FUN_1017f620(this,"Vehicle_Critical_Hit",0,0);
    FUN_1017f620(this_00,"Hostage.Falling_Scream",0,0);
    FUN_1017f620(this_00,"Hostage.OnFire_Scream",0,0);
    FUN_1017f620(this_00,"Vote.Cast.Yes",0,iVar2);
    FUN_1017f620(this_00,"Vote.Failed",0,0);
    FUN_1017f620(this_00,"Vote.Passed",0,0);
    FUN_1017f8a0(local_100,0.0,"Player.Headshot",param_2,0,0);
    FUN_1017f8a0(local_120,0.0,"fx.car_burning",param_1,0,0);
    FUN_1017f8a0(local_120,0.0,"fx.car_explode",param_1,0,0);
    FUN_1017f8a0(local_24,-NAN,"Enemy.Hit",0,0,0);
    FUN_1017f8a0(local_24,-NAN,"radio.end",0,0,0);
    FUN_1017f8a0(local_24,0.0,"Physics.WaterSplash",param_1 + 0x38,0,0);
    FUN_1017f8a0(local_8c,0.0,"fx.bowls_explode",param_1,0,0);
    FUN_1017f8a0(local_8c,0.0,"fx.jewelery_explode",param_1,0,0);
    FUN_1017f8a0(local_c0,0.0,"Player.BodyGib",param_2,0,0);
    FUN_101806a0(pvVar5,"General.BurningFlesh");
    FUN_101806a0(pvVar5,"General.BurningObject");
    FUN_101806a0(this_00,"radio.end");
    FUN_10180a80((undefined4 *)param_3[1],"Emitsound");
    FUN_1018c2f0(param_1,"headangles[0]",*(float *)(param_3 + 0x70),*(float *)(param_2 + 0x70),0x10)
    FUN_1018c2f0(param_1,"headangles[1]",*(float *)(param_3 + 0x74),*(float *)(param_2 + 0x74),0x10)
    FUN_1018c2f0(param_1,"headangles[2]",*(float *)(param_3 + 0x78),*(float *)(param_2 + 0x78),8);
    FUN_1018c4d0(param_1,"forwardmove",*(float *)(param_3 + 0x18),*(float *)(param_2 + 0x18),-1.0,
    FUN_1018c4d0(param_1,"sidemove",*(float *)(param_3 + 0x1c),*(float *)(param_2 + 0x1c),-1.0,1.0);
    FUN_1018c4d0(param_1,"upmove",*(float *)(param_3 + 0x20),*(float *)(param_2 + 0x20),-1.0,1.0);
    FUN_1018c6f0(param_1,"controllableEngineState",(int)*(short *)(param_3 + 0x5a),
    FUN_1018c7a0(param_1,"headoffset",(float *)(param_3 + 0x7c),(float *)(param_2 + 0x7c));
    FUN_101a5ad0(1,(byte *)"Error reading demo message data.\n");
    FUN_101a5ad0(1,(byte *)"Tried to read a demo message with no demo file\n");
    FUN_101a5c10((byte *)"Bad string: %s");
    FUN_101a5c10((byte *)"CEngineSoundServer::PrecacheSound:  Bad string: %s");
    FUN_101a5c10((byte *)"CL_CopyExistingEntity: missing client entity %d.\n");
    FUN_101a5c10((byte *)"CL_CopyNewEntity: invalid class index (%d).\n");
    FUN_101a5c10((byte *)"CL_CopyNewEntity: m_nNewEntity >= MAX_EDICTS");
    FUN_101a5c10((byte *)"CL_PreserveExistingEntity: missing client entity %d.\n");
    FUN_101a5c10((byte *)"CL_ReadPreserveEnt: u.m_nNewEntity == MAX_EDICTS");
    FUN_101a5c10((byte *)"CVEngineServer::PrecacheDecal: \'%s\' overflow, too many decals");
    FUN_101a5c10((byte *)"CVEngineServer::PrecacheGeneric: \'%s\' overflow");
    FUN_101a5c10((byte *)"CVEngineServer::PrecacheModel: \'%s\' overflow, too many models");
    FUN_101a5c10((byte *)"DLL_Crosshairangle: not a client");
    FUN_101a5c10((byte *)"DLL_SetView: not a client");
    FUN_101a5c10((byte *)"Invalid worldlight lump version!\n");
    FUN_101a5c10((byte *)"Map_LoadModelGuts: bad LUMP_TEXINFO size in %s");
    FUN_101a5c10((byte *)"Mod_LoadCubemapSamples: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadEdges: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadFaces: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadLeafs: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadLump: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadMarksurfaces: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadNodes: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadPrimIndices: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadPrimVerts: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadPrimitives: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadSubmodels: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadSurfedges: bad surfedges count in %s: %i");
    FUN_101a5c10((byte *)"Mod_LoadSurfedges: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadTexinfo: funny lump size in %s");
    FUN_101a5c10((byte *)"Mod_LoadVertNormals: funny lump size in %s!\n");
    FUN_101a5c10((byte *)"Mod_LoadVertices: funny lump size in %s");
    FUN_101a5c10((byte *)"SV_CreatePacketEntities: GetEntServerClass failed for ent %d.\n");
    FUN_101a5c10((byte *)"SV_PackEntity: SendTable_Encode returned false (ent %d).\n");
    FUN_101a5c10((byte *)"StartQueryCvarValue: not a client");
    FUN_101a6e70("debug/debugcamerarendertarget",0.0,0.0,local_8,fVar7);
    FUN_101a78e0(-1,"config.cfg",'\0');
    FUN_101a78e0(-1,"config.cfg",'\x01');
    FUN_101aa800(&local_218,"#",1);
    FUN_101aa800(&local_218,"connected",9);
    FUN_101aa800(&local_218,"loss",4);
    FUN_101aa800(&local_218,"name",0x13);
    FUN_101aa800(&local_218,"ping",4);
    FUN_101aa800(&local_218,"state",6);
    FUN_101aa800(&local_218,"uniqueid",0x13);
    FUN_101aa800(&local_218,"userid",6);
    FUN_101ad4b0(local_10,(int)"$c0_x",0.5 / (float)iVar6);
    FUN_101ad4b0(local_10,(int)"$c0_y",0.5 / (float)iVar6);
    FUN_101ad4b0(local_10,(int)"$c1_x",-0.5 / (float)iVar6);
    FUN_101ad4b0(local_10,(int)"$c1_y",0.5 / (float)iVar6);
    FUN_101af460(param_1,"autosave",iVar2);
    FUN_101b75f0(0x46,(byte *)"cancelselect");
    FUN_101bdfa0((byte *)"%s : %8.2f:  canceled\n");
    FUN_101bdfa0((byte *)"%s : %8.2f:  clearing events\n");
    FUN_101bdfa0((byte *)"%s : %8.2f:  finish %s\n");
    FUN_101bdfa0((byte *)"%s : %8.2f:  ignored %s\n");
    FUN_101bdfa0((byte *)"%s : cancelled via input at interrupt point\n");
    FUN_101bdfa0((byte *)"%s : cancelled via player death\n");
    FUN_101bdfa0((byte *)"%s : stop scripted scene\n");
    FUN_101c2640((undefined4 *)&DAT_105fb7c4,"m_bPerformAvoidance",0xd30,1);
    FUN_101c2640((undefined4 *)&DAT_105fb818,"m_bIsMoving",0xd31,1);
    FUN_101c2640((undefined4 *)&DAT_105fb86c,"m_bFadeCorpse",0xd32,1);
    FUN_101c2640((undefined4 *)&DAT_105fb968,"m_bSpeedModActive",0xd34,1);
    FUN_101c2640((undefined4 *)&DAT_105fba64,"m_bImportanRagdoll",0xd33,1);
    FUN_101c2640((undefined4 *)&DAT_106042a0,"m_bClientSideRagdoll",0x270,1);
    FUN_101c2640((undefined4 *)&DAT_10604540,"m_bSuppressAnimSounds",0x494,1);
    FUN_101c2640((undefined4 *)&DAT_10604594,"m_bGlowEnabled",0x3c0,1);
    FUN_101c2640((undefined4 *)&DAT_10606e9c,"m_bAlternateSorting",0x23b,1);
    FUN_101c2640((undefined4 *)&DAT_10608420,"m_bSwitchingWeapon",0xc18,1);
    FUN_101c2640((undefined4 *)&DAT_1060890c,"m_bConstraintPastRadius",0xf6c,1);
    FUN_101c2640((undefined4 *)&DAT_106094e0,"m_bShouldDrawPlayerWhileUsingViewEntity",0xf4c,1);
    FUN_101c2640((undefined4 *)&DAT_10609588,"m_bIsFlashLightOn",0x12d0,1);
    FUN_101c2640((undefined4 *)&DAT_1060a87c,"m_bSpotlightOn",0x3b8,1);
    FUN_101c2640((undefined4 *)&DAT_1060a8d0,"m_bHasDynamicLight",0x3b9,1);
    FUN_101c2640((undefined4 *)&DAT_1060c694,"m_bEnabled",0x3d1,1);
    FUN_101c2640((undefined4 *)&DAT_1060c6e8,"m_bMaster",0x3d2,1);
    FUN_101c2640((undefined4 *)&DAT_1060c73c,"m_bClientSide",0x3d3,1);
    FUN_101c2640((undefined4 *)&DAT_1060c790,"m_bExclusive",0x3d4,1);
    FUN_101c2640((undefined4 *)&DAT_1060dc2c,"m_bIsPlayer",0x5d,1);
    FUN_101c2640((undefined4 *)&DAT_1060f1c4,"m_bCheapEffect",0x3b8,1);
    FUN_101c2640((undefined4 *)&DAT_1060f434,"m_bFinishFreezing",0x3c4,1);
    FUN_101c2640((undefined4 *)&DAT_1063fbfc,"m_bEnabled",0x3cc,1);
    FUN_101c2640((undefined4 *)&DAT_1063fc50,"m_bUseLightEnvAngles",0x3ce,1);
    FUN_101c2640((undefined4 *)&DAT_106404fc,"m_bState",0x3b8,1);
    FUN_101c2640((undefined4 *)&DAT_10640550,"m_bAlwaysUpdate",0x3b9,1);
    FUN_101c2640((undefined4 *)&DAT_106405f8,"m_bEnableShadows",0x3c0,1);
    FUN_101c2640((undefined4 *)&DAT_1064064c,"m_bSimpleProjection",0x3c1,1);
    FUN_101c2640((undefined4 *)&DAT_106406a0,"m_bLightOnlyTarget",0x3c2,1);
    FUN_101c2640((undefined4 *)&DAT_106406f4,"m_bLightWorld",0x3c3,1);
    FUN_101c2640((undefined4 *)&DAT_10640748,"m_bCameraSpace",0x3c4,1);
    FUN_101c2640((undefined4 *)&DAT_10640f08,"m_bIsActive",0x40c,1);
    FUN_101c2640((undefined4 *)&DAT_10644a84,"m_isMoving",0x474,1);
    FUN_101c2640((undefined4 *)&DAT_10644d84,"m_bFakeLadder",0x3ed,1);
    FUN_101c2640((undefined4 *)&DAT_10645284,"m_bActive",0x3b4,1);
    FUN_101c2640((undefined4 *)&DAT_1064b238,"m_bFlashing",0x18,1);
    FUN_101c2640((undefined4 *)&DAT_1064e338,"m_bActive",0x4c0,1);
    FUN_101c2640((undefined4 *)&DAT_1064fe2c,"m_bShatter",0x7a8,1);
    FUN_101c2640((undefined4 *)&DAT_10652a9c,"m_bMaster",0x3c4,1);
    FUN_101c2640((undefined4 *)&DAT_10653288,"m_bClientPhysics",0x670,1);
    FUN_101c2640((undefined4 *)&DAT_106533c8,"m_bUseHitboxesForRenderBox",0x6c9,1);
    FUN_101c2640((undefined4 *)&DAT_1065341c,"m_bRenderOnlyInCSM",0x6ca,1);
    FUN_101c2640((undefined4 *)&DAT_10653758,"m_bAwake",0x7a0,1);
    FUN_101c2640((undefined4 *)&DAT_10653aec,"m_bLocked",0x740,1);
    FUN_101c2640((undefined4 *)&DAT_10670dfc,"m_bConstrainBetweenEndpoints",0x3d0,1);
    FUN_101c2640((undefined4 *)&DAT_10672290,"m_bIsPlayingBack",0x408,1);
    FUN_101c2640((undefined4 *)&DAT_106722e4,"m_bPaused",0x409,1);
    FUN_101c2640((undefined4 *)&DAT_10672338,"m_bMultiplayer",0x40a,1);
    FUN_101c2640((undefined4 *)&DAT_10672a18,"m_bDisableShadows",0x3c8,1);
    FUN_101c2640((undefined4 *)&DAT_10672a6c,"m_bEnableLocalLightShadows",0x3c9,1);
    FUN_101c2640((undefined4 *)&DAT_10672d58,"m_bEnabled",0x3b4,1);
    FUN_101c2640((undefined4 *)&DAT_10672fa4,"m_bNoListRepeats",0x4ec,1);
    FUN_101c2640((undefined4 *)&DAT_10673f54,"m_bEnabled",0x3d1,1);
    FUN_101c2640((undefined4 *)&DAT_106745c0,"m_bWorldSpaceScale",0x3d8,1);
    FUN_101c2640((undefined4 *)&DAT_10675f80,"m_bClientSidePredicted",0x4dc,1);
    FUN_101c2640((undefined4 *)&DAT_1067d8fc,"m_bStopped",0x218,1);
    FUN_101c2640((undefined4 *)&DAT_10684368,"m_bSilenced",0x3c,1);
    FUN_101c2640((undefined4 *)&DAT_10685440,"m_bPrimingGrenade",0x17ec,1);
    FUN_101c2640((undefined4 *)&DAT_1068553c,"m_bThrowingGrenade",0x17f8,1);
    FUN_101c2640((undefined4 *)&DAT_10685590,"m_bPrimedGrenadeVisible",0x17ed,1);
    FUN_101c2640((undefined4 *)&DAT_10685638,"m_bGogglesActive",0x1800,1);
    FUN_101c2640((undefined4 *)&DAT_1068568c,"m_bUsedAmmoCacheThisRound",0x18ec,1);
    FUN_101c2640((undefined4 *)&DAT_10685788,"m_bOutsideZonePenalty",0x178e,1);
    FUN_101c2640((undefined4 *)&DAT_106857dc,"m_bMovingObject",0x178c,1);
    FUN_101c2640((undefined4 *)&DAT_106859d4,"m_bIsReady",0x1420,1);
    FUN_101c2640((undefined4 *)&DAT_10686950,"m_bCrippledMovement",0x1820,1);
    FUN_101c2640((undefined4 *)&DAT_10686af4,"m_bDefending",&DAT_00001869,1);
    FUN_101c2640((undefined4 *)&DAT_10686bf0,"m_bIsRappelling",&DAT_00001880,1);
    FUN_101c2640((undefined4 *)&DAT_10686c44,"m_bActivateRappelPhysics",0x1881,1);
    FUN_101c2640((undefined4 *)&DAT_10686f8c,"m_bBlindShooting",&DAT_000018b8,1);
    FUN_101c2640((undefined4 *)&DAT_10686fe0,"m_bBurninating",0x17b0,1);
    FUN_101c2640((undefined4 *)&DAT_10687034,"m_bExplodeInAir",0x18b9,1);
    FUN_101c2640((undefined4 *)&DAT_10687088,"m_bFreeFalling",0x18ba,1);
    FUN_101c2640((undefined4 *)&DAT_1068737c,"m_bIsLeftHanded",0x2401,1);
    FUN_101c2640((undefined4 *)&DAT_106876cc,"m_bBurninating",0x524,1);
    FUN_101c2640((undefined4 *)&DAT_10688730,"m_bFolded",0x528,1);
    FUN_101c2640((undefined4 *)&DAT_10688c94,"m_bSprayingCO2",0x538,1);
    FUN_101c2640((undefined4 *)&DAT_10689060,"m_bActivated",0x540,1);
    FUN_101c2640((undefined4 *)&DAT_1068af00,"m_bIsYesNoVote",0x3d4,1);
    FUN_101c2640((undefined4 *)&DAT_1068b60c,"m_bHiddenIcon",0x4ec,1);
    FUN_101c2640((undefined4 *)&DAT_1068cb7c,"m_bEnabled",0x4f0,1);
    FUN_101c2640((undefined4 *)&DAT_1068d448,"m_bExploded",0x51a,1);
    FUN_101c2640((undefined4 *)&DAT_1068d49c,"m_bRightEngineDestroyed",0x518,1);
    FUN_101c2640((undefined4 *)&DAT_1068d4f0,"m_bLeftEngineDestroyed",0x519,1);
    FUN_101c2640((undefined4 *)&DAT_1068e178,"m_bExploded",0x504,1);
    FUN_101c2640((undefined4 *)&DAT_1068f5a0,"m_bExploded",0xeb1,1);
    FUN_101c2640((undefined4 *)&DAT_1068f5f4,"m_bWindowsAreBroken",0xeb2,1);
    FUN_101c2640((undefined4 *)&DAT_10690694,"m_bOnFire",0x7c4,1);
    FUN_101c2640((undefined4 *)&DAT_106911d8,"m_bRescued",0x7c8,1);
    FUN_101c2640((undefined4 *)&DAT_10691520,"m_bOnFire",0x7ec,1);
    FUN_101c2640((undefined4 *)&DAT_106915c8,"m_bCoweringNearAmmoCache",0x801,1);
    FUN_101c2640((undefined4 *)&DAT_1069161c,"m_bFreeFall",0x7ed,1);
    FUN_101c2640((undefined4 *)&DAT_10691f20,"m_bSilenced",0x34,1);
    FUN_101c2640((undefined4 *)&DAT_106932d4,"m_bZooming",0x3c,1);
    FUN_101c2640((undefined4 *)&DAT_1069376c,"m_bRappelKicking",0x20,1);
    FUN_101c2640((undefined4 *)&DAT_106937c0,"m_bRappelKick",0x21,1);
    FUN_101c2640((undefined4 *)&DAT_10693868,"m_bIsSprinting",0x14,1);
    FUN_101c2640((undefined4 *)&DAT_10694530,"m_bOutOfZoneActive",0x2d0,1);
    FUN_101c2640((undefined4 *)&DAT_10694584,"m_bBombPlanted",0x2d1,1);
    FUN_101c2640((undefined4 *)&DAT_106945d8,"m_bVIPReachedCarGoal",0x4a54,1);
    FUN_101c2640((undefined4 *)&DAT_1069462c,"m_bGameEndLevelProceed",0x30c,1);
    FUN_101c2640((undefined4 *)&DAT_10694680,"m_bVIP_HasCarGoal",0x2d8,1);
    FUN_101c2640((undefined4 *)&DAT_106946d4,"m_bVIP_HasCaseGoal",0x2d9,1);
    FUN_101c2640((undefined4 *)&DAT_106947d0,"m_bSaveUserStats",0x2da,1);
    FUN_101c2640((undefined4 *)&DAT_10695d88,"m_bCrashed",0x14d5,1);
    FUN_101c2640((undefined4 *)&DAT_10696300,"m_bEngineIsOn",0x4f0,1);
    FUN_101c2640((undefined4 *)&DAT_10696354,"m_bIsDisabled",0x4f8,1);
    FUN_101c2640((undefined4 *)&DAT_106964f8,"m_bHaveAnyPassengers",0x954,1);
    FUN_101c2640((undefined4 *)&DAT_1069654c,"m_bScriptedMode",0x654,1);
    FUN_101c2640((undefined4 *)&DAT_10696a88,"m_bIsVIPCar",0xe04,1);
    FUN_101c2640((undefined4 *)&DAT_10696b84,"m_bExploded",0xe0c,1);
    FUN_101c2640((undefined4 *)&DAT_10696bd8,"m_bWindowsAreBroken",0xe0d,1);
    FUN_101c2640((undefined4 *)&DAT_10696c2c,"m_bVehicleSmoothing",0xe0e,1);
    FUN_101c2640((undefined4 *)&DAT_10697d30,"m_bInsidePlaneBombZone",0x15e0,1);
    FUN_101c2640((undefined4 *)&DAT_10698ad0,"m_bDeployedOnce",0x655,1);
    FUN_101c2640((undefined4 *)&DAT_10698b24,"m_bCanMidReload",0x656,1);
    FUN_101c2640((undefined4 *)&DAT_10698c74,"m_bFireLeftGun",0x624,1);
    FUN_101c2640((undefined4 *)&DAT_10698f70,"m_bIsHolstered",0x654,1);
    FUN_101c2640((undefined4 *)&DAT_1069930c,"m_bForceIdle",0x6a4,1);
    FUN_101c2640((undefined4 *)&DAT_10699360,"m_bAlreadyPlayingIdle",0x6a5,1);
    FUN_101c2640((undefined4 *)&DAT_10699654,"m_bInMeleeSwing",0x6c8,1);
    FUN_101c2640((undefined4 *)&DAT_106996a8,"m_bPerformCombos",0x6c9,1);
    FUN_101c2640((undefined4 *)&DAT_1069a580,"m_bAiming",0x688,1);
    FUN_101c2640((undefined4 *)&DAT_1069a5d4,"m_bSemiAutoLock",0x689,1);
    FUN_101c2640((undefined4 *)&DAT_1069a6d8,"m_bCreateTrail",0x7ec,1);
    FUN_101c2640((undefined4 *)&DAT_1069a910,"m_bAiming",0x688,1);
    FUN_101c2640((undefined4 *)&DAT_1069a964,"m_bSemiAutoLock",0x689,1);
    FUN_101c2640((undefined4 *)&DAT_1069aa68,"m_bCreateTrail",0x7bc,1);
    FUN_101c2640((undefined4 *)&DAT_1069ce68,"m_bEmit",0x3f8,1);
    FUN_101c2640((undefined4 *)&DAT_1069d378,"m_bEmit",0x3f0,1);
    FUN_101c2640((undefined4 *)&DAT_1069d7e0,"m_bEmit",0x3d4,1);
    FUN_101c2640((undefined4 *)&DAT_1069daa4,"m_bEmit",0x3cc,1);
    FUN_101c2640((undefined4 *)&DAT_1069daf8,"m_bDontRemove",0x3cd,1);
    FUN_101c2640((undefined4 *)&DAT_1069e12c,"m_bEmit",0x3ec,1);
    FUN_101c2640((undefined4 *)&stack0xffffffa4,"m_bAlive",0x648,1);
    FUN_101c2670((undefined4 *)&DAT_106043f0,"m_hLightingOrigin",0x498,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10604f84,"m_hActiveWeapon",0x79c,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1060588c,"m_hOwner",0x4f0,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10606a04,"m_hOwnerEntity",0x184,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10606a58,"m_hEffectEntity",0x350,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10606aac,"moveparent",0xe4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10606d4c,"m_hPlayerSimulationOwner",0x274,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10607bac,"m_hThrower",0x7d4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106085c4,"m_hLastWeapon",0xf24,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10608768,"m_hConstraintEntity",0xf50,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10608a5c,"m_hTonemapController",0xc38,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10608c58,"m_hUseEntity",0xb84,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10608cac,"m_hGroundEntity",0x19c,4,0x40000,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10608d00,"m_hElevator",0xecc,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10608fa0,"m_hObserverTarget",0xbec,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10609144,"m_hViewModel",0xe08,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1060933c,"m_hPostProcessCtrl",0xacc,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10609390,"m_hColorCorrectionCtrl",0xad0,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106093e4,"m_PlayerFog.m_hCtrl",0xa7c,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1060948c,"m_hViewEntity",0xf48,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10609980,"m_hWeapon",0x500,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10609bcc,"m_hOwner",0x504,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1060a650,"moveparent",0xe4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1060f170,"m_hEntAttached",0x3b4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1063f6c8,"m_hConstraintEntity",0x3cc,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106404a8,"m_hTargetEntity",0x3b4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1064c060,"moveparent",0xe4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1064e194,"m_hOwnerEntity",0x184,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1064e1e8,"moveparent",0xe4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1064f9c0,"m_hUnragdoll",0xb9c,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1064fdd8,"m_hInitBaseAnimating",0x7a4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10670ab4,"m_hStartPoint",0x3f8,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10670b08,"m_hEndPoint",0x3fc,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10671048,"moveparent",0xe4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10674278,"m_hAttachedToEntity",0x3b4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10675838,"m_Handle",0x3b4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1067dcc0,"m_hPlayerOwner",0x3d4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10684efc,"m_hPlayer",0xc,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10685a28,"m_hDramaTarget",0x1c98,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10685b78,"m_hC4Charge",0x1a74,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106865b4,"m_hRagdoll",0x1350,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1068665c,"m_hCarriedObject",&DAT_00001874,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106866b0,"m_hControllable",0x1c60,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10686a4c,"m_RappelTarget",0x1854,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106870dc,"m_hDog",&DAT_00001858,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10687480,"m_hPlayer",0x504,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1069010c,"m_hDog",0xc,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106906e8,"m_hMaster",0x21d8,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10690cd4,"m_hHostage",0xc,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10691328,"m_target",0x7cc,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1069137c,"m_Grabber",2000,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106913d0,"m_pVehicleIn",0x7d4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1069176c,"m_hCarriedObject",0x810,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106928d8,"m_hCarrierHandle",0x504,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_1069438c,"m_pVIPCar",0x2c0,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106943e0,"m_pPlaneBombTarget",700,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10694434,"m_pCaseCarrier",0x4a50,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10694eec,"SuitcaseEntityVehicle",0x308,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_10696204,"m_hDriver",0x6fc,4,0x40000,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&DAT_106a1f00,"m_hOwner",0x2c,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&stack0xffffffa4,"m_hAttachEntity",0x3d4,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&stack0xffffffa4,"m_hControlPointEnts",0x600,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&stack0xffffffa4,"m_hMyWeapons",0x788,4,-1,FUN_101c27a0);
    FUN_101c2670((undefined4 *)&stack0xffffffa4,"m_pPassengers",0x500,4,-1,FUN_101c27a0);
    FUN_101c26a0((undefined4 *)&DAT_10605494,"m_iClip1",0x510,4,0x10,FUN_101c2800);
    FUN_101c26a0((undefined4 *)&DAT_106054e8,"m_iClip2",0x514,4,8,FUN_101c2800);
    FUN_101c26a0((undefined4 *)&DAT_1060d8e4,"m_nSurfaceProp",0x48,2,8,FUN_101c28d0);
    FUN_101c26a0((undefined4 *)&DAT_1067db70,"m_nAttachmentIndex",0x3c8,4,6,FUN_101c2800);
    FUN_101c26a0((undefined4 *)&DAT_1069e86c,"m_iMaterialModel",0x420,4,0x10,FUN_101c2800);
    FUN_101c26d0((undefined4 *)&DAT_1060631c,"m_PredictableID",0x70,4);
    FUN_101c26d0((undefined4 *)&DAT_10609dc4,"m_PredictableID",0x70,4);
    FUN_101c2700((undefined4 *)&DAT_10606b54,"m_iName",0xd8);
    FUN_101c2700((undefined4 *)&DAT_10606ba8,"m_iSignifierName",0x368);
    FUN_101c2700((undefined4 *)&DAT_1067f498,"m_iszDetailSpriteMaterial",1000);
    FUN_101c2730((undefined4 *)&DAT_10604dd4,"m_flNextAttack",0x6e8,4);
    FUN_101c2730((undefined4 *)&DAT_10605294,"m_flNextPrimaryAttack",0x4f4,4);
    FUN_101c2730((undefined4 *)&DAT_106052e8,"m_flNextSecondaryAttack",0x4f8,4);
    FUN_101c2730((undefined4 *)&DAT_10605390,"m_flTimeWeaponIdle",0x518,4);
    FUN_101c2730((undefined4 *)&DAT_1060ed28,"m_flStartTime",0x3b4,4);
    FUN_101c2730((undefined4 *)&DAT_106853ec,"m_flNextGrenadeThrow",0x17e8,4);
    FUN_101c2730((undefined4 *)&DAT_10685494,"m_flThrowGrenadeTimer",0x17f4,4);
    FUN_101c2730((undefined4 *)&DAT_106854e8,"m_flPrimeGrenadeTimer",0x17f0,4);
    FUN_101c2730((undefined4 *)&DAT_106856e0,"m_flLastShotFireTime",(int)&DAT_00001828,4);
    FUN_101c2730((undefined4 *)&DAT_10685bcc,"m_flOOZCountdown",0x1784,4);
    FUN_101c2730((undefined4 *)&DAT_10686854,"m_flSlowedUntilTime",0x1814,4);
    FUN_101c2730((undefined4 *)&DAT_10686e3c,"m_flFreezeMovementTime",(int)&DAT_000018a4,4);
    FUN_101c2730((undefined4 *)&DAT_10691670,"m_flExplodeBackRecoverTime",0x7fc,4);
    FUN_101c2730((undefined4 *)&DAT_10692ee0,"m_flReZoomTime",0x48,4);
    FUN_101c2730((undefined4 *)&DAT_10692f34,"m_flDelayUnzoomTime",0x44,4);
    FUN_101c2730((undefined4 *)&DAT_106930d8,"m_flLastZoomTime",0x50,4);
    FUN_101c2730((undefined4 *)&DAT_106931d8,"m_flMovementStateEntryTime",0x6c,4);
    FUN_101c2730((undefined4 *)&DAT_10693814,"m_flRappelKickTime",0x24,4);
    FUN_101c2730((undefined4 *)&DAT_106941e8,"m_flClockStartTime",0x84,4);
    FUN_101c2730((undefined4 *)&DAT_106989d4,"m_flDecreaseShotsFired",0x63c,4);
    FUN_101c2730((undefined4 *)&DAT_10698a28,"m_flDecreaseShotsFiredStart",0x640,4);
    FUN_101c2730((undefined4 *)&DAT_106995ac,"m_flLastAttackTime",0x6f0,4);
    FUN_101c2730((undefined4 *)&DAT_1069a218,"m_flExplodeTime",0x50c,4);
    FUN_101c2730((undefined4 *)&DAT_1069a348,"m_flExplodeTime",0x4fc,4);
    FUN_101c2730((undefined4 *)&DAT_1069c3f0,"m_flSpawnTime",0x3b8,4);
    FUN_101c7240((void *)param_1[1],"Hostage.Falling_Scream",0,0);
    FUN_101c7240(local_14,"EDIT_DELETE",0,0);
    FUN_101c7240(local_28,"EDIT_MARK.Disable",0,0);
    FUN_101c7240(local_c,"EDIT_END_AREA.NotCreating",0,0);
    FUN_101c7240(param_1,"BaseCombatWeapon.WeaponMaterialize",0,0);
    FUN_101c7240(param_1,"BaseEntity.EnterWater",0,0);
    FUN_101c7240(param_1,"Car.Horn_A",0,0);
    FUN_101c7240(param_1,"Car.Horn_B",0,0);
    FUN_101c7240(param_1,"Car.Horn_BTeam",0,0);
    FUN_101c7240(param_1,"Car.Horn_C",0,0);
    FUN_101c7240(param_1,"Car.Horn_D",0,0);
    FUN_101c7240(param_1,"Car.Horn_E",0,0);
    FUN_101c7240(param_1,"DoSpark",0,0);
    FUN_101c7240(param_1,"FuncTrackChange.Blocking",0,0);
    FUN_101c7240(param_1,"General.StopBurning",0,0);
    FUN_101c7240(param_1,"Heli.WarningSound",0,0);
    FUN_101c7240(param_1,"Player.Goal_Reached",0,0);
    FUN_101c7240(param_1,"Player.JacketMovement",0,0);
    FUN_101c7240(param_1,"Player.Roll",0,0);
    FUN_101c7240(param_1,"Player.Whistle_Dog_Follow",0,0);
    FUN_101c7240(param_1,"Smoke.Explode",0,0);
    FUN_101c7240(param_1,"Trunk_Open",0,0);
    FUN_101c7240(piVar3,"Hostage.BodyCheck",0,0);
    FUN_101c7240(pvVar10,"AI_BaseNPC.SentenceStop",0,0);
    FUN_101c7240(pvVar4,"EDIT_DELETE",0,0);
    FUN_101c7240(this,"AI_BaseNPC.BodyDrop_Light",0,0);
    FUN_101c7240(this,"Ammo.Pickup",0,0);
    FUN_101c7240(this,"AmmoBox.Locked",0,0);
    FUN_101c7240(this,"Bomb.AdjustTimer",0,0);
    FUN_101c7240(this,"Canister.ImpactHard",0,0);
    FUN_101c7240(this,"Car.PeelOut",0,0);
    FUN_101c7240(this,"CarDoor_Open",0,0);
    FUN_101c7240(this,"Doll.Squeak",0,0);
    FUN_101c7240(this,"EDIT_BEGIN_AREA.Creating",0,0);
    FUN_101c7240(this,"EDIT_DELETE",0,0);
    FUN_101c7240(this,"EDIT_END_AREA.Creating",0,0);
    FUN_101c7240(this,"EDIT_MARK.Disable",0,0);
    FUN_101c7240(this,"EDIT_MARK.Enable",0,0);
    FUN_101c7240(this,"EDIT_TOGGLE_PLACE_MODE",0,0);
    FUN_101c7240(this,"Fire.Plasma",0,0);
    FUN_101c7240(this,"Hostage.Armed_Escorting",0,0);
    FUN_101c7240(this,"Inferno.Loop",0,0);
    FUN_101c7240(this,"LargeMetalGib.ImpactHard",0,0);
    FUN_101c7240(this,"Malinois.Bite",0,0);
    FUN_101c7240(this,"Malinois.Breathe",0,0);
    FUN_101c7240(this,"Malinois.Pain",0,0);
    FUN_101c7240(this,"Metal.SawbladeStick",0,0);
    FUN_101c7240(this,"Player.DeathNoGib",0,0);
    FUN_101c7240(this,"Player.FallGib",0,0);
    FUN_101c7240(this,"Player.Heal",0,0);
    FUN_101c7240(this,"Player.Hostage_Grab",0,0);
    FUN_101c7240(this,"Player.Rappel_Attach",0,0);
    FUN_101c7240(this,"Player.Rappel_Detach",0,0);
    FUN_101c7240(this,"RPG7.Pickup",0,0);
    FUN_101c7240(this,"Vehicle_Critical_Hit",0,0);
    FUN_101c7240(this,"Weapon.Thrust",0,0);
    FUN_101c7240(this_00,"EDIT_DELETE",0,0);
    FUN_101c7240(this_00,"EDIT_END_AREA.Creating",0,0);
    FUN_101c7240(this_00,"EDIT_MARK.Enable",0,0);
    FUN_101c7240(this_00,"EDIT_MOVE_CORNER.MarkedArea",0,0);
    FUN_101c7240(this_00,"Player.Car_Hit",0,0);
    FUN_101c73c0(local_24,fVar4,"Player.PickupWeapon",0,0,0);
    FUN_101c8690((undefined (*) [16])"AI_BaseNPC.BodyDrop_Heavy");
    FUN_101c8690((undefined (*) [16])"AI_BaseNPC.BodyDrop_Light");
    FUN_101c8690((undefined (*) [16])"AI_BaseNPC.SentenceStop");
    FUN_101c8690((undefined (*) [16])"AI_BaseNPC.SwishSound");
    FUN_101c8690((undefined (*) [16])"DoSpark");
    FUN_101c91a0(param_1,"Smoke.Emit");
    FUN_101c91a0(param_1,"Smoke.Explode");
    FUN_101c91a0(param_1,"SmokeGrenade.Activate");
    FUN_101c91a0(this,"Malinois.Bark");
    FUN_101c9780(param_1,"UTIL_TranslateSoundName");
    FUN_101d1d00(0,iVar1,0x697d,"client",0x11,1);
    FUN_101d1de0(param_1,(byte *)"BlueScoreValue",local_84);
    FUN_101d1de0(param_1,(byte *)"RedScoreValue",local_84);
    FUN_101d5ee0("game_playerkill",(int)this_00,(int)this_00,3,0);
    FUN_101d5ee0("game_playerleave",(int)piVar1,(int)piVar1,3,0);
    FUN_101d79f0(piVar1,(int)"$vhsoffset",DAT_106b5088);
    FUN_101ee120(param_1,"GAME_FALLBACK");
    FUN_101f1360(&DAT_107986c8,(int)"cl_names_debug");
    FUN_101f1360(&DAT_10798c0c,(int)"map_wants_save_disable");
    FUN_101f1360(&DAT_10798c40,(int)"in_forceuser");
    FUN_101f1360(&local_14,(int)"m_pitch");
    FUN_101f1360(&local_18,(int)"mat_monitorgamma");
    FUN_101f1360(&local_28,(int)"joy_movement_stick");
    FUN_101f1360(&local_38,(int)"joy_legacy");
    FUN_101f1360(aiStack32 + 3,(int)"cl_autoreload");
    FUN_101f1360(aiStack32 + 3,(int)"cl_lefthand");
    FUN_101f1360(aiStack32 + 3,(int)"cl_localtracers");
    FUN_101f1360(aiStack32 + 3,(int)"cl_showfps");
    FUN_101f1360(aiStack32 + 3,(int)"cl_steam_overlay_position");
    FUN_101f1360(aiStack32 + 3,(int)"gameinstructor_enable");
    FUN_101f1360(aiStack32 + 3,(int)"net_graph");
    FUN_101f1360(aiStack32 + 3,(int)"option_duck_method");
    FUN_101f1360(aiStack32 + 3,(int)"option_lean_method");
    FUN_101f1360(aiStack32 + 3,(int)"ti_alwaysdrawminimap");
    FUN_101f1360(aiStack32 + 3,(int)"ti_hitoutput_type");
    FUN_101f1360(aiStack32 + 3,(int)"ti_hud_basecolor");
    FUN_101f1360(aiStack32 + 3,(int)"ti_show_spawn_intro");
    FUN_101f1360(local_14,(int)"Snd_PitchQuality");
    FUN_101f1360(local_14,(int)"Snd_Surround_Speakers");
    FUN_101f1360(local_14,(int)"cc_subtitles");
    FUN_101f1360(local_14,(int)"cl_colorblind");
    FUN_101f1360(local_14,(int)"cl_downloadfilter");
    FUN_101f1360(local_14,(int)"cl_lefthand");
    FUN_101f1360(local_14,(int)"cl_showfps");
    FUN_101f1360(local_14,(int)"closecaption");
    FUN_101f1360(local_14,(int)"dsp_enhance_stereo");
    FUN_101f1360(local_14,(int)"dsp_slow_cpu");
    FUN_101f1360(local_14,(int)"gameinstructor_enable");
    FUN_101f1360(local_14,(int)"joy_cfg_preset");
    FUN_101f1360(local_14,(int)"joy_invertx");
    FUN_101f1360(local_14,(int)"joy_inverty");
    FUN_101f1360(local_14,(int)"joy_movement_stick");
    FUN_101f1360(local_14,(int)"joy_vibration");
    FUN_101f1360(local_14,(int)"joystick");
    FUN_101f1360(local_14,(int)"m_customaccel");
    FUN_101f1360(local_14,(int)"m_pitch");
    FUN_101f1360(local_14,(int)"m_rawinput");
    FUN_101f1360(local_14,(int)"mat_forceaniso");
    FUN_101f1360(local_14,(int)"mat_monitorgamma_tv_enabled");
    FUN_101f1360(local_14,(int)"mat_powersavingsmode");
    FUN_101f1360(local_14,(int)"net_allow_multicast");
    FUN_101f1360(local_14,(int)"option_duck_method");
    FUN_101f1360(local_14,(int)"spec_allowroaming");
    FUN_101f1360(local_14,(int)"ss_splitmode");
    FUN_101f1360(local_14,(int)"ti_bloodsplatter");
    FUN_101f1360(local_14,(int)"ti_low_violence");
    FUN_101f1360(local_14,(int)"voice_enable");
    FUN_101f1360(local_14,(int)"z_wound_client_disabled");
    FUN_101f1360(local_1c,(int)"cl_updaterate");
    FUN_101f1360(local_24,(int)"Snd_PitchQuality");
    FUN_101f1360(local_24,(int)"Snd_Surround_Speakers");
    FUN_101f1360(local_24,(int)"cc_subtitles");
    FUN_101f1360(local_24,(int)"csm_quality_level");
    FUN_101f1360(local_24,(int)"dsp_enhance_stereo");
    FUN_101f1360(local_24,(int)"voice_vox");
    FUN_101f1360(local_34,(int)"closecaption");
    FUN_101f1360(local_34,(int)"dsp_enhance_stereo");
    FUN_101f1360(local_34,(int)"dsp_slow_cpu");
    FUN_101f1360(local_34,(int)"mat_vsync");
    FUN_101f1360(local_34,(int)"voice_modenable");
    FUN_101f1360(local_3c,(int)"cl_cmdrate");
    FUN_101f1360(local_44,(int)"mem_level");
    FUN_101f1360(local_54,(int)"mat_triplebuffered");
    FUN_101f1360(local_64,(int)"mat_aaquality");
    FUN_101f1360(local_74,(int)"mat_queue_mode");
    FUN_101f1360(local_84,(int)"mat_antialias");
    FUN_101f1360(local_94,(int)"cpu_level");
    FUN_101f1360(local_a4,(int)"gpu_mem_level");
    FUN_101f1360(local_b4,(int)"gpu_level");
    FUN_101f1380(&local_50,(int)"cl_logofile",'\x01');
    FUN_101f1380(&uStack80,(int)"cl_logofile",'\x01');
    FUN_101f1b00(param_1,"resource/LoadingDialogErrorLoggedInElsewhere.res");
    FUN_101f1b00(param_1,"resource/LoadingDialogErrorNoSteamConnection.res");
    FUN_101f1b00(param_1,"resource/LoadingDialogErrorVACBanned.res");
    FUN_101f1b00(this,"resource/LoadingDialogError.res");
    FUN_101f3700((int)piVar4,2,"Usage:  setpos_exact x y <z optional>\n",(char *)0x0,(char *)0x0,
    FUN_101f3700((int)this,2,"Usage:  setang_exact pitch yaw <roll optional>\n",(char *)0x0,
    FUN_101f3700((int)this,2,"godmode ON\n",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
    FUN_101f3700((int)this,2,"notarget ON\n",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
    FUN_101f3700(param_1,2,"--- End Vote commands---\n",(char *)0x0,(char *)0x0,(char *)0x0,
    FUN_101f3700(param_1,2,"---Vote commands---\n",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
    FUN_101f45d0(3,"#TI_Game_Commencing",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
    FUN_101f45d0(4,"#TI_Score_TDM_CTWin",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
    FUN_101f45d0(4,"#TI_Score_TDM_TWin",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
    FUN_101f45d0(4,"Doing partial rebuild of Node Graph...\n",(char *)0x0,(char *)0x0,(char *)0x0,
    FUN_101f4630(local_24,3,"#TI_Game_AmmoBoxOpen",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
    FUN_101f4630(local_3c,3,"You have been equipped with your Sniper Rifle this round.\n",
    FUN_101f4630(local_3c,4,"You have been equipped with your Sniper Rifle this round.\n",
    FUN_101f54b0((byte *)"RequestTeamChange:: Assigning %s to TEAM: %s (CURRENT IS: %s)\n");
    FUN_101f54b0((byte *)"TIPlayer::RoundRespawn: [%s]\n");
    FUN_101f54b0((byte *)"Vote failed \"%s %s\" \n");
    FUN_101f54b0((byte *)"Vote succeeded \"%s %s\"\n");
    FUN_101f54b0((byte *)"[OFFLINE_OR_BOT]:: CHANGING %s to TEAM: %s (CURRENT IS: %s)\n");
    FUN_101f54b0((byte *)"[RULES] spawning %i hostages\n");
    FUN_101f54b0((byte *)"[RULES]RoundComplete: [%s] [%s]\n");
    FUN_101f59d0((int *)"_firesmoke",(char *)0x0);
    FUN_101f59d0((int *)"_plasma",(char *)0x0);
    FUN_101f5a00(puVar2,"SERVER_OPTIONS");
    FUN_101f67b0((byte **)(param_1 + 0x11d),"DoorSound.DefaultArrive");
    FUN_101f67b0((byte **)(param_1 + 0x11d),"RotDoorSound.DefaultArrive");
    FUN_101f67b0((byte **)ppauVar1,"DoorSound.DefaultMove");
    FUN_101f67b0((byte **)ppauVar1,"RotDoorSound.DefaultMove");
    FUN_101f7e20((int)local_9c,"Scorch",'\x01');
    FUN_101f9bc0((byte *)"CVoiceGameMgr::ClientCommand: VModEnable (%d)\n");
    FUN_101fbfb0((byte *)"CBaseDemoAction::AddFactory: Bogus factory type %i\n");
    FUN_101fbfb0((byte *)"CM_WriteAreaBits with buffer size %d < 32\n");
    FUN_101fbfb0((byte *)"CMod_LoadAreaPortals: funny lump size");
    FUN_101fbfb0((byte *)"CMod_LoadAreas: funny lump size");
    FUN_101fbfb0((byte *)"CMod_LoadBrushSides: funny lump size");
    FUN_101fbfb0((byte *)"CMod_LoadBrushes: funny lump size");
    FUN_101fbfb0((byte *)"CMod_LoadLeafBrushes: funny lump size");
    FUN_101fbfb0((byte *)"CMod_LoadSubmodels: funny lump size");
    FUN_101fbfb0((byte *)"CMod_LoadTextures: funny lump size");
    FUN_101fbfb0((byte *)"CModelLoader::FindModel: NULL name");
    FUN_101fbfb0((byte *)"COM_LoadFile: bad usehunk");
    FUN_101fbfb0((byte *)"Can\'t load lump %i, allocation of %i bytes failed!!!");
    FUN_101fbfb0((byte *)"Can\'t load lump %i, range is 0 to %i!!!");
    FUN_101fbfb0((byte *)"Can\'t load map from invalid handle!!!");
    FUN_101fbfb0((byte *)"Can\'t resample\n");
    FUN_101fbfb0((byte *)"Client.dll Init() in library client failed.");
    FUN_101fbfb0((byte *)"CollisionBSPData_LoadLeafs: funny lump size");
    FUN_101fbfb0((byte *)"CollisionBSPData_LoadNodes: funny lump size");
    FUN_101fbfb0((byte *)"CollisionBSPData_LoadPlanes: funny lump size");
    FUN_101fbfb0((byte *)"Could not get IGameConsole interface %s from %s\n");
    FUN_101fbfb0((byte *)"Could not get the debug texture info interface!");
    FUN_101fbfb0((byte *)"Could not get the material system config record!");
    FUN_101fbfb0((byte *)"Could not get the material system hardware config interface! (2)");
    FUN_101fbfb0((byte *)"DataTable_CreateClientTablesFromServerTables:  No serverGameDLL loaded!");
    FUN_101fbfb0((byte *)"ED_Alloc: no free edicts");
    FUN_101fbfb0((byte *)"Error loading file %s\n");
    FUN_101fbfb0((byte *)"FloodArea_r: reflooded");
    FUN_101fbfb0((byte *)"GetPlayerLimits:  max players limited to %i");
    FUN_101fbfb0((byte *)"GetPlayerLimits:  min maxplayers %i > max %i");
    FUN_101fbfb0((byte *)"Host_EndGame: %s\n");
    FUN_101fbfb0((byte *)"Host_Error: %s\n");
    FUN_101fbfb0((byte *)"Host_Error: recursively entered");
    FUN_101fbfb0((byte *)"Host_Init:  _heapchk() != _HEAPOK\n");
    FUN_101fbfb0((byte *)"InsertServerCommand with NULL string\n");
    FUN_101fbfb0((byte *)"LightStyle with NULL value!\n");
    FUN_101fbfb0((byte *)"MESSAGE_END called with no active message\n");
    FUN_101fbfb0((byte *)"Map has no nodes");
    FUN_101fbfb0((byte *)"Map has too large visibility lump");
    FUN_101fbfb0((byte *)"Map has too many area portals");
    FUN_101fbfb0((byte *)"Map has too many areas");
    FUN_101fbfb0((byte *)"Map has too many brushes");
    FUN_101fbfb0((byte *)"Map has too many leafbrushes");
    FUN_101fbfb0((byte *)"Map has too many models");
    FUN_101fbfb0((byte *)"Map has too many nodes");
    FUN_101fbfb0((byte *)"Map has too many planes");
    FUN_101fbfb0((byte *)"Map has too many textures");
    FUN_101fbfb0((byte *)"Map leaf 0 is not CONTENTS_SOLID");
    FUN_101fbfb0((byte *)"Map with no leafs");
    FUN_101fbfb0((byte *)"Map with no models");
    FUN_101fbfb0((byte *)"Map with no planes");
    FUN_101fbfb0((byte *)"Map with no textures");
    FUN_101fbfb0((byte *)"Map_LoadModelGuts: Map has too many surfaces, %s");
    FUN_101fbfb0((byte *)"Only %i string tables allowed, can\'t create\'%s\'");
    FUN_101fbfb0((byte *)"PlaneList: bad model");
    FUN_101fbfb0((byte *)"SV_ResetPVS:  Size %i too big for buffer %i\n");
    FUN_101fbfb0((byte *)"SentenceGroupIndexFromName with NULL pGroupName\n");
    FUN_101fbfb0((byte *)"SentenceGroupPick with NULL name\n");
    FUN_101fbfb0((byte *)"SentenceGroupPickSequential with NULL name\n");
    FUN_101fbfb0((byte *)"SentenceIndexFromName with NULL pSentenceName\n");
    FUN_101fbfb0((byte *)"ServerCommand with NULL string\n");
    FUN_101fbfb0((byte *)"Sys_FindFirst without close");
    FUN_101fbfb0((byte *)"Tried to create string table \'%s\' at wrong time\n");
    FUN_101fbfb0((byte *)"Tried to create string table \'%s\' twice\n");
    FUN_101fbfb0((byte *)"Unable to allocate %i bytes for bug description\n");
    FUN_101fbfb0((byte *)"_Host_RunFrame (top):  _heapchk() != _HEAPOK\n");
    FUN_101fbfb0((byte *)"portalnum > numareaportals");
    FUN_101fbfb0((byte *)"unable to record server classes\n");
    FUN_101fc910("Failed to set video mode.\n\nThis game has a minimum requirement of DirectX 7.0 compatible hardware.\n"
    FUN_101fcaf0((int)local_108,"DEFAULT_WRITE_PATH");
    FUN_10204a40("CL_Init()","CL_Shutdown()",0);
    FUN_10204a40("ClientDLL_Init()","ClientDLL_Shutdown()",0);
    FUN_10204a40("Decal_Init()","Decal_Shutdown()",0);
    FUN_10204a40("EngineVGui()->Init()","EngineVGui()->Shutdown()",0);
    FUN_10204a40("InitMaterialSystem()","ShutdownMaterialSystem()",0);
    FUN_10204a40("InitStudioRender()","ShutdownStudioRender()",0);
    FUN_10204a40("R_Init()","R_Shutdown()",0);
    FUN_10204a40("SCR_Init()","SCR_Shutdown()",0);
    FUN_10204a40("StaticPropMgr()->Init()","StaticPropMgr()->Shutdown()",0);
    FUN_10204a40("TextMessageInit()","TextMessageShutdown()",0);
    FUN_10204a40("audiosourcecache->Init( host_parms.memsize >> 2 )","audiosourcecache->Shutdown()",
    FUN_10204a40("modelloader->Init()","modelloader->Shutdown()",0);
    FUN_10204a70((byte *)"CL_Shutdown()",0);
    FUN_10204a70((byte *)"ClientDLL_Shutdown()",0);
    FUN_10204a70((byte *)"Decal_Shutdown()",0);
    FUN_10204a70((byte *)"EngineVGui()->Shutdown()",0);
    FUN_10204a70((byte *)"R_Shutdown()",0);
    FUN_10204a70((byte *)"SCR_Shutdown()",0);
    FUN_10204a70((byte *)"S_Shutdown()",0);
    FUN_10204a70((byte *)"ShutdownMaterialSystem()",0);
    FUN_10204a70((byte *)"ShutdownStudioRender()",0);
    FUN_10204a70((byte *)"StaticPropMgr()->Shutdown()",0);
    FUN_10204a70((byte *)"Steam3Client().Shutdown()",0);
    FUN_10204a70((byte *)"TextMessageShutdown()",0);
    FUN_10204a70((byte *)"modelloader->Shutdown()",0);
    FUN_1020acf0(piVar2,"console.log",'\x01',&local_8,local_33c);
    FUN_1021b1f0(pvVar3,1,"#L4D360UI_Select",'\0',0);
    FUN_1021b1f0(pvVar3,2,"#L4D360UI_Back",'\0',0);
    FUN_1021b1f0(pvVar3,2,"#L4D360UI_Controller_Done",'\0',0);
    FUN_1021b1f0(pvVar3,4,"#GameUI_SaveCloud",'\0',0);
    FUN_1021b1f0(pvVar4,2,"#L4D360UI_Controller_Done",'\0',0);
    FUN_1021b1f0(pvVar4,4,"#GameUI_SaveCloud",'\0',0);
    FUN_1021b1f0(pvVar6,1,"#PORTAL2_ButtonAction_Play",'\0',0);
    FUN_1021b1f0(pvVar6,2,"#L4D360UI_Back",'\0',0);
    FUN_1021b1f0(this,0x20,"#GameUI_UseDefaults",'\0',0);
    FUN_1021b1f0(this,1,"#GameUI_Apply",'\0',0);
    FUN_1021b1f0(this,1,"#L4D360UI_Select",'\0',0);
    FUN_1021b1f0(this,1,"#PORTAL2_ButtonAction_Play",'\0',0);
    FUN_1021b1f0(this,2,"#L4D360UI_Back",'\0',0);
    FUN_1021b1f0(this,2,"#L4D360UI_Controller_Done",'\0',0);
    FUN_1021b1f0(this,2,"#L4D360UI_Done",'\0',0);
    FUN_1021b1f0(this,4,"#GameUI_SaveCloud",'\0',0);
    FUN_1021b1f0(this,4,"#GameUI_SetNewKey",'\0',0);
    FUN_1021b1f0(this,4,"#GameUI_UseDefaults",'\0',0);
    FUN_1021b1f0(this,4,"#L4D360UI_ViewGamerCard",'\0',0);
    FUN_1021b1f0(this,8,"#GameUI_ClearKey",'\0',0);
    FUN_1021b1f0(this_00,1,"#GameUI_Apply",'\0',0);
    FUN_1021b1f0(this_00,1,"#L4D360UI_Select",'\0',0);
    FUN_1021b1f0(this_00,2,"#L4D360UI_Back",'\0',0);
    FUN_1021b1f0(this_00,2,"#L4D360UI_Controller_Done",'\0',0);
    FUN_1021b1f0(this_00,4,"#GameUI_UseDefaults",'\0',0);
    FUN_102202b0("Sampling walkable space...",100,*(int *)((int)this + 0x520) / 10,'\0');
    FUN_10220d00(pvVar1,local_24,"#GameUI_None");
    FUN_10221f90(this,(byte *)"#GameUI_Trilinear");
    FUN_102283d0(DAT_106b121c,"vjobs.dll");
    FUN_1022df40((int)param_1,this_00,0,(uint *)"North");
    FUN_1022df40((int)param_1,this_00,2,(uint *)"South");
    FUN_1023e5f0(param_1,"MOD",'\x01',this_00);
    FUN_102445a0((int)&DAT_1041a888,(byte *)"Unexpected EOF in quoted string");
    FUN_10256080(local_10,iVar5,iVar6,"#Msg_Dominating");
    FUN_10256080(local_10,iVar5,iVar6,"#Msg_Revenge");
    FUN_10256080(local_10,local_8,iVar6,"#Msg_Dominating");
    FUN_10256080(local_10,local_8,iVar6,"#Msg_Revenge");
    FUN_10264260(&local_120,".pwl.raw",0x104);
    FUN_10264260(local_108,".dem",0x104);
    FUN_10264260(local_108,".vmt",0x104);
    FUN_10264260(local_214,".dem",0x200);
    FUN_10264260(local_234,".vdm",0x200);
    FUN_10264260(param_2,".sav",param_3);
    FUN_10265920(&DAT_1063b880,0x3f,(byte *)"FKID_%i");
    FUN_10265920(&DAT_1063b880,0x3f,(byte *)"STEAM_%u:%u:%u");
    FUN_10265920(&DAT_1066b010,0x200,(byte *)"%s/%i");
    FUN_10265920(&DAT_10681330,0x80,(byte *)"(%.3f,%.3f)");
    FUN_10265920(&DAT_10681330,0x80,(byte *)"(%.3f,%.3f,%.3f)");
    FUN_10265920(&DAT_106af7a8,0x2a,(byte *)"%s_saves");
    FUN_10265920(&local_104,0x100,(byte *)"#GameUI_Console_%s_Saves");
    FUN_10265920(&local_108,0x104,(byte *)"//%s/%sautosave%s.sav");
    FUN_10265920(&local_10c,0xff,(byte *)"materials/%s.vtf");
    FUN_10265920(&local_140,0xff,(byte *)"materials/%s.vtf");
    FUN_10265920(&local_20c,0x104,(byte *)"//%s/%sautosavedangerous%s.sav");
    FUN_10265920((char *)&local_34,0x1f,(byte *)"!%s%d");
    FUN_10265920((char *)((int)local_8 + 0x114),0x104,(byte *)"%s%c%s");
    FUN_10265920((char *)((int)this + 0x60),0x40,(byte *)"%s:  ");
    FUN_10265920((char *)local_208,0x200,(byte *)"%s.vprof");
    FUN_10265920((char *)local_270,0x104,(byte *)"materials/lightprobes/%s");
    FUN_10265920((char *)local_28,0x19,(byte *)"%s:%i");
    FUN_10265920((char *)local_50,0x20,(byte *)"%%.%if%s");
    FUN_10265920((char *)local_524,0x200,(byte *)"%s.%s");
    FUN_10265920((char *)param_1,param_2,(byte *)"unnamed");
    FUN_10265920(*(char **)((int)this + 4),uVar6,(byte *)"\nCrash\nUptime( %f )\n");
    FUN_10265920(*(char **)((int)this + 4),uVar6,(byte *)"\nSys_Error( %s )\nUptime( %f )\n");
    FUN_10265920(acStack164,0x80,(byte *)"float( %f )");
    FUN_10265920(acStack164,0x80,(byte *)"int( %d = 0x%X )");
    FUN_10265920(acStack164,0x80,(byte *)"ptr( 0x%p )");
    FUN_10265920(acStack164,0x80,(byte *)"u64( %lld = 0x%llX )");
    FUN_10265920(acStack164,iVar5 * 2 + 0x40,(byte *)"%ls [wstring, len = %d]");
    FUN_10265920(acStack312,0x104,(byte *)"%s:%u");
    FUN_10265920(local_104,0x100,(byte *)"//%s/%s%s.HL2");
    FUN_10265920(local_108,0x104,(byte *)"%s%clocalization%c%s_%s");
    FUN_10265920(local_108,0x104,(byte *)"%s\\%s");
    FUN_10265920(local_108,0x104,(byte *)"DownloadLists/%s.lst");
    FUN_10265920(local_108,0x104,(byte *)"maps\\graphs\\%s.ain");
    FUN_10265920(local_108,0x104,(byte *)"sound\\%s");
    FUN_10265920(local_10c,0x104,(byte *)"%s/screenshot%04d.jpg");
    FUN_10265920(local_10c,0xff,(byte *)"Fieldname is not unique: %s\nRename it and try again.");
    FUN_10265920(local_110,0x103,(byte *)"resource/%s_%%language%%_lv.txt");
    FUN_10265920(local_110,0x104,(byte *)"//%s/%s%s.HL3");
    FUN_10265920(local_110,0x80,(byte *)"(%d)%-.*s");
    FUN_10265920(local_114,0x100,(byte *)"SPLIT%d");
    FUN_10265920(local_114,0x104,(byte *)"%s\\%s.lst");
    FUN_10265920(local_1210,0x80c,(byte *)"(%u): %s");
    FUN_10265920(local_124,0x104,(byte *)"//%s/%s%s.HL1");
    FUN_10265920(local_12c,0x104,(byte *)"dti_client_%s_%02d%02d%02d-%02d%02d%02d.csv");
    FUN_10265920(local_12c,0x80,(byte *)"DSP Volume: %1.2f");
    FUN_10265920(local_138,0x104,(byte *)"maps/%s.bsp");
    FUN_10265920(local_150,0x104,(byte *)"//%s/%s%s.HL3");
    FUN_10265920(local_164,0x104,(byte *)"%s/BugId/%s.jpg");
    FUN_10265920(local_164,0x104,(byte *)"%s/screenshots/%s.jpg");
    FUN_10265920(local_190,0x100,(byte *)"for %.2f minutes");
    FUN_10265920(local_190,0x100,(byte *)"permanently");
    FUN_10265920(local_204,0x200,(byte *)"sound/%s");
    FUN_10265920(local_208,0x200,(byte *)"%.3f at tick %i (%.3f s)");
    FUN_10265920(local_208,0x200,(byte *)"%i to %i (%.3f s)");
    FUN_10265920(local_20c,0x104,(byte *)"//%s/%s%s%02d.%s");
    FUN_10265920(local_20c,0x200,(byte *)"VPROF playback (tick %d, %d%%)");
    FUN_10265920(local_238,0x200,(byte *)"%s/%s.vmf");
    FUN_10265920(local_238,0x200,(byte *)"%s/save/%s.sav");
    FUN_10265920(local_238,0x200,(byte *)"%s/screenshots/%s.jpg");
    FUN_10265920(local_238,0x200,(byte *)"maps/%s.bsp");
    FUN_10265920(local_24,0x20,(byte *)"%3i.%3i.%3i.%3i");
    FUN_10265920(local_24c,0x104,(byte *)"materials/%s.vtf");
    FUN_10265920(local_270,0x104,(byte *)"%s_hdr");
    FUN_10265920(local_308,0x200,(byte *)"%s/%s");
    FUN_10265920(local_310,0x104,(byte *)"%s%03i.dem");
    FUN_10265920(local_310,0x104,(byte *)"%s/%s");
    FUN_10265920(local_340,0xff,(byte *)"/E,/SELECT,%s");
    FUN_10265920(local_374,0x104,(byte *)"materialsrc/lightprobes/%s");
    FUN_10265920(local_3e4,0x200,(byte *)"save/%s.sav");
    FUN_10265920(local_3e4,0x200,(byte *)"screenshots/%s.jpg");
    FUN_10265920(local_404,0x400,(byte *)"File already exists. Overwrite it?\n\n\"%s\"\n");
    FUN_10265920(local_430,0x400,(byte *)"Render Time: %0.1f ms\n");
    FUN_10265920(local_430,0x400,(byte *)"hardware bones: %d\n");
    FUN_10265920(local_430,0x400,(byte *)"has shadow lod: %s\n");
    FUN_10265920(local_430,0x400,(byte *)"lod: %d/%d\n");
    FUN_10265920(local_430,0x400,(byte *)"num batches: %d\n");
    FUN_10265920(local_430,0x400,(byte *)"num materials: %d\n");
    FUN_10265920(local_430,0x400,(byte *)"tris: %d\n");
    FUN_10265920(local_438,0x200,(byte *)"%s/%s.bsp");
    FUN_10265920(local_438,0x200,(byte *)"%s/%s.jpg");
    FUN_10265920(local_438,0x200,(byte *)"%s/%s.sav");
    FUN_10265920(local_43c,0x200,(byte *)"%s/cubemapdefault");
    FUN_10265920(local_43c,0x400,(byte *)"materials/skybox/%s%s.vtf");
    FUN_10265920(local_44,0x40,(byte *)"%d %d %d %d");
    FUN_10265920(local_468,0x400,(byte *)"%s[F %s Kb] / [T %s Kb] / [S %s Kb]");
    FUN_10265920(local_46c,0x400,(byte *)"materials/maps/%s/cubemapdefault.vtf");
    FUN_10265920(local_4e4,0x100,(byte *)"%s: %s");
    FUN_10265920(local_508,0x200,(byte *)"%s/c%d_%d_%d%s.vtf");
    FUN_10265920(local_54,0x40,(byte *)"soundlog_%i_%02i_%02i_%02i_%02i.txt");
    FUN_10265920(local_544,0x104,(byte *)"%s.%s");
    FUN_10265920(local_6c,0x60,(byte *)"client.dll");
    FUN_10265920(local_6c,100,(byte *)"Tactical Intervention %i (build %d)");
    FUN_10265920(local_80,0x60,(byte *)"client.dll");
    FUN_10265920(local_bc,0x60,(byte *)"%s/*.%s");
    FUN_10265920(local_c0,0x80,(byte *)"%s can\'t find frame from tick %d");
    FUN_10265920(param_2,0x104,(byte *)"%s/overflow");
    FUN_10265920(param_2,param_3,(byte *)"sprites/%s");
    FUN_10265920(pcVar1,0x40,(byte *)"%i.%i.%i.%i:%i");
    FUN_10265920(pcVar2,iVar1 + 6U,(byte *)"vgui/%s");
    FUN_10265920(pcVar3,0xff,(byte *)"[A:%u:%u(%u)]");
    FUN_10265920(pcVar3,0xff,(byte *)"[C-%u:%u]");
    FUN_10265920(pcVar3,0xff,(byte *)"[G:%u:%u]");
    FUN_10265920(pcVar3,0xff,(byte *)"[I:%u:%u]");
    FUN_10265920(pcVar3,0xff,(byte *)"[M:%u:%u(%u)]");
    FUN_10265920(pcVar3,0xff,(byte *)"[P:%u:%u]");
    FUN_10265920(pcVar3,0xff,(byte *)"[T:%u:%u]");
    FUN_10265920(pcVar3,0xff,(byte *)"[g:%u:%u]");
    FUN_10265920(s_unknown_10415ac0,0x7f,(byte *)"l%i-r%i-%s");
    FUN_10265960((char *)&local_9c,0x40,(ushort *)L"[ %i ]");
    FUN_10265960(local_214,0x100,(ushort *)L"Downloading %hs");
    FUN_10265b40(&DAT_106a8618,"RES_FATALIFMISSING",0x200,0xffffffff);
    FUN_10265b40(&DAT_106a8618,"RES_PRELOAD",0x200,0xffffffff);
    FUN_10265b40((char *)local_168,".wav",0x100,0xffffffff);
    FUN_10265b40((char *)local_16c,".wav",0x100,0xffffffff);
    FUN_10265b40(*(char **)((int)this + 4),"\nConsole History\n",uVar6,0xffffffff);
    FUN_10265b40(acStack269 + 1,"CMOV ",0x100,0xffffffff);
    FUN_10265b40(acStack269 + 1,"FCMOV ",0x100,0xffffffff);
    FUN_10265b40(acStack269 + 1,"RDTSC ",0x100,0xffffffff);
    FUN_10265b40(local_1004," ",0x1000,0xffffffff);
    FUN_10265b40(local_10c,".bsp",0x104,0xffffffff);
    FUN_10265b40(local_204," -    FULL",0x200,0xffffffff);
    FUN_10265b40(local_204," - PARTIAL",0x200,0xffffffff);
    FUN_10265b40(local_214,"_smooth",0x200,0xffffffff);
    FUN_10265b40(local_23c,".bsp",0x104,0xffffffff);
    FUN_10265b40(local_278,".csv",0x104,0xffffffff);
    FUN_10265b40(local_410,".dll",0x400,0xffffffff);
    FUN_10265b40(param_1,"Me ",param_2,0xffffffff);
    FUN_10265b40(param_1,"Win32s ",param_2,0xffffffff);
    FUN_10265b40(param_1,"Windows 7 ",param_2,0xffffffff);
    FUN_10265b40(param_1,"Windows NT ",param_2,0xffffffff);
    FUN_10265b40(param_1,"Windows Vista ",param_2,0xffffffff);
    FUN_10265b40(param_1,"Windows XP ",param_2,0xffffffff);
    FUN_10265b40(param_2,".bsp",param_3,0xffffffff);
    FUN_10265bf0(&DAT_10685fc0,(int)"SAVE/",0x104);
    FUN_10265bf0((char *)auStack572,(int)"hltv_addr",0x104);
    FUN_10265bf0((char *)auStack572,(int)"hltv_clients",0x104);
    FUN_10265bf0((char *)auStack572,(int)"hltv_proxies",0x104);
    FUN_10265bf0((char *)auStack572,(int)"hltv_slots",0x104);
    FUN_10265bf0((char *)local_16c,(int)"1234567890123",0x100);
    FUN_10265bf0((char *)local_2ac,(int)"tv_transmitall",0x104);
    FUN_10265bf0((char *)param_1,(int)"unknown",uVar1);
    FUN_10265bf0((char *)pauVar2,(int)".dx80.vtx",10);
    FUN_10265bf0((char *)pauVar2,(int)".dx90.vtx",10);
    FUN_10265bf0((char *)pauVar2,(int)".sw.vtx",10);
    FUN_10265bf0((char *)pbVar11,(int)"unnamed",0x80);
    FUN_10265bf0(local_130,(int)"Tactical Intervention",0x100);
    FUN_10265bf0(local_138,(int)"default",0x100);
    FUN_10265bf0(param_1,(int)"FCVAR_NEVER_AS_STRING",param_2);
    FUN_10265bf0(pcVar1,(int)"broadcast",0x40);
    FUN_10265bf0(pcVar1,(int)"loopback",0x40);
    FUN_10265bf0(s_unknown_10415ac0,(int)"l0_r0_unknown",0x7f);
    FUN_10265ef0((byte *)"SliderMoved",pbVar3);
    FUN_10265f30((int)&local_1c,"V_NUMBERS");
    FUN_10265f30((int)(puVar10 + -0x9f),"");
    FUN_10265f30((int)(puVar3 + 1),"");
    FUN_10265f30((int)local_14c,"1");
    FUN_10265f30((int)local_250,"tv_relay");
    FUN_10265f30((int)puVar3 + 0x115,"Lookup");
    FUN_10265ff0("\\game\\");
    FUN_10266700(&DAT_105f9ec0,(int)"r_shadowlod",&DAT_10324484,0);
    FUN_10266700(&DAT_105f9f20,(int)"r_shadowlodbias",&DAT_10325f28,0);
    FUN_102667c0(&DAT_104b04c0,"voice_enable");
    FUN_102667c0(&DAT_104b04cc,"voice_vox");
    FUN_102667c0(&DAT_104b04d4,"voice_ptt");
    FUN_102667c0(&DAT_104e26bc,"building_cubemaps");
    FUN_102667c0(&DAT_104e423c,"gpu_level");
    FUN_102667c0(&DAT_104e4248,"cpu_level");
    FUN_102667c0(&DAT_104e4250,"mat_vsync");
    FUN_102667c0(&DAT_104e4258,"mat_antialias");
    FUN_102667c0(&DAT_104e4260,"mat_forceaniso");
    FUN_102667c0(&DAT_104e4268,"mat_picmip");
    FUN_102667c0(&DAT_104e4270,"cl_csm_enabled");
    FUN_102667c0(&DAT_104e4278,"csm_quality_level");
    FUN_102667c0(&DAT_104e4280,"mat_software_aa_strength");
    FUN_102667c0(&DAT_104e4288,"mat_motion_blur_enabled");
    FUN_102667c0(&DAT_105f8b1c,"sv_skyname");
    FUN_102667c0(&DAT_105f8b44,"r_lod_switch_scale");
    FUN_102667c0(&DAT_105f9bf8,"r_staticlight_streams");
    FUN_102667c0(&DAT_105f9c04,"r_staticlight_streams");
    FUN_102667c0(&DAT_105f9ea4,"r_staticlight_streams");
    FUN_102667c0(&DAT_105f9f84,"r_staticlight_streams");
    FUN_102667c0(&DAT_1066a7cc,"sv_tags");
    FUN_102667c0(&DAT_1066b210,"host_thread_mode");
    FUN_102667c0(&DAT_1066b21c,"sv_alternateticks");
    FUN_102667c0(&DAT_1066b224,"ai_strong_optimizations");
    FUN_102667c0(&DAT_1066b22c,"mat_queue_mode");
    FUN_102667c0(&DAT_1066b234,"skill");
    FUN_102667c0(&DAT_10683cac,"joystick_force_disabled");
    FUN_102667c0(&DAT_10683cb8,"joystick_force_disabled_set");
    FUN_102667c0(&DAT_106ef500,"developer");
    FUN_102667c0(&local_14,"mat_drawwater");
    FUN_102667c0(&local_1c,"r_lightstyle");
    FUN_102667c0(&local_20,"sv_tags");
    FUN_102667c0(&local_24,"r_occlusion");
    FUN_102667c0(&local_2c,"mat_disable_bloom");
    FUN_102667c0(&local_44,"r_drawothermodels");
    FUN_102667c0(&local_c,"mapcyclefile");
    FUN_102667c0(&local_c,"r_shadows");
    FUN_102667c0(local_34,"cl_mouseenable");
    FUN_102667c0(local_3c,"r_portalsopenall");
    FUN_102667c0(local_c,"csm_quality_level");
    FUN_102667c0(local_c,"mat_aaquality");
    FUN_102667c0(local_c,"mat_antialias");
    FUN_102667c0(local_c,"mat_queue_mode");
    FUN_102667c0(local_c,"mat_resolveFullFrameDepth");
    FUN_102667c0(local_c,"mat_vrmode_adapter");
    FUN_102667c0(local_c,"r_staticlight_streams");
    FUN_10266970(local_103c,0x1000,(byte *)" max. %f");
    FUN_10266970(local_103c,0x1000,(byte *)" min. %f");
    FUN_10266970(local_103c,0x1000,(byte *)"\"%s\" ");
    FUN_10266970(local_103c,0x1000,(byte *)"\"%s\" = \"%s\"");
    FUN_102686b0(param_1,(uint *)"framerate",30.0);
    FUN_102687d0(param_1,(uint *)"height",uVar2);
    FUN_102687d0(param_1,(uint *)"outputtga",0);
    FUN_102687d0(param_1,(uint *)"outputwav",0);
    FUN_102687d0(param_1,(uint *)"width",uVar2);
    FUN_10269b20(this_01,(byte *)"_minmode");
    FUN_1026b080(&DAT_1041bbf8," ReadToken overflow");
    FUN_1026b080(&DAT_1041bbf8,"RecursiveLoadFromBuffer:  recursion overflow");
    FUN_1026b250(this_00,(uint *)"delay",*(uint *)(param_2 + 0x38));
    FUN_1026b250(this_00,(uint *)"directionx",*(uint *)(param_2 + 0x1c));
    FUN_1026b250(this_00,(uint *)"directiony",*(uint *)(param_2 + 0x20));
    FUN_1026b250(this_00,(uint *)"directionz",*(uint *)(param_2 + 0x24));
    FUN_1026b250(this_00,(uint *)"originx",*(uint *)(param_2 + 0x10));
    FUN_1026b250(this_00,(uint *)"originy",*(uint *)(param_2 + 0x14));
    FUN_1026b250(this_00,(uint *)"originz",*(uint *)(param_2 + 0x18));
    FUN_1026b280(**(void ***)(*(int *)((int)this + 0x1f8) + param_1 * 0xc),(uint *)"disabled",
    FUN_1026b280(local_8,(uint *)"column",*(uint *)((int)this + 0x1a4));
    FUN_1026b280(local_8,(uint *)"delta",param_1 - *(int *)((int)this + 0x1ac));
    FUN_1026b280(local_8,(uint *)"tabposition",*(uint *)((int)this + 0x2b4));
    FUN_1026b280(param_1,(uint *)"BindsFrame",uVar3);
    FUN_1026b280(param_1,(uint *)"BindsMax",uVar5);
    FUN_1026b280(param_1,(uint *)"clientinsetx_override",*(uint *)((int)this + 0x244));
    FUN_1026b280(param_1,(uint *)"context",*(uint *)((int)this + 0x484));
    FUN_1026b280(param_1,(uint *)"selected",uVar2 & 0xff);
    FUN_1026b280(puVar5,(uint *)"$ignorez",1);
    FUN_1026b280(puVar5,(uint *)"$no_fullbright",1);
    FUN_1026b280(puVar5,(uint *)"$nocull",1);
    FUN_1026b280(puVar5,(uint *)"$nofog",1);
    FUN_1026b280(puVar5,(uint *)"$translucent",1);
    FUN_1026b280(puVar5,(uint *)"$vertexalpha",1);
    FUN_1026b280(puVar5,(uint *)"$vertexcolor",1);
    FUN_1026b280(puVar5,(uint *)"splitscreenplayer",0);
    FUN_1026b280(this_00,(uint *)"entchannel",*(uint *)(param_2 + 8));
    FUN_1026b280(this_00,(uint *)"entchannel",param_3);
    FUN_1026b280(this_00,(uint *)"flags",*(uint *)(param_2 + 0x30));
    FUN_1026b280(this_00,(uint *)"fromserver",*(byte *)(param_2 + 0x60) >> 2 & 1);
    FUN_1026b280(this_00,(uint *)"pitch",*(uint *)(param_2 + 0x34));
    FUN_1026b280(this_00,(uint *)"soundlevel",*(uint *)(param_2 + 0x2c));
    FUN_1026b280(this_00,(uint *)"soundsource",*(uint *)(param_2 + 4));
    FUN_1026b280(this_00,(uint *)"soundsource",param_2);
    FUN_1026b280(this_00,(uint *)"speakerentity",*(uint *)(param_2 + 0x3c));
    FUN_1026b280(this_00,(uint *)"staticsound",*(byte *)(param_2 + 0x60) & 1);
    FUN_1026b280(this_00,(uint *)"updatepositions",*(byte *)(param_2 + 0x60) >> 1 & 1);
    FUN_1026b280(this_01,(uint *)"button",uVar2);
    FUN_1026b280(this_01,(uint *)"completionState",*(uint *)((int)this + 0x1c0));
    FUN_1026b280(this_01,(uint *)"wroteFile",*(byte *)((int)this + 0x204) >> 3 & 1);
    FUN_1026b280(this_02,(uint *)"splitscreenplayer",0);
    FUN_1026b2f0(local_8,(uint *)"panel",(uint)param_1);
    FUN_1026b2f0(local_8,(uint *)"panel",(uint)this);
    FUN_1026b2f0(local_c,(uint *)"panel",uVar8);
    FUN_1026b2f0(param_1,(uint *)"actionTarget",*(uint *)((int)this + 0x280));
    FUN_1026b2f0(param_1,(uint *)"panel",(uint)this);
    FUN_1026b2f0(puVar5,(uint *)"panel",param_1);
    FUN_1026b2f0(this_00,(uint *)"panel",(uint)param_1);
    FUN_1026b2f0(this_01,(uint *)"contextlabel",*(uint *)((int)this + 0x2d0));
    FUN_1026b310(param_1,(uint *)"URLText",*(char **)((int)this + 600));
    FUN_1026b310(param_1,(uint *)"associate",pcVar2);
    FUN_1026b310(param_1,(uint *)"border",pcVar3);
    FUN_1026b310(param_1,(uint *)"command",pcVar1);
    FUN_1026b310(param_1,(uint *)"drawcolor",*(char **)((int)this + 0x1c8));
    FUN_1026b310(param_1,(uint *)"drawcolor",*(char **)((int)this + 0x1e8));
    FUN_1026b310(param_1,(uint *)"filename",(char *)((int)this + 0x284));
    FUN_1026b310(param_1,(uint *)"filesize","");
    FUN_1026b310(param_1,(uint *)"filesize",pcVar2);
    FUN_1026b310(param_1,(uint *)"filetype",(char *)((int)this + 900));
    FUN_1026b310(param_1,(uint *)"fillcolor",*(char **)((int)this + 0x1e4));
    FUN_1026b310(param_1,(uint *)"image",*(char **)((int)this + 0x1b4));
    FUN_1026b310(param_1,(uint *)"image",*(char **)((int)this + 0x1c4));
    FUN_1026b310(param_1,(uint *)"image",*(char **)((int)this + 0x1c8));
    FUN_1026b310(param_1,(uint *)"image",*(char **)((int)this + 0x1e0));
    FUN_1026b310(param_1,(uint *)"imagecolor",*(char **)((int)this + 0x1b8));
    FUN_1026b310(param_1,(uint *)"leftText",local_104);
    FUN_1026b310(param_1,(uint *)"rightText",local_104);
    FUN_1026b310(param_1,(uint *)"variable",*(char **)((int)this + 0x1c8));
    FUN_1026b310(param_1,(uint *)&DAT_1036e20c,"#FileOpenDialog_FileType_Folder");
    FUN_1026b310(puVar5,(uint *)"$basetexture","console/startup_loading.vtf");
    FUN_1026b310(puVar5,(uint *)"$basetexture","vgui/title.vtf");
    FUN_1026b310(puVar5,(uint *)"$basetexture",local_242);
    FUN_1026b310(this_00,(uint *)"reason","load");
    FUN_1026b310(this_00,(uint *)"soundname",param_3);
    FUN_1026b310(this_00,(uint *)"soundname",param_4);
    FUN_1026b310(this_00,(uint *)&DAT_1037c28c,"<shouldn\'t see this>");
    FUN_1026b310(this_01,(uint *)"fileType",pcVar1);
    FUN_1026b310(this_01,(uint *)"fullPath",pcVar1);
    FUN_1026b310(this_01,(uint *)&DAT_1037c28c,"Call tree");
    FUN_1026b3e0(param_1,(uint *)"filesizeint",*(undefined4 *)((int)this + 0x50),
    FUN_1026b3e0(param_1,(uint *)"filesizeint",0,0);
    FUN_1026b830((char *)local_88,0x40,(int)L"%d %d %d %d");
    FUN_1026d290(&local_e8,(byte *)"  %d material%s:");
    FUN_1026d290(&local_e8,(byte *)"-- no materials --");
    FUN_1026d290(local_28 + 0xa7,(byte *)"%s%s\r\n%s Kb    %dx%d    %s");
    FUN_1026d290(param_1,(byte *)"%.04f");
    FUN_1026d290(param_1,(byte *)"%d %d %d %d");
    FUN_1026d290(param_1,(byte *)"\"%s\"\n{\n");
    FUN_1026e000(&DAT_10685e04,(byte *)"g_SaveMemory",0x2000000,0x10000,0,0x10);
    FUN_1026e000(&DAT_106bb648,(byte *)"DMXAlloc",0x200000,0,0,4);
    FUN_1026e000(*(void **)(param_1 + 0x100),(byte *)"LightingData",param_2,0,0,0x10);
    FUN_1026e510(&DAT_104e1f8c,local_8,(undefined4 *)"V_MAPNAME");
    FUN_1026ebe0(&local_24,".");
    FUN_1026ebe0(param_4,"R");
    FUN_1026ed50((void *)(param_1 + 0x1a4),",");
    FUN_1026ed50(local_60,".jpg");
    FUN_1026ee20(this,(byte *)"%s%03i.%s");
    FUN_102705c0((uint *)&DAT_106817f8,"{}()\'");
    FUN_102705c0((uint *)&DAT_106818f8,"{}()\':");
    FUN_102705c0((uint *)&DAT_106df348,"{}()\':");
    FUN_102705c0(local_134,"");
    FUN_102705c0(local_260,"");
    FUN_10270a90(local_1c,"CDemo::WriteUserCmd",local_11c,0x100,-1);
    FUN_10270a90(local_1c,"CDemoRecorder::RecordServerClasses",local_4c[0],0x200000,-1);
    FUN_10272dd0(piVar5,"intel_zone");
    FUN_10281690(piVar4,0,"staticPanel",0);
    FUN_10281690(puVar6,(int)this,"frame_blGrip",0);
    FUN_10281690(puVar6,(int)this,"frame_bottomGrip",0);
    FUN_10281690(puVar6,(int)this,"frame_brGrip",0);
    FUN_10281690(puVar6,(int)this,"frame_leftGrip",0);
    FUN_10281690(puVar6,(int)this,"frame_rightGrip",0);
    FUN_10281690(puVar6,(int)this,"frame_tlGrip",0);
    FUN_10281690(puVar6,(int)this,"frame_topGrip",0);
    FUN_10281690(puVar6,(int)this,"frame_trGrip",0);
    FUN_10282070(this,"CansBunch.BulletImpact");
    FUN_10282070(this,"Cardboard.Break");
    FUN_10282070(this,"Cereal.BulletImpact");
    FUN_10282070(this,"Dirt.BulletImpact");
    FUN_10282070(this,"Paper.BulletImpact");
    FUN_10282070(this,"candybag.break");
    FUN_10282070(this,"chipbag.Break");
    FUN_10282070(this,"fx.bricks_explode");
    FUN_10282070(this,"fx.cosmetics_explode");
    FUN_10282070(this,"fx.cups_explode");
    FUN_10282070(this,"fx.disks_explode");
    FUN_10282070(this,"fx.food_explode");
    FUN_10282070(this,"fx.food_explode_gushy");
    FUN_10282070(this,"fx.fullglassbottle_explode");
    FUN_10282070(this,"fx.glasses_explode");
    FUN_10282070(this,"fx.hardcandy_explode");
    FUN_10282070(this,"fx.jewelery_explode");
    FUN_10282070(this,"fx.jug_explode");
    FUN_10282070(this,"fx.rawmeat_explode");
    FUN_10282070(this,"fx.rawveggies_explode");
    FUN_10282070(this,"fx.tv_explode");
    FUN_10282070(this,"fx.watches_explode");
    FUN_10283a00("Color");
    FUN_10283a00("HFont");
    FUN_10283a00("bool");
    FUN_10283a00("char");
    FUN_10283a00("float");
    FUN_10283a00("int");
    FUN_10283a00("proportional_float");
    FUN_10283a00("proportional_int");
    FUN_10283a00("proportional_xpos");
    FUN_10283a00("proportional_ypos");
    FUN_10283a00("string");
    FUN_10283a00("textureid");
    FUN_10283a00("vgui::HFont");
    FUN_10283b00("Command",0x102834f2,0,1,1,"command",0,0);
    FUN_10283b00("CursorEntered",0x10283552,0,0,0,0,0,0);
    FUN_10283b00("CursorExited",0x1028355a,0,0,0,0,0,0);
    FUN_10283b00("CursorMoved",0x1028354a,0,2,2,&DAT_103c8e70,2,&DAT_103c8e68);
    FUN_10283b00("Delete",0x10283512,0,0,0,0,0,0);
    FUN_10283b00("Invalidate",0x102835ba,0,0,0,0,0,0);
    FUN_10283b00("KeyCodePressed",0x1028358a,0,1,2,&DAT_103c8ea4,0,0);
    FUN_10283b00("KeyCodeReleased",0x102835a2,0,1,2,&DAT_103c8ea4,0,0);
    FUN_10283b00("KeyCodeTyped",0x10283592,0,1,2,&DAT_103c8ea4,0,0);
    FUN_10283b00("KeyFocusTicked",0x102835aa,0,0,0,0,0,0);
    FUN_10283b00("KeyTyped",0x1028359a,0,1,2,"unichar",0,0);
    FUN_10283b00("KillFocus",0x1028350a,0,0,0,0,0,0);
    FUN_10283b00("MouseCaptureLost",0x102834fa,0,0,0,0,0,0);
    FUN_10283b00("MouseDoublePressed",0x1028356a,0,1,2,&DAT_103c8ea4,0,0);
    FUN_10283b00("MouseFocusTicked",0x102835b2,0,0,0,0,0,0);
    FUN_10283b00("MousePressed",0x10283562,0,1,2,&DAT_103c8ea4,0,0);
    FUN_10283b00("MouseReleased",0x1028357a,0,1,2,&DAT_103c8ea4,0,0);
    FUN_10283b00("MouseTriplePressed",0x10283572,0,1,2,&DAT_103c8ea4,0,0);
    FUN_10283b00("MouseWheeled",0x10283582,0,1,2,"delta",0,0);
    FUN_10283b00("OnCursorMoved",0x1028351a,0,2,2,&DAT_10334008,2,&DAT_10334004);
    FUN_10283b00("OnMouseFocusTicked",0x10283522,0,0,0,0,0,0);
    FUN_10283b00("OnNavigateFrom",0x10283532,0,1,1,"panelName",0,0);
    FUN_10283b00("OnNavigateTo",0x1028352a,0,1,1,"panelName",0,0);
    FUN_10283b00("OnRequestFocus",0x1028353a,0,2,2,"subFocus",2,"defaultPanel");
    FUN_10283b00("OnScreenSizeChanged",0x10283542,0,2,2,"oldwide",2,"oldtall");
    FUN_10283b00("Repaint",0x102834ed,4,0,0,0,0,0);
    FUN_10283b00("SetFocus",0x10283502,0,0,0,0,0,0);
    FUN_10286860((byte *)"BalanceTeams\n");
    FUN_10286860((byte *)"CalculateScorableHostages...%i");
    FUN_10286860((byte *)"EndCurrentGame\n");
    FUN_10286860((byte *)"GameType Changed To: %s (%i)\n");
    FUN_10286860((byte *)"Notifying server of ROUND END\n");
    FUN_102868b0((int)param_2,"player_securecase","#TI_Score_CTCaseNoVIP",0);
    FUN_102868b0(iVar2,"player_bombdefuse","#TI_Score_BombDisarmed",0);
    FUN_10293ae0(piVar4,0,"Engine Tools",0);
    FUN_10293ae0(piVar4,iVar2,"GameUI Background Panel",0);
    FUN_10293ae0(piVar4,iVar2,"GameUI Panel",0);
    FUN_10293ae0(piVar4,iVar2,"staticClientDLLPanel",0);
    FUN_10293ae0(piVar4,iVar2,"staticClientDLLToolsPanel",0);
    FUN_10293ae0(piVar4,iVar2,"staticGameDLLPanel",0);
    FUN_10295120(puVar1,"BalanceTeams");
    FUN_10295120(puVar1,"ChangeAllTalk");
    FUN_10295120(puVar1,"Kick");
    FUN_10295120(puVar1,"RestartMatch");
    FUN_1029b7f0(param_1,(byte *)"%s, weight: %.2f, cycle: %.2f, aim (%d)");
    FUN_1029c040(piVar3,(int)this,"Button","u",0,(char *)0x0,0);
    FUN_102a2a40(this,"resource/ColorCorrectionUIPanel.res",0,0,0);
    FUN_102a4390(this,"Color Correction Tools",'\x01');
    FUN_102a5400(this_01,"*.raw",".RAW files",'\x01',(char *)0x0);
    FUN_102c1b60(puVar5,(int)this,"TreeImage",0);
    FUN_102cd090(piVar3,(int)this,"Tree view",0);
    FUN_102cd090(puVar3,(int)this,"DirTree",0);
    FUN_102dfac0(this,"Delete",param_1);
    FUN_102dfb20(this,param_4,"PerforceQueryCompleted");
    FUN_102e09a0(this,"OnCancelSaveDocument");
    FUN_102e09a0(this,"OnMarkNotDirty");
    FUN_102ec485("string too long");
    FUN_102ec4b3("invalid string position");
    FUN_102ece79((char *)local_208,(byte *)"\'%s\'\n");
    FUN_102ece79(local_284,(byte *)"%s/platform/skins/%s");
    FUN_102ece79(local_84,(byte *)"DYNAMIC CHANNEL COUNT: %i : %i");
    FUN_102ece79(local_84,(byte *)"Opvars %i");
    FUN_102ece79(local_84,(byte *)"STATIC CHANNEL COUNT: %i : %i");
    FUN_102f2eda(local_168,0x104,(byte *)"maps/%s");
    FUN_102f3db4((byte *)"Not a RIFF File [%s]\n");
    FUN_1033abf0(param_1,"models/vehicles/cars/truck-5_destroyed_p1.mdl",350.0);
    FUN_103444b0((byte *)"PlaneExplosion",&local_74);
    FUN_103444b0((byte *)"Tracer",&local_6c);
    FUN_103444b0((byte *)"gunshotsplash",&local_78);
    FUN_103444b0((byte *)"gunshotsplash",&local_ec);
    FUN_10362c20(local_7c,0,(int)"GlassImpact",&local_e4);
    FUN_10362c20(param_14,0,(int)"ParticleEffect",&local_6c);
    FUN_10362c70((int)"ExplodeFX",&local_6c);
    FUN_10362c70((int)"ExplodeFX",&local_70);
    FUN_10362c70((int)"GlassImpact",&local_cc);
    FUN_10362c70((int)"Impact",&local_6c);
    FUN_10362c70((int)"ParticleEffect",&local_6c);
    FUN_10362c70((int)"SmokeGrenadeSparkler",&local_b0);
    FUN_10362c70((int)"gunshotsplash",&local_ec);
    FUN_10362d80((int)"BreachingChargeExplosion",&local_c8);
    FUN_10362d80((int)"CR_HRagdollOnClient",&local_90);
    FUN_10362d80((int)"ServerPhysPropToClientPhysPropCallBack",&local_98);
    FUN_10362d80((int)"VehicleCollision",&local_78);
    FUN_10362d80((int)"VehicleCollision",&local_84);
    FUN_10362d80((int)"VehicleCollision",&local_d0);
    FUN_10366ec0(param_1,(int **)"iostream stream error",(int *)0x15);
    FUN_103683c0("");
    FUN_10368590(local_24,(int)"Announcer");
    FUN_10368590(local_24,(int)"CallVoteFailed");
    FUN_10368590(local_24,(int)"CreditsMsg");
    FUN_10368590(local_24,(int)"DesiredTimescale");
    FUN_10368590(local_24,(int)"DisplayObjectiveText");
    FUN_10368590(local_24,(int)"DogMarker");
    FUN_10368590(local_24,(int)"EnemyHit");
    FUN_10368590(local_24,(int)"HintText");
    FUN_10368590(local_24,(int)"KeyHintText");
    FUN_10368590(local_24,(int)"LogoTimeMsg");
    FUN_10368590(local_24,(int)"MDStop");
    FUN_10368590(local_24,(int)"ProgressBar");
    FUN_10368590(local_24,(int)"Radio");
    FUN_10368590(local_24,(int)"ReloadEffect");
    FUN_10368590(local_24,(int)"Rumble");
    FUN_10368590(local_24,(int)"SetFOV");
    FUN_10368590(local_24,(int)"Train");
    FUN_10368590(local_24,(int)"VoteFailed");
    FUN_10368590(local_24,(int)"VoteSetup");
    FUN_10368590(local_28,(int)"EnemyHit");
    FUN_10368590(local_28,(int)"SetFOV");
    FUN_10368590(local_2c,(int)"ProgressBar");
    FUN_10368590(local_30,(int)"KilledBy");
    FUN_10368590(local_34,(int)"CloseCaption");
    FUN_10368590(local_34,(int)"VoteFailed");
    FUN_10368590(local_34,(int)"VotePass");
    FUN_10368590(local_38,(int)"EnemyHit");
    FUN_10368590(local_38,(int)"ResetHUD");
    FUN_10368590(local_40,(int)"TDMKillStreakBonus");
    FUN_10368590(local_44,(int)"ProgressBar");
    FUN_10368590(local_44,(int)"Radio");
    FUN_10368590(local_48,(int)"AddLocator");
    FUN_10368590(local_48,(int)"Damage");
    FUN_1038d930(&stack0xffffffdc,(int *)"TLK_ANSWER_HELLO");
    FUN_1038daa0(local_28,(int *)"concept",param_1,0x40a00000);
    FUN_1038daa0(param_1,(int *)"active_behavior",iVar1,uVar4);
    FUN_1038daa0(param_1,(int *)"classname",(int)puVar1,0x3f800000);
    FUN_1038daa0(param_1,(int *)"distancetoenemy",(int)puVar2,uVar4);
    FUN_1038daa0(param_1,(int *)"episodic",(int)&DAT_10436de8,0x3f800000);
    FUN_1038daa0(param_1,(int *)"ragdoll",(int)&DAT_10436de8,0x3f800000);
    FUN_1038daa0(param_2,(int *)"activity",(int)pcVar2,0x3f800000);
    FUN_1038daa0(param_2,(int *)"enemy",(int)puVar7,0x3f800000);
    FUN_1038daa0(param_2,(int *)"npcstate",(int)puVar3,uVar8);
    FUN_1038daa0(param_2,(int *)"seenbyplayer",(int)&DAT_10436de8,0x3f800000);
    FUN_1038dbc0((short *)&DAT_106b9f10,(int *)"Concept");
    FUN_1038dbc0((short *)&DAT_106b9f14,(int *)"Subject");
    FUN_1038eb60(param_1,(int *)"classname");
    FUN_1038fd30(&local_410,(byte *)"%s,%s");
    FUN_103963c0((int)param_1,(byte *)"Expecting \'{\' in rule \'%s\', got \'%s\'\n");
    FUN_103963c0((int)this,(byte *)"FIRE token in response needs exactly three parameters.");
    FUN_103963c0((int)this,(byte *)"THEN token in response lacked any further info.\n");
    FUN_103963c0((int)this,(byte *)"THEN token in response lacked contexts.\n");
    FUN_103963c0(param_1,(byte *)"Expecting \'{\' in enumeration \'%s\', got \'%s\'\n");
    FUN_10398260(local_23c,".mdl",0x200);
    FUN_103987a0(local_208,".vmt",0x200);
    FUN_10399150(&DAT_1060b2b8,0x200,(byte *)"%d %d %d %d");
    FUN_10399150(&DAT_1060b2b8,0x200,(byte *)"[%g %g %g]");
    FUN_10399150(&DAT_1060b880,0x100,(byte *)"models/%s.mdl");
    FUN_10399150(&DAT_106a5ce0,0x100,(byte *)"global %s");
    FUN_10399150(&local_270,0x104,(byte *)"%s__%2d_%3d_%2d_%2d_%2d.txt");
    FUN_10399150((char *)local_208,0x200,(byte *)"maps/%s.txt");
    FUN_10399150((char *)local_234,0x100,(byte *)"%s %s");
    FUN_10399150((char *)local_54,0xc,(byte *)"load%d");
    FUN_10399150((char *)local_6c,0x50,(byte *)"skin%d");
    FUN_10399150((char *)local_bc,0x50,(byte *)"hardware%d");
    FUN_10399150((char *)local_ec,200,(byte *)"TacticalTV camera is now controlled by %s.");
    FUN_10399150(local_104,0x100,(byte *)" \"%s\"");
    FUN_10399150(local_104,0xff,(byte *)"Dir: %i (%i)");
    FUN_10399150(local_104,0xff,(byte *)"Magnitude: %3.2f");
    FUN_10399150(local_104,0xff,(byte *)"Speed: %i (%i)");
    FUN_10399150(local_104,0xff,(byte *)"State: %s");
    FUN_10399150(local_104,0xff,(byte *)"Time:   %3.2f");
    FUN_10399150(local_108,0x104,(byte *)"reslists\\%s.snd");
    FUN_10399150(local_108,0xff,(byte *)"AVelocity: %.2f %.2f %.2f");
    FUN_10399150(local_108,0xff,(byte *)"Current Pos:   %3.3f");
    FUN_10399150(local_108,0xff,(byte *)"Direction: %s");
    FUN_10399150(local_108,0xff,(byte *)"QAngle: %.2f %.2f %.2f");
    FUN_10399150(local_108,0xff,(byte *)"Target Pos:   %3.3f");
    FUN_10399150(local_10c,0xff,(byte *)"Fieldname is not unique: %s\nRename it and try again.");
    FUN_10399150(local_11c,0x100,(byte *)"weapon_%s");
    FUN_10399150(local_120,0x104,(byte *)"skybox/%s%s");
    FUN_10399150(local_130,0x104,(byte *)"maps/%s_selected_%4.4d.txt");
    FUN_10399150(local_204,0x200,(byte *)"    Compare Value: %f");
    FUN_10399150(local_204,0x200,(byte *)"    Initial Value: %f");
    FUN_10399150(local_204,0x200,(byte *)"    duration: %f");
    FUN_10399150(local_204,0x200,(byte *)"    frequency: %f");
    FUN_10399150(local_204,0x200,(byte *)"    hold time: %f");
    FUN_10399150(local_204,0x200,(byte *)"    limit to: %s");
    FUN_10399150(local_204,0x200,(byte *)"    magnitude: %f");
    FUN_10399150(local_204,0x200,(byte *)"    magnitude: %i");
    FUN_10399150(local_204,0x200,(byte *)"    max value: %f");
    FUN_10399150(local_204,0x200,(byte *)"    min value: %f");
    FUN_10399150(local_204,0x200,(byte *)"    radius: %f");
    FUN_10399150(local_204,0x200,(byte *)"    size: %f");
    FUN_10399150(local_204,0x200,(byte *)"%s (%i)");
    FUN_10399150(local_204,0x200,(byte *)"%s%d.vmt");
    FUN_10399150(local_204,0x200,(byte *)"Branch value: %s");
    FUN_10399150(local_204,0x200,(byte *)"Constant: %3.2f");
    FUN_10399150(local_204,0x200,(byte *)"Damping: %3.2f");
    FUN_10399150(local_204,0x200,(byte *)"Delay: %d");
    FUN_10399150(local_204,0x200,(byte *)"Is playing entry");
    FUN_10399150(local_204,0x200,(byte *)"Is waiting for BeingSequence");
    FUN_10399150(local_204,0x200,(byte *)"Length: %3.2f");
    FUN_10399150(local_204,0x200,(byte *)"Paused: %s");
    FUN_10399150(local_204,0x200,(byte *)"Playing back: %s");
    FUN_10399150(local_204,0x200,(byte *)"Speed cur (target): %3.2f (%3.2f)");
    FUN_10399150(local_204,0x200,(byte *)"Will loop action sequence");
    FUN_10399150(local_204,0x200,(byte *)"angles: %g %g %g");
    FUN_10399150(local_204,0x200,(byte *)"current speed (goal): %g (%g)");
    FUN_10399150(local_204,0x200,(byte *)"current value: %f");
    FUN_10399150(local_204,0x200,(byte *)"delay %f");
    FUN_10399150(local_204,0x200,(byte *)"end  : (%.2f,%.2f,%.2f)");
    FUN_10399150(local_204,0x200,(byte *)"max ragdoll count: %d");
    FUN_10399150(local_204,0x200,(byte *)"max speed: %g");
    FUN_10399150(local_204,0x200,(byte *)"scenes/%s.vcd");
    FUN_10399150(local_204,0x200,(byte *)"start: (%.2f,%.2f,%.2f)");
    FUN_10399150(local_208,0x200,(byte *)"Current Pos: %3.3f");
    FUN_10399150(local_208,0x200,(byte *)"Mass: %.2f kg / %.2f lb (%s)");
    FUN_10399150(local_208,0x200,(byte *)"Target Pos: %3.3f");
    FUN_10399150(local_208,0x200,(byte *)"refire interval: %.2f sec");
    FUN_10399150(local_20c,0x200,(byte *)"1) Blue : %i");
    FUN_10399150(local_20c,0x200,(byte *)"1) Green: %i");
    FUN_10399150(local_20c,0x200,(byte *)"1) Red  : %i");
    FUN_10399150(local_20c,0x200,(byte *)"2) Blue : %i");
    FUN_10399150(local_20c,0x200,(byte *)"2) Green: %i");
    FUN_10399150(local_20c,0x200,(byte *)"2) Red  : %i");
    FUN_10399150(local_20c,0x200,(byte *)"End  : %3.0f");
    FUN_10399150(local_20c,0x200,(byte *)"HDR Color Scale: %0.3f");
    FUN_10399150(local_20c,0x200,(byte *)"Start: %3.0f");
    FUN_10399150(local_20c,0x200,(byte *)"State: %s");
    FUN_10399150(local_20c,0x200,(byte *)"delta ang (dot)    : %.2f (%f)");
    FUN_10399150(local_20c,0x200,(byte *)"facing: %s");
    FUN_10399150(local_20c,0x200,(byte *)"tolerance ang (dot): %.2f (%f)");
    FUN_10399150(local_210,0x200,(byte *)"Mass: %.2f kg / %.2f lb (%s)");
    FUN_10399150(local_214,0x200,(byte *)"Health: %d, collision group %d");
    FUN_10399150(local_214,0x200,(byte *)"Mass: %.2f kg / %.2f lb (%s)");
    FUN_10399150(local_214,0x200,(byte *)"Skin: %d");
    FUN_10399150(local_214,0x200,(byte *)"Stress: %.2f (%.2f / %.2f)");
    FUN_10399150(local_218,0x200,(byte *)"(%d) Name: %s (%s)");
    FUN_10399150(local_218,0x200,(byte *)"Effects :%d (EF_NODRAW=%d)");
    FUN_10399150(local_218,0x200,(byte *)"Flags :%d");
    FUN_10399150(local_21c,0x200,(byte *)"Fail: %s (%s)\n");
    FUN_10399150(local_21c,0x200,(byte *)"Health: %i");
    FUN_10399150(local_21c,0x200,(byte *)"Hint Group: %s");
    FUN_10399150(local_21c,0x200,(byte *)"Intr: %s (%s)\n");
    FUN_10399150(local_21c,0x200,(byte *)"Move: %s, ");
    FUN_10399150(local_21c,0x200,(byte *)"STARTSCRIPTING");
    FUN_10399150(local_21c,0x200,(byte *)"Schd: %s, ");
    FUN_10399150(local_21c,0x200,(byte *)"Slot:  %s (%d)\n");
    FUN_10399150(local_21c,0x200,(byte *)"SquadSlot:%s");
    FUN_10399150(local_21c,0x200,(byte *)"Stat: %s, ");
    FUN_10399150(local_21c,0x200,(byte *)"Stress: %.2f");
    FUN_10399150(local_23c,0x200,(byte *)"models/%s");
    FUN_10399150(local_24,0x13,(byte *)"%iXP / %iGP");
    FUN_10399150(local_28,0x20,(byte *)"[Bot]%02i-%s");
    FUN_10399150(local_2c8,0xff,(byte *)"Editing:\n%s\n%s");
    FUN_10399150(local_404,0x400,(byte *)"%3.1f  (%s) --> (%s),%.1f) \n");
    FUN_10399150(local_404,0x400,(byte *)"%3.1f  (%s) --> (%s)\n");
    FUN_10399150(local_408,0x400,(byte *)"Buttons.snd%d");
    FUN_10399150(local_41c,0x200,(byte *)"Vel %.1f %.1f %.1f   Ang: %.1f %.1f %.1f\n");
    FUN_10399150(local_420,0x400,(byte *)"Buttons.snd%d");
    FUN_10399150(local_44,0x40,(byte *)"%d %d %d %d");
    FUN_10399150(local_44,0x40,(byte *)"Vote failed: already voting %s.\n");
    FUN_10399150(local_44,0x40,(byte *)"Voting %s.\n");
    FUN_10399150(local_58c,0x400,(byte *)"Cycle: %.5f (%.5f)");
    FUN_10399150(local_58c,0x400,(byte *)"Sequence: (%3d) %s");
    FUN_10399150(local_60,0x32,(byte *)"  %s (l)");
    FUN_10399150(local_604,0x200,(byte *)"%s.vmt");
    FUN_10399150(local_90,0x80,(byte *)"%.3d,%.3d,%.3d");
    FUN_10399150(local_94,0x32,(byte *)"  %s (m)");
    FUN_10399150(local_9c,0x80,(byte *)"[%s::%s]");
    FUN_10399150(param_1,param_2,(byte *)"%-64.64s");
    FUN_10399150(param_1,param_2,(byte *)"models/%s");
    FUN_10399150(param_2,param_3,(byte *)"\"%s<%i><%s><%s><Area %d>\"");
    FUN_10399150(pcVar2,iVar1 + 6U,(byte *)"vgui/%s");
    FUN_10399190((char *)&local_9c,0x40,(ushort *)L"[ %i ]");
    FUN_10399370(local_1108,"}",0x1000,0xffffffff);
    FUN_10399370(local_120,".vmt",0x104,0xffffffff);
    FUN_10399370(local_208,"_XMAS",0x200,0xffffffff);
    FUN_10399370(param_2,"_XMAS",param_3,0xffffffff);
    FUN_10399450(local_1108,(int)"solid { ",0x1000);
    FUN_10399450(local_138,(int)"default",0x100);
    FUN_10399450(local_21c,(int)"Enemy: ",0x200);
    FUN_10399450(local_21c,(int)"Pathcorner/goal ent: ",0x200);
    FUN_10399450(local_21c,(int)"Squad: ",0x200);
    FUN_1039a0a0(&DAT_1064ffa0,"vcollide_wireframe");
    FUN_1039a0a0(&DAT_10682254,"host_thread_mode");
    FUN_1039a0a0(&DAT_10682260,"sb_perf_collect");
    FUN_1039a0a0(&DAT_106828f4,"host_thread_mode");
    FUN_1039a0a0(&local_10,"ti_tournament");
    FUN_1039a0a0(&local_14,"host_thread_mode");
    FUN_1039a0a0(&local_c,"dsp_speaker");
    FUN_1039a0a0(&local_c,"mat_queue_mode");
    FUN_1039a0a0(&local_c,"violence_hgibs");
    FUN_1039a0a0(&piStack28,"mat_queue_mode");
    FUN_1039a0a0(local_18,"debug_disable_rounds");
    FUN_1039a0a0(local_c,"debug_auto_spawnbots");
    FUN_1039a0a0(local_c,"host_timescale");
    FUN_1039e880(this_01,(byte *)"_minmode");
    FUN_1039fae0(&DAT_105e68f8," ReadToken overflow");
    FUN_1039fae0(&DAT_105e68f8,"RecursiveLoadFromBuffer:  recursion overflow");
    FUN_1039fce0(**(void ***)(*(int *)((int)this + 0x1f8) + param_1 * 0xc),(uint *)"disabled",
    FUN_1039fce0(local_8,(uint *)"column",*(uint *)((int)this + 0x1a4));
    FUN_1039fce0(local_8,(uint *)"delta",param_1 - *(int *)((int)this + 0x1ac));
    FUN_1039fce0(local_8,(uint *)"tabposition",*(uint *)((int)this + 0x2b4));
    FUN_1039fce0(param_1,(uint *)"clientinsetx_override",*(uint *)((int)this + 0x244));
    FUN_1039fce0(param_1,(uint *)"selected",uVar2 & 0xff);
    FUN_1039fce0(puVar3,(uint *)"winner",0);
    FUN_1039fce0(puVar3,(uint *)"winner",2);
    FUN_1039fce0(puVar3,(uint *)"winner",3);
    FUN_1039fce0(puVar4,(uint *)"winner",0);
    FUN_1039fce0(puVar4,(uint *)"winner",2);
    FUN_1039fce0(puVar4,(uint *)"winner",3);
    FUN_1039fce0(puVar6,(uint *)"winner",2);
    FUN_1039fce0(puVar6,(uint *)"winner",3);
    FUN_1039fce0(puVar6,(uint *)"winner",uVar7);
    FUN_1039fce0(this,(uint *)"version",1);
    FUN_1039fce0(this,(uint *)"winner",0);
    FUN_1039fce0(this,(uint *)"winner",2);
    FUN_1039fce0(this,(uint *)"winner",3);
    FUN_1039fce0(this_00,(uint *)"appid",uVar4);
    FUN_1039fce0(this_00,(uint *)"forcenextround",1);
    FUN_1039fce0(this_00,(uint *)"forcerepeatround",1);
    FUN_1039fce0(this_01,(uint *)"button",uVar2);
    FUN_1039fce0(this_01,(uint *)"winner",uVar7);
    FUN_1039fd00(local_8,(uint *)"panel",(uint)param_1);
    FUN_1039fd00(local_8,(uint *)"panel",(uint)this);
    FUN_1039fd00(local_c,(uint *)"panel",uVar8);
    FUN_1039fd00(param_1,(uint *)"panel",(uint)this);
    FUN_1039fd00(puVar5,(uint *)"panel",param_1);
    FUN_1039fd00(this_00,(uint *)"panel",(uint)param_1);
    FUN_1039fd20(local_c,(uint *)"secondarytext",local_214);
    FUN_1039fd20(param_1,(uint *)"URLText",*(char **)((int)this + 600));
    FUN_1039fd20(param_1,(uint *)"associate",pcVar2);
    FUN_1039fd20(param_1,(uint *)"border",pcVar3);
    FUN_1039fd20(param_1,(uint *)"command",pcVar1);
    FUN_1039fd20(param_1,(uint *)"drawcolor",*(char **)((int)this + 0x1c8));
    FUN_1039fd20(param_1,(uint *)"drawcolor",*(char **)((int)this + 0x1e8));
    FUN_1039fd20(param_1,(uint *)"fillcolor",*(char **)((int)this + 0x1e4));
    FUN_1039fd20(param_1,(uint *)"image",*(char **)((int)this + 0x1b4));
    FUN_1039fd20(param_1,(uint *)"image",*(char **)((int)this + 0x1c4));
    FUN_1039fd20(param_1,(uint *)"image",*(char **)((int)this + 0x1c8));
    FUN_1039fd20(param_1,(uint *)"image",*(char **)((int)this + 0x1e0));
    FUN_1039fd20(param_1,(uint *)"imagecolor",*(char **)((int)this + 0x1b8));
    FUN_1039fd20(param_1,(uint *)"variable",*(char **)((int)this + 0x1c8));
    FUN_1039fd20(puVar3,(uint *)"prim_0",pcVar4);
    FUN_1039fd20(puVar3,(uint *)"primtext","#TI_Score_TDM_Draw");
    FUN_1039fd20(puVar3,(uint *)"primtext","#TI_Score_TeamWin");
    FUN_1039fd20(puVar4,(uint *)"primtext","#TI_Score_TDM_TimeOut_CTWin");
    FUN_1039fd20(puVar4,(uint *)"primtext","#TI_Score_TDM_TimeOut_TWin");
    FUN_1039fd20(puVar4,(uint *)"primtext","#TI_Score_TimeOut");
    FUN_1039fd20(puVar4,(uint *)"secondarytext","#TI_Score_RoundDraw");
    FUN_1039fd20(puVar6,(uint *)"prim_0",pcVar8);
    FUN_1039fd20(puVar6,(uint *)"primtext","#TI_Score_TDM_TimeOut_CTWin");
    FUN_1039fd20(puVar6,(uint *)"primtext","#TI_Score_TDM_TimeOut_TWin");
    FUN_1039fd20(puVar6,(uint *)"primtext","#TI_Score_TimeWinExpire");
    FUN_1039fd20(puVar6,(uint *)"sec_0",pcVar8);
    FUN_1039fd20(puVar6,(uint *)"secondarytext","#TI_Score_HR_RescCount");
    FUN_1039fd20(this,(uint *)"prim_0",pcVar6);
    FUN_1039fd20(this,(uint *)"primtext","#TI_Score_TeamWin");
    FUN_1039fd20(this,(uint *)"primtext","TI_Score_RoundDraw");
    FUN_1039fd20(this,(uint *)"sec_0",pcVar6);
    FUN_1039fd20(this,(uint *)"sec_1",pcVar6);
    FUN_1039fd20(this,(uint *)"secondarytext","#TI_Score_HR_Penalty");
    FUN_1039fd20(this,(uint *)"srcid",&DAT_10646ab8);
    FUN_1039fd20(this_00,(uint *)"sec_0",pcVar3);
    FUN_1039fd20(this_00,(uint *)"secondarytext","#TI_Score_TeamElim");
    FUN_1039fd20(this_00,(uint *)"secondarytext",local_214);
    FUN_1039fd20(this_01,(uint *)"prim_0",pcVar4);
    FUN_1039fd20(this_01,(uint *)"primtext","#TI_Score_TeamWin");
    FUN_1039fd20(this_01,(uint *)"secondarytext","#TI_Score_HR_AllResc");
    FUN_103a0200((char *)local_88,0x40,(int)L"%d %d %d %d");
    FUN_103a04e0((uint *)&DAT_106b9f70,"{}()\':");
    FUN_103a0840(&local_38,"US");
    FUN_103a0840(local_44 + 4,"");
    FUN_103a0840(local_94,"VIP");
    FUN_103a08e0(&local_30,"info_player_terrorist");
    FUN_103a08e0(local_28,"cable/rope.vmt");
    FUN_103a09f0((void *)((int)this + 0x94),"");
    FUN_103a09f0(local_18,"car-12");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"act_flashlight");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"act_goggles");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"autoreload");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"blind");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"blurme");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"burnme");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"freeroam");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"heatvision");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"hitlower");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"hitupper");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"icon_spray");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"jointeam");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"lefthand");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"lo_pt1");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"lo_pt2");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"lo_squad");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"loadout_READY");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"radio");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"signify");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"spectate");
    FUN_103a0cc0(&DAT_105de24c,(short *)local_14,(int *)"swap_grenade");
    FUN_103a2e40(&DAT_106d4f0c,(byte *)"DMXAlloc",0x200000,0,0,4);
    FUN_103a46f0(piVar3,(int)this,"Button","u",0,(char *)0x0,0);
    FUN_103a80c0(puVar5,(int)this,"TreeImage",0);
    FUN_103ad8a0(puVar6,(int)this,"frame_blGrip",0);
    FUN_103ad8a0(puVar6,(int)this,"frame_bottomGrip",0);
    FUN_103ad8a0(puVar6,(int)this,"frame_brGrip",0);
    FUN_103ad8a0(puVar6,(int)this,"frame_leftGrip",0);
    FUN_103ad8a0(puVar6,(int)this,"frame_rightGrip",0);
    FUN_103ad8a0(puVar6,(int)this,"frame_tlGrip",0);
    FUN_103ad8a0(puVar6,(int)this,"frame_topGrip",0);
    FUN_103ad8a0(puVar6,(int)this,"frame_trGrip",0);
    FUN_103afc70("Color");
    FUN_103afc70("HFont");
    FUN_103afc70("bool");
    FUN_103afc70("char");
    FUN_103afc70("float");
    FUN_103afc70("int");
    FUN_103afc70("proportional_float");
    FUN_103afc70("proportional_int");
    FUN_103afc70("proportional_xpos");
    FUN_103afc70("proportional_ypos");
    FUN_103afc70("string");
    FUN_103afc70("textureid");
    FUN_103afc70("vgui::HFont");
    FUN_103afd70("Command",0x103af6fd,0,1,1,"command",0,0);
    FUN_103afd70("CursorEntered",0x103af75d,0,0,0,0,0,0);
    FUN_103afd70("CursorExited",0x103af765,0,0,0,0,0,0);
    FUN_103afd70("CursorMoved",0x103af755,0,2,2,&DAT_105366a8,2,&DAT_105366a0);
    FUN_103afd70("Delete",0x103af71d,0,0,0,0,0,0);
    FUN_103afd70("Invalidate",0x103af7c5,0,0,0,0,0,0);
    FUN_103afd70("KeyCodePressed",0x103af795,0,1,2,&DAT_105366dc,0,0);
    FUN_103afd70("KeyCodeReleased",0x103af7ad,0,1,2,&DAT_105366dc,0,0);
    FUN_103afd70("KeyCodeTyped",0x103af79d,0,1,2,&DAT_105366dc,0,0);
    FUN_103afd70("KeyFocusTicked",0x103af7b5,0,0,0,0,0,0);
    FUN_103afd70("KeyTyped",0x103af7a5,0,1,2,"unichar",0,0);
    FUN_103afd70("KillFocus",0x103af715,0,0,0,0,0,0);
    FUN_103afd70("MouseCaptureLost",0x103af705,0,0,0,0,0,0);
    FUN_103afd70("MouseDoublePressed",0x103af775,0,1,2,&DAT_105366dc,0,0);
    FUN_103afd70("MouseFocusTicked",0x103af7bd,0,0,0,0,0,0);
    FUN_103afd70("MousePressed",0x103af76d,0,1,2,&DAT_105366dc,0,0);
    FUN_103afd70("MouseReleased",0x103af785,0,1,2,&DAT_105366dc,0,0);
    FUN_103afd70("MouseTriplePressed",0x103af77d,0,1,2,&DAT_105366dc,0,0);
    FUN_103afd70("MouseWheeled",0x103af78d,0,1,2,"delta",0,0);
    FUN_103afd70("OnCursorMoved",0x103af725,0,2,2,&DAT_10498674,2,&DAT_10498678);
    FUN_103afd70("OnMouseFocusTicked",0x103af72d,0,0,0,0,0,0);
    FUN_103afd70("OnNavigateFrom",0x103af73d,0,1,1,"panelName",0,0);
    FUN_103afd70("OnNavigateTo",0x103af735,0,1,1,"panelName",0,0);
    FUN_103afd70("OnRequestFocus",0x103af745,0,2,2,"subFocus",2,"defaultPanel");
    FUN_103afd70("OnScreenSizeChanged",0x103af74d,0,2,2,"oldwide",2,"oldtall");
    FUN_103afd70("Repaint",0x10129367,4,0,0,0,0,0);
    FUN_103afd70("SetFocus",0x103af70d,0,0,0,0,0,0);
    FUN_103f9857("string too long");
    FUN_103f9885("invalid string position");
    FUN_103fd956((char *)local_18cc,(int)"%20s%1s%1s");
    FUN_103fd956(pcVar2,(int)"%f %f %f");
    FUN_104244c0((int)&DAT_105e8910,(byte *)"Unexpected EOF in quoted string");
    FUN_1042cc70((char *)local_224,".vmt",0x104);
    FUN_1042d940(&DAT_107c0838,0x100,(byte *)"global %s");
    FUN_1042d940((char *)&local_108,0x100,(byte *)"maps/%s");
    FUN_1042d940((char *)local_10c,0x104,(byte *)"save/%s");
    FUN_1042d940((char *)local_50,0x20,(byte *)"%%.%if%s");
    FUN_1042d940(acStack164,0x80,(byte *)"float( %f )");
    FUN_1042d940(acStack164,0x80,(byte *)"int( %d = 0x%X )");
    FUN_1042d940(acStack164,0x80,(byte *)"ptr( 0x%p )");
    FUN_1042d940(acStack164,0x80,(byte *)"u64( %lld = 0x%llX )");
    FUN_1042d940(acStack164,iVar5 * 2 + 0x40,(byte *)"%ls [wstring, len = %d]");
    FUN_1042d940(local_104,0x100,(byte *)" \"%s\"");
    FUN_1042d940(local_104,0x80,(byte *)"save faceposer\\%s\n");
    FUN_1042d940(local_10c,0x100,(byte *)"x: %d\ny: %d\n");
    FUN_1042d940(local_10c,0x104,(byte *)"cfg\\%s_%d");
    FUN_1042d940(local_10c,0x104,(byte *)"cfg\\%s_ps3");
    FUN_1042d940(local_10c,0xff,(byte *)"Fieldname is not unique: %s\nRename it and try again.");
    FUN_1042d940(local_110,0x100,(byte *)"Sprite %d has non-mod_sprite model %s (type %d)\n");
    FUN_1042d940(local_110,0x104,(byte *)"VideoMaterial%i");
    FUN_1042d940(local_114,0xff,(byte *)"%i/%i XP");
    FUN_1042d940(local_114,0xff,(byte *)"rank_images/%i");
    FUN_1042d940(local_118,0x100,(byte *)"%.2f %.2f %.2f");
    FUN_1042d940(local_118,0x100,(byte *)"%d %d %d %d");
    FUN_1042d940(local_118,0x104,(byte *)"%s/materials/vgui/logos/custom/");
    FUN_1042d940(local_134,0xff,(byte *)"cmd%d voice_modenable 1");
    FUN_1042d940(local_13c,0x80,(byte *)"weapon_%s");
    FUN_1042d940(local_14c,0x104,(byte *)"save/%s");
    FUN_1042d940(local_15c,0x100,(byte *)"%3.1f/s");
    FUN_1042d940(local_15c,0x100,(byte *)"in:  %5i  %5.2fk/s ");
    FUN_1042d940(local_15c,0x100,(byte *)"lerp: %4.1fms");
    FUN_1042d940(local_1cc,0x1a0,(byte *)"* ANNOUNCEMENT: ");
    FUN_1042d940(local_20c,0x104,(byte *)"%s_%d");
    FUN_1042d940(local_20c,0x200,(byte *)"%s_%i_%i_%i_%i");
    FUN_1042d940(local_20c,0x200,(byte *)"%s_c%i");
    FUN_1042d940(local_24,0x20,(byte *)"menuselect %d\n");
    FUN_1042d940(local_314,0x100,(byte *)"previews/%s%s");
    FUN_1042d940(local_404,0x400,(byte *)"TE_DispatchEffect %s %s");
    FUN_1042d940(local_414,0x100,(byte *)"materials/vgui/%s.vmt");
    FUN_1042d940(local_42c,0x200,(byte *)"sound/ui/gamestartup*.mp3");
    FUN_1042d940(local_44,0x40,(byte *)"%d %d %d %d");
    FUN_1042d940(local_4c,0x40,(byte *)"bomb_timer_%d");
    FUN_1042d940(local_50,0x17,(byte *)"showsplan %d");
    FUN_1042d940(local_50,0x17,(byte *)"showsquad %d");
    FUN_1042d940(local_50,0x17,(byte *)"showstage %d");
    FUN_1042d940(local_50,0x17,(byte *)"showteam %d");
    FUN_1042d940(local_50,0x40,(byte *)"vehicle_feet_passenger%d");
    FUN_1042d940(local_70,0x60,(byte *)"%s + %s");
    FUN_1042d940(local_808,0x400,(byte *)"%s %s");
    FUN_1042d940(local_84,0x40,(byte *)"SAVE\\faceposer\\%s.sav");
    FUN_1042d940(local_84,0x80,(byte *)"callvote %s %s\n;");
    FUN_1042d940(local_a0,0x40,(byte *)"vehicle_passenger_eyes%d");
    FUN_1042d940(local_b0,0x80,(byte *)"scripts/%s");
    FUN_1042d940(local_c8,0x80,(byte *)"Spectators : %d");
    FUN_1042d940(param_1,param_2,(byte *)"models/%s");
    FUN_1042d940(pcVar12,0x100,(byte *)"out: %5i  %5.2fk/s");
    FUN_1042d940(pcVar2,iVar1 + 6U,(byte *)"vgui/%s");
    FUN_1042d980((char *)&local_9c,0x40,(ushort *)L"[ %i ]");
    FUN_1042d980(local_10,6,(ushort *)L"/ %d");
    FUN_1042db60(local_108,".ogv",0x104,0xffffffff);
    FUN_1042db60(local_10c,"_ss",0x104,0xffffffff);
    FUN_1042db60(local_1cc," ",0x1a0,0xffffffff);
    FUN_1042db60(local_1cc,"\n",0x1a0,0xffffffff);
    FUN_1042db60(local_204,"config",0x200,0xffffffff);
    FUN_1042db60(local_310,"\n",0x100,0xffffffff);
    FUN_1042db60(local_410,".dll",0x400,0xffffffff);
    FUN_1042db60(local_94c,"\n",0x800,1);
    FUN_1042db60(pcVar1,"platform",0x104,0xffffffff);
    FUN_1042dc40((char *)abStack64,(int)"_spraypaint",0x20);
    FUN_1042dc40((char *)local_144,(int)"icon_rally_here",0x104);
    FUN_1042dc40((char *)local_24,(int)"_antialias",0x20);
    FUN_1042dc40((char *)local_40,(int)"_spraypaint",0x20);
    FUN_1042dc40(local_108,(int)"media/",0x104);
    FUN_1042dc40(local_138,(int)"default",0x100);
    FUN_1042dc40(local_2dc,(int)"Console",0x80);
    FUN_1042dc40(param_1,(int)"icon_key_wide",param_2);
    FUN_1042dc40(pcVar2,(int)"in_graph",0x20);
    FUN_1042dc40(pcVar2,(int)"in_jlook",0x20);
    FUN_1042de40(DAT_10777b88 + 0x155,(int)L"Links Tactical Intervention to Mumble.",0x1000);
    FUN_1042de40(DAT_10777b88 + 0xb,(int)L"Tactical Intervention",0x200);
    FUN_1042df80(param_1,(byte *)"OnCancel");
    FUN_1042df80(pbVar1,(byte *)"RedeemSteamCode");
    FUN_1042e3d0((void *)((int)this + 500),"");
    FUN_1042e3d0((void *)(param_1 + 0x392c),"models/props_jewelery/glasses/glasses-1.mdl");
    FUN_1042e3d0((void *)(param_1 + 0x392c),"models/props_jewelery/glasses/glasses-2.mdl");
    FUN_1042e3d0((void *)(param_1 + 0x392c),"models/props_jewelery/glasses/glasses-3.mdl");
    FUN_1042e3d0((void *)(param_1 + 0x392c),"models/props_jewelery/glasses/glasses-4.mdl");
    FUN_1042e3d0(param_4,"R");
    FUN_1042e6e0((void *)((int)this + 0x94),"");
    FUN_1042ea30(pvVar1,"keyframe");
    FUN_1042ee30(param_1,(uint *)"gamekeyvalues",1);
    FUN_1042f060(this_00,&local_8,(uint *)"noise_scale",&param_1);
    FUN_1042f3d0(*(void **)((int)this + 0x830),(uint *)"entities/suffix",(uint)&DAT_104eefb3);
    FUN_1042f3d0(param_1,(uint *)"navDown",(uint)&DAT_104eefb3);
    FUN_1042f3d0(param_1,(uint *)"navUp",(uint)&DAT_104eefb3);
    FUN_104300e0(piVar7,(uint *)"OfflineConfig.vdf","PROFILE",(int *)0x0);
    FUN_10430570(this_01,(byte *)"_minmode");
    FUN_10431760(&DAT_106facc8," ReadToken overflow");
    FUN_10431760(&DAT_106facc8,"RecursiveLoadFromBuffer:  recursion overflow");
    FUN_10431800(piVar3,"OfflineConfig.vdf",&DAT_104eefa0,0);
    FUN_10431930(param_1,(uint *)"maxvalue",*(uint *)((int)this + 0x264));
    FUN_10431930(param_1,(uint *)"minvalue",*(uint *)((int)this + 0x260));
    FUN_10431930(puVar2,(uint *)"$ALPHA",0x3f000000);
    FUN_10431930(puVar2,(uint *)"$CLOAKFACTOR",0x3ee66666);
    FUN_10431930(puVar2,(uint *)"$CLOAKFACTOR",0x3f0ccccd);
    FUN_10431930(puVar4,(uint *)"duration",*(uint *)((int)this + 0x1438));
    FUN_10431930(puVar4,(uint *)"sinemax",0x3eb33333);
    FUN_10431930(puVar4,(uint *)"sinemin",0x3dcccccd);
    FUN_10431930(this_00,(uint *)"anglesx",*param_2);
    FUN_10431930(this_00,(uint *)"anglesx",param_2[9]);
    FUN_10431930(this_00,(uint *)"anglesy",param_2[10]);
    FUN_10431930(this_00,(uint *)"anglesy",param_2[1]);
    FUN_10431930(this_00,(uint *)"anglesz",param_2[0xb]);
    FUN_10431930(this_00,(uint *)"anglesz",param_2[2]);
    FUN_10431930(this_00,(uint *)"directionx",*(uint *)(param_1 + 0x2c));
    FUN_10431930(this_00,(uint *)"directionx",*param_2);
    FUN_10431930(this_00,(uint *)"directiony",*(uint *)(param_1 + 0x30));
    FUN_10431930(this_00,(uint *)"directiony",param_2[1]);
    FUN_10431930(this_00,(uint *)"directionz",*(uint *)(param_1 + 0x34));
    FUN_10431930(this_00,(uint *)"directionz",param_2[2]);
    FUN_10431930(this_00,(uint *)"duration",param_3);
    FUN_10431930(this_00,(uint *)"duration",param_8);
    FUN_10431930(this_00,(uint *)"magnitude",param_2[0xf]);
    FUN_10431930(this_00,(uint *)"noise",param_5);
    FUN_10431930(this_00,(uint *)"normalx",param_2[6]);
    FUN_10431930(this_00,(uint *)"normaly",param_2[7]);
    FUN_10431930(this_00,(uint *)"normalz",param_2[8]);
    FUN_10431930(this_00,(uint *)"originx",*(uint *)(param_1 + 0x10));
    FUN_10431930(this_00,(uint *)"originx",*param_1);
    FUN_10431930(this_00,(uint *)"originx",*param_2);
    FUN_10431930(this_00,(uint *)"originy",*(uint *)(param_1 + 0x14));
    FUN_10431930(this_00,(uint *)"originy",param_1[1]);
    FUN_10431930(this_00,(uint *)"originy",param_2[1]);
    FUN_10431930(this_00,(uint *)"originz",*(uint *)(param_1 + 0x18));
    FUN_10431930(this_00,(uint *)"originz",param_1[2]);
    FUN_10431930(this_00,(uint *)"originz",param_2[2]);
    FUN_10431930(this_00,(uint *)"radius",param_2[0x10]);
    FUN_10431930(this_00,(uint *)"scale",*(uint *)(param_1 + 0x20));
    FUN_10431930(this_00,(uint *)"scale",param_2[0xe]);
    FUN_10431930(this_00,(uint *)"scale",param_3);
    FUN_10431930(this_00,(uint *)"sizex",*param_3);
    FUN_10431930(this_00,(uint *)"sizey",param_3[1]);
    FUN_10431930(this_00,(uint *)"sizez",param_3[2]);
    FUN_10431930(this_00,(uint *)"startx",param_2[3]);
    FUN_10431930(this_00,(uint *)"starty",param_2[4]);
    FUN_10431930(this_00,(uint *)"startz",param_2[5]);
    FUN_10431960((void *)param_1[0x7d],(uint *)"bot_difficulty",uVar5);
    FUN_10431960((void *)param_1[0x7d],(uint *)"bot_quota",uVar2);
    FUN_10431960(*(void **)((int)this + 0x2c0),(uint *)"?alltalk",1);
    FUN_10431960(*(void **)((int)this + 0x2c0),(uint *)"?challenge",1);
    FUN_10431960(*(void **)((int)this + 0x2c0),(uint *)"?windowed",1);
    FUN_10431960(**(void ***)(*(int *)((int)this + 0x1f8) + param_1 * 0xc),(uint *)"disabled",
    FUN_10431960(local_8,(uint *)"column",*(uint *)((int)this + 0x1a4));
    FUN_10431960(local_8,(uint *)"delta",param_1 - *(int *)((int)this + 0x1ac));
    FUN_10431960(local_8,(uint *)"tabposition",*(uint *)((int)this + 0x2b4));
    FUN_10431960(param_1,(uint *)"allowoutofrange",(uint)(*(char *)((int)this + 0x209) != '\0'));
    FUN_10431960(param_1,(uint *)"baseplayer",1);
    FUN_10431960(param_1,(uint *)"clientinsetx_override",*(uint *)((int)this + 0x244));
    FUN_10431960(param_1,(uint *)"localplayer",(uint)(cVar1 != '\0'));
    FUN_10431960(param_1,(uint *)"selected",uVar2 & 0xff);
    FUN_10431960(param_1,(uint *)"viewmodel",1);
    FUN_10431960(puVar2,(uint *)"$CLOAKPASSENABLED",1);
    FUN_10431960(puVar2,(uint *)"$COMBINEMODE",0);
    FUN_10431960(puVar2,(uint *)"$COMBINEMODE",1);
    FUN_10431960(puVar2,(uint *)"$TRANSLUCENT",1);
    FUN_10431960(puVar2,(uint *)"$VIEWMODEL",0);
    FUN_10431960(puVar2,(uint *)"$VIEWMODEL",1);
    FUN_10431960(puVar3,(uint *)"NumLevels",*(uint *)((int)this + 0x386c));
    FUN_10431960(puVar3,(uint *)"TotalLevelTime",(int)*(float *)((int)this + 0x3868));
    FUN_10431960(puVar3,(uint *)"index",uVar9);
    FUN_10431960(puVar3,(uint *)"state",param_1 & 0xff);
    FUN_10431960(puVar4,(uint *)"fadeout",0);
    FUN_10431960(puVar4,(uint *)"fadeout",1);
    FUN_10431960(puVar4,(uint *)"sineperiod",1);
    FUN_10431960(puVar5,(uint *)"$ignorez",1);
    FUN_10431960(puVar5,(uint *)"$vertexalpha",1);
    FUN_10431960(puVar5,(uint *)"$vertexcolor",1);
    FUN_10431960(this,(uint *)"letterbox",1);
    FUN_10431960(this_00,(uint *)"$additive",0);
    FUN_10431960(this_00,(uint *)"$ignorez",1);
    FUN_10431960(this_00,(uint *)"$nofog",1);
    FUN_10431960(this_00,(uint *)"$translucent",0);
    FUN_10431960(this_00,(uint *)"appid",uVar3);
    FUN_10431960(this_00,(uint *)"attachmentindex",param_2[0x11]);
    FUN_10431960(this_00,(uint *)"breakmodel",param_5);
    FUN_10431960(this_00,(uint *)"brightness",param_4);
    FUN_10431960(this_00,(uint *)"brightness",param_5);
    FUN_10431960(this_00,(uint *)"color",(uint)*(byte *)(param_2 + 0x17));
    FUN_10431960(this_00,(uint *)"count",param_6);
    FUN_10431960(this_00,(uint *)"count",param_7);
    FUN_10431960(this_00,(uint *)"damagetype",param_2[0x14]);
    FUN_10431960(this_00,(uint *)"effects",param_7);
    FUN_10431960(this_00,(uint *)"entindex",*(uint *)(param_1 + 4));
    FUN_10431960(this_00,(uint *)"flags",*(uint *)(param_1 + 0x28));
    FUN_10431960(this_00,(uint *)"flags",param_2[0xc]);
    FUN_10431960(this_00,(uint *)"flags",param_9);
    FUN_10431960(this_00,(uint *)"flashlightHandle",(uint)*(ushort *)(param_1 + 8));
    FUN_10431960(this_00,(uint *)"framerate",*(uint *)(param_1 + 0x24));
    FUN_10431960(this_00,(uint *)"hitbox",param_2[0x15]);
    FUN_10431960(this_00,(uint *)"magnitude",*(uint *)(param_1 + 0x40));
    FUN_10431960(this_00,(uint *)"materialtype",(int)*(char *)(param_1 + 0x38));
    FUN_10431960(this_00,(uint *)"radius",*(uint *)(param_1 + 0x3c));
    FUN_10431960(this_00,(uint *)"randomization",param_6);
    FUN_10431960(this_00,(uint *)"speed",param_4);
    FUN_10431960(this_00,(uint *)"state",uVar1 & 0xff);
    FUN_10431960(this_01,(uint *)"$alphatest",0);
    FUN_10431960(this_01,(uint *)"$no_fullbright",1);
    FUN_10431960(this_01,(uint *)"$nocull",1);
    FUN_10431960(this_01,(uint *)"button",uVar2);
    FUN_10431960(this_01,(uint *)"entindex",*(uint *)((int)this + 4));
    FUN_10431960(this_01,(uint *)"flashlightHandle",(uint)*(ushort *)((int)this + 8));
    FUN_104319d0(local_8,(uint *)"panel",(uint)param_1);
    FUN_104319d0(local_8,(uint *)"panel",(uint)this);
    FUN_104319d0(local_c,(uint *)"panel",uVar8);
    FUN_104319d0(param_1,(uint *)"baseentity",(uint)&DAT_1071ab48);
    FUN_104319d0(param_1,(uint *)"camera",(uint)&DAT_1071cb68);
    FUN_104319d0(param_1,(uint *)"panel",(uint)this);
    FUN_104319d0(param_1,(uint *)"sprite",(uint)&DAT_1072f554);
    FUN_104319d0(puVar4,(uint *)"panel",(uint)this);
    FUN_104319d0(puVar4,(uint *)"selectedPanel",param_1);
    FUN_104319d0(puVar5,(uint *)"panel",param_1);
    FUN_104319d0(this_00,(uint *)"entindex",uVar4);
    FUN_104319d0(this_00,(uint *)"flashlightState",0);
    FUN_104319d0(this_00,(uint *)"panel",(uint)param_1);
    FUN_104319d0(this_00,(uint *)"state",(uint)&DAT_10778830);
    FUN_104319d0(this_00,(uint *)"state",(uint)&DAT_10778870);
    FUN_104319d0(this_01,(uint *)"contextlabel",*(uint *)((int)this + 0x2d0));
    FUN_104319d0(this_01,(uint *)"contextlabel",*(uint *)((int)this + 0x690));
    FUN_104319d0(this_01,(uint *)"flashlightState",(uint)&local_128);
    FUN_104319d0(this_01,(uint *)"panel",(uint)piVar3);
    FUN_104319d0(this_01,(uint *)"panel",(uint)this);
    FUN_104319f0(param_1,(uint *)"URLText",*(char **)((int)this + 600));
    FUN_104319f0(param_1,(uint *)"associate",pcVar2);
    FUN_104319f0(param_1,(uint *)"border",pcVar3);
    FUN_104319f0(param_1,(uint *)"command",pcVar1);
    FUN_104319f0(param_1,(uint *)"cvar_name",(char *)((int)this + 0x21c));
    FUN_104319f0(param_1,(uint *)"drawcolor",*(char **)((int)this + 0x1c8));
    FUN_104319f0(param_1,(uint *)"drawcolor",*(char **)((int)this + 0x1e8));
    FUN_104319f0(param_1,(uint *)"filesize","");
    FUN_104319f0(param_1,(uint *)"filesize",pcVar2);
    FUN_104319f0(param_1,(uint *)"fillcolor",*(char **)((int)this + 0x1e4));
    FUN_104319f0(param_1,(uint *)"image",*(char **)((int)this + 0x1b4));
    FUN_104319f0(param_1,(uint *)"image",*(char **)((int)this + 0x1c4));
    FUN_104319f0(param_1,(uint *)"image",*(char **)((int)this + 0x1c8));
    FUN_104319f0(param_1,(uint *)"image",*(char **)((int)this + 0x1e0));
    FUN_104319f0(param_1,(uint *)"imagecolor",*(char **)((int)this + 0x1b8));
    FUN_104319f0(param_1,(uint *)"leftText",local_104);
    FUN_104319f0(param_1,(uint *)"playername",pcVar3);
    FUN_104319f0(param_1,(uint *)"rightText",local_104);
    FUN_104319f0(param_1,(uint *)"variable",*(char **)((int)this + 0x1c8));
    FUN_104319f0(param_1,(uint *)&DAT_1052d0cc,"#FileOpenDialog_FileType_Folder");
    FUN_104319f0(param_4,(uint *)"Style","TIButtonScrollDown");
    FUN_104319f0(param_4,(uint *)"Style","TIButtonScrollLeft");
    FUN_104319f0(param_4,(uint *)"Style","TIButtonScrollRight");
    FUN_104319f0(param_4,(uint *)"Style","TIButtonScrollUp");
    FUN_104319f0(puVar2,(uint *)"$BASETEXTURE","_rt_FullFrameFB");
    FUN_104319f0(puVar2,(uint *)"$BASETEXTURE","_rt_SkyMask");
    FUN_104319f0(puVar2,(uint *)"$BASETEXTURE","_rt_ViewmodelMask");
    FUN_104319f0(puVar2,(uint *)"$BASETEXTURE","models/player/player_chrome1");
    FUN_104319f0(puVar2,(uint *)"$BASETEXTURE2","_rt_SkyMask");
    FUN_104319f0(puVar2,(uint *)"$CLOAKCOLORTINT","[0 0 1]");
    FUN_104319f0(puVar2,(uint *)"$CLOAKCOLORTINT","[1 0 0]");
    FUN_104319f0(puVar4,(uint *)"command","done");
    FUN_104319f0(puVar4,(uint *)"resultVar","$CLOAKFACTOR");
    FUN_104319f0(pvVar2,(uint *)"Language",(char *)&local_50);
    FUN_104319f0(this,(uint *)"reason","bonusmap");
    FUN_104319f0(this,(uint *)"video",pcVar5);
    FUN_104319f0(this_00,(uint *)"Action","");
    FUN_104319f0(this_00,(uint *)"Action",pcVar6);
    FUN_104319f0(this_00,(uint *)"Binding",(&PTR_DAT_105593d8)[(uVar4 + 1 & 0xf) * 2]);
    FUN_104319f0(this_00,(uint *)"Binding",(&PTR_DAT_105593d8)[(uVar4 - 1 & 0xf) * 2]);
    FUN_104319f0(this_00,(uint *)"effectname",param_1);
    FUN_104319f0(this_00,(uint *)"levelName",param_1);
    FUN_104319f0(this_00,(uint *)"message",pcVar3);
    FUN_104319f0(this_00,(uint *)"model",pcVar4);
    FUN_104319f0(this_00,(uint *)"surfaceprop",pcVar3);
    FUN_104319f0(this_00,(uint *)"title",pcVar3);
    FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_BreakModel");
    FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_Explosion");
    FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_GlowSprite");
    FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_PhysicsProp");
    FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_Sprite");
    FUN_104319f0(this_00,(uint *)&DAT_104f4a20,"TE_SpriteSpray");
    FUN_10431ac0(param_1,(uint *)"filesizeint",*(undefined4 *)((int)this + 0x50),
    FUN_10431ac0(param_1,(uint *)"filesizeint",0,0);
    FUN_10431b10(this_00,(uint *)"ActionText",psVar5);
    FUN_10431ca0((char *)local_88,0x40,(int)L"%d %d %d %d");
    FUN_10432330(&DAT_1071476c,"cl_camera_follow_bone_index");
    FUN_10432330(&DAT_10716088,"blackbox");
    FUN_10432330(&DAT_1072e868,"joy_vibration");
    FUN_10432330(&DAT_107663cc,"r_occlusion");
    FUN_10432330(&DAT_1076eef0,"ss_verticalsplit");
    FUN_10432330(&DAT_10774634,"r_lod_switch_scale");
    FUN_10432330(&DAT_107815fc,"con_enable");
    FUN_10432330(&DAT_10781608,"con_enable");
    FUN_10432330(&DAT_107926d8,"gpu_level");
    FUN_10432330(&DAT_107926e4,"sv_ubersky");
    FUN_10432330(&DAT_10792700,"mat_resolveFullFrameDepth");
    FUN_10432330(&DAT_1079d0f8,"sv_disablefreezecam");
    FUN_10432330(&DAT_1079d104,"sv_disablefreezecam");
    FUN_10432330(&DAT_107b55b0,"mat_wireframe");
    FUN_10432330(&DAT_1083d580,"developer");
    FUN_10432330(local_10,"cl_savescreenshotstosteam");
    FUN_10432330(local_14,"bot_difficulty");
    FUN_10432330(local_1c,"cl_screenshotlocation");
    FUN_10432330(local_c,"bot_quota");
    FUN_10432330(local_c,"cl_mouseenable");
    FUN_10432330(local_c,"cl_savescreenshotstosteam");
    FUN_10432330(local_c,"r_drawflecks");
    FUN_10432330(local_c,"ti_heli_drama_pitch");
    FUN_104323d0(&DAT_10770ed4,(int)"joy_legacy");
    FUN_104323d0(&DAT_10770ee8,(int)"joy_inverty");
    FUN_104323d0(&DAT_10770ef8,(int)"joy_invertx");
    FUN_104323d0(&DAT_10770f2c,(int)"joy_yawsensitivity");
    FUN_104323d0(&DAT_10770f40,(int)"joy_pitchsensitivity");
    FUN_104323d0(&DAT_10772218,(int)"cl_mouselook");
    FUN_104323d0(&DAT_10781014,(int)"fov_desired");
    FUN_10437e70((uint *)&DAT_107686c8,"{}()\'");
    FUN_10437e70((uint *)&DAT_107687c8,"{}()\':");
    FUN_10437e70((uint *)&DAT_1083d5a0,"{}()\':");
    FUN_10438d50(&DAT_10850ecc,(byte *)"DMXAlloc",0x200000,0,0,4);
    FUN_1043a5d0(&DAT_1072b79c,"engine/occlusionproxy","ClientEffect textures",1);
    FUN_1043a5d0((void *)((int)this + 0x1584),&DAT_0000147c + (int)this,"Other textures",1);
    FUN_1043a5d0((void *)((int)this + 0x1b4c),"models/brokenglass/glassbroken_solid",
    FUN_1043a5d0(this,"debug/debugempty","Other textures",1);
    FUN_1043a6c0((void *)((int)this + 0x1580),&DAT_0000147c + (int)this,"Other textures",1,0);
    FUN_1043a6c0((void *)((int)this + 0x24),pcVar2,"Other textures",1,0);
    FUN_1043a6c0((void *)((int)this + 0x24),pcVar3,"Other textures",1,0);
    FUN_1043f640(puVar3,(int)this,"MapPanel",0);
    FUN_1043f640(puVar6,(int)this,"frame_blGrip",0);
    FUN_1043f640(puVar6,(int)this,"frame_bottomGrip",0);
    FUN_1043f640(puVar6,(int)this,"frame_brGrip",0);
    FUN_1043f640(puVar6,(int)this,"frame_leftGrip",0);
    FUN_1043f640(puVar6,(int)this,"frame_rightGrip",0);
    FUN_1043f640(puVar6,(int)this,"frame_tlGrip",0);
    FUN_1043f640(puVar6,(int)this,"frame_topGrip",0);
    FUN_1043f640(puVar6,(int)this,"frame_trGrip",0);
    FUN_1043f640(this,0,"TIRootPanel",0);
    FUN_1043f640(this_00,param_1,"calloutarrow",0);
    FUN_10442730("CHudTextureHandle");
    FUN_10442730("Color");
    FUN_10442730("HFont");
    FUN_10442730("char");
    FUN_10442730("proportional_float");
    FUN_10442730("proportional_int");
    FUN_10442730("proportional_xpos");
    FUN_10442730("proportional_ypos");
    FUN_10442730("textureid");
    FUN_10442730("vgui::HFont");
    FUN_10442830("Command",0x104421c5,0,1,1,"command",0,0);
    FUN_10442830("CursorEntered",0x10442215,0,0,0,0,0,0);
    FUN_10442830("CursorExited",0x1044221d,0,0,0,0,0,0);
    FUN_10442830("CursorMoved",0x1044220d,0,2,2,&DAT_1053937c,2,&DAT_10539374);
    FUN_10442830("Delete",0x104421e5,0,0,0,0,0,0);
    FUN_10442830("Invalidate",0x1044227d,0,0,0,0,0,0);
    FUN_10442830("KeyCodePressed",0x1044224d,0,1,2,&DAT_10539390,0,0);
    FUN_10442830("KeyCodeReleased",0x10442265,0,1,2,&DAT_10539390,0,0);
    FUN_10442830("KeyCodeTyped",0x10442255,0,1,2,&DAT_10539390,0,0);
    FUN_10442830("KeyFocusTicked",0x1044226d,0,0,0,0,0,0);
    FUN_10442830("KeyTyped",0x1044225d,0,1,2,"unichar",0,0);
    FUN_10442830("KillFocus",0x104421dd,0,0,0,0,0,0);
    FUN_10442830("MouseCaptureLost",0x104421cd,0,0,0,0,0,0);
    FUN_10442830("MouseDoublePressed",0x1044222d,0,1,2,&DAT_10539390,0,0);
    FUN_10442830("MouseFocusTicked",0x10442275,0,0,0,0,0,0);
    FUN_10442830("MousePressed",0x10442225,0,1,2,&DAT_10539390,0,0);
    FUN_10442830("MouseReleased",0x1044223d,0,1,2,&DAT_10539390,0,0);
    FUN_10442830("MouseTriplePressed",0x10442235,0,1,2,&DAT_10539390,0,0);
    FUN_10442830("MouseWheeled",0x10442245,0,1,2,"delta",0,0);
    FUN_10442830("OnCursorMoved",0x104421ed,0,2,2,&DAT_10524fd8,2,&DAT_10524fd4);
    FUN_10442830("OnMouseFocusTicked",0x104421f5,0,0,0,0,0,0);
    FUN_10442830("OnNavigateFrom",0x104421fd,0,1,1,"panelName",0,0);
    FUN_10442830("OnNavigateTo",0x101f86d6,0,1,1,"panelName",0,0);
    FUN_10442830("OnRequestFocus",0x10442205,0,2,2,"subFocus",2,"defaultPanel");
    FUN_10442830("OnScreenSizeChanged",0x101918d2,0,2,2,"oldwide",2,"oldtall");
    FUN_10442830("Repaint",0x104421c0,4,0,0,0,0,0);
    FUN_10442830("SetFocus",0x104421d5,0,0,0,0,0,0);
    FUN_10453f60(this,(byte *)"BotPrefixEntry",pcVar7);
    FUN_10453f60(this,(byte *)"PasswordEdit",*(char **)(local_8 + 0x24));
    FUN_104570e0(piVar4,(int)this,"ConsoleEntry",0);
    FUN_104570e0(this_01,(int)this,"ChatInput",0);
    FUN_10460020(*(void **)(uVar2 + 0x414),"\n");
    FUN_104621c0(*(void **)((int)this + 0xc),"");
    FUN_104621c0(*(void **)(iVar1 + 0x1e4),"");
    FUN_104621c0(param_1,"");
    FUN_10462790(piVar3,(int)this,"Button","u",0,(char *)0x0,0);
    FUN_10464a30(puVar5,(int)this,"TreeImage",0);
    FUN_1047c910(this_00,(int)this,"CPanelListPanelVScroll",'\x01',0);
    FUN_1048fbb0(this,puVar4,"#GameUI_CPUPlayerOptions");
    FUN_10494ce0(*(void **)((int)this + 0x19dc),"*.vtf","*.vtf",'\x01',(char *)0x0);
    FUN_10498d40(*(void **)((int)this + 0x19dc),"SelectCustomLogo",local_118);
    FUN_1049b900(pvVar3,(int)this,"ScrollPanel",1);
    FUN_104a69dc("string too long");
    FUN_104a6a0a("invalid string position");
    FUN_104adc9e((byte *)"Invalid Local User\n");
    FUN_104afa65(local_214,0x200,(byte *)"condump%03d.txt");
    FUN_104b1016(local_28,in_DL,"Bad read pointer - no RTTI data!");
    FUN_104dba20((int)&DAT_106fe118,(byte *)"Unexpected EOF in quoted string");
    LVar2 = RegOpenKeyExA((HKEY)0x80000001,"Software\\NaturalPoint\\NATURALPOINT\\NPClient Location"
    LVar4 = RegQueryValueExA(local_8,"User Token 2",(LPDWORD)0x0,(LPDWORD)0x0,local_4c,&local_c);
    LVar4 = RegQueryValueExA(local_8,"User Token 3",(LPDWORD)0x0,(LPDWORD)0x0,local_4c,&local_c);
    LoggingSystem_Log(DAT_100483dc,0,(byte *)"_ExitOnFatalAssert\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414054,0),"%*sFunction: %s\n",param_2,&DAT_1032bf90
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414054,0),"%*sOperation: %s\n",param_2,
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Active ?: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"CurTime: %f\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Duration: %f\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Free ?: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match Int 1: %i\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match Int 1?: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match Int 2: %i\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match Int 2?: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match Int 3: %i\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match Int 3?: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match String 1: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match String 1?: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match String 2: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match String 2?: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Match SubString ?: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"StartTime: %f\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"StopTime: %f\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"Timed ?: %s\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"\nSTOP Operators:\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"\nStack List:\n");
    LoggingSystem_Log(DAT_10427564,0,SUB41(DAT_10414060,0),"\nUPDATE Operators:\n");
    LoggingSystem_Log(DAT_104c2ea8,0,(Color)0xff,"\nUpdate Sound Entry: %s\n",uVar4);
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sEntry Name: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sEntry Script Hash: %i\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sField: %s\n",param_4,&DAT_1032bf90,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sIterate Op: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sOutput: %s\n",param_4,&DAT_1032bf90,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sconvar: %s\n",param_4,&DAT_1032bf90,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*scurve_type: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sinvert_match: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*smatch_channel: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*smatch_entity: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*smatch_entry: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*smatch_sound: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*smatch_substring: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*smatch_this_entry: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*smixgroup: %s\n",param_4,&DAT_1032bf90
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*snormalize_trig: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sopvar: %s\n",param_4,&DAT_1032bf90,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sstop_oldest: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*ssubtract_first_from_last: %s\n",
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*ssubtract_min_time_from_last: %s\n",
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*ssubtract_min_time_from_next: %s\n",
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*ssyncpoint_list: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*sthis_entry_syncpoints: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"%*strack: %s\n",param_4,&DAT_1032bf90,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"SOS PRINT FLOAT: %s: %f\n",
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414054,0),"\n%*sExecute Once: %s\n",param_4,
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414060,0),"Operator Stack: %s\n",this);
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414060,0),"\n%*sOperator Stack: %s\n%*sSize: %i\n",
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414064,0),"\n%*sCue Stacks:\n",1,&DAT_1032bf90);
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414064,0),"\n%*sStop Stacks:\n",1,&DAT_1032bf90);
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414064,0),"\n%*sUpdate Stacks:\n",1,&DAT_1032bf90);
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(DAT_10414064,0),"\n\nSound Operators Collection:\n");
    LoggingSystem_Log(DAT_104c2ea8,0,SUB41(uVar2,0),"\n%*sName: %s\n",param_4,&DAT_1032bf90,uVar1);
    LoggingSystem_Log(DAT_104c2ea8,1,"Error: Unable to find referenced operator: %s",param_1);
    LoggingSystem_Log(DAT_104c2ea8,1,"Error: Unable to find referenced sound operator output: %s",
    LoggingSystem_Log(DAT_104c2ea8,1,"QUEUETOTRACK: %s queued with a delay of %f\n",uVar9);
    LoggingSystem_Log(DAT_104c2ea8,1,"Warning: Unable to acquire convar value: %s\n",param_1 + 0xc);
    LoggingSystem_Log(DAT_104c2ea8,1,"Warning: Unable to set convar value: %s\n",param_1 + 0xc);
    LoggingSystem_Log(DAT_104f3614,0,"%-4s    %-32s    %-10s    %-10s    %-32s    %-32s\n",
    LoggingSystem_Log(DAT_104f3614,0,"Enabling flag \'%s\' on channel \'%s\'.\n",pbVar6,param_1 + 4)
    LoggingSystem_Log(DAT_104f3614,0,"Setting channel \'%s\' color to %08X.\n",param_1 + 4,
    LoggingSystem_Log(DAT_104f3614,0,"Setting channel \'%s\' minimum spew level to \'%s\'.\n",
    LoggingSystem_Log(DAT_10673004,0,(Color)0xb4,"Server: Emitting SoundEntry: %i : %s : %s\n",
    LoggingSystem_Log(DAT_1067e248,1,"FAILED to compile and execute script file named %s\n",
    LoggingSystem_Log(DAT_1077e4c4,0,(Color)0xb4,"Client: Emitting SoundEntry: %i : %s : %s\n",
    MessageBoxA((HWND)0x0,"Failed calling GetModuleFileName","Launcher Error",0);
    MessageBoxA((HWND)0x0,param_2,"Error!",0x1010);
    MessageBoxA((HWND)0x0,param_2,"Warning!",0x1010);
    Msg("    - m_AudiblePlayers[%d] = %lu\n",0,*(undefined4 *)((int)this + 0x18));
    Msg("    - m_ServerBannedPlayers[%d] = %lu\n",0,*(undefined4 *)((int)this + 0x28));
    Msg("   (%.2f) Target: \'%s\', Input: \'%s\', Parameter \'%s\'. Activator: \'%s\', Caller \'%s\'.  \n"
    Msg("   Position: %.2f %.2f %.2f\n",(double)*pfVar5,(double)*(float *)(iVar6 + 4));
    Msg("   \'%s\' (entindex %d) %s \n",pcVar5,iVar3,pcVar6);
    Msg("   \'%s\' : \'%s\' (entindex %d) \n",puVar5,puVar4,iVar2);
    Msg("   done\n");
    Msg("   entity index: %d\n",piVar4[0xebe]);
    Msg("   soundscape index: %d\n",piVar4[0xebc]);
    Msg("  Bits/Sample:  %d\n",uVar2);
    Msg("  Channels:     %d\n",uVar2);
    Msg("  Rate:         %d\n",uVar2);
    Msg("  Samples:      %d\n",uVar2);
    Msg("  [ +map mapname ] -- generate devshots for specified map and exit after that map\n");
    Msg("  [ -condebug ] -- prepend console.log entries with mapname or engine if not in a map\n");
    Msg(" %s: %d",uVar2,uVar4);
    Msg("%.2f %.2f %.2f\n",(double)local_10,(double)fStack12,(double)*(float *)(puVar1 + 1));
    Msg("%.2f %.2f %.2f\n",(double)local_10,(double)local_c,(double)local_8);
    Msg("%20s (%4.1f%% of %s) Normal Query Reuses\n",pcVar6,uVar15,uVar16,pcVar5);
    Msg("%5.3f : adding %d (%d): %s : %5.3f (%.3f)\n",(double)*(float *)(DAT_10646018 + 0x10),iVar2,
    Msg("%8.3f[%d] %s:  %s",(double)*(float *)(DAT_10646018 + 0x10),
    Msg("%8.3f[%d] %s:  %s",(double)*(float *)(PTR_DAT_106ab8dc + 0x10),
    Msg("%d areas chopped into %d\n",iStack12,uVar3);
    Msg("%d collisions in %.2f ms (%u dots)\n",0x9c4,(double)(local_20 * 1000.0),0);
    Msg("%d entities in bone setup array. Should have been cleaned up by now\n",DAT_10716830);
    Msg("%d false non-occlusions\n",local_10);
    Msg("%d messages\n",*(undefined4 *)((int)this + 0x18));
    Msg("%d of %d animations resident\n",iVar2,iVar3);
    Msg("%d overlapping areas selected\n",uVar2);
    Msg("%f: Choosing armed button %s\n",(double)*(float *)(PTR_DAT_106ab8dc + 0x10),pcVar3);
    Msg("%f: Clicked on button with command \'%s\'\n",(double)*(float *)(PTR_DAT_106ab8dc + 0x10),
    Msg("%i : %s (ground %i %s)\n",iVar4,puVar7,iVar3,puVar8);
    Msg("%s %s",&DAT_104c220c,local_104);
    Msg("%s %s",&DAT_10535f64,local_104);
    Msg("%s = %f\n",uVar4);
    Msg("%s CREATING ROPE\n",uVar4);
    Msg("%s at (%.3f, %.3f, %.3f) has no model name!\n",puVar3,(double)(float)param_1[0x84]);
    Msg("%s at (%.3f, %.3f, %.3f) has no model name!\n",puVar4,(double)(float)param_1[0x84],
    Msg("%s equipped with %s, proficiency is %s\n",puVar11,puVar10,pcVar9);
    Msg("%s in solid list (not solid) (%d, %04X) %.*s\n",uVar6);
    Msg("%s%c%s",local_108,0x5c,param_2);
    Msg("%s(%d): Channel not found for sound guid \'%d\'.\n",
    Msg("%s(%d): Recycle channel index %d.\n",
    Msg("%s(%s): Added dynamic interaction: %s\n",puVar5,pcVar3,puVar4);
    Msg("%s: Creating for:\n",param_4);
    Msg("(%2.2f) pct of frame \n",SUB84(dVar2,0),(int)((ulonglong)dVar2 >> 0x20));
    Msg("(localplayer)\n\n");
    Msg("(localplayerweapon)\n\n");
    Msg("(localteam)\n\n");
    Msg("(playerresource)\n\n");
    Msg("* CGameClient::Clear:  Clearing m_VoiceStreams/m_VoiceProximity for %s (%s)\n",uVar4);
    Msg("* CGameClient::Inactivate:  Clearing m_VoiceStreams/m_VoiceProximity for %s (%s)\n",uVar5);
    Msg("******** Spike on frame %d at time %.3f ",DAT_10415b44);
    Msg("********************\n");
    Msg("- PLAYING DEBUG SOUNDSCAPE: %d [%s]\n",DAT_1072f158,puVar1);
    Msg("----------------------------------------------\n");
    Msg("------------------------------------\n");
    Msg("---> DIDN\'T FINISH PARSING %s\n",param_1 + 0x26);
    Msg("-makedevshots usage:\n");
    Msg("=================================\n");
    Msg("Already have converter for type %s, ignoring...\n",pcVar1);
    Msg("Area unmarked.\n");
    Msg("AsyncWrite (%s/%d)...\n",param_1,param_3);
    Msg("Attempting to change device in music player to: [%s][%s][%s]\n",*puVar7,puVar7[1],puVar7[2]
    Msg("Attempting to play video: %s\n",local_154);
    Msg("Bad pstudiohdr in GetSequenceLinearMotion()!\n");
    Msg("Benchmark: %d%% complete.\n",
    Msg("Building Reslists\n");
    Msg("C2S_VALIDATE_SESSION from %llx, session %llx, protocol %d.\n",uVar24,uVar23,local_18);
    Msg("CBaseFlex::AddSceneEvent:  event->GetActor() was NULL!!!\n");
    Msg("CBaseFlex::AddSceneEvent:  scene or event was NULL!!!\n");
    Msg("CBasePlayer::ProcessUsercmds: too many cmds %i sent for player %s\n",param_4,pcVar3);
    Msg("CClientSteamContext logged on = %d\n",*(undefined *)((int)param_1 + 0xa1));
    Msg("CDecalEmitterSystem::LoadDecalsFromScript:  Script \'%s\' missing section \'%s\'\n",puVar14
    Msg("CDecalEmitterSystem::LoadDecalsFromScript:  Unable to load \'%s\'\n",puVar14);
    Msg("CLIENT PLAYER RAGDOLL HAS NO PLAYER!!!!:::if this happens we have a major problem!!!!\n");
    Msg("CVoiceStatus::HandleVoiceMaskMsg\n");
    Msg("CVoiceStatus::SetPlayerBlockedState part 1\n");
    Msg("CVoiceStatus::UpdateSpeakerStatus: ent %d ss[%d] talking = %d\n",param_1,param_2,param_3);
    Msg("C_BaseFlex::AddSceneEvent:  event->GetActor() was NULL!!!\n");
    Msg("C_BaseFlex::AddSceneEvent:  scene or event was NULL!!!\n");
    Msg("Can\'t play until a game is started.\n");
    Msg("Cannot read %s\n",local_1af);
    Msg("Clock drift disabled.\n");
    Msg("Compressing %s to %s...\n",puVar3,uVar2);
    Msg("Could not find %s to play.",local_154);
    Msg("Couldn\'t alloc player sound slot!\n");
    Msg("Couldn\'t find %s\n",local_8);
    Msg("Coulsn\'t play %s, using fallback %s\n",param_1,param_3);
    Msg("Creating default cubemaps for env_cubemap using skybox %s...\n",iVar10);
    Msg("Creating dictionary %s\n",param_1);
    Msg("Current sound patches: %d\n",DAT_106733dc);
    Msg("Current time: %6.3f\n",(double)*(float *)(DAT_10646018 + 0x10));
    Msg("Currently recording %d tests in %d passes, %d records collected in this pass so far\n",
    Msg("Cutoff area %.2f\n",(double)DAT_10766d40);
    Msg("DTI: wrote client stats into %s.\n",DAT_106811d8);
    Msg("Device Set To: id: %i [%s]\n",param_1,
    Msg("Directory copy (%s)\n",param_1);
    Msg("DirectoryCopy....\n");
    Msg("DirectoryCopy: AsyncFinishAllWrites\n");
    Msg("Dumping Attributes..\n");
    Msg("Dumping messages for channel %s(%s) 0x%p\n",uVar4);
    Msg("ERROR: Attempting to give unknown ammo type (%s)\n",param_2);
    Msg("Entity %s (%s) %s Collision Group %d\n",puVar5,pcVar3,pcVar2,iVar6);
    Msg("Entity %s(%s) is ambiguously parented to %s, because there is more than one entity by that name.\n"
    Msg("Epsilon now %f\n",(double)DAT_105941f0);
    Msg("Expected %s found %s ( raw \'%s\' )! (prev: %s)\n",param_1,pcVar7,uVar5,pcVar9);
    Msg("Failed compiling %s\n",param_1);
    Msg("Failed to complete WSACleanup = 0x%x.\n",iVar2);
    Msg("Failed to create Bot.\n");
    Msg("Field type name may have changed or inheritance graph changed, save file is suspect\n");
    Msg("FinishAsyncSave() (%d/%d)\n",uVar2);
    Msg("Format: cl_find_ent <substring>\n");
    Msg("Format: ent_orient <entity name> <optional: allangles>\n");
    Msg("Format: ent_teleport <entity name>\n");
    Msg("FuncTrackTrain \'%s\' has no target.\n",pcVar1);
    Msg("Game Event Fired: %s\n",uVar2);
    Msg("Game Port    : %u\n",uVar9 & 0xffff);
    Msg("Game.dll loaded for \"%s\"\n",uVar3);
    Msg("Generation complete!  %0.1f seconds elapsed.\n",(double)(float)param_1);
    Msg("Header bits %d, flags == %d\n",*(undefined4 *)((int)this + 0xc),
    Msg("IGNORED, no across_transition flag & no globalname\n");
    Msg("Info: OS Paged Pool Memory restored - currently %d pages free (%d Kb) of total %d pages (%d Kb total).\n"
    Msg("Installing music volume convar callback..\n");
    Msg("Internal heap corrupted!\n",uVar2);
    Msg("Internal heap reports: %5.2f MB (%d bytes)\n",(double)((float)iVar1 * 9.536743e-07),iVar1,
    Msg("Invalid address or port: %s\n",param_1[1] + 8 + (int)param_1);
    Msg("Invalid navigation file \'%s\'.\n",local_170);
    Msg("IsCommandIssuedByServerAdmin::Returning true because %s is developer\n",uVar6);
    Msg("Legacy Surround %s.\n",pcVar1);
    Msg("Light env shadow direction: %f %f %f\n",(double)*(float *)(&DAT_0000144c + DAT_1071e370),
    Msg("LoadFromRoomSettings:: ROOM AND CONFIG ARE VALID\n");
    Msg("LoadFromRoomSettings:: ROOM IS !!NOT!! VALID\n");
    Msg("Loaded %i DM Spawns\n",iVar2);
    Msg("Loaded DM Spawns.. Parsing...\n");
    Msg("MEMORY:  Run-time Heap\n------------------------------------\n");
    Msg("Map \'%s\' missing or invalid\n",local_468);
    Msg("Map uses %d place names:\n",iStack16);
    Msg("Marked %d areas as stairs\n",iVar3);
    Msg("Max %i demos in demoloop\n",0x20);
    Msg("Mismatched shutdown function %s\n",param_1);
    Msg("MovePlayerToSpawnPosition_FFA Has No DM Spawn Points. using TDM Spawn\n");
    Msg("Must run with -g15 to enable support for the LCD Keyboard\n");
    Msg("NET_AddToLagged::Packet already linked\n");
    Msg("NET_ReceiveStream: %s\n",pcVar2);
    Msg("NET_SendStream: %s\n",pcVar2);
    Msg("NULL Ent in CreateWindowPane!\n");
    Msg("No Holiday\n");
    Msg("No Rule Entity Found - Defaulting to Team Deathmatch\n");
    Msg("No field \'%s\' in datamap_t for entity %d/%s\n",param_2,param_1[0x18],uVar2);
    Msg("No prediction datamap_t for entity %d/%s\n",param_1[0x18],uVar2);
    Msg("No split screen config file \'%s\', using defaults\n","splitscreen_config.txt");
    Msg("No such Panel Animation class %s\n",param_1);
    Msg("No valid walkable seed positions.  Cannot generate Navigation Mesh.\n");
    Msg("No view anim created, use viewanim_create");
    Msg("Not Cycling, restarting on the same level (%llu).\n",*(undefined4 *)(param_1 + 0x588),
    Msg("Not saving empty selected set to disk.\n");
    Msg("Occl %.2f (%d/%d)\n",(double)(((float)*(int *)((int)this + 0x1988) / (float)iVar2) * 100.0)
    Msg("Occlusion test collection lock is on (%d). This is unexpected. Resetting.\n",DAT_10674c98);
    Msg("Other replacements:\n\n");
    Msg("Overview: scale %.2f, pos_x %.0f, pos_y %.0f\n",(double)fVar7,
    Msg("Pausing entity I/O events\n");
    Msg("Placed %d areas on the ground\n",*(undefined4 *)((int)this + 0x4d0));
    Msg("Processing (%i new) from %s\n",*(int *)((int)param_2 + 0x14) - iVar1,param_3);
    Msg("Queue AsyncWrite (%s)\n",param_1);
    Msg("RAW(%s) end\n",piVar1);
    Msg("RAW(%s) start\n",piVar1);
    Msg("RESPONSE CRITERIA FOR: %s (%s)\n",puVar6,pcVar4);
    Msg("ROPE IS NOT NULL\n");
    Msg("Radial using: %s\n",pcVar5);
    Msg("Radial using: %s\n",pcVar7);
    Msg("Ragdoll magnet adding %f inches/sec to %s\n",
    Msg("Randomising spawnpoint list..\n");
    Msg("Rates:  %12s (%4.1f%% of %s) Occlusions\n",pcVar6,uVar15,uVar16,pcVar5);
    Msg("Received voice from: %d\n",*(int *)(param_1 + 0x10) + 1);
    Msg("Recent NPC speech:\n",puVar6);
    Msg("Recursive shutdown!!!\n");
    Msg("Reloading\n");
    Msg("Removed %s(%s)\n",puVar7,pcVar2);
    Msg("SIM: File: %s [c: %.02f KB / u: %.02f KB]\n",puVar6,
    Msg("SIM: SaveDir: (%s) Compressed %d bytes to %d bytes. (%.0f%%)\n",puVar8,iVar3,iVar4,
    Msg("SIM: SaveDir: (%s) Uncompressed %d bytes to %d bytes.\n",puVar6,uVar3,uVar2);
    Msg("SUCCESS! address and port is now set to: %s\n",&DAT_103236cf);
    Msg("SaveGameState...\n");
    Msg("Scene: %s - Event: %s (%d) - %s - Frame start: %f - Start: %f - End: %f - ModStart: %f - ModEnd: %f\n"
    Msg("Seconds:%d Fraction:%f Sample:%d  L:%f R:%f\n",(int)fVar4,
    Msg("Selected %d areas.\n",*(undefined4 *)((int)param_1 + 0x4d0));
    Msg("Selected %d areas.\n",*(undefined4 *)(iVar6 + 0x4d0));
    Msg("Selected %d areas.\n",iStack20);
    Msg("SendTable_GetCRC(): %ul m_nSendtableCRC: %ul\n",uVar4,iVar2);
    Msg("Server game time: %f\n",(double)*(float *)(DAT_10646018 + 0x10));
    Msg("Server using sv_pure 2.\n");
    Msg("SetLoadoutAppearance: [%s] GetFixUserInfo() is returning null\n",uVar3);
    Msg("SetLoadoutEquipment: [%s] GetFixUserInfo() is returning null\n",uVar3);
    Msg("SetLoadoutWeapons: [%s] GetFixUserInfo() is returning null\n",uVar3);
    Msg("Shadow color %d %d %d\n",DAT_10766c70,DAT_10766c71,DAT_10766c72);
    Msg("Shadow direction: %f %f %f\n",(double)*(float *)(DAT_1071e370 + 0x1440),
    Msg("Shadow distance %.2f\n",(double)DAT_10766d3c);
    Msg("Shifting mesh by %f,%f\n",(double)local_18,(double)local_14);
    Msg("Sound Device:   %s\n",uVar2);
    Msg("SoundPointerForIndex() - Index too large!\n");
    Msg("Soundscape[%d]: %s\n",0,puVar2);
    Msg("Start save...\n",uVar3);
    Msg("Starting benchmark in %d seconds...\n",iVar2);
    Msg("Steam config directory: %s\n",local_204);
    Msg("Syntax: demo_gototick <tick> [relative] [pause]\n");
    Msg("Syntax: setinfo <key> <value>\n");
    Msg("TCP/UDP Disabled.\n");
    Msg("TIMainMenuContainer::SetState(%i, %i) (cur %i)\n",3,0,*(undefined4 *)((int)this + 0x920));
    Msg("TI_CurrentHoliday: Month: %i Day: %i: ",local_c,local_8);
    Msg("TacticalTV broadcast event: %s\n",uVar2);
    Msg("TacticalTV signon complete.\n");
    Msg("Testing collision system\n");
    Msg("The server is using sv_pure = 0 (no whitelist).\n");
    Msg("The server is using sv_pure = 2.\n");
    Msg("There are no entries in the Place database.\n");
    Msg("To merge, mark an area, highlight a second area, then invoke the merge command");
    Msg("Touched %i cached files\n",*(undefined4 *)((int)param_2 + 0x14),unaff_EDI);
    Msg("TrackIR initialized [%d]\n",uVar3);
    Msg("TrackIR shut down\n");
    Msg("Tracking deletions (%u files in deletion list in \'%s\', %u previous warnings loaded from \'%s\'\n"
    Msg("Trying %s (%s): ",puVar3,pcVar1);
    Msg("USAGE: rr_forceconcept <target> <concept> \"criteria1:value1,criteria2:value2,...\"\n");
    Msg("Unable to find a filename to save the selected set to disk.\n");
    Msg("Unable to initialize DirectSoundCapture. You won\'t be able to speak to other players.");
    Msg("Unable to load %s.\n",local_1cc);
    Msg("Unable to load voice codec \'%s\'. Voice disabled.\n",param_1);
    Msg("Unable to resolve rcon address %s\n",*(undefined4 *)(local_8 + 0x24));
    Msg("Unable to save the selected set to disk.\n");
    Msg("Updated %d entities.\n",iVar11);
    Msg("Updated %i out of %i cached files [%.3f msec]\n",iVar6,local_18._0_4_,
    Msg("Usage:  %s <entindex>",puVar1);
    Msg("Usage:  playdelay delay_in_msec (negative to skip ahead) soundname\n");
    Msg("Usage: %s <attribute>\n",puVar2);
    Msg("Usage: %s x y z f a d\nwhere x,y,z are direction of screen punch\n      f     is  frequency (1 means three bounces before settling)\n      a     is  amplitude\n      d     is  duration\n"
    Msg("Usage: movie_fixwave wavname\n");
    Msg("Usage: mp_disable_autokick <userid>\n");
    Msg("Usage: nav_merge_mesh filename\n");
    Msg("Usage: occlusion_test_run <index> [-cold] [-check [<n_rays>]]\n");
    Msg("Use light env shadow angles: %u\n",*(undefined *)(DAT_1071e370 + 0x1459));
    Msg("Using breakpad minidump system\n");
    Msg("VProf cache miss disabled.\n");
    Msg("VProf cache miss enabled.\n");
    Msg("VProf disabled.\n");
    Msg("VProf enabled.\n");
    Msg("Verify: %i DM Spawns\n",*(undefined4 *)(local_10 + 0x4bb4));
    Msg("Voice - mixed %d samples from channel %d\n",sVar1,param_1);
    Msg("VoxelTreeBox - (%f %f %f) to (%f %f %f)\n",(double)local_1c,(double)local_18,
    Msg("VoxelTreeSphere - (%f %f %f), %f\n",(double)local_10,(double)local_c,(double)local_8,
    Msg("WARNING: NET_OpenSocket: ioctl FIONBIO: %s\n",pcVar1);
    Msg("WARNING: NET_OpenSocket: setsockopt SO_RCVBUF: %s\n",pcVar1);
    Msg("WARNING: NET_OpenSocket: setsockopt SO_SNDBUF: %s\n",pcVar1);
    Msg("WARNING: NET_OpenSockets: %s port %i already open.\n",param_4,*piVar2);
    Msg("WIRE:  UDP sz=%d tm=%f rt %f from %s\n",uVar3);
    Msg("Walkable position marked.\n");
    Msg("Warning! Dedicated not possible with -noip parameter.\n");
    Msg("Warning! Failed to start Winsock via WSAStartup = 0x%x.\n",iVar9);
    Msg("Warning! Multiplayer mode not available with -noip parameter.\n");
    Msg("Warning! NET_ConnectSocket failed opening socket %i, port %i.\n",iVar1,
    Msg("Warning! NET_ListenSocket failed opening socket %i, port %i.\n",param_1,
    Msg("Warning: The console command \"snd_restart\" will not work with sv_cheats 0\n");
    Msg("Water material: %s dist to water: %f\nforcecheap: %s forceexpensive: %s\n",uVar11);
    Msg("You must be a server admin to use mp_disable_autokick\n");
    Msg("[%s] %s Reloaded Weapon Script\n","Client",uVar3);
    Msg("[%s] %s Reloaded Weapon Script\n","Server",puVar4);
    Msg("[GAMEUI] CloseWaitScreen( %s )\n",param_2);
    Msg("[GAMEUI] GenericConfirmation::SetMessageText : %s\n",pcVar6);
    Msg("[GAMEUI] GenericConfirmation::SetWindowTitle : %s\n",pcVar6);
    Msg("[GAMEUI] Handling ingame menu command %s from user%d ctrlr%d\n",param_1,uVar3,uVar3);
    Msg("[GAMEUI] Handling main menu command %s from user%d ctrlr%d\n",param_1,uVar3,uVar3);
    Msg("[GAMEUI] Handling options menu command %s from user%d ctrlr%d\n",param_1,uVar3,uVar3);
    Msg("[GAMEUI] Handling vote options menu command %s from user%d ctrlr%d\n",param_1,uVar3,uVar3);
    Msg("[GAMEUI] OpenWaitScreen( %s )\n",param_1);
    Msg("[GAMEUI] PasswordEntry::SetMessageText : %s\n",pcVar4);
    Msg("[GAMEUI] PasswordEntry::SetWindowTitle : %s\n",pcVar4);
    Msg("[JumpToPosition] Cur Pos is: %s Destination pos: %s\n",(int)puVar4 + 5,(int)puVar3 + 5,
    Msg("[JumpToPosition] Final position was set to: %s\n",(int)puVar3 + 5,puVar8,pcVar9,dVar7,dVar6
    Msg("[Map] Failed to find bsp file for level: %s\n",puVar1);
    Msg("[Map] Failed to find bsp file for level: %s\n",puVar5);
    Msg("[Map] Failed to find res file for level: %s\n",puVar1);
    Msg("[Map] Failed to find res file for level: %s\n",puVar5);
    Msg("\n====================================================\nPerforming Safe Entity Update\n");
    Msg("\nAborting map_edit\nWC/Engine map versions different...\n\n");
    Msg("\nAborting map_edit\nWorldcraft not running...\n\n");
    Msg("\nCurrent sv_pure value is %d.\n",DAT_10663c78);
    Msg("\n\n !!!! SAVEGAME: !!!! %3.1fMB(%d) remain in SaveResetMemory\n\n\n",
    Msg("\n\nTHE CT\'S REACHED THE DESTINATION AREA ONCE.\n");
    Msg("\n\nUSING NEW SPAWN SYSTEM\n\n");
    Msg("\n\n\n\n\n\n\nERROR!!! :%s: COULD NOT FIND GEAR KEY","Client");
    Msg("\n\n\n\n\n\n\nERROR!!! :%s: COULD NOT FIND GEAR KEY","Server");
    Msg("\tAllocated outside hunk:  %s\n",pcVar6);
    Msg("\tCurrent mem %s\n",pcVar6);
    Msg("\tHigh water %s\n",pcVar6);
    Msg("a trigger_changelevel doesn\'t have a map");
    Msg("adding map localization: %s\n",local_148);
    Msg("area %s\n",local_c64,puVar20,uVar4);
    Msg("cl_pred_track:  Unknown ent index %d\n",(int)uVar4);
    Msg("cl_predictioncopy_describe:  no such entity %d\n",(int)uVar4);
    Msg("hit prop %d\n",local_78 + -1);
    Msg("loading: %i weapon addon values\n",pbVar15);
    Msg("map number %s\n",local_f64);
    Msg("model %p [%s] addref %d (%d)\n",param_1,param_1 + 4,(int)*psVar1,(int)psVar1[1]);
    Msg("no save game\n");
    Msg("no screenshot\n");
    Msg("owner %s\n",local_964);
    Msg("priority %s\n",local_1164);
    Msg("r: %i csm: %i rtt: %i\n",DAT_1079b968,DAT_1079b96c,DAT_1079b970);
    Msg("save file save/%s.sav\n",(char *)((int)piVar9 + 0x3fa));
    Msg("saving: %i weapon addon values\n",pvVar2);
    Msg("screenshot screenshots/%s.jpg\n",(int)piVar9 + 0x2fa);
    Msg("soundfade <percent> <hold> [<out> <int>]\n");
    Msg("sv_pure set to %d.\n",iVar1);
    Msg("total_channels: %d\n",DAT_104130a4);
    Msg("~CPU Freq: %1.3f GHz    Percent of requested: %3.1f%%    Minimum percent seen: %3.1f%%\n");
    Msg((byte *)"FAIL: !IsEmpty()\n");
    Msg((byte *)"FAIL: !Validate()\n");
    Msg((byte *)"FAIL: Not all items popped\n");
    Msg((byte *)"Fixed Page SBH:\n");
    Msg((byte *)"Secondary Page SBH:\n");
    Msg((byte *)"Small block heap is corrupt (fallback)\n ");
    Msg((byte *)"Small block heap is corrupt (primary)\n ");
    Msg((byte *)"Small block heap is corrupt (secondary)\n ");
    Msg((byte *)"Thread %u about to try-wait for lock %p owned by %u\n");
    Msg((byte *)"Thread %u about to wait for lock %p owned by %u\n");
    Msg((byte *)"Thread %u now owns lock 0x%p\n");
    Msg((byte *)"Totals (%s): Committed:%16s Allocated:%16s\n");
    Msg((byte *)"\nFallback SBH:\n");
    Plat_MessageBox("Video Failure",local_a28);
    Warning("  (container field %d has no allocated data)\n",param_1);
    Warning("  (data type of container field %d does not match particle attribute %s)\n",param_1,
    Warning("  .cache load failed, forcing rebuild [lang:%s]!\n",puVar5);
    Warning("  Currently using %d pages (%d Kb) of total %d pages (%d Kb total)\n",local_c,
    Warning("  Please see http://support.steampowered.com for more information.\n");
    Warning("#######################################\n");
    Warning("%i/%s - %s:  UTIL_SetModel:  not precached: %s\n",iVar2,puVar5,puVar6,param_2);
    Warning("%s (%s) at (%.3f %.3f %.3f) using obsolete or unknown material type.\n",puVar4,pcVar1);
    Warning("%s has a health specified in model \'%s\'. Use prop_physics or prop_dynamic instead.\n"
    Warning("%s is not writable!!!  Check it out before running buildcubemaps.\n",uVar4);
    Warning("%s put to sleep while in Scripted state!\n",puVar1);
    Warning("%s: TeleportToCurrentPos input received; ignoring \'Teleport Home\' spawnflag.\n",
    Warning("%s: unknown scripted sequence \"%s\"\n",pcVar5,pbVar3);
    Warning("*** BAD BUILD VIEW INITIALIZATION ***\n");
    Warning("*** CDetailObjectSystem::UnserializeModels: Error! Too many detail objects!\n");
    Warning("***\nShared<->Private Activity collision!\n***\n");
    Warning("***\nShared<->Private Event collision!\n***\n");
    Warning("----------------SPAWN ERROR------------------\n");
    Warning("An RR_Concept couldn\'t find its string in the symbol table!\n");
    Warning("AppFramework : Attempted to add two systems with the same interface name %s!\n",pcVar2)
    Warning("AppFramework : Unable to load module %p!\n",0);
    Warning("Attempted to create unknown entity type %s!\n");
    Warning("Attempted to create unknown particle system id %s\n",local_104);
    Warning("Attempted to create unknown particle system type %s\n",param_1);
    Warning("Attempted to create unknown particle system type \"%s\"!\n",param_2);
    Warning("Attempted to destroy unknown entity type %s!\n",param_1);
    Warning("Attempted to free unknown sound %d!\n",param_1);
    Warning("Attempted to use an unsupported muzzle flash type.. new particle effect needed here!\n"
    Warning("Attempting to create unknown particle system \'%s\' \n",param_1);
    Warning("Bad SetLocalAngularVelocity(%f,%f,%f) on %s\n",(double)*param_1,(double)param_1[1],
    Warning("Bad field type\n");
    Warning("Bad type %d in saved variant_t\n",*(undefined4 *)((int)this + 0x10));
    Warning("Bad type %d in saved variant_t\n",uVar2);
    Warning("Bad vphysics swap for %s\n",*(undefined4 *)((int)this + 0x18));
    Warning("Bad vphysics swap for %s\n",puVar1);
    Warning("CAudioMixerWave::LoadMixBuffer: \'%s\' samples_loaded * samplesize = %i but pData == NULL\n"
    Warning("CBaseEntityList::AddNonNetworkableEntity: no free slots!\n");
    Warning("CBaseModPanel::GetFooterPanel() called on NULL CBaseModPanel!!!\n");
    Warning("CBugUIPanel::UploadFile:  Local file has 0 size \'%s\'\n",param_1);
    Warning("CGibs are being created which circumvent Spawn() - this can result in a leak.\n");
    Warning("CMemoryStack: ERROR - mismatched RegisterAllocation/RegisterDeallocation!\n");
    Warning("CSave::WriteHeader() size parameter exceeds \'short\'!\n");
    Warning("CSceneEntity %s unable to find actor named \"%s\"\n",puVar11,uVar5);
    Warning("CSceneEntity::GenerateSceneForSound:  Failed to allocated new scene!!!\n");
    Warning("CSceneEntity::SCRIPT event - \'%s\' entity has no script function \'%s\' defined!\n",
    Warning("CShadowMgr::AddShadowDecalToSurface - overflowed m_ShadowDecals linked list!\n");
    Warning("CShadowMgr::CreateShadowEx - overflowed m_Shadows linked list!\n");
    Warning("CSoundEnt pool is low on sounds due to high number of clients.\n");
    Warning("CTIPlayer::ChangeTeam( %d ) - invalid team index.\n",param_1);
    Warning("CToolFrameworkInternal::LoadToolsFromLibrary:  Dll \'%s\' connection phase failed.\n",
    Warning("CToolFrameworkInternal::LoadToolsFromLibrary:  Dll \'%s\' doesn\'t support \'%s\'\n",
    Warning("CToolFrameworkInternal::LoadToolsFromLibrary:  Dll \'%s\' has no factory\n",param_1);
    Warning("CToolFrameworkInternal::LoadToolsFromLibrary:  Dll \'%s\' initialization phase failed.\n"
    Warning("CToolFrameworkInternal::LoadToolsFromLibrary:  Unable to load \'%s\'\n",param_1);
    Warning("CTriggerCamera could not find a player!\n");
    Warning("CTriggerViewProxy could not find a player!\n");
    Warning("CUtlStreamBuffer does not support TEXT_BUFFER\'s use CUtlBuffer\n");
    Warning("CViewAngleAnimation::RunAnimation called on an empty view animation\n");
    Warning("C_TIPlayer::CreateAddonModel: Unable to get model for addon\n");
    Warning("CacheSoundsFromResFile:  Unable to find \'%s\'\n",param_3);
    Warning("Call to NULL CStudioHdr::GroupStudioHdr()\n");
    Warning("Can\'t SetGeneric( %d ), no precache table [no level loaded?]\n",param_1);
    Warning("Can\'t add Keybindings Context for unnamed panels\n");
    Warning("Can\'t delay send a packet larger than maxroutable size %d/%d\n",pvVar11,sVar8);
    Warning("Can\'t find factory for entity: %s\n",param_1);
    Warning("Can\'t find top track for track change! %s\n",pcVar6);
    Warning("Can\'t find train for track change! %s\n",pcVar5);
    Warning("Can\'t load \'%s\', file missing!\n",param_1);
    Warning("Can\'t load saved game, incorrect FILEID\n");
    Warning("Can\'t load saved game, incorrect version (got %i expecting %i)\n",local_10,0x74);
    Warning("Can\'t open %s for client precache info.",param_1);
    Warning("Can\'t parse relationship info (%s) - Expecting \'name [D_HT, D_FR, D_LI, D_NU] [1-99]\'\n"
    Warning("Can\'t record movie, already recording!!!\n");
    Warning("Can\'t reset HMD tracker");
    Warning("Can\'t start game, no valid server.dll loaded\n");
    Warning("Cannot find color correction lookup file: \'%s\'\n",param_2);
    Warning("Cannot write stringtables for older BSP versions. Current BSP version is %i\n",uVar5);
    Warning("ClientCommand, 0 length string supplied.\n");
    Warning("ConVarRef %s doesn\'t point to an existing ConVar\n",param_1);
    Warning("Could not find the channel with the guid: %d\n",iVar1);
    Warning("Could not get the color correction interface!");
    Warning("Couldn\'t create default cubemap\n");
    Warning("Couldn\'t create weapon %s to give NPC %s.\n",puVar5,puVar4);
    Warning("Couldn\'t find metaclass definition file %s\n",puVar7);
    Warning("Couldn\'t get DS caps\n");
    Warning("Direct precache of %s\n",param_1);
    Warning("Disabling precache logging due to file i/o problem!!!\n");
    Warning("Discarding SetLocalVelocity(%f,%f,%f) on %s\n",(double)(float)local_14,
    Warning("Disconnect: %s\n",pcVar2);
    Warning("DispatchEffect: effect \"%s\" not found on client\n");
    Warning("Dormant entity %s (%s) is thinking!!\n",puVar7);
    Warning("Dynamic prop %s: no sequence named:%s\n",pcVar4,param_1);
    Warning("ERROR: %s missing schedule!\n",uVar2);
    Warning("ERROR: (%s) target \'%s\' not found. Deleting.\n",pcVar4,puVar9);
    Warning("ERROR: CParticleSnapshot::Unserialize - %s is not a particle snapshot (.psf) file!\n",
    Warning("ERROR: CParticleSnapshot::Unserialize - could not load file %s!\n",param_1);
    Warning("ERROR: CPooledVBAllocator_ColorMesh::Deallocate cannot be called before Init\n");
    Warning("ERROR: Tried to %s for entity %s (%s), but it has no parent.\n",param_1,puVar6,pcVar2);
    Warning("ERROR: Trying initialize links with no WC ID table!\n");
    Warning("EVENT_LEVELSHUTDOWN:  with negative elapsed time (rt %f starttime %f)\n",
    Warning("EmitSound: %s pitch out of bounds = %i\n",param_6,param_11);
    Warning("EmitSound: %s soundlevel out of bounds = %d\n",param_6,param_8);
    Warning("EmitSound: %s volume out of bounds = %f\n",param_6,(double)param_7);
    Warning("Encountered func_breakablesurf at (%2.2f, %2.2f, %2.2f) that has a material applied to more than one surface!\n"
    Warning("Encountered func_breakablesurf that has a material applied to more than one surface!\n"
    Warning("Error: Total static audio channels have been used: %d\n",0xc0);
    Warning("FIXME!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n");
    Warning("Failed to find custom physics damage table name: %s\n",pbVar8);
    Warning("Failed to load server binary\n");
    Warning("Failed to parse remote bug KV file at path: \'%s\'",uVar4);
    Warning("FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified!\n",
    Warning("FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified!\n",0x100);
    Warning("FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified!\n",0x20);
    Warning("FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified!\n",0x400);
    Warning("FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified!\n",0x410);
    Warning("FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified!\n",0x800);
    Warning("Found -NoQueuedPacketThread, so no queued packet thread will be created.\n");
    Warning("FuncTrain \'%s\' has no target.\n",pcVar1);
    Warning("GetEyePosition() Can\'t get pstudiohdr ptr!\n");
    Warning("GetSpriteAxes: Bad sprite type %d\n",param_1);
    Warning("Graivty Scale 0, probably invalid default. Changing to 1\n");
    Warning("Headtrack mode %d\n",iVar1,iVar2);
    Warning("IEngineClient::RecordDemoCustomData(): Not recording a demo.\n");
    Warning("Incorrect usage of snd_print_channel_by_guid. Pass the guid.\n");
    Warning("Incorrect usage of snd_print_channel_by_index. Pass the index from 0 to %d.\n",0xff);
    Warning("InstallChangeCallback called with NULL callback, ignoring!!!\n");
    Warning("InstancedAutoGeneratedSoundScene:  Expecting non-NULL pActor for sound %s\n",param_2);
    Warning("Invalid attach type specified for particle effect anim event. Trying to spawn effect \'%s\' with attach type of \'%s\'\n"
    Warning("Invalid attach type specified for particle effect in model \'%s\' keyvalues section. Trying to spawn effect \'%s\' with attach type of \'%s\'\n"
    Warning("Invalid function pointer in entity!\n");
    Warning("Invalid index passed to CStudioHdr(%s)::GroupStudioHdr(): %d [%d]\n",pcVar7,param_1,
    Warning("Late registration of demo custom data callback.\n");
    Warning("LoadMixBuffer: no paint buffer\n");
    Warning("Map %s using default stringtable dictionary, don\'t ship this way!!!\n",param_2);
    Warning("Map Bug:  %s has SpotLightWidth %f > %f, clamping value\n",puVar5,
    Warning("Map \'%s\' lacks exepected HDR data! LDR visuals are unsupported!\n",puVar4);
    Warning("Map name \'%s\' too long (32 chars)\n",param_2);
    Warning("MessageEnd unknown message type.\n");
    Warning("MultiSrc: Used by non member %s.\n",puVar6);
    Warning("NavEndArea: Out of memory\n");
    Warning("No DirectSound driver installed\n");
    Warning("No info_player_terrorist found for ammobox!!!\n");
    Warning("No model %d!\n",param_3);
    Warning("No model %d!\n",param_4);
    Warning("No such sentence group %s\n",param_2);
    Warning("OS Paged Pool Memory Low!\n");
    Warning("Overwriting physics object for %s\n",puVar2);
    Warning("Overwriting physics object for %s\n",uVar1);
    Warning("PARTICLE SYSTEM: Unable to load manifest file \'%s\'\n",param_2);
    Warning("Physics queue not empty, error!\n");
    Warning("PhysicsSimulate: %s bad movetype %d",puVar3,*(undefined *)((int)param_1 + 0xe2));
    Warning("PhysicsSimulate: %s bad movetype %d",uVar2);
    Warning("Prediction errors occurred at %i %f\n",*(undefined4 *)(PTR_DAT_106ab8dc + 0x1c),
    Warning("Problem in lesson %s: Locator_GetTargetFromHandle returned null for handle %d.\n IsInstanceActive: %s. IsInstructing: %s. IsLearned: %s\n"
    Warning("RESPONSERULES: %s spoke \'%s\'. Found no matching response.\n",pcVar5,puVar6);
    Warning("Ragdoll has no pCollide!");
    Warning("Ragdoll solid count %d exceeds maximum limit of %d - Ragdoll not created",
    Warning("Reading externally referenced elements is not supported!\n");
    Warning("ReadyNPC()--%s couldn\'t find target %s\n",puVar4,puVar3);
    Warning("RespawnHostages: Stage %i is not spawning any hostages!!!\n",local_20);
    Warning("Restore underflow!\n");
    Warning("Run with -stringtables on the command line or convar\n");
    Warning("SCRIPT_CUSTOM_MOVE: %s failed scripted custom move. Has no sequence called: %s\n",
    Warning("Save file %s can\'t be found!\n",param_1);
    Warning("Scene \'%s\' missing!\n",param_1);
    Warning("Scene \'%s\' with two stop point events!\n",puVar1);
    Warning("SendNetMsg: stream[%s] buffer overflow (maxsize = %d)!\n",uVar4,iVar3);
    Warning("Sending connect packet to unexpected address %s\n",pcVar7);
    Warning("SerializeDMX: Unable to open file \"%s\"\n",param_1);
    Warning("Server is hibernating. Shutting down right now\n");
    Warning("ServerRemoteAccess: Sending AdminUI message to non-AdminUI listener\n");
    Warning("SetPlayerDSP:  fastReset only valid from client\n");
    Warning("SetSquad Input received for NPC %s, but that NPC can\'t use squads.\n",pcVar2);
    Warning("Setting invalid soundscape, %s, as the active soundscape. There is probably no script entry matching this name. BUG THIS!\n"
    Warning("Shadow memory (%s) growing [%d]\n","m_LargeVertexList",uVar4);
    Warning("Shadow memory (%s) growing [%d]\n","m_RenderQueue",iVar7);
    Warning("Shadow memory (%s) growing [%d]\n","m_ShadowDecals",iVar2);
    Warning("Shadow memory (%s) growing [%d]\n","m_ShadowSurfaces",iVar1);
    Warning("Shadow memory (%s) growing [%d]\n","m_SortOrderIds",uVar6);
    Warning("Shared memory space %s (%i) still has %i references.\n",puVar3,
    Warning("Socket ioctl(FIONBIO) failed (%s)\n",pcVar4);
    Warning("StreamToSamplePosition( %d ) is not supported for sound \'%s\'.\n",param_1,uVar1);
    Warning("String_Decode( %s ) invalid length (%d)\n",*(undefined4 *)*param_1,uVar5);
    Warning("TIGetNextMap::ERROR WITH MAPLIST\n");
    Warning("TIGetNextMap::current mode doesn\'t have map %s, returning first map (%s) in this mode\n"
    Warning("TargetCDAudio - Track %d out of range\n",iVar1);
    Warning("The nav mesh needs a full nav_analyze\n");
    Warning("Total inclusion planes: %u (Facing: %u Edge: %u)\n",uVar4,local_14,local_20);
    Warning("Tried to call SetMass() on %s but it has no physics.\n",puVar2);
    Warning("TriggerCDAudio - Track %d out of range\n",param_1);
    Warning("USING RANDOM POINT AROUND AMMOBOX POSITION!!!\n");
    Warning("UTIL_GetListenServerHost() called from a dedicated server or single-player game.\n");
    Warning("Unable to bind a key for command \"%s\" after %i attempt(s).\n",pbVar4,local_24);
    Warning("Unable to create socket (%s)\n",pcVar4);
    Warning("Unable to find mapping for flexcontroller %i, settings %p on %i/%s\n",param_2,param_1,
    Warning("Unable to find user message for index %i\n",uVar1);
    Warning("Unable to persist cache \'%s\', check file permissions\n",puVar7);
    Warning("Unable to persist cache manifest \'%s\', check file permissions\n",local_264);
    Warning("Unable to play video: %s\n",local_108);
    Warning("Unable to post bug report to database\n");
    Warning("Unable to read particle definition %s! UtlBuffer is probably the wrong type!\n",param_2
    Warning("Unable to take PFM screenshots if HDR isn\'t enabled!\n");
    Warning("Unapplied multidamage left in the system:\nTarget: %s\nInflictor: %s\nAttacker: %s\nDamage: %.2f\n"
    Warning("Unknown interpolation type %d\n",param_3);
    Warning("User Msg \'%s\': %d bytes written, expected %d\n",local_108,iVar3,local_8);
    Warning("Value %s exeeds size of datatype. \n",*param_2);
    Warning("ViewBuilder Begin/End Error - Accessing ClientWorlListInfoElement(-1)\n");
    Warning("ViewBuilder Begin/End Error - Accessing RenderablesListElement(-1)\n");
    Warning("ViewBuilder Begin/End Error - Accessing WorlListInfoElement(-1)\n");
    Warning("ViewBuilder Begin/End Error - Accessing aera frustums(-1)\n");
    Warning("ViewBuilder Begin/End Error - Accessing frustum list(-1)\n");
    Warning("ViewBuilder Begin/End Error - Accessing frustum(-1)\n");
    Warning("ViewBuilder Begin/End Error - Accessing volume culler(-1)\n");
    Warning("ViewBuilder Begin/End Error - Queueing Build World list job(-1)\n");
    Warning("ViewBuilder Begin/End Error - Queueing Build renderables list job(-1)\n");
    Warning("ViewBuilder Begin/End Error - Setting RenderablesListElement(-1)\n");
    Warning("ViewBuilder Begin/End Error - Setting WorldListInfoElement(-1)\n");
    Warning("ViewBuilder Begin/End Error - Setting WorldRenderListElement(-1)\n");
    Warning("ViewBuilder Begin/End Error - Setting frustum data(-1)\n",this);
    Warning("ViewBuilder Begin/End Error - Wait for Build World list job to finish (-1)\n");
    Warning("ViewBuilder Begin/End Error - Wait for Build renderables list job to finish (-1)\n");
    Warning("WARNING: %s at %.0f %.0f %0.f missing modelname\n",pcVar2,dVar3);
    Warning("WARNING: Momentary door (%s) start position not between 0 and 1.  Clamping.\n",pcVar1);
    Warning("Warning: Softbarrier trigger is NOT a bsp model. Removing!\n");
    Warning("WaveFixupTmpFile( \'%s\' ) failed to open file for editing\n",local_110);
    Warning("WriteManifest:  Unable to persist cache manifest \'%s\', check file permissions\n",
    Warning("You cannot build cubemaps for older BSP versions. Current BSP version is %i\n",uVar4);
    Warning("[Blobulator] More than %d slots are in use! Report this issue.\n",uVar1);
    Warning("[Map] Invalid Map ID of %llu for %s\n",uVar12,param_2,local_d8);
    Warning("[Map] Invalid Map ID of %llu for %s\n",uVar8,param_2,local_d8);
    Warning("[RULES] There are no spawn zone brush entitities for TDM! fix this map!!\n");
    Warning("\nLevel transition ERROR\nCan\'t find connection to %s from %s\nFalling back to \'map\' command...\n\n"
    Warning("bad inline model number %i, worldmodel not yet setup\n",iVar1);
    Warning("can\'t create qc file %s\n",local_108);
    Warning("can\'t solve quadratic for light %f %f\n",(double)param_1,(double)param_2);
    Warning("changelevel failed: %s not found\n",puVar3);
    Warning("classname %s used to create wrong class type\n","env_sprite");
    Warning("classname %s used to create wrong class type\n","handle_dummy");
    Warning("classname %s used to create wrong class type\n","handle_test");
    Warning("classname %s used to create wrong class type\n",&DAT_1045fb94);
    Warning("classname %s used to create wrong class type\n",&DAT_1046b24c);
    Warning("classname %s used to create wrong class type\n",&DAT_104f2b38);
    Warning("cycler at %.0f %.0f %0.f missing modelname\n",(double)*(float *)((int)this + 0x210),
    Warning("display case model %i does not exist!\n",param_1);
    Warning("env_lightglow maxdist too large (%d should be %d).\n",param_1[0xf0],0xffff);
    Warning("env_lightglow outermaxdist too large (%d should be %d).\n",param_1[0xf1],0xffff);
    Warning("env_screenoverlay %s has no overlays to display.\n",puVar1);
    Warning("info_hint (HammerID: %d, position (%.2f, %.2f, %.2f)) with no hint type.\n",
    Warning("light_dynamic at [%d %d %d] has invalid exponent value (%d must be between %d and %d).\n"
    Warning("logic_lineto - Source not found or source with no origin!\n");
    Warning("logic_lineto - Target not found or target with no origin!\n");
    Warning("logic_measure_movement: Unable to find measure target entity %s\n",param_1);
    Warning("m_StringTableContainer is NULL in CBaseClientState::ProcessUpdateStringTable\n");
    Warning("m_bDontSaveGraph set, using synchronous map rebuild\n");
    Warning("mat_debugalttab: InitDebugMaterials\n");
    Warning("mat_debugalttab: InitWellKnownRenderTargets\n");
    Warning("mat_debugalttab: ShutdownDebugMaterials\n");
    Warning("mat_debugalttab: ShutdownWellKnownRenderTargets\n");
    Warning("movie_fixwave: File \'%s\' does not exist\n",pcVar1);
    Warning("npc_track_vehicle at %.0f %.0f %0.f missing modelname\n",(double)(float)param_1[0x84],
    Warning("point_template %s failed to add template.\n",puVar1);
    Warning("r_screenoverlay: %s\n",&DAT_1052db58);
    Warning("rappel point without attachments!!!\n");
    Warning("reading file \'%s\' of legacy format \'%s\' - dmxconvert this file to a newer format!\n"
    Warning("run with -p4 to get p4 operations upon mat_crosshair_edit\n");
    Warning("skybox_swapper (%s) has no skybox specified!\n",puVar3);
    Warning("stringtable_alwaysrebuilddictionaries enabled to build the string table\n");
    Warning("sv_maxusrcmdprocessticks_warning at server tick %u: Ignored client %s usrcmd (%.6f < %.6f)!\n"
    Warning("vtex failed to compile cubemap \'%s\'!\n",local_204);
    _DAT_1041c838 = "background color";
    _DAT_1041c83c = "255 255 255 255";
    _DAT_1041c864 = "pin delta x";
    _DAT_1041c890 = "pin delta y";
    _DAT_1041c8bc = "resize delta x";
    _DAT_1041c8e8 = "resize delta y";
    _DAT_1041c914 = "build mode flags";
    _DAT_1041c940 = "pin corner";
    _DAT_1041c96c = "auto resize direction";
    _DAT_1041c998 = "tab position";
    _DAT_1041c9c4 = "use scheme colors";
    _DAT_1041c9f0 = "should PostActionSignals";
    _DAT_1041cbc4 = "default foreground color";
    _DAT_1041cbc8 = "255 255 255 255";
    _DAT_104e4290 = "demo_play";
    _DAT_104e42a0 = "timedemo";
    _DAT_104e42b0 = "timedemoquit";
    _DAT_10588094 = FUN_1001f850(&DAT_105f9abc,(undefined4 *)"DispatchAddOnThink");
    _DAT_105880d0 = "m_hPhysReplacement";
    _DAT_1058810c = "m_iPhysReplacementSolidFlags";
    _DAT_10588148 = "m_iPhysReplacementMoveType";
    _DAT_10588184 = "m_angPhysReplacementLocalOrientation";
    _DAT_105881c0 = "m_vecPhysReplacementDetatchForce";
    _DAT_105881fc = "m_bWasAttached";
    _DAT_10588238 = "m_flWaitFinished";
    _DAT_10588274 = "m_flNextAttachTime";
    _DAT_105882b0 = "InputInstall";
    _DAT_105882bc = "Install";
    _DAT_105882ec = "InputRemove";
    _DAT_105882f8 = "Remove";
    _DAT_10588bd8 = "m_randomLookQueue";
    _DAT_10588c14 = "m_syntheticLookQueue";
    _DAT_10588c50 = "m_flNextRandomLookTime";
    _DAT_10588c8c = "m_iszExpressionScene";
    _DAT_10588cc8 = "m_hExpressionSceneEnt";
    _DAT_10588d04 = "m_flNextRandomExpressionTime";
    _DAT_10588d40 = "m_iszIdleExpression";
    _DAT_10588d7c = "m_iszAlertExpression";
    _DAT_10588db8 = "m_iszCombatExpression";
    _DAT_10588df4 = "m_iszDeathExpression";
    _DAT_10588e30 = "m_ParameterBodyYaw";
    _DAT_10588e6c = "m_ParameterSpineYaw";
    _DAT_10588ea8 = "m_ParameterNeckTrans";
    _DAT_10588ee4 = "m_ParameterHeadYaw";
    _DAT_10588f20 = "m_ParameterHeadPitch";
    _DAT_10588f5c = "m_ParameterHeadRoll";
    _DAT_10588f98 = "m_FlexweightBodyRightLeft";
    _DAT_10588fd4 = "m_FlexweightChestRightLeft";
    _DAT_10589010 = "m_FlexweightHeadForwardBack";
    _DAT_1058904c = "m_FlexweightHeadRightLeft";
    _DAT_10589088 = "m_FlexweightHeadUpDown";
    _DAT_105890c4 = "m_FlexweightHeadTilt";
    _DAT_10589100 = "m_ParameterGestureHeight";
    _DAT_1058913c = "m_ParameterGestureWidth";
    _DAT_10589178 = "m_FlexweightGestureUpDown";
    _DAT_105891b4 = "m_FlexweightGestureRightLeft";
    _DAT_105891f0 = "m_flAccumYawDelta";
    _DAT_1058922c = "m_flAccumYawScale";
    _DAT_10589268 = "m_flextarget";
    _DAT_105892a4 = "m_bDontUseSemaphore";
    _DAT_105892b0 = "DontUseSpeechSemaphore";
    _DAT_105892e0 = "m_iszExpressionOverride";
    _DAT_105892ec = "ExpressionOverride";
    _DAT_1058931c = "m_pExpresser";
    _DAT_10589358 = "InputSetExpressionOverride";
    _DAT_10589364 = "SetExpressionOverride";
    _DAT_10589d78 = "m_translatedActivity";
    _DAT_10589db4 = "m_IdealActivity";
    _DAT_10589df0 = "m_IdealTranslatedActivity";
    _DAT_10589e2c = "m_IdealWeaponActivity";
    _DAT_10589e68 = "m_nIdealSequence";
    _DAT_10589ea4 = "m_pSenses";
    _DAT_10589ee0 = "m_pLockedBestSound";
    _DAT_10589f1c = "m_hEnemy";
    _DAT_10589f58 = "m_flTimeEnemyAcquired";
    _DAT_10589f94 = "m_hTargetEnt";
    _DAT_10589fd0 = "m_GiveUpOnDeadEnemyTimer";
    _DAT_1058a00c = "m_FailChooseEnemyTimer";
    _DAT_1058a048 = "m_EnemiesSerialNumber";
    _DAT_1058a084 = "m_flAcceptableTimeSeenEnemy";
    _DAT_1058a0c0 = "m_UpdateEnemyPosTimer";
    _DAT_1058a0fc = "m_vecCommandGoal";
    _DAT_1058a138 = "m_CommandMoveMonitor";
    _DAT_1058a174 = "m_flSoundWaitTime";
    _DAT_1058a1b0 = "m_nSoundPriority";
    _DAT_1058a1ec = "m_flIgnoreDangerSoundsUntil";
    _DAT_1058a228 = "m_afCapability";
    _DAT_1058a264 = "m_flMoveWaitFinished";
    _DAT_1058a2a0 = "m_hOpeningDoor";
    _DAT_1058a2dc = "m_pNavigator";
    _DAT_1058a318 = "m_pLocalNavigator";
    _DAT_1058a354 = "m_pPathfinder";
    _DAT_1058a390 = "m_pMoveProbe";
    _DAT_1058a3cc = "m_pMotor";
    _DAT_1058a408 = "m_UnreachableEnts";
    _DAT_1058a444 = "m_hInteractionPartner";
    _DAT_1058a480 = "m_hLastInteractionTestTarget";
    _DAT_1058a4bc = "m_hForcedInteractionPartner";
    _DAT_1058a4f8 = "m_flForcedInteractionTimeout";
    _DAT_1058a534 = "m_vecForcedWorldPosition";
    _DAT_1058a570 = "m_bCannotDieDuringInteraction";
    _DAT_1058a5ac = "m_iInteractionState";
    _DAT_1058a5e8 = "m_iInteractionPlaying";
    _DAT_1058a624 = "m_ScriptedInteractions";
    _DAT_1058a660 = "m_flInteractionYaw";
    _DAT_1058a69c = "m_CheckOnGroundTimer";
    _DAT_1058a6d8 = "m_vDefaultEyeOffset";
    _DAT_1058a714 = "m_flNextEyeLookTime";
    _DAT_1058a750 = "m_flEyeIntegRate";
    _DAT_1058a78c = "m_vEyeLookTarget";
    _DAT_1058a7c8 = "m_vCurEyeTarget";
    _DAT_1058a804 = "m_hEyeLookTarget";
    _DAT_1058a840 = "m_flHeadYaw";
    _DAT_1058a87c = "m_flHeadPitch";
    _DAT_1058a8b8 = "m_flOriginalYaw";
    _DAT_1058a8f4 = "m_bInAScript";
    _DAT_1058a930 = "m_scriptState";
    _DAT_1058a96c = "m_hCine";
    _DAT_1058a9a8 = "m_ScriptArrivalActivity";
    _DAT_1058a9e4 = "m_strScriptArrivalSequence";
    _DAT_1058aa20 = "m_flSceneTime";
    _DAT_1058aa5c = "m_iszSceneCustomMoveSeq";
    _DAT_1058aa98 = "m_afMemory";
    _DAT_1058aad4 = "m_hEnemyOccluder";
    _DAT_1058ab10 = "m_flSumDamage";
    _DAT_1058ab4c = "m_flLastDamageTime";
    _DAT_1058ab88 = "m_flLastPlayerDamageTime";
    _DAT_1058abc4 = "m_flLastSawPlayerTime";
    _DAT_1058ac00 = "m_flLastAttackTime";
    _DAT_1058ac3c = "m_flLastEnemyTime";
    _DAT_1058ac78 = "m_flNextWeaponSearchTime";
    _DAT_1058acb4 = "m_iszPendingWeapon";
    _DAT_1058acf0 = "m_bIgnoreUnseenEnemies";
    _DAT_1058acfc = "ignoreunseenenemies";
    _DAT_1058ad2c = "m_ShotRegulator";
    _DAT_1058ad68 = "m_iDesiredWeaponState";
    _DAT_1058ada4 = "m_SquadName";
    _DAT_1058adb0 = "squadname";
    _DAT_1058ade0 = "m_iMySquadSlot";
    _DAT_1058ae1c = "m_strHintGroup";
    _DAT_1058ae28 = "hintgroup";
    _DAT_1058ae58 = "m_bHintGroupNavLimiting";
    _DAT_1058ae64 = "hintlimiting";
    _DAT_1058ae94 = "m_pTacticalServices";
    _DAT_1058aed0 = "m_flWaitFinished";
    _DAT_1058af0c = "m_flNextFlinchTime";
    _DAT_1058af48 = "m_flNextDodgeTime";
    _DAT_1058af84 = "m_MoveAndShootOverlay";
    _DAT_1058afc0 = "m_vecLastPosition";
    _DAT_1058affc = "m_vSavePosition";
    _DAT_1058b038 = "m_vInterruptSavePosition";
    _DAT_1058b074 = "m_pHintNode";
    _DAT_1058b0b0 = "m_cAmmoLoaded";
    _DAT_1058b0ec = "m_flDistTooFar";
    _DAT_1058b128 = "m_hGoalEnt";
    _DAT_1058b164 = "m_flTimeLastMovement";
    _DAT_1058b1a0 = "m_spawnEquipment";
    _DAT_1058b1ac = "additionalequipment";
    _DAT_1058b1dc = "m_fNoDamageDecal";
    _DAT_1058b218 = "m_hStoredPathTarget";
    _DAT_1058b254 = "m_vecStoredPathGoal";
    _DAT_1058b290 = "m_nStoredPathType";
    _DAT_1058b2cc = "m_fStoredPathFlags";
    _DAT_1058b308 = "m_bDidDeathCleanup";
    _DAT_1058b344 = "m_bCrouchDesired";
    _DAT_1058b380 = "m_bForceCrouch";
    _DAT_1058b3bc = "m_bIsCrouching";
    _DAT_1058b3f8 = "m_bPerformAvoidance";
    _DAT_1058b434 = "m_bIsMoving";
    _DAT_1058b470 = "m_bFadeCorpse";
    _DAT_1058b4ac = "m_iDeathPose";
    _DAT_1058b4e8 = "m_iDeathFrame";
    _DAT_1058b524 = "m_bCheckContacts";
    _DAT_1058b560 = "m_bSpeedModActive";
    _DAT_1058b59c = "m_iSpeedModRadius";
    _DAT_1058b5d8 = "m_iSpeedModSpeed";
    _DAT_1058b614 = "m_hEnemyFilter";
    _DAT_1058b650 = "m_iszEnemyFilterName";
    _DAT_1058b65c = "enemyfilter";
    _DAT_1058b68c = "m_bImportanRagdoll";
    _DAT_1058b6c8 = "m_bPlayerAvoidState";
    _DAT_1058b704 = "m_OnDamaged";
    _DAT_1058b710 = "OnDamaged";
    _DAT_1058b740 = "m_OnDeath";
    _DAT_1058b74c = "OnDeath";
    _DAT_1058b77c = "m_OnHalfHealth";
    _DAT_1058b788 = "OnHalfHealth";
    _DAT_1058b7b8 = "m_OnFoundEnemy";
    _DAT_1058b7c4 = "OnFoundEnemy";
    _DAT_1058b7f4 = "m_OnLostEnemyLOS";
    _DAT_1058b800 = "OnLostEnemyLOS";
    _DAT_1058b830 = "m_OnLostEnemy";
    _DAT_1058b83c = "OnLostEnemy";
    _DAT_1058b86c = "m_OnFoundPlayer";
    _DAT_1058b878 = "OnFoundPlayer";
    _DAT_1058b8a8 = "m_OnLostPlayerLOS";
    _DAT_1058b8b4 = "OnLostPlayerLOS";
    _DAT_1058b8e4 = "m_OnLostPlayer";
    _DAT_1058b8f0 = "OnLostPlayer";
    _DAT_1058b920 = "m_OnHearWorld";
    _DAT_1058b92c = "OnHearWorld";
    _DAT_1058b95c = "m_OnHearPlayer";
    _DAT_1058b968 = "OnHearPlayer";
    _DAT_1058b998 = "m_OnHearCombat";
    _DAT_1058b9a4 = "OnHearCombat";
    _DAT_1058b9d4 = "m_OnDamagedByPlayer";
    _DAT_1058b9e0 = "OnDamagedByPlayer";
    _DAT_1058ba10 = "m_OnDamagedByPlayerSquad";
    _DAT_1058ba1c = "OnDamagedByPlayerSquad";
    _DAT_1058ba4c = "m_OnDenyCommanderUse";
    _DAT_1058ba58 = "OnDenyCommanderUse";
    _DAT_1058ba88 = "m_OnRappelTouchdown";
    _DAT_1058ba94 = "OnRappelTouchdown";
    _DAT_1058bac4 = "m_OnWake";
    _DAT_1058bad0 = "OnWake";
    _DAT_1058bb00 = "m_OnSleep";
    _DAT_1058bb0c = "OnSleep";
    _DAT_1058bb3c = "m_OnForcedInteractionStarted";
    _DAT_1058bb48 = "OnForcedInteractionStarted";
    _DAT_1058bb78 = "m_OnForcedInteractionAborted";
    _DAT_1058bb84 = "OnForcedInteractionAborted";
    _DAT_1058bbb4 = "m_OnForcedInteractionFinished";
    _DAT_1058bbc0 = "OnForcedInteractionFinished";
    _DAT_1058bbf0 = "InputSetRelationship";
    _DAT_1058bbfc = "SetRelationship";
    _DAT_1058bc2c = "InputSetEnemyFilter";
    _DAT_1058bc38 = "SetEnemyFilter";
    _DAT_1058bc68 = "InputSetHealth";
    _DAT_1058bc74 = "SetHealth";
    _DAT_1058bca4 = "InputBeginRappel";
    _DAT_1058bcb0 = "BeginRappel";
    _DAT_1058bce0 = "InputSetSquad";
    _DAT_1058bcec = "SetSquad";
    _DAT_1058bd1c = "InputWake";
    _DAT_1058bd58 = "InputForgetEntity";
    _DAT_1058bd64 = "ForgetEntity";
    _DAT_1058bd94 = "InputIgnoreDangerSounds";
    _DAT_1058bda0 = "IgnoreDangerSounds";
    _DAT_1058bdd0 = "InputBreak";
    _DAT_1058bddc = "Break";
    _DAT_1058be0c = "InputStartScripting";
    _DAT_1058be18 = "StartScripting";
    _DAT_1058be48 = "InputStopScripting";
    _DAT_1058be54 = "StopScripting";
    _DAT_1058be84 = "InputGagEnable";
    _DAT_1058be90 = "GagEnable";
    _DAT_1058bec0 = "InputGagDisable";
    _DAT_1058becc = "GagDisable";
    _DAT_1058befc = "InputInsideTransition";
    _DAT_1058bf08 = "InsideTransition";
    _DAT_1058bf38 = "InputOutsideTransition";
    _DAT_1058bf44 = "OutsideTransition";
    _DAT_1058bf74 = "InputActivateSpeedModifier";
    _DAT_1058bf80 = "ActivateSpeedModifier";
    _DAT_1058bfb0 = "InputDisableSpeedModifier";
    _DAT_1058bfbc = "DisableSpeedModifier";
    _DAT_1058bfec = "InputSetSpeedModifierRadius";
    _DAT_1058bff8 = "SetSpeedModRadius";
    _DAT_1058c028 = "InputSetSpeedModifierSpeed";
    _DAT_1058c034 = "SetSpeedModSpeed";
    _DAT_1058c064 = "InputHolsterWeapon";
    _DAT_1058c070 = "HolsterWeapon";
    _DAT_1058c0a0 = "InputHolsterAndDestroyWeapon";
    _DAT_1058c0ac = "HolsterAndDestroyWeapon";
    _DAT_1058c0dc = "InputUnholsterWeapon";
    _DAT_1058c0e8 = "UnholsterWeapon";
    _DAT_1058c118 = "InputForceInteractionWithNPC";
    _DAT_1058c124 = "ForceInteractionWithNPC";
    _DAT_1058c154 = "InputUpdateEnemyMemory";
    _DAT_1058c160 = "UpdateEnemyMemory";
    _DAT_1058c190 = "InputCreateAddon";
    _DAT_1058c19c = "CreateAddon";
    _DAT_1058c1cc = FUN_1001f850(&DAT_105fb688,(undefined4 *)"NPCUse");
    _DAT_1058c208 = FUN_1001f850(&DAT_105fb688,(undefined4 *)"CallNPCThink");
    _DAT_1058c244 = FUN_1001f850(&DAT_105fb688,(undefined4 *)"CorpseFallThink");
    _DAT_1058c280 = FUN_1001f850(&DAT_105fb688,(undefined4 *)"NPCInitThink");
    _DAT_1058dbec = "m_OnAssaultClear";
    _DAT_1058dbf8 = "OnAssaultClear";
    _DAT_1058e570 = FUN_1001f850(&DAT_105fc0e4,(undefined4 *)"FrontThink");
    _DAT_1058fe38 = "m_TimeBlockUseWaitPoint";
    _DAT_1058fe74 = "m_TimeCheckForWaitPoint";
    _DAT_1058feb0 = "m_pInterruptWaitPoint";
    _DAT_1058feec = "m_TimeBeforeSpreadFacing";
    _DAT_1058ff28 = "m_TimeNextSpreadFacing";
    _DAT_1058ff64 = "m_params";
    _DAT_1058ffa0 = "m_hFollowGoalEnt";
    _DAT_1058ffdc = "m_nFailedFollowAttempts";
    _DAT_10590018 = "m_flTimeFailFollowStarted";
    _DAT_10590054 = "m_vFollowMoveAnchor";
    _DAT_10590e68 = "m_OnArrival";
    _DAT_10590e74 = "OnArrival";
    _DAT_10590ea4 = "m_OnArrivalDone";
    _DAT_10590eb0 = "OnArrivalDone";
    _DAT_10590ee0 = "m_OnFailure";
    _DAT_10590eec = "OnFailure";
    _DAT_10590f1c = "m_OnDone";
    _DAT_10590f28 = "OnDone";
    _DAT_10590f58 = "InputSetSuccess";
    _DAT_10590f64 = "SetSuccess";
    _DAT_10590f94 = "InputSetFailure";
    _DAT_10590fa0 = "SetFailure";
    _DAT_10591264 = FUN_1001f850(&DAT_105fc46c,(undefined4 *)"FallThink");
    _DAT_105912a0 = FUN_1001f850(&DAT_105fc46c,(undefined4 *)"RemoveThink");
    _DAT_105915c0 = FUN_1001f850(&DAT_105fc544,(undefined4 *)"MovementThink");
    _DAT_10592a8c = FUN_1001f850(&DAT_105fd094,(undefined4 *)"PollMotionThink");
    _DAT_10592c88 = "m_hGoalEntity";
    _DAT_10592cc4 = "m_flags";
    _DAT_10592d00 = FUN_1001f850(&DAT_105fd140,(undefined4 *)"DelayedRefresh");
    _DAT_10592d3c = "InputActivate";
    _DAT_10592d48 = "Activate";
    _DAT_10592d78 = "InputUpdateActors";
    _DAT_10592d84 = "UpdateActors";
    _DAT_10592db4 = "InputDeactivate";
    _DAT_10592dc0 = "Deactivate";
    _DAT_1059305c = FUN_1001f850(&DAT_105fd1d8,(undefined4 *)"EnableThink");
    _DAT_10593098 = "InputEnableHint";
    _DAT_105930a4 = "EnableHint";
    _DAT_105930d4 = "InputDisableHint";
    _DAT_105930e0 = "DisableHint";
    _DAT_10593110 = "m_OnNPCStartedUsing";
    _DAT_1059311c = "OnNPCStartedUsing";
    _DAT_1059314c = "m_OnNPCStoppedUsing";
    _DAT_10593158 = "OnNPCStoppedUsing";
    _DAT_1059418c = "m_bYawLocked";
    _DAT_10594a60 = FUN_1001f850(&DAT_105fd980,(undefined4 *)"DelayedInit");
    _DAT_10594a9c = FUN_1001f850(&DAT_105fd980,(undefined4 *)"ThreadedInit");
    _DAT_10594ad8 = FUN_1001f850(&DAT_105fd980,(undefined4 *)"RebuildThink");
    _DAT_10594d90 = "m_TimePendingSet";
    _DAT_10594dcc = "m_hTalkTarget";
    _DAT_10594e08 = "m_flNextRegenTime";
    _DAT_10594e44 = "m_flTimePlayerStartStare";
    _DAT_10594e80 = "m_hPotentialSpeechTarget";
    _DAT_10594ebc = "m_flNextIdleSpeechTime";
    _DAT_10594ef8 = "m_iQARandomNumber";
    _DAT_10594f34 = "m_hSpeechFilter";
    _DAT_10594f70 = "m_ConceptCategoryTimers";
    _DAT_10594fac = "m_bGameEndAlly";
    _DAT_10594fb8 = "GameEndAlly";
    _DAT_10594fe8 = "m_bCanSpeakWhileScripting";
    _DAT_10595024 = "m_flHealthAccumulator";
    _DAT_10595060 = "m_flTimeLastRegen";
    _DAT_1059509c = "InputIdleRespond";
    _DAT_105950a8 = "IdleRespond";
    _DAT_105950d8 = "InputSpeakResponseConcept";
    _DAT_105950e4 = "SpeakResponseConcept";
    _DAT_10595114 = "InputMakeGameEndAlly";
    _DAT_10595120 = "MakeGameEndAlly";
    _DAT_10595150 = "InputMakeRegularAlly";
    _DAT_1059515c = "MakeRegularAlly";
    _DAT_1059518c = "InputAnswerQuestion";
    _DAT_10595198 = "AnswerQuestion";
    _DAT_105951c8 = "InputAnswerQuestionHello";
    _DAT_105951d4 = "AnswerQuestionHello";
    _DAT_10595204 = "InputEnableSpeakWhileScripting";
    _DAT_10595210 = "EnableSpeakWhileScripting";
    _DAT_10595240 = "InputDisableSpeakWhileScripting";
    _DAT_1059524c = "DisableSpeakWhileScripting";
    _DAT_105954f0 = "m_target";
    _DAT_1059552c = "m_sequence";
    _DAT_10595568 = "m_vecTargetOffset";
    _DAT_105955a4 = "m_waypointTolerance";
    _DAT_105955e0 = "m_arrivalActivity";
    _DAT_1059561c = "m_arrivalSequence";
    _DAT_10595658 = "m_bGoalPosSet";
    _DAT_10595694 = "m_goalPos";
    _DAT_105956d0 = "m_bGoalTypeSet";
    _DAT_1059570c = "m_goalType";
    _DAT_10595748 = "m_goalFlags";
    _DAT_10595784 = "m_routeStartTime";
    _DAT_105957c0 = "m_goalDirection";
    _DAT_105957fc = "m_goalDirectionTarget";
    _DAT_10595838 = "m_goalSpeed";
    _DAT_10595874 = "m_goalSpeedTarget";
    _DAT_105958b0 = "m_goalStoppingDistance";
    _DAT_10595d4c = "m_SeenNPCs";
    _DAT_10595d88 = "m_SeenMisc";
    _DAT_10595dc4 = "m_TimeLastLookHighPriority";
    _DAT_10595e00 = "m_TimeLastLookNPCs";
    _DAT_10595e3c = "m_TimeLastLookMisc";
    _DAT_105966b4 = "m_flEnemyInfoCleanupTime";
    _DAT_105989a8 = FUN_1001f850(&DAT_106038fc,(undefined4 *)"RampThink");
    _DAT_105989e4 = "InputPlaySound";
    _DAT_105989f0 = "PlaySound";
    _DAT_10598a20 = "InputStopSound";
    _DAT_10598a2c = "StopSound";
    _DAT_10598a5c = "InputToggleSound";
    _DAT_10598a68 = "ToggleSound";
    _DAT_10598a98 = "InputPitch";
    _DAT_10598aa4 = "Pitch";
    _DAT_10598ad4 = "InputVolume";
    _DAT_10598ae0 = "Volume";
    _DAT_10598b10 = "InputFadeIn";
    _DAT_10598b1c = "FadeIn";
    _DAT_10598b4c = "InputFadeOut";
    _DAT_10598b58 = "FadeOut";
    _DAT_10599458 = "m_flFrozen";
    _DAT_10599494 = "m_flFrozenThawRate";
    _DAT_105994d0 = "m_flFrozenMax";
    _DAT_1059950c = "m_fBoneCacheFlags";
    _DAT_10599548 = "m_bSuppressAnimSounds";
    _DAT_10599554 = "SuppressAnimSounds";
    _DAT_1059996c = "m_nPriority";
    _DAT_105999a8 = "m_nOrder";
    _DAT_105999e4 = "m_flLastEventCheck";
    _DAT_10599a20 = "m_flLastAccess";
    _DAT_10599a5c = "m_flLayerAnimtime";
    _DAT_10599a98 = "m_flLayerFadeOuttime";
    _DAT_10599c04 = "m_hLastFogTrigger";
    _DAT_10599c40 = "m_flNextAttack";
    _DAT_10599c7c = "m_eHull";
    _DAT_10599c88 = "HullType";
    _DAT_10599cb8 = "m_bloodColor";
    _DAT_10599cc4 = "BloodColor";
    _DAT_10599cf4 = "m_iDamageCount";
    _DAT_10599d30 = "m_flFieldOfView";
    _DAT_10599d6c = "m_HackedGunPos";
    _DAT_10599da8 = "m_RelationshipString";
    _DAT_10599db4 = "Relationship";
    _DAT_10599de4 = "m_LastHitGroup";
    _DAT_10599e20 = "m_flDamageAccumulator";
    _DAT_10599e5c = "m_impactEnergyScale";
    _DAT_10599e68 = "physdamagescale";
    _DAT_10599e98 = "m_CurrentWeaponProficiency";
    _DAT_10599ed4 = "m_Relationship";
    _DAT_10599f10 = "m_nFaction";
    _DAT_10599f4c = "m_iAmmo";
    _DAT_10599f88 = "m_hMyWeapons";
    _DAT_10599fc4 = "m_hActiveWeapon";
    _DAT_1059a000 = "m_bForceServerRagdoll";
    _DAT_1059a03c = "m_bPreventWeaponPickup";
    _DAT_1059a078 = "InputKilledNPC";
    _DAT_1059a084 = "KilledNPC";
    _DAT_1059a9a4 = "m_iReloadHudHintCount";
    _DAT_1059a9e0 = "m_iAltFireHudHintCount";
    _DAT_1059aa1c = "m_bReloadHudHintDisplayed";
    _DAT_1059aa58 = "m_bAltFireHudHintDisplayed";
    _DAT_1059aa94 = "m_flHudHintPollTime";
    _DAT_1059aad0 = "m_flHudHintMinDisplayTime";
    _DAT_1059ab0c = FUN_1001f850(&DAT_1060521c,(undefined4 *)"DefaultTouch");
    _DAT_1059ab48 = FUN_1001f850(&DAT_1060521c,(undefined4 *)"FallThink");
    _DAT_1059ab84 = FUN_1001f850(&DAT_1060521c,(undefined4 *)"Materialize");
    _DAT_1059abc0 = FUN_1001f850(&DAT_1060521c,(undefined4 *)"AttemptToMaterialize");
    _DAT_1059abfc = FUN_1001f850(&DAT_1060521c,(undefined4 *)"DestroyItem");
    _DAT_1059ac38 = FUN_1001f850(&DAT_1060521c,(undefined4 *)"SetPickupTouch");
    _DAT_1059ac74 = FUN_1001f850(&DAT_1060521c,(undefined4 *)"HideThink");
    _DAT_1059acb0 = "InputHideWeapon";
    _DAT_1059acbc = "HideWeapon";
    _DAT_1059acec = "m_OnPlayerUse";
    _DAT_1059acf8 = "OnPlayerUse";
    _DAT_1059ad28 = "m_OnPlayerPickup";
    _DAT_1059ad34 = "OnPlayerPickup";
    _DAT_1059ad64 = "m_OnNPCPickup";
    _DAT_1059ad70 = "OnNPCPickup";
    _DAT_1059ada0 = "m_OnCacheInteraction";
    _DAT_1059adac = "OnCacheInteraction";
    _DAT_1059b630 = "m_ResponseContexts";
    _DAT_1059b66c = "m_iszResponseContext";
    _DAT_1059b678 = "ResponseContext";
    _DAT_1059b6a8 = "m_pfnThink";
    _DAT_1059b6e4 = "m_pfnTouch";
    _DAT_1059b720 = "m_pfnUse";
    _DAT_1059b75c = "m_pfnBlocked";
    _DAT_1059b798 = "m_pfnMoveDone";
    _DAT_1059b7d4 = "m_lifeState";
    _DAT_1059b810 = "m_takedamage";
    _DAT_1059b84c = "m_iMaxHealth";
    _DAT_1059b858 = "max_health";
    _DAT_1059b888 = "m_target";
    _DAT_1059b894 = "target";
    _DAT_1059b8c4 = "m_iszDamageFilterName";
    _DAT_1059b8d0 = "damagefilter";
    _DAT_1059b900 = "m_iMapCleanupRespawnType";
    _DAT_1059b90c = "MapCleanupType";
    _DAT_1059b93c = "m_hDamageFilter";
    _DAT_1059b978 = "m_debugOverlays";
    _DAT_1059b9b4 = "m_pParent";
    _DAT_1059b9f0 = "m_iParentAttachment";
    _DAT_1059ba2c = "m_hMoveParent";
    _DAT_1059ba68 = "m_hMoveChild";
    _DAT_1059baa4 = "m_hMovePeer";
    _DAT_1059bae0 = "m_iEFlags";
    _DAT_1059bb1c = "m_iName";
    _DAT_1059bb58 = "m_iSignifierName";
    _DAT_1059bb94 = "m_Collision";
    _DAT_1059bbd0 = "m_Network";
    _DAT_1059bc0c = "m_MoveType";
    _DAT_1059bc18 = "MoveType";
    _DAT_1059bc48 = "m_MoveCollide";
    _DAT_1059bc84 = "m_hOwnerEntity";
    _DAT_1059bcc0 = "m_CollisionGroup";
    _DAT_1059bccc = "CollisionGroup";
    _DAT_1059bcfc = "m_pPhysicsObject";
    _DAT_1059bd38 = "m_flElasticity";
    _DAT_1059bd74 = "m_flShadowCastDistance";
    _DAT_1059bd80 = "shadowcastdist";
    _DAT_1059bdb0 = "m_flDesiredShadowCastDistance";
    _DAT_1059bdec = "m_iInitialTeamNum";
    _DAT_1059bdf8 = "TeamNum";
    _DAT_1059be28 = "m_iTeamNum";
    _DAT_1059be34 = "teamnumber";
    _DAT_1059be64 = "m_hGroundEntity";
    _DAT_1059bea0 = "m_flGroundChangeTime";
    _DAT_1059bedc = "m_ModelName";
    _DAT_1059bee8 = "model";
    _DAT_1059bf18 = "m_AIAddOn";
    _DAT_1059bf24 = "addon";
    _DAT_1059bf54 = "m_vecBaseVelocity";
    _DAT_1059bf60 = "basevelocity";
    _DAT_1059bf90 = "m_vecAbsVelocity";
    _DAT_1059bfcc = "m_vecAngVelocity";
    _DAT_1059bfd8 = "avelocity";
    _DAT_1059c008 = "m_rgflCoordinateFrame";
    _DAT_1059c044 = "m_nWaterLevel";
    _DAT_1059c050 = "waterlevel";
    _DAT_1059c080 = "m_nWaterType";
    _DAT_1059c0bc = "m_pBlocker";
    _DAT_1059c0f8 = "m_flGravity";
    _DAT_1059c104 = "gravity";
    _DAT_1059c134 = "m_flFriction";
    _DAT_1059c140 = "friction";
    _DAT_1059c170 = "m_flLocalTime";
    _DAT_1059c17c = "ltime";
    _DAT_1059c1ac = "m_flVPhysicsUpdateLocalTime";
    _DAT_1059c1e8 = "m_flMoveDoneTime";
    _DAT_1059c224 = "m_vecAbsOrigin";
    _DAT_1059c260 = "m_vecVelocity";
    _DAT_1059c26c = "velocity";
    _DAT_1059c29c = "m_iTextureFrameIndex";
    _DAT_1059c2a8 = "texframeindex";
    _DAT_1059c2d8 = "m_bSimulatedEveryTick";
    _DAT_1059c314 = "m_bAnimatedEveryTick";
    _DAT_1059c350 = "m_bAlternateSorting";
    _DAT_1059c38c = "m_spawnflags";
    _DAT_1059c398 = "spawnflags";
    _DAT_1059c3c8 = "m_nTransmitStateOwnedCounter";
    _DAT_1059c404 = "m_angAbsRotation";
    _DAT_1059c440 = "m_vecOrigin";
    _DAT_1059c47c = "m_angRotation";
    _DAT_1059c4b8 = "m_bClientSideRagdoll";
    _DAT_1059c4f4 = "m_vecViewOffset";
    _DAT_1059c500 = "view_ofs";
    _DAT_1059c530 = "m_iStageAvailable";
    _DAT_1059c53c = "zone_stages";
    _DAT_1059c56c = "m_fFlags";
    _DAT_1059c5a8 = "m_nSimulationTick";
    _DAT_1059c5e4 = "m_flNavIgnoreUntilTime";
    _DAT_1059c620 = "InputSetTeam";
    _DAT_1059c62c = "SetTeam";
    _DAT_1059c65c = "m_fadeMinDist";
    _DAT_1059c668 = "fademindist";
    _DAT_1059c698 = "m_fadeMaxDist";
    _DAT_1059c6a4 = "fademaxdist";
    _DAT_1059c6d4 = "m_flFadeScale";
    _DAT_1059c6e0 = "fadescale";
    _DAT_1059c710 = "InputKill";
    _DAT_1059c74c = "InputKillHierarchy";
    _DAT_1059c758 = "KillHierarchy";
    _DAT_1059c788 = "InputUse";
    _DAT_1059c7c4 = "InputAlpha";
    _DAT_1059c7d0 = "Alpha";
    _DAT_1059c800 = "InputAlternativeSorting";
    _DAT_1059c80c = "AlternativeSorting";
    _DAT_1059c83c = "InputColor";
    _DAT_1059c848 = "Color";
    _DAT_1059c878 = "InputSetParent";
    _DAT_1059c884 = "SetParent";
    _DAT_1059c8b4 = "InputSetParentAttachment";
    _DAT_1059c8c0 = "SetParentAttachment";
    _DAT_1059c8f0 = "InputSetParentAttachmentMaintainOffset";
    _DAT_1059c8fc = "SetParentAttachmentMaintainOffset";
    _DAT_1059c92c = "InputClearParent";
    _DAT_1059c938 = "ClearParent";
    _DAT_1059c968 = "InputSetLocalOrigin";
    _DAT_1059c974 = "SetLocalOrigin";
    _DAT_1059c9a4 = "InputSetLocalAngles";
    _DAT_1059c9b0 = "SetLocalAngles";
    _DAT_1059c9e0 = "InputSetDamageFilter";
    _DAT_1059c9ec = "SetDamageFilter";
    _DAT_1059ca1c = "InputEnableDamageForces";
    _DAT_1059ca28 = "EnableDamageForces";
    _DAT_1059ca58 = "InputDisableDamageForces";
    _DAT_1059ca64 = "DisableDamageForces";
    _DAT_1059ca94 = "InputDispatchResponse";
    _DAT_1059caa0 = "DispatchResponse";
    _DAT_1059cad0 = "InputAddContext";
    _DAT_1059cadc = "AddContext";
    _DAT_1059cb0c = "InputRemoveContext";
    _DAT_1059cb18 = "RemoveContext";
    _DAT_1059cb48 = "InputClearContext";
    _DAT_1059cb54 = "ClearContext";
    _DAT_1059cb84 = "InputDisableShadow";
    _DAT_1059cb90 = "DisableShadow";
    _DAT_1059cbc0 = "InputEnableShadow";
    _DAT_1059cbcc = "EnableShadow";
    _DAT_1059cbfc = "InputDisableDraw";
    _DAT_1059cc08 = "DisableDraw";
    _DAT_1059cc38 = "InputEnableDraw";
    _DAT_1059cc44 = "EnableDraw";
    _DAT_1059cc74 = "InputDisableReceivingFlashlight";
    _DAT_1059cc80 = "DisableReceivingFlashlight";
    _DAT_1059ccb0 = "InputEnableReceivingFlashlight";
    _DAT_1059ccbc = "EnableReceivingFlashlight";
    _DAT_1059ccec = "InputDisableDrawInFastReflection";
    _DAT_1059ccf8 = "DisableDrawInFastReflection";
    _DAT_1059cd28 = "InputEnableDrawInFastReflection";
    _DAT_1059cd34 = "EnableDrawInFastReflection";
    _DAT_1059cd64 = "InputAddOutput";
    _DAT_1059cd70 = "AddOutput";
    _DAT_1059cda0 = "InputFireUser1";
    _DAT_1059cdac = "FireUser1";
    _DAT_1059cddc = "InputFireUser2";
    _DAT_1059cde8 = "FireUser2";
    _DAT_1059ce18 = "InputFireUser3";
    _DAT_1059ce24 = "FireUser3";
    _DAT_1059ce54 = "InputFireUser4";
    _DAT_1059ce60 = "FireUser4";
    _DAT_1059ce90 = "InputRunScriptFile";
    _DAT_1059ce9c = "RunScriptFile";
    _DAT_1059cecc = "InputRunScript";
    _DAT_1059ced8 = "RunScriptCode";
    _DAT_1059cf08 = "InputCallScriptFunction";
    _DAT_1059cf14 = "CallScriptFunction";
    _DAT_1059cf44 = "m_OnUser1";
    _DAT_1059cf50 = "OnUser1";
    _DAT_1059cf80 = "m_OnUser2";
    _DAT_1059cf8c = "OnUser2";
    _DAT_1059cfbc = "m_OnUser3";
    _DAT_1059cfc8 = "OnUser3";
    _DAT_1059cff8 = "m_OnUser4";
    _DAT_1059d004 = "OnUser4";
    _DAT_1059d034 = FUN_1001f850(&DAT_106070dc,(undefined4 *)"SUB_Remove");
    _DAT_1059d070 = FUN_1001f850(&DAT_106070dc,(undefined4 *)"SUB_DoNothing");
    _DAT_1059d0ac = FUN_1001f850(&DAT_106070dc,(undefined4 *)"SUB_StartFadeOut");
    _DAT_1059d0e8 = FUN_1001f850(&DAT_106070dc,(undefined4 *)"SUB_StartFadeOutInstant");
    _DAT_1059d124 = FUN_1001f850(&DAT_106070dc,(undefined4 *)"SUB_FadeOut");
    _DAT_1059d160 = FUN_1001f850(&DAT_106070dc,(undefined4 *)"SUB_Vanish");
    _DAT_1059d19c = FUN_1001f850(&DAT_106070dc,(undefined4 *)"SUB_CallUseToggle");
    _DAT_1059d1d8 = FUN_1001f850(&DAT_106070dc,(undefined4 *)"ShadowCastDistThink");
    _DAT_1059d214 = FUN_1001f850(&DAT_106070dc,(undefined4 *)"ScriptThink");
    _DAT_1059d250 = "m_hEffectEntity";
    _DAT_1059d28c = "m_bLagCompensate";
    _DAT_1059d298 = "LagCompensate";
    _DAT_1059d2c8 = "m_bForcePurgeFixedupStrings";
    _DAT_1059e360 = FUN_1001f850(&DAT_106079e4,(undefined4 *)"Smoke");
    _DAT_1059e39c = FUN_1001f850(&DAT_106079e4,(undefined4 *)"BounceTouch");
    _DAT_1059e3d8 = FUN_1001f850(&DAT_106079e4,(undefined4 *)"SlideTouch");
    _DAT_1059e414 = FUN_1001f850(&DAT_106079e4,(undefined4 *)"ExplodeTouch");
    _DAT_1059e450 = FUN_1001f850(&DAT_106079e4,(undefined4 *)"DetonateUse");
    _DAT_1059e48c = FUN_1001f850(&DAT_106079e4,(undefined4 *)"DangerSoundThink");
    _DAT_1059e4c8 = FUN_1001f850(&DAT_106079e4,(undefined4 *)"PreDetonate");
    _DAT_1059e504 = FUN_1001f850(&DAT_106079e4,(undefined4 *)"Detonate");
    _DAT_1059e540 = FUN_1001f850(&DAT_106079e4,(undefined4 *)"TumbleThink");
    _DAT_1059f27c = "m_OnOff";
    _DAT_1059f288 = "OnLightOff";
    _DAT_1059f950 = FUN_1001f850(&DAT_1060acc0,(undefined4 *)"SpinUpMove");
    _DAT_1059f98c = FUN_1001f850(&DAT_1060acc0,(undefined4 *)"SpinDownMove");
    _DAT_1059f9c8 = FUN_1001f850(&DAT_1060acc0,(undefined4 *)"HurtTouch");
    _DAT_1059fa04 = FUN_1001f850(&DAT_1060acc0,(undefined4 *)"RotatingUse");
    _DAT_1059fa40 = FUN_1001f850(&DAT_1060acc0,(undefined4 *)"RotateMove");
    _DAT_1059fa7c = FUN_1001f850(&DAT_1060acc0,(undefined4 *)"ReverseMove");
    _DAT_1059fab8 = "InputSetSpeed";
    _DAT_1059fac4 = "SetSpeed";
    _DAT_1059faf4 = "InputGetSpeed";
    _DAT_1059fb00 = "GetSpeed";
    _DAT_1059fb30 = "InputStart";
    _DAT_1059fb3c = "Start";
    _DAT_1059fb6c = "InputStop";
    _DAT_1059fba8 = "InputToggle";
    _DAT_1059fbb4 = "Toggle";
    _DAT_1059fbe4 = "InputReverse";
    _DAT_1059fbf0 = "Reverse";
    _DAT_1059fc20 = "InputStartForward";
    _DAT_1059fc2c = "StartForward";
    _DAT_1059fc5c = "InputStartBackward";
    _DAT_1059fc68 = "StartBackward";
    _DAT_1059fc98 = "InputStopAtStartPos";
    _DAT_1059fca4 = "StopAtStartPos";
    _DAT_1059fcd4 = "m_OnGetSpeed";
    _DAT_1059fce0 = "OnGetSpeed";
    _DAT_105a01c0 = FUN_1001f850(&DAT_1060b080,(undefined4 *)"ButtonTouch");
    _DAT_105a01fc = FUN_1001f850(&DAT_1060b080,(undefined4 *)"ButtonSpark");
    _DAT_105a0238 = FUN_1001f850(&DAT_1060b080,(undefined4 *)"TriggerAndWait");
    _DAT_105a0274 = FUN_1001f850(&DAT_1060b080,(undefined4 *)"ButtonReturn");
    _DAT_105a02b0 = FUN_1001f850(&DAT_1060b080,(undefined4 *)"ButtonBackHome");
    _DAT_105a02ec = FUN_1001f850(&DAT_1060b080,(undefined4 *)"ButtonUse");
    _DAT_105a0328 = "InputLock";
    _DAT_105a0364 = "InputUnlock";
    _DAT_105a0370 = "Unlock";
    _DAT_105a03a0 = "InputPress";
    _DAT_105a03ac = "Press";
    _DAT_105a03dc = "InputPressIn";
    _DAT_105a03e8 = "PressIn";
    _DAT_105a0418 = "InputPressOut";
    _DAT_105a0424 = "PressOut";
    _DAT_105a0454 = "m_OnDamaged";
    _DAT_105a0460 = "OnDamaged";
    _DAT_105a0490 = "m_OnPressed";
    _DAT_105a049c = "OnPressed";
    _DAT_105a04cc = "m_OnUseLocked";
    _DAT_105a04d8 = "OnUseLocked";
    _DAT_105a0508 = "m_OnIn";
    _DAT_105a0544 = "m_OnOut";
    _DAT_105a0550 = "OnOut";
    _DAT_105a0838 = FUN_1001f850(&DAT_1060b14c,(undefined4 *)"UseMoveDone");
    _DAT_105a0874 = FUN_1001f850(&DAT_1060b14c,(undefined4 *)"ReturnMoveDone");
    _DAT_105a08b0 = FUN_1001f850(&DAT_1060b14c,(undefined4 *)"SetPositionMoveDone");
    _DAT_105a08ec = FUN_1001f850(&DAT_1060b14c,(undefined4 *)"UpdateThink");
    _DAT_105a0928 = "InputSetPosition";
    _DAT_105a0934 = "SetPosition";
    _DAT_105a0964 = "InputSetPositionImmediately";
    _DAT_105a0970 = "SetPositionImmediately";
    _DAT_105a09a0 = "InputDisableUpdateTarget";
    _DAT_105a09ac = "_DisableUpdateTarget";
    _DAT_105a09dc = "InputEnableUpdateTarget";
    _DAT_105a09e8 = "_EnableUpdateTarget";
    _DAT_105a0a18 = "m_Position";
    _DAT_105a0a24 = "Position";
    _DAT_105a0a54 = "m_OnUnpressed";
    _DAT_105a0a60 = "OnUnpressed";
    _DAT_105a0a90 = "m_OnFullyClosed";
    _DAT_105a0a9c = "OnFullyClosed";
    _DAT_105a0acc = "m_OnFullyOpen";
    _DAT_105a0ad8 = "OnFullyOpen";
    _DAT_105a0b08 = "m_OnReachedPosition";
    _DAT_105a0b14 = "OnReachedPosition";
    _DAT_105a0b44 = "InputEnable";
    _DAT_105a0b50 = "Enable";
    _DAT_105a0b80 = "InputDisable";
    _DAT_105a0b8c = "Disable";
    _DAT_105a0bbc = "m_bDisabled";
    _DAT_105a26f8 = "m_OnBlockedClosing";
    _DAT_105a2704 = "OnBlockedClosing";
    _DAT_105a2734 = "m_OnUnblockedOpening";
    _DAT_105a2740 = "OnUnblockedOpening";
    _DAT_105a2770 = "m_OnUnblockedClosing";
    _DAT_105a277c = "OnUnblockedClosing";
    _DAT_105a27ac = "m_OnFullyClosed";
    _DAT_105a27b8 = "OnFullyClosed";
    _DAT_105a27e8 = "m_OnFullyOpen";
    _DAT_105a27f4 = "OnFullyOpen";
    _DAT_105a2824 = "m_OnClose";
    _DAT_105a2830 = "OnClose";
    _DAT_105a2860 = "m_OnOpen";
    _DAT_105a286c = "OnOpen";
    _DAT_105a289c = "m_OnLockedUse";
    _DAT_105a28a8 = "OnLockedUse";
    _DAT_105a28d8 = FUN_1001f850(&DAT_1060cfd4,(undefined4 *)"DoorTouch");
    _DAT_105a2914 = FUN_1001f850(&DAT_1060cfd4,(undefined4 *)"DoorGoUp");
    _DAT_105a2950 = FUN_1001f850(&DAT_1060cfd4,(undefined4 *)"DoorGoDown");
    _DAT_105a298c = FUN_1001f850(&DAT_1060cfd4,(undefined4 *)"DoorHitTop");
    _DAT_105a29c8 = FUN_1001f850(&DAT_1060cfd4,(undefined4 *)"DoorHitBottom");
    _DAT_105a2a04 = FUN_1001f850(&DAT_1060cfd4,(undefined4 *)"MovingSoundThink");
    _DAT_105a2a40 = FUN_1001f850(&DAT_1060cfd4,(undefined4 *)"CloseAreaPortalsThink");
    _DAT_105a4c44 = FUN_1001f850(&DAT_1060d164,(undefined4 *)"DynamicLightThink");
    _DAT_105a4c80 = "m_Radius";
    _DAT_105a4c8c = "distance";
    _DAT_105a4cbc = "m_Exponent";
    _DAT_105a4cc8 = "brightness";
    _DAT_105a4cf8 = "m_InnerAngle";
    _DAT_105a4d04 = "_inner_cone";
    _DAT_105a4d34 = "m_OuterAngle";
    _DAT_105a4d40 = "_cone";
    _DAT_105a4d70 = "m_SpotRadius";
    _DAT_105a4d7c = "spotlight_radius";
    _DAT_105a4dac = "m_LightStyle";
    _DAT_105a4db8 = "style";
    _DAT_105a4de8 = "InputTurnOn";
    _DAT_105a4df4 = "TurnOn";
    _DAT_105a4e24 = "InputTurnOff";
    _DAT_105a4e30 = "TurnOff";
    _DAT_105a4e60 = "InputToggle";
    _DAT_105a4e6c = "Toggle";
    _DAT_105a51a0 = FUN_1001f850(&DAT_1060ddc4,(undefined4 *)"FizzThink");
    _DAT_105a51dc = "InputActivate";
    _DAT_105a51e8 = "Activate";
    _DAT_105a5218 = "InputDeactivate";
    _DAT_105a5224 = "Deactivate";
    _DAT_105a5254 = "InputToggle";
    _DAT_105a5260 = "Toggle";
    _DAT_105a5290 = "InputSetCurrent";
    _DAT_105a529c = "SetCurrent";
    _DAT_105a52cc = "InputSetDensity";
    _DAT_105a52d8 = "SetDensity";
    _DAT_105a5308 = "InputSetFrequency";
    _DAT_105a5314 = "SetFrequency";
    _DAT_105a5400 = FUN_1001f850(&DAT_1060dde4,(undefined4 *)"TracerThink");
    _DAT_105a5838 = FUN_1001f850(&DAT_1060de04,(undefined4 *)"ShootThink");
    _DAT_105a603c = "m_EnvWindShared.m_OnGustEnd";
    _DAT_105a6048 = "OnGustEnd";
    _DAT_105a6078 = FUN_1001f850(&DAT_1060e204,(undefined4 *)"WindThink");
    _DAT_105a61f0 = FUN_1001f850(&DAT_1060e71c,(undefined4 *)"EmberUse");
    _DAT_105a6858 = FUN_1001f850(&DAT_1060e99c,(undefined4 *)"ShootThink");
    _DAT_105a6894 = "InputEnable";
    _DAT_105a68a0 = "Enable";
    _DAT_105a68d0 = "InputDisable";
    _DAT_105a68dc = "Disable";
    _DAT_105a6e18 = FUN_1001f850(&DAT_1060ec5c,(undefined4 *)"DissolveThink");
    _DAT_105a6e54 = FUN_1001f850(&DAT_1060ec5c,(undefined4 *)"ElectrocuteThink");
    _DAT_105a6e90 = "InputDissolve";
    _DAT_105a6e9c = "Dissolve";
    _DAT_105a706c = FUN_1001f850(&DAT_1060f0a8,(undefined4 *)"FlameThink");
    _DAT_105abc40 = FUN_1001f850(&DAT_1063ffac,(undefined4 *)"UpdateParamBlend");
    _DAT_105abc7c = "InputSetNearBlurDepth";
    _DAT_105abc88 = "SetNearBlurDepth";
    _DAT_105abcb8 = "InputSetNearFocusDepth";
    _DAT_105abcc4 = "SetNearFocusDepth";
    _DAT_105abcf4 = "InputSetFarFocusDepth";
    _DAT_105abd00 = "SetFarFocusDepth";
    _DAT_105abd30 = "InputSetFarBlurDepth";
    _DAT_105abd3c = "SetFarBlurDepth";
    _DAT_105abd6c = "InputSetNearBlurRadius";
    _DAT_105abd78 = "SetNearBlurRadius";
    _DAT_105abda8 = "InputSetFarBlurRadius";
    _DAT_105abdb4 = "SetFarBlurRadius";
    _DAT_105abde4 = "InputSetFocusTarget";
    _DAT_105abdf0 = "SetFocusTarget";
    _DAT_105abe20 = "InputSetFocusTargetRange";
    _DAT_105abe2c = "SetFocusTargetRange";
    _DAT_105ac50c = FUN_1001f850(&DAT_1064036c,(undefined4 *)"UpdateMaterialThink");
    _DAT_105ac548 = "InputDisable";
    _DAT_105ac554 = "Disable";
    _DAT_105ac584 = "InputEnable";
    _DAT_105ac590 = "Enable";
    _DAT_105ac5c0 = "m_OnSurfaceChangedToTarget";
    _DAT_105ac5cc = "OnSurfaceChangedToTarget";
    _DAT_105ac5fc = "m_OnSurfaceChangedFromTarget";
    _DAT_105ac608 = "OnSurfaceChangedFromTarget";
    _DAT_105ad068 = FUN_1001f850(&DAT_106403e0,(undefined4 *)"InitialThink");
    _DAT_105ad124 = "OverlayName1";
    _DAT_105ad154 = "m_iszOverlayNames[1]";
    _DAT_105ad160 = "OverlayName2";
    _DAT_105ad190 = "m_iszOverlayNames[2]";
    _DAT_105ad19c = "OverlayName3";
    _DAT_105ad1cc = "m_iszOverlayNames[3]";
    _DAT_105ad1d8 = "OverlayName4";
    _DAT_105ad208 = "m_iszOverlayNames[4]";
    _DAT_105ad214 = "OverlayName5";
    _DAT_105ad244 = "m_iszOverlayNames[5]";
    _DAT_105ad250 = "OverlayName6";
    _DAT_105ad280 = "m_iszOverlayNames[6]";
    _DAT_105ad28c = "OverlayName7";
    _DAT_105ad2bc = "m_iszOverlayNames[7]";
    _DAT_105ad2c8 = "OverlayName8";
    _DAT_105ad2f8 = "m_iszOverlayNames[8]";
    _DAT_105ad304 = "OverlayName9";
    _DAT_105ad334 = "m_iszOverlayNames[9]";
    _DAT_105ad340 = "OverlayName10";
    _DAT_105ad370 = "m_flOverlayTimes[0]";
    _DAT_105ad37c = "OverlayTime1";
    _DAT_105ad3ac = "m_flOverlayTimes[1]";
    _DAT_105ad3b8 = "OverlayTime2";
    _DAT_105ad3e8 = "m_flOverlayTimes[2]";
    _DAT_105ad3f4 = "OverlayTime3";
    _DAT_105ad424 = "m_flOverlayTimes[3]";
    _DAT_105ad430 = "OverlayTime4";
    _DAT_105ad460 = "m_flOverlayTimes[4]";
    _DAT_105ad46c = "OverlayTime5";
    _DAT_105ad49c = "m_flOverlayTimes[5]";
    _DAT_105ad4a8 = "OverlayTime6";
    _DAT_105ad4d8 = "m_flOverlayTimes[6]";
    _DAT_105ad4e4 = "OverlayTime7";
    _DAT_105ad514 = "m_flOverlayTimes[7]";
    _DAT_105ad520 = "OverlayTime8";
    _DAT_105ad550 = "m_flOverlayTimes[8]";
    _DAT_105ad55c = "OverlayTime9";
    _DAT_105ad58c = "m_flOverlayTimes[9]";
    _DAT_105ad598 = "OverlayTime10";
    _DAT_105ad5c8 = "m_iDesiredOverlay";
    _DAT_105ad604 = "m_flStartTime";
    _DAT_105ad640 = "m_bIsActive";
    _DAT_105ad67c = "InputStartOverlay";
    _DAT_105ad688 = "StartOverlays";
    _DAT_105ad6b8 = "InputStopOverlay";
    _DAT_105ad6c4 = "StopOverlays";
    _DAT_105ad6f4 = "InputSwitchOverlay";
    _DAT_105ad700 = "SwitchOverlay";
    _DAT_105ae4b8 = FUN_1001f850(&DAT_10641678,(undefined4 *)"StrikeThink");
    _DAT_105ae4f4 = FUN_1001f850(&DAT_10641678,(undefined4 *)"UpdateThink");
    _DAT_105ae530 = "InputTurnOn";
    _DAT_105ae53c = "TurnOn";
    _DAT_105ae56c = "InputTurnOff";
    _DAT_105ae578 = "TurnOff";
    _DAT_105ae5a8 = "InputToggle";
    _DAT_105ae5b4 = "Toggle";
    _DAT_105ae5e4 = "InputStrikeOnce";
    _DAT_105ae5f0 = "StrikeOnce";
    _DAT_105ae620 = "m_OnTouchedByEntity";
    _DAT_105ae62c = "OnTouchedByEntity";
    _DAT_105aeab4 = FUN_1001f850(&DAT_1064172c,(undefined4 *)"StrikeThink");
    _DAT_105aeaf0 = "InputTurnOn";
    _DAT_105aeafc = "TurnOn";
    _DAT_105aeb2c = "InputTurnOff";
    _DAT_105aeb38 = "TurnOff";
    _DAT_105aeb68 = "InputToggle";
    _DAT_105aeb74 = "Toggle";
    _DAT_105aef44 = "m_bRolledOutroCredits";
    _DAT_105aef80 = "m_flLogoLength";
    _DAT_105af508 = "m_OnRoutedSound";
    _DAT_105af514 = "OnRoutedSound";
    _DAT_105af544 = "m_OnHeardSound";
    _DAT_105af550 = "OnHeardSound";
    _DAT_105af8cc = "m_shakeCallback";
    _DAT_105af908 = "InputStartShake";
    _DAT_105af914 = "StartShake";
    _DAT_105af944 = "InputStopShake";
    _DAT_105af950 = "StopShake";
    _DAT_105af980 = "InputAmplitude";
    _DAT_105af98c = "Amplitude";
    _DAT_105af9bc = "InputFrequency";
    _DAT_105af9c8 = "Frequency";
    _DAT_105afce8 = FUN_1001f850(&DAT_10641924,(undefined4 *)"SparkThink");
    _DAT_105afd24 = "InputStartSpark";
    _DAT_105afd30 = "StartSpark";
    _DAT_105afd60 = "InputStopSpark";
    _DAT_105afd6c = "StopSpark";
    _DAT_105afd9c = "InputToggleSpark";
    _DAT_105afda8 = "ToggleSpark";
    _DAT_105afdd8 = "InputSparkOnce";
    _DAT_105afde4 = "SparkOnce";
    _DAT_105afe14 = "m_OnSpark";
    _DAT_105afe20 = "OnSpark";
    _DAT_105b0110 = FUN_1001f850(&DAT_10641d68,(undefined4 *)"Smoke");
    _DAT_105b014c = "InputExplode";
    _DAT_105b0158 = "Explode";
    _DAT_105b036c = "m_OnFail";
    _DAT_105b0378 = "OnFail";
    _DAT_105b0fac = FUN_1001f850(&DAT_10642474,(undefined4 *)"BurnThink");
    _DAT_105b0fe8 = FUN_1001f850(&DAT_10642474,(undefined4 *)"GoOutThink");
    _DAT_105b1024 = "InputStartFire";
    _DAT_105b1030 = "StartFire";
    _DAT_105b1060 = "InputExtinguish";
    _DAT_105b106c = "Extinguish";
    _DAT_105b109c = "InputExtinguishTemporary";
    _DAT_105b10a8 = "ExtinguishTemporary";
    _DAT_105b10d8 = "InputEnable";
    _DAT_105b10e4 = "Enable";
    _DAT_105b1114 = "InputDisable";
    _DAT_105b1120 = "Disable";
    _DAT_105b1150 = "m_OnIgnited";
    _DAT_105b115c = "OnIgnited";
    _DAT_105b118c = "m_OnExtinguished";
    _DAT_105b1198 = "OnExtinguished";
    _DAT_105b1594 = "m_OnHeatLevelEnd";
    _DAT_105b15a0 = "OnHeatLevelEnd";
    _DAT_105b1e48 = FUN_1001f850(&DAT_10642b98,(undefined4 *)"Update");
    _DAT_105b2694 = FUN_1001f850(&DAT_10642c34,(undefined4 *)"SetLerpValues");
    _DAT_105b26d0 = "m_iChangedVariables";
    _DAT_105b270c = "m_fog.lerptime";
    _DAT_105b2748 = "m_fog.colorPrimaryLerpTo";
    _DAT_105b2784 = "m_fog.colorSecondaryLerpTo";
    _DAT_105b27c0 = "m_fog.startLerpTo";
    _DAT_105b27fc = "m_fog.endLerpTo";
    _DAT_105b2838 = "m_fog.maxdensityLerpTo";
    _DAT_105b3734 = FUN_1001f850(&DAT_10643960,(undefined4 *)"BreakTouch");
    _DAT_105b37ac = "m_OnBreak";
    _DAT_105b37b8 = "OnBreak";
    _DAT_105b37e8 = "m_OnHealthChanged";
    _DAT_105b37f4 = "OnHealthChanged";
    _DAT_105b3824 = "m_flDmgModBullet";
    _DAT_105b3860 = "m_flDmgModClub";
    _DAT_105b389c = "m_flDmgModExplosive";
    _DAT_105b38d8 = "m_flDmgModFire";
    _DAT_105b3914 = "m_iszPhysicsDamageTableName";
    _DAT_105b3950 = "m_iszBreakableModel";
    _DAT_105b398c = "m_iBreakableSkin";
    _DAT_105b39c8 = "m_iBreakableCount";
    _DAT_105b3a04 = "m_iMaxBreakableSize";
    _DAT_105b3a40 = "m_iszBasePropData";
    _DAT_105b3a7c = "m_iInteractions";
    _DAT_105b3ab8 = "m_explodeRadius";
    _DAT_105b3af4 = "m_iszModelName";
    _DAT_105b3b30 = "m_hPhysicsAttacker";
    _DAT_105b3b6c = "m_flLastPhysicsInfluenceTime";
    _DAT_105b4024 = FUN_1001f850(&DAT_10643b94,(undefined4 *)"BreakThink");
    _DAT_105b4060 = FUN_1001f850(&DAT_10643b94,(undefined4 *)"SurfaceTouch");
    _DAT_105b409c = "InputShatter";
    _DAT_105b40a8 = "Shatter";
    _DAT_105b495c = "m_OnReachedBottom";
    _DAT_105b4968 = "OnReachedBottom";
    _DAT_105b4998 = FUN_1001f850(&DAT_106446c4,(undefined4 *)"StopMoveSoundThink");
    _DAT_105b5174 = "m_OnProxyRelay2";
    _DAT_105b5180 = "OnProxyRelay2";
    _DAT_105b51b0 = "m_OnProxyRelay3";
    _DAT_105b51bc = "OnProxyRelay3";
    _DAT_105b51ec = "m_OnProxyRelay4";
    _DAT_105b51f8 = "OnProxyRelay4";
    _DAT_105b5228 = "m_OnProxyRelay5";
    _DAT_105b5234 = "OnProxyRelay5";
    _DAT_105b5264 = "m_OnProxyRelay6";
    _DAT_105b5270 = "OnProxyRelay6";
    _DAT_105b52a0 = "m_OnProxyRelay7";
    _DAT_105b52ac = "OnProxyRelay7";
    _DAT_105b52dc = "m_OnProxyRelay8";
    _DAT_105b52e8 = "OnProxyRelay8";
    _DAT_105b5318 = "m_OnProxyRelay9";
    _DAT_105b5324 = "OnProxyRelay9";
    _DAT_105b5354 = "m_OnProxyRelay10";
    _DAT_105b5360 = "OnProxyRelay10";
    _DAT_105b5390 = "m_OnProxyRelay11";
    _DAT_105b539c = "OnProxyRelay11";
    _DAT_105b53cc = "m_OnProxyRelay12";
    _DAT_105b53d8 = "OnProxyRelay12";
    _DAT_105b5408 = "m_OnProxyRelay13";
    _DAT_105b5414 = "OnProxyRelay13";
    _DAT_105b5444 = "m_OnProxyRelay14";
    _DAT_105b5450 = "OnProxyRelay14";
    _DAT_105b5480 = "m_OnProxyRelay15";
    _DAT_105b548c = "OnProxyRelay15";
    _DAT_105b54bc = "m_OnProxyRelay16";
    _DAT_105b54c8 = "OnProxyRelay16";
    _DAT_105b54f8 = "m_OnProxyRelay16";
    _DAT_105b5504 = "OnProxyRelay16";
    _DAT_105b5534 = "m_OnProxyRelay17";
    _DAT_105b5540 = "OnProxyRelay17";
    _DAT_105b5570 = "m_OnProxyRelay18";
    _DAT_105b557c = "OnProxyRelay18";
    _DAT_105b55ac = "m_OnProxyRelay19";
    _DAT_105b55b8 = "OnProxyRelay19";
    _DAT_105b55e8 = "m_OnProxyRelay20";
    _DAT_105b55f4 = "OnProxyRelay20";
    _DAT_105b5624 = "m_OnProxyRelay21";
    _DAT_105b5630 = "OnProxyRelay21";
    _DAT_105b5660 = "m_OnProxyRelay22";
    _DAT_105b566c = "OnProxyRelay22";
    _DAT_105b569c = "m_OnProxyRelay23";
    _DAT_105b56a8 = "OnProxyRelay23";
    _DAT_105b56d8 = "m_OnProxyRelay24";
    _DAT_105b56e4 = "OnProxyRelay24";
    _DAT_105b5714 = "m_OnProxyRelay25";
    _DAT_105b5720 = "OnProxyRelay25";
    _DAT_105b5750 = "m_OnProxyRelay26";
    _DAT_105b575c = "OnProxyRelay26";
    _DAT_105b578c = "m_OnProxyRelay27";
    _DAT_105b5798 = "OnProxyRelay27";
    _DAT_105b57c8 = "m_OnProxyRelay28";
    _DAT_105b57d4 = "OnProxyRelay28";
    _DAT_105b5804 = "m_OnProxyRelay29";
    _DAT_105b5810 = "OnProxyRelay29";
    _DAT_105b5840 = "m_OnProxyRelay30";
    _DAT_105b584c = "OnProxyRelay30";
    _DAT_105b5af4 = "m_OnPlayerGotOffLadder";
    _DAT_105b5b00 = "OnPlayerGotOffLadder";
    _DAT_105b5f40 = "m_OnFullyClosed";
    _DAT_105b5f4c = "OnFullyClosed";
    _DAT_105b5f7c = FUN_1001f850(&DAT_10645084,(undefined4 *)"StopMoveSound");
    _DAT_105b6708 = "m_playerOff";
    _DAT_105b6714 = "PlayerOff";
    _DAT_105b6744 = "m_pressedMoveLeft";
    _DAT_105b6750 = "PressedMoveLeft";
    _DAT_105b6780 = "m_pressedMoveRight";
    _DAT_105b678c = "PressedMoveRight";
    _DAT_105b67bc = "m_pressedForward";
    _DAT_105b67c8 = "PressedForward";
    _DAT_105b67f8 = "m_pressedBack";
    _DAT_105b6804 = "PressedBack";
    _DAT_105b6834 = "m_pressedAttack";
    _DAT_105b6840 = "PressedAttack";
    _DAT_105b6870 = "m_pressedAttack2";
    _DAT_105b687c = "PressedAttack2";
    _DAT_105b68ac = "m_unpressedMoveLeft";
    _DAT_105b68b8 = "UnpressedMoveLeft";
    _DAT_105b68e8 = "m_unpressedMoveRight";
    _DAT_105b68f4 = "UnpressedMoveRight";
    _DAT_105b6924 = "m_unpressedForward";
    _DAT_105b6930 = "UnpressedForward";
    _DAT_105b6960 = "m_unpressedBack";
    _DAT_105b696c = "UnpressedBack";
    _DAT_105b699c = "m_unpressedAttack";
    _DAT_105b69a8 = "UnpressedAttack";
    _DAT_105b69d8 = "m_unpressedAttack2";
    _DAT_105b69e4 = "UnpressedAttack2";
    _DAT_105b6a14 = "m_xaxis";
    _DAT_105b6a20 = "XAxis";
    _DAT_105b6a50 = "m_yaxis";
    _DAT_105b6a5c = "YAxis";
    _DAT_105b6a8c = "m_attackaxis";
    _DAT_105b6a98 = "AttackAxis";
    _DAT_105b6ac8 = "m_attack2axis";
    _DAT_105b6ad4 = "Attack2Axis";
    _DAT_105b7858 = FUN_1001f850(&DAT_1064bbf4,(undefined4 *)"ItemTouch");
    _DAT_105b7894 = FUN_1001f850(&DAT_1064bbf4,(undefined4 *)"Materialize");
    _DAT_105b78d0 = FUN_1001f850(&DAT_1064bbf4,(undefined4 *)"ComeToRest");
    _DAT_105b790c = "m_OnPlayerTouch";
    _DAT_105b7918 = "OnPlayerTouch";
    _DAT_105b7948 = "m_OnCacheInteraction";
    _DAT_105b7954 = "OnCacheInteraction";
    _DAT_105b7d44 = FUN_1001f850(&DAT_1064c184,(undefined4 *)"FadeThink");
    _DAT_105b7d80 = "InputSetPattern";
    _DAT_105b7d8c = "SetPattern";
    _DAT_105b7dbc = "InputFadeToPattern";
    _DAT_105b7dc8 = "FadeToPattern";
    _DAT_105b7df8 = "InputToggle";
    _DAT_105b7e04 = "Toggle";
    _DAT_105b7e34 = "InputTurnOn";
    _DAT_105b7e40 = "TurnOn";
    _DAT_105b7e70 = "InputTurnOff";
    _DAT_105b7e7c = "TurnOff";
    _DAT_105b8498 = FUN_1001f850(&DAT_1064c1cc,(undefined4 *)"MeasureThink");
    _DAT_105b86f4 = "m_PlayerDied";
    _DAT_105b8700 = "PlayerDied";
    _DAT_105b8730 = "m_hPlayer";
    _DAT_105b876c = "m_OnJump";
    _DAT_105b8778 = "OnJump";
    _DAT_105b87a8 = "m_OnDuck";
    _DAT_105b87b4 = "OnDuck";
    _DAT_105b87e4 = "m_OnUnDuck";
    _DAT_105b87f0 = "OnUnDuck";
    _DAT_105b8ad0 = "m_Output[0]";
    _DAT_105b8adc = "OnTrigger1";
    _DAT_105b8b0c = "m_Output[1]";
    _DAT_105b8b18 = "OnTrigger2";
    _DAT_105b8b48 = "m_Output[2]";
    _DAT_105b8b54 = "OnTrigger3";
    _DAT_105b8b84 = "m_Output[3]";
    _DAT_105b8b90 = "OnTrigger4";
    _DAT_105b8bc0 = "m_Output[4]";
    _DAT_105b8bcc = "OnTrigger5";
    _DAT_105b8bfc = "m_Output[5]";
    _DAT_105b8c08 = "OnTrigger6";
    _DAT_105b8c38 = "m_Output[6]";
    _DAT_105b8c44 = "OnTrigger7";
    _DAT_105b8c74 = "m_Output[7]";
    _DAT_105b8c80 = "OnTrigger8";
    _DAT_105b8e90 = "m_OnNewGame";
    _DAT_105b8e9c = "OnNewGame";
    _DAT_105b8ecc = "m_OnLoadGame";
    _DAT_105b8ed8 = "OnLoadGame";
    _DAT_105b8f08 = "m_OnMapTransition";
    _DAT_105b8f14 = "OnMapTransition";
    _DAT_105b8f44 = "m_OnBackgroundMap";
    _DAT_105b8f50 = "OnBackgroundMap";
    _DAT_105b8f80 = "m_OnMultiNewMap";
    _DAT_105b8f8c = "OnMultiNewMap";
    _DAT_105b8fbc = "m_OnMultiNewRound";
    _DAT_105b8fc8 = "OnMultiNewRound";
    _DAT_105b91fc = "m_OnNotEqual";
    _DAT_105b9208 = "OnNotEqual";
    _DAT_105b9238 = "m_iIntegerValue";
    _DAT_105b9244 = "IntegerValue";
    _DAT_105b9274 = "m_iShouldCompareToValue";
    _DAT_105b9280 = "ShouldComparetoValue";
    _DAT_105b92b0 = "m_AllIntCompares";
    _DAT_105b92ec = "InputValue";
    _DAT_105b92f8 = "InputValue";
    _DAT_105b9328 = "InputCompareValues";
    _DAT_105b9334 = "CompareValues";
    _DAT_105b963c = "m_OnRegisteredActivate2";
    _DAT_105b9648 = "OnRegisteredActivate2";
    _DAT_105b9678 = "m_OnRegisteredActivate3";
    _DAT_105b9684 = "OnRegisteredActivate3";
    _DAT_105b96b4 = "m_OnRegisteredActivate4";
    _DAT_105b96c0 = "OnRegisteredActivate4";
    _DAT_105b9ab4 = "m_OnTimerHigh";
    _DAT_105b9ac0 = "OnTimerHigh";
    _DAT_105b9af0 = "m_OnTimerLow";
    _DAT_105b9afc = "OnTimerLow";
    _DAT_105b9d18 = "m_flInMin";
    _DAT_105b9d54 = "m_flInMax";
    _DAT_105b9d90 = "m_flOut1";
    _DAT_105b9dcc = "m_flOut2";
    _DAT_105b9e08 = "m_bEnabled";
    _DAT_105b9e44 = "InputEnable";
    _DAT_105b9e50 = "Enable";
    _DAT_105b9e80 = "InputDisable";
    _DAT_105b9e8c = "Disable";
    _DAT_105b9f78 = "m_flInMin";
    _DAT_105b9f84 = "inmin";
    _DAT_105b9fb4 = "m_flInMax";
    _DAT_105b9fc0 = "inmax";
    _DAT_105b9ff0 = "m_OutColor1";
    _DAT_105b9ffc = "colormin";
    _DAT_105ba02c = "m_OutColor2";
    _DAT_105ba038 = "colormax";
    _DAT_105ba4a8 = FUN_1001f850(&DAT_1064c3f0,(undefined4 *)"Register");
    _DAT_105ba4e4 = "m_OnTrigger";
    _DAT_105ba4f0 = "OnTrigger";
    _DAT_105ba9dc = "m_OnHitMin";
    _DAT_105ba9e8 = "OnHitMin";
    _DAT_105baa18 = "m_OnHitMax";
    _DAT_105baa24 = "OnHitMax";
    _DAT_105baa54 = "m_OnChangedFromMin";
    _DAT_105baa60 = "OnChangedFromMin";
    _DAT_105baa90 = "m_OnChangedFromMax";
    _DAT_105baa9c = "OnChangedFromMax";
    _DAT_105baacc = "m_OnGetValue";
    _DAT_105baad8 = "OnGetValue";
    _DAT_105bb0ac = "m_OnCase[1]";
    _DAT_105bb0b8 = "OnCase02";
    _DAT_105bb0e8 = "m_OnCase[2]";
    _DAT_105bb0f4 = "OnCase03";
    _DAT_105bb124 = "m_OnCase[3]";
    _DAT_105bb130 = "OnCase04";
    _DAT_105bb160 = "m_OnCase[4]";
    _DAT_105bb16c = "OnCase05";
    _DAT_105bb19c = "m_OnCase[5]";
    _DAT_105bb1a8 = "OnCase06";
    _DAT_105bb1d8 = "m_OnCase[6]";
    _DAT_105bb1e4 = "OnCase07";
    _DAT_105bb214 = "m_OnCase[7]";
    _DAT_105bb220 = "OnCase08";
    _DAT_105bb250 = "m_OnCase[8]";
    _DAT_105bb25c = "OnCase09";
    _DAT_105bb28c = "m_OnCase[9]";
    _DAT_105bb298 = "OnCase10";
    _DAT_105bb2c8 = "m_OnCase[10]";
    _DAT_105bb2d4 = "OnCase11";
    _DAT_105bb304 = "m_OnCase[11]";
    _DAT_105bb310 = "OnCase12";
    _DAT_105bb340 = "m_OnCase[12]";
    _DAT_105bb34c = "OnCase13";
    _DAT_105bb37c = "m_OnCase[13]";
    _DAT_105bb388 = "OnCase14";
    _DAT_105bb3b8 = "m_OnCase[14]";
    _DAT_105bb3c4 = "OnCase15";
    _DAT_105bb3f4 = "m_OnCase[15]";
    _DAT_105bb400 = "OnCase16";
    _DAT_105bb430 = "m_OnDefault";
    _DAT_105bb43c = "OnDefault";
    _DAT_105bb654 = "m_OnNotEqualTo";
    _DAT_105bb660 = "OnNotEqualTo";
    _DAT_105bb690 = "m_OnGreaterThan";
    _DAT_105bb69c = "OnGreaterThan";
    _DAT_105bb6cc = "m_OnLessThan";
    _DAT_105bb6d8 = "OnLessThan";
    _DAT_105bb7c0 = "InputSetValue";
    _DAT_105bb7cc = "SetValue";
    _DAT_105bb7fc = "InputSetValueTest";
    _DAT_105bb808 = "SetValueTest";
    _DAT_105bb838 = "InputToggle";
    _DAT_105bb844 = "Toggle";
    _DAT_105bb874 = "InputToggleTest";
    _DAT_105bb880 = "ToggleTest";
    _DAT_105bb8b0 = "InputTest";
    _DAT_105bb8ec = "m_OnTrue";
    _DAT_105bb8f8 = "OnTrue";
    _DAT_105bb928 = "m_OnFalse";
    _DAT_105bb934 = "OnFalse";
    _DAT_105bbc40 = FUN_1001f850(&DAT_1064c4b0,(undefined4 *)"SaveThink");
    _DAT_105bbc7c = "InputEnable";
    _DAT_105bbc88 = "Enable";
    _DAT_105bbcb8 = "InputDisable";
    _DAT_105bbcc4 = "Disable";
    _DAT_105bc2dc = "m_eLastState";
    _DAT_105bc318 = "InputTest";
    _DAT_105bc354 = "Input_OnLogicBranchChanged";
    _DAT_105bc360 = "_OnLogicBranchChanged";
    _DAT_105bc390 = "Input_OnLogicBranchRemoved";
    _DAT_105bc39c = "_OnLogicBranchRemoved";
    _DAT_105bc3cc = "m_OnAllTrue";
    _DAT_105bc3d8 = "OnAllTrue";
    _DAT_105bc408 = "m_OnAllFalse";
    _DAT_105bc414 = "OnAllFalse";
    _DAT_105bc444 = "m_OnMixed";
    _DAT_105bc450 = "OnMixed";
    _DAT_105bc6f4 = "m_OnSpawn";
    _DAT_105bc700 = "OnSpawn";
    _DAT_105bcf00 = "m_OnPlayerOutZone";
    _DAT_105bcf0c = "OnPlayerOutZone";
    _DAT_105bcf3c = "m_PlayersInCount";
    _DAT_105bcf48 = "PlayersInCount";
    _DAT_105bcf78 = "m_PlayersOutCount";
    _DAT_105bcf84 = "PlayersOutCount";
    _DAT_105bda5c = "m_OnEndTouch";
    _DAT_105bda68 = "OnEndTouch";
    _DAT_105bda98 = "m_OnUse";
    _DAT_105bdaa4 = "OnUse";
    _DAT_105bdad4 = "InputDisable";
    _DAT_105bdae0 = "Disable";
    _DAT_105bdb10 = "InputEnable";
    _DAT_105bdb1c = "Enable";
    _DAT_105bf6c8 = FUN_1001f850(&DAT_1064e5dc,(undefined4 *)"StartParticleSystemThink");
    _DAT_105bff0c = "m_nameAttach";
    _DAT_105bff18 = "attach1";
    _DAT_105bff48 = "m_force";
    _DAT_105bff54 = "force";
    _DAT_105bff84 = "m_forceTime";
    _DAT_105bff90 = "forcetime";
    _DAT_105bffc0 = "m_attachedObject";
    _DAT_105bfffc = "m_integrator";
    _DAT_105c0038 = "InputActivate";
    _DAT_105c0044 = "Activate";
    _DAT_105c0074 = "InputDeactivate";
    _DAT_105c0080 = "Deactivate";
    _DAT_105c00b0 = "InputForceScale";
    _DAT_105c00bc = "scale";
    _DAT_105c00ec = FUN_1001f850(&DAT_1064e698,(undefined4 *)"ForceOff");
    _DAT_105c0624 = "m_pController";
    _DAT_105c0660 = "InputSetTargetSpeed";
    _DAT_105c066c = "SetSpeed";
    _DAT_105c069c = "InputTurnOn";
    _DAT_105c06a8 = "TurnOn";
    _DAT_105c06d8 = "InputTurnOff";
    _DAT_105c06e4 = "TurnOff";
    _DAT_105c0714 = "m_motor";
    _DAT_105c084c = "m_nameAttach";
    _DAT_105c0858 = "attach1";
    _DAT_105c0888 = "m_attachedObject";
    _DAT_105c08c4 = "m_angularLimit";
    _DAT_105c08d0 = "angularlimit";
    _DAT_105c0900 = "m_bActive";
    _DAT_105c093c = "m_bDampAllRotation";
    _DAT_105c0978 = "InputTurnOn";
    _DAT_105c0984 = "TurnOn";
    _DAT_105c09b4 = "InputTurnOff";
    _DAT_105c09c0 = "TurnOff";
    _DAT_105c09f0 = "InputSetAngularLimit";
    _DAT_105c09fc = "SetAngularLimit";
    _DAT_105c0bec = "m_additionalIterations";
    _DAT_105c0bf8 = "additionaliterations";
    _DAT_105c0ca4 = "m_nameSystem";
    _DAT_105c0cb0 = "constraintsystem";
    _DAT_105c0ce0 = "m_nameAttach1";
    _DAT_105c0cec = "attach1";
    _DAT_105c0d1c = "m_nameAttach2";
    _DAT_105c0d28 = "attach2";
    _DAT_105c0d58 = "m_breakSound";
    _DAT_105c0d64 = "breaksound";
    _DAT_105c0d94 = "m_forceLimit";
    _DAT_105c0da0 = "forcelimit";
    _DAT_105c0dd0 = "m_torqueLimit";
    _DAT_105c0ddc = "torquelimit";
    _DAT_105c0e0c = "m_minTeleportDistance";
    _DAT_105c0e18 = "teleportfollowdistance";
    _DAT_105c0e48 = "m_OnBreak";
    _DAT_105c0e54 = "OnBreak";
    _DAT_105c0e84 = "InputBreak";
    _DAT_105c0e90 = "Break";
    _DAT_105c0ec0 = "InputOnBreak";
    _DAT_105c0ecc = "ConstraintBroken";
    _DAT_105c0efc = "InputTurnOn";
    _DAT_105c0f08 = "TurnOn";
    _DAT_105c0f38 = "InputTurnOff";
    _DAT_105c0f44 = "TurnOff";
    _DAT_105c1be4 = "m_OnAwakened";
    _DAT_105c1bf0 = "OnAwakened";
    _DAT_105c1c20 = "m_thrustOrigin";
    _DAT_105c1c5c = "m_thruster";
    _DAT_105c1c98 = "m_pController";
    _DAT_105c1cd4 = "m_pJet";
    _DAT_105c1d10 = "m_active";
    _DAT_105c1d4c = "m_thrustTime";
    _DAT_105c1d88 = "m_damage";
    _DAT_105c1d94 = "expdamage";
    _DAT_105c1dc4 = "m_damageRadius";
    _DAT_105c1dd0 = "expradius";
    _DAT_105c1e00 = "m_activateTime";
    _DAT_105c1e3c = "m_gasSound";
    _DAT_105c1e48 = "gassound";
    _DAT_105c1e78 = "m_bFired";
    _DAT_105c1eb4 = "m_hPhysicsAttacker";
    _DAT_105c1ef0 = "m_flLastPhysicsInfluenceTime";
    _DAT_105c1f2c = "m_hLauncher";
    _DAT_105c1f68 = "InputActivate";
    _DAT_105c1f74 = "Activate";
    _DAT_105c1fa4 = "InputDeactivate";
    _DAT_105c1fb0 = "Deactivate";
    _DAT_105c1fe0 = "InputExplode";
    _DAT_105c1fec = "Explode";
    _DAT_105c201c = "InputWake";
    _DAT_105c2058 = FUN_1001f850(&DAT_1064f0f4,(undefined4 *)"BeginShutdownThink");
    _DAT_105c2094 = FUN_1001f850(&DAT_1064f0f4,(undefined4 *)"ExplodeTouch");
    _DAT_105c2d8c = FUN_1001f850(&DAT_1064fac0,(undefined4 *)"SetDebrisThink");
    _DAT_105c2dc8 = FUN_1001f850(&DAT_1064fac0,(undefined4 *)"ClearFlagsThink");
    _DAT_105c2e04 = FUN_1001f850(&DAT_1064fac0,(undefined4 *)"FadeOutThink");
    _DAT_105c2e40 = "m_ragdoll.listCount";
    _DAT_105c2e7c = "m_ragdoll.allowStretch";
    _DAT_105c2eb8 = "m_ragdoll.pGroup";
    _DAT_105c2ef4 = "m_flDefaultFadeScale";
    _DAT_105c2f30 = "m_ragdoll.list[1].originParentSpace";
    _DAT_105c2f6c = "m_ragdoll.list[1].pObject";
    _DAT_105c2fa8 = "m_ragdoll.list[1].pConstraint";
    _DAT_105c2fe4 = "m_ragdoll.list[1].parentIndex";
    _DAT_105c3020 = "m_ragdoll.list[2].originParentSpace";
    _DAT_105c305c = "m_ragdoll.list[2].pObject";
    _DAT_105c3098 = "m_ragdoll.list[2].pConstraint";
    _DAT_105c30d4 = "m_ragdoll.list[2].parentIndex";
    _DAT_105c3110 = "m_ragdoll.list[3].originParentSpace";
    _DAT_105c314c = "m_ragdoll.list[3].pObject";
    _DAT_105c3188 = "m_ragdoll.list[3].pConstraint";
    _DAT_105c31c4 = "m_ragdoll.list[3].parentIndex";
    _DAT_105c3200 = "m_ragdoll.list[4].originParentSpace";
    _DAT_105c323c = "m_ragdoll.list[4].pObject";
    _DAT_105c3278 = "m_ragdoll.list[4].pConstraint";
    _DAT_105c32b4 = "m_ragdoll.list[4].parentIndex";
    _DAT_105c32f0 = "m_ragdoll.list[5].originParentSpace";
    _DAT_105c332c = "m_ragdoll.list[5].pObject";
    _DAT_105c3368 = "m_ragdoll.list[5].pConstraint";
    _DAT_105c33a4 = "m_ragdoll.list[5].parentIndex";
    _DAT_105c33e0 = "m_ragdoll.list[6].originParentSpace";
    _DAT_105c341c = "m_ragdoll.list[6].pObject";
    _DAT_105c3458 = "m_ragdoll.list[6].pConstraint";
    _DAT_105c3494 = "m_ragdoll.list[6].parentIndex";
    _DAT_105c34d0 = "m_ragdoll.list[7].originParentSpace";
    _DAT_105c350c = "m_ragdoll.list[7].pObject";
    _DAT_105c3548 = "m_ragdoll.list[7].pConstraint";
    _DAT_105c3584 = "m_ragdoll.list[7].parentIndex";
    _DAT_105c35c0 = "m_ragdoll.list[8].originParentSpace";
    _DAT_105c35fc = "m_ragdoll.list[8].pObject";
    _DAT_105c3638 = "m_ragdoll.list[8].pConstraint";
    _DAT_105c3674 = "m_ragdoll.list[8].parentIndex";
    _DAT_105c36b0 = "m_ragdoll.list[9].originParentSpace";
    _DAT_105c36ec = "m_ragdoll.list[9].pObject";
    _DAT_105c3728 = "m_ragdoll.list[9].pConstraint";
    _DAT_105c3764 = "m_ragdoll.list[9].parentIndex";
    _DAT_105c37a0 = "m_ragdoll.list[10].originParentSpace";
    _DAT_105c37dc = "m_ragdoll.list[10].pObject";
    _DAT_105c3818 = "m_ragdoll.list[10].pConstraint";
    _DAT_105c3854 = "m_ragdoll.list[10].parentIndex";
    _DAT_105c3890 = "m_ragdoll.list[11].originParentSpace";
    _DAT_105c38cc = "m_ragdoll.list[11].pObject";
    _DAT_105c3908 = "m_ragdoll.list[11].pConstraint";
    _DAT_105c3944 = "m_ragdoll.list[11].parentIndex";
    _DAT_105c3980 = "m_ragdoll.list[12].originParentSpace";
    _DAT_105c39bc = "m_ragdoll.list[12].pObject";
    _DAT_105c39f8 = "m_ragdoll.list[12].pConstraint";
    _DAT_105c3a34 = "m_ragdoll.list[12].parentIndex";
    _DAT_105c3a70 = "m_ragdoll.list[13].originParentSpace";
    _DAT_105c3aac = "m_ragdoll.list[13].pObject";
    _DAT_105c3ae8 = "m_ragdoll.list[13].pConstraint";
    _DAT_105c3b24 = "m_ragdoll.list[13].parentIndex";
    _DAT_105c3b60 = "m_ragdoll.list[14].originParentSpace";
    _DAT_105c3b9c = "m_ragdoll.list[14].pObject";
    _DAT_105c3bd8 = "m_ragdoll.list[14].pConstraint";
    _DAT_105c3c14 = "m_ragdoll.list[14].parentIndex";
    _DAT_105c3c50 = "m_ragdoll.list[15].originParentSpace";
    _DAT_105c3c8c = "m_ragdoll.list[15].pObject";
    _DAT_105c3cc8 = "m_ragdoll.list[15].pConstraint";
    _DAT_105c3d04 = "m_ragdoll.list[15].parentIndex";
    _DAT_105c3d40 = "m_ragdoll.list[16].originParentSpace";
    _DAT_105c3d7c = "m_ragdoll.list[16].pObject";
    _DAT_105c3db8 = "m_ragdoll.list[16].pConstraint";
    _DAT_105c3df4 = "m_ragdoll.list[16].parentIndex";
    _DAT_105c3e30 = "m_ragdoll.list[17].originParentSpace";
    _DAT_105c3e6c = "m_ragdoll.list[17].pObject";
    _DAT_105c3ea8 = "m_ragdoll.list[17].pConstraint";
    _DAT_105c3ee4 = "m_ragdoll.list[17].parentIndex";
    _DAT_105c3f20 = "m_ragdoll.list[18].originParentSpace";
    _DAT_105c3f5c = "m_ragdoll.list[18].pObject";
    _DAT_105c3f98 = "m_ragdoll.list[18].pConstraint";
    _DAT_105c3fd4 = "m_ragdoll.list[18].parentIndex";
    _DAT_105c4010 = "m_ragdoll.list[19].originParentSpace";
    _DAT_105c404c = "m_ragdoll.list[19].pObject";
    _DAT_105c4088 = "m_ragdoll.list[19].pConstraint";
    _DAT_105c40c4 = "m_ragdoll.list[19].parentIndex";
    _DAT_105c4100 = "m_ragdoll.list[20].originParentSpace";
    _DAT_105c413c = "m_ragdoll.list[20].pObject";
    _DAT_105c4178 = "m_ragdoll.list[20].pConstraint";
    _DAT_105c41b4 = "m_ragdoll.list[20].parentIndex";
    _DAT_105c41f0 = "m_ragdoll.list[21].originParentSpace";
    _DAT_105c422c = "m_ragdoll.list[21].pObject";
    _DAT_105c4268 = "m_ragdoll.list[21].pConstraint";
    _DAT_105c42a4 = "m_ragdoll.list[21].parentIndex";
    _DAT_105c42e0 = "m_ragdoll.list[22].originParentSpace";
    _DAT_105c431c = "m_ragdoll.list[22].pObject";
    _DAT_105c4358 = "m_ragdoll.list[22].pConstraint";
    _DAT_105c4394 = "m_ragdoll.list[22].parentIndex";
    _DAT_105c43d0 = "m_ragdoll.list[23].originParentSpace";
    _DAT_105c440c = "m_ragdoll.list[23].pObject";
    _DAT_105c4448 = "m_ragdoll.list[23].pConstraint";
    _DAT_105c4484 = "m_ragdoll.list[23].parentIndex";
    _DAT_105c44c0 = "m_ragdoll.list[24].originParentSpace";
    _DAT_105c44fc = "m_ragdoll.list[24].pObject";
    _DAT_105c4538 = "m_ragdoll.list[24].pConstraint";
    _DAT_105c4574 = "m_ragdoll.list[24].parentIndex";
    _DAT_105c45b0 = "m_ragdoll.list[25].originParentSpace";
    _DAT_105c45ec = "m_ragdoll.list[25].pObject";
    _DAT_105c4628 = "m_ragdoll.list[25].pConstraint";
    _DAT_105c4664 = "m_ragdoll.list[25].parentIndex";
    _DAT_105c46a0 = "m_ragdoll.list[26].originParentSpace";
    _DAT_105c46dc = "m_ragdoll.list[26].pObject";
    _DAT_105c4718 = "m_ragdoll.list[26].pConstraint";
    _DAT_105c4754 = "m_ragdoll.list[26].parentIndex";
    _DAT_105c4790 = "m_ragdoll.list[27].originParentSpace";
    _DAT_105c47cc = "m_ragdoll.list[27].pObject";
    _DAT_105c4808 = "m_ragdoll.list[27].pConstraint";
    _DAT_105c4844 = "m_ragdoll.list[27].parentIndex";
    _DAT_105c4880 = "m_ragdoll.list[28].originParentSpace";
    _DAT_105c48bc = "m_ragdoll.list[28].pObject";
    _DAT_105c48f8 = "m_ragdoll.list[28].pConstraint";
    _DAT_105c4934 = "m_ragdoll.list[28].parentIndex";
    _DAT_105c4970 = "m_ragdoll.list[29].originParentSpace";
    _DAT_105c49ac = "m_ragdoll.list[29].pObject";
    _DAT_105c49e8 = "m_ragdoll.list[29].pConstraint";
    _DAT_105c4a24 = "m_ragdoll.list[29].parentIndex";
    _DAT_105c4a60 = "m_ragdoll.list[30].originParentSpace";
    _DAT_105c4a9c = "m_ragdoll.list[30].pObject";
    _DAT_105c4ad8 = "m_ragdoll.list[30].pConstraint";
    _DAT_105c4b14 = "m_ragdoll.list[30].parentIndex";
    _DAT_105c4b50 = "m_ragdoll.list[31].originParentSpace";
    _DAT_105c4b8c = "m_ragdoll.list[31].pObject";
    _DAT_105c4bc8 = "m_ragdoll.list[31].pConstraint";
    _DAT_105c4c04 = "m_ragdoll.list[31].parentIndex";
    _DAT_105c4f7c = FUN_1001f850(&DAT_1064ff80,(undefined4 *)"CollisionPartnerThink");
    _DAT_105c544c = "m_tempConstant";
    _DAT_105c5458 = "constant";
    _DAT_105c5488 = "m_tempLength";
    _DAT_105c5494 = "length";
    _DAT_105c54c4 = "m_tempDamping";
    _DAT_105c54d0 = "damping";
    _DAT_105c5500 = "m_tempRelativeDamping";
    _DAT_105c550c = "relativedamping";
    _DAT_105c553c = "m_nameAttachStart";
    _DAT_105c5548 = "attach1";
    _DAT_105c5578 = "m_nameAttachEnd";
    _DAT_105c5584 = "attach2";
    _DAT_105c55b4 = "m_start";
    _DAT_105c55f0 = "m_end";
    _DAT_105c55fc = "springaxis";
    _DAT_105c562c = "m_isLocal";
    _DAT_105c5668 = "InputSetSpringConstant";
    _DAT_105c5674 = "SetSpringConstant";
    _DAT_105c56a4 = "InputSetSpringLength";
    _DAT_105c56b0 = "SetSpringLength";
    _DAT_105c56e0 = "InputSetSpringDamping";
    _DAT_105c56ec = "SetSpringDamping";
    _DAT_105c5b98 = FUN_1001f850(&DAT_106502ac,(undefined4 *)"BreakTouch");
    _DAT_105c5bd4 = "m_OnDamaged";
    _DAT_105c5be0 = "OnDamaged";
    _DAT_105c5c10 = "m_OnAwakened";
    _DAT_105c5c1c = "OnAwakened";
    _DAT_105c5c4c = "m_OnMotionEnabled";
    _DAT_105c5c58 = "OnMotionEnabled";
    _DAT_105c5c88 = "m_OnPhysGunPickup";
    _DAT_105c5c94 = "OnPhysGunPickup";
    _DAT_105c5cc4 = "m_OnPhysGunPunt";
    _DAT_105c5cd0 = "OnPhysGunPunt";
    _DAT_105c5d00 = "m_OnPhysGunOnlyPickup";
    _DAT_105c5d0c = "OnPhysGunOnlyPickup";
    _DAT_105c5d3c = "m_OnPhysGunDrop";
    _DAT_105c5d48 = "OnPhysGunDrop";
    _DAT_105c5d78 = "m_OnPlayerUse";
    _DAT_105c5d84 = "OnPlayerUse";
    _DAT_105c6094 = FUN_1001f850(&DAT_106502ec,(undefined4 *)"PointAtEntity");
    _DAT_105c60d0 = "InputImpact";
    _DAT_105c60dc = "Impact";
    _DAT_105c62c4 = "hEntity";
    _DAT_105c637c = "m_OnMagnetDetach";
    _DAT_105c6388 = "OnDetach";
    _DAT_105c63b8 = "m_massScale";
    _DAT_105c63c4 = "massScale";
    _DAT_105c63f4 = "m_iszOverrideScript";
    _DAT_105c6400 = "overridescript";
    _DAT_105c6430 = "m_iMaxObjectsAttached";
    _DAT_105c643c = "maxobjects";
    _DAT_105c646c = "m_forceLimit";
    _DAT_105c6478 = "forcelimit";
    _DAT_105c64a8 = "m_torqueLimit";
    _DAT_105c64b4 = "torquelimit";
    _DAT_105c64e4 = "m_MagnettedEntities";
    _DAT_105c6520 = "m_pConstraintGroup";
    _DAT_105c655c = "m_bActive";
    _DAT_105c6598 = "m_bHasHitSomething";
    _DAT_105c65d4 = "m_flTotalMass";
    _DAT_105c6610 = "m_flRadius";
    _DAT_105c664c = "m_flNextSuckTime";
    _DAT_105c6688 = "InputToggle";
    _DAT_105c6694 = "Toggle";
    _DAT_105c66c4 = "InputTurnOn";
    _DAT_105c66d0 = "TurnOn";
    _DAT_105c6700 = "InputTurnOff";
    _DAT_105c670c = "TurnOff";
    _DAT_105c696c = "m_StuckLast";
    _DAT_105c69a8 = "m_nButtons";
    _DAT_105c69e4 = "m_afButtonLast";
    _DAT_105c6a20 = "m_afButtonPressed";
    _DAT_105c6a5c = "m_afButtonReleased";
    _DAT_105c6a98 = "m_afButtonDisabled";
    _DAT_105c6ad4 = "m_afButtonForced";
    _DAT_105c6b10 = "m_iFOV";
    _DAT_105c6b4c = "m_iFOVStart";
    _DAT_105c6b88 = "m_flFOVTime";
    _DAT_105c6bc4 = "m_iDefaultFOV";
    _DAT_105c6c00 = "m_flVehicleViewFOV";
    _DAT_105c6c3c = "m_iObserverMode";
    _DAT_105c6c78 = "m_iObserverLastMode";
    _DAT_105c6cb4 = "m_hObserverTarget";
    _DAT_105c6cf0 = "m_bForcedObserverMode";
    _DAT_105c6d2c = "m_szAnimExtension";
    _DAT_105c6d68 = "m_nUpdateRate";
    _DAT_105c6da4 = "m_fLerpTime";
    _DAT_105c6de0 = "m_bLagCompensation";
    _DAT_105c6e1c = "m_bPredictWeapons";
    _DAT_105c6e58 = "m_vecAdditionalPVSOrigin";
    _DAT_105c6e94 = "m_vecCameraPVSOrigin";
    _DAT_105c6ed0 = "m_bDropEnabled";
    _DAT_105c6f0c = "m_bDuckEnabled";
    _DAT_105c6f48 = "m_hUseEntity";
    _DAT_105c6f84 = "m_iTrain";
    _DAT_105c6fc0 = "m_iRespawnFrames";
    _DAT_105c6ffc = "m_afPhysicsFlags";
    _DAT_105c7038 = "m_szNetworkIDString";
    _DAT_105c7074 = "m_oldOrigin";
    _DAT_105c70b0 = "m_vecSmoothedVelocity";
    _DAT_105c70ec = "m_iTargetVolume";
    _DAT_105c7128 = "m_rgItems";
    _DAT_105c7164 = "m_flSuitUpdate";
    _DAT_105c71a0 = "m_rgSuitPlayList";
    _DAT_105c71dc = "m_iSuitPlayNext";
    _DAT_105c7218 = "m_rgiSuitNoRepeat";
    _DAT_105c7254 = "m_rgflSuitNoRepeatTime";
    _DAT_105c7290 = "m_bPauseBonusProgress";
    _DAT_105c72cc = "m_iBonusProgress";
    _DAT_105c7308 = "m_iBonusChallenge";
    _DAT_105c7344 = "m_lastDamageAmount";
    _DAT_105c7380 = "m_fTimeLastHurt";
    _DAT_105c73bc = "m_tbdPrev";
    _DAT_105c73f8 = "m_flStepSoundTime";
    _DAT_105c7434 = "m_szNetname";
    _DAT_105c7470 = "m_idrowndmg";
    _DAT_105c74ac = "m_idrownrestored";
    _DAT_105c74e8 = "m_nPoisonDmg";
    _DAT_105c7524 = "m_nPoisonRestored";
    _DAT_105c7560 = "m_bitsHUDDamage";
    _DAT_105c759c = "m_fInitHUD";
    _DAT_105c75d8 = "m_flDeathTime";
    _DAT_105c7614 = "m_flDeathAnimTime";
    _DAT_105c7650 = "m_iFrags";
    _DAT_105c768c = "m_iDeaths";
    _DAT_105c76c8 = "m_bAllowInstantSpawn";
    _DAT_105c7704 = "m_flNextDecalTime";
    _DAT_105c7740 = "m_ArmorValue";
    _DAT_105c777c = "m_DmgOrigin";
    _DAT_105c77b8 = "m_DmgTake";
    _DAT_105c77f4 = "m_DmgSave";
    _DAT_105c7830 = "m_AirFinished";
    _DAT_105c786c = "m_PainFinished";
    _DAT_105c78a8 = "m_iPlayerLocked";
    _DAT_105c78e4 = "m_hViewModel";
    _DAT_105c7920 = "m_flMaxspeed";
    _DAT_105c795c = "m_flWaterJumpTime";
    _DAT_105c7998 = "m_vecWaterJumpVel";
    _DAT_105c79d4 = "m_nImpulse";
    _DAT_105c7a10 = "m_flSwimSoundTime";
    _DAT_105c7a4c = "m_vecLadderNormal";
    _DAT_105c7a88 = "m_flFlashTime";
    _DAT_105c7ac4 = "m_nDrownDmgRate";
    _DAT_105c7b00 = "m_iSuicideCustomKillFlags";
    _DAT_105c7b3c = "m_bitsDamageType";
    _DAT_105c7b78 = "m_rgbTimeBasedDamage";
    _DAT_105c7bb4 = "m_fLastPlayerTalkTime";
    _DAT_105c7bf0 = "m_hLastWeapon";
    _DAT_105c7c2c = "m_flOldPlayerZ";
    _DAT_105c7c68 = "m_flOldPlayerViewOffsetZ";
    _DAT_105c7ca4 = "m_bPlayerUnderwater";
    _DAT_105c7ce0 = "m_hViewEntity";
    _DAT_105c7d1c = "m_bShouldDrawPlayerWhileUsingViewEntity";
    _DAT_105c7d58 = "m_hConstraintEntity";
    _DAT_105c7d94 = "m_vecConstraintCenter";
    _DAT_105c7dd0 = "m_flConstraintRadius";
    _DAT_105c7e0c = "m_flConstraintWidth";
    _DAT_105c7e48 = "m_flConstraintSpeedFactor";
    _DAT_105c7e84 = "m_bConstraintPastRadius";
    _DAT_105c7ec0 = "m_flLaggedMovementValue";
    _DAT_105c7efc = "m_vNewVPhysicsPosition";
    _DAT_105c7f38 = "m_vNewVPhysicsVelocity";
    _DAT_105c7f74 = "m_bSinglePlayerGameEnding";
    _DAT_105c7fb0 = "m_szLastPlaceName";
    _DAT_105c7fec = "m_autoKickDisabled";
    _DAT_105c8028 = FUN_1001f850(&DAT_10650bd0,(undefined4 *)"PlayerDeathThink");
    _DAT_105c8064 = "InputSetHealth";
    _DAT_105c8070 = "SetHealth";
    _DAT_105c80a0 = "InputSetHUDVisibility";
    _DAT_105c80ac = "SetHUDVisibility";
    _DAT_105c80dc = "InputSetFogController";
    _DAT_105c80e8 = "SetFogController";
    _DAT_105c8118 = "m_nNumCrouches";
    _DAT_105c8154 = "m_bDuckToggled";
    _DAT_105c8190 = "m_flForwardMove";
    _DAT_105c81cc = "m_flSideMove";
    _DAT_105c8208 = "m_vecPreviouslyPredictedOrigin";
    _DAT_105c8244 = "m_nNumCrateHudHints";
    _DAT_105c8280 = "m_hPostProcessCtrl";
    _DAT_105c82bc = "m_hColorCorrectionCtrl";
    _DAT_105c82f8 = "m_PlayerFog";
    _DAT_105c8530 = FUN_1001f850(&DAT_10650c14,(undefined4 *)"LoadThink");
    _DAT_105c9888 = FUN_1001f850(&DAT_106521b8,(undefined4 *)"ChangeFOVThink");
    _DAT_105c98c4 = "InputChangeFOV";
    _DAT_105c98d0 = "ChangeFOV";
    _DAT_105c9900 = "InputSetOnAndTurnOthersOff";
    _DAT_105c990c = "SetOnAndTurnOthersOff";
    _DAT_105c993c = "InputSetOn";
    _DAT_105c9948 = "SetOn";
    _DAT_105c9978 = "InputSetOff";
    _DAT_105c9984 = "SetOff";
    _DAT_105c99b4 = "InputForceActive";
    _DAT_105c99c0 = "Activate";
    _DAT_105c99f0 = "InputForceInactive";
    _DAT_105c99fc = "Deactivate";
    _DAT_105c9c10 = "InputFindEntity";
    _DAT_105c9c1c = "FindEntity";
    _DAT_105c9d98 = FUN_1001f850(&DAT_10652740,(undefined4 *)"ConstraintThink");
    _DAT_105c9dd4 = "InputTurnOn";
    _DAT_105c9de0 = "TurnOn";
    _DAT_105c9e10 = "InputTurnOff";
    _DAT_105c9e1c = "TurnOff";
    _DAT_105c9e4c = "m_OnConstraintBroken";
    _DAT_105c9e58 = "OnConstraintBroken";
    _DAT_105ca264 = "m_OnOff";
    _DAT_105ca270 = "OnLightOff";
    _DAT_105ca2a0 = FUN_1001f850(&DAT_10652764,(undefined4 *)"SpotlightThink");
    _DAT_105ca804 = "m_hTemplates";
    _DAT_105ca840 = "InputForceSpawn";
    _DAT_105ca84c = "ForceSpawn";
    _DAT_105ca87c = "m_pOutputOnSpawned";
    _DAT_105ca888 = "OnEntitySpawned";
    _DAT_105cab44 = "m_OnNotFacingLookat";
    _DAT_105cab50 = "OnNotFacingLookat";
    _DAT_105cab80 = "m_TargetDir";
    _DAT_105cab8c = "TargetDir";
    _DAT_105cabbc = "m_FacingPercentage";
    _DAT_105cabc8 = "FacingPercentage";
    _DAT_105cabf8 = "InputEnable";
    _DAT_105cac04 = "Enable";
    _DAT_105cac34 = "InputDisable";
    _DAT_105cac40 = "Disable";
    _DAT_105cac70 = "InputToggle";
    _DAT_105cac7c = "Toggle";
    _DAT_105cacac = "InputTest";
    _DAT_105cace8 = "InputSetTargetEntity";
    _DAT_105cacf4 = "SetTargetEntity";
    _DAT_105cae1c = "InputEnable";
    _DAT_105cae28 = "Enable";
    _DAT_105cae58 = "InputDisable";
    _DAT_105cae64 = "Disable";
    _DAT_105cae94 = "InputToggle";
    _DAT_105caea0 = "Toggle";
    _DAT_105caed0 = "InputSetTargetEntity";
    _DAT_105caedc = "SetTargetEntity";
    _DAT_105cb214 = "m_OnLessThanOrEqualTo";
    _DAT_105cb220 = "OnLessThanOrEqualTo";
    _DAT_105cb250 = "m_OnGreaterThan";
    _DAT_105cb25c = "OnGreaterThan";
    _DAT_105cb28c = "m_OnGreaterThanOrEqualTo";
    _DAT_105cb298 = "OnGreaterThanOrEqualTo";
    _DAT_105cb2c8 = "m_OnEqualTo";
    _DAT_105cb2d4 = "OnEqualTo";
    _DAT_105cb304 = "m_AngularVelocity";
    _DAT_105cb310 = "AngularVelocity";
    _DAT_105cb340 = "m_vecAxis";
    _DAT_105cb37c = "m_bUseHelper";
    _DAT_105cb388 = "usehelper";
    _DAT_105cb524 = "InputEnable";
    _DAT_105cb530 = "Enable";
    _DAT_105cb560 = "InputDisable";
    _DAT_105cb56c = "Disable";
    _DAT_105cb71c = FUN_1001f850(&DAT_106528ec,(undefined4 *)"HurtThink");
    _DAT_105cb758 = "InputTurnOn";
    _DAT_105cb764 = "TurnOn";
    _DAT_105cb794 = "InputTurnOff";
    _DAT_105cb7a0 = "TurnOff";
    _DAT_105cb7d0 = "InputToggle";
    _DAT_105cb7dc = "Toggle";
    _DAT_105cb80c = "InputHurt";
    _DAT_105cb848 = "m_pActivator";
    _DAT_105cba74 = "fadetime";
    _DAT_105cbaa4 = "m_flPostProcessParameters[ PPPN_VIGNETTE_START ]";
    _DAT_105cbab0 = "vignettestart";
    _DAT_105cbae0 = "m_flPostProcessParameters[ PPPN_VIGNETTE_END ]";
    _DAT_105cbaec = "vignetteend";
    _DAT_105cbb1c = "m_flPostProcessParameters[ PPPN_FADE_TO_BLACK_STRENGTH ]";
    _DAT_105cbb28 = "fadetoblackstrength";
    _DAT_105cbb58 = "InputSetFadeTime";
    _DAT_105cbb64 = "SetFadeTime";
    _DAT_105cbb94 = "InputSetVignetteStart";
    _DAT_105cbba0 = "SetVignetteStart";
    _DAT_105cbbd0 = "InputSetVignetteEnd";
    _DAT_105cbbdc = "SetVignetteEnd";
    _DAT_105cbc0c = "InputSetFadeToBlackStrength";
    _DAT_105cbc18 = "SetFadeToBlackStrength";
    _DAT_105ccf38 = "m_OnHealthChanged";
    _DAT_105ccf44 = "OnHealthChanged";
    _DAT_105ccf74 = "m_OnTakeDamage";
    _DAT_105ccf80 = "OnTakeDamage";
    _DAT_105ccfb0 = "m_OnPhysCannonDetach";
    _DAT_105ccfbc = "OnPhysCannonDetach";
    _DAT_105ccfec = "m_OnPhysCannonAnimatePreStarted";
    _DAT_105ccff8 = "OnPhysCannonAnimatePreStarted";
    _DAT_105cd028 = "m_OnPhysCannonAnimatePullStarted";
    _DAT_105cd034 = "OnPhysCannonAnimatePullStarted";
    _DAT_105cd064 = "m_OnPhysCannonAnimatePostStarted";
    _DAT_105cd070 = "OnPhysCannonAnimatePostStarted";
    _DAT_105cd0a0 = "m_OnPhysCannonPullAnimFinished";
    _DAT_105cd0ac = "OnPhysCannonPullAnimFinished";
    _DAT_105cd0dc = FUN_1001f850(&DAT_106532e0,(undefined4 *)"BreakThink");
    _DAT_105cd118 = FUN_1001f850(&DAT_106532e0,(undefined4 *)"AnimateThink");
    _DAT_105cd154 = FUN_1001f850(&DAT_106532e0,(undefined4 *)"RampToDefaultFadeScale");
    _DAT_105cd190 = FUN_1001f850(&DAT_106532e0,(undefined4 *)"BreakablePropTouch");
    _DAT_105cd1cc = "m_hPhysicsAttacker";
    _DAT_105cd208 = "m_flLastPhysicsInfluenceTime";
    _DAT_105cd244 = "m_bOriginalBlockLOS";
    _DAT_105cd280 = "m_bBlockLOSSetByPropData";
    _DAT_105cd2bc = "m_bIsWalkableSetByPropData";
    _DAT_105cd2f8 = "m_hLastAttacker";
    _DAT_105cd334 = "m_hFlareEnt";
    _DAT_105cdb38 = "m_pOutputAnimOver";
    _DAT_105cdb44 = "OnAnimationDone";
    _DAT_105cdb74 = FUN_1001f850(&DAT_10653300,(undefined4 *)"AnimThink");
    _DAT_105cdbb0 = "m_BoneFollowerManager";
    _DAT_105cdbec = "m_bRenderOnlyInCSM";
    _DAT_105cdbf8 = "RenderOnlyCSM";
    _DAT_105ce1e4 = "m_MotionEnabled";
    _DAT_105ce1f0 = "OnMotionEnabled";
    _DAT_105ce220 = "m_OnPhysGunPickup";
    _DAT_105ce22c = "OnPhysGunPickup";
    _DAT_105ce25c = "m_OnPhysGunOnlyPickup";
    _DAT_105ce268 = "OnPhysGunOnlyPickup";
    _DAT_105ce298 = "m_OnPhysGunPunt";
    _DAT_105ce2a4 = "OnPhysGunPunt";
    _DAT_105ce2d4 = "m_OnPhysGunDrop";
    _DAT_105ce2e0 = "OnPhysGunDrop";
    _DAT_105ce310 = "m_OnPlayerUse";
    _DAT_105ce31c = "OnPlayerUse";
    _DAT_105ce34c = "m_OnPlayerPickup";
    _DAT_105ce358 = "OnPlayerPickup";
    _DAT_105ce388 = "m_OnOutOfWorld";
    _DAT_105ce394 = "OnOutOfWorld";
    _DAT_105ce3c4 = "m_bThrownByPlayer";
    _DAT_105ce400 = "m_bFirstCollisionAfterLaunch";
    _DAT_105ce43c = "m_iExploitableByPlayer";
    _DAT_105ce448 = "ExploitableByPlayer";
    _DAT_105ce478 = FUN_1001f850(&DAT_10653494,(undefined4 *)"ClearFlagsThink");
    _DAT_105cecf4 = "m_OnBlockedClosing";
    _DAT_105ced00 = "OnBlockedClosing";
    _DAT_105ced30 = "m_OnUnblockedOpening";
    _DAT_105ced3c = "OnUnblockedOpening";
    _DAT_105ced6c = "m_OnUnblockedClosing";
    _DAT_105ced78 = "OnUnblockedClosing";
    _DAT_105ceda8 = "m_OnFullyClosed";
    _DAT_105cedb4 = "OnFullyClosed";
    _DAT_105cede4 = "m_OnFullyOpen";
    _DAT_105cedf0 = "OnFullyOpen";
    _DAT_105cee20 = "m_OnClose";
    _DAT_105cee2c = "OnClose";
    _DAT_105cee5c = "m_OnOpen";
    _DAT_105cee68 = "OnOpen";
    _DAT_105cee98 = "m_OnLockedUse";
    _DAT_105ceea4 = "OnLockedUse";
    _DAT_105cef10 = FUN_1001f850(&DAT_106537d8,(undefined4 *)"DoorOpenMoveDone");
    _DAT_105cef4c = FUN_1001f850(&DAT_106537d8,(undefined4 *)"DoorCloseMoveDone");
    _DAT_105cef88 = FUN_1001f850(&DAT_106537d8,(undefined4 *)"DoorAutoCloseThink");
    _DAT_105cefc4 = FUN_1001f850(&DAT_106537d8,(undefined4 *)"DisableAreaPortalThink");
    _DAT_105cf000 = FUN_1001f850(&DAT_106537d8,(undefined4 *)"DoorSolidityThink");
    _DAT_105cfb04 = FUN_1001f850(&DAT_10670804,(undefined4 *)"BoogieThink");
    _DAT_105cfb40 = FUN_1001f850(&DAT_10670804,(undefined4 *)"ZapThink");
    _DAT_105d0764 = "m_Scenes";
    _DAT_105d10d8 = "m_hRemoveActorList";
    _DAT_105d1114 = "m_nInterruptCount";
    _DAT_105d1150 = "m_bInterrupted";
    _DAT_105d118c = "m_hInterruptScene";
    _DAT_105d11c8 = "m_bCompletedEarly";
    _DAT_105d1204 = "m_bInterruptSceneFinished";
    _DAT_105d1240 = "m_bGenerated";
    _DAT_105d127c = "m_iszSoundName";
    _DAT_105d12b8 = "m_hActor";
    _DAT_105d12f4 = "m_hActivator";
    _DAT_105d1330 = "m_hNotifySceneCompletion";
    _DAT_105d136c = "m_hListManagers";
    _DAT_105d13a8 = "m_bMultiplayer";
    _DAT_105d13e4 = "InputStartPlayback";
    _DAT_105d13f0 = "Start";
    _DAT_105d1420 = "InputPausePlayback";
    _DAT_105d142c = "Pause";
    _DAT_105d145c = "InputResumePlayback";
    _DAT_105d1468 = "Resume";
    _DAT_105d1498 = "InputCancelPlayback";
    _DAT_105d14a4 = "Cancel";
    _DAT_105d14d4 = "InputCancelAtNextInterrupt";
    _DAT_105d14e0 = "CancelAtNextInterrupt";
    _DAT_105d1510 = "InputPitchShiftPlayback";
    _DAT_105d151c = "PitchShift";
    _DAT_105d154c = "InputInterjectResponse";
    _DAT_105d1558 = "InterjectResponse";
    _DAT_105d1588 = "InputStopWaitingForActor";
    _DAT_105d1594 = "StopWaitingForActor";
    _DAT_105d15c4 = "InputTriggerEvent";
    _DAT_105d15d0 = "Trigger";
    _DAT_105d1600 = "m_iPlayerDeathBehavior";
    _DAT_105d160c = "onplayerdeath";
    _DAT_105d163c = "InputScriptPlayerDeath";
    _DAT_105d1648 = "ScriptPlayerDeath";
    _DAT_105d1678 = "InputSetTarget1";
    _DAT_105d1684 = "SetTarget1";
    _DAT_105d16b4 = "InputSetTarget2";
    _DAT_105d16c0 = "SetTarget2";
    _DAT_105d16f0 = "InputSetTarget3";
    _DAT_105d16fc = "SetTarget3";
    _DAT_105d172c = "InputSetTarget4";
    _DAT_105d1738 = "SetTarget4";
    _DAT_105d1768 = "m_OnStart";
    _DAT_105d1774 = "OnStart";
    _DAT_105d17a4 = "m_OnCompletion";
    _DAT_105d17b0 = "OnCompletion";
    _DAT_105d17e0 = "m_OnCanceled";
    _DAT_105d17ec = "OnCanceled";
    _DAT_105d181c = "m_OnTrigger1";
    _DAT_105d1828 = "OnTrigger1";
    _DAT_105d1858 = "m_OnTrigger2";
    _DAT_105d1864 = "OnTrigger2";
    _DAT_105d1894 = "m_OnTrigger3";
    _DAT_105d18a0 = "OnTrigger3";
    _DAT_105d18d0 = "m_OnTrigger4";
    _DAT_105d18dc = "OnTrigger4";
    _DAT_105d190c = "m_OnTrigger5";
    _DAT_105d1918 = "OnTrigger5";
    _DAT_105d1948 = "m_OnTrigger6";
    _DAT_105d1954 = "OnTrigger6";
    _DAT_105d1984 = "m_OnTrigger7";
    _DAT_105d1990 = "OnTrigger7";
    _DAT_105d19c0 = "m_OnTrigger8";
    _DAT_105d19cc = "OnTrigger8";
    _DAT_105d19fc = "m_OnTrigger9";
    _DAT_105d1a08 = "OnTrigger9";
    _DAT_105d1a38 = "m_OnTrigger10";
    _DAT_105d1a44 = "OnTrigger10";
    _DAT_105d1a74 = "m_OnTrigger11";
    _DAT_105d1a80 = "OnTrigger11";
    _DAT_105d1ab0 = "m_OnTrigger12";
    _DAT_105d1abc = "OnTrigger12";
    _DAT_105d1aec = "m_OnTrigger13";
    _DAT_105d1af8 = "OnTrigger13";
    _DAT_105d1b28 = "m_OnTrigger14";
    _DAT_105d1b34 = "OnTrigger14";
    _DAT_105d1b64 = "m_OnTrigger15";
    _DAT_105d1b70 = "OnTrigger15";
    _DAT_105d1ba0 = "m_OnTrigger16";
    _DAT_105d1bac = "OnTrigger16";
    _DAT_105d1e0c = "m_iszScenes[0]";
    _DAT_105d1e18 = "scene0";
    _DAT_105d1e48 = "m_iszScenes[1]";
    _DAT_105d1e54 = "scene1";
    _DAT_105d1e84 = "m_iszScenes[2]";
    _DAT_105d1e90 = "scene2";
    _DAT_105d1ec0 = "m_iszScenes[3]";
    _DAT_105d1ecc = "scene3";
    _DAT_105d1efc = "m_iszScenes[4]";
    _DAT_105d1f08 = "scene4";
    _DAT_105d1f38 = "m_iszScenes[5]";
    _DAT_105d1f44 = "scene5";
    _DAT_105d1f74 = "m_iszScenes[6]";
    _DAT_105d1f80 = "scene6";
    _DAT_105d1fb0 = "m_iszScenes[7]";
    _DAT_105d1fbc = "scene7";
    _DAT_105d1fec = "m_iszScenes[8]";
    _DAT_105d1ff8 = "scene8";
    _DAT_105d2028 = "m_iszScenes[9]";
    _DAT_105d2034 = "scene9";
    _DAT_105d2064 = "m_iszScenes[10]";
    _DAT_105d2070 = "scene10";
    _DAT_105d20a0 = "m_iszScenes[11]";
    _DAT_105d20ac = "scene11";
    _DAT_105d20dc = "m_iszScenes[12]";
    _DAT_105d20e8 = "scene12";
    _DAT_105d2118 = "m_iszScenes[13]";
    _DAT_105d2124 = "scene13";
    _DAT_105d2154 = "m_iszScenes[14]";
    _DAT_105d2160 = "scene14";
    _DAT_105d2190 = "m_iszScenes[15]";
    _DAT_105d219c = "scene15";
    _DAT_105d21cc = "m_hScenes[0]";
    _DAT_105d2208 = "m_hScenes[1]";
    _DAT_105d2244 = "m_hScenes[2]";
    _DAT_105d2280 = "m_hScenes[3]";
    _DAT_105d22bc = "m_hScenes[4]";
    _DAT_105d22f8 = "m_hScenes[5]";
    _DAT_105d2334 = "m_hScenes[6]";
    _DAT_105d2370 = "m_hScenes[7]";
    _DAT_105d23ac = "m_hScenes[8]";
    _DAT_105d23e8 = "m_hScenes[9]";
    _DAT_105d2424 = "m_hScenes[10]";
    _DAT_105d2460 = "m_hScenes[11]";
    _DAT_105d249c = "m_hScenes[12]";
    _DAT_105d24d8 = "m_hScenes[13]";
    _DAT_105d2514 = "m_hScenes[14]";
    _DAT_105d2550 = "m_hScenes[15]";
    _DAT_105d258c = "InputShutdown";
    _DAT_105d2598 = "Shutdown";
    _DAT_105d32c8 = FUN_1001f850(&DAT_10672614,(undefined4 *)"ScriptThink");
    _DAT_105d3304 = "InputMoveToPosition";
    _DAT_105d3310 = "MoveToPosition";
    _DAT_105d3340 = "InputBeginSequence";
    _DAT_105d334c = "BeginSequence";
    _DAT_105d337c = "InputCancelSequence";
    _DAT_105d3388 = "CancelSequence";
    _DAT_105d33b8 = "m_iPlayerDeathBehavior";
    _DAT_105d33c4 = "onplayerdeath";
    _DAT_105d33f4 = "InputScriptPlayerDeath";
    _DAT_105d3400 = "ScriptPlayerDeath";
    _DAT_105d3430 = "m_OnBeginSequence";
    _DAT_105d343c = "OnBeginSequence";
    _DAT_105d346c = "m_OnEndSequence";
    _DAT_105d3478 = "OnEndSequence";
    _DAT_105d34a8 = "m_OnPostIdleEndSequence";
    _DAT_105d34b4 = "OnPostIdleEndSequence";
    _DAT_105d34e4 = "m_OnCancelSequence";
    _DAT_105d34f0 = "OnCancelSequence";
    _DAT_105d3520 = "m_OnCancelFailedSequence";
    _DAT_105d352c = "OnCancelFailedSequence";
    _DAT_105d355c = "m_OnScriptEvent[0]";
    _DAT_105d3568 = "OnScriptEvent01";
    _DAT_105d3598 = "m_OnScriptEvent[1]";
    _DAT_105d35a4 = "OnScriptEvent02";
    _DAT_105d35d4 = "m_OnScriptEvent[2]";
    _DAT_105d35e0 = "OnScriptEvent03";
    _DAT_105d3610 = "m_OnScriptEvent[3]";
    _DAT_105d361c = "OnScriptEvent04";
    _DAT_105d364c = "m_OnScriptEvent[4]";
    _DAT_105d3658 = "OnScriptEvent05";
    _DAT_105d3688 = "m_OnScriptEvent[5]";
    _DAT_105d3694 = "OnScriptEvent06";
    _DAT_105d36c4 = "m_OnScriptEvent[6]";
    _DAT_105d36d0 = "OnScriptEvent07";
    _DAT_105d3700 = "m_OnScriptEvent[7]";
    _DAT_105d370c = "OnScriptEvent08";
    _DAT_105d39d8 = FUN_1001f850(&DAT_10672634,(undefined4 *)"ScriptThink");
    _DAT_105d3a14 = "InputStartSchedule";
    _DAT_105d3a20 = "StartSchedule";
    _DAT_105d3a50 = "InputStopSchedule";
    _DAT_105d3a5c = "StopSchedule";
    _DAT_105d3d74 = FUN_1001f850(&DAT_10672654,(undefined4 *)"FindThink");
    _DAT_105d3db0 = FUN_1001f850(&DAT_10672654,(undefined4 *)"DelayThink");
    _DAT_105d3dec = "InputBeginSentence";
    _DAT_105d3df8 = "BeginSentence";
    _DAT_105d3e28 = "m_OnBeginSentence";
    _DAT_105d3e34 = "OnBeginSentence";
    _DAT_105d3e64 = "m_OnEndSentence";
    _DAT_105d3e70 = "OnEndSentence";
    _DAT_105d68c0 = FUN_1001f850(&DAT_106741b0,(undefined4 *)"AnimateThink");
    _DAT_105d68fc = FUN_1001f850(&DAT_106741b0,(undefined4 *)"ExpandThink");
    _DAT_105d6938 = FUN_1001f850(&DAT_106741b0,(undefined4 *)"AnimateUntilDead");
    _DAT_105d6974 = FUN_1001f850(&DAT_106741b0,(undefined4 *)"BeginFadeOutThink");
    _DAT_105d69b0 = "m_flSpriteScale";
    _DAT_105d69bc = "SetScale";
    _DAT_105d69ec = "InputHideSprite";
    _DAT_105d69f8 = "HideSprite";
    _DAT_105d6a28 = "InputShowSprite";
    _DAT_105d6a34 = "ShowSprite";
    _DAT_105d6a64 = "InputToggleSprite";
    _DAT_105d6a70 = "ToggleSprite";
    _DAT_105d6aa0 = "InputColorRedValue";
    _DAT_105d6aac = "ColorRedValue";
    _DAT_105d6adc = "InputColorGreenValue";
    _DAT_105d6ae8 = "ColorGreenValue";
    _DAT_105d6b18 = "InputColorBlueValue";
    _DAT_105d6b24 = "ColorBlueValue";
    _DAT_105d7bf8 = "m_soundEngine";
    _DAT_105d7c34 = "m_startSoundName";
    _DAT_105d7c40 = "startsound";
    _DAT_105d7c70 = "m_engineSoundName";
    _DAT_105d7c7c = "enginesound";
    _DAT_105d7cac = "m_movementSoundName";
    _DAT_105d7cb8 = "movementsound";
    _DAT_105d7ce8 = "m_targetEntityName";
    _DAT_105d7d24 = "InputTargetEntity";
    _DAT_105d7d30 = "TargetEntity";
    _DAT_105d803c = "m_volume";
    _DAT_105d8048 = "volume";
    _DAT_105d8078 = "m_flTWidth";
    _DAT_105d80b4 = "m_flTLength";
    _DAT_105d80f0 = "m_flLip";
    _DAT_105d812c = "m_flWait";
    _DAT_105d8168 = "m_flHeight";
    _DAT_105d8174 = "height";
    _DAT_105d821c = FUN_1001f850(&DAT_10675a58,(undefined4 *)"PlatUse");
    _DAT_105d8258 = FUN_1001f850(&DAT_10675a58,(undefined4 *)"CallGoDown");
    _DAT_105d8294 = FUN_1001f850(&DAT_10675a58,(undefined4 *)"CallHitTop");
    _DAT_105d82d0 = FUN_1001f850(&DAT_10675a58,(undefined4 *)"CallHitBottom");
    _DAT_105d830c = "InputToggle";
    _DAT_105d8318 = "Toggle";
    _DAT_105d8348 = "InputGoUp";
    _DAT_105d8384 = "InputGoDown";
    _DAT_105d8390 = "GoDown";
    _DAT_105d86a0 = "InputToggle";
    _DAT_105d86ac = "Toggle";
    _DAT_105d86dc = "InputStart";
    _DAT_105d86e8 = "Start";
    _DAT_105d8718 = "InputStop";
    _DAT_105d91a4 = "m_OnNext";
    _DAT_105d91b0 = "OnNextPoint";
    _DAT_105d91e0 = "m_OnArrivedAtDestinationNode";
    _DAT_105d91ec = "OnArrivedAtDestinationNode";
    _DAT_105d9294 = FUN_1001f850(&DAT_10675ab8,(undefined4 *)"NearestPath");
    _DAT_105d92d0 = FUN_1001f850(&DAT_10675ab8,(undefined4 *)"DeadEnd");
    _DAT_105d99d8 = "InputEnable";
    _DAT_105d99e4 = "Enable";
    _DAT_105d9a14 = "InputDisable";
    _DAT_105d9a20 = "Disable";
    _DAT_105d9a50 = "InputToggle";
    _DAT_105d9a5c = "Toggle";
    _DAT_105d9a8c = "InputTouchTest";
    _DAT_105d9a98 = "TouchTest";
    _DAT_105d9ac8 = "InputStartTouch";
    _DAT_105d9ad4 = "StartTouch";
    _DAT_105d9b04 = "InputEndTouch";
    _DAT_105d9b10 = "EndTouch";
    _DAT_105d9b40 = "m_OnStartTouch";
    _DAT_105d9b4c = "OnStartTouch";
    _DAT_105d9b7c = "m_OnStartTouchAll";
    _DAT_105d9b88 = "OnStartTouchAll";
    _DAT_105d9bb8 = "m_OnEndTouch";
    _DAT_105d9bc4 = "OnEndTouch";
    _DAT_105d9bf4 = "m_OnEndTouchAll";
    _DAT_105d9c00 = "OnEndTouchAll";
    _DAT_105d9c30 = "m_OnTouching";
    _DAT_105d9c3c = "OnTouching";
    _DAT_105d9c6c = "m_OnNotTouching";
    _DAT_105d9c78 = "OnNotTouching";
    _DAT_105d9f24 = FUN_1001f850(&DAT_10676540,(undefined4 *)"TimeoutThink");
    _DAT_105d9f60 = "m_flFieldOfView";
    _DAT_105d9f6c = "FieldOfView";
    _DAT_105d9f9c = "m_flLookTime";
    _DAT_105d9fa8 = "LookTime";
    _DAT_105da098 = FUN_1001f850(&DAT_10676560,(undefined4 *)"TouchChangeLevel");
    _DAT_105da0d4 = "InputChangeLevel";
    _DAT_105da0e0 = "ChangeLevel";
    _DAT_105da110 = "m_OnChangeLevel";
    _DAT_105da11c = "OnChangeLevel";
    _DAT_105daf90 = FUN_1001f850(&DAT_10676700,(undefined4 *)"FollowTarget");
    _DAT_105dafcc = FUN_1001f850(&DAT_10676700,(undefined4 *)"ReturnToEyes");
    _DAT_105db008 = "m_OnEndFollow";
    _DAT_105db014 = "OnEndFollow";
    _DAT_105db7d0 = FUN_1001f850(&DAT_10676744,(undefined4 *)"TranslateViewToProxy");
    _DAT_105dbbe0 = "m_WindCallback";
    _DAT_105dbc1c = FUN_1001f850(&DAT_1067694c,(undefined4 *)"WindThink");
    _DAT_105dbc58 = "InputSetSpeed";
    _DAT_105dbc64 = "SetSpeed";
    _DAT_105dbec0 = FUN_1001f850(&DAT_1067698c,(undefined4 *)"Disable");
    _DAT_105dc124 = "m_ParticleTrail";
    _DAT_105dc160 = "m_gravityScale";
    _DAT_105dc16c = "SetGravityScale";
    _DAT_105dc19c = "m_addAirDensity";
    _DAT_105dc1a8 = "SetAdditionalAirDensity";
    _DAT_105dc1d8 = "m_linearLimit";
    _DAT_105dc1e4 = "SetVelocityLimit";
    _DAT_105dc214 = "m_linearLimitDelta";
    _DAT_105dc220 = "SetVelocityLimitDelta";
    _DAT_105dc250 = "m_linearLimitTime";
    _DAT_105dc28c = "m_linearLimitStart";
    _DAT_105dc2c8 = "m_linearLimitStartTime";
    _DAT_105dc304 = "m_linearScale";
    _DAT_105dc310 = "SetVelocityScale";
    _DAT_105dc340 = "m_angularLimit";
    _DAT_105dc34c = "SetAngVelocityLimit";
    _DAT_105dc37c = "m_angularScale";
    _DAT_105dc388 = "SetAngVelocityScale";
    _DAT_105dc3b8 = "m_linearForce";
    _DAT_105dc3c4 = "SetLinearForce";
    _DAT_105dc3f4 = "m_linearForceAngles";
    _DAT_105dc400 = "SetLinearForceAngles";
    _DAT_105dc430 = "InputSetVelocityLimitTime";
    _DAT_105dc43c = "SetVelocityLimitTime";
    _DAT_105dd354 = FUN_1001f850(&DAT_1067f0f0,(undefined4 *)"StaticDecal");
    _DAT_105dd390 = FUN_1001f850(&DAT_1067f0f0,(undefined4 *)"TriggerDecal");
    _DAT_105dd3cc = "InputActivate";
    _DAT_105dd3d8 = "Activate";
    _DAT_105dd4e0 = FUN_1001f850(&DAT_1067f110,(undefined4 *)"StaticDecal");
    _DAT_105dd51c = FUN_1001f850(&DAT_1067f110,(undefined4 *)"TriggerDecal");
    _DAT_105dd558 = "InputActivate";
    _DAT_105dd564 = "Activate";
    _DAT_105de2dc = "PLAYER_STATE_DEATH_ANIM";
    _DAT_105de314 = "PLAYER_STATE_OBSERVER_MODE";
    _DAT_105de34c = "PLAYER_STATE_PLANNING_SQUAD";
    _DAT_105de384 = "PLAYER_STATE_PLANNING_EQUIPMENT";
    _DAT_105de3bc = "PLAYER_STATE_PLANNING_POST";
    _DAT_105de87c = FUN_1001f850(&DAT_10689628,(undefined4 *)"PropShieldUse");
    _DAT_105de8b8 = FUN_1001f850(&DAT_10689628,(undefined4 *)"Think");
    _DAT_105debf4 = "ROUNDSTATE_PREGAME";
    _DAT_105dec2c = "ROUNDSTATE_PLANPHASE_SQUAD";
    _DAT_105dec64 = "ROUNDSTATE_PLANPHASE_EQUIPMENT";
    _DAT_105dec9c = "ROUNDSTATE_PLANPHASE_POST";
    _DAT_105decd4 = "ROUNDSTATE_ROUND_PRACTICE";
    _DAT_105ded0c = "ROUNDSTATE_ROUND_PRESTART";
    _DAT_105ded44 = "ROUNDSTATE_ROUND_STARTED";
    _DAT_105ded7c = "ROUNDSTATE_ROUND_ENDED";
    _DAT_105dedb4 = "ROUNDSTATE_GAMEOVER";
    _DAT_105deff8 = "m_OnBombPlanted";
    _DAT_105df004 = "OnBombPlanted";
    _DAT_105df034 = "m_OnBombDefused";
    _DAT_105df040 = "OnBombDefused";
    _DAT_105df070 = "m_OnPlayerEscaped";
    _DAT_105df07c = "OnPlayerEscaped";
    _DAT_105df0ac = "m_OnVIPEscaped";
    _DAT_105df0b8 = "OnVIPEscaped";
    _DAT_105df0e8 = "m_OnItemRetrieved";
    _DAT_105df0f4 = "OnItemRetrieved";
    _DAT_105df124 = "m_iszBombingCameraName";
    _DAT_105df130 = "bombingcamera";
    _DAT_105df160 = "m_iBombZoneID";
    _DAT_105df16c = "BombZoneID";
    _DAT_105df19c = "m_vSpawnAngles";
    _DAT_105df1a8 = "spawnAngles";
    _DAT_105df1d8 = "m_bHiddenIcon";
    _DAT_105df1e4 = "HideIcon";
    _DAT_105df214 = "m_bFakeZone";
    _DAT_105df220 = "FakeZone";
    _DAT_105df644 = FUN_1001f850(&DAT_1068c238,(undefined4 *)"BurnForeverReset");
    _DAT_105df680 = "InputIgnite";
    _DAT_105df68c = "Ignite";
    _DAT_105e01a0 = FUN_1001f850(&DAT_1068cbd4,(undefined4 *)"RappelUse");
    _DAT_105e01dc = FUN_1001f850(&DAT_1068cbd4,(undefined4 *)"RappelThink");
    _DAT_105e18d0 = "m_OnRoundStartTDM";
    _DAT_105e18dc = "OnRoundStartTDM";
    _DAT_105e190c = "m_OnRoundStartStageOne";
    _DAT_105e1918 = "OnRoundStartStageOne";
    _DAT_105e1948 = "m_OnRoundStartStageTwo";
    _DAT_105e1954 = "OnRoundStartStageTwo";
    _DAT_105e1984 = "m_OnRoundStartStageThree";
    _DAT_105e1990 = "OnRoundStartStageThree";
    _DAT_105e19c0 = "m_OnPlanningStart";
    _DAT_105e19cc = "OnPlanningStart";
    _DAT_105e19fc = "m_OnRoundWonByAttackers";
    _DAT_105e1a08 = "OnRoundWonByAttackers";
    _DAT_105e1a38 = "m_OnRoundWonByDefenders";
    _DAT_105e1a44 = "OnRoundWonByDefenders";
    _DAT_105e1a74 = "m_OnRoundDraw";
    _DAT_105e1a80 = "OnRoundDraw";
    _DAT_105e1ab0 = "Input_AttackersWin";
    _DAT_105e1abc = "InAttackerWin";
    _DAT_105e1aec = "Input_DefendersWin";
    _DAT_105e1af8 = "InDefenderWin";
    _DAT_105e1b28 = "Input_CTWin";
    _DAT_105e1b34 = "InCTWin";
    _DAT_105e1b64 = "Input_TWin";
    _DAT_105e1b70 = "InTerWin";
    _DAT_105e1ba0 = "Input_AttackersSuccess";
    _DAT_105e1bac = "InAttackerSuccess";
    _DAT_105e1bdc = "Input_AttackersFailure";
    _DAT_105e1be8 = "InAttackerFailure";
    _DAT_105e1c18 = "Input_OverrideRoundtime";
    _DAT_105e1c24 = "InOverrideRoundTime";
    _DAT_105e1c54 = "m_OnVIPKilled";
    _DAT_105e1c60 = "OnVIPKilled";
    _DAT_105e1c90 = "m_OnMafiaHelicopterTakeOff";
    _DAT_105e1c9c = "OnMafiaHelicopterTakeOff";
    _DAT_105e5fc4 = "end cap effect";
    _DAT_105e604c = "initial_particles";
    _DAT_105e6078 = "material";
    _DAT_105e607c = "vgui/white";
    _DAT_105e6094 = "vmtPicker";
    _DAT_105e60a4 = "bounding_box_min";
    _DAT_105e60a8 = "-10 -10 -10";
    _DAT_105e60d0 = "bounding_box_max";
    _DAT_105e60d4 = "10 10 10";
    _DAT_105e60fc = "cull_radius";
    _DAT_105e6128 = "cull_cost";
    _DAT_105e6154 = "cull_control_point";
    _DAT_105e6180 = "cull_replacement_definition";
    _DAT_105e61ac = "fallback replacement definition";
    _DAT_105e61d8 = "fallback max count";
    _DAT_105e6204 = "radius";
    _DAT_105e6230 = "color";
    _DAT_105e6234 = "255 255 255 255";
    _DAT_105e625c = "rotation";
    _DAT_105e6288 = "rotation_speed";
    _DAT_105e62b4 = "normal";
    _DAT_105e62b8 = "0 0 1";
    _DAT_105e62e0 = "sequence_number";
    _DAT_105e62fc = "sheetsequencepicker";
    _DAT_105e630c = "sequence_number 1";
    _DAT_105e6328 = "sheetsequencepicker_second";
    _DAT_105e6338 = "group id";
    _DAT_105e6364 = "maximum time step";
    _DAT_105e6390 = "maximum sim tick rate";
    _DAT_105e63bc = "minimum sim tick rate";
    _DAT_105e63e8 = "minimum rendered frames";
    _DAT_105e6414 = "control point to disable rendering if it is the camera";
    _DAT_105e6440 = "control point to only enable rendering if it is the camera";
    _DAT_105e646c = "maximum draw distance";
    _DAT_105e6470 = "100000.0";
    _DAT_105e6498 = "time to sleep when not drawn";
    _DAT_105e64c4 = "Sort particles";
    _DAT_105e64f0 = "batch particle systems";
    _DAT_105e651c = "view model effect";
    _DAT_105e6548 = "screen space effect";
    _DAT_105e6574 = "draw through leafsystem";
    _DAT_105e65a0 = "maximum portal recursion depth";
    _DAT_105e65cc = "aggregation radius";
    _DAT_105e65f8 = "minimum free particles to aggregate";
    _DAT_105e6624 = "minimum simulation time step";
    _DAT_105e6650 = "minimum CPU level";
    _DAT_105e667c = "minimum GPU level";
    _DAT_105e66a8 = "freeze simulation after time";
    _DAT_105e66ac = "1000000000";
    _DAT_105e6eb4 = "default foreground color";
    _DAT_105e6eb8 = "255 255 255 255";
    _DAT_105e7078 = "background color";
    _DAT_105e707c = "255 255 255 255";
    _DAT_105e70a4 = "pin delta x";
    _DAT_105e70d0 = "pin delta y";
    _DAT_105e70fc = "resize delta x";
    _DAT_105e7128 = "resize delta y";
    _DAT_105e7154 = "build mode flags";
    _DAT_105e7180 = "pin corner";
    _DAT_105e71ac = "auto resize direction";
    _DAT_105e71d8 = "tab position";
    _DAT_105e7204 = "use scheme colors";
    _DAT_105e7230 = "should PostActionSignals";
    _DAT_105f9abc = "CAI_AddOn";
    _DAT_105f9c98 = "CAI_Agent";
    _DAT_105f9cb8 = "AIAgentScheduleState_t";
    _DAT_105f9cd8 = "AIAgentSaveHeader_t";
    _DAT_105fa0d0 = "CAI_BaseActor";
    _DAT_105fa0f0 = "CAI_InterestTarget_t";
    _DAT_105fb688 = "CAI_BaseNPC";
    _DAT_105fb6a8 = "AIScheduleState_t";
    _DAT_105fbb10 = "UnreachableEnt_t";
    _DAT_105fbb30 = "ScriptedNPCInteraction_Phases_t";
    _DAT_105fbb50 = "ScriptedNPCInteraction_t";
    _DAT_105fbb70 = "AIExtendedSaveHeader_t";
    _DAT_105fbba8 = "CAI_BaseFlyingBot";
    _DAT_105fbbcc = "CAI_BasePhysicsFlyingBot";
    _DAT_105fbda0 = "AIChannelScheduleState_t";
    _DAT_105fbdc0 = "CAI_BehaviorBase";
    _DAT_105fbde0 = "AIBehaviorChannelSaveHeader_t";
    _DAT_105fbebc = "CRallyPoint";
    _DAT_105fbedc = "CAssaultPoint";
    _DAT_105fbefc = "CAI_AssaultBehavior";
    _DAT_105fbf1c = "CAI_AssaultGoal";
    _DAT_105fc044 = "CAI_FearBehavior";
    _DAT_105fc0c4 = "CAI_FightFromCoverBehavior";
    _DAT_105fc0e4 = "CAI_FightFromCoverGoal";
    _DAT_105fc284 = "AI_FollowNavInfo_t";
    _DAT_105fc2a4 = "AI_FollowParams_t";
    _DAT_105fc2c4 = "CAI_FollowBehavior";
    _DAT_105fc2e4 = "CAI_FollowGoal";
    _DAT_105fc36c = "AI_LeadArgs_t";
    _DAT_105fc38c = "CAI_LeadBehavior";
    _DAT_105fc3ac = "CAI_LeadGoal";
    _DAT_105fc3cc = "CAI_LeadGoal_Weapon";
    _DAT_105fc44c = "CAI_RappelBehavior";
    _DAT_105fc46c = "CRopeAnchor";
    _DAT_105fc544 = "CAI_BattleLine";
    _DAT_105fc564 = "AI_StandoffParams_t";
    _DAT_105fc584 = "CAI_StandoffBehavior";
    _DAT_105fc5a4 = "CAI_StandoffGoal";
    _DAT_105fc730 = "CAI_BlendedMotor";
    _DAT_105fcb98 = "lump_t";
    _DAT_105fcbb8 = "BSPHeader_t";
    _DAT_105fcf98 = "AI_ResponseParams";
    _DAT_105fcfb8 = "AI_Response";
    _DAT_105fd054 = "CAI_DynamicLinkController";
    _DAT_105fd074 = "CAI_DynamicLink";
    _DAT_105fd094 = "CAI_RadialLinkController";
    _DAT_105fd140 = "CAI_GoalEntity";
    _DAT_105fd1d8 = "CAI_Hint";
    _DAT_105fd208 = "HintNodeData";
    _DAT_105fd228 = "CNodeEnt";
    _DAT_105fd300 = "CAI_LocalNavigator";
    _DAT_105fd360 = "CAI_LookTarget";
    _DAT_105fd388 = "CAI_Enemies";
    _DAT_105fd3a8 = "AI_EnemyInfo_t";
    _DAT_105fd3cc = "CAI_Motor";
    _DAT_105fd578 = "CAI_MoveProbe";
    _DAT_105fd59c = "CAI_MoveAndShootOverlay";
    _DAT_105fd784 = "CAI_Navigator";
    _DAT_105fd980 = "CAI_NetworkManager";
    _DAT_105fda10 = "CAI_Pathfinder";
    _DAT_105fe93c = "CAI_AllySpeechManager";
    _DAT_105fe95c = "CAI_PlayerAlly";
    _DAT_106028d8 = "ParserResponse";
    _DAT_106028f8 = "ResponseGroup";
    _DAT_1060294c = "CAI_Path";
    _DAT_106029f4 = "CAI_ScriptConditions";
    _DAT_10602a58 = FUN_1001f850(&DAT_106029f4,(undefined4 *)"EvaluationThink");
    _DAT_10602a94 = "m_OnConditionsSatisfied";
    _DAT_10602aa0 = "OnConditionsSatisfied";
    _DAT_10602ad0 = "m_OnConditionsTimeout";
    _DAT_10602adc = "OnConditionsTimeout";
    _DAT_10602b0c = "m_NoValidActors";
    _DAT_10602b18 = "NoValidActors";
    _DAT_10602b48 = "InputEnable";
    _DAT_10602b54 = "Enable";
    _DAT_10602b84 = "InputDisable";
    _DAT_10602b90 = "Disable";
    _DAT_10602bc0 = "m_fDisabled";
    _DAT_10602bcc = "StartDisabled";
    _DAT_10602bfc = "m_hTarget";
    _DAT_10602c38 = "m_Actor";
    _DAT_10602c44 = "Actor";
    _DAT_10602c74 = "m_flRequiredTime";
    _DAT_10602c80 = "RequiredTime";
    _DAT_10602cb0 = "m_hActor";
    _DAT_10602cec = "m_Timer";
    _DAT_10602d28 = "m_Timeout";
    _DAT_10602d64 = "m_fMinState";
    _DAT_10602d70 = "MinimumState";
    _DAT_10602da0 = "m_fMaxState";
    _DAT_10602dac = "MaximumState";
    _DAT_10602ddc = "m_fScriptStatus";
    _DAT_10602de8 = "ScriptStatus";
    _DAT_10602e18 = "m_fActorSeePlayer";
    _DAT_10602e24 = "ActorSeePlayer";
    _DAT_10602e54 = "m_flPlayerActorProximity";
    _DAT_10602e60 = "PlayerActorProximity";
    _DAT_10602e90 = "m_PlayerActorProxTester";
    _DAT_10602ecc = "m_flPlayerActorFOV";
    _DAT_10602ed8 = "PlayerActorFOV";
    _DAT_10602f08 = "m_bPlayerActorFOVTrueCone";
    _DAT_10602f14 = "PlayerActorFOVTrueCone";
    _DAT_10602f44 = "m_fPlayerActorLOS";
    _DAT_10602f50 = "PlayerActorLOS";
    _DAT_10602f80 = "m_fActorSeeTarget";
    _DAT_10602f8c = "ActorSeeTarget";
    _DAT_10602fbc = "m_flActorTargetProximity";
    _DAT_10602fc8 = "ActorTargetProximity";
    _DAT_10602ff8 = "m_ActorTargetProxTester";
    _DAT_10603034 = "m_flPlayerTargetProximity";
    _DAT_10603040 = "PlayerTargetProximity";
    _DAT_10603070 = "m_PlayerTargetProxTester";
    _DAT_106030ac = "m_flPlayerTargetFOV";
    _DAT_106030b8 = "PlayerTargetFOV";
    _DAT_106030e8 = "m_bPlayerTargetFOVTrueCone";
    _DAT_106030f4 = "PlayerTargetFOVTrueCone";
    _DAT_10603124 = "m_fPlayerTargetLOS";
    _DAT_10603130 = "PlayerTargetLOS";
    _DAT_10603160 = "m_fPlayerBlockingActor";
    _DAT_1060316c = "PlayerBlockingActor";
    _DAT_1060319c = "m_flMinTimeout";
    _DAT_106031a8 = "MinTimeout";
    _DAT_106031d8 = "m_flMaxTimeout";
    _DAT_106031e4 = "MaxTimeout";
    _DAT_10603214 = "m_fActorInPVS";
    _DAT_10603220 = "ActorInPVS";
    _DAT_10603250 = "m_fActorInVehicle";
    _DAT_1060325c = "ActorInVehicle";
    _DAT_1060328c = "m_fPlayerInVehicle";
    _DAT_10603298 = "PlayerInVehicle";
    _DAT_106032c8 = "m_ElementList";
    _DAT_10603304 = "m_bLeaveAsleep";
    _DAT_1060333c = "CAI_ProxTester";
    _DAT_1060335c = "CAI_ScriptConditionsElement";
    _DAT_10603388 = "CAI_Senses";
    _DAT_1060340c = "CAI_SentenceBase";
    _DAT_106034b4 = "ConceptHistory_t";
    _DAT_106034d4 = "CAI_Expresser";
    _DAT_106034f8 = "CAI_SpeechFilter";
    _DAT_106035e4 = "AISquadEnemyInfo_t";
    _DAT_10603604 = "CAI_Squad";
    _DAT_106036f4 = "CAI_TacticalServices";
    _DAT_10603774 = "CAI_TrackPather";
    _DAT_10603804 = "CAI_MoveMonitor";
    _DAT_10603824 = "CAI_ShotRegulator";
    _DAT_10603844 = "CAI_AccelDecay";
    _DAT_10603864 = "AI_FreePassParams_t";
    _DAT_10603884 = "CAI_FreePass";
    _DAT_106038d8 = "AI_Waypoint_t";
    _DAT_106038fc = "CAmbientGeneric";
    _DAT_10603bf8 = "CBaseAnimating";
    _DAT_10603bfc = "CBaseAnimating";
    _DAT_10603c00 = "Animating models";
    _DAT_10603d38 = "CBaseAnimating";
    _DAT_10604698 = "CAnimationLayer";
    _DAT_106046b8 = "CBaseAnimatingOverlay";
    _DAT_10604d40 = "CBaseCombatCharacter";
    _DAT_10604d60 = "Relationship_t";
    _DAT_1060521c = "CBaseCombatWeapon";
    _DAT_10605b90 = "CBaseEntity";
    _DAT_10605b94 = "CBaseEntity";
    _DAT_10605b98 = "Root class of all server-side entities";
    _DAT_1060709c = "thinkfunc_t";
    _DAT_106070bc = "ResponseContext_t";
    _DAT_106070dc = "CBaseEntity";
    _DAT_10607490 = "CBaseFlex";
    _DAT_10607494 = "CBaseFlex";
    _DAT_10607498 = "Animated characters who have vertex flex capability.";
    _DAT_10607704 = "CBaseFlex";
    _DAT_10607934 = "CFlexCycler";
    _DAT_10607954 = "flexsettinghdr_t";
    _DAT_10607974 = "flexsetting_t";
    _DAT_10607994 = "flexweight_t";
    _DAT_106079e4 = "CBaseGrenade";
    _DAT_10607cbc = "CBaseMultiplayerPlayer";
    _DAT_10607cc0 = "CBaseMultiplayerPlayer";
    _DAT_10607cc4 = "Player";
    _DAT_106095e4 = "CBaseViewModel";
    _DAT_1060a6fc = "CBeam";
    _DAT_1060a75c = "CBeamSpotlight";
    _DAT_1060ab3c = "CFuncWall";
    _DAT_1060ab5c = "CFuncWallToggle";
    _DAT_1060ab7c = "CFuncVehicleClip";
    _DAT_1060ab9c = "CFuncConveyor";
    _DAT_1060acc0 = "CFuncRotating";
    _DAT_1060b02c = "CFuncVPhysicsClip";
    _DAT_1060b080 = "CBaseButton";
    _DAT_1060b14c = "CMomentaryRotButton";
    _DAT_1060b234 = "CEventAction";
    _DAT_1060b254 = "CBaseEntityOutput";
    _DAT_1060b274 = "CEventQueue";
    _DAT_1060b294 = "EventQueuePrioritizedEvent_t";
    _DAT_1060b4bc = "CBaseProjectile";
    _DAT_1060b81c = "CPointClientCommand";
    _DAT_1060b83c = "CPointServerCommand";
    _DAT_1060b85c = "CPointBroadcastClientCommand";
    _DAT_1060ba54 = "CCollisionProperty";
    _DAT_1060be8c = "CColorCorrection";
    _DAT_1060bef0 = FUN_1001f850(&DAT_1060be8c,(undefined4 *)"FadeInThink");
    _DAT_1060bf2c = FUN_1001f850(&DAT_1060be8c,(undefined4 *)"FadeOutThink");
    _DAT_1060bf68 = "m_flCurWeight";
    _DAT_1060bfa4 = "m_flTimeStartFadeIn";
    _DAT_1060bfe0 = "m_flTimeStartFadeOut";
    _DAT_1060c01c = "m_flStartFadeInWeight";
    _DAT_1060c058 = "m_flStartFadeOutWeight";
    _DAT_1060c094 = "m_MinFalloff";
    _DAT_1060c0a0 = "minfalloff";
    _DAT_1060c0d0 = "m_MaxFalloff";
    _DAT_1060c0dc = "maxfalloff";
    _DAT_1060c10c = "m_flMaxWeight";
    _DAT_1060c118 = "maxweight";
    _DAT_1060c148 = "m_flFadeInDuration";
    _DAT_1060c154 = "fadeInDuration";
    _DAT_1060c184 = "m_flFadeOutDuration";
    _DAT_1060c190 = "fadeOutDuration";
    _DAT_1060c1c0 = "m_lookupFilename";
    _DAT_1060c1cc = "filename";
    _DAT_1060c1fc = "m_bEnabled";
    _DAT_1060c208 = "enabled";
    _DAT_1060c238 = "m_bStartDisabled";
    _DAT_1060c244 = "StartDisabled";
    _DAT_1060c274 = "m_bExclusive";
    _DAT_1060c280 = "exclusive";
    _DAT_1060c2b0 = "InputEnable";
    _DAT_1060c2bc = "Enable";
    _DAT_1060c2ec = "InputDisable";
    _DAT_1060c2f8 = "Disable";
    _DAT_1060c328 = "InputSetFadeInDuration";
    _DAT_1060c334 = "SetFadeInDuration";
    _DAT_1060c364 = "InputSetFadeOutDuration";
    _DAT_1060c370 = "SetFadeOutDuration";
    _DAT_1060c818 = "CColorCorrectionVolume";
    _DAT_1060c878 = FUN_1001f850(&DAT_1060c818,(undefined4 *)"ThinkFunc");
    _DAT_1060c8b4 = "m_FadeDuration";
    _DAT_1060c8c0 = "fadeDuration";
    _DAT_1060c8f0 = "m_MaxWeight";
    _DAT_1060c8fc = "maxweight";
    _DAT_1060c92c = "m_lookupFilename";
    _DAT_1060c938 = "filename";
    _DAT_1060c968 = "m_bEnabled";
    _DAT_1060c974 = "enabled";
    _DAT_1060c9a4 = "m_bStartDisabled";
    _DAT_1060c9b0 = "StartDisabled";
    _DAT_1060c9e0 = "m_Weight";
    _DAT_1060ca1c = "m_LastEnterWeight";
    _DAT_1060ca58 = "m_LastEnterTime";
    _DAT_1060ca94 = "m_LastExitWeight";
    _DAT_1060cad0 = "m_LastExitTime";
    _DAT_1060cb0c = "InputEnable";
    _DAT_1060cb18 = "Enable";
    _DAT_1060cb48 = "InputDisable";
    _DAT_1060cb54 = "Disable";
    _DAT_1060cc90 = "CompiledCaptionHeader_t";
    _DAT_1060ccb0 = "CaptionLookup_t";
    _DAT_1060ccd8 = "CTargetCDAudioRep";
    _DAT_1060ccf8 = "CTargetChangeGravity";
    _DAT_1060cd74 = "CRagdollMagnet";
    _DAT_1060cfd4 = "CBaseDoor";
    _DAT_1060d0f8 = "CRotDoor";
    _DAT_1060d164 = "CDynamicLight";
    _DAT_1060ddc4 = "CBubbling";
    _DAT_1060dde4 = "CEnvTracer";
    _DAT_1060de04 = "CGibShooter";
    _DAT_1060de24 = "CEnvShooter";
    _DAT_1060de44 = "CRotorWashShooter";
    _DAT_1060de64 = "CBlood";
    _DAT_1060de84 = "CEnvFunnel";
    _DAT_1060dee0 = "CEnvBeverage";
    _DAT_1060df00 = "CItemSoda";
    _DAT_1060df60 = FUN_1001f850(&DAT_1060df00,(undefined4 *)"CanThink");
    _DAT_1060df9c = FUN_1001f850(&DAT_1060df00,(undefined4 *)"CanTouch");
    _DAT_1060dfd4 = "CPrecipitation";
    _DAT_1060e0f8 = "CPrecipitationBlocker";
    _DAT_1060e204 = "CEnvWind";
    _DAT_1060e71c = "CEmbers";
    _DAT_1060e93c = "CPhysicsWire";
    _DAT_1060e95c = "CEnvMuzzleFlash";
    _DAT_1060e97c = "CEnvSplash";
    _DAT_1060e99c = "CEnvGunfire";
    _DAT_1060e9bc = "CEnvQuadraticBeam";
    _DAT_1060ebdc = "CEnvViewPunch";
    _DAT_1060ec5c = "CEntityDissolve";
    _DAT_1060f0a8 = "CEntityFlame";
    _DAT_1060f21c = "CEnvEntityIgniter";
    _DAT_1060f26c = "CEntityFreezing";
    _DAT_1063f554 = "CEntityParticleTrail";
    _DAT_1063f73c = "EntityParticleTrailInfo_t";
    _DAT_1063f8e4 = "CEnvAmbientLight";
    _DAT_1063fae0 = "CCascadeLight";
    _DAT_1063fdf0 = "CDebugHistory";
    _DAT_1063ffac = "CEnvDOFController";
    _DAT_106402d0 = "CEnvInstructorHint";
    _DAT_106402f8 = "CInfoInstructorHintTarget";
    _DAT_1064036c = "CEnvPlayerSurfaceTrigger";
    _DAT_106403e0 = "CEnvProjectedTexture";
    _DAT_10640c44 = "CEnvScreenOverlay";
    _DAT_10640f60 = "CEnvScreenEffect";
    _DAT_106410d8 = "CTextureToggle";
    _DAT_1064113c = "CEnvTonemapController";
    _DAT_10641650 = "CTonemapTrigger";
    _DAT_10641678 = "CEnvBeam";
    _DAT_106416e4 = "CEnvFade";
    _DAT_10641708 = "CEnvHudHint";
    _DAT_1064172c = "CEnvLaser";
    _DAT_106417a0 = "CMessage";
    _DAT_106417c0 = "CCredits";
    _DAT_106417e0 = "COuttroStats";
    _DAT_10641818 = "CEnvMicrophone";
    _DAT_10641868 = "CPhysicsShake";
    _DAT_10641888 = "CEnvShake";
    _DAT_106418a8 = "CEnvTilt";
    _DAT_10641924 = "CEnvSpark";
    _DAT_10641d68 = "CEnvExplosion";
    _DAT_10641fb8 = "CBaseFilter";
    _DAT_10641fd8 = "CFilterMultiple";
    _DAT_10641ff8 = "CFilterName";
    _DAT_10642018 = "CFilterModel";
    _DAT_10642038 = "CFilterContext";
    _DAT_10642058 = "CFilterClass";
    _DAT_10642078 = "FilterTeam";
    _DAT_10642098 = "CFilterMassGreater";
    _DAT_106420b8 = "FilterDamageType";
    _DAT_106420d8 = "CFilterEnemy";
    _DAT_10642474 = "CFire";
    _DAT_10642494 = "CEnvFireSource";
    _DAT_106424b4 = "CEnvFireSensor";
    _DAT_10642508 = "CBaseFire";
    _DAT_106427cc = "CFireSmoke";
    _DAT_1064287c = "CFish";
    _DAT_10642b98 = "CFishPool";
    _DAT_10642bc4 = "CFlexExpresser";
    _DAT_10642c34 = "CFogController";
    _DAT_10643298 = "CFogTrigger";
    _DAT_10643328 = "CFogVolume";
    _DAT_1064334c = "CAreaPortal";
    _DAT_10643370 = "CFuncAreaPortalBase";
    _DAT_1064385c = "CFuncAreaPortalWindow";
    _DAT_10643960 = "CBreakable";
    _DAT_10643ac0 = "CWindowPane";
    _DAT_10643b5c = FUN_1001f850(&DAT_10643ac0,(undefined4 *)"PaneTouch");
    _DAT_10643b94 = "CBreakableSurface";
    _DAT_10644430 = "CFunc_Dust";
    _DAT_106445f8 = "CEnvDustPuff";
    _DAT_106446a4 = "CInfoElevatorFloor";
    _DAT_106446c4 = "CFuncElevator";
    _DAT_10644af4 = "CFuncInstanceIoProxy";
    _DAT_10644ddc = "CFuncLadder";
    _DAT_10645034 = "CFunc_LOD";
    _DAT_10645084 = "CFuncMoveLinear";
    _DAT_10645330 = "CFuncOccluder";
    _DAT_10645380 = "CFuncReflectiveGlass";
    _DAT_106454bc = "CFuncSmokeVolume";
    _DAT_10645fe4 = "CGameUI";
    _DAT_1064ad28 = FUN_1001f850(&DAT_1064acc8,(undefined4 *)"BounceGibTouch");
    _DAT_1064ad64 = FUN_1001f850(&DAT_1064acc8,(undefined4 *)"StickyGibTouch");
    _DAT_1064ada0 = FUN_1001f850(&DAT_1064acc8,(undefined4 *)"WaitTillLand");
    _DAT_1064addc = FUN_1001f850(&DAT_1064acc8,(undefined4 *)"DieThink");
    _DAT_1064afbc = "CGlobalState";
    _DAT_1064afdc = "globalentity_t";
    _DAT_1064b020 = "CGlowProperty";
    _DAT_1064ba00 = "CInfoCameraLink";
    _DAT_1064bb50 = "CInfoOverlayAccessor";
    _DAT_1064bb9c = "CInfoRemarkable";
    _DAT_1064bbd4 = "CWorldItem";
    _DAT_1064bbf4 = "CItem";
    _DAT_1064c160 = "CLightGlow";
    _DAT_1064c184 = "CLight";
    _DAT_1064c1a8 = "CLogicEventListener";
    _DAT_1064c1cc = "CLogicMeasureMovement";
    _DAT_1064c1f0 = "CLogicNavigation";
    _DAT_1064c214 = "CLogicPlayerProxy";
    _DAT_1064c238 = "CLogicRandomOutputs";
    _DAT_1064c25c = "CLogicTimeScale";
    _DAT_1064c280 = "CLogicAuto";
    _DAT_1064c310 = "CLogicCompareInteger";
    _DAT_1064c330 = "CLogicRegisterActivator";
    _DAT_1064c350 = "CTimerEntity";
    _DAT_1064c370 = "CLogicLineToEntity";
    _DAT_1064c390 = "CMathRemap";
    _DAT_1064c3b0 = "CMathColorBlend";
    _DAT_1064c3d0 = "CEnvGlobal";
    _DAT_1064c3f0 = "CMultiSource";
    _DAT_1064c410 = "CMathCounter";
    _DAT_1064c430 = "CLogicCase";
    _DAT_1064c450 = "CLogicCompare";
    _DAT_1064c470 = "CLogicBranch";
    _DAT_1064c490 = "CLogicAutosave";
    _DAT_1064c4b0 = "CLogicActiveAutosave";
    _DAT_1064c4d0 = "CLogicCollisionPair";
    _DAT_1064c4f0 = "CLogicBranchList";
    _DAT_1064c514 = "CLogicRelay";
    _DAT_1064c6a0 = "CRuleEntity";
    _DAT_1064c6c0 = "CRulePointEntity";
    _DAT_1064c6e0 = "CGameScore";
    _DAT_1064c700 = "CGameEnd";
    _DAT_1064c720 = "CGameText";
    _DAT_1064c740 = "CGamePlayerZone";
    _DAT_1064c760 = "CGamePlayerEquip";
    _DAT_1064c808 = "CMaterialModifyControl";
    _DAT_1064ccf4 = "CMessageEntity";
    _DAT_1064cd48 = "CFuncBrush";
    _DAT_1064ce14 = "CTriggerBrush";
    _DAT_1064ce40 = "CPathKeyFrame";
    _DAT_1064ce60 = "CBaseMoveBehavior";
    _DAT_1064def4 = "CParticleLight";
    _DAT_1064e5dc = "CParticleSystem";
    _DAT_1064e610 = "CPathCorner";
    _DAT_1064e63c = "CPathTrack";
    _DAT_1064e678 = "CConstantForceController";
    _DAT_1064e698 = "CPhysForce";
    _DAT_1064e6b8 = "CPhysThruster";
    _DAT_1064e6d8 = "CPhysTorque";
    _DAT_1064e6f8 = "CMotorController";
    _DAT_1064e718 = "CPhysMotor";
    _DAT_1064e738 = "CKeepUpright";
    _DAT_1064e7f0 = "CConstraintAnchor";
    _DAT_1064e810 = "CPhysConstraintSystem";
    _DAT_1064e830 = "CPhysConstraint";
    _DAT_1064e850 = "CPhysHinge";
    _DAT_1064e870 = "CPhysSlideConstraint";
    _DAT_1064e890 = "CPhysPulley";
    _DAT_1064e8b0 = "CPhysLength";
    _DAT_1064e8d0 = "CRagdollConstraint";
    _DAT_1064ef10 = "physfollower_t";
    _DAT_1064ef30 = "CBoneFollowerManager";
    _DAT_1064ef50 = "CBoneFollower";
    _DAT_1064f0d4 = "CThrustController";
    _DAT_1064f0f4 = "CPhysicsCannister";
    _DAT_1064f728 = "CPhysicsNPCSolver";
    _DAT_1064f748 = "CPhysicsEntitySolver";
    _DAT_1064fac0 = "CRagdollProp";
    _DAT_1064fcdc = "CRagdollPropAttached";
    _DAT_1064ff80 = "CStatueProp";
    _DAT_106500b0 = "PhysBlockHeader_t";
    _DAT_106500d0 = "PhysObjectHeader_t";
    _DAT_106501dc = "CPhysicsSpring";
    _DAT_106502ac = "CPhysBox";
    _DAT_106502cc = "CPhysExplosion";
    _DAT_106502ec = "CPhysImpact";
    _DAT_1065030c = "CPhysConvert";
    _DAT_1065032c = "magnetted_objects_t";
    _DAT_1065034c = "CPhysMagnet";
    _DAT_10650994 = "CBasePlayer";
    _DAT_10650998 = "CBasePlayer";
    _DAT_1065099c = "The player entity.";
    _DAT_10650bb0 = "CPlayerState";
    _DAT_10650bd0 = "CBasePlayer";
    _DAT_10650bf4 = "CStripWeapons";
    _DAT_10650c14 = "CRevertSaved";
    _DAT_10650c34 = "CMovementSpeedMod";
    _DAT_10651324 = "CPlayerResource";
    _DAT_10651388 = FUN_1001f850(&DAT_10651324,(undefined4 *)"ResourceThink");
    _DAT_10651418 = "CPlayerVoiceListener";
    _DAT_1065141c = "CPlayerVoiceListener";
    _DAT_10651420 = "!Player voice listeners";
    _DAT_106520dc = "fogplayerparams_t";
    _DAT_106520fc = "fogparams_t";
    _DAT_1065211c = "sky3dparams_t";
    _DAT_1065213c = "audioparams_t";
    _DAT_1065215c = "CPlayerLocalData";
    _DAT_106521b8 = "CPointCamera";
    _DAT_10652590 = "CPointDevShotCamera";
    _DAT_106525f0 = FUN_1001f850(&DAT_10652590,(undefined4 *)"DevShotThink_Setup");
    _DAT_1065262c = FUN_1001f850(&DAT_10652590,(undefined4 *)"DevShotThink_TakeShot");
    _DAT_10652668 = FUN_1001f850(&DAT_10652590,(undefined4 *)"DevShotThink_PostShot");
    _DAT_106526a4 = "m_iszCameraName";
    _DAT_106526b0 = "cameraname";
    _DAT_106526e0 = "m_iFOV";
    _DAT_1065271c = "CPointEntityFinder";
    _DAT_10652740 = "CPointPlayerMoveConstraint";
    _DAT_10652764 = "CPointSpotlight";
    _DAT_106527ac = "template_t";
    _DAT_106527cc = "CPointTemplate";
    _DAT_10652804 = "CPointAngleSensor";
    _DAT_10652824 = "CPointProximitySensor";
    _DAT_106528a8 = "CPointAngularVelocitySensor";
    _DAT_106528c8 = "CPointVelocitySensor";
    _DAT_106528ec = "CPointHurt";
    _DAT_10652910 = "CPointTeleport";
    _DAT_1065297c = "CPostProcessController";
    _DAT_106531c0 = "CMovableProp";
    _DAT_106532e0 = "CBreakableProp";
    _DAT_10653300 = "CDynamicProp";
    _DAT_10653474 = "COrnamentProp";
    _DAT_10653494 = "CPhysicsProp";
    _DAT_106537b8 = "locksound_t";
    _DAT_106537d8 = "CBasePropDoor";
    _DAT_10653b48 = "CPropDoorRotating";
    _DAT_10653c14 = "CPhysBoxMultiplayer";
    _DAT_10653dc4 = "CPhysicsPropMultiplayer";
    _DAT_10654188 = "CPhysicsPropRespawnable";
    _DAT_106541e8 = FUN_1001f850(&DAT_10654188,(undefined4 *)"Materialize");
    _DAT_10654224 = "m_flRespawnTime";
    _DAT_10654230 = "RespawnTime";
    _DAT_10654260 = "m_vOriginalSpawnOrigin";
    _DAT_1065429c = "m_vOriginalSpawnAngles";
    _DAT_106542d8 = "m_vOriginalMins";
    _DAT_10654314 = "m_vOriginalMaxs";
    _DAT_106544e8 = "CGameGibManager";
    _DAT_1067067c = "CRagdollManager";
    _DAT_10670804 = "CRagdollBoogie";
    _DAT_10671244 = "CRopeKeyframe";
    _DAT_10671278 = "entitytable_t";
    _DAT_10671298 = "SaveRestoreBlockHeader_t";
    _DAT_10672094 = "CSceneEntity";
    _DAT_10672098 = "CSceneEntity";
    _DAT_106721c0 = "CSceneManager";
    _DAT_10672438 = "CSceneEntity";
    _DAT_10672498 = "CInstancedSceneEntity";
    _DAT_106724b8 = "CSceneListManager";
    _DAT_10672614 = "CAI_ScriptedSequence";
    _DAT_10672634 = "CAI_ScriptedSchedule";
    _DAT_10672654 = "CAI_ScriptedSentence";
    _DAT_106727d8 = "execifexists";
    _DAT_10672858 = "CServerNetworkProperty";
    _DAT_106728a8 = "CShadowControl";
    _DAT_10672ae8 = "CSimpleSimTimer";
    _DAT_10672b08 = "CSimTimer";
    _DAT_10672b28 = "CRandSimTimer";
    _DAT_10672b48 = "CStopwatchBase";
    _DAT_10672b68 = "CStopwatch";
    _DAT_10672b88 = "CRandStopwatch";
    _DAT_10672c04 = "CSkyboxSwapper";
    _DAT_10672c40 = "CSkyCamera";
    _DAT_10672c90 = "CSlideshowDisplay";
    _DAT_1067337c = "CSound";
    _DAT_1067339c = "CSoundEnt";
    _DAT_106733bc = "CAISound";
    _DAT_10673510 = "CSoundEnvelope";
    _DAT_10673530 = "CCopyRecipientFilter";
    _DAT_10673550 = "CSoundPatch";
    _DAT_10673570 = "SoundCommand_t";
    _DAT_10673608 = "CEnvSoundscapeProxy";
    _DAT_10673628 = "CEnvSoundscape";
    _DAT_10673648 = "CEnvSoundscapeTriggerable";
    _DAT_106736a4 = "CTriggerSoundscape";
    _DAT_10673708 = FUN_1001f850(&DAT_106736a4,(undefined4 *)"PlayerUpdateThink");
    _DAT_10673744 = "m_SoundscapeName";
    _DAT_10673750 = "soundscape";
    _DAT_10673780 = "m_hSoundscape";
    _DAT_106737bc = "m_spectators";
    _DAT_106738e0 = "CSpatialEntity";
    _DAT_10673940 = FUN_1001f850(&DAT_106738e0,(undefined4 *)"FadeInThink");
    _DAT_1067397c = FUN_1001f850(&DAT_106738e0,(undefined4 *)"FadeOutThink");
    _DAT_106739b8 = "m_flCurWeight";
    _DAT_106739f4 = "m_flTimeStartFadeIn";
    _DAT_10673a30 = "m_flTimeStartFadeOut";
    _DAT_10673a6c = "m_flStartFadeInWeight";
    _DAT_10673aa8 = "m_flStartFadeOutWeight";
    _DAT_10673ae4 = "m_MinFalloff";
    _DAT_10673af0 = "minfalloff";
    _DAT_10673b20 = "m_MaxFalloff";
    _DAT_10673b2c = "maxfalloff";
    _DAT_10673b5c = "m_flMaxWeight";
    _DAT_10673b68 = "maxweight";
    _DAT_10673b98 = "m_flFadeInDuration";
    _DAT_10673ba4 = "fadeInDuration";
    _DAT_10673bd4 = "m_flFadeOutDuration";
    _DAT_10673be0 = "fadeOutDuration";
    _DAT_10673c10 = "m_lookupFilename";
    _DAT_10673c1c = "filename";
    _DAT_10673c4c = "m_bEnabled";
    _DAT_10673c58 = "enabled";
    _DAT_10673c88 = "m_bStartDisabled";
    _DAT_10673c94 = "StartDisabled";
    _DAT_10673cc4 = "InputEnable";
    _DAT_10673cd0 = "Enable";
    _DAT_10673d00 = "InputDisable";
    _DAT_10673d0c = "Disable";
    _DAT_10673d3c = "InputSetFadeInDuration";
    _DAT_10673d48 = "SetFadeInDuration";
    _DAT_10673d78 = "InputSetFadeOutDuration";
    _DAT_10673d84 = "SetFadeOutDuration";
    _DAT_10674134 = "CSpotlightEnd";
    _DAT_106741b0 = "CSprite";
    _DAT_10674b04 = "CBaseDMStart";
    _DAT_10674b24 = "CBaseToggle";
    _DAT_10675360 = "CTakeDamageInfo";
    _DAT_10675380 = "CMultiDamage";
    _DAT_106753b0 = "CFuncTankTrain";
    _DAT_106753d0 = "CTankTargetChange";
    _DAT_106753f0 = "CTankTrainAI";
    _DAT_10675720 = "TemplateEntityData_t";
    _DAT_10675a38 = "CBasePlatTrain";
    _DAT_10675a58 = "CFuncPlat";
    _DAT_10675a78 = "CFuncPlatRot";
    _DAT_10675a98 = "CFuncTrain";
    _DAT_10675ab8 = "CFuncTrackTrain";
    _DAT_10675b84 = "CFuncTrainControls";
    _DAT_10675c20 = "CFuncTrackChange";
    _DAT_10675c40 = "CFuncTrackAuto";
    _DAT_10675dbc = "CTriggerCamera";
    _DAT_10675dc0 = "CTriggerCamera";
    _DAT_10675dc4 = "Server-side camera entity";
    _DAT_10675eb4 = "CBaseTrigger";
    _DAT_1067602c = "CTriggerRemove";
    _DAT_1067604c = "CTriggerHurt";
    _DAT_106760b0 = FUN_1001f850(&DAT_1067604c,(undefined4 *)"RadiationThink");
    _DAT_106760ec = FUN_1001f850(&DAT_1067604c,(undefined4 *)"HurtThink");
    _DAT_10676128 = FUN_1001f850(&DAT_1067604c,(undefined4 *)"NavThink");
    _DAT_10676164 = "m_flOriginalDamage";
    _DAT_106761a0 = "m_flDamage";
    _DAT_106761ac = "damage";
    _DAT_106761dc = "m_flDamageCap";
    _DAT_106761e8 = "damagecap";
    _DAT_10676218 = "m_bitsDamageInflict";
    _DAT_10676224 = "damagetype";
    _DAT_10676254 = "m_damageModel";
    _DAT_10676260 = "damagemodel";
    _DAT_10676290 = "m_bNoDmgForce";
    _DAT_1067629c = "nodmgforce";
    _DAT_106762cc = "m_flLastDmgTime";
    _DAT_10676308 = "m_flDmgResetTime";
    _DAT_10676344 = "m_hurtEntities";
    _DAT_10676380 = "m_flDamage";
    _DAT_1067638c = "SetDamage";
    _DAT_106763bc = "m_OnHurt";
    _DAT_106763c8 = "OnHurt";
    _DAT_106763f8 = "m_OnHurtPlayer";
    _DAT_10676404 = "OnHurtPlayer";
    _DAT_10676430 = "CTriggerMultiple";
    _DAT_10676490 = FUN_1001f850(&DAT_10676430,(undefined4 *)"MultiTouch");
    _DAT_106764cc = FUN_1001f850(&DAT_10676430,(undefined4 *)"MultiWaitOver");
    _DAT_10676508 = "m_OnTrigger";
    _DAT_10676514 = "OnTrigger";
    _DAT_10676540 = "CTriggerLook";
    _DAT_10676560 = "CChangeLevel";
    _DAT_10676584 = "CTriggerSoftBarrier";
    _DAT_106765a4 = "CTriggerPush";
    _DAT_106765c4 = "CTriggerTeleport";
    _DAT_106765e4 = "CTriggerToggleSave";
    _DAT_10676604 = "CTriggerSave";
    _DAT_10676624 = "CTriggerGravity";
    _DAT_10676688 = FUN_1001f850(&DAT_10676624,(undefined4 *)"GravityTouch");
    _DAT_106766c0 = "CAI_ChangeTarget";
    _DAT_106766e0 = "CAI_ChangeHintGroup";
    _DAT_10676700 = "CTriggerCamera";
    _DAT_10676724 = "CTriggerCameraMultiplayer";
    _DAT_10676744 = "CTriggerViewProxy";
    _DAT_10676764 = "CTriggerProximity";
    _DAT_106767c8 = FUN_1001f850(&DAT_10676764,(undefined4 *)"MeasureThink");
    _DAT_10676804 = "m_iszMeasureTarget";
    _DAT_10676810 = "measuretarget";
    _DAT_10676840 = "m_hMeasureTarget";
    _DAT_1067687c = "m_fRadius";
    _DAT_10676888 = "radius";
    _DAT_106768b8 = "m_nTouchers";
    _DAT_106768f4 = "m_NearestEntityDistance";
    _DAT_10676900 = "NearestEntityDistance";
    _DAT_1067692c = "CPhysicsWind";
    _DAT_1067694c = "CTriggerWind";
    _DAT_1067696c = "CTriggerHierarchy";
    _DAT_1067698c = "CTriggerImpact";
    _DAT_10676a5c = "CTriggerPlayerMovement";
    _DAT_10676ab8 = "CBaseVPhysicsTrigger";
    _DAT_10676b84 = "CTriggerVPhysicsMotion";
    _DAT_10676ba4 = "CTriggerAutoCrouch";
    _DAT_1067d480 = "IntervalTimer";
    _DAT_1067d690 = "CTimeline";
    _DAT_1067dd18 = "CVGuiScreen";
    _DAT_1067e158 = "CEntities";
    _DAT_1067e15c = "CScriptEntityIterator";
    _DAT_1067e160 = "!The global list of entities";
    _DAT_1067e18c = "CScriptKeyValues";
    _DAT_1067e190 = "CScriptKeyValues";
    _DAT_1067e194 = "Wrapper class over KeyValues instance";
    _DAT_1067e330 = "CWaterBullet";
    _DAT_1067e390 = FUN_1001f850(&DAT_1067e330,(undefined4 *)"Touch");
    _DAT_1067e3cc = FUN_1001f850(&DAT_1067e330,(undefined4 *)"BulletThink");
    _DAT_1067e4e4 = "CWaterLODControl";
    _DAT_1067e75c = "CWC_UpdateIgnoreList";
    _DAT_1067f0d0 = "CInfoGameEventProxy";
    _DAT_1067f0f0 = "CDecal";
    _DAT_1067f110 = "CProjectedDecal";
    _DAT_1067f130 = "CWorld";
    _DAT_10682270 = "CFuncNavBlocker";
    _DAT_10682290 = "CFuncNavObstruction";
    _DAT_106824f8 = "editdemo";
    _DAT_106838a4 = "player_info_s";
    _DAT_10683b10 = "CSmoker";
    _DAT_10683d08 = "CSpiller";
    _DAT_10684640 = "CTI_PlayerResource";
    _DAT_10684fa8 = "CTIPlayer";
    _DAT_10685008 = FUN_1001f850(&DAT_10684fa8,(undefined4 *)"SDKPushawayThink");
    _DAT_10685044 = FUN_1001f850(&DAT_10684fa8,(undefined4 *)"AntiCheat_Think");
    _DAT_10685080 = FUN_1001f850(&DAT_10684fa8,(undefined4 *)"PlayerDeathThink");
    _DAT_106850bc = "m_iGrenades";
    _DAT_10685e3c = "GAME_HEADER";
    _DAT_10685e5c = "SAVE_HEADER";
    _DAT_10685e7c = "levellist_t";
    _DAT_10685e9c = "SAVELIGHTSTYLE";
    _DAT_106860c4 = "musicsave_t";
    _DAT_106860e4 = "channelsave";
    _DAT_10686104 = "decallist_t";
    _DAT_10687728 = "CNPCHelicopterCircle";
    _DAT_10687788 = FUN_1001f850(&DAT_10687728,(undefined4 *)"HelicopterThink");
    _DAT_106877c4 = "m_flRadius";
    _DAT_106877d0 = "circleRadius";
    _DAT_10687800 = "m_flFlySpeed";
    _DAT_1068780c = "flySpeed";
    _DAT_1068887c = "CPropBomb";
    _DAT_106888e0 = FUN_1001f850(&DAT_1068887c,(undefined4 *)"PropBombUse");
    _DAT_1068891c = FUN_1001f850(&DAT_1068887c,(undefined4 *)"Think");
    _DAT_10688958 = FUN_1001f850(&DAT_1068887c,(undefined4 *)"FinishExplode");
    _DAT_10688994 = "InputAutoArm";
    _DAT_106889a0 = "AutoArm";
    _DAT_10688b78 = "CPropFireExtinguisher";
    _DAT_10688f94 = "CPropPropaneTank";
    _DAT_106892e0 = "CPropRetrieval";
    _DAT_10689340 = FUN_1001f850(&DAT_106892e0,(undefined4 *)"PropRetrievalUse");
    _DAT_1068937c = "m_RetrievalName";
    _DAT_10689388 = "objname";
    _DAT_106893b8 = "m_iszCaptureTargetName";
    _DAT_106893c4 = "capturetarget";
    _DAT_10689628 = "CPropShield";
    _DAT_106897cc = "CPropSpareTire";
    _DAT_1068986c = FUN_1001f850(&DAT_106897cc,(undefined4 *)"Think");
    _DAT_1068af58 = "CVoteController";
    _DAT_1068afb8 = FUN_1001f850(&DAT_1068af58,(undefined4 *)"VoteControllerThink");
    _DAT_1068b100 = "CGameZone";
    _DAT_1068b664 = "CFuncTeamClip";
    _DAT_1068b738 = "CFunc_SpeedAdjust";
    _DAT_1068b788 = "CFuncStageBlocker";
    _DAT_1068b880 = "CFuncTrafficZone";
    _DAT_1068c19c = "CInferno";
    _DAT_1068c200 = FUN_1001f850(&DAT_1068c19c,(undefined4 *)"InfernoThink");
    _DAT_1068c238 = "CPropIgnite";
    _DAT_1068c4d4 = "CPropBreakdown";
    _DAT_1068c4fc = "CPointIntroCamera";
    _DAT_1068c51c = "CPointPlanningStageCamera";
    _DAT_1068c820 = "CPropAmmoBox";
    _DAT_1068c880 = FUN_1001f850(&DAT_1068c820,(undefined4 *)"AmmoBoxThink");
    _DAT_1068cbd4 = "CPropRappelPoint";
    _DAT_1068d034 = "CNPCTrackPlane";
    _DAT_1068e0b0 = "CNPCTrackVehicle";
    _DAT_10690218 = FUN_1001f850(&DAT_106901b8,(undefined4 *)"DogThink");
    _DAT_10690d80 = "CHostage";
    _DAT_10690de0 = FUN_1001f850(&DAT_10690d80,(undefined4 *)"HostageUse");
    _DAT_10690e1c = FUN_1001f850(&DAT_10690d80,(undefined4 *)"HostageThink");
    _DAT_10690e58 = FUN_1001f850(&DAT_10690d80,(undefined4 *)"HostageThink_GrabbedContext");
    _DAT_10691f7c = "CSmokeGrenadeProjectile";
    _DAT_10691fe0 = FUN_1001f850(&DAT_10691f7c,(undefined4 *)"SmokeThink");
    _DAT_1069201c = FUN_1001f850(&DAT_10691f7c,(undefined4 *)"DelayThink");
    _DAT_10692058 = "CTearGrenadeProjectile";
    _DAT_106920b8 = FUN_1001f850(&DAT_10692058,(undefined4 *)"TearGasThink");
    _DAT_106920f4 = FUN_1001f850(&DAT_10692058,(undefined4 *)"DelayThink");
    _DAT_10692930 = "CBaseCarriable";
    _DAT_10692990 = FUN_1001f850(&DAT_10692930,(undefined4 *)"CarriedContext");
    _DAT_106929cc = FUN_1001f850(&DAT_10692930,(undefined4 *)"DelayedPushForceContext");
    _DAT_10695198 = "CInfoRules";
    _DAT_106951b8 = "CSpawnPoint";
    _DAT_1069602c = "CBasePlayerControllable";
    _DAT_10696090 = FUN_1001f850(&DAT_1069602c,(undefined4 *)"VehicleThink");
    _DAT_106960cc = "m_vehicleScriptDef";
    _DAT_106960d8 = "VehicleScript";
    _DAT_106977cc = "CBaseWheeledControllable";
    _DAT_10698100 = "CRealWheeledControllable";
    _DAT_10698298 = "CBaseGrenadeProjectile";
    _DAT_106982f8 = FUN_1001f850(&DAT_10698298,(undefined4 *)"DangerSoundThink");
    _DAT_10698fc8 = "CWeaponTIBase";
    _DAT_1069c2f8 = "CParticleFire";
    _DAT_1069c598 = "ParticleSmokeGrenade";
    _DAT_1069c88c = "CPlasma";
    _DAT_1069cf68 = "SmokeTrail";
    _DAT_1069d520 = "RocketTrail";
    _DAT_1069d838 = "SporeTrail";
    _DAT_1069db50 = "SporeExplosion";
    _DAT_1069db70 = "CFireTrail";
    _DAT_1069e1d8 = "DustTrail";
    _DAT_1069e8c4 = "CSmokeStackLightInfo";
    _DAT_1069e8e4 = "CSmokeStack";
    _DAT_1069e934 = "CSpriteTrail";
    _DAT_1069f120 = "CSteamJet";
    _DAT_106a827c = "m_vecNetworkOrigin.y";
    _DAT_106a82b8 = "m_vecNetworkOrigin.z";
    _DAT_106a82f4 = "m_angNetworkAngles";
    _DAT_106a8330 = "m_vecAbsOrigin";
    _DAT_106a836c = "m_angAbsRotation";
    _DAT_106a83a8 = "m_vecOrigin";
    _DAT_106a83e4 = "m_angRotation";
    _DAT_106a8420 = "m_hGroundEntity";
    _DAT_106a845c = "m_nWaterLevel";
    _DAT_106a8498 = "m_nWaterType";
    _DAT_106a84d4 = "m_vecAngVelocity";
    _DAT_106a8510 = "m_vecBaseVelocity";
    _DAT_106a854c = "m_iEFlags";
    _DAT_106a8588 = "m_flGravity";
    _DAT_106a85c4 = "m_flProxyRandomValue";
    _DAT_106a8600 = "m_bEverHadPredictionErrorsForThisCommand";
    _DAT_106a863c = "m_hPlayerSimulationOwner";
    _DAT_106a8f2c = "m_hLocalPlayer";
    _DAT_106a8f68 = "m_hLocalPlayer";
    _DAT_106a8fa4 = "m_fOutput";
    _DAT_106a8fe0 = "m_hEntity1";
    _DAT_106a901c = "m_hEntity2";
    _DAT_106a9058 = "m_szString1";
    _DAT_106a9094 = "m_szString2";
    _DAT_106a90d0 = "m_iInteger1";
    _DAT_106a910c = "m_iInteger2";
    _DAT_106a9148 = "m_fFloat1";
    _DAT_106a9184 = "m_fFloat2";
    _DAT_106a91c0 = "m_hIconTarget";
    _DAT_106a91fc = "m_szVguiTargetName";
    _DAT_106a9238 = "m_szVguiTargetLookup";
    _DAT_106a9274 = "m_nVguiTargetEdge";
    _DAT_106a92b0 = "m_fFixedPositionX";
    _DAT_106a92ec = "m_fFixedPositionY";
    _DAT_106a9328 = "m_bFixedPosition";
    _DAT_106a9364 = "m_bNoIconTarget";
    _DAT_106a93a0 = "m_bAllowNodrawTarget";
    _DAT_106a93dc = "m_bVisible";
    _DAT_106a9418 = "m_bShowWhenOccluded";
    _DAT_106a9454 = "m_bNoOffscreen";
    _DAT_106a9490 = "m_bForceCaption";
    _DAT_106a94cc = "m_szOnscreenIcon";
    _DAT_106a9508 = "m_szOffscreenIcon";
    _DAT_106a9544 = "m_flUpOffset";
    _DAT_106a9580 = "m_flRelativeUpOffset";
    _DAT_106a95bc = "m_fRange";
    _DAT_106a95f8 = "m_iFlags";
    _DAT_106a9634 = "m_szCaptionColor";
    _DAT_106a9670 = "m_szLessonGroup";
    _DAT_106a96ac = "m_szDisplayText";
    _DAT_106a96e8 = "m_szDisplayParamText";
    _DAT_106a9724 = "m_szBinding";
    _DAT_106a9760 = "m_szGamepadBinding";
    _DAT_106a979c = "m_iPriority";
    _DAT_106a97d8 = "m_stringReplaceKey";
    _DAT_106a9814 = "m_fLockDuration";
    _DAT_106a9850 = "m_bCanOpenWhenDead";
    _DAT_106a988c = "m_bBumpWithTimeoutWhenLearned";
    _DAT_106a98c8 = "m_bOnceLearnedNeverOpen";
    _DAT_106a9904 = "m_bCanTimeoutWhileInactive";
    _DAT_106a9940 = "m_bUsableInMidair";
    _DAT_106a997c = "m_fTimeout";
    _DAT_106a99b8 = "m_fUpdateInterval";
    _DAT_106a99f4 = "m_szStartSound";
    _DAT_106abcd0 = FUN_102687d0(this_00,(uint *)"version",0);
    _DAT_106ac77c = (*(code *)puVar1)("VPhysics031",0);
    _DAT_106af970 = "toolload";
    _DAT_106af974 = "tools";
    _DAT_106af980 = "toolunload";
    _DAT_106b0190 = "m_ragdoll.list[0].originParentSpace";
    _DAT_106b01cc = "m_ragdoll.list[0].pObject";
    _DAT_106b0208 = "m_ragdoll.list[0].pConstraint";
    _DAT_106b0244 = "m_ragdoll.list[0].parentIndex";
    _DAT_106b0280 = "m_ragdoll.list[1].originParentSpace";
    _DAT_106b02bc = "m_ragdoll.list[1].pObject";
    _DAT_106b02f8 = "m_ragdoll.list[1].pConstraint";
    _DAT_106b0334 = "m_ragdoll.list[1].parentIndex";
    _DAT_106b0370 = "m_ragdoll.list[2].originParentSpace";
    _DAT_106b03ac = "m_ragdoll.list[2].pObject";
    _DAT_106b03e8 = "m_ragdoll.list[2].pConstraint";
    _DAT_106b0424 = "m_ragdoll.list[2].parentIndex";
    _DAT_106b0460 = "m_ragdoll.list[3].originParentSpace";
    _DAT_106b049c = "m_ragdoll.list[3].pObject";
    _DAT_106b04d8 = "m_ragdoll.list[3].pConstraint";
    _DAT_106b0514 = "m_ragdoll.list[3].parentIndex";
    _DAT_106b0550 = "m_ragdoll.list[4].originParentSpace";
    _DAT_106b058c = "m_ragdoll.list[4].pObject";
    _DAT_106b05c8 = "m_ragdoll.list[4].pConstraint";
    _DAT_106b0604 = "m_ragdoll.list[4].parentIndex";
    _DAT_106b0640 = "m_ragdoll.list[5].originParentSpace";
    _DAT_106b067c = "m_ragdoll.list[5].pObject";
    _DAT_106b06b8 = "m_ragdoll.list[5].pConstraint";
    _DAT_106b06f4 = "m_ragdoll.list[5].parentIndex";
    _DAT_106b0730 = "m_ragdoll.list[6].originParentSpace";
    _DAT_106b076c = "m_ragdoll.list[6].pObject";
    _DAT_106b07a8 = "m_ragdoll.list[6].pConstraint";
    _DAT_106b07e4 = "m_ragdoll.list[6].parentIndex";
    _DAT_106b0820 = "m_ragdoll.list[7].originParentSpace";
    _DAT_106b085c = "m_ragdoll.list[7].pObject";
    _DAT_106b0898 = "m_ragdoll.list[7].pConstraint";
    _DAT_106b08d4 = "m_ragdoll.list[7].parentIndex";
    _DAT_106b0910 = "m_ragdoll.list[8].originParentSpace";
    _DAT_106b094c = "m_ragdoll.list[8].pObject";
    _DAT_106b0988 = "m_ragdoll.list[8].pConstraint";
    _DAT_106b09c4 = "m_ragdoll.list[8].parentIndex";
    _DAT_106b0a00 = "m_ragdoll.list[9].originParentSpace";
    _DAT_106b0a3c = "m_ragdoll.list[9].pObject";
    _DAT_106b0a78 = "m_ragdoll.list[9].pConstraint";
    _DAT_106b0ab4 = "m_ragdoll.list[9].parentIndex";
    _DAT_106b0af0 = "m_ragdoll.list[10].originParentSpace";
    _DAT_106b0b2c = "m_ragdoll.list[10].pObject";
    _DAT_106b0b68 = "m_ragdoll.list[10].pConstraint";
    _DAT_106b0ba4 = "m_ragdoll.list[10].parentIndex";
    _DAT_106b0be0 = "m_ragdoll.list[11].originParentSpace";
    _DAT_106b0c1c = "m_ragdoll.list[11].pObject";
    _DAT_106b0c58 = "m_ragdoll.list[11].pConstraint";
    _DAT_106b0c94 = "m_ragdoll.list[11].parentIndex";
    _DAT_106b0cd0 = "m_ragdoll.list[12].originParentSpace";
    _DAT_106b0d0c = "m_ragdoll.list[12].pObject";
    _DAT_106b0d48 = "m_ragdoll.list[12].pConstraint";
    _DAT_106b0d84 = "m_ragdoll.list[12].parentIndex";
    _DAT_106b0dc0 = "m_ragdoll.list[13].originParentSpace";
    _DAT_106b0dfc = "m_ragdoll.list[13].pObject";
    _DAT_106b0e38 = "m_ragdoll.list[13].pConstraint";
    _DAT_106b0e74 = "m_ragdoll.list[13].parentIndex";
    _DAT_106b0eb0 = "m_ragdoll.list[14].originParentSpace";
    _DAT_106b0eec = "m_ragdoll.list[14].pObject";
    _DAT_106b0f28 = "m_ragdoll.list[14].pConstraint";
    _DAT_106b0f64 = "m_ragdoll.list[14].parentIndex";
    _DAT_106b0fa0 = "m_ragdoll.list[15].originParentSpace";
    _DAT_106b0fdc = "m_ragdoll.list[15].pObject";
    _DAT_106b1018 = "m_ragdoll.list[15].pConstraint";
    _DAT_106b1054 = "m_ragdoll.list[15].parentIndex";
    _DAT_106b1090 = "m_ragdoll.list[16].originParentSpace";
    _DAT_106b10cc = "m_ragdoll.list[16].pObject";
    _DAT_106b1108 = "m_ragdoll.list[16].pConstraint";
    _DAT_106b1144 = "m_ragdoll.list[16].parentIndex";
    _DAT_106b1180 = "m_ragdoll.list[17].originParentSpace";
    _DAT_106b11bc = "m_ragdoll.list[17].pObject";
    _DAT_106b11f8 = "m_ragdoll.list[17].pConstraint";
    _DAT_106b1234 = "m_ragdoll.list[17].parentIndex";
    _DAT_106b1270 = "m_ragdoll.list[18].originParentSpace";
    _DAT_106b12ac = "m_ragdoll.list[18].pObject";
    _DAT_106b12e8 = "m_ragdoll.list[18].pConstraint";
    _DAT_106b1324 = "m_ragdoll.list[18].parentIndex";
    _DAT_106b1360 = "m_ragdoll.list[19].originParentSpace";
    _DAT_106b139c = "m_ragdoll.list[19].pObject";
    _DAT_106b13d8 = "m_ragdoll.list[19].pConstraint";
    _DAT_106b1414 = "m_ragdoll.list[19].parentIndex";
    _DAT_106b1450 = "m_ragdoll.list[20].originParentSpace";
    _DAT_106b148c = "m_ragdoll.list[20].pObject";
    _DAT_106b14c8 = "m_ragdoll.list[20].pConstraint";
    _DAT_106b1504 = "m_ragdoll.list[20].parentIndex";
    _DAT_106b1540 = "m_ragdoll.list[21].originParentSpace";
    _DAT_106b157c = "m_ragdoll.list[21].pObject";
    _DAT_106b15b8 = "m_ragdoll.list[21].pConstraint";
    _DAT_106b15f4 = "m_ragdoll.list[21].parentIndex";
    _DAT_106b1630 = "m_ragdoll.list[22].originParentSpace";
    _DAT_106b166c = "m_ragdoll.list[22].pObject";
    _DAT_106b16a8 = "m_ragdoll.list[22].pConstraint";
    _DAT_106b16e4 = "m_ragdoll.list[22].parentIndex";
    _DAT_106b1720 = "m_ragdoll.list[23].originParentSpace";
    _DAT_106b175c = "m_ragdoll.list[23].pObject";
    _DAT_106b1798 = "m_ragdoll.list[23].pConstraint";
    _DAT_106b17d4 = "m_ragdoll.list[23].parentIndex";
    _DAT_106b1810 = "m_ragdoll.list[24].originParentSpace";
    _DAT_106b184c = "m_ragdoll.list[24].pObject";
    _DAT_106b1888 = "m_ragdoll.list[24].pConstraint";
    _DAT_106b18c4 = "m_ragdoll.list[24].parentIndex";
    _DAT_106b1900 = "m_ragdoll.list[25].originParentSpace";
    _DAT_106b193c = "m_ragdoll.list[25].pObject";
    _DAT_106b1978 = "m_ragdoll.list[25].pConstraint";
    _DAT_106b19b4 = "m_ragdoll.list[25].parentIndex";
    _DAT_106b19f0 = "m_ragdoll.list[26].originParentSpace";
    _DAT_106b1a2c = "m_ragdoll.list[26].pObject";
    _DAT_106b1a68 = "m_ragdoll.list[26].pConstraint";
    _DAT_106b1aa4 = "m_ragdoll.list[26].parentIndex";
    _DAT_106b1ae0 = "m_ragdoll.list[27].originParentSpace";
    _DAT_106b1b1c = "m_ragdoll.list[27].pObject";
    _DAT_106b1b58 = "m_ragdoll.list[27].pConstraint";
    _DAT_106b1b94 = "m_ragdoll.list[27].parentIndex";
    _DAT_106b1bd0 = "m_ragdoll.list[28].originParentSpace";
    _DAT_106b1c0c = "m_ragdoll.list[28].pObject";
    _DAT_106b1c48 = "m_ragdoll.list[28].pConstraint";
    _DAT_106b1c84 = "m_ragdoll.list[28].parentIndex";
    _DAT_106b1cc0 = "m_ragdoll.list[29].originParentSpace";
    _DAT_106b1cfc = "m_ragdoll.list[29].pObject";
    _DAT_106b1d38 = "m_ragdoll.list[29].pConstraint";
    _DAT_106b1d74 = "m_ragdoll.list[29].parentIndex";
    _DAT_106b1db0 = "m_ragdoll.list[30].originParentSpace";
    _DAT_106b1dec = "m_ragdoll.list[30].pObject";
    _DAT_106b1e28 = "m_ragdoll.list[30].pConstraint";
    _DAT_106b1e64 = "m_ragdoll.list[30].parentIndex";
    _DAT_106b1ea0 = "m_ragdoll.list[31].originParentSpace";
    _DAT_106b1edc = "m_ragdoll.list[31].pObject";
    _DAT_106b1f18 = "m_ragdoll.list[31].pConstraint";
    _DAT_106b1f54 = "m_ragdoll.list[31].parentIndex";
    _DAT_106cd8ec = "end cap effect";
    _DAT_106cd974 = "initial_particles";
    _DAT_106cd9a0 = "material";
    _DAT_106cd9a4 = "vgui/white";
    _DAT_106cd9bc = "vmtPicker";
    _DAT_106cd9cc = "bounding_box_min";
    _DAT_106cd9d0 = "-10 -10 -10";
    _DAT_106cd9f8 = "bounding_box_max";
    _DAT_106cd9fc = "10 10 10";
    _DAT_106cda24 = "cull_radius";
    _DAT_106cda50 = "cull_cost";
    _DAT_106cda7c = "cull_control_point";
    _DAT_106cdaa8 = "cull_replacement_definition";
    _DAT_106cdad4 = "fallback replacement definition";
    _DAT_106cdb00 = "fallback max count";
    _DAT_106cdb2c = "radius";
    _DAT_106cdb58 = "color";
    _DAT_106cdb5c = "255 255 255 255";
    _DAT_106cdb84 = "rotation";
    _DAT_106cdbb0 = "rotation_speed";
    _DAT_106cdbdc = "normal";
    _DAT_106cdbe0 = "0 0 1";
    _DAT_106cdc08 = "sequence_number";
    _DAT_106cdc24 = "sheetsequencepicker";
    _DAT_106cdc34 = "sequence_number 1";
    _DAT_106cdc50 = "sheetsequencepicker_second";
    _DAT_106cdc60 = "group id";
    _DAT_106cdc8c = "maximum time step";
    _DAT_106cdcb8 = "maximum sim tick rate";
    _DAT_106cdce4 = "minimum sim tick rate";
    _DAT_106cdd10 = "minimum rendered frames";
    _DAT_106cdd3c = "control point to disable rendering if it is the camera";
    _DAT_106cdd68 = "control point to only enable rendering if it is the camera";
    _DAT_106cdd94 = "maximum draw distance";
    _DAT_106cdd98 = "100000.0";
    _DAT_106cddc0 = "time to sleep when not drawn";
    _DAT_106cddec = "Sort particles";
    _DAT_106cde18 = "batch particle systems";
    _DAT_106cde44 = "view model effect";
    _DAT_106cde70 = "screen space effect";
    _DAT_106cde9c = "draw through leafsystem";
    _DAT_106cdec8 = "maximum portal recursion depth";
    _DAT_106cdef4 = "aggregation radius";
    _DAT_106cdf20 = "minimum free particles to aggregate";
    _DAT_106cdf4c = "minimum simulation time step";
    _DAT_106cdf78 = "minimum CPU level";
    _DAT_106cdfa4 = "minimum GPU level";
    _DAT_106cdfd0 = "freeze simulation after time";
    _DAT_106cdfd4 = "1000000000";
    _DAT_106ce05c = "container_attribute_to_particle_attribute";
    _DAT_106ce0f4 = "operator end fadein";
    _DAT_106ce120 = "operator start fadeout";
    _DAT_106ce14c = "operator end fadeout";
    _DAT_106ce178 = "operator fade oscillate";
    _DAT_106ce1a4 = "operator time offset seed";
    _DAT_106ce1d0 = "operator time offset min";
    _DAT_106ce1fc = "operator time offset max";
    _DAT_106ce228 = "operator time scale seed";
    _DAT_106ce254 = "operator time scale min";
    _DAT_106ce280 = "operator time scale max";
    _DAT_106ce2ac = "operator time strength random scale max";
    _DAT_106ce2d8 = "operator strength scale seed";
    _DAT_106ce304 = "operator strength random scale min";
    _DAT_106ce330 = "operator strength random scale max";
    _DAT_106ce35c = "operator end cap state";
    _DAT_106ce388 = "gravity";
    _DAT_106ce38c = "0 0 0";
    _DAT_106ce3e0 = "max constraint passes";
    _DAT_106ce474 = "operator end fadein";
    _DAT_106ce4a0 = "operator start fadeout";
    _DAT_106ce4cc = "operator end fadeout";
    _DAT_106ce4f8 = "operator fade oscillate";
    _DAT_106ce524 = "operator time offset seed";
    _DAT_106ce550 = "operator time offset min";
    _DAT_106ce57c = "operator time offset max";
    _DAT_106ce5a8 = "operator time scale seed";
    _DAT_106ce5d4 = "operator time scale min";
    _DAT_106ce600 = "operator time scale max";
    _DAT_106ce62c = "operator time strength random scale max";
    _DAT_106ce658 = "operator strength scale seed";
    _DAT_106ce684 = "operator strength random scale min";
    _DAT_106ce6b0 = "operator strength random scale max";
    _DAT_106ce6dc = "operator end cap state";
    _DAT_106ce708 = "start_alpha";
    _DAT_106ce734 = "end_alpha";
    _DAT_106ce760 = "start_fade_in_time";
    _DAT_106ce78c = "end_fade_in_time";
    _DAT_106ce7b8 = "start_fade_out_time";
    _DAT_106ce7e4 = "end_fade_out_time";
    _DAT_106ce87c = "operator end fadein";
    _DAT_106ce8a8 = "operator start fadeout";
    _DAT_106ce8d4 = "operator end fadeout";
    _DAT_106ce900 = "operator fade oscillate";
    _DAT_106ce92c = "operator time offset seed";
    _DAT_106ce958 = "operator time offset min";
    _DAT_106ce984 = "operator time offset max";
    _DAT_106ce9b0 = "operator time scale seed";
    _DAT_106ce9dc = "operator time scale min";
    _DAT_106cea08 = "operator time scale max";
    _DAT_106cea34 = "operator time strength random scale max";
    _DAT_106cea60 = "operator strength scale seed";
    _DAT_106cea8c = "operator strength random scale min";
    _DAT_106ceab8 = "operator strength random scale max";
    _DAT_106ceae4 = "operator end cap state";
    _DAT_106ceb10 = "start_alpha";
    _DAT_106ceb3c = "end_alpha";
    _DAT_106ceb68 = "start_fade_in_time";
    _DAT_106ceb94 = "end_fade_in_time";
    _DAT_106cebc0 = "start_fade_out_time";
    _DAT_106cebec = "end_fade_out_time";
    _DAT_106cec84 = "operator end fadein";
    _DAT_106cecb0 = "operator start fadeout";
    _DAT_106cecdc = "operator end fadeout";
    _DAT_106ced08 = "operator fade oscillate";
    _DAT_106ced34 = "operator time offset seed";
    _DAT_106ced60 = "operator time offset min";
    _DAT_106ced8c = "operator time offset max";
    _DAT_106cedb8 = "operator time scale seed";
    _DAT_106cede4 = "operator time scale min";
    _DAT_106cee10 = "operator time scale max";
    _DAT_106cee3c = "operator time strength random scale max";
    _DAT_106cee68 = "operator strength scale seed";
    _DAT_106cee94 = "operator strength random scale min";
    _DAT_106ceec0 = "operator strength random scale max";
    _DAT_106ceeec = "operator end cap state";
    _DAT_106cef18 = "fade in time min";
    _DAT_106cef44 = "fade in time max";
    _DAT_106cef70 = "fade in time exponent";
    _DAT_106cef9c = "proportional 0/1";
    _DAT_106cf034 = "operator end fadein";
    _DAT_106cf060 = "operator start fadeout";
    _DAT_106cf08c = "operator end fadeout";
    _DAT_106cf0b8 = "operator fade oscillate";
    _DAT_106cf0e4 = "operator time offset seed";
    _DAT_106cf110 = "operator time offset min";
    _DAT_106cf13c = "operator time offset max";
    _DAT_106cf168 = "operator time scale seed";
    _DAT_106cf194 = "operator time scale min";
    _DAT_106cf1c0 = "operator time scale max";
    _DAT_106cf1ec = "operator time strength random scale max";
    _DAT_106cf218 = "operator strength scale seed";
    _DAT_106cf244 = "operator strength random scale min";
    _DAT_106cf270 = "operator strength random scale max";
    _DAT_106cf29c = "operator end cap state";
    _DAT_106cf2c8 = "fade out time min";
    _DAT_106cf2f4 = "fade out time max";
    _DAT_106cf320 = "fade out time exponent";
    _DAT_106cf34c = "proportional 0/1";
    _DAT_106cf378 = "ease in and out";
    _DAT_106cf3a4 = "fade bias";
    _DAT_106cf45c = "operator end fadein";
    _DAT_106cf488 = "operator start fadeout";
    _DAT_106cf4b4 = "operator end fadeout";
    _DAT_106cf4e0 = "operator fade oscillate";
    _DAT_106cf50c = "operator time offset seed";
    _DAT_106cf538 = "operator time offset min";
    _DAT_106cf564 = "operator time offset max";
    _DAT_106cf590 = "operator time scale seed";
    _DAT_106cf5bc = "operator time scale min";
    _DAT_106cf5e8 = "operator time scale max";
    _DAT_106cf614 = "operator time strength random scale max";
    _DAT_106cf640 = "operator strength scale seed";
    _DAT_106cf66c = "operator strength random scale min";
    _DAT_106cf698 = "operator strength random scale max";
    _DAT_106cf6c4 = "operator end cap state";
    _DAT_106cf6f0 = "proportional fade in time";
    _DAT_106cf784 = "operator end fadein";
    _DAT_106cf7b0 = "operator start fadeout";
    _DAT_106cf7dc = "operator end fadeout";
    _DAT_106cf808 = "operator fade oscillate";
    _DAT_106cf834 = "operator time offset seed";
    _DAT_106cf860 = "operator time offset min";
    _DAT_106cf88c = "operator time offset max";
    _DAT_106cf8b8 = "operator time scale seed";
    _DAT_106cf8e4 = "operator time scale min";
    _DAT_106cf910 = "operator time scale max";
    _DAT_106cf93c = "operator time strength random scale max";
    _DAT_106cf968 = "operator strength scale seed";
    _DAT_106cf994 = "operator strength random scale min";
    _DAT_106cf9c0 = "operator strength random scale max";
    _DAT_106cf9ec = "operator end cap state";
    _DAT_106cfa18 = "proportional fade out time";
    _DAT_106cfaac = "operator end fadein";
    _DAT_106cfad8 = "operator start fadeout";
    _DAT_106cfb04 = "operator end fadeout";
    _DAT_106cfb30 = "operator fade oscillate";
    _DAT_106cfb5c = "operator time offset seed";
    _DAT_106cfb88 = "operator time offset min";
    _DAT_106cfbb4 = "operator time offset max";
    _DAT_106cfbe0 = "operator time scale seed";
    _DAT_106cfc0c = "operator time scale min";
    _DAT_106cfc38 = "operator time scale max";
    _DAT_106cfc64 = "operator time strength random scale max";
    _DAT_106cfc90 = "operator strength scale seed";
    _DAT_106cfcbc = "operator strength random scale min";
    _DAT_106cfce8 = "operator strength random scale max";
    _DAT_106cfd14 = "operator end cap state";
    _DAT_106cfd40 = "output field";
    _DAT_106cfd5c = "intchoice particlefield_scalar";
    _DAT_106cfd6c = "output minimum";
    _DAT_106cfd98 = "output maximum";
    _DAT_106cfe2c = "operator end fadein";
    _DAT_106cfe58 = "operator start fadeout";
    _DAT_106cfe84 = "operator end fadeout";
    _DAT_106cfeb0 = "operator fade oscillate";
    _DAT_106cfedc = "operator time offset seed";
    _DAT_106cff08 = "operator time offset min";
    _DAT_106cff34 = "operator time offset max";
    _DAT_106cff60 = "operator time scale seed";
    _DAT_106cff8c = "operator time scale min";
    _DAT_106cffb8 = "operator time scale max";
    _DAT_106cffe4 = "operator time strength random scale max";
    _DAT_106d0010 = "operator strength scale seed";
    _DAT_106d003c = "operator strength random scale min";
    _DAT_106d0068 = "operator strength random scale max";
    _DAT_106d0094 = "operator end cap state";
    _DAT_106d00c0 = "output field";
    _DAT_106d00dc = "intchoice particlefield_vector";
    _DAT_106d00ec = "output minimum";
    _DAT_106d00f0 = "0 0 0";
    _DAT_106d0118 = "output maximum";
    _DAT_106d011c = "1 1 1";
    _DAT_106d01ac = "operator end fadein";
    _DAT_106d01d8 = "operator start fadeout";
    _DAT_106d0204 = "operator end fadeout";
    _DAT_106d0230 = "operator fade oscillate";
    _DAT_106d025c = "operator time offset seed";
    _DAT_106d0288 = "operator time offset min";
    _DAT_106d02b4 = "operator time offset max";
    _DAT_106d02e0 = "operator time scale seed";
    _DAT_106d030c = "operator time scale min";
    _DAT_106d0338 = "operator time scale max";
    _DAT_106d0364 = "operator time strength random scale max";
    _DAT_106d0390 = "operator strength scale seed";
    _DAT_106d03bc = "operator strength random scale min";
    _DAT_106d03e8 = "operator strength random scale max";
    _DAT_106d0414 = "operator end cap state";
    _DAT_106d0440 = "oscillation field";
    _DAT_106d045c = "intchoice particlefield_scalar";
    _DAT_106d046c = "oscillation rate min";
    _DAT_106d0498 = "oscillation rate max";
    _DAT_106d04c4 = "oscillation frequency min";
    _DAT_106d04f0 = "oscillation frequency max";
    _DAT_106d051c = "proportional 0/1";
    _DAT_106d0548 = "start time min";
    _DAT_106d0574 = "start time max";
    _DAT_106d05a0 = "end time min";
    _DAT_106d05cc = "end time max";
    _DAT_106d05f8 = "start/end proportional";
    _DAT_106d0624 = "oscillation multiplier";
    _DAT_106d0650 = "oscillation start phase";
    _DAT_106d06e4 = "operator end fadein";
    _DAT_106d0710 = "operator start fadeout";
    _DAT_106d073c = "operator end fadeout";
    _DAT_106d0768 = "operator fade oscillate";
    _DAT_106d0794 = "operator time offset seed";
    _DAT_106d07c0 = "operator time offset min";
    _DAT_106d07ec = "operator time offset max";
    _DAT_106d0818 = "operator time scale seed";
    _DAT_106d0844 = "operator time scale min";
    _DAT_106d0870 = "operator time scale max";
    _DAT_106d089c = "operator time strength random scale max";
    _DAT_106d08c8 = "operator strength scale seed";
    _DAT_106d08f4 = "operator strength random scale min";
    _DAT_106d0920 = "operator strength random scale max";
    _DAT_106d094c = "operator end cap state";
    _DAT_106d0978 = "oscillation field";
    _DAT_106d0994 = "intchoice particlefield_scalar";
    _DAT_106d09a4 = "oscillation rate";
    _DAT_106d09d0 = "oscillation frequency";
    _DAT_106d09fc = "oscillation multiplier";
    _DAT_106d0a28 = "oscillation start phase";
    _DAT_106d0abc = "operator end fadein";
    _DAT_106d0ae8 = "operator start fadeout";
    _DAT_106d0b14 = "operator end fadeout";
    _DAT_106d0b40 = "operator fade oscillate";
    _DAT_106d0b6c = "operator time offset seed";
    _DAT_106d0b98 = "operator time offset min";
    _DAT_106d0bc4 = "operator time offset max";
    _DAT_106d0bf0 = "operator time scale seed";
    _DAT_106d0c1c = "operator time scale min";
    _DAT_106d0c48 = "operator time scale max";
    _DAT_106d0c74 = "operator time strength random scale max";
    _DAT_106d0ca0 = "operator strength scale seed";
    _DAT_106d0ccc = "operator strength random scale min";
    _DAT_106d0cf8 = "operator strength random scale max";
    _DAT_106d0d24 = "operator end cap state";
    _DAT_106d0d50 = "oscillation field";
    _DAT_106d0d6c = "intchoice particlefield_vector";
    _DAT_106d0d7c = "oscillation rate min";
    _DAT_106d0d80 = "0 0 0";
    _DAT_106d0da8 = "oscillation rate max";
    _DAT_106d0dac = "0 0 0";
    _DAT_106d0dd4 = "oscillation frequency min";
    _DAT_106d0dd8 = "1 1 1";
    _DAT_106d0e00 = "oscillation frequency max";
    _DAT_106d0e04 = "1 1 1";
    _DAT_106d0e2c = "proportional 0/1";
    _DAT_106d0e58 = "start time min";
    _DAT_106d0e84 = "start time max";
    _DAT_106d0eb0 = "end time min";
    _DAT_106d0edc = "end time max";
    _DAT_106d0f08 = "start/end proportional";
    _DAT_106d0f34 = "oscillation multiplier";
    _DAT_106d0f60 = "oscillation start phase";
    _DAT_106d0ff4 = "operator end fadein";
    _DAT_106d1020 = "operator start fadeout";
    _DAT_106d104c = "operator end fadeout";
    _DAT_106d1078 = "operator fade oscillate";
    _DAT_106d10a4 = "operator time offset seed";
    _DAT_106d10d0 = "operator time offset min";
    _DAT_106d10fc = "operator time offset max";
    _DAT_106d1128 = "operator time scale seed";
    _DAT_106d1154 = "operator time scale min";
    _DAT_106d1180 = "operator time scale max";
    _DAT_106d11ac = "operator time strength random scale max";
    _DAT_106d11d8 = "operator strength scale seed";
    _DAT_106d1204 = "operator strength random scale min";
    _DAT_106d1230 = "operator strength random scale max";
    _DAT_106d125c = "operator end cap state";
    _DAT_106d1288 = "oscillation field";
    _DAT_106d12a4 = "intchoice particlefield_vector";
    _DAT_106d12b4 = "oscillation rate";
    _DAT_106d12b8 = "0 0 0";
    _DAT_106d12e0 = "oscillation frequency";
    _DAT_106d12e4 = "1 1 1";
    _DAT_106d130c = "oscillation multiplier";
    _DAT_106d1338 = "oscillation start phase";
    _DAT_106d13cc = "operator end fadein";
    _DAT_106d13f8 = "operator start fadeout";
    _DAT_106d1424 = "operator end fadeout";
    _DAT_106d1450 = "operator fade oscillate";
    _DAT_106d147c = "operator time offset seed";
    _DAT_106d14a8 = "operator time offset min";
    _DAT_106d14d4 = "operator time offset max";
    _DAT_106d1500 = "operator time scale seed";
    _DAT_106d152c = "operator time scale min";
    _DAT_106d1558 = "operator time scale max";
    _DAT_106d1584 = "operator time strength random scale max";
    _DAT_106d15b0 = "operator strength scale seed";
    _DAT_106d15dc = "operator strength random scale min";
    _DAT_106d1608 = "operator strength random scale max";
    _DAT_106d1634 = "operator end cap state";
    _DAT_106d1660 = "difference minimum";
    _DAT_106d168c = "difference maximum";
    _DAT_106d16b8 = "input field";
    _DAT_106d16d4 = "intchoice particlefield_vector";
    _DAT_106d16e4 = "output field";
    _DAT_106d1700 = "intchoice particlefield_scalar";
    _DAT_106d1710 = "output minimum";
    _DAT_106d173c = "output maximum";
    _DAT_106d1768 = "output is scalar of initial random range";
    _DAT_106d1794 = "only active within specified difference";
    _DAT_106d17c0 = "also set ouput to previous particle";
    _DAT_106d1854 = "operator end fadein";
    _DAT_106d1880 = "operator start fadeout";
    _DAT_106d18ac = "operator end fadeout";
    _DAT_106d18d8 = "operator fade oscillate";
    _DAT_106d1904 = "operator time offset seed";
    _DAT_106d1930 = "operator time offset min";
    _DAT_106d195c = "operator time offset max";
    _DAT_106d1988 = "operator time scale seed";
    _DAT_106d19b4 = "operator time scale min";
    _DAT_106d19e0 = "operator time scale max";
    _DAT_106d1a0c = "operator time strength random scale max";
    _DAT_106d1a38 = "operator strength scale seed";
    _DAT_106d1a64 = "operator strength random scale min";
    _DAT_106d1a90 = "operator strength random scale max";
    _DAT_106d1abc = "operator end cap state";
    _DAT_106d1ae8 = "input field";
    _DAT_106d1b04 = "intchoice particlefield_scalar";
    _DAT_106d1b14 = "input minimum";
    _DAT_106d1b40 = "input maximum";
    _DAT_106d1b6c = "output field";
    _DAT_106d1b88 = "intchoice particlefield_scalar";
    _DAT_106d1b98 = "output minimum";
    _DAT_106d1bc4 = "output maximum";
    _DAT_106d1c5c = "operator end fadein";
    _DAT_106d1c88 = "operator start fadeout";
    _DAT_106d1cb4 = "operator end fadeout";
    _DAT_106d1ce0 = "operator fade oscillate";
    _DAT_106d1d0c = "operator time offset seed";
    _DAT_106d1d38 = "operator time offset min";
    _DAT_106d1d64 = "operator time offset max";
    _DAT_106d1d90 = "operator time scale seed";
    _DAT_106d1dbc = "operator time scale min";
    _DAT_106d1de8 = "operator time scale max";
    _DAT_106d1e14 = "operator time strength random scale max";
    _DAT_106d1e40 = "operator strength scale seed";
    _DAT_106d1e6c = "operator strength random scale min";
    _DAT_106d1e98 = "operator strength random scale max";
    _DAT_106d1ec4 = "operator end cap state";
    _DAT_106d1ef0 = "start time";
    _DAT_106d1f1c = "end time";
    _DAT_106d1f48 = "output field";
    _DAT_106d1f64 = "intchoice particlefield_scalar";
    _DAT_106d1f74 = "value to lerp to";
    _DAT_106d200c = "operator end fadein";
    _DAT_106d2038 = "operator start fadeout";
    _DAT_106d2064 = "operator end fadeout";
    _DAT_106d2090 = "operator fade oscillate";
    _DAT_106d20bc = "operator time offset seed";
    _DAT_106d20e8 = "operator time offset min";
    _DAT_106d2114 = "operator time offset max";
    _DAT_106d2140 = "operator time scale seed";
    _DAT_106d216c = "operator time scale min";
    _DAT_106d2198 = "operator time scale max";
    _DAT_106d21c4 = "operator time strength random scale max";
    _DAT_106d21f0 = "operator strength scale seed";
    _DAT_106d221c = "operator strength random scale min";
    _DAT_106d2248 = "operator strength random scale max";
    _DAT_106d2274 = "operator end cap state";
    _DAT_106d22a0 = "lerp time";
    _DAT_106d22cc = "output field";
    _DAT_106d22e8 = "intchoice particlefield_scalar";
    _DAT_106d22f8 = "value to lerp to";
    _DAT_106d238c = "operator end fadein";
    _DAT_106d23b8 = "operator start fadeout";
    _DAT_106d23e4 = "operator end fadeout";
    _DAT_106d2410 = "operator fade oscillate";
    _DAT_106d243c = "operator time offset seed";
    _DAT_106d2468 = "operator time offset min";
    _DAT_106d2494 = "operator time offset max";
    _DAT_106d24c0 = "operator time scale seed";
    _DAT_106d24ec = "operator time scale min";
    _DAT_106d2518 = "operator time scale max";
    _DAT_106d2544 = "operator time strength random scale max";
    _DAT_106d2570 = "operator strength scale seed";
    _DAT_106d259c = "operator strength random scale min";
    _DAT_106d25c8 = "operator strength random scale max";
    _DAT_106d25f4 = "operator end cap state";
    _DAT_106d2620 = "lerp time";
    _DAT_106d264c = "output field";
    _DAT_106d2668 = "intchoice particlefield_vector";
    _DAT_106d2678 = "value to lerp to";
    _DAT_106d267c = "0 0 0";
    _DAT_106d270c = "operator end fadein";
    _DAT_106d2738 = "operator start fadeout";
    _DAT_106d2764 = "operator end fadeout";
    _DAT_106d2790 = "operator fade oscillate";
    _DAT_106d27bc = "operator time offset seed";
    _DAT_106d27e8 = "operator time offset min";
    _DAT_106d2814 = "operator time offset max";
    _DAT_106d2840 = "operator time scale seed";
    _DAT_106d286c = "operator time scale min";
    _DAT_106d2898 = "operator time scale max";
    _DAT_106d28c4 = "operator time strength random scale max";
    _DAT_106d28f0 = "operator strength scale seed";
    _DAT_106d291c = "operator strength random scale min";
    _DAT_106d2948 = "operator strength random scale max";
    _DAT_106d2974 = "operator end cap state";
    _DAT_106d29a0 = "start time";
    _DAT_106d29cc = "end time";
    _DAT_106d29f8 = "output field";
    _DAT_106d2a14 = "intchoice particlefield_vector";
    _DAT_106d2a24 = "value to lerp to";
    _DAT_106d2a28 = "0 0 0";
    _DAT_106d2abc = "operator end fadein";
    _DAT_106d2ae8 = "operator start fadeout";
    _DAT_106d2b14 = "operator end fadeout";
    _DAT_106d2b40 = "operator fade oscillate";
    _DAT_106d2b6c = "operator time offset seed";
    _DAT_106d2b98 = "operator time offset min";
    _DAT_106d2bc4 = "operator time offset max";
    _DAT_106d2bf0 = "operator time scale seed";
    _DAT_106d2c1c = "operator time scale min";
    _DAT_106d2c48 = "operator time scale max";
    _DAT_106d2c74 = "operator time strength random scale max";
    _DAT_106d2ca0 = "operator strength scale seed";
    _DAT_106d2ccc = "operator strength random scale min";
    _DAT_106d2cf8 = "operator strength random scale max";
    _DAT_106d2d24 = "operator end cap state";
    _DAT_106d2d50 = "input minimum";
    _DAT_106d2d7c = "input maximum";
    _DAT_106d2da8 = "output field";
    _DAT_106d2dc4 = "intchoice particlefield_scalar";
    _DAT_106d2dd4 = "output minimum";
    _DAT_106d2e00 = "output maximum";
    _DAT_106d2e2c = "output is scalar of initial random range";
    _DAT_106d2e58 = "output is scalar of current value";
    _DAT_106d2eec = "operator end fadein";
    _DAT_106d2f18 = "operator start fadeout";
    _DAT_106d2f44 = "operator end fadeout";
    _DAT_106d2f70 = "operator fade oscillate";
    _DAT_106d2f9c = "operator time offset seed";
    _DAT_106d2fc8 = "operator time offset min";
    _DAT_106d2ff4 = "operator time offset max";
    _DAT_106d3020 = "operator time scale seed";
    _DAT_106d304c = "operator time scale min";
    _DAT_106d3078 = "operator time scale max";
    _DAT_106d30a4 = "operator time strength random scale max";
    _DAT_106d30d0 = "operator strength scale seed";
    _DAT_106d30fc = "operator strength random scale min";
    _DAT_106d3128 = "operator strength random scale max";
    _DAT_106d3154 = "operator end cap state";
    _DAT_106d3180 = "input control point";
    _DAT_106d31ac = "input minimum";
    _DAT_106d31d8 = "input maximum";
    _DAT_106d3204 = "output control point";
    _DAT_106d3230 = "Output field 0-2 X/Y/Z";
    _DAT_106d325c = "output minimum";
    _DAT_106d3288 = "output maximum";
    _DAT_106d331c = "operator end fadein";
    _DAT_106d3348 = "operator start fadeout";
    _DAT_106d3374 = "operator end fadeout";
    _DAT_106d33a0 = "operator fade oscillate";
    _DAT_106d33cc = "operator time offset seed";
    _DAT_106d33f8 = "operator time offset min";
    _DAT_106d3424 = "operator time offset max";
    _DAT_106d3450 = "operator time scale seed";
    _DAT_106d347c = "operator time scale min";
    _DAT_106d34a8 = "operator time scale max";
    _DAT_106d34d4 = "operator time strength random scale max";
    _DAT_106d3500 = "operator strength scale seed";
    _DAT_106d352c = "operator strength random scale min";
    _DAT_106d3558 = "operator strength random scale max";
    _DAT_106d3584 = "operator end cap state";
    _DAT_106d35b0 = "input control point";
    _DAT_106d35dc = "input volume minimum in cubic units";
    _DAT_106d3608 = "input volume maximum in cubic units";
    _DAT_106d3634 = "output control point";
    _DAT_106d3660 = "output minimum";
    _DAT_106d368c = "output maximum";
    _DAT_106d3724 = "operator end fadein";
    _DAT_106d3750 = "operator start fadeout";
    _DAT_106d377c = "operator end fadeout";
    _DAT_106d37a8 = "operator fade oscillate";
    _DAT_106d37d4 = "operator time offset seed";
    _DAT_106d3800 = "operator time offset min";
    _DAT_106d382c = "operator time offset max";
    _DAT_106d3858 = "operator time scale seed";
    _DAT_106d3884 = "operator time scale min";
    _DAT_106d38b0 = "operator time scale max";
    _DAT_106d38dc = "operator time strength random scale max";
    _DAT_106d3908 = "operator strength scale seed";
    _DAT_106d3934 = "operator strength random scale min";
    _DAT_106d3960 = "operator strength random scale max";
    _DAT_106d398c = "operator end cap state";
    _DAT_106d39b8 = "input volume minimum in cubic units";
    _DAT_106d39e4 = "input volume maximum in cubic units";
    _DAT_106d3a10 = "output control point";
    _DAT_106d3a3c = "output minimum";
    _DAT_106d3a68 = "output maximum";
    _DAT_106d3afc = "operator end fadein";
    _DAT_106d3b28 = "operator start fadeout";
    _DAT_106d3b54 = "operator end fadeout";
    _DAT_106d3b80 = "operator fade oscillate";
    _DAT_106d3bac = "operator time offset seed";
    _DAT_106d3bd8 = "operator time offset min";
    _DAT_106d3c04 = "operator time offset max";
    _DAT_106d3c30 = "operator time scale seed";
    _DAT_106d3c5c = "operator time scale min";
    _DAT_106d3c88 = "operator time scale max";
    _DAT_106d3cb4 = "operator time strength random scale max";
    _DAT_106d3ce0 = "operator strength scale seed";
    _DAT_106d3d0c = "operator strength random scale min";
    _DAT_106d3d38 = "operator strength random scale max";
    _DAT_106d3d64 = "operator end cap state";
    _DAT_106d3d90 = "Scalar field";
    _DAT_106d3dac = "intchoice particlefield_scalar";
    _DAT_106d3dbc = "input volume minimum";
    _DAT_106d3de8 = "input volume maximum";
    _DAT_106d3e14 = "output control point";
    _DAT_106d3e40 = "output minimum";
    _DAT_106d3e6c = "output maximum";
    _DAT_106d3f04 = "operator end fadein";
    _DAT_106d3f30 = "operator start fadeout";
    _DAT_106d3f5c = "operator end fadeout";
    _DAT_106d3f88 = "operator fade oscillate";
    _DAT_106d3fb4 = "operator time offset seed";
    _DAT_106d3fe0 = "operator time offset min";
    _DAT_106d400c = "operator time offset max";
    _DAT_106d4038 = "operator time scale seed";
    _DAT_106d4064 = "operator time scale min";
    _DAT_106d4090 = "operator time scale max";
    _DAT_106d40bc = "operator time strength random scale max";
    _DAT_106d40e8 = "operator strength scale seed";
    _DAT_106d4114 = "operator strength random scale min";
    _DAT_106d4140 = "operator strength random scale max";
    _DAT_106d416c = "operator end cap state";
    _DAT_106d4198 = "ramp field";
    _DAT_106d41b4 = "intchoice particlefield_scalar";
    _DAT_106d41c4 = "ramp rate min";
    _DAT_106d41f0 = "ramp rate max";
    _DAT_106d421c = "start time min";
    _DAT_106d4248 = "start time max";
    _DAT_106d4274 = "end time min";
    _DAT_106d42a0 = "end time max";
    _DAT_106d42cc = "start/end proportional";
    _DAT_106d4364 = "operator end fadein";
    _DAT_106d4390 = "operator start fadeout";
    _DAT_106d43bc = "operator end fadeout";
    _DAT_106d43e8 = "operator fade oscillate";
    _DAT_106d4414 = "operator time offset seed";
    _DAT_106d4440 = "operator time offset min";
    _DAT_106d446c = "operator time offset max";
    _DAT_106d4498 = "operator time scale seed";
    _DAT_106d44c4 = "operator time scale min";
    _DAT_106d44f0 = "operator time scale max";
    _DAT_106d451c = "operator time strength random scale max";
    _DAT_106d4548 = "operator strength scale seed";
    _DAT_106d4574 = "operator strength random scale min";
    _DAT_106d45a0 = "operator strength random scale max";
    _DAT_106d45cc = "operator end cap state";
    _DAT_106d45f8 = "ramp field";
    _DAT_106d4614 = "intchoice particlefield_scalar";
    _DAT_106d4624 = "ramp rate min";
    _DAT_106d4650 = "ramp rate max";
    _DAT_106d467c = "start time min";
    _DAT_106d46a8 = "start time max";
    _DAT_106d46d4 = "end time min";
    _DAT_106d4700 = "end time max";
    _DAT_106d472c = "start/end proportional";
    _DAT_106d4758 = "ease out";
    _DAT_106d481c = "operator end fadein";
    _DAT_106d4848 = "operator start fadeout";
    _DAT_106d4874 = "operator end fadeout";
    _DAT_106d48a0 = "operator fade oscillate";
    _DAT_106d48cc = "operator time offset seed";
    _DAT_106d48f8 = "operator time offset min";
    _DAT_106d4924 = "operator time offset max";
    _DAT_106d4950 = "operator time scale seed";
    _DAT_106d497c = "operator time scale min";
    _DAT_106d49a8 = "operator time scale max";
    _DAT_106d49d4 = "operator time strength random scale max";
    _DAT_106d4a00 = "operator strength scale seed";
    _DAT_106d4a2c = "operator strength random scale min";
    _DAT_106d4a58 = "operator strength random scale max";
    _DAT_106d4a84 = "operator end cap state";
    _DAT_106d4ab0 = "ramp field";
    _DAT_106d4acc = "intchoice particlefield_scalar";
    _DAT_106d4adc = "ramp rate";
    _DAT_106d4b08 = "start time";
    _DAT_106d4b34 = "end time";
    _DAT_106d4bcc = "operator end fadein";
    _DAT_106d4bf8 = "operator start fadeout";
    _DAT_106d4c24 = "operator end fadeout";
    _DAT_106d4c50 = "operator fade oscillate";
    _DAT_106d4c7c = "operator time offset seed";
    _DAT_106d4ca8 = "operator time offset min";
    _DAT_106d4cd4 = "operator time offset max";
    _DAT_106d4d00 = "operator time scale seed";
    _DAT_106d4d2c = "operator time scale min";
    _DAT_106d4d58 = "operator time scale max";
    _DAT_106d4d84 = "operator time strength random scale max";
    _DAT_106d4db0 = "operator strength scale seed";
    _DAT_106d4ddc = "operator strength random scale min";
    _DAT_106d4e08 = "operator strength random scale max";
    _DAT_106d4e34 = "operator end cap state";
    _DAT_106d4e60 = "ramp field";
    _DAT_106d4e7c = "intchoice particlefield_scalar";
    _DAT_106d4e8c = "ramp rate";
    _DAT_106d4eb8 = "start time";
    _DAT_106d4ee4 = "end time";
    _DAT_106d4f10 = "ease out";
    _DAT_106d4fa4 = "operator end fadein";
    _DAT_106d4fd0 = "operator start fadeout";
    _DAT_106d4ffc = "operator end fadeout";
    _DAT_106d5028 = "operator fade oscillate";
    _DAT_106d5054 = "operator time offset seed";
    _DAT_106d5080 = "operator time offset min";
    _DAT_106d50ac = "operator time offset max";
    _DAT_106d50d8 = "operator time scale seed";
    _DAT_106d5104 = "operator time scale min";
    _DAT_106d5130 = "operator time scale max";
    _DAT_106d515c = "operator time strength random scale max";
    _DAT_106d5188 = "operator strength scale seed";
    _DAT_106d51b4 = "operator strength random scale min";
    _DAT_106d51e0 = "operator strength random scale max";
    _DAT_106d520c = "operator end cap state";
    _DAT_106d5238 = "noise coordinate scale";
    _DAT_106d5264 = "output field";
    _DAT_106d5280 = "intchoice particlefield_scalar";
    _DAT_106d5290 = "output minimum";
    _DAT_106d52bc = "output maximum";
    _DAT_106d52e8 = "additive";
    _DAT_106d537c = "operator end fadein";
    _DAT_106d53a8 = "operator start fadeout";
    _DAT_106d53d4 = "operator end fadeout";
    _DAT_106d5400 = "operator fade oscillate";
    _DAT_106d542c = "operator time offset seed";
    _DAT_106d5458 = "operator time offset min";
    _DAT_106d5484 = "operator time offset max";
    _DAT_106d54b0 = "operator time scale seed";
    _DAT_106d54dc = "operator time scale min";
    _DAT_106d5508 = "operator time scale max";
    _DAT_106d5534 = "operator time strength random scale max";
    _DAT_106d5560 = "operator strength scale seed";
    _DAT_106d558c = "operator strength random scale min";
    _DAT_106d55b8 = "operator strength random scale max";
    _DAT_106d55e4 = "operator end cap state";
    _DAT_106d5610 = "noise coordinate scale";
    _DAT_106d563c = "output field";
    _DAT_106d5658 = "intchoice particlefield_vector";
    _DAT_106d5668 = "output minimum";
    _DAT_106d566c = "0 0 0";
    _DAT_106d5694 = "output maximum";
    _DAT_106d5698 = "1 1 1";
    _DAT_106d56c0 = "additive";
    _DAT_106d5754 = "operator end fadein";
    _DAT_106d5780 = "operator start fadeout";
    _DAT_106d57ac = "operator end fadeout";
    _DAT_106d57d8 = "operator fade oscillate";
    _DAT_106d5804 = "operator time offset seed";
    _DAT_106d5830 = "operator time offset min";
    _DAT_106d585c = "operator time offset max";
    _DAT_106d5888 = "operator time scale seed";
    _DAT_106d58b4 = "operator time scale min";
    _DAT_106d58e0 = "operator time scale max";
    _DAT_106d590c = "operator time strength random scale max";
    _DAT_106d5938 = "operator strength scale seed";
    _DAT_106d5964 = "operator strength random scale min";
    _DAT_106d5990 = "operator strength random scale max";
    _DAT_106d59bc = "operator end cap state";
    _DAT_106d5a54 = "operator end fadein";
    _DAT_106d5a80 = "operator start fadeout";
    _DAT_106d5aac = "operator end fadeout";
    _DAT_106d5ad8 = "operator fade oscillate";
    _DAT_106d5b04 = "operator time offset seed";
    _DAT_106d5b30 = "operator time offset min";
    _DAT_106d5b5c = "operator time offset max";
    _DAT_106d5b88 = "operator time scale seed";
    _DAT_106d5bb4 = "operator time scale min";
    _DAT_106d5be0 = "operator time scale max";
    _DAT_106d5c0c = "operator time strength random scale max";
    _DAT_106d5c38 = "operator strength scale seed";
    _DAT_106d5c64 = "operator strength random scale min";
    _DAT_106d5c90 = "operator strength random scale max";
    _DAT_106d5cbc = "operator end cap state";
    _DAT_106d5ce8 = "minimum velocity";
    _DAT_106d5d7c = "operator end fadein";
    _DAT_106d5da8 = "operator start fadeout";
    _DAT_106d5dd4 = "operator end fadeout";
    _DAT_106d5e00 = "operator fade oscillate";
    _DAT_106d5e2c = "operator time offset seed";
    _DAT_106d5e58 = "operator time offset min";
    _DAT_106d5e84 = "operator time offset max";
    _DAT_106d5eb0 = "operator time scale seed";
    _DAT_106d5edc = "operator time scale min";
    _DAT_106d5f08 = "operator time scale max";
    _DAT_106d5f34 = "operator time strength random scale max";
    _DAT_106d5f60 = "operator strength scale seed";
    _DAT_106d5f8c = "operator strength random scale min";
    _DAT_106d5fb8 = "operator strength random scale max";
    _DAT_106d5fe4 = "operator end cap state";
    _DAT_106d6010 = "minimum alpha";
    _DAT_106d60a4 = "operator end fadein";
    _DAT_106d60d0 = "operator start fadeout";
    _DAT_106d60fc = "operator end fadeout";
    _DAT_106d6128 = "operator fade oscillate";
    _DAT_106d6154 = "operator time offset seed";
    _DAT_106d6180 = "operator time offset min";
    _DAT_106d61ac = "operator time offset max";
    _DAT_106d61d8 = "operator time scale seed";
    _DAT_106d6204 = "operator time scale min";
    _DAT_106d6230 = "operator time scale max";
    _DAT_106d625c = "operator time strength random scale max";
    _DAT_106d6288 = "operator strength scale seed";
    _DAT_106d62b4 = "operator strength random scale min";
    _DAT_106d62e0 = "operator strength random scale max";
    _DAT_106d630c = "operator end cap state";
    _DAT_106d6338 = "minimum radius";
    _DAT_106d63cc = "operator end fadein";
    _DAT_106d63f8 = "operator start fadeout";
    _DAT_106d6424 = "operator end fadeout";
    _DAT_106d6450 = "operator fade oscillate";
    _DAT_106d647c = "operator time offset seed";
    _DAT_106d64a8 = "operator time offset min";
    _DAT_106d64d4 = "operator time offset max";
    _DAT_106d6500 = "operator time scale seed";
    _DAT_106d652c = "operator time scale min";
    _DAT_106d6558 = "operator time scale max";
    _DAT_106d6584 = "operator time strength random scale max";
    _DAT_106d65b0 = "operator strength scale seed";
    _DAT_106d65dc = "operator strength random scale min";
    _DAT_106d6608 = "operator strength random scale max";
    _DAT_106d6634 = "operator end cap state";
    _DAT_106d6660 = "count to maintain";
    _DAT_106d668c = "decay delay";
    _DAT_106d66b8 = "maintain count scale control point";
    _DAT_106d66e4 = "maintain count scale control point field";
    _DAT_106d677c = "operator end fadein";
    _DAT_106d67a8 = "operator start fadeout";
    _DAT_106d67d4 = "operator end fadeout";
    _DAT_106d6800 = "operator fade oscillate";
    _DAT_106d682c = "operator time offset seed";
    _DAT_106d6858 = "operator time offset min";
    _DAT_106d6884 = "operator time offset max";
    _DAT_106d68b0 = "operator time scale seed";
    _DAT_106d68dc = "operator time scale min";
    _DAT_106d6908 = "operator time scale max";
    _DAT_106d6934 = "operator time strength random scale max";
    _DAT_106d6960 = "operator strength scale seed";
    _DAT_106d698c = "operator strength random scale min";
    _DAT_106d69b8 = "operator strength random scale max";
    _DAT_106d69e4 = "operator end cap state";
    _DAT_106d6a10 = "Cull Start Time";
    _DAT_106d6a3c = "Cull End Time";
    _DAT_106d6a68 = "Cull Time Exponent";
    _DAT_106d6a94 = "Cull Percentage";
    _DAT_106d6b2c = "operator end fadein";
    _DAT_106d6b58 = "operator start fadeout";
    _DAT_106d6b84 = "operator end fadeout";
    _DAT_106d6bb0 = "operator fade oscillate";
    _DAT_106d6bdc = "operator time offset seed";
    _DAT_106d6c08 = "operator time offset min";
    _DAT_106d6c34 = "operator time offset max";
    _DAT_106d6c60 = "operator time scale seed";
    _DAT_106d6c8c = "operator time scale min";
    _DAT_106d6cb8 = "operator time scale max";
    _DAT_106d6ce4 = "operator time strength random scale max";
    _DAT_106d6d10 = "operator strength scale seed";
    _DAT_106d6d3c = "operator strength random scale min";
    _DAT_106d6d68 = "operator strength random scale max";
    _DAT_106d6d94 = "operator end cap state";
    _DAT_106d6dc0 = "spin_rate_degrees";
    _DAT_106d6dec = "spin_stop_time";
    _DAT_106d6e18 = "spin_rate_min";
    _DAT_106d6eac = "operator end fadein";
    _DAT_106d6ed8 = "operator start fadeout";
    _DAT_106d6f04 = "operator end fadeout";
    _DAT_106d6f30 = "operator fade oscillate";
    _DAT_106d6f5c = "operator time offset seed";
    _DAT_106d6f88 = "operator time offset min";
    _DAT_106d6fb4 = "operator time offset max";
    _DAT_106d6fe0 = "operator time scale seed";
    _DAT_106d700c = "operator time scale min";
    _DAT_106d7038 = "operator time scale max";
    _DAT_106d7064 = "operator time strength random scale max";
    _DAT_106d7090 = "operator strength scale seed";
    _DAT_106d70bc = "operator strength random scale min";
    _DAT_106d70e8 = "operator strength random scale max";
    _DAT_106d7114 = "operator end cap state";
    _DAT_106d71ac = "operator end fadein";
    _DAT_106d71d8 = "operator start fadeout";
    _DAT_106d7204 = "operator end fadeout";
    _DAT_106d7230 = "operator fade oscillate";
    _DAT_106d725c = "operator time offset seed";
    _DAT_106d7288 = "operator time offset min";
    _DAT_106d72b4 = "operator time offset max";
    _DAT_106d72e0 = "operator time scale seed";
    _DAT_106d730c = "operator time scale min";
    _DAT_106d7338 = "operator time scale max";
    _DAT_106d7364 = "operator time strength random scale max";
    _DAT_106d7390 = "operator strength scale seed";
    _DAT_106d73bc = "operator strength random scale min";
    _DAT_106d73e8 = "operator strength random scale max";
    _DAT_106d7414 = "operator end cap state";
    _DAT_106d7440 = "yaw_rate_degrees";
    _DAT_106d746c = "yaw_stop_time";
    _DAT_106d7498 = "yaw_rate_min";
    _DAT_106d752c = "operator end fadein";
    _DAT_106d7558 = "operator start fadeout";
    _DAT_106d7584 = "operator end fadeout";
    _DAT_106d75b0 = "operator fade oscillate";
    _DAT_106d75dc = "operator time offset seed";
    _DAT_106d7608 = "operator time offset min";
    _DAT_106d7634 = "operator time offset max";
    _DAT_106d7660 = "operator time scale seed";
    _DAT_106d768c = "operator time scale min";
    _DAT_106d76b8 = "operator time scale max";
    _DAT_106d76e4 = "operator time strength random scale max";
    _DAT_106d7710 = "operator strength scale seed";
    _DAT_106d773c = "operator strength random scale min";
    _DAT_106d7768 = "operator strength random scale max";
    _DAT_106d7794 = "operator end cap state";
    _DAT_106d77c0 = "start_time";
    _DAT_106d77ec = "end_time";
    _DAT_106d7818 = "radius_start_scale";
    _DAT_106d7844 = "radius_end_scale";
    _DAT_106d7870 = "ease_in_and_out";
    _DAT_106d789c = "scale_bias";
    _DAT_106d7934 = "operator end fadein";
    _DAT_106d7960 = "operator start fadeout";
    _DAT_106d798c = "operator end fadeout";
    _DAT_106d79b8 = "operator fade oscillate";
    _DAT_106d79e4 = "operator time offset seed";
    _DAT_106d7a10 = "operator time offset min";
    _DAT_106d7a3c = "operator time offset max";
    _DAT_106d7a68 = "operator time scale seed";
    _DAT_106d7a94 = "operator time scale min";
    _DAT_106d7ac0 = "operator time scale max";
    _DAT_106d7aec = "operator time strength random scale max";
    _DAT_106d7b18 = "operator strength scale seed";
    _DAT_106d7b44 = "operator strength random scale min";
    _DAT_106d7b70 = "operator strength random scale max";
    _DAT_106d7b9c = "operator end cap state";
    _DAT_106d7bc8 = "color_fade";
    _DAT_106d7bcc = "255 255 255 255";
    _DAT_106d7bf4 = "fade_start_time";
    _DAT_106d7c20 = "fade_end_time";
    _DAT_106d7c4c = "ease_in_and_out";
    _DAT_106d7c78 = "output field";
    _DAT_106d7c94 = "intchoice particlefield_vector";
    _DAT_106d7d0c = "operator end fadein";
    _DAT_106d7d38 = "operator start fadeout";
    _DAT_106d7d64 = "operator end fadeout";
    _DAT_106d7d90 = "operator fade oscillate";
    _DAT_106d7dbc = "operator time offset seed";
    _DAT_106d7de8 = "operator time offset min";
    _DAT_106d7e14 = "operator time offset max";
    _DAT_106d7e40 = "operator time scale seed";
    _DAT_106d7e6c = "operator time scale min";
    _DAT_106d7e98 = "operator time scale max";
    _DAT_106d7ec4 = "operator time strength random scale max";
    _DAT_106d7ef0 = "operator strength scale seed";
    _DAT_106d7f1c = "operator strength random scale min";
    _DAT_106d7f48 = "operator strength random scale max";
    _DAT_106d7f74 = "operator end cap state";
    _DAT_106d7fa0 = "control_point_number";
    _DAT_106d7fcc = "start_fadeout_min";
    _DAT_106d7ff8 = "start_fadeout_max";
    _DAT_106d8024 = "start_fadeout_exponent";
    _DAT_106d8050 = "end_fadeout_min";
    _DAT_106d807c = "end_fadeout_max";
    _DAT_106d80a8 = "end_fadeout_exponent";
    _DAT_106d80d4 = "distance fade range";
    _DAT_106d8100 = "lock rotation";
    _DAT_106d8194 = "operator end fadein";
    _DAT_106d81c0 = "operator start fadeout";
    _DAT_106d81ec = "operator end fadeout";
    _DAT_106d8218 = "operator fade oscillate";
    _DAT_106d8244 = "operator time offset seed";
    _DAT_106d8270 = "operator time offset min";
    _DAT_106d829c = "operator time offset max";
    _DAT_106d82c8 = "operator time scale seed";
    _DAT_106d82f4 = "operator time scale min";
    _DAT_106d8320 = "operator time scale max";
    _DAT_106d834c = "operator time strength random scale max";
    _DAT_106d8378 = "operator strength scale seed";
    _DAT_106d83a4 = "operator strength random scale min";
    _DAT_106d83d0 = "operator strength random scale max";
    _DAT_106d83fc = "operator end cap state";
    _DAT_106d8428 = "Light 1 Control Point";
    _DAT_106d8454 = "Light 1 Control Point Offset";
    _DAT_106d8458 = "0 0 0";
    _DAT_106d8480 = "Light 1 Type 0=Point 1=Spot";
    _DAT_106d84ac = "Light 1 Color";
    _DAT_106d84b0 = "0 0 0 255";
    _DAT_106d84d8 = "Light 1 Dynamic Light";
    _DAT_106d8504 = "Light 1 Direction";
    _DAT_106d8508 = "0 0 0";
    _DAT_106d8530 = "Light 1 50% Distance";
    _DAT_106d855c = "Light 1 0% Distance";
    _DAT_106d8588 = "Light 1 Spot Inner Cone";
    _DAT_106d85b4 = "Light 1 Spot Outer Cone";
    _DAT_106d85e0 = "Light 2 Control Point";
    _DAT_106d860c = "Light 2 Control Point Offset";
    _DAT_106d8610 = "0 0 0";
    _DAT_106d8638 = "Light 2 Type 0=Point 1=Spot";
    _DAT_106d8664 = "Light 2 Color";
    _DAT_106d8668 = "0 0 0 255";
    _DAT_106d8690 = "Light 2 Dynamic Light";
    _DAT_106d86bc = "Light 2 Direction";
    _DAT_106d86c0 = "0 0 0";
    _DAT_106d86e8 = "Light 2 50% Distance";
    _DAT_106d8714 = "Light 2 0% Distance";
    _DAT_106d8740 = "Light 2 Spot Inner Cone";
    _DAT_106d876c = "Light 2 Spot Outer Cone";
    _DAT_106d8798 = "Light 3 Control Point";
    _DAT_106d87c4 = "Light 3 Control Point Offset";
    _DAT_106d87c8 = "0 0 0";
    _DAT_106d87f0 = "Light 3 Type 0=Point 1=Spot";
    _DAT_106d881c = "Light 3 Color";
    _DAT_106d8820 = "0 0 0 255";
    _DAT_106d8848 = "Light 3 Dynamic Light";
    _DAT_106d8874 = "Light 3 Direction";
    _DAT_106d8878 = "0 0 0";
    _DAT_106d88a0 = "Light 3 50% Distance";
    _DAT_106d88cc = "Light 3 0% Distance";
    _DAT_106d88f8 = "Light 3 Spot Inner Cone";
    _DAT_106d8924 = "Light 3 Spot Outer Cone";
    _DAT_106d8950 = "Light 4 Control Point";
    _DAT_106d897c = "Light 4 Control Point Offset";
    _DAT_106d8980 = "0 0 0";
    _DAT_106d89a8 = "Light 4 Type 0=Point 1=Spot";
    _DAT_106d89d4 = "Light 4 Color";
    _DAT_106d89d8 = "0 0 0 255";
    _DAT_106d8a00 = "Light 4 Dynamic Light";
    _DAT_106d8a2c = "Light 4 Direction";
    _DAT_106d8a30 = "0 0 0";
    _DAT_106d8a58 = "Light 4 50% Distance";
    _DAT_106d8a84 = "Light 4 0% Distance";
    _DAT_106d8ab0 = "Light 4 Spot Inner Cone";
    _DAT_106d8adc = "Light 4 Spot Outer Cone";
    _DAT_106d8b08 = "Initial Color Bias";
    _DAT_106d8b34 = "Clamp Minimum Light Value to Initial Color";
    _DAT_106d8b60 = "Clamp Maximum Light Value to Initial Color";
    _DAT_106d8b8c = "Compute Normals From Control Points";
    _DAT_106d8bb8 = "Half-Lambert Normals";
    _DAT_106d8c4c = "operator end fadein";
    _DAT_106d8c78 = "operator start fadeout";
    _DAT_106d8ca4 = "operator end fadeout";
    _DAT_106d8cd0 = "operator fade oscillate";
    _DAT_106d8cfc = "operator time offset seed";
    _DAT_106d8d28 = "operator time offset min";
    _DAT_106d8d54 = "operator time offset max";
    _DAT_106d8d80 = "operator time scale seed";
    _DAT_106d8dac = "operator time scale min";
    _DAT_106d8dd8 = "operator time scale max";
    _DAT_106d8e04 = "operator time strength random scale max";
    _DAT_106d8e30 = "operator strength scale seed";
    _DAT_106d8e5c = "operator strength random scale min";
    _DAT_106d8e88 = "operator strength random scale max";
    _DAT_106d8eb4 = "operator end cap state";
    _DAT_106d8ee0 = "Group ID to affect";
    _DAT_106d8f0c = "First control point to set";
    _DAT_106d8f38 = "# of control points to set";
    _DAT_106d8f64 = "first particle to copy";
    _DAT_106d8f90 = "set orientation";
    _DAT_106d9024 = "operator end fadein";
    _DAT_106d9050 = "operator start fadeout";
    _DAT_106d907c = "operator end fadeout";
    _DAT_106d90a8 = "operator fade oscillate";
    _DAT_106d90d4 = "operator time offset seed";
    _DAT_106d9100 = "operator time offset min";
    _DAT_106d912c = "operator time offset max";
    _DAT_106d9158 = "operator time scale seed";
    _DAT_106d9184 = "operator time scale min";
    _DAT_106d91b0 = "operator time scale max";
    _DAT_106d91dc = "operator time strength random scale max";
    _DAT_106d9208 = "operator strength scale seed";
    _DAT_106d9234 = "operator strength random scale min";
    _DAT_106d9260 = "operator strength random scale max";
    _DAT_106d928c = "operator end cap state";
    _DAT_106d92b8 = "First control point to set";
    _DAT_106d92e4 = "# of control points to set";
    _DAT_106d9310 = "first particle to copy";
    _DAT_106d933c = "set orientation";
    _DAT_106d93d4 = "operator end fadein";
    _DAT_106d9400 = "operator start fadeout";
    _DAT_106d942c = "operator end fadeout";
    _DAT_106d9458 = "operator fade oscillate";
    _DAT_106d9484 = "operator time offset seed";
    _DAT_106d94b0 = "operator time offset min";
    _DAT_106d94dc = "operator time offset max";
    _DAT_106d9508 = "operator time scale seed";
    _DAT_106d9534 = "operator time scale min";
    _DAT_106d9560 = "operator time scale max";
    _DAT_106d958c = "operator time strength random scale max";
    _DAT_106d95b8 = "operator strength scale seed";
    _DAT_106d95e4 = "operator strength random scale min";
    _DAT_106d9610 = "operator strength random scale max";
    _DAT_106d963c = "operator end cap state";
    _DAT_106d9668 = "Group ID to affect";
    _DAT_106d9694 = "control point to set";
    _DAT_106d96c0 = "# of children to set";
    _DAT_106d96ec = "first particle to copy";
    _DAT_106d9718 = "set orientation";
    _DAT_106d97ac = "operator end fadein";
    _DAT_106d97d8 = "operator start fadeout";
    _DAT_106d9804 = "operator end fadeout";
    _DAT_106d9830 = "operator fade oscillate";
    _DAT_106d985c = "operator time offset seed";
    _DAT_106d9888 = "operator time offset min";
    _DAT_106d98b4 = "operator time offset max";
    _DAT_106d98e0 = "operator time scale seed";
    _DAT_106d990c = "operator time scale min";
    _DAT_106d9938 = "operator time scale max";
    _DAT_106d9964 = "operator time strength random scale max";
    _DAT_106d9990 = "operator strength scale seed";
    _DAT_106d99bc = "operator strength random scale min";
    _DAT_106d99e8 = "operator strength random scale max";
    _DAT_106d9a14 = "operator end cap state";
    _DAT_106d9a40 = "First Control Point Number";
    _DAT_106d9a6c = "First Control Point Parent";
    _DAT_106d9a98 = "First Control Point Location";
    _DAT_106d9a9c = "128 0 0";
    _DAT_106d9ac4 = "Second Control Point Number";
    _DAT_106d9af0 = "Second Control Point Parent";
    _DAT_106d9b1c = "Second Control Point Location";
    _DAT_106d9b20 = "0 128 0";
    _DAT_106d9b48 = "Third Control Point Number";
    _DAT_106d9b74 = "Third Control Point Parent";
    _DAT_106d9ba0 = "Third Control Point Location";
    _DAT_106d9ba4 = "-128 0 0";
    _DAT_106d9bcc = "Fourth Control Point Number";
    _DAT_106d9bf8 = "Fourth Control Point Parent";
    _DAT_106d9c24 = "Fourth Control Point Location";
    _DAT_106d9c28 = "0 -128 0";
    _DAT_106d9c50 = "Set positions in world space";
    _DAT_106d9c7c = "Control Point to offset positions from";
    _DAT_106d9d14 = "operator end fadein";
    _DAT_106d9d40 = "operator start fadeout";
    _DAT_106d9d6c = "operator end fadeout";
    _DAT_106d9d98 = "operator fade oscillate";
    _DAT_106d9dc4 = "operator time offset seed";
    _DAT_106d9df0 = "operator time offset min";
    _DAT_106d9e1c = "operator time offset max";
    _DAT_106d9e48 = "operator time scale seed";
    _DAT_106d9e74 = "operator time scale min";
    _DAT_106d9ea0 = "operator time scale max";
    _DAT_106d9ecc = "operator time strength random scale max";
    _DAT_106d9ef8 = "operator strength scale seed";
    _DAT_106d9f24 = "operator strength random scale min";
    _DAT_106d9f50 = "operator strength random scale max";
    _DAT_106d9f7c = "operator end cap state";
    _DAT_106d9fa8 = "control_point_number";
    _DAT_106d9fd4 = "falloff range";
    _DAT_106da000 = "dampen scale";
    _DAT_106da094 = "operator end fadein";
    _DAT_106da0c0 = "operator start fadeout";
    _DAT_106da0ec = "operator end fadeout";
    _DAT_106da118 = "operator fade oscillate";
    _DAT_106da144 = "operator time offset seed";
    _DAT_106da170 = "operator time offset min";
    _DAT_106da19c = "operator time offset max";
    _DAT_106da1c8 = "operator time scale seed";
    _DAT_106da1f4 = "operator time scale min";
    _DAT_106da220 = "operator time scale max";
    _DAT_106da24c = "operator time strength random scale max";
    _DAT_106da278 = "operator strength scale seed";
    _DAT_106da2a4 = "operator strength random scale min";
    _DAT_106da2d0 = "operator strength random scale max";
    _DAT_106da2fc = "operator end cap state";
    _DAT_106da328 = "distance minimum";
    _DAT_106da354 = "distance maximum";
    _DAT_106da380 = "output field";
    _DAT_106da39c = "intchoice particlefield_scalar";
    _DAT_106da3ac = "output minimum";
    _DAT_106da3d8 = "output maximum";
    _DAT_106da404 = "starting control point";
    _DAT_106da430 = "ending control point";
    _DAT_106da45c = "ensure line of sight";
    _DAT_106da488 = "LOS collision group";
    _DAT_106da4b4 = "Maximum Trace Length";
    _DAT_106da4e0 = "LOS Failure Scalar";
    _DAT_106da50c = "output is scalar of initial random range";
    _DAT_106da538 = "output is scalar of current value";
    _DAT_106da5cc = "operator end fadein";
    _DAT_106da5f8 = "operator start fadeout";
    _DAT_106da624 = "operator end fadeout";
    _DAT_106da650 = "operator fade oscillate";
    _DAT_106da67c = "operator time offset seed";
    _DAT_106da6a8 = "operator time offset min";
    _DAT_106da6d4 = "operator time offset max";
    _DAT_106da700 = "operator time scale seed";
    _DAT_106da72c = "operator time scale min";
    _DAT_106da758 = "operator time scale max";
    _DAT_106da784 = "operator time strength random scale max";
    _DAT_106da7b0 = "operator strength scale seed";
    _DAT_106da7dc = "operator strength random scale min";
    _DAT_106da808 = "operator strength random scale max";
    _DAT_106da834 = "operator end cap state";
    _DAT_106da860 = "distance minimum";
    _DAT_106da88c = "distance maximum";
    _DAT_106da8b8 = "output control point";
    _DAT_106da8e4 = "output control point field";
    _DAT_106da910 = "output minimum";
    _DAT_106da93c = "output maximum";
    _DAT_106da968 = "starting control point";
    _DAT_106da994 = "ending control point";
    _DAT_106da9c0 = "ensure line of sight";
    _DAT_106da9ec = "LOS collision group";
    _DAT_106daa18 = "Maximum Trace Length";
    _DAT_106daa44 = "LOS Failure Scale";
    _DAT_106daadc = "operator end fadein";
    _DAT_106dab08 = "operator start fadeout";
    _DAT_106dab34 = "operator end fadeout";
    _DAT_106dab60 = "operator fade oscillate";
    _DAT_106dab8c = "operator time offset seed";
    _DAT_106dabb8 = "operator time offset min";
    _DAT_106dabe4 = "operator time offset max";
    _DAT_106dac10 = "operator time scale seed";
    _DAT_106dac3c = "operator time scale min";
    _DAT_106dac68 = "operator time scale max";
    _DAT_106dac94 = "operator time strength random scale max";
    _DAT_106dacc0 = "operator strength scale seed";
    _DAT_106dacec = "operator strength random scale min";
    _DAT_106dad18 = "operator strength random scale max";
    _DAT_106dad44 = "operator end cap state";
    _DAT_106dad70 = "percentage minimum";
    _DAT_106dad9c = "percentage maximum";
    _DAT_106dadc8 = "output field";
    _DAT_106dade4 = "intchoice particlefield_scalar";
    _DAT_106dadf4 = "output minimum";
    _DAT_106dae20 = "output maximum";
    _DAT_106dae4c = "starting control point";
    _DAT_106dae78 = "ending control point";
    _DAT_106daea4 = "output is scalar of initial random range";
    _DAT_106daed0 = "output is scalar of current value";
    _DAT_106daefc = "only active within input range";
    _DAT_106daf28 = "treat distance between points as radius";
    _DAT_106dafbc = "operator end fadein";
    _DAT_106dafe8 = "operator start fadeout";
    _DAT_106db014 = "operator end fadeout";
    _DAT_106db040 = "operator fade oscillate";
    _DAT_106db06c = "operator time offset seed";
    _DAT_106db098 = "operator time offset min";
    _DAT_106db0c4 = "operator time offset max";
    _DAT_106db0f0 = "operator time scale seed";
    _DAT_106db11c = "operator time scale min";
    _DAT_106db148 = "operator time scale max";
    _DAT_106db174 = "operator time strength random scale max";
    _DAT_106db1a0 = "operator strength scale seed";
    _DAT_106db1cc = "operator strength random scale min";
    _DAT_106db1f8 = "operator strength random scale max";
    _DAT_106db224 = "operator end cap state";
    _DAT_106db250 = "percentage minimum";
    _DAT_106db27c = "percentage maximum";
    _DAT_106db2a8 = "output field";
    _DAT_106db2c4 = "intchoice particlefield_vector";
    _DAT_106db2d4 = "output minimum";
    _DAT_106db2d8 = "0 0 0";
    _DAT_106db300 = "output maximum";
    _DAT_106db304 = "1 1 1";
    _DAT_106db32c = "starting control point";
    _DAT_106db358 = "ending control point";
    _DAT_106db384 = "output is scalar of initial random range";
    _DAT_106db3b0 = "output is scalar of current value";
    _DAT_106db3dc = "only active within input range";
    _DAT_106db408 = "treat distance between points as radius";
    _DAT_106db49c = "operator end fadein";
    _DAT_106db4c8 = "operator start fadeout";
    _DAT_106db4f4 = "operator end fadeout";
    _DAT_106db520 = "operator fade oscillate";
    _DAT_106db54c = "operator time offset seed";
    _DAT_106db578 = "operator time offset min";
    _DAT_106db5a4 = "operator time offset max";
    _DAT_106db5d0 = "operator time scale seed";
    _DAT_106db5fc = "operator time scale min";
    _DAT_106db628 = "operator time scale max";
    _DAT_106db654 = "operator time strength random scale max";
    _DAT_106db680 = "operator strength scale seed";
    _DAT_106db6ac = "operator strength random scale min";
    _DAT_106db6d8 = "operator strength random scale max";
    _DAT_106db704 = "operator end cap state";
    _DAT_106db730 = "distance minimum";
    _DAT_106db75c = "distance maximum";
    _DAT_106db788 = "output field";
    _DAT_106db7a4 = "intchoice particlefield_scalar";
    _DAT_106db7b4 = "output minimum";
    _DAT_106db7e0 = "output maximum";
    _DAT_106db80c = "control point";
    _DAT_106db838 = "ensure line of sight";
    _DAT_106db864 = "LOS collision group";
    _DAT_106db890 = "Maximum Trace Length";
    _DAT_106db8bc = "LOS Failure Scalar";
    _DAT_106db8e8 = "output is scalar of initial random range";
    _DAT_106db914 = "output is scalar of current value";
    _DAT_106db940 = "only active within specified distance";
    _DAT_106db9d4 = "operator end fadein";
    _DAT_106dba00 = "operator start fadeout";
    _DAT_106dba2c = "operator end fadeout";
    _DAT_106dba58 = "operator fade oscillate";
    _DAT_106dba84 = "operator time offset seed";
    _DAT_106dbab0 = "operator time offset min";
    _DAT_106dbadc = "operator time offset max";
    _DAT_106dbb08 = "operator time scale seed";
    _DAT_106dbb34 = "operator time scale min";
    _DAT_106dbb60 = "operator time scale max";
    _DAT_106dbb8c = "operator time strength random scale max";
    _DAT_106dbbb8 = "operator strength scale seed";
    _DAT_106dbbe4 = "operator strength random scale min";
    _DAT_106dbc10 = "operator strength random scale max";
    _DAT_106dbc3c = "operator end cap state";
    _DAT_106dbc68 = "Control Point Number";
    _DAT_106dbc94 = "Control Point Offset";
    _DAT_106dbc98 = "0 0 0";
    _DAT_106dbcc0 = "Use Eye Orientation";
    _DAT_106dbd54 = "operator end fadein";
    _DAT_106dbd80 = "operator start fadeout";
    _DAT_106dbdac = "operator end fadeout";
    _DAT_106dbdd8 = "operator fade oscillate";
    _DAT_106dbe04 = "operator time offset seed";
    _DAT_106dbe30 = "operator time offset min";
    _DAT_106dbe5c = "operator time offset max";
    _DAT_106dbe88 = "operator time scale seed";
    _DAT_106dbeb4 = "operator time scale min";
    _DAT_106dbee0 = "operator time scale max";
    _DAT_106dbf0c = "operator time strength random scale max";
    _DAT_106dbf38 = "operator strength scale seed";
    _DAT_106dbf64 = "operator strength random scale min";
    _DAT_106dbf90 = "operator strength random scale max";
    _DAT_106dbfbc = "operator end cap state";
    _DAT_106dbfe8 = "control point number";
    _DAT_106dc014 = "lifetime lerp start";
    _DAT_106dc040 = "lifetime lerp end";
    _DAT_106dc06c = "hitbox set";
    _DAT_106dc070 = "effects";
    _DAT_106dc104 = "operator end fadein";
    _DAT_106dc130 = "operator start fadeout";
    _DAT_106dc15c = "operator end fadeout";
    _DAT_106dc188 = "operator fade oscillate";
    _DAT_106dc1b4 = "operator time offset seed";
    _DAT_106dc1e0 = "operator time offset min";
    _DAT_106dc20c = "operator time offset max";
    _DAT_106dc238 = "operator time scale seed";
    _DAT_106dc264 = "operator time scale min";
    _DAT_106dc290 = "operator time scale max";
    _DAT_106dc2bc = "operator time strength random scale max";
    _DAT_106dc2e8 = "operator strength scale seed";
    _DAT_106dc314 = "operator strength random scale min";
    _DAT_106dc340 = "operator strength random scale max";
    _DAT_106dc36c = "operator end cap state";
    _DAT_106dc398 = "control_point_number";
    _DAT_106dc3c4 = "lifetime fade start";
    _DAT_106dc3f0 = "lifetime fade end";
    _DAT_106dc41c = "hitbox set";
    _DAT_106dc420 = "effects";
    _DAT_106dc4b4 = "operator end fadein";
    _DAT_106dc4e0 = "operator start fadeout";
    _DAT_106dc50c = "operator end fadeout";
    _DAT_106dc538 = "operator fade oscillate";
    _DAT_106dc564 = "operator time offset seed";
    _DAT_106dc590 = "operator time offset min";
    _DAT_106dc5bc = "operator time offset max";
    _DAT_106dc5e8 = "operator time scale seed";
    _DAT_106dc614 = "operator time scale min";
    _DAT_106dc640 = "operator time scale max";
    _DAT_106dc66c = "operator time strength random scale max";
    _DAT_106dc698 = "operator strength scale seed";
    _DAT_106dc6c4 = "operator strength random scale min";
    _DAT_106dc6f0 = "operator strength random scale max";
    _DAT_106dc71c = "operator end cap state";
    _DAT_106dc748 = "percentage minimum";
    _DAT_106dc774 = "percentage maximum";
    _DAT_106dc7a0 = "percentage bias";
    _DAT_106dc7cc = "starting control point";
    _DAT_106dc7f8 = "ending control point";
    _DAT_106dc824 = "offset control point";
    _DAT_106dc850 = "input control point";
    _DAT_106dc87c = "output control point";
    _DAT_106dc8a8 = "offset amount";
    _DAT_106dc8ac = "0 0 0";
    _DAT_106dc8d4 = "treat distance between points as radius";
    _DAT_106dc900 = "treat offset as scale of total distance";
    _DAT_106dc994 = "operator end fadein";
    _DAT_106dc9c0 = "operator start fadeout";
    _DAT_106dc9ec = "operator end fadeout";
    _DAT_106dca18 = "operator fade oscillate";
    _DAT_106dca44 = "operator time offset seed";
    _DAT_106dca70 = "operator time offset min";
    _DAT_106dca9c = "operator time offset max";
    _DAT_106dcac8 = "operator time scale seed";
    _DAT_106dcaf4 = "operator time scale min";
    _DAT_106dcb20 = "operator time scale max";
    _DAT_106dcb4c = "operator time strength random scale max";
    _DAT_106dcb78 = "operator strength scale seed";
    _DAT_106dcba4 = "operator strength random scale min";
    _DAT_106dcbd0 = "operator strength random scale max";
    _DAT_106dcbfc = "operator end cap state";
    _DAT_106dcc28 = "Control Point for point on plane";
    _DAT_106dcc54 = "Cull plane offset";
    _DAT_106dcc80 = "Plane Normal";
    _DAT_106dcc84 = "0 0 1";
    _DAT_106dcd14 = "operator end fadein";
    _DAT_106dcd40 = "operator start fadeout";
    _DAT_106dcd6c = "operator end fadeout";
    _DAT_106dcd98 = "operator fade oscillate";
    _DAT_106dcdc4 = "operator time offset seed";
    _DAT_106dcdf0 = "operator time offset min";
    _DAT_106dce1c = "operator time offset max";
    _DAT_106dce48 = "operator time scale seed";
    _DAT_106dce74 = "operator time scale min";
    _DAT_106dcea0 = "operator time scale max";
    _DAT_106dcecc = "operator time strength random scale max";
    _DAT_106dcef8 = "operator strength scale seed";
    _DAT_106dcf24 = "operator strength random scale min";
    _DAT_106dcf50 = "operator strength random scale max";
    _DAT_106dcf7c = "operator end cap state";
    _DAT_106dcfa8 = "Control Point";
    _DAT_106dcfd4 = "Cull Distance";
    _DAT_106dd000 = "Control Point offset";
    _DAT_106dd004 = "0 0 0";
    _DAT_106dd02c = "Cull inside instead of outside";
    _DAT_106dd0c4 = "operator end fadein";
    _DAT_106dd0f0 = "operator start fadeout";
    _DAT_106dd11c = "operator end fadeout";
    _DAT_106dd148 = "operator fade oscillate";
    _DAT_106dd174 = "operator time offset seed";
    _DAT_106dd1a0 = "operator time offset min";
    _DAT_106dd1cc = "operator time offset max";
    _DAT_106dd1f8 = "operator time scale seed";
    _DAT_106dd224 = "operator time scale min";
    _DAT_106dd250 = "operator time scale max";
    _DAT_106dd27c = "operator time strength random scale max";
    _DAT_106dd2a8 = "operator strength scale seed";
    _DAT_106dd2d4 = "operator strength random scale min";
    _DAT_106dd300 = "operator strength random scale max";
    _DAT_106dd32c = "operator end cap state";
    _DAT_106dd358 = "control_point_number";
    _DAT_106dd384 = "use only bounding box";
    _DAT_106dd3b0 = "cull outside instead of inside";
    _DAT_106dd3dc = "hitbox set";
    _DAT_106dd3e0 = "effects";
    _DAT_106dd474 = "operator end fadein";
    _DAT_106dd4a0 = "operator start fadeout";
    _DAT_106dd4cc = "operator end fadeout";
    _DAT_106dd4f8 = "operator fade oscillate";
    _DAT_106dd524 = "operator time offset seed";
    _DAT_106dd550 = "operator time offset min";
    _DAT_106dd57c = "operator time offset max";
    _DAT_106dd5a8 = "operator time scale seed";
    _DAT_106dd5d4 = "operator time scale min";
    _DAT_106dd600 = "operator time scale max";
    _DAT_106dd62c = "operator time strength random scale max";
    _DAT_106dd658 = "operator strength scale seed";
    _DAT_106dd684 = "operator strength random scale min";
    _DAT_106dd6b0 = "operator strength random scale max";
    _DAT_106dd6dc = "operator end cap state";
    _DAT_106dd708 = "Control Point Number to Set";
    _DAT_106dd734 = "Center Offset";
    _DAT_106dd738 = "0 0 0";
    _DAT_106dd7cc = "operator end fadein";
    _DAT_106dd7f8 = "operator start fadeout";
    _DAT_106dd824 = "operator end fadeout";
    _DAT_106dd850 = "operator fade oscillate";
    _DAT_106dd87c = "operator time offset seed";
    _DAT_106dd8a8 = "operator time offset min";
    _DAT_106dd8d4 = "operator time offset max";
    _DAT_106dd900 = "operator time scale seed";
    _DAT_106dd92c = "operator time scale min";
    _DAT_106dd958 = "operator time scale max";
    _DAT_106dd984 = "operator time strength random scale max";
    _DAT_106dd9b0 = "operator strength scale seed";
    _DAT_106dd9dc = "operator strength random scale min";
    _DAT_106dda08 = "operator strength random scale max";
    _DAT_106dda34 = "operator end cap state";
    _DAT_106dda60 = "Direction Matching Strength";
    _DAT_106dda8c = "Speed Matching Strength";
    _DAT_106ddab8 = "Control Point to Broadcast Speed and Direction To";
    _DAT_106ddb4c = "operator end fadein";
    _DAT_106ddb78 = "operator start fadeout";
    _DAT_106ddba4 = "operator end fadeout";
    _DAT_106ddbd0 = "operator fade oscillate";
    _DAT_106ddbfc = "operator time offset seed";
    _DAT_106ddc28 = "operator time offset min";
    _DAT_106ddc54 = "operator time offset max";
    _DAT_106ddc80 = "operator time scale seed";
    _DAT_106ddcac = "operator time scale min";
    _DAT_106ddcd8 = "operator time scale max";
    _DAT_106ddd04 = "operator time strength random scale max";
    _DAT_106ddd30 = "operator strength scale seed";
    _DAT_106ddd5c = "operator strength random scale min";
    _DAT_106ddd88 = "operator strength random scale max";
    _DAT_106dddb4 = "operator end cap state";
    _DAT_106ddde0 = "Local Space CP";
    _DAT_106dde0c = "Desired Offset";
    _DAT_106dde10 = "0 0 0";
    _DAT_106dde38 = "Scale by Radius";
    _DAT_106ddecc = "operator end fadein";
    _DAT_106ddef8 = "operator start fadeout";
    _DAT_106ddf24 = "operator end fadeout";
    _DAT_106ddf50 = "operator fade oscillate";
    _DAT_106ddf7c = "operator time offset seed";
    _DAT_106ddfa8 = "operator time offset min";
    _DAT_106ddfd4 = "operator time offset max";
    _DAT_106de000 = "operator time scale seed";
    _DAT_106de02c = "operator time scale min";
    _DAT_106de058 = "operator time scale max";
    _DAT_106de084 = "operator time strength random scale max";
    _DAT_106de0b0 = "operator strength scale seed";
    _DAT_106de0dc = "operator strength random scale min";
    _DAT_106de108 = "operator strength random scale max";
    _DAT_106de134 = "operator end cap state";
    _DAT_106de160 = "offset";
    _DAT_106de18c = "kill on no collision";
    _DAT_106de1b8 = "include water";
    _DAT_106de1e4 = "max trace length";
    _DAT_106de210 = "trace offset";
    _DAT_106de23c = "collision group";
    _DAT_106de268 = "reference CP 1";
    _DAT_106de294 = "reference CP 2";
    _DAT_106de2c0 = "CP movement tolerance";
    _DAT_106de2ec = "interpolation rate";
    _DAT_106de318 = "interploation distance tolerance cp";
    _DAT_106de3ac = "operator end fadein";
    _DAT_106de3d8 = "operator start fadeout";
    _DAT_106de404 = "operator end fadeout";
    _DAT_106de430 = "operator fade oscillate";
    _DAT_106de45c = "operator time offset seed";
    _DAT_106de488 = "operator time offset min";
    _DAT_106de4b4 = "operator time offset max";
    _DAT_106de4e0 = "operator time scale seed";
    _DAT_106de50c = "operator time scale min";
    _DAT_106de538 = "operator time scale max";
    _DAT_106de564 = "operator time strength random scale max";
    _DAT_106de590 = "operator strength scale seed";
    _DAT_106de5bc = "operator strength random scale min";
    _DAT_106de5e8 = "operator strength random scale max";
    _DAT_106de614 = "operator end cap state";
    _DAT_106de640 = "run for killed parent particles";
    _DAT_106de66c = "Inherited Field";
    _DAT_106de688 = "intchoice particlefield";
    _DAT_106de698 = "Scale";
    _DAT_106de6c4 = "Random Parent Particle Distribution";
    _DAT_106de6f0 = "Particle Increment Amount";
    _DAT_106de784 = "operator end fadein";
    _DAT_106de7b0 = "operator start fadeout";
    _DAT_106de7dc = "operator end fadeout";
    _DAT_106de808 = "operator fade oscillate";
    _DAT_106de834 = "operator time offset seed";
    _DAT_106de860 = "operator time offset min";
    _DAT_106de88c = "operator time offset max";
    _DAT_106de8b8 = "operator time scale seed";
    _DAT_106de8e4 = "operator time scale min";
    _DAT_106de910 = "operator time scale max";
    _DAT_106de93c = "operator time strength random scale max";
    _DAT_106de968 = "operator strength scale seed";
    _DAT_106de994 = "operator strength random scale min";
    _DAT_106de9c0 = "operator strength random scale max";
    _DAT_106de9ec = "operator end cap state";
    _DAT_106dea18 = "Rotation Offset";
    _DAT_106dea44 = "Spin Strength";
    _DAT_106dea70 = "rotation field";
    _DAT_106dea8c = "intchoice particlefield_rotation";
    _DAT_106deb04 = "operator end fadein";
    _DAT_106deb30 = "operator start fadeout";
    _DAT_106deb5c = "operator end fadeout";
    _DAT_106deb88 = "operator fade oscillate";
    _DAT_106debb4 = "operator time offset seed";
    _DAT_106debe0 = "operator time offset min";
    _DAT_106dec0c = "operator time offset max";
    _DAT_106dec38 = "operator time scale seed";
    _DAT_106dec64 = "operator time scale min";
    _DAT_106dec90 = "operator time scale max";
    _DAT_106decbc = "operator time strength random scale max";
    _DAT_106dece8 = "operator strength scale seed";
    _DAT_106ded14 = "operator strength random scale min";
    _DAT_106ded40 = "operator strength random scale max";
    _DAT_106ded6c = "operator end cap state";
    _DAT_106ded98 = "Minimum Restart Time";
    _DAT_106dedc4 = "Maximum Restart Time";
    _DAT_106dedf0 = "Control Point to Scale Duration";
    _DAT_106dee1c = "Control Point Field X/Y/Z";
    _DAT_106dee48 = "Only Restart Children";
    _DAT_106dee74 = "Child Group ID";
    _DAT_106def0c = "operator end fadein";
    _DAT_106def38 = "operator start fadeout";
    _DAT_106def64 = "operator end fadeout";
    _DAT_106def90 = "operator fade oscillate";
    _DAT_106defbc = "operator time offset seed";
    _DAT_106defe8 = "operator time offset min";
    _DAT_106df014 = "operator time offset max";
    _DAT_106df040 = "operator time scale seed";
    _DAT_106df06c = "operator time scale min";
    _DAT_106df098 = "operator time scale max";
    _DAT_106df0c4 = "operator time strength random scale max";
    _DAT_106df0f0 = "operator strength scale seed";
    _DAT_106df11c = "operator strength random scale min";
    _DAT_106df148 = "operator strength random scale max";
    _DAT_106df174 = "operator end cap state";
    _DAT_106df1a0 = "Duration at which to Stop";
    _DAT_106df1cc = "Control Point to Scale Duration";
    _DAT_106df1f8 = "Control Point Field X/Y/Z";
    _DAT_106df224 = "Destroy All Particles Immediately";
    _DAT_106df250 = "Play End Cap Effect";
    _DAT_106df2e4 = "operator end fadein";
    _DAT_106df310 = "operator start fadeout";
    _DAT_106df33c = "operator end fadeout";
    _DAT_106df368 = "operator fade oscillate";
    _DAT_106df394 = "operator time offset seed";
    _DAT_106df3c0 = "operator time offset min";
    _DAT_106df3ec = "operator time offset max";
    _DAT_106df418 = "operator time scale seed";
    _DAT_106df444 = "operator time scale min";
    _DAT_106df470 = "operator time scale max";
    _DAT_106df49c = "operator time strength random scale max";
    _DAT_106df4c8 = "operator strength scale seed";
    _DAT_106df4f4 = "operator strength random scale min";
    _DAT_106df520 = "operator strength random scale max";
    _DAT_106df54c = "operator end cap state";
    _DAT_106df578 = "Rotation Offset";
    _DAT_106df5a4 = "Spin Strength";
    _DAT_106df5d0 = "Control Point";
    _DAT_106df5fc = "rotation field";
    _DAT_106df618 = "intchoice particlefield_rotation";
    _DAT_106df694 = "operator end fadein";
    _DAT_106df6c0 = "operator start fadeout";
    _DAT_106df6ec = "operator end fadeout";
    _DAT_106df718 = "operator fade oscillate";
    _DAT_106df744 = "operator time offset seed";
    _DAT_106df770 = "operator time offset min";
    _DAT_106df79c = "operator time offset max";
    _DAT_106df7c8 = "operator time scale seed";
    _DAT_106df7f4 = "operator time scale min";
    _DAT_106df820 = "operator time scale max";
    _DAT_106df84c = "operator time strength random scale max";
    _DAT_106df878 = "operator strength scale seed";
    _DAT_106df8a4 = "operator strength random scale min";
    _DAT_106df8d0 = "operator strength random scale max";
    _DAT_106df8fc = "operator end cap state";
    _DAT_106df928 = "Rotation Axis";
    _DAT_106df92c = "0 0 1";
    _DAT_106df954 = "Rotation Rate";
    _DAT_106df980 = "Control Point";
    _DAT_106df9ac = "Local Space Control Point";
    _DAT_106dfa44 = "operator end fadein";
    _DAT_106dfa70 = "operator start fadeout";
    _DAT_106dfa9c = "operator end fadeout";
    _DAT_106dfac8 = "operator fade oscillate";
    _DAT_106dfaf4 = "operator time offset seed";
    _DAT_106dfb20 = "operator time offset min";
    _DAT_106dfb4c = "operator time offset max";
    _DAT_106dfb78 = "operator time scale seed";
    _DAT_106dfba4 = "operator time scale min";
    _DAT_106dfbd0 = "operator time scale max";
    _DAT_106dfbfc = "operator time strength random scale max";
    _DAT_106dfc28 = "operator strength scale seed";
    _DAT_106dfc54 = "operator strength random scale min";
    _DAT_106dfc80 = "operator strength random scale max";
    _DAT_106dfcac = "operator end cap state";
    _DAT_106dfcd8 = "Rotation Axis";
    _DAT_106dfcdc = "0 0 1";
    _DAT_106dfd04 = "Rotation Rate";
    _DAT_106dfd30 = "Control Point";
    _DAT_106dfd5c = "Use Local Space";
    _DAT_106dfdf4 = "operator end fadein";
    _DAT_106dfe20 = "operator start fadeout";
    _DAT_106dfe4c = "operator end fadeout";
    _DAT_106dfe78 = "operator fade oscillate";
    _DAT_106dfea4 = "operator time offset seed";
    _DAT_106dfed0 = "operator time offset min";
    _DAT_106dfefc = "operator time offset max";
    _DAT_106dff28 = "operator time scale seed";
    _DAT_106dff54 = "operator time scale min";
    _DAT_106dff80 = "operator time scale max";
    _DAT_106dffac = "operator time strength random scale max";
    _DAT_106dffd8 = "operator strength scale seed";
    _DAT_106e0004 = "operator strength random scale min";
    _DAT_106e0030 = "operator strength random scale max";
    _DAT_106e005c = "operator end cap state";
    _DAT_106e0088 = "output field";
    _DAT_106e00a4 = "intchoice particlefield_vector";
    _DAT_106e00b4 = "Rotation Axis Min";
    _DAT_106e00b8 = "0 0 1";
    _DAT_106e00e0 = "Rotation Axis Max";
    _DAT_106e00e4 = "0 0 1";
    _DAT_106e010c = "Rotation Rate Min";
    _DAT_106e0138 = "Rotation Rate Max";
    _DAT_106e0164 = "Normalize Ouput";
    _DAT_106e01fc = "operator end fadein";
    _DAT_106e0228 = "operator start fadeout";
    _DAT_106e0254 = "operator end fadeout";
    _DAT_106e0280 = "operator fade oscillate";
    _DAT_106e02ac = "operator time offset seed";
    _DAT_106e02d8 = "operator time offset min";
    _DAT_106e0304 = "operator time offset max";
    _DAT_106e0330 = "operator time scale seed";
    _DAT_106e035c = "operator time scale min";
    _DAT_106e0388 = "operator time scale max";
    _DAT_106e03b4 = "operator time strength random scale max";
    _DAT_106e03e0 = "operator strength scale seed";
    _DAT_106e040c = "operator strength random scale min";
    _DAT_106e0438 = "operator strength random scale max";
    _DAT_106e0464 = "operator end cap state";
    _DAT_106e0490 = "Maximum Velocity";
    _DAT_106e04bc = "Override Max Velocity from this CP";
    _DAT_106e04e8 = "Override CP field";
    _DAT_106e057c = "operator end fadein";
    _DAT_106e05a8 = "operator start fadeout";
    _DAT_106e05d4 = "operator end fadeout";
    _DAT_106e0600 = "operator fade oscillate";
    _DAT_106e062c = "operator time offset seed";
    _DAT_106e0658 = "operator time offset min";
    _DAT_106e0684 = "operator time offset max";
    _DAT_106e06b0 = "operator time scale seed";
    _DAT_106e06dc = "operator time scale min";
    _DAT_106e0708 = "operator time scale max";
    _DAT_106e0734 = "operator time strength random scale max";
    _DAT_106e0760 = "operator strength scale seed";
    _DAT_106e078c = "operator strength random scale min";
    _DAT_106e07b8 = "operator strength random scale max";
    _DAT_106e07e4 = "operator end cap state";
    _DAT_106e0810 = "Desired Velocity CP";
    _DAT_106e083c = "Desired Velocity CP Field Override(for speed only)";
    _DAT_106e0868 = "Latency CP";
    _DAT_106e0894 = "Latency CP field";
    _DAT_106e092c = "operator end fadein";
    _DAT_106e0958 = "operator start fadeout";
    _DAT_106e0984 = "operator end fadeout";
    _DAT_106e09b0 = "operator fade oscillate";
    _DAT_106e09dc = "operator time offset seed";
    _DAT_106e0a08 = "operator time offset min";
    _DAT_106e0a34 = "operator time offset max";
    _DAT_106e0a60 = "operator time scale seed";
    _DAT_106e0a8c = "operator time scale min";
    _DAT_106e0ab8 = "operator time scale max";
    _DAT_106e0ae4 = "operator time strength random scale max";
    _DAT_106e0b10 = "operator strength scale seed";
    _DAT_106e0b3c = "operator strength random scale min";
    _DAT_106e0b68 = "operator strength random scale max";
    _DAT_106e0b94 = "operator end cap state";
    _DAT_106e0bc0 = "maximum distance";
    _DAT_106e0bec = "bulge";
    _DAT_106e0c18 = "start control point number";
    _DAT_106e0c44 = "end control point number";
    _DAT_106e0c70 = "bulge control 0=random 1=orientation of start pnt 2=orientation of end point";
    _DAT_106e0c9c = "mid point position";
    _DAT_106e0cc8 = "particles to map from start to end";
    _DAT_106e0cf4 = "restart behavior (0 = bounce, 1 = loop )";
    _DAT_106e0d20 = "cohesion strength";
    _DAT_106e0d4c = "use existing particle count";
    _DAT_106e0d78 = "control point movement tolerance";
    _DAT_106e0e0c = "operator end fadein";
    _DAT_106e0e38 = "operator start fadeout";
    _DAT_106e0e64 = "operator end fadeout";
    _DAT_106e0e90 = "operator fade oscillate";
    _DAT_106e0ebc = "operator time offset seed";
    _DAT_106e0ee8 = "operator time offset min";
    _DAT_106e0f14 = "operator time offset max";
    _DAT_106e0f40 = "operator time scale seed";
    _DAT_106e0f6c = "operator time scale min";
    _DAT_106e0f98 = "operator time scale max";
    _DAT_106e0fc4 = "operator time strength random scale max";
    _DAT_106e0ff0 = "operator strength scale seed";
    _DAT_106e101c = "operator strength random scale min";
    _DAT_106e1048 = "operator strength random scale max";
    _DAT_106e1074 = "operator end cap state";
    _DAT_106e10a0 = "bulge";
    _DAT_106e10cc = "start control point number";
    _DAT_106e10f8 = "end control point number";
    _DAT_106e1124 = "bulge control 0=random 1=orientation of start pnt 2=orientation of end point";
    _DAT_106e1150 = "mid point position";
    _DAT_106e117c = "Use sequential CP pairs between start and end point";
    _DAT_106e1214 = "operator end fadein";
    _DAT_106e1240 = "operator start fadeout";
    _DAT_106e126c = "operator end fadeout";
    _DAT_106e1298 = "operator fade oscillate";
    _DAT_106e12c4 = "operator time offset seed";
    _DAT_106e12f0 = "operator time offset min";
    _DAT_106e131c = "operator time offset max";
    _DAT_106e1348 = "operator time scale seed";
    _DAT_106e1374 = "operator time scale min";
    _DAT_106e13a0 = "operator time scale max";
    _DAT_106e13cc = "operator time strength random scale max";
    _DAT_106e13f8 = "operator strength scale seed";
    _DAT_106e1424 = "operator strength random scale min";
    _DAT_106e1450 = "operator strength random scale max";
    _DAT_106e147c = "operator end cap state";
    _DAT_106e14a8 = "use particle velocity for first input";
    _DAT_106e14d4 = "first input control point";
    _DAT_106e1500 = "second input control point";
    _DAT_106e152c = "input minimum (-1 to 1)";
    _DAT_106e1558 = "input maximum (-1 to 1)";
    _DAT_106e1584 = "output field";
    _DAT_106e15a0 = "intchoice particlefield_scalar";
    _DAT_106e15b0 = "output minimum";
    _DAT_106e15dc = "output maximum";
    _DAT_106e1608 = "output is scalar of initial random range";
    _DAT_106e1634 = "output is scalar of current value";
    _DAT_106e1660 = "only active within specified input range";
    _DAT_106e16f4 = "operator end fadein";
    _DAT_106e1720 = "operator start fadeout";
    _DAT_106e174c = "operator end fadeout";
    _DAT_106e1778 = "operator fade oscillate";
    _DAT_106e17a4 = "operator time offset seed";
    _DAT_106e17d0 = "operator time offset min";
    _DAT_106e17fc = "operator time offset max";
    _DAT_106e1828 = "operator time scale seed";
    _DAT_106e1854 = "operator time scale min";
    _DAT_106e1880 = "operator time scale max";
    _DAT_106e18ac = "operator time strength random scale max";
    _DAT_106e18d8 = "operator strength scale seed";
    _DAT_106e1904 = "operator strength random scale min";
    _DAT_106e1930 = "operator strength random scale max";
    _DAT_106e195c = "operator end cap state";
    _DAT_106e1988 = "emitter lifetime start time (seconds)";
    _DAT_106e19b4 = "emitter lifetime end time (seconds)";
    _DAT_106e19e0 = "input control point number";
    _DAT_106e1a0c = "input minimum";
    _DAT_106e1a38 = "input maximum";
    _DAT_106e1a64 = "input field 0-2 X/Y/Z";
    _DAT_106e1a90 = "output field";
    _DAT_106e1aac = "intchoice particlefield_scalar";
    _DAT_106e1abc = "output minimum";
    _DAT_106e1ae8 = "output maximum";
    _DAT_106e1b14 = "output is scalar of initial random range";
    _DAT_106e1b40 = "output is scalar of current value";
    _DAT_106e1bd4 = "operator end fadein";
    _DAT_106e1c00 = "operator start fadeout";
    _DAT_106e1c2c = "operator end fadeout";
    _DAT_106e1c58 = "operator fade oscillate";
    _DAT_106e1c84 = "operator time offset seed";
    _DAT_106e1cb0 = "operator time offset min";
    _DAT_106e1cdc = "operator time offset max";
    _DAT_106e1d08 = "operator time scale seed";
    _DAT_106e1d34 = "operator time scale min";
    _DAT_106e1d60 = "operator time scale max";
    _DAT_106e1d8c = "operator time strength random scale max";
    _DAT_106e1db8 = "operator strength scale seed";
    _DAT_106e1de4 = "operator strength random scale min";
    _DAT_106e1e10 = "operator strength random scale max";
    _DAT_106e1e3c = "operator end cap state";
    _DAT_106e1e68 = "control_point_number";
    _DAT_106e1efc = "operator end fadein";
    _DAT_106e1f28 = "operator start fadeout";
    _DAT_106e1f54 = "operator end fadeout";
    _DAT_106e1f80 = "operator fade oscillate";
    _DAT_106e1fac = "operator time offset seed";
    _DAT_106e1fd8 = "operator time offset min";
    _DAT_106e2004 = "operator time offset max";
    _DAT_106e2030 = "operator time scale seed";
    _DAT_106e205c = "operator time scale min";
    _DAT_106e2088 = "operator time scale max";
    _DAT_106e20b4 = "operator time strength random scale max";
    _DAT_106e20e0 = "operator strength scale seed";
    _DAT_106e210c = "operator strength random scale min";
    _DAT_106e2138 = "operator strength random scale max";
    _DAT_106e2164 = "operator end cap state";
    _DAT_106e2190 = "Control Point to Set";
    _DAT_106e21bc = "Control Point to Trace From";
    _DAT_106e21e8 = "Trace Direction Override";
    _DAT_106e21ec = "0 0 0";
    _DAT_106e2214 = "Trace Update Rate";
    _DAT_106e2240 = "Max Trace Length";
    _DAT_106e226c = "Offset End Point Amount";
    _DAT_106e2298 = "trace collision group";
    _DAT_106e232c = "operator end fadein";
    _DAT_106e2358 = "operator start fadeout";
    _DAT_106e2384 = "operator end fadeout";
    _DAT_106e23b0 = "operator fade oscillate";
    _DAT_106e23dc = "operator time offset seed";
    _DAT_106e2408 = "operator time offset min";
    _DAT_106e2434 = "operator time offset max";
    _DAT_106e2460 = "operator time scale seed";
    _DAT_106e248c = "operator time scale min";
    _DAT_106e24b8 = "operator time scale max";
    _DAT_106e24e4 = "operator time strength random scale max";
    _DAT_106e2510 = "operator strength scale seed";
    _DAT_106e253c = "operator strength random scale min";
    _DAT_106e2568 = "operator strength random scale max";
    _DAT_106e2594 = "operator end cap state";
    _DAT_106e25c0 = "emitter lifetime start time (seconds)";
    _DAT_106e25ec = "emitter lifetime end time (seconds)";
    _DAT_106e2618 = "input control point number";
    _DAT_106e2644 = "input minimum";
    _DAT_106e2648 = "0 0 0";
    _DAT_106e2670 = "input maximum";
    _DAT_106e2674 = "0 0 0";
    _DAT_106e269c = "output field";
    _DAT_106e26b8 = "intchoice particlefield_vector";
    _DAT_106e26c8 = "output minimum";
    _DAT_106e26cc = "0 0 0";
    _DAT_106e26f4 = "output maximum";
    _DAT_106e26f8 = "0 0 0";
    _DAT_106e2720 = "output is scalar of initial random range";
    _DAT_106e274c = "output is scalar of current value";
    _DAT_106e2778 = "offset position";
    _DAT_106e27a4 = "accelerate position";
    _DAT_106e27d0 = "local space CP";
    _DAT_106e2864 = "operator end fadein";
    _DAT_106e2890 = "operator start fadeout";
    _DAT_106e28bc = "operator end fadeout";
    _DAT_106e28e8 = "operator fade oscillate";
    _DAT_106e2914 = "operator time offset seed";
    _DAT_106e2940 = "operator time offset min";
    _DAT_106e296c = "operator time offset max";
    _DAT_106e2998 = "operator time scale seed";
    _DAT_106e29c4 = "operator time scale min";
    _DAT_106e29f0 = "operator time scale max";
    _DAT_106e2a1c = "operator time strength random scale max";
    _DAT_106e2a48 = "operator strength scale seed";
    _DAT_106e2a74 = "operator strength random scale min";
    _DAT_106e2aa0 = "operator strength random scale max";
    _DAT_106e2acc = "operator end cap state";
    _DAT_106e2af8 = "output field";
    _DAT_106e2b14 = "intchoice particlefield_vector";
    _DAT_106e2b24 = "normalize";
    _DAT_106e2b50 = "scale factor";
    _DAT_106e2be4 = "operator end fadein";
    _DAT_106e2c10 = "operator start fadeout";
    _DAT_106e2c3c = "operator end fadeout";
    _DAT_106e2c68 = "operator fade oscillate";
    _DAT_106e2c94 = "operator time offset seed";
    _DAT_106e2cc0 = "operator time offset min";
    _DAT_106e2cec = "operator time offset max";
    _DAT_106e2d18 = "operator time scale seed";
    _DAT_106e2d44 = "operator time scale min";
    _DAT_106e2d70 = "operator time scale max";
    _DAT_106e2d9c = "operator time strength random scale max";
    _DAT_106e2dc8 = "operator strength scale seed";
    _DAT_106e2df4 = "operator strength random scale min";
    _DAT_106e2e20 = "operator strength random scale max";
    _DAT_106e2e4c = "operator end cap state";
    _DAT_106e2e78 = "output field";
    _DAT_106e2e94 = "intchoice particlefield_vector";
    _DAT_106e2ea4 = "control point";
    _DAT_106e2ed0 = "normalize";
    _DAT_106e2efc = "scale factor";
    _DAT_106e2f94 = "operator end fadein";
    _DAT_106e2fc0 = "operator start fadeout";
    _DAT_106e2fec = "operator end fadeout";
    _DAT_106e3018 = "operator fade oscillate";
    _DAT_106e3044 = "operator time offset seed";
    _DAT_106e3070 = "operator time offset min";
    _DAT_106e309c = "operator time offset max";
    _DAT_106e30c8 = "operator time scale seed";
    _DAT_106e30f4 = "operator time scale min";
    _DAT_106e3120 = "operator time scale max";
    _DAT_106e314c = "operator time strength random scale max";
    _DAT_106e3178 = "operator strength scale seed";
    _DAT_106e31a4 = "operator strength random scale min";
    _DAT_106e31d0 = "operator strength random scale max";
    _DAT_106e31fc = "operator end cap state";
    _DAT_106e3228 = "input control point";
    _DAT_106e3254 = "output control point";
    _DAT_106e32ec = "operator end fadein";
    _DAT_106e3318 = "operator start fadeout";
    _DAT_106e3344 = "operator end fadeout";
    _DAT_106e3370 = "operator fade oscillate";
    _DAT_106e339c = "operator time offset seed";
    _DAT_106e33c8 = "operator time offset min";
    _DAT_106e33f4 = "operator time offset max";
    _DAT_106e3420 = "operator time scale seed";
    _DAT_106e344c = "operator time scale min";
    _DAT_106e3478 = "operator time scale max";
    _DAT_106e34a4 = "operator time strength random scale max";
    _DAT_106e34d0 = "operator strength scale seed";
    _DAT_106e34fc = "operator strength random scale min";
    _DAT_106e3528 = "operator strength random scale max";
    _DAT_106e3554 = "operator end cap state";
    _DAT_106e3580 = "control point";
    _DAT_106e35ac = "output field";
    _DAT_106e35c8 = "intchoice particlefield_vector";
    _DAT_106e35d8 = "normalize";
    _DAT_106e3604 = "offset axis";
    _DAT_106e3608 = "0 0 0";
    _DAT_106e3630 = "offset rotation";
    _DAT_106e365c = "scale factor";
    _DAT_106e36f4 = "operator end fadein";
    _DAT_106e3720 = "operator start fadeout";
    _DAT_106e374c = "operator end fadeout";
    _DAT_106e3778 = "operator fade oscillate";
    _DAT_106e37a4 = "operator time offset seed";
    _DAT_106e37d0 = "operator time offset min";
    _DAT_106e37fc = "operator time offset max";
    _DAT_106e3828 = "operator time scale seed";
    _DAT_106e3854 = "operator time scale min";
    _DAT_106e3880 = "operator time scale max";
    _DAT_106e38ac = "operator time strength random scale max";
    _DAT_106e38d8 = "operator strength scale seed";
    _DAT_106e3904 = "operator strength random scale min";
    _DAT_106e3930 = "operator strength random scale max";
    _DAT_106e395c = "operator end cap state";
    _DAT_106e3988 = "output field";
    _DAT_106e39a4 = "intchoice particlefield_vector";
    _DAT_106e39b4 = "scale factor";
    _DAT_106e3a4c = "operator end fadein";
    _DAT_106e3a78 = "operator start fadeout";
    _DAT_106e3aa4 = "operator end fadeout";
    _DAT_106e3ad0 = "operator fade oscillate";
    _DAT_106e3afc = "operator time offset seed";
    _DAT_106e3b28 = "operator time offset min";
    _DAT_106e3b54 = "operator time offset max";
    _DAT_106e3b80 = "operator time scale seed";
    _DAT_106e3bac = "operator time scale min";
    _DAT_106e3bd8 = "operator time scale max";
    _DAT_106e3c04 = "operator time strength random scale max";
    _DAT_106e3c30 = "operator strength scale seed";
    _DAT_106e3c5c = "operator strength random scale min";
    _DAT_106e3c88 = "operator strength random scale max";
    _DAT_106e3cb4 = "operator end cap state";
    _DAT_106e3ce0 = "output field";
    _DAT_106e3cfc = "intchoice particlefield_vector";
    _DAT_106e3d0c = "control point number";
    _DAT_106e3d38 = "scale factor";
    _DAT_106e3e04 = "operator end fadein";
    _DAT_106e3e30 = "operator start fadeout";
    _DAT_106e3e5c = "operator end fadeout";
    _DAT_106e3e88 = "operator fade oscillate";
    _DAT_106e3eb4 = "operator time offset seed";
    _DAT_106e3ee0 = "operator time offset min";
    _DAT_106e3f0c = "operator time offset max";
    _DAT_106e3f38 = "operator time scale seed";
    _DAT_106e3f64 = "operator time scale min";
    _DAT_106e3f90 = "operator time scale max";
    _DAT_106e3fbc = "operator time strength random scale max";
    _DAT_106e3fe8 = "operator strength scale seed";
    _DAT_106e4014 = "operator strength random scale min";
    _DAT_106e4040 = "operator strength random scale max";
    _DAT_106e406c = "operator end cap state";
    _DAT_106e4098 = "Visibility Proxy Input Control Point Number";
    _DAT_106e40c4 = "Visibility Proxy Radius";
    _DAT_106e40f0 = "Visibility input minimum";
    _DAT_106e411c = "Visibility input maximum";
    _DAT_106e4148 = "Visibility input dot minimum";
    _DAT_106e4174 = "Visibility input dot maximum";
    _DAT_106e41a0 = "Visibility input distance minimum";
    _DAT_106e41cc = "Visibility input distance maximum";
    _DAT_106e41f8 = "Visibility Alpha Scale minimum";
    _DAT_106e4224 = "Visibility Alpha Scale maximum";
    _DAT_106e4250 = "Visibility Radius Scale minimum";
    _DAT_106e427c = "Visibility Radius Scale maximum";
    _DAT_106e42a8 = "Visibility Radius FOV Scale base";
    _DAT_106e433c = "operator end fadein";
    _DAT_106e4368 = "operator start fadeout";
    _DAT_106e4394 = "operator end fadeout";
    _DAT_106e43c0 = "operator fade oscillate";
    _DAT_106e43ec = "operator time offset seed";
    _DAT_106e4418 = "operator time offset min";
    _DAT_106e4444 = "operator time offset max";
    _DAT_106e4470 = "operator time scale seed";
    _DAT_106e449c = "operator time scale min";
    _DAT_106e44c8 = "operator time scale max";
    _DAT_106e44f4 = "operator time strength random scale max";
    _DAT_106e4520 = "operator strength scale seed";
    _DAT_106e454c = "operator strength random scale min";
    _DAT_106e4578 = "operator strength random scale max";
    _DAT_106e45a4 = "operator end cap state";
    _DAT_106e45d0 = "Visibility Proxy Input Control Point Number";
    _DAT_106e45fc = "Visibility Proxy Radius";
    _DAT_106e4628 = "Visibility input minimum";
    _DAT_106e4654 = "Visibility input maximum";
    _DAT_106e4680 = "Visibility input dot minimum";
    _DAT_106e46ac = "Visibility input dot maximum";
    _DAT_106e46d8 = "Visibility input distance minimum";
    _DAT_106e4704 = "Visibility input distance maximum";
    _DAT_106e4730 = "Visibility Alpha Scale minimum";
    _DAT_106e475c = "Visibility Alpha Scale maximum";
    _DAT_106e4788 = "Visibility Radius Scale minimum";
    _DAT_106e47b4 = "Visibility Radius Scale maximum";
    _DAT_106e47e0 = "Visibility Radius FOV Scale base";
    _DAT_106e480c = "animation rate";
    _DAT_106e4838 = "animation_fit_lifetime";
    _DAT_106e4864 = "orientation_type";
    _DAT_106e4890 = "orientation control point";
    _DAT_106e48bc = "second sequence animation rate";
    _DAT_106e48e8 = "use animation rate as FPS";
    _DAT_106e4914 = "cull system when CP normal faces away from camera";
    _DAT_106e4940 = "cull system starting at this recursion depth";
    _DAT_106e49d4 = "operator end fadein";
    _DAT_106e4a00 = "operator start fadeout";
    _DAT_106e4a2c = "operator end fadeout";
    _DAT_106e4a58 = "operator fade oscillate";
    _DAT_106e4a84 = "operator time offset seed";
    _DAT_106e4ab0 = "operator time offset min";
    _DAT_106e4adc = "operator time offset max";
    _DAT_106e4b08 = "operator time scale seed";
    _DAT_106e4b34 = "operator time scale min";
    _DAT_106e4b60 = "operator time scale max";
    _DAT_106e4b8c = "operator time strength random scale max";
    _DAT_106e4bb8 = "operator strength scale seed";
    _DAT_106e4be4 = "operator strength random scale min";
    _DAT_106e4c10 = "operator strength random scale max";
    _DAT_106e4c3c = "operator end cap state";
    _DAT_106e4c68 = "Visibility Proxy Input Control Point Number";
    _DAT_106e4c94 = "Visibility Proxy Radius";
    _DAT_106e4cc0 = "Visibility input minimum";
    _DAT_106e4cec = "Visibility input maximum";
    _DAT_106e4d18 = "Visibility input dot minimum";
    _DAT_106e4d44 = "Visibility input dot maximum";
    _DAT_106e4d70 = "Visibility input distance minimum";
    _DAT_106e4d9c = "Visibility input distance maximum";
    _DAT_106e4dc8 = "Visibility Alpha Scale minimum";
    _DAT_106e4df4 = "Visibility Alpha Scale maximum";
    _DAT_106e4e20 = "Visibility Radius Scale minimum";
    _DAT_106e4e4c = "Visibility Radius Scale maximum";
    _DAT_106e4e78 = "Visibility Radius FOV Scale base";
    _DAT_106e4ea4 = "animation rate";
    _DAT_106e4ed0 = "length fade in time";
    _DAT_106e4efc = "max length";
    _DAT_106e4f28 = "min length";
    _DAT_106e4f54 = "constrain radius to length";
    _DAT_106e4f80 = "ignore delta time";
    _DAT_106e4fac = "tail color and alpha scale factor";
    _DAT_106e4fb0 = "1 1 1 1";
    _DAT_106e4fd8 = "cull system when CP normal faces away from camera";
    _DAT_106e5004 = "cull system starting at this recursion depth";
    _DAT_106e509c = "operator end fadein";
    _DAT_106e50c8 = "operator start fadeout";
    _DAT_106e50f4 = "operator end fadeout";
    _DAT_106e5120 = "operator fade oscillate";
    _DAT_106e514c = "operator time offset seed";
    _DAT_106e5178 = "operator time offset min";
    _DAT_106e51a4 = "operator time offset max";
    _DAT_106e51d0 = "operator time scale seed";
    _DAT_106e51fc = "operator time scale min";
    _DAT_106e5228 = "operator time scale max";
    _DAT_106e5254 = "operator time strength random scale max";
    _DAT_106e5280 = "operator strength scale seed";
    _DAT_106e52ac = "operator strength random scale min";
    _DAT_106e52d8 = "operator strength random scale max";
    _DAT_106e5304 = "operator end cap state";
    _DAT_106e5330 = "subdivision_count";
    _DAT_106e535c = "texel_size";
    _DAT_106e5388 = "texture_scroll_rate";
    _DAT_106e53b4 = "texture_offset";
    _DAT_106e53e0 = "scale CP start";
    _DAT_106e540c = "scale CP end";
    _DAT_106e5438 = "scale texture by CP distance";
    _DAT_106e5464 = "scale scroll by CP distance";
    _DAT_106e5490 = "scale offset by CP distance";
    _DAT_106e54bc = "cull system when CP normal faces away from camera";
    _DAT_106e54e8 = "cull system starting at this recursion depth";
    _DAT_106e557c = "operator end fadein";
    _DAT_106e55a8 = "operator start fadeout";
    _DAT_106e55d4 = "operator end fadeout";
    _DAT_106e5600 = "operator fade oscillate";
    _DAT_106e562c = "operator time offset seed";
    _DAT_106e5658 = "operator time offset min";
    _DAT_106e5684 = "operator time offset max";
    _DAT_106e56b0 = "operator time scale seed";
    _DAT_106e56dc = "operator time scale min";
    _DAT_106e5708 = "operator time scale max";
    _DAT_106e5734 = "operator time strength random scale max";
    _DAT_106e5760 = "operator strength scale seed";
    _DAT_106e578c = "operator strength random scale min";
    _DAT_106e57b8 = "operator strength random scale max";
    _DAT_106e57e4 = "operator end cap state";
    _DAT_106e5810 = "Visibility Proxy Input Control Point Number";
    _DAT_106e583c = "Visibility Proxy Radius";
    _DAT_106e5868 = "Visibility input minimum";
    _DAT_106e5894 = "Visibility input maximum";
    _DAT_106e58c0 = "Visibility input dot minimum";
    _DAT_106e58ec = "Visibility input dot maximum";
    _DAT_106e5918 = "Visibility input distance minimum";
    _DAT_106e5944 = "Visibility input distance maximum";
    _DAT_106e5970 = "Visibility Alpha Scale minimum";
    _DAT_106e599c = "Visibility Alpha Scale maximum";
    _DAT_106e59c8 = "Visibility Radius Scale minimum";
    _DAT_106e59f4 = "Visibility Radius Scale maximum";
    _DAT_106e5a20 = "Visibility Radius FOV Scale base";
    _DAT_106e5a4c = "cube_width";
    _DAT_106e5a78 = "cutoff_radius";
    _DAT_106e5aa4 = "render_radius";
    _DAT_106e5b3c = "operator end fadein";
    _DAT_106e5b68 = "operator start fadeout";
    _DAT_106e5b94 = "operator end fadeout";
    _DAT_106e5bc0 = "operator fade oscillate";
    _DAT_106e5bec = "operator time offset seed";
    _DAT_106e5c18 = "operator time offset min";
    _DAT_106e5c44 = "operator time offset max";
    _DAT_106e5c70 = "operator time scale seed";
    _DAT_106e5c9c = "operator time scale min";
    _DAT_106e5cc8 = "operator time scale max";
    _DAT_106e5cf4 = "operator time strength random scale max";
    _DAT_106e5d20 = "operator strength scale seed";
    _DAT_106e5d4c = "operator strength random scale min";
    _DAT_106e5d78 = "operator strength random scale max";
    _DAT_106e5da4 = "operator end cap state";
    _DAT_106e5dd0 = "Visibility Proxy Input Control Point Number";
    _DAT_106e5dfc = "Visibility Proxy Radius";
    _DAT_106e5e28 = "Visibility input minimum";
    _DAT_106e5e54 = "Visibility input maximum";
    _DAT_106e5e80 = "Visibility input dot minimum";
    _DAT_106e5eac = "Visibility input dot maximum";
    _DAT_106e5ed8 = "Visibility input distance minimum";
    _DAT_106e5f04 = "Visibility input distance maximum";
    _DAT_106e5f30 = "Visibility Alpha Scale minimum";
    _DAT_106e5f5c = "Visibility Alpha Scale maximum";
    _DAT_106e5f88 = "Visibility Radius Scale minimum";
    _DAT_106e5fb4 = "Visibility Radius Scale maximum";
    _DAT_106e5fe0 = "Visibility Radius FOV Scale base";
    _DAT_106e600c = "rotate_rate(dps)";
    _DAT_106e6038 = "forward_angle";
    _DAT_106e603c = "-90.0f";
    _DAT_106e60cc = "operator end fadein";
    _DAT_106e60f8 = "operator start fadeout";
    _DAT_106e6124 = "operator end fadeout";
    _DAT_106e6150 = "operator fade oscillate";
    _DAT_106e617c = "operator time offset seed";
    _DAT_106e61a8 = "operator time offset min";
    _DAT_106e61d4 = "operator time offset max";
    _DAT_106e6200 = "operator time scale seed";
    _DAT_106e622c = "operator time scale min";
    _DAT_106e6258 = "operator time scale max";
    _DAT_106e6284 = "operator time strength random scale max";
    _DAT_106e62b0 = "operator strength scale seed";
    _DAT_106e62dc = "operator strength random scale min";
    _DAT_106e6308 = "operator strength random scale max";
    _DAT_106e6334 = "operator end cap state";
    _DAT_106e6360 = "Visibility Proxy Input Control Point Number";
    _DAT_106e638c = "Visibility Proxy Radius";
    _DAT_106e63b8 = "Visibility input minimum";
    _DAT_106e63e4 = "Visibility input maximum";
    _DAT_106e6410 = "Visibility input dot minimum";
    _DAT_106e643c = "Visibility input dot maximum";
    _DAT_106e6468 = "Visibility input distance minimum";
    _DAT_106e6494 = "Visibility input distance maximum";
    _DAT_106e64c0 = "Visibility Alpha Scale minimum";
    _DAT_106e64ec = "Visibility Alpha Scale maximum";
    _DAT_106e6518 = "Visibility Radius Scale minimum";
    _DAT_106e6544 = "Visibility Radius Scale maximum";
    _DAT_106e6570 = "Visibility Radius FOV Scale base";
    _DAT_106e659c = "sequence 0 model";
    _DAT_106e65b8 = "mdlPicker";
    _DAT_106e65c8 = "animation rate";
    _DAT_106e65f4 = "scale animation rate";
    _DAT_106e6620 = "animation rate scale field";
    _DAT_106e663c = "intchoice particlefield_scalar";
    _DAT_106e664c = "orient model z to normal";
    _DAT_106e6678 = "skin number";
    _DAT_106e66a4 = "activity override";
    _DAT_106e673c = "operator end fadein";
    _DAT_106e6768 = "operator start fadeout";
    _DAT_106e6794 = "operator end fadeout";
    _DAT_106e67c0 = "operator fade oscillate";
    _DAT_106e67ec = "operator time offset seed";
    _DAT_106e6818 = "operator time offset min";
    _DAT_106e6844 = "operator time offset max";
    _DAT_106e6870 = "operator time scale seed";
    _DAT_106e689c = "operator time scale min";
    _DAT_106e68c8 = "operator time scale max";
    _DAT_106e68f4 = "operator time strength random scale max";
    _DAT_106e6920 = "operator strength scale seed";
    _DAT_106e694c = "operator strength random scale min";
    _DAT_106e6978 = "operator strength random scale max";
    _DAT_106e69a4 = "operator end cap state";
    _DAT_106e69d0 = "Visibility Proxy Input Control Point Number";
    _DAT_106e69fc = "Visibility Proxy Radius";
    _DAT_106e6a28 = "Visibility input minimum";
    _DAT_106e6a54 = "Visibility input maximum";
    _DAT_106e6a80 = "Visibility input dot minimum";
    _DAT_106e6aac = "Visibility input dot maximum";
    _DAT_106e6ad8 = "Visibility input distance minimum";
    _DAT_106e6b04 = "Visibility input distance maximum";
    _DAT_106e6b30 = "Visibility Alpha Scale minimum";
    _DAT_106e6b5c = "Visibility Alpha Scale maximum";
    _DAT_106e6b88 = "Visibility Radius Scale minimum";
    _DAT_106e6bb4 = "Visibility Radius Scale maximum";
    _DAT_106e6be0 = "Visibility Radius FOV Scale base";
    _DAT_106e6cd4 = "operator end fadein";
    _DAT_106e6d00 = "operator start fadeout";
    _DAT_106e6d2c = "operator end fadeout";
    _DAT_106e6d58 = "operator fade oscillate";
    _DAT_106e6d84 = "operator time offset seed";
    _DAT_106e6db0 = "operator time offset min";
    _DAT_106e6ddc = "operator time offset max";
    _DAT_106e6e08 = "operator time scale seed";
    _DAT_106e6e34 = "operator time scale min";
    _DAT_106e6e60 = "operator time scale max";
    _DAT_106e6e8c = "operator time strength random scale max";
    _DAT_106e6eb8 = "operator strength scale seed";
    _DAT_106e6ee4 = "operator strength random scale min";
    _DAT_106e6f10 = "operator strength random scale max";
    _DAT_106e6f3c = "operator end cap state";
    _DAT_106e6f68 = "run for killed parent particles";
    _DAT_106e6f94 = "control point number";
    _DAT_106e6fc0 = "initial radius";
    _DAT_106e6fec = "thickness";
    _DAT_106e7018 = "min initial speed";
    _DAT_106e7044 = "max initial speed";
    _DAT_106e70c8 = "pitch";
    _DAT_106e70f4 = "even distribution";
    _DAT_106e7120 = "even distribution count";
    _DAT_106e714c = "XY velocity only";
    _DAT_106e7178 = "Override CP (X/Y/Z *= Radius/Thickness/Speed)";
    _DAT_106e71a4 = "Override CP 2 (X/Y/Z *= Pitch/Yaw/Roll)";
    _DAT_106e723c = "operator end fadein";
    _DAT_106e7268 = "operator start fadeout";
    _DAT_106e7294 = "operator end fadeout";
    _DAT_106e72c0 = "operator fade oscillate";
    _DAT_106e72ec = "operator time offset seed";
    _DAT_106e7318 = "operator time offset min";
    _DAT_106e7344 = "operator time offset max";
    _DAT_106e7370 = "operator time scale seed";
    _DAT_106e739c = "operator time scale min";
    _DAT_106e73c8 = "operator time scale max";
    _DAT_106e73f4 = "operator time strength random scale max";
    _DAT_106e7420 = "operator strength scale seed";
    _DAT_106e744c = "operator strength random scale min";
    _DAT_106e7478 = "operator strength random scale max";
    _DAT_106e74a4 = "operator end cap state";
    _DAT_106e74d0 = "run for killed parent particles";
    _DAT_106e74fc = "control point number";
    _DAT_106e7528 = "first dimension 0-2 (-1 disables)";
    _DAT_106e7554 = "second dimension 0-2 (-1 disables)";
    _DAT_106e7580 = "radius 1";
    _DAT_106e75ac = "radius 2";
    _DAT_106e75d8 = "point offset";
    _DAT_106e7604 = "particle density";
    _DAT_106e7630 = "use particle count instead of creation time";
    _DAT_106e765c = "local space";
    _DAT_106e7688 = "offset from existing position";
    _DAT_106e76b4 = "scale from conrol point (radius 1/radius 2/offset)";
    _DAT_106e774c = "operator end fadein";
    _DAT_106e7778 = "operator start fadeout";
    _DAT_106e77a4 = "operator end fadeout";
    _DAT_106e77d0 = "operator fade oscillate";
    _DAT_106e77fc = "operator time offset seed";
    _DAT_106e7828 = "operator time offset min";
    _DAT_106e7854 = "operator time offset max";
    _DAT_106e7880 = "operator time scale seed";
    _DAT_106e78ac = "operator time scale min";
    _DAT_106e78d8 = "operator time scale max";
    _DAT_106e7904 = "operator time strength random scale max";
    _DAT_106e7930 = "operator strength scale seed";
    _DAT_106e795c = "operator strength random scale min";
    _DAT_106e7988 = "operator strength random scale max";
    _DAT_106e79b4 = "operator end cap state";
    _DAT_106e79e0 = "run for killed parent particles";
    _DAT_106e7a0c = "control_point_number";
    _DAT_106e7a38 = "force to be inside model";
    _DAT_106e7a64 = "model hitbox scale";
    _DAT_106e7a90 = "direction bias";
    _DAT_106e7a94 = "0 0 0";
    _DAT_106e7abc = "desired hitbox";
    _DAT_106e7ae8 = "hitbox set";
    _DAT_106e7aec = "effects";
    _DAT_106e7b7c = "operator end fadein";
    _DAT_106e7ba8 = "operator start fadeout";
    _DAT_106e7bd4 = "operator end fadeout";
    _DAT_106e7c00 = "operator fade oscillate";
    _DAT_106e7c2c = "operator time offset seed";
    _DAT_106e7c58 = "operator time offset min";
    _DAT_106e7c84 = "operator time offset max";
    _DAT_106e7cb0 = "operator time scale seed";
    _DAT_106e7cdc = "operator time scale min";
    _DAT_106e7d08 = "operator time scale max";
    _DAT_106e7d34 = "operator time strength random scale max";
    _DAT_106e7d60 = "operator strength scale seed";
    _DAT_106e7d8c = "operator strength random scale min";
    _DAT_106e7db8 = "operator strength random scale max";
    _DAT_106e7de4 = "operator end cap state";
    _DAT_106e7e10 = "run for killed parent particles";
    _DAT_106e7e3c = "control_point_number";
    _DAT_106e7e68 = "model hitbox scale";
    _DAT_106e7e94 = "desired hitbox";
    _DAT_106e7ec0 = "hitbox set";
    _DAT_106e7ec4 = "effects";
    _DAT_106e7f54 = "operator end fadein";
    _DAT_106e7f80 = "operator start fadeout";
    _DAT_106e7fac = "operator end fadeout";
    _DAT_106e7fd8 = "operator fade oscillate";
    _DAT_106e8004 = "operator time offset seed";
    _DAT_106e8030 = "operator time offset min";
    _DAT_106e805c = "operator time offset max";
    _DAT_106e8088 = "operator time scale seed";
    _DAT_106e80b4 = "operator time scale min";
    _DAT_106e80e0 = "operator time scale max";
    _DAT_106e810c = "operator time strength random scale max";
    _DAT_106e8138 = "operator strength scale seed";
    _DAT_106e8164 = "operator strength random scale min";
    _DAT_106e8190 = "operator strength random scale max";
    _DAT_106e81bc = "operator end cap state";
    _DAT_106e81e8 = "run for killed parent particles";
    _DAT_106e8214 = "control_point_number";
    _DAT_106e8240 = "force to be inside model";
    _DAT_106e826c = "model hitbox scale";
    _DAT_106e8298 = "direction bias";
    _DAT_106e829c = "0 0 0";
    _DAT_106e82c4 = "desired hitbox";
    _DAT_106e82f0 = "hitbox set";
    _DAT_106e82f4 = "effects";
    _DAT_106e831c = "maintain existing hitbox";
    _DAT_106e83b4 = "operator end fadein";
    _DAT_106e83e0 = "operator start fadeout";
    _DAT_106e840c = "operator end fadeout";
    _DAT_106e8438 = "operator fade oscillate";
    _DAT_106e8464 = "operator time offset seed";
    _DAT_106e8490 = "operator time offset min";
    _DAT_106e84bc = "operator time offset max";
    _DAT_106e84e8 = "operator time scale seed";
    _DAT_106e8514 = "operator time scale min";
    _DAT_106e8540 = "operator time scale max";
    _DAT_106e856c = "operator time strength random scale max";
    _DAT_106e8598 = "operator strength scale seed";
    _DAT_106e85c4 = "operator strength random scale min";
    _DAT_106e85f0 = "operator strength random scale max";
    _DAT_106e861c = "operator end cap state";
    _DAT_106e8648 = "run for killed parent particles";
    _DAT_106e8674 = "distance_min";
    _DAT_106e86a0 = "distance_max";
    _DAT_106e86cc = "distance_bias";
    _DAT_106e86d0 = "1 1 1";
    _DAT_106e86f8 = "distance_bias_absolute_value";
    _DAT_106e86fc = "0 0 0";
    _DAT_106e8724 = "bias in local system";
    _DAT_106e8750 = "control_point_number";
    _DAT_106e877c = "speed_min";
    _DAT_106e87a8 = "speed_max";
    _DAT_106e87d4 = "speed_random_exponent";
    _DAT_106e8800 = "speed_in_local_coordinate_system_min";
    _DAT_106e8804 = "0 0 0";
    _DAT_106e882c = "speed_in_local_coordinate_system_max";
    _DAT_106e8830 = "0 0 0";
    _DAT_106e8858 = "randomly distribute to highest supplied Control Point";
    _DAT_106e8884 = "randomly distribution growth time";
    _DAT_106e88b0 = "scale cp (distance/speed/local speed)";
    _DAT_106e8944 = "operator end fadein";
    _DAT_106e8970 = "operator start fadeout";
    _DAT_106e899c = "operator end fadeout";
    _DAT_106e89c8 = "operator fade oscillate";
    _DAT_106e89f4 = "operator time offset seed";
    _DAT_106e8a20 = "operator time offset min";
    _DAT_106e8a4c = "operator time offset max";
    _DAT_106e8a78 = "operator time scale seed";
    _DAT_106e8aa4 = "operator time scale min";
    _DAT_106e8ad0 = "operator time scale max";
    _DAT_106e8afc = "operator time strength random scale max";
    _DAT_106e8b28 = "operator strength scale seed";
    _DAT_106e8b54 = "operator strength random scale min";
    _DAT_106e8b80 = "operator strength random scale max";
    _DAT_106e8bac = "operator end cap state";
    _DAT_106e8bd8 = "run for killed parent particles";
    _DAT_106e8c08 = "0 0 0";
    _DAT_106e8c34 = "0 0 0";
    _DAT_106e8c5c = "control point number";
    _DAT_106e8c88 = "use local space";
    _DAT_106e8d1c = "operator end fadein";
    _DAT_106e8d48 = "operator start fadeout";
    _DAT_106e8d74 = "operator end fadeout";
    _DAT_106e8da0 = "operator fade oscillate";
    _DAT_106e8dcc = "operator time offset seed";
    _DAT_106e8df8 = "operator time offset min";
    _DAT_106e8e24 = "operator time offset max";
    _DAT_106e8e50 = "operator time scale seed";
    _DAT_106e8e7c = "operator time scale min";
    _DAT_106e8ea8 = "operator time scale max";
    _DAT_106e8ed4 = "operator time strength random scale max";
    _DAT_106e8f00 = "operator strength scale seed";
    _DAT_106e8f2c = "operator strength random scale min";
    _DAT_106e8f58 = "operator strength random scale max";
    _DAT_106e8f84 = "operator end cap state";
    _DAT_106e8fb0 = "run for killed parent particles";
    _DAT_106e8fdc = "control_point_number";
    _DAT_106e9008 = "offset min";
    _DAT_106e900c = "0 0 0";
    _DAT_106e9034 = "offset max";
    _DAT_106e9038 = "0 0 0";
    _DAT_106e9060 = "offset in local space 0/1";
    _DAT_106e908c = "offset proportional to radius 0/1";
    _DAT_106e9124 = "operator end fadein";
    _DAT_106e9150 = "operator start fadeout";
    _DAT_106e917c = "operator end fadeout";
    _DAT_106e91a8 = "operator fade oscillate";
    _DAT_106e91d4 = "operator time offset seed";
    _DAT_106e9200 = "operator time offset min";
    _DAT_106e922c = "operator time offset max";
    _DAT_106e9258 = "operator time scale seed";
    _DAT_106e9284 = "operator time scale min";
    _DAT_106e92b0 = "operator time scale max";
    _DAT_106e92dc = "operator time strength random scale max";
    _DAT_106e9308 = "operator strength scale seed";
    _DAT_106e9334 = "operator strength random scale min";
    _DAT_106e9360 = "operator strength random scale max";
    _DAT_106e938c = "operator end cap state";
    _DAT_106e93b8 = "run for killed parent particles";
    _DAT_106e93e4 = "offset";
    _DAT_106e9410 = "kill on no collision";
    _DAT_106e943c = "include water";
    _DAT_106e9468 = "set normal";
    _DAT_106e9494 = "max trace length";
    _DAT_106e94c0 = "collision group";
    _DAT_106e9554 = "operator end fadein";
    _DAT_106e9580 = "operator start fadeout";
    _DAT_106e95ac = "operator end fadeout";
    _DAT_106e95d8 = "operator fade oscillate";
    _DAT_106e9604 = "operator time offset seed";
    _DAT_106e9630 = "operator time offset min";
    _DAT_106e965c = "operator time offset max";
    _DAT_106e9688 = "operator time scale seed";
    _DAT_106e96b4 = "operator time scale min";
    _DAT_106e96e0 = "operator time scale max";
    _DAT_106e970c = "operator time strength random scale max";
    _DAT_106e9738 = "operator strength scale seed";
    _DAT_106e9764 = "operator strength random scale min";
    _DAT_106e9790 = "operator strength random scale max";
    _DAT_106e97bc = "operator end cap state";
    _DAT_106e97e8 = "run for killed parent particles";
    _DAT_106e9814 = "control_point_number";
    _DAT_106e9840 = "random_speed_min";
    _DAT_106e986c = "random_speed_max";
    _DAT_106e9898 = "speed_in_local_coordinate_system_min";
    _DAT_106e989c = "0 0 0";
    _DAT_106e98c4 = "speed_in_local_coordinate_system_max";
    _DAT_106e98c8 = "0 0 0";
    _DAT_106e995c = "operator end fadein";
    _DAT_106e9988 = "operator start fadeout";
    _DAT_106e99b4 = "operator end fadeout";
    _DAT_106e99e0 = "operator fade oscillate";
    _DAT_106e9a0c = "operator time offset seed";
    _DAT_106e9a38 = "operator time offset min";
    _DAT_106e9a64 = "operator time offset max";
    _DAT_106e9a90 = "operator time scale seed";
    _DAT_106e9abc = "operator time scale min";
    _DAT_106e9ae8 = "operator time scale max";
    _DAT_106e9b14 = "operator time strength random scale max";
    _DAT_106e9b40 = "operator strength scale seed";
    _DAT_106e9b6c = "operator strength random scale min";
    _DAT_106e9b98 = "operator strength random scale max";
    _DAT_106e9bc4 = "operator end cap state";
    _DAT_106e9bf0 = "run for killed parent particles";
    _DAT_106e9c1c = "Control Point Number";
    _DAT_106e9c48 = "Time Noise Coordinate Scale";
    _DAT_106e9c74 = "Spatial Noise Coordinate Scale";
    _DAT_106e9ca0 = "Time Coordinate Offset";
    _DAT_106e9ccc = "Spatial Coordinate Offset";
    _DAT_106e9cd0 = "0 0 0";
    _DAT_106e9cf8 = "Absolute Value";
    _DAT_106e9cfc = "0 0 0";
    _DAT_106e9d24 = "Invert Abs Value";
    _DAT_106e9d28 = "0 0 0";
    _DAT_106e9d50 = "output minimum";
    _DAT_106e9d54 = "0 0 0";
    _DAT_106e9d7c = "output maximum";
    _DAT_106e9d80 = "1 1 1";
    _DAT_106e9da8 = "Apply Velocity in Local Space (0/1)";
    _DAT_106e9e3c = "operator end fadein";
    _DAT_106e9e68 = "operator start fadeout";
    _DAT_106e9e94 = "operator end fadeout";
    _DAT_106e9ec0 = "operator fade oscillate";
    _DAT_106e9eec = "operator time offset seed";
    _DAT_106e9f18 = "operator time offset min";
    _DAT_106e9f44 = "operator time offset max";
    _DAT_106e9f70 = "operator time scale seed";
    _DAT_106e9f9c = "operator time scale min";
    _DAT_106e9fc8 = "operator time scale max";
    _DAT_106e9ff4 = "operator time strength random scale max";
    _DAT_106ea020 = "operator strength scale seed";
    _DAT_106ea04c = "operator strength random scale min";
    _DAT_106ea078 = "operator strength random scale max";
    _DAT_106ea0a4 = "operator end cap state";
    _DAT_106ea0d0 = "run for killed parent particles";
    _DAT_106ea0fc = "lifetime_min";
    _DAT_106ea128 = "lifetime_max";
    _DAT_106ea154 = "lifetime_random_exponent";
    _DAT_106ea1ec = "operator end fadein";
    _DAT_106ea218 = "operator start fadeout";
    _DAT_106ea244 = "operator end fadeout";
    _DAT_106ea270 = "operator fade oscillate";
    _DAT_106ea29c = "operator time offset seed";
    _DAT_106ea2c8 = "operator time offset min";
    _DAT_106ea2f4 = "operator time offset max";
    _DAT_106ea320 = "operator time scale seed";
    _DAT_106ea34c = "operator time scale min";
    _DAT_106ea378 = "operator time scale max";
    _DAT_106ea3a4 = "operator time strength random scale max";
    _DAT_106ea3d0 = "operator strength scale seed";
    _DAT_106ea3fc = "operator strength random scale min";
    _DAT_106ea428 = "operator strength random scale max";
    _DAT_106ea454 = "operator end cap state";
    _DAT_106ea480 = "run for killed parent particles";
    _DAT_106ea504 = "exponent";
    _DAT_106ea530 = "output field";
    _DAT_106ea54c = "intchoice particlefield_scalar";
    _DAT_106ea5c4 = "operator end fadein";
    _DAT_106ea5f0 = "operator start fadeout";
    _DAT_106ea61c = "operator end fadeout";
    _DAT_106ea648 = "operator fade oscillate";
    _DAT_106ea674 = "operator time offset seed";
    _DAT_106ea6a0 = "operator time offset min";
    _DAT_106ea6cc = "operator time offset max";
    _DAT_106ea6f8 = "operator time scale seed";
    _DAT_106ea724 = "operator time scale min";
    _DAT_106ea750 = "operator time scale max";
    _DAT_106ea77c = "operator time strength random scale max";
    _DAT_106ea7a8 = "operator strength scale seed";
    _DAT_106ea7d4 = "operator strength random scale min";
    _DAT_106ea800 = "operator strength random scale max";
    _DAT_106ea82c = "operator end cap state";
    _DAT_106ea858 = "run for killed parent particles";
    _DAT_106ea888 = "0 0 0";
    _DAT_106ea8b4 = "0 0 0";
    _DAT_106ea8dc = "output field";
    _DAT_106ea8f8 = "intchoice particlefield_vector";
    _DAT_106ea974 = "operator end fadein";
    _DAT_106ea9a0 = "operator start fadeout";
    _DAT_106ea9cc = "operator end fadeout";
    _DAT_106ea9f8 = "operator fade oscillate";
    _DAT_106eaa24 = "operator time offset seed";
    _DAT_106eaa50 = "operator time offset min";
    _DAT_106eaa7c = "operator time offset max";
    _DAT_106eaaa8 = "operator time scale seed";
    _DAT_106eaad4 = "operator time scale min";
    _DAT_106eab00 = "operator time scale max";
    _DAT_106eab2c = "operator time strength random scale max";
    _DAT_106eab58 = "operator strength scale seed";
    _DAT_106eab84 = "operator strength random scale min";
    _DAT_106eabb0 = "operator strength random scale max";
    _DAT_106eabdc = "operator end cap state";
    _DAT_106eac08 = "run for killed parent particles";
    _DAT_106eac8c = "component 0/1/2 X/Y/Z";
    _DAT_106eacb8 = "output field";
    _DAT_106eacd4 = "intchoice particlefield_vector";
    _DAT_106ead4c = "operator end fadein";
    _DAT_106ead78 = "operator start fadeout";
    _DAT_106eada4 = "operator end fadeout";
    _DAT_106eadd0 = "operator fade oscillate";
    _DAT_106eadfc = "operator time offset seed";
    _DAT_106eae28 = "operator time offset min";
    _DAT_106eae54 = "operator time offset max";
    _DAT_106eae80 = "operator time scale seed";
    _DAT_106eaeac = "operator time scale min";
    _DAT_106eaed8 = "operator time scale max";
    _DAT_106eaf04 = "operator time strength random scale max";
    _DAT_106eaf30 = "operator strength scale seed";
    _DAT_106eaf5c = "operator strength random scale min";
    _DAT_106eaf88 = "operator strength random scale max";
    _DAT_106eafb4 = "operator end cap state";
    _DAT_106eafe0 = "run for killed parent particles";
    _DAT_106eb00c = "radius_min";
    _DAT_106eb038 = "radius_max";
    _DAT_106eb064 = "radius_random_exponent";
    _DAT_106eb0fc = "operator end fadein";
    _DAT_106eb128 = "operator start fadeout";
    _DAT_106eb154 = "operator end fadeout";
    _DAT_106eb180 = "operator fade oscillate";
    _DAT_106eb1ac = "operator time offset seed";
    _DAT_106eb1d8 = "operator time offset min";
    _DAT_106eb204 = "operator time offset max";
    _DAT_106eb230 = "operator time scale seed";
    _DAT_106eb25c = "operator time scale min";
    _DAT_106eb288 = "operator time scale max";
    _DAT_106eb2b4 = "operator time strength random scale max";
    _DAT_106eb2e0 = "operator strength scale seed";
    _DAT_106eb30c = "operator strength random scale min";
    _DAT_106eb338 = "operator strength random scale max";
    _DAT_106eb364 = "operator end cap state";
    _DAT_106eb390 = "run for killed parent particles";
    _DAT_106eb3bc = "alpha_min";
    _DAT_106eb3e8 = "alpha_max";
    _DAT_106eb414 = "alpha_random_exponent";
    _DAT_106eb4ac = "operator end fadein";
    _DAT_106eb4d8 = "operator start fadeout";
    _DAT_106eb504 = "operator end fadeout";
    _DAT_106eb530 = "operator fade oscillate";
    _DAT_106eb55c = "operator time offset seed";
    _DAT_106eb588 = "operator time offset min";
    _DAT_106eb5b4 = "operator time offset max";
    _DAT_106eb5e0 = "operator time scale seed";
    _DAT_106eb60c = "operator time scale min";
    _DAT_106eb638 = "operator time scale max";
    _DAT_106eb664 = "operator time strength random scale max";
    _DAT_106eb690 = "operator strength scale seed";
    _DAT_106eb6bc = "operator strength random scale min";
    _DAT_106eb6e8 = "operator strength random scale max";
    _DAT_106eb714 = "operator end cap state";
    _DAT_106eb740 = "run for killed parent particles";
    _DAT_106eb76c = "rotation_initial";
    _DAT_106eb798 = "rotation_offset_min";
    _DAT_106eb7c4 = "rotation_offset_max";
    _DAT_106eb7f0 = "rotation_random_exponent";
    _DAT_106eb81c = "randomly_flip_direction";
    _DAT_106eb8b4 = "operator end fadein";
    _DAT_106eb8e0 = "operator start fadeout";
    _DAT_106eb90c = "operator end fadeout";
    _DAT_106eb938 = "operator fade oscillate";
    _DAT_106eb964 = "operator time offset seed";
    _DAT_106eb990 = "operator time offset min";
    _DAT_106eb9bc = "operator time offset max";
    _DAT_106eb9e8 = "operator time scale seed";
    _DAT_106eba14 = "operator time scale min";
    _DAT_106eba40 = "operator time scale max";
    _DAT_106eba6c = "operator time strength random scale max";
    _DAT_106eba98 = "operator strength scale seed";
    _DAT_106ebac4 = "operator strength random scale min";
    _DAT_106ebaf0 = "operator strength random scale max";
    _DAT_106ebb1c = "operator end cap state";
    _DAT_106ebb48 = "run for killed parent particles";
    _DAT_106ebb74 = "rotation_speed_constant";
    _DAT_106ebba0 = "rotation_speed_random_min";
    _DAT_106ebbcc = "rotation_speed_random_max";
    _DAT_106ebbf8 = "rotation_speed_random_exponent";
    _DAT_106ebc24 = "randomly_flip_direction";
    _DAT_106ebcbc = "operator end fadein";
    _DAT_106ebce8 = "operator start fadeout";
    _DAT_106ebd14 = "operator end fadeout";
    _DAT_106ebd40 = "operator fade oscillate";
    _DAT_106ebd6c = "operator time offset seed";
    _DAT_106ebd98 = "operator time offset min";
    _DAT_106ebdc4 = "operator time offset max";
    _DAT_106ebdf0 = "operator time scale seed";
    _DAT_106ebe1c = "operator time scale min";
    _DAT_106ebe48 = "operator time scale max";
    _DAT_106ebe74 = "operator time strength random scale max";
    _DAT_106ebea0 = "operator strength scale seed";
    _DAT_106ebecc = "operator strength random scale min";
    _DAT_106ebef8 = "operator strength random scale max";
    _DAT_106ebf24 = "operator end cap state";
    _DAT_106ebf50 = "run for killed parent particles";
    _DAT_106ebf7c = "yaw_initial";
    _DAT_106ebfa8 = "yaw_offset_min";
    _DAT_106ebfd4 = "yaw_offset_max";
    _DAT_106ec000 = "yaw_random_exponent";
    _DAT_106ec094 = "operator end fadein";
    _DAT_106ec0c0 = "operator start fadeout";
    _DAT_106ec0ec = "operator end fadeout";
    _DAT_106ec118 = "operator fade oscillate";
    _DAT_106ec144 = "operator time offset seed";
    _DAT_106ec170 = "operator time offset min";
    _DAT_106ec19c = "operator time offset max";
    _DAT_106ec1c8 = "operator time scale seed";
    _DAT_106ec1f4 = "operator time scale min";
    _DAT_106ec220 = "operator time scale max";
    _DAT_106ec24c = "operator time strength random scale max";
    _DAT_106ec278 = "operator strength scale seed";
    _DAT_106ec2a4 = "operator strength random scale min";
    _DAT_106ec2d0 = "operator strength random scale max";
    _DAT_106ec2fc = "operator end cap state";
    _DAT_106ec328 = "run for killed parent particles";
    _DAT_106ec354 = "color1";
    _DAT_106ec358 = "255 255 255 255";
    _DAT_106ec380 = "color2";
    _DAT_106ec384 = "255 255 255 255";
    _DAT_106ec3ac = "tint_perc";
    _DAT_106ec3d8 = "tint control point";
    _DAT_106ec404 = "tint clamp min";
    _DAT_106ec408 = "0 0 0 0";
    _DAT_106ec430 = "tint clamp max";
    _DAT_106ec434 = "255 255 255 255";
    _DAT_106ec45c = "tint update movement threshold";
    _DAT_106ec488 = "tint blend mode";
    _DAT_106ec4b4 = "light amplification amount";
    _DAT_106ec4e0 = "output field";
    _DAT_106ec4fc = "intchoice particlefield_vector";
    _DAT_106ec574 = "operator end fadein";
    _DAT_106ec5a0 = "operator start fadeout";
    _DAT_106ec5cc = "operator end fadeout";
    _DAT_106ec5f8 = "operator fade oscillate";
    _DAT_106ec624 = "operator time offset seed";
    _DAT_106ec650 = "operator time offset min";
    _DAT_106ec67c = "operator time offset max";
    _DAT_106ec6a8 = "operator time scale seed";
    _DAT_106ec6d4 = "operator time scale min";
    _DAT_106ec700 = "operator time scale max";
    _DAT_106ec72c = "operator time strength random scale max";
    _DAT_106ec758 = "operator strength scale seed";
    _DAT_106ec784 = "operator strength random scale min";
    _DAT_106ec7b0 = "operator strength random scale max";
    _DAT_106ec7dc = "operator end cap state";
    _DAT_106ec808 = "run for killed parent particles";
    _DAT_106ec834 = "color1";
    _DAT_106ec838 = "255 255 255 255";
    _DAT_106ec860 = "color2";
    _DAT_106ec864 = "255 255 255 255";
    _DAT_106ec88c = "light bias";
    _DAT_106ec8b8 = "tint clamp min";
    _DAT_106ec8bc = "0 0 0 0";
    _DAT_106ec8e4 = "tint clamp max";
    _DAT_106ec8e8 = "255 255 255 255";
    _DAT_106ec910 = "tint blend mode";
    _DAT_106ec93c = "light amplification amount";
    _DAT_106ec9d4 = "operator end fadein";
    _DAT_106eca00 = "operator start fadeout";
    _DAT_106eca2c = "operator end fadeout";
    _DAT_106eca58 = "operator fade oscillate";
    _DAT_106eca84 = "operator time offset seed";
    _DAT_106ecab0 = "operator time offset min";
    _DAT_106ecadc = "operator time offset max";
    _DAT_106ecb08 = "operator time scale seed";
    _DAT_106ecb34 = "operator time scale min";
    _DAT_106ecb60 = "operator time scale max";
    _DAT_106ecb8c = "operator time strength random scale max";
    _DAT_106ecbb8 = "operator strength scale seed";
    _DAT_106ecbe4 = "operator strength random scale min";
    _DAT_106ecc10 = "operator strength random scale max";
    _DAT_106ecc3c = "operator end cap state";
    _DAT_106ecc68 = "run for killed parent particles";
    _DAT_106ecc94 = "length_min";
    _DAT_106eccc0 = "length_max";
    _DAT_106eccec = "length_random_exponent";
    _DAT_106ecd84 = "operator end fadein";
    _DAT_106ecdb0 = "operator start fadeout";
    _DAT_106ecddc = "operator end fadeout";
    _DAT_106ece08 = "operator fade oscillate";
    _DAT_106ece34 = "operator time offset seed";
    _DAT_106ece60 = "operator time offset min";
    _DAT_106ece8c = "operator time offset max";
    _DAT_106eceb8 = "operator time scale seed";
    _DAT_106ecee4 = "operator time scale min";
    _DAT_106ecf10 = "operator time scale max";
    _DAT_106ecf3c = "operator time strength random scale max";
    _DAT_106ecf68 = "operator strength scale seed";
    _DAT_106ecf94 = "operator strength random scale min";
    _DAT_106ecfc0 = "operator strength random scale max";
    _DAT_106ecfec = "operator end cap state";
    _DAT_106ed018 = "run for killed parent particles";
    _DAT_106ed044 = "sequence_min";
    _DAT_106ed060 = "sheetsequencepicker";
    _DAT_106ed070 = "sequence_max";
    _DAT_106ed08c = "sheetsequencepicker";
    _DAT_106ed09c = "shuffle";
    _DAT_106ed0c8 = "linear";
    _DAT_106ed15c = "operator end fadein";
    _DAT_106ed188 = "operator start fadeout";
    _DAT_106ed1b4 = "operator end fadeout";
    _DAT_106ed1e0 = "operator fade oscillate";
    _DAT_106ed20c = "operator time offset seed";
    _DAT_106ed238 = "operator time offset min";
    _DAT_106ed264 = "operator time offset max";
    _DAT_106ed290 = "operator time scale seed";
    _DAT_106ed2bc = "operator time scale min";
    _DAT_106ed2e8 = "operator time scale max";
    _DAT_106ed314 = "operator time strength random scale max";
    _DAT_106ed340 = "operator strength scale seed";
    _DAT_106ed36c = "operator strength random scale min";
    _DAT_106ed398 = "operator strength random scale max";
    _DAT_106ed3c4 = "operator end cap state";
    _DAT_106ed3f0 = "run for killed parent particles";
    _DAT_106ed41c = "control point";
    _DAT_106ed448 = "per particle spatial offset";
    _DAT_106ed44c = "0 0 0";
    _DAT_106ed474 = "offset propotional to radius";
    _DAT_106ed50c = "operator end fadein";
    _DAT_106ed538 = "operator start fadeout";
    _DAT_106ed564 = "operator end fadeout";
    _DAT_106ed590 = "operator fade oscillate";
    _DAT_106ed5bc = "operator time offset seed";
    _DAT_106ed5e8 = "operator time offset min";
    _DAT_106ed614 = "operator time offset max";
    _DAT_106ed640 = "operator time scale seed";
    _DAT_106ed66c = "operator time scale min";
    _DAT_106ed698 = "operator time scale max";
    _DAT_106ed6c4 = "operator time strength random scale max";
    _DAT_106ed6f0 = "operator strength scale seed";
    _DAT_106ed71c = "operator strength random scale min";
    _DAT_106ed748 = "operator strength random scale max";
    _DAT_106ed774 = "operator end cap state";
    _DAT_106ed7a0 = "run for killed parent particles";
    _DAT_106ed7cc = "control point number";
    _DAT_106ed7f8 = "warp min";
    _DAT_106ed7fc = "1 1 1";
    _DAT_106ed824 = "warp max";
    _DAT_106ed828 = "1 1 1";
    _DAT_106ed850 = "warp transition time (treats min/max as start/end sizes)";
    _DAT_106ed87c = "warp transition start time";
    _DAT_106ed8a8 = "reverse warp (0/1)";
    _DAT_106ed8d4 = "use particle count instead of time";
    _DAT_106ed96c = "operator end fadein";
    _DAT_106ed998 = "operator start fadeout";
    _DAT_106ed9c4 = "operator end fadeout";
    _DAT_106ed9f0 = "operator fade oscillate";
    _DAT_106eda1c = "operator time offset seed";
    _DAT_106eda48 = "operator time offset min";
    _DAT_106eda74 = "operator time offset max";
    _DAT_106edaa0 = "operator time scale seed";
    _DAT_106edacc = "operator time scale min";
    _DAT_106edaf8 = "operator time scale max";
    _DAT_106edb24 = "operator time strength random scale max";
    _DAT_106edb50 = "operator strength scale seed";
    _DAT_106edb7c = "operator strength random scale min";
    _DAT_106edba8 = "operator strength random scale max";
    _DAT_106edbd4 = "operator end cap state";
    _DAT_106edc00 = "run for killed parent particles";
    _DAT_106edc2c = "time noise coordinate scale";
    _DAT_106edc58 = "spatial noise coordinate scale";
    _DAT_106edc5c = "0.001";
    _DAT_106edc84 = "output field";
    _DAT_106edca0 = "intchoice particlefield_scalar";
    _DAT_106edcb0 = "time coordinate offset";
    _DAT_106edcdc = "spatial coordinate offset";
    _DAT_106edce0 = "0 0 0";
    _DAT_106edd08 = "absolute value";
    _DAT_106edd34 = "invert absolute value";
    _DAT_106edd60 = "output minimum";
    _DAT_106edd8c = "output maximum";
    _DAT_106eddb8 = "world time noise coordinate scale";
    _DAT_106ede4c = "operator end fadein";
    _DAT_106ede78 = "operator start fadeout";
    _DAT_106edea4 = "operator end fadeout";
    _DAT_106eded0 = "operator fade oscillate";
    _DAT_106edefc = "operator time offset seed";
    _DAT_106edf28 = "operator time offset min";
    _DAT_106edf54 = "operator time offset max";
    _DAT_106edf80 = "operator time scale seed";
    _DAT_106edfac = "operator time scale min";
    _DAT_106edfd8 = "operator time scale max";
    _DAT_106ee004 = "operator time strength random scale max";
    _DAT_106ee030 = "operator strength scale seed";
    _DAT_106ee05c = "operator strength random scale min";
    _DAT_106ee088 = "operator strength random scale max";
    _DAT_106ee0b4 = "operator end cap state";
    _DAT_106ee0e0 = "run for killed parent particles";
    _DAT_106ee10c = "maximum distance";
    _DAT_106ee138 = "bulge";
    _DAT_106ee164 = "start control point number";
    _DAT_106ee190 = "end control point number";
    _DAT_106ee1bc = "bulge control 0=random 1=orientation of start pnt 2=orientation of end point";
    _DAT_106ee1e8 = "mid point position";
    _DAT_106ee214 = "randomly select sequential CP pairs between start and end points";
    _DAT_106ee2ac = "operator end fadein";
    _DAT_106ee2d8 = "operator start fadeout";
    _DAT_106ee304 = "operator end fadeout";
    _DAT_106ee330 = "operator fade oscillate";
    _DAT_106ee35c = "operator time offset seed";
    _DAT_106ee388 = "operator time offset min";
    _DAT_106ee3b4 = "operator time offset max";
    _DAT_106ee3e0 = "operator time scale seed";
    _DAT_106ee40c = "operator time scale min";
    _DAT_106ee438 = "operator time scale max";
    _DAT_106ee464 = "operator time strength random scale max";
    _DAT_106ee490 = "operator strength scale seed";
    _DAT_106ee4bc = "operator strength random scale min";
    _DAT_106ee4e8 = "operator strength random scale max";
    _DAT_106ee514 = "operator end cap state";
    _DAT_106ee540 = "run for killed parent particles";
    _DAT_106ee56c = "minimum speed";
    _DAT_106ee598 = "maximum speed";
    _DAT_106ee5c4 = "end spread";
    _DAT_106ee5f0 = "start offset";
    _DAT_106ee61c = "end offset";
    _DAT_106ee648 = "bias lifetime by trail length";
    _DAT_106ee674 = "end control point";
    _DAT_106ee70c = "operator end fadein";
    _DAT_106ee738 = "operator start fadeout";
    _DAT_106ee764 = "operator end fadeout";
    _DAT_106ee790 = "operator fade oscillate";
    _DAT_106ee7bc = "operator time offset seed";
    _DAT_106ee7e8 = "operator time offset min";
    _DAT_106ee814 = "operator time offset max";
    _DAT_106ee840 = "operator time scale seed";
    _DAT_106ee86c = "operator time scale min";
    _DAT_106ee898 = "operator time scale max";
    _DAT_106ee8c4 = "operator time strength random scale max";
    _DAT_106ee8f0 = "operator strength scale seed";
    _DAT_106ee91c = "operator strength random scale min";
    _DAT_106ee948 = "operator strength random scale max";
    _DAT_106ee974 = "operator end cap state";
    _DAT_106ee9a0 = "run for killed parent particles";
    _DAT_106ee9cc = "emitter lifetime start time (seconds)";
    _DAT_106ee9f8 = "emitter lifetime end time (seconds)";
    _DAT_106eea24 = "input field";
    _DAT_106eea40 = "intchoice particlefield_scalar";
    _DAT_106eea50 = "input minimum";
    _DAT_106eea7c = "input maximum";
    _DAT_106eeaa8 = "output field";
    _DAT_106eeac4 = "intchoice particlefield_scalar";
    _DAT_106eead4 = "output minimum";
    _DAT_106eeb00 = "output maximum";
    _DAT_106eeb2c = "output is scalar of initial random range";
    _DAT_106eeb58 = "only active within specified input range";
    _DAT_106eebec = "operator end fadein";
    _DAT_106eec18 = "operator start fadeout";
    _DAT_106eec44 = "operator end fadeout";
    _DAT_106eec70 = "operator fade oscillate";
    _DAT_106eec9c = "operator time offset seed";
    _DAT_106eecc8 = "operator time offset min";
    _DAT_106eecf4 = "operator time offset max";
    _DAT_106eed20 = "operator time scale seed";
    _DAT_106eed4c = "operator time scale min";
    _DAT_106eed78 = "operator time scale max";
    _DAT_106eeda4 = "operator time strength random scale max";
    _DAT_106eedd0 = "operator strength scale seed";
    _DAT_106eedfc = "operator strength random scale min";
    _DAT_106eee28 = "operator strength random scale max";
    _DAT_106eee54 = "operator end cap state";
    _DAT_106eee80 = "run for killed parent particles";
    _DAT_106eeeac = "input minimum";
    _DAT_106eeed8 = "input maximum";
    _DAT_106eef04 = "output field";
    _DAT_106eef20 = "intchoice particlefield_scalar";
    _DAT_106eef30 = "output minimum";
    _DAT_106eef5c = "output maximum";
    _DAT_106eef88 = "output is scalar of initial random range";
    _DAT_106eefb4 = "only active within specified input range";
    _DAT_106ef04c = "operator end fadein";
    _DAT_106ef078 = "operator start fadeout";
    _DAT_106ef0a4 = "operator end fadeout";
    _DAT_106ef0d0 = "operator fade oscillate";
    _DAT_106ef0fc = "operator time offset seed";
    _DAT_106ef128 = "operator time offset min";
    _DAT_106ef154 = "operator time offset max";
    _DAT_106ef180 = "operator time scale seed";
    _DAT_106ef1ac = "operator time scale min";
    _DAT_106ef1d8 = "operator time scale max";
    _DAT_106ef204 = "operator time strength random scale max";
    _DAT_106ef230 = "operator strength scale seed";
    _DAT_106ef25c = "operator strength random scale min";
    _DAT_106ef288 = "operator strength random scale max";
    _DAT_106ef2b4 = "operator end cap state";
    _DAT_106ef2e0 = "run for killed parent particles";
    _DAT_106ef30c = "control point number";
    _DAT_106ef338 = "velocity scale";
    _DAT_106ef3cc = "operator end fadein";
    _DAT_106ef3f8 = "operator start fadeout";
    _DAT_106ef424 = "operator end fadeout";
    _DAT_106ef450 = "operator fade oscillate";
    _DAT_106ef47c = "operator time offset seed";
    _DAT_106ef4a8 = "operator time offset min";
    _DAT_106ef4d4 = "operator time offset max";
    _DAT_106ef500 = "operator time scale seed";
    _DAT_106ef52c = "operator time scale min";
    _DAT_106ef558 = "operator time scale max";
    _DAT_106ef584 = "operator time strength random scale max";
    _DAT_106ef5b0 = "operator strength scale seed";
    _DAT_106ef5dc = "operator strength random scale min";
    _DAT_106ef608 = "operator strength random scale max";
    _DAT_106ef634 = "operator end cap state";
    _DAT_106ef660 = "run for killed parent particles";
    _DAT_106ef68c = "control point number";
    _DAT_106ef6b8 = "velocity scale";
    _DAT_106ef6e4 = "comparison control point number";
    _DAT_106ef710 = "local space control point number";
    _DAT_106ef73c = "direction only";
    _DAT_106ef7d4 = "operator end fadein";
    _DAT_106ef800 = "operator start fadeout";
    _DAT_106ef82c = "operator end fadeout";
    _DAT_106ef858 = "operator fade oscillate";
    _DAT_106ef884 = "operator time offset seed";
    _DAT_106ef8b0 = "operator time offset min";
    _DAT_106ef8dc = "operator time offset max";
    _DAT_106ef908 = "operator time scale seed";
    _DAT_106ef934 = "operator time scale min";
    _DAT_106ef960 = "operator time scale max";
    _DAT_106ef98c = "operator time strength random scale max";
    _DAT_106ef9b8 = "operator strength scale seed";
    _DAT_106ef9e4 = "operator strength random scale min";
    _DAT_106efa10 = "operator strength random scale max";
    _DAT_106efa3c = "operator end cap state";
    _DAT_106efa68 = "run for killed parent particles";
    _DAT_106efa94 = "time noise coordinate scale";
    _DAT_106efac0 = "spatial noise coordinate scale";
    _DAT_106efaec = "time coordinate offset";
    _DAT_106efb18 = "spatial coordinate offset";
    _DAT_106efb1c = "0 0 0";
    _DAT_106efb44 = "absolute value";
    _DAT_106efb70 = "invert absolute value";
    _DAT_106efb9c = "start age minimum";
    _DAT_106efbc8 = "start age maximum";
    _DAT_106efc5c = "operator end fadein";
    _DAT_106efc88 = "operator start fadeout";
    _DAT_106efcb4 = "operator end fadeout";
    _DAT_106efce0 = "operator fade oscillate";
    _DAT_106efd0c = "operator time offset seed";
    _DAT_106efd38 = "operator time offset min";
    _DAT_106efd64 = "operator time offset max";
    _DAT_106efd90 = "operator time scale seed";
    _DAT_106efdbc = "operator time scale min";
    _DAT_106efde8 = "operator time scale max";
    _DAT_106efe14 = "operator time strength random scale max";
    _DAT_106efe40 = "operator strength scale seed";
    _DAT_106efe6c = "operator strength random scale min";
    _DAT_106efe98 = "operator strength random scale max";
    _DAT_106efec4 = "operator end cap state";
    _DAT_106efef0 = "run for killed parent particles";
    _DAT_106eff1c = "Frames Per Second";
    _DAT_106effb4 = "operator end fadein";
    _DAT_106effe0 = "operator start fadeout";
    _DAT_106f000c = "operator end fadeout";
    _DAT_106f0038 = "operator fade oscillate";
    _DAT_106f0064 = "operator time offset seed";
    _DAT_106f0090 = "operator time offset min";
    _DAT_106f00bc = "operator time offset max";
    _DAT_106f00e8 = "operator time scale seed";
    _DAT_106f0114 = "operator time scale min";
    _DAT_106f0140 = "operator time scale max";
    _DAT_106f016c = "operator time strength random scale max";
    _DAT_106f0198 = "operator strength scale seed";
    _DAT_106f01c4 = "operator strength random scale min";
    _DAT_106f01f0 = "operator strength random scale max";
    _DAT_106f021c = "operator end cap state";
    _DAT_106f0248 = "run for killed parent particles";
    _DAT_106f0274 = "maximum distance";
    _DAT_106f02a0 = "bulge";
    _DAT_106f02cc = "start control point number";
    _DAT_106f02f8 = "end control point number";
    _DAT_106f0324 = "bulge control 0=random 1=orientation of start pnt 2=orientation of end point";
    _DAT_106f0350 = "mid point position";
    _DAT_106f037c = "growth time";
    _DAT_106f03a8 = "use highest supplied end point";
    _DAT_106f03d4 = "distance_bias";
    _DAT_106f03d8 = "1 1 1";
    _DAT_106f0400 = "distance_bias_absolute_value";
    _DAT_106f0404 = "0 0 0";
    _DAT_106f0494 = "operator end fadein";
    _DAT_106f04c0 = "operator start fadeout";
    _DAT_106f04ec = "operator end fadeout";
    _DAT_106f0518 = "operator fade oscillate";
    _DAT_106f0544 = "operator time offset seed";
    _DAT_106f0570 = "operator time offset min";
    _DAT_106f059c = "operator time offset max";
    _DAT_106f05c8 = "operator time scale seed";
    _DAT_106f05f4 = "operator time scale min";
    _DAT_106f0620 = "operator time scale max";
    _DAT_106f064c = "operator time strength random scale max";
    _DAT_106f0678 = "operator strength scale seed";
    _DAT_106f06a4 = "operator strength random scale min";
    _DAT_106f06d0 = "operator strength random scale max";
    _DAT_106f06fc = "operator end cap state";
    _DAT_106f0728 = "run for killed parent particles";
    _DAT_106f0754 = "emitter lifetime start time (seconds)";
    _DAT_106f0780 = "emitter lifetime end time (seconds)";
    _DAT_106f07ac = "input field";
    _DAT_106f07c8 = "intchoice particlefield_scalar";
    _DAT_106f07d8 = "input minimum";
    _DAT_106f0804 = "input maximum";
    _DAT_106f0830 = "output field";
    _DAT_106f084c = "intchoice particlefield_vector";
    _DAT_106f085c = "output minimum";
    _DAT_106f0860 = "0 0 0";
    _DAT_106f0888 = "output maximum";
    _DAT_106f088c = "1 1 1";
    _DAT_106f08b4 = "output is scalar of initial random range";
    _DAT_106f08e0 = "use local system";
    _DAT_106f090c = "control_point_number";
    _DAT_106f09a4 = "operator end fadein";
    _DAT_106f09d0 = "operator start fadeout";
    _DAT_106f09fc = "operator end fadeout";
    _DAT_106f0a28 = "operator fade oscillate";
    _DAT_106f0a54 = "operator time offset seed";
    _DAT_106f0a80 = "operator time offset min";
    _DAT_106f0aac = "operator time offset max";
    _DAT_106f0ad8 = "operator time scale seed";
    _DAT_106f0b04 = "operator time scale min";
    _DAT_106f0b30 = "operator time scale max";
    _DAT_106f0b5c = "operator time strength random scale max";
    _DAT_106f0b88 = "operator strength scale seed";
    _DAT_106f0bb4 = "operator strength random scale min";
    _DAT_106f0be0 = "operator strength random scale max";
    _DAT_106f0c0c = "operator end cap state";
    _DAT_106f0c38 = "run for killed parent particles";
    _DAT_106f0c64 = "input field";
    _DAT_106f0c80 = "intchoice particlefield_vector";
    _DAT_106f0c90 = "output field";
    _DAT_106f0cac = "intchoice particlefield_vector";
    _DAT_106f0cbc = "output offset minimum";
    _DAT_106f0cc0 = "0 0 0";
    _DAT_106f0ce8 = "output offset maximum";
    _DAT_106f0cec = "1 1 1";
    _DAT_106f0d7c = "operator end fadein";
    _DAT_106f0da8 = "operator start fadeout";
    _DAT_106f0dd4 = "operator end fadeout";
    _DAT_106f0e00 = "operator fade oscillate";
    _DAT_106f0e2c = "operator time offset seed";
    _DAT_106f0e58 = "operator time offset min";
    _DAT_106f0e84 = "operator time offset max";
    _DAT_106f0eb0 = "operator time scale seed";
    _DAT_106f0edc = "operator time scale min";
    _DAT_106f0f08 = "operator time scale max";
    _DAT_106f0f34 = "operator time strength random scale max";
    _DAT_106f0f60 = "operator strength scale seed";
    _DAT_106f0f8c = "operator strength random scale min";
    _DAT_106f0fb8 = "operator strength random scale max";
    _DAT_106f0fe4 = "operator end cap state";
    _DAT_106f1010 = "run for killed parent particles";
    _DAT_106f103c = "maximum distance";
    _DAT_106f1068 = "bulge";
    _DAT_106f1094 = "start control point number";
    _DAT_106f10c0 = "end control point number";
    _DAT_106f10ec = "bulge control 0=random 1=orientation of start pnt 2=orientation of end point";
    _DAT_106f1118 = "mid point position";
    _DAT_106f1144 = "particles to map from start to end";
    _DAT_106f1170 = "restart behavior (0 = bounce, 1 = loop )";
    _DAT_106f119c = "Use sequential CP pairs between start and end point";
    _DAT_106f11c8 = "Save Offset";
    _DAT_106f125c = "operator end fadein";
    _DAT_106f1288 = "operator start fadeout";
    _DAT_106f12b4 = "operator end fadeout";
    _DAT_106f12e0 = "operator fade oscillate";
    _DAT_106f130c = "operator time offset seed";
    _DAT_106f1338 = "operator time offset min";
    _DAT_106f1364 = "operator time offset max";
    _DAT_106f1390 = "operator time scale seed";
    _DAT_106f13bc = "operator time scale min";
    _DAT_106f13e8 = "operator time scale max";
    _DAT_106f1414 = "operator time strength random scale max";
    _DAT_106f1440 = "operator strength scale seed";
    _DAT_106f146c = "operator strength random scale min";
    _DAT_106f1498 = "operator strength random scale max";
    _DAT_106f14c4 = "operator end cap state";
    _DAT_106f14f0 = "run for killed parent particles";
    _DAT_106f151c = "minimum velocity";
    _DAT_106f1520 = "0 0 0";
    _DAT_106f1548 = "maximum velocity";
    _DAT_106f154c = "1 1 1";
    _DAT_106f1574 = "collision group";
    _DAT_106f15a0 = "control_point_number";
    _DAT_106f15cc = "Per Particle World Collision Tests";
    _DAT_106f15f8 = "Use radius for Per Particle Trace Length";
    _DAT_106f1624 = "Offset instead of accelerate";
    _DAT_106f1650 = "Offset proportional to radius 0/1";
    _DAT_106f167c = "Trace Length";
    _DAT_106f16a8 = "Inherit from Parent";
    _DAT_106f16d4 = "control points to broadcast to children (n + 1)";
    _DAT_106f1700 = "Child Group ID to affect";
    _DAT_106f1794 = "operator end fadein";
    _DAT_106f17c0 = "operator start fadeout";
    _DAT_106f17ec = "operator end fadeout";
    _DAT_106f1818 = "operator fade oscillate";
    _DAT_106f1844 = "operator time offset seed";
    _DAT_106f1870 = "operator time offset min";
    _DAT_106f189c = "operator time offset max";
    _DAT_106f18c8 = "operator time scale seed";
    _DAT_106f18f4 = "operator time scale min";
    _DAT_106f1920 = "operator time scale max";
    _DAT_106f194c = "operator time strength random scale max";
    _DAT_106f1978 = "operator strength scale seed";
    _DAT_106f19a4 = "operator strength random scale min";
    _DAT_106f19d0 = "operator strength random scale max";
    _DAT_106f19fc = "operator end cap state";
    _DAT_106f1a28 = "run for killed parent particles";
    _DAT_106f1a54 = "Flip Percentage";
    _DAT_106f1aec = "operator end fadein";
    _DAT_106f1b18 = "operator start fadeout";
    _DAT_106f1b44 = "operator end fadeout";
    _DAT_106f1b70 = "operator fade oscillate";
    _DAT_106f1b9c = "operator time offset seed";
    _DAT_106f1bc8 = "operator time offset min";
    _DAT_106f1bf4 = "operator time offset max";
    _DAT_106f1c20 = "operator time scale seed";
    _DAT_106f1c4c = "operator time scale min";
    _DAT_106f1c78 = "operator time scale max";
    _DAT_106f1ca4 = "operator time strength random scale max";
    _DAT_106f1cd0 = "operator strength scale seed";
    _DAT_106f1cfc = "operator strength random scale min";
    _DAT_106f1d28 = "operator strength random scale max";
    _DAT_106f1d54 = "operator end cap state";
    _DAT_106f1d80 = "run for killed parent particles";
    _DAT_106f1dac = "sequence_min";
    _DAT_106f1dc8 = "sheetsequencepicker_second";
    _DAT_106f1dd8 = "sequence_max";
    _DAT_106f1df4 = "sheetsequencepicker_second";
    _DAT_106f1e6c = "operator end fadein";
    _DAT_106f1e98 = "operator start fadeout";
    _DAT_106f1ec4 = "operator end fadeout";
    _DAT_106f1ef0 = "operator fade oscillate";
    _DAT_106f1f1c = "operator time offset seed";
    _DAT_106f1f48 = "operator time offset min";
    _DAT_106f1f74 = "operator time offset max";
    _DAT_106f1fa0 = "operator time scale seed";
    _DAT_106f1fcc = "operator time scale min";
    _DAT_106f1ff8 = "operator time scale max";
    _DAT_106f2024 = "operator time strength random scale max";
    _DAT_106f2050 = "operator strength scale seed";
    _DAT_106f207c = "operator strength random scale min";
    _DAT_106f20a8 = "operator strength random scale max";
    _DAT_106f20d4 = "operator end cap state";
    _DAT_106f2100 = "run for killed parent particles";
    _DAT_106f212c = "emitter lifetime start time (seconds)";
    _DAT_106f2158 = "emitter lifetime end time (seconds)";
    _DAT_106f2184 = "input control point number";
    _DAT_106f21b0 = "input minimum";
    _DAT_106f21dc = "input maximum";
    _DAT_106f2208 = "input field 0-2 X/Y/Z";
    _DAT_106f2234 = "output field";
    _DAT_106f2250 = "intchoice particlefield_scalar";
    _DAT_106f2260 = "output minimum";
    _DAT_106f228c = "output maximum";
    _DAT_106f22b8 = "output is scalar of initial random range";
    _DAT_106f234c = "operator end fadein";
    _DAT_106f2378 = "operator start fadeout";
    _DAT_106f23a4 = "operator end fadeout";
    _DAT_106f23d0 = "operator fade oscillate";
    _DAT_106f23fc = "operator time offset seed";
    _DAT_106f2428 = "operator time offset min";
    _DAT_106f2454 = "operator time offset max";
    _DAT_106f2480 = "operator time scale seed";
    _DAT_106f24ac = "operator time scale min";
    _DAT_106f24d8 = "operator time scale max";
    _DAT_106f2504 = "operator time strength random scale max";
    _DAT_106f2530 = "operator strength scale seed";
    _DAT_106f255c = "operator strength random scale min";
    _DAT_106f2588 = "operator strength random scale max";
    _DAT_106f25b4 = "operator end cap state";
    _DAT_106f25e0 = "run for killed parent particles";
    _DAT_106f260c = "emitter lifetime start time (seconds)";
    _DAT_106f2638 = "emitter lifetime end time (seconds)";
    _DAT_106f2664 = "input control point number";
    _DAT_106f2690 = "input minimum";
    _DAT_106f2694 = "0 0 0";
    _DAT_106f26bc = "input maximum";
    _DAT_106f26c0 = "0 0 0";
    _DAT_106f26e8 = "output field";
    _DAT_106f2704 = "intchoice particlefield_vector";
    _DAT_106f2714 = "output minimum";
    _DAT_106f2718 = "0 0 0";
    _DAT_106f2740 = "output maximum";
    _DAT_106f2744 = "0 0 0";
    _DAT_106f276c = "output is scalar of initial random range";
    _DAT_106f2798 = "offset position";
    _DAT_106f27c4 = "accelerate position";
    _DAT_106f27f0 = "local space CP";
    _DAT_106f2884 = "operator end fadein";
    _DAT_106f28b0 = "operator start fadeout";
    _DAT_106f28dc = "operator end fadeout";
    _DAT_106f2908 = "operator fade oscillate";
    _DAT_106f2934 = "operator time offset seed";
    _DAT_106f2960 = "operator time offset min";
    _DAT_106f298c = "operator time offset max";
    _DAT_106f29b8 = "operator time scale seed";
    _DAT_106f29e4 = "operator time scale min";
    _DAT_106f2a10 = "operator time scale max";
    _DAT_106f2a3c = "operator time strength random scale max";
    _DAT_106f2a68 = "operator strength scale seed";
    _DAT_106f2a94 = "operator strength random scale min";
    _DAT_106f2ac0 = "operator strength random scale max";
    _DAT_106f2aec = "operator end cap state";
    _DAT_106f2b18 = "run for killed parent particles";
    _DAT_106f2b44 = "Pickover A Parameter";
    _DAT_106f2b48 = "-0.9629629";
    _DAT_106f2b70 = "Pickover B Parameter";
    _DAT_106f2b74 = "2.791139";
    _DAT_106f2b9c = "Pickover C Parameter";
    _DAT_106f2ba0 = "1.85185185";
    _DAT_106f2bc8 = "Pickover D Parameter";
    _DAT_106f2bf4 = "Speed Min";
    _DAT_106f2c20 = "Speed Max";
    _DAT_106f2c4c = "Uniform speed";
    _DAT_106f2c78 = "Relative Control point number";
    _DAT_106f2ca4 = "Scale";
    _DAT_106f2d3c = "operator end fadein";
    _DAT_106f2d68 = "operator start fadeout";
    _DAT_106f2d94 = "operator end fadeout";
    _DAT_106f2dc0 = "operator fade oscillate";
    _DAT_106f2dec = "operator time offset seed";
    _DAT_106f2e18 = "operator time offset min";
    _DAT_106f2e44 = "operator time offset max";
    _DAT_106f2e70 = "operator time scale seed";
    _DAT_106f2e9c = "operator time scale min";
    _DAT_106f2ec8 = "operator time scale max";
    _DAT_106f2ef4 = "operator time strength random scale max";
    _DAT_106f2f20 = "operator strength scale seed";
    _DAT_106f2f4c = "operator strength random scale min";
    _DAT_106f2f78 = "operator strength random scale max";
    _DAT_106f2fa4 = "operator end cap state";
    _DAT_106f2fd0 = "run for killed parent particles";
    _DAT_106f2ffc = "Inherited Velocity Scale";
    _DAT_106f3028 = "Random Parent Particle Distribution";
    _DAT_106f3054 = "Particle Increment Amount";
    _DAT_106f30ec = "operator end fadein";
    _DAT_106f3118 = "operator start fadeout";
    _DAT_106f3144 = "operator end fadeout";
    _DAT_106f3170 = "operator fade oscillate";
    _DAT_106f319c = "operator time offset seed";
    _DAT_106f31c8 = "operator time offset min";
    _DAT_106f31f4 = "operator time offset max";
    _DAT_106f3220 = "operator time scale seed";
    _DAT_106f324c = "operator time scale min";
    _DAT_106f3278 = "operator time scale max";
    _DAT_106f32a4 = "operator time strength random scale max";
    _DAT_106f32d0 = "operator strength scale seed";
    _DAT_106f32fc = "operator strength random scale min";
    _DAT_106f3328 = "operator strength random scale max";
    _DAT_106f3354 = "operator end cap state";
    _DAT_106f3380 = "run for killed parent particles";
    _DAT_106f33ac = "Inherited Field";
    _DAT_106f33c8 = "intchoice particlefield";
    _DAT_106f33d8 = "Scale";
    _DAT_106f3404 = "Random Parent Particle Distribution";
    _DAT_106f3430 = "Particle Increment Amount";
    _DAT_106f34c4 = "operator end fadein";
    _DAT_106f34f0 = "operator start fadeout";
    _DAT_106f351c = "operator end fadeout";
    _DAT_106f3548 = "operator fade oscillate";
    _DAT_106f3574 = "operator time offset seed";
    _DAT_106f35a0 = "operator time offset min";
    _DAT_106f35cc = "operator time offset max";
    _DAT_106f35f8 = "operator time scale seed";
    _DAT_106f3624 = "operator time scale min";
    _DAT_106f3650 = "operator time scale max";
    _DAT_106f367c = "operator time strength random scale max";
    _DAT_106f36a8 = "operator strength scale seed";
    _DAT_106f36d4 = "operator strength random scale min";
    _DAT_106f3700 = "operator strength random scale max";
    _DAT_106f372c = "operator end cap state";
    _DAT_106f3758 = "run for killed parent particles";
    _DAT_106f3784 = "distance minimum";
    _DAT_106f37b0 = "distance maximum";
    _DAT_106f37dc = "output field";
    _DAT_106f37f8 = "intchoice particlefield_scalar";
    _DAT_106f3808 = "output minimum";
    _DAT_106f3834 = "output maximum";
    _DAT_106f3860 = "control point";
    _DAT_106f388c = "ensure line of sight";
    _DAT_106f38b8 = "LOS collision group";
    _DAT_106f38e4 = "Maximum Trace Length";
    _DAT_106f3910 = "LOS Failure Scalar";
    _DAT_106f393c = "output is scalar of initial random range";
    _DAT_106f3968 = "only active within specified distance";
    _DAT_106f39fc = "operator end fadein";
    _DAT_106f3a28 = "operator start fadeout";
    _DAT_106f3a54 = "operator end fadeout";
    _DAT_106f3a80 = "operator fade oscillate";
    _DAT_106f3aac = "operator time offset seed";
    _DAT_106f3ad8 = "operator time offset min";
    _DAT_106f3b04 = "operator time offset max";
    _DAT_106f3b30 = "operator time scale seed";
    _DAT_106f3b5c = "operator time scale min";
    _DAT_106f3b88 = "operator time scale max";
    _DAT_106f3bb4 = "operator time strength random scale max";
    _DAT_106f3be0 = "operator strength scale seed";
    _DAT_106f3c0c = "operator strength random scale min";
    _DAT_106f3c38 = "operator strength random scale max";
    _DAT_106f3c64 = "operator end cap state";
    _DAT_106f3c90 = "run for killed parent particles";
    _DAT_106f3cbc = "trace collision group";
    _DAT_106f3ce8 = "maximum trace length";
    _DAT_106f3d14 = "trace offset";
    _DAT_106f3d40 = "trace recycle tolerance";
    _DAT_106f3d6c = "maximum points to cache";
    _DAT_106f3d98 = "bias distance";
    _DAT_106f3d9c = "1 1 1";
    _DAT_106f3dc4 = "collide with water";
    _DAT_106f3e5c = "operator end fadein";
    _DAT_106f3e88 = "operator start fadeout";
    _DAT_106f3eb4 = "operator end fadeout";
    _DAT_106f3ee0 = "operator fade oscillate";
    _DAT_106f3f0c = "operator time offset seed";
    _DAT_106f3f38 = "operator time offset min";
    _DAT_106f3f64 = "operator time offset max";
    _DAT_106f3f90 = "operator time scale seed";
    _DAT_106f3fbc = "operator time scale min";
    _DAT_106f3fe8 = "operator time scale max";
    _DAT_106f4014 = "operator time strength random scale max";
    _DAT_106f4040 = "operator strength scale seed";
    _DAT_106f406c = "operator strength random scale min";
    _DAT_106f4098 = "operator strength random scale max";
    _DAT_106f40c4 = "operator end cap state";
    _DAT_106f40f0 = "run for killed parent particles";
    _DAT_106f411c = "Local Offset Min";
    _DAT_106f4120 = "0 0 0";
    _DAT_106f4148 = "Local Offset Max";
    _DAT_106f414c = "0 0 0";
    _DAT_106f4174 = "Set Normal";
    _DAT_106f420c = "operator end fadein";
    _DAT_106f4238 = "operator start fadeout";
    _DAT_106f4264 = "operator end fadeout";
    _DAT_106f4290 = "operator fade oscillate";
    _DAT_106f42bc = "operator time offset seed";
    _DAT_106f42e8 = "operator time offset min";
    _DAT_106f4314 = "operator time offset max";
    _DAT_106f4340 = "operator time scale seed";
    _DAT_106f436c = "operator time scale min";
    _DAT_106f4398 = "operator time scale max";
    _DAT_106f43c4 = "operator time strength random scale max";
    _DAT_106f43f0 = "operator strength scale seed";
    _DAT_106f441c = "operator strength random scale min";
    _DAT_106f4448 = "operator strength random scale max";
    _DAT_106f4474 = "operator end cap state";
    _DAT_106f44a0 = "run for killed parent particles";
    _DAT_106f44cc = "control point";
    _DAT_106f44f8 = "tint_perc";
    _DAT_106f4524 = "tint clamp min";
    _DAT_106f4528 = "0 0 0 0";
    _DAT_106f4550 = "tint clamp max";
    _DAT_106f4554 = "255 255 255 255";
    _DAT_106f457c = "tint update movement threshold";
    _DAT_106f4614 = "operator end fadein";
    _DAT_106f4640 = "operator start fadeout";
    _DAT_106f466c = "operator end fadeout";
    _DAT_106f4698 = "operator fade oscillate";
    _DAT_106f46c4 = "operator time offset seed";
    _DAT_106f46f0 = "operator time offset min";
    _DAT_106f471c = "operator time offset max";
    _DAT_106f4748 = "operator time scale seed";
    _DAT_106f4774 = "operator time scale min";
    _DAT_106f47a0 = "operator time scale max";
    _DAT_106f47cc = "operator time strength random scale max";
    _DAT_106f47f8 = "operator strength scale seed";
    _DAT_106f4824 = "operator strength random scale min";
    _DAT_106f4850 = "operator strength random scale max";
    _DAT_106f487c = "operator end cap state";
    _DAT_106f48a8 = "run for killed parent particles";
    _DAT_106f48d4 = "control_point_number";
    _DAT_106f4900 = "use only bounding box";
    _DAT_106f492c = "cull outside instead of inside";
    _DAT_106f4958 = "hitbox set";
    _DAT_106f495c = "effects";
    _DAT_106f49ec = "operator end fadein";
    _DAT_106f4a18 = "operator start fadeout";
    _DAT_106f4a44 = "operator end fadeout";
    _DAT_106f4a70 = "operator fade oscillate";
    _DAT_106f4a9c = "operator time offset seed";
    _DAT_106f4ac8 = "operator time offset min";
    _DAT_106f4af4 = "operator time offset max";
    _DAT_106f4b20 = "operator time scale seed";
    _DAT_106f4b4c = "operator time scale min";
    _DAT_106f4b78 = "operator time scale max";
    _DAT_106f4ba4 = "operator time strength random scale max";
    _DAT_106f4bd0 = "operator strength scale seed";
    _DAT_106f4bfc = "operator strength random scale min";
    _DAT_106f4c28 = "operator strength random scale max";
    _DAT_106f4c54 = "operator end cap state";
    _DAT_106f4c80 = "run for killed parent particles";
    _DAT_106f4cac = "cull on miss";
    _DAT_106f4cd8 = "velocity test adjust lifespan";
    _DAT_106f4d04 = "use velocity for test direction";
    _DAT_106f4d30 = "test direction";
    _DAT_106f4d34 = "0 0 1";
    _DAT_106f4d5c = "cull normal";
    _DAT_106f4d60 = "0 0 0";
    _DAT_106f4d88 = "ray trace environment name";
    _DAT_106f4d8c = "PRECIPITATION";
    _DAT_106f4e1c = "operator end fadein";
    _DAT_106f4e48 = "operator start fadeout";
    _DAT_106f4e74 = "operator end fadeout";
    _DAT_106f4ea0 = "operator fade oscillate";
    _DAT_106f4ecc = "operator time offset seed";
    _DAT_106f4ef8 = "operator time offset min";
    _DAT_106f4f24 = "operator time offset max";
    _DAT_106f4f50 = "operator time scale seed";
    _DAT_106f4f7c = "operator time scale min";
    _DAT_106f4fa8 = "operator time scale max";
    _DAT_106f4fd4 = "operator time strength random scale max";
    _DAT_106f5000 = "operator strength scale seed";
    _DAT_106f502c = "operator strength random scale min";
    _DAT_106f5058 = "operator strength random scale max";
    _DAT_106f5084 = "operator end cap state";
    _DAT_106f50b0 = "run for killed parent particles";
    _DAT_106f50dc = "control_point_number";
    _DAT_106f5174 = "operator end fadein";
    _DAT_106f51a0 = "operator start fadeout";
    _DAT_106f51cc = "operator end fadeout";
    _DAT_106f51f8 = "operator fade oscillate";
    _DAT_106f5224 = "operator time offset seed";
    _DAT_106f5250 = "operator time offset min";
    _DAT_106f527c = "operator time offset max";
    _DAT_106f52a8 = "operator time scale seed";
    _DAT_106f52d4 = "operator time scale min";
    _DAT_106f5300 = "operator time scale max";
    _DAT_106f532c = "operator time strength random scale max";
    _DAT_106f5358 = "operator strength scale seed";
    _DAT_106f5384 = "operator strength random scale min";
    _DAT_106f53b0 = "operator strength random scale max";
    _DAT_106f53dc = "operator end cap state";
    _DAT_106f5408 = "run for killed parent particles";
    _DAT_106f5434 = "control_point_number";
    _DAT_106f5460 = "offset min";
    _DAT_106f5464 = "0 0 0";
    _DAT_106f548c = "offset max";
    _DAT_106f5490 = "0 0 0";
    _DAT_106f54b8 = "offset in local space 0/1";
    _DAT_106f54e4 = "normalize output 0/1";
    _DAT_106f557c = "operator end fadein";
    _DAT_106f55a8 = "operator start fadeout";
    _DAT_106f55d4 = "operator end fadeout";
    _DAT_106f5600 = "operator fade oscillate";
    _DAT_106f562c = "operator time offset seed";
    _DAT_106f5658 = "operator time offset min";
    _DAT_106f5684 = "operator time offset max";
    _DAT_106f56b0 = "operator time scale seed";
    _DAT_106f56dc = "operator time scale min";
    _DAT_106f5708 = "operator time scale max";
    _DAT_106f5734 = "operator time strength random scale max";
    _DAT_106f5760 = "operator strength scale seed";
    _DAT_106f578c = "operator strength random scale min";
    _DAT_106f57b8 = "operator strength random scale max";
    _DAT_106f57e4 = "operator end cap state";
    _DAT_106f5810 = "run for killed parent particles";
    _DAT_106f583c = "emitter lifetime start time (seconds)";
    _DAT_106f5868 = "emitter lifetime end time (seconds)";
    _DAT_106f5894 = "control point number (ignored if per particle)";
    _DAT_106f58c0 = "per particle";
    _DAT_106f58ec = "input minimum";
    _DAT_106f5918 = "input maximum";
    _DAT_106f5944 = "output field";
    _DAT_106f5960 = "intchoice particlefield_scalar";
    _DAT_106f5970 = "output minimum";
    _DAT_106f599c = "output maximum";
    _DAT_106f59c8 = "output is scalar of initial random range";
    _DAT_106f5a5c = "operator end fadein";
    _DAT_106f5a88 = "operator start fadeout";
    _DAT_106f5ab4 = "operator end fadeout";
    _DAT_106f5ae0 = "operator fade oscillate";
    _DAT_106f5b0c = "operator time offset seed";
    _DAT_106f5b38 = "operator time offset min";
    _DAT_106f5b64 = "operator time offset max";
    _DAT_106f5b90 = "operator time scale seed";
    _DAT_106f5bbc = "operator time scale min";
    _DAT_106f5be8 = "operator time scale max";
    _DAT_106f5c14 = "operator time strength random scale max";
    _DAT_106f5c40 = "operator strength scale seed";
    _DAT_106f5c6c = "operator strength random scale min";
    _DAT_106f5c98 = "operator strength random scale max";
    _DAT_106f5cc4 = "operator end cap state";
    _DAT_106f5cf0 = "run for killed parent particles";
    _DAT_106f5d1c = "snapshot control point number";
    _DAT_106f5d48 = "field to write";
    _DAT_106f5d64 = "intchoice particlefield";
    _DAT_106f5d74 = "field to read";
    _DAT_106f5d90 = "intchoice particlefield";
    _DAT_106f5da0 = "local space control point number";
    _DAT_106f5e34 = "operator end fadein";
    _DAT_106f5e60 = "operator start fadeout";
    _DAT_106f5e8c = "operator end fadeout";
    _DAT_106f5eb8 = "operator fade oscillate";
    _DAT_106f5ee4 = "operator time offset seed";
    _DAT_106f5f10 = "operator time offset min";
    _DAT_106f5f3c = "operator time offset max";
    _DAT_106f5f68 = "operator time scale seed";
    _DAT_106f5f94 = "operator time scale min";
    _DAT_106f5fc0 = "operator time scale max";
    _DAT_106f5fec = "operator time strength random scale max";
    _DAT_106f6018 = "operator strength scale seed";
    _DAT_106f6044 = "operator strength random scale min";
    _DAT_106f6070 = "operator strength random scale max";
    _DAT_106f609c = "operator end cap state";
    _DAT_106f60c8 = "run for killed parent particles";
    _DAT_106f60f4 = "field to init";
    _DAT_106f6110 = "intchoice particlefield";
    _DAT_106f618c = "operator end fadein";
    _DAT_106f61b8 = "operator start fadeout";
    _DAT_106f61e4 = "operator end fadeout";
    _DAT_106f6210 = "operator fade oscillate";
    _DAT_106f623c = "operator time offset seed";
    _DAT_106f6268 = "operator time offset min";
    _DAT_106f6294 = "operator time offset max";
    _DAT_106f62c0 = "operator time scale seed";
    _DAT_106f62ec = "operator time scale min";
    _DAT_106f6318 = "operator time scale max";
    _DAT_106f6344 = "operator time strength random scale max";
    _DAT_106f6370 = "operator strength scale seed";
    _DAT_106f639c = "operator strength random scale min";
    _DAT_106f63c8 = "operator strength random scale max";
    _DAT_106f63f4 = "operator end cap state";
    _DAT_106f6420 = "run for killed parent particles";
    _DAT_106f644c = "control point";
    _DAT_106f6478 = "output field";
    _DAT_106f6494 = "intchoice particlefield_vector";
    _DAT_106f64a4 = "normalize";
    _DAT_106f64d0 = "offset axis";
    _DAT_106f64d4 = "0 0 0";
    _DAT_106f64fc = "offset rotation";
    _DAT_106f6528 = "scale factor";
    _DAT_106f65bc = "operator end fadein";
    _DAT_106f65e8 = "operator start fadeout";
    _DAT_106f6614 = "operator end fadeout";
    _DAT_106f6640 = "operator fade oscillate";
    _DAT_106f666c = "operator time offset seed";
    _DAT_106f6698 = "operator time offset min";
    _DAT_106f66c4 = "operator time offset max";
    _DAT_106f66f0 = "operator time scale seed";
    _DAT_106f671c = "operator time scale min";
    _DAT_106f6748 = "operator time scale max";
    _DAT_106f6774 = "operator time strength random scale max";
    _DAT_106f67a0 = "operator strength scale seed";
    _DAT_106f67cc = "operator strength random scale min";
    _DAT_106f67f8 = "operator strength random scale max";
    _DAT_106f6824 = "operator end cap state";
    _DAT_106f6850 = "run for killed parent particles";
    _DAT_106f687c = "control point";
    _DAT_106f68a8 = "rotation field";
    _DAT_106f68c4 = "intchoice particlefield_rotation";
    _DAT_106f6900 = "offset rotation";
    _DAT_106f6994 = "operator end fadein";
    _DAT_106f69c0 = "operator start fadeout";
    _DAT_106f69ec = "operator end fadeout";
    _DAT_106f6a18 = "operator fade oscillate";
    _DAT_106f6a44 = "operator time offset seed";
    _DAT_106f6a70 = "operator time offset min";
    _DAT_106f6a9c = "operator time offset max";
    _DAT_106f6ac8 = "operator time scale seed";
    _DAT_106f6af4 = "operator time scale min";
    _DAT_106f6b20 = "operator time scale max";
    _DAT_106f6b4c = "operator time strength random scale max";
    _DAT_106f6b78 = "operator strength scale seed";
    _DAT_106f6ba4 = "operator strength random scale min";
    _DAT_106f6bd0 = "operator strength random scale max";
    _DAT_106f6bfc = "operator end cap state";
    _DAT_106f6c28 = "emission_start_time";
    _DAT_106f6c54 = "emission_start_time max";
    _DAT_106f6c80 = "num_to_emit_minimum";
    _DAT_106f6cac = "num_to_emit";
    _DAT_106f6cd8 = "maximum emission per frame";
    _DAT_106f6d04 = "emission count scale control point";
    _DAT_106f6d30 = "emission count scale control point field";
    _DAT_106f6d5c = "control point with snapshot data";
    _DAT_106f6df4 = "operator end fadein";
    _DAT_106f6e20 = "operator start fadeout";
    _DAT_106f6e4c = "operator end fadeout";
    _DAT_106f6e78 = "operator fade oscillate";
    _DAT_106f6ea4 = "operator time offset seed";
    _DAT_106f6ed0 = "operator time offset min";
    _DAT_106f6efc = "operator time offset max";
    _DAT_106f6f28 = "operator time scale seed";
    _DAT_106f6f54 = "operator time scale min";
    _DAT_106f6f80 = "operator time scale max";
    _DAT_106f6fac = "operator time strength random scale max";
    _DAT_106f6fd8 = "operator strength scale seed";
    _DAT_106f7004 = "operator strength random scale min";
    _DAT_106f7030 = "operator strength random scale max";
    _DAT_106f705c = "operator end cap state";
    _DAT_106f7088 = "emission_start_time";
    _DAT_106f70b4 = "emission_rate";
    _DAT_106f70e0 = "emission_duration";
    _DAT_106f710c = "scale emission to used control points";
    _DAT_106f7138 = "use parent particles for emission scaling";
    _DAT_106f7164 = "emission count scale control point";
    _DAT_106f7190 = "emission count scale control point field";
    _DAT_106f71bc = "emit particles for killed parent particles";
    _DAT_106f7254 = "operator end fadein";
    _DAT_106f7280 = "operator start fadeout";
    _DAT_106f72ac = "operator end fadeout";
    _DAT_106f72d8 = "operator fade oscillate";
    _DAT_106f7304 = "operator time offset seed";
    _DAT_106f7330 = "operator time offset min";
    _DAT_106f735c = "operator time offset max";
    _DAT_106f7388 = "operator time scale seed";
    _DAT_106f73b4 = "operator time scale min";
    _DAT_106f73e0 = "operator time scale max";
    _DAT_106f740c = "operator time strength random scale max";
    _DAT_106f7438 = "operator strength scale seed";
    _DAT_106f7464 = "operator strength random scale min";
    _DAT_106f7490 = "operator strength random scale max";
    _DAT_106f74bc = "operator end cap state";
    _DAT_106f74e8 = "emission_start_time";
    _DAT_106f7514 = "emission_duration";
    _DAT_106f7540 = "scale emission to used control points";
    _DAT_106f756c = "time noise coordinate scale";
    _DAT_106f7598 = "time coordinate offset";
    _DAT_106f75c4 = "absolute value";
    _DAT_106f75f0 = "invert absolute value";
    _DAT_106f761c = "emission minimum";
    _DAT_106f7648 = "emission maximum";
    _DAT_106f7674 = "world time noise coordinate scale";
    _DAT_106f770c = "operator end fadein";
    _DAT_106f7738 = "operator start fadeout";
    _DAT_106f7764 = "operator end fadeout";
    _DAT_106f7790 = "operator fade oscillate";
    _DAT_106f77bc = "operator time offset seed";
    _DAT_106f77e8 = "operator time offset min";
    _DAT_106f7814 = "operator time offset max";
    _DAT_106f7840 = "operator time scale seed";
    _DAT_106f786c = "operator time scale min";
    _DAT_106f7898 = "operator time scale max";
    _DAT_106f78c4 = "operator time strength random scale max";
    _DAT_106f78f0 = "operator strength scale seed";
    _DAT_106f791c = "operator strength random scale min";
    _DAT_106f7948 = "operator strength random scale max";
    _DAT_106f7974 = "operator end cap state";
    _DAT_106f79a0 = "emission start time";
    _DAT_106f79cc = "count to maintain";
    _DAT_106f79f8 = "maintain count scale control point";
    _DAT_106f7a24 = "maintain count scale control point field";
    _DAT_106f7a50 = "control point with snapshot data";
    _DAT_106f7ae4 = "operator end fadein";
    _DAT_106f7b10 = "operator start fadeout";
    _DAT_106f7b3c = "operator end fadeout";
    _DAT_106f7b68 = "operator fade oscillate";
    _DAT_106f7b94 = "operator time offset seed";
    _DAT_106f7bc0 = "operator time offset min";
    _DAT_106f7bec = "operator time offset max";
    _DAT_106f7c18 = "operator time scale seed";
    _DAT_106f7c44 = "operator time scale min";
    _DAT_106f7c70 = "operator time scale max";
    _DAT_106f7c9c = "operator time strength random scale max";
    _DAT_106f7cc8 = "operator strength scale seed";
    _DAT_106f7cf4 = "operator strength random scale min";
    _DAT_106f7d20 = "operator strength random scale max";
    _DAT_106f7d4c = "operator end cap state";
    _DAT_106f7d78 = "min force";
    _DAT_106f7d7c = "0 0 0";
    _DAT_106f7da4 = "max force";
    _DAT_106f7da8 = "0 0 0";
    _DAT_106f7e3c = "operator end fadein";
    _DAT_106f7e68 = "operator start fadeout";
    _DAT_106f7e94 = "operator end fadeout";
    _DAT_106f7ec0 = "operator fade oscillate";
    _DAT_106f7eec = "operator time offset seed";
    _DAT_106f7f18 = "operator time offset min";
    _DAT_106f7f44 = "operator time offset max";
    _DAT_106f7f70 = "operator time scale seed";
    _DAT_106f7f9c = "operator time scale min";
    _DAT_106f7fc8 = "operator time scale max";
    _DAT_106f7ff4 = "operator time strength random scale max";
    _DAT_106f8020 = "operator strength scale seed";
    _DAT_106f804c = "operator strength random scale min";
    _DAT_106f8078 = "operator strength random scale max";
    _DAT_106f80a4 = "operator end cap state";
    _DAT_106f80d0 = "amount of force";
    _DAT_106f80fc = "twist axis";
    _DAT_106f8100 = "0 0 1";
    _DAT_106f8128 = "flip twist axis with yaw";
    _DAT_106f81bc = "operator end fadein";
    _DAT_106f81e8 = "operator start fadeout";
    _DAT_106f8214 = "operator end fadeout";
    _DAT_106f8240 = "operator fade oscillate";
    _DAT_106f826c = "operator time offset seed";
    _DAT_106f8298 = "operator time offset min";
    _DAT_106f82c4 = "operator time offset max";
    _DAT_106f82f0 = "operator time scale seed";
    _DAT_106f831c = "operator time scale min";
    _DAT_106f8348 = "operator time scale max";
    _DAT_106f8374 = "operator time strength random scale max";
    _DAT_106f83a0 = "operator strength scale seed";
    _DAT_106f83cc = "operator strength random scale min";
    _DAT_106f83f8 = "operator strength random scale max";
    _DAT_106f8424 = "operator end cap state";
    _DAT_106f8450 = "amount of force";
    _DAT_106f847c = "twist axis";
    _DAT_106f8480 = "0 0 1";
    _DAT_106f84a8 = "object local space axis 0/1";
    _DAT_106f853c = "operator end fadein";
    _DAT_106f8568 = "operator start fadeout";
    _DAT_106f8594 = "operator end fadeout";
    _DAT_106f85c0 = "operator fade oscillate";
    _DAT_106f85ec = "operator time offset seed";
    _DAT_106f8618 = "operator time offset min";
    _DAT_106f8644 = "operator time offset max";
    _DAT_106f8670 = "operator time scale seed";
    _DAT_106f869c = "operator time scale min";
    _DAT_106f86c8 = "operator time scale max";
    _DAT_106f86f4 = "operator time strength random scale max";
    _DAT_106f8720 = "operator strength scale seed";
    _DAT_106f874c = "operator strength random scale min";
    _DAT_106f8778 = "operator strength random scale max";
    _DAT_106f87a4 = "operator end cap state";
    _DAT_106f87d0 = "amount of force";
    _DAT_106f87fc = "falloff power";
    _DAT_106f8828 = "control point number";
    _DAT_106f88bc = "operator end fadein";
    _DAT_106f88e8 = "operator start fadeout";
    _DAT_106f8914 = "operator end fadeout";
    _DAT_106f8940 = "operator fade oscillate";
    _DAT_106f896c = "operator time offset seed";
    _DAT_106f8998 = "operator time offset min";
    _DAT_106f89c4 = "operator time offset max";
    _DAT_106f89f0 = "operator time scale seed";
    _DAT_106f8a1c = "operator time scale min";
    _DAT_106f8a48 = "operator time scale max";
    _DAT_106f8a74 = "operator time strength random scale max";
    _DAT_106f8aa0 = "operator strength scale seed";
    _DAT_106f8acc = "operator strength random scale min";
    _DAT_106f8af8 = "operator strength random scale max";
    _DAT_106f8b24 = "operator end cap state";
    _DAT_106f8b50 = "Min distance from plane";
    _DAT_106f8b7c = "Force at Min distance";
    _DAT_106f8b80 = "0 0 0";
    _DAT_106f8ba8 = "Max Distance from plane";
    _DAT_106f8bd4 = "Force at Max distance";
    _DAT_106f8bd8 = "0 0 0";
    _DAT_106f8c00 = "Plane Normal";
    _DAT_106f8c04 = "0 0 1";
    _DAT_106f8c2c = "Control point number";
    _DAT_106f8c58 = "Exponent";
    _DAT_106f8cec = "operator end fadein";
    _DAT_106f8d18 = "operator start fadeout";
    _DAT_106f8d44 = "operator end fadeout";
    _DAT_106f8d70 = "operator fade oscillate";
    _DAT_106f8d9c = "operator time offset seed";
    _DAT_106f8dc8 = "operator time offset min";
    _DAT_106f8df4 = "operator time offset max";
    _DAT_106f8e20 = "operator time scale seed";
    _DAT_106f8e4c = "operator time scale min";
    _DAT_106f8e78 = "operator time scale max";
    _DAT_106f8ea4 = "operator time strength random scale max";
    _DAT_106f8ed0 = "operator strength scale seed";
    _DAT_106f8efc = "operator strength random scale min";
    _DAT_106f8f28 = "operator strength random scale max";
    _DAT_106f8f54 = "operator end cap state";
    _DAT_106f8f80 = "time to start transition";
    _DAT_106f8fac = "starting force";
    _DAT_106f8fb0 = "0 0 0";
    _DAT_106f8fd8 = "time to end transition";
    _DAT_106f9004 = "ending force";
    _DAT_106f9008 = "0 0 0";
    _DAT_106f909c = "operator end fadein";
    _DAT_106f90c8 = "operator start fadeout";
    _DAT_106f90f4 = "operator end fadeout";
    _DAT_106f9120 = "operator fade oscillate";
    _DAT_106f914c = "operator time offset seed";
    _DAT_106f9178 = "operator time offset min";
    _DAT_106f91a4 = "operator time offset max";
    _DAT_106f91d0 = "operator time scale seed";
    _DAT_106f91fc = "operator time scale min";
    _DAT_106f9228 = "operator time scale max";
    _DAT_106f9254 = "operator time strength random scale max";
    _DAT_106f9280 = "operator strength scale seed";
    _DAT_106f92ac = "operator strength random scale min";
    _DAT_106f92d8 = "operator strength random scale max";
    _DAT_106f9304 = "operator end cap state";
    _DAT_106f9330 = "Noise scale 0";
    _DAT_106f935c = "Noise amount 0";
    _DAT_106f9360 = "1 1 1";
    _DAT_106f9388 = "Noise scale 1";
    _DAT_106f93b4 = "Noise amount 1";
    _DAT_106f93b8 = ".5 .5 .5";
    _DAT_106f93e0 = "Noise scale 2";
    _DAT_106f940c = "Noise amount 2";
    _DAT_106f9410 = ".25 .25 .25";
    _DAT_106f9438 = "Noise scale 3";
    _DAT_106f9464 = "Noise amount 3";
    _DAT_106f9468 = ".125 .125 .125";
    _DAT_106f94fc = "operator end fadein";
    _DAT_106f9528 = "operator start fadeout";
    _DAT_106f9554 = "operator end fadeout";
    _DAT_106f9580 = "operator fade oscillate";
    _DAT_106f95ac = "operator time offset seed";
    _DAT_106f95d8 = "operator time offset min";
    _DAT_106f9604 = "operator time offset max";
    _DAT_106f9630 = "operator time scale seed";
    _DAT_106f965c = "operator time scale min";
    _DAT_106f9688 = "operator time scale max";
    _DAT_106f96b4 = "operator time strength random scale max";
    _DAT_106f96e0 = "operator strength scale seed";
    _DAT_106f970c = "operator strength random scale min";
    _DAT_106f9738 = "operator strength random scale max";
    _DAT_106f9764 = "operator end cap state";
    _DAT_106f9790 = "minimum distance";
    _DAT_106f97bc = "maximum distance";
    _DAT_106f97e8 = "control point number";
    _DAT_106f9814 = "offset of center";
    _DAT_106f9818 = "0 0 0";
    _DAT_106f9840 = "global center point";
    _DAT_106f9864 = "VTFFileBaseHeader_t";
    _DAT_106f9884 = "VTFFileHeaderV7_1_t";
    _DAT_106f98a4 = "VTFFileHeaderV7_2_t";
    _DAT_106f98c4 = "VTFFileHeaderV7_3_t";
    _DAT_106f98d4 = "operator end fadein";
    _DAT_106f98e4 = "VTFFileHeader_t";
    _DAT_106f9900 = "operator start fadeout";
    _DAT_106f992c = "operator end fadeout";
    _DAT_106f9940 = "VTFFileHeaderX360_t";
    _DAT_106f9958 = "operator fade oscillate";
    _DAT_106f9960 = "VTFFileHeaderPS3_t";
    _DAT_106f9984 = "operator time offset seed";
    _DAT_106f99b0 = "operator time offset min";
    _DAT_106f99dc = "operator time offset max";
    _DAT_106f9a08 = "operator time scale seed";
    _DAT_106f9a34 = "operator time scale min";
    _DAT_106f9a60 = "operator time scale max";
    _DAT_106f9a8c = "operator time strength random scale max";
    _DAT_106f9ab8 = "operator strength scale seed";
    _DAT_106f9ae4 = "operator strength random scale min";
    _DAT_106f9b10 = "operator strength random scale max";
    _DAT_106f9b3c = "operator end cap state";
    _DAT_106f9b68 = "minimum distance";
    _DAT_106f9b94 = "maximum distance";
    _DAT_106f9bc0 = "maximum distance middle";
    _DAT_106f9bec = "maximum distance end";
    _DAT_106f9c18 = "travel time";
    _DAT_106f9c44 = "random bulge";
    _DAT_106f9c70 = "start control point number";
    _DAT_106f9c9c = "end control point number";
    _DAT_106f9cc8 = "bulge control 0=random 1=orientation of start pnt 2=orientation of end point";
    _DAT_106f9cf4 = "mid point position";
    _DAT_106f9d8c = "operator end fadein";
    _DAT_106f9db8 = "operator start fadeout";
    _DAT_106f9de4 = "operator end fadeout";
    _DAT_106f9e10 = "operator fade oscillate";
    _DAT_106f9e3c = "operator time offset seed";
    _DAT_106f9e68 = "operator time offset min";
    _DAT_106f9e94 = "operator time offset max";
    _DAT_106f9ec0 = "operator time scale seed";
    _DAT_106f9eec = "operator time scale min";
    _DAT_106f9f18 = "operator time scale max";
    _DAT_106f9f44 = "operator time strength random scale max";
    _DAT_106f9f70 = "operator strength scale seed";
    _DAT_106f9f9c = "operator strength random scale min";
    _DAT_106f9fc8 = "operator strength random scale max";
    _DAT_106f9ff4 = "operator end cap state";
    _DAT_106fa020 = "control point number";
    _DAT_106fa04c = "plane point";
    _DAT_106fa050 = "0 0 0";
    _DAT_106fa078 = "plane normal";
    _DAT_106fa07c = "0 0 1";
    _DAT_106fa0a4 = "global origin";
    _DAT_106fa0d0 = "global normal";
    _DAT_106fa164 = "operator end fadein";
    _DAT_106fa190 = "operator start fadeout";
    _DAT_106fa1bc = "operator end fadeout";
    _DAT_106fa1e8 = "operator fade oscillate";
    _DAT_106fa214 = "operator time offset seed";
    _DAT_106fa240 = "operator time offset min";
    _DAT_106fa26c = "operator time offset max";
    _DAT_106fa298 = "operator time scale seed";
    _DAT_106fa2c4 = "operator time scale min";
    _DAT_106fa2f0 = "operator time scale max";
    _DAT_106fa31c = "operator time strength random scale max";
    _DAT_106fa348 = "operator strength scale seed";
    _DAT_106fa374 = "operator strength random scale min";
    _DAT_106fa3a0 = "operator strength random scale max";
    _DAT_106fa3cc = "operator end cap state";
    _DAT_106fa464 = "operator end fadein";
    _DAT_106fa490 = "operator start fadeout";
    _DAT_106fa4bc = "operator end fadeout";
    _DAT_106fa4e8 = "operator fade oscillate";
    _DAT_106fa514 = "operator time offset seed";
    _DAT_106fa540 = "operator time offset min";
    _DAT_106fa56c = "operator time offset max";
    _DAT_106fa598 = "operator time scale seed";
    _DAT_106fa5c4 = "operator time scale min";
    _DAT_106fa5f0 = "operator time scale max";
    _DAT_106fa61c = "operator time strength random scale max";
    _DAT_106fa648 = "operator strength scale seed";
    _DAT_106fa674 = "operator strength random scale min";
    _DAT_106fa6a0 = "operator strength random scale max";
    _DAT_106fa6cc = "operator end cap state";
    _DAT_106fa6f8 = "collision mode";
    _DAT_106fa724 = "amount of bounce";
    _DAT_106fa750 = "amount of slide";
    _DAT_106fa77c = "radius scale";
    _DAT_106fa7a8 = "brush only";
    _DAT_106fa7d4 = "collision group";
    _DAT_106fa800 = "control point offset for fast collisions";
    _DAT_106fa804 = "0 0 0";
    _DAT_106fa82c = "control point movement distance tolerance";
    _DAT_106fa858 = "kill particle on collision";
    _DAT_106fa884 = "minimum speed to kill on collision";
    _DAT_106fa8b0 = "Confirm Collision";
    _DAT_106fa8dc = "trace accuracy tolerance";
    _DAT_106fa974 = "operator end fadein";
    _DAT_106fa9a0 = "operator start fadeout";
    _DAT_106fa9cc = "operator end fadeout";
    _DAT_106fa9f8 = "operator fade oscillate";
    _DAT_106faa24 = "operator time offset seed";
    _DAT_106faa50 = "operator time offset min";
    _DAT_106faa7c = "operator time offset max";
    _DAT_106faaa8 = "operator time scale seed";
    _DAT_106faad4 = "operator time scale min";
    _DAT_106fab00 = "operator time scale max";
    _DAT_106fab2c = "operator time strength random scale max";
    _DAT_106fab58 = "operator strength scale seed";
    _DAT_106fab84 = "operator strength random scale min";
    _DAT_106fabb0 = "operator strength random scale max";
    _DAT_106fabdc = "operator end cap state";
    _DAT_106fac08 = "min coords";
    _DAT_106fac0c = "0 0 0";
    _DAT_106fac34 = "max coords";
    _DAT_106fac38 = "0 0 0";
    _DAT_106fb518 = "background color";
    _DAT_106fb51c = "255 255 255 255";
    _DAT_106fb544 = "pin delta x";
    _DAT_106fb570 = "pin delta y";
    _DAT_106fb59c = "resize delta x";
    _DAT_106fb5c8 = "resize delta y";
    _DAT_106fb5f4 = "build mode flags";
    _DAT_106fb620 = "pin corner";
    _DAT_106fb64c = "auto resize direction";
    _DAT_106fb678 = "tab position";
    _DAT_106fb6a4 = "use scheme colors";
    _DAT_106fb6d0 = "should PostActionSignals";
    _DAT_106fb8fc = "default foreground color";
    _DAT_106fb900 = "255 255 255 255";
    _DAT_106fe00c = "num_rows";
    _DAT_106fe038 = "num_slices";
    _DAT_106fe064 = "attribute_types";
    _DAT_106fe090 = "field_present_mask";
    _DAT_106fe0bc = "thread_mode";
    _DAT_107167f0 = "C_BaseAnimating";
    _DAT_107167f4 = "C_BaseAnimating";
    _DAT_107167f8 = "Animating models client-side";
    _DAT_10718cb4 = "C_ClientRagdoll";
    _DAT_10719c50 = "C_BaseEntity";
    _DAT_10719c54 = "C_BaseEntity";
    _DAT_10719c58 = "Root class of all client-side entities";
    _DAT_1071ab28 = "C_BaseEntity";
    _DAT_1071bccc = "flexsettinghdr_t";
    _DAT_1071bcec = "flexsetting_t";
    _DAT_1071bd0c = "flexweight_t";
    _DAT_1071bfa0 = "CScriptedIconLesson";
    _DAT_10728104 = "C_BreakableSurface";
    _DAT_10730ca0 = (*(code *)param_1)("fixapi2_AppSystem001",&local_8);
    _DAT_10767580 = "CompiledCaptionHeader_t";
    _DAT_107675a0 = "CaptionLookup_t";
    _DAT_107691ac = "C_FuncLadder";
    _DAT_1076dfa0 = "C_GlowProperty";
    _DAT_10770fd4 = FUN_104a79d2("");
    _DAT_10777fe0 = "CParticleProperty";
    _DAT_107791f8 = "PhysBlockHeader_t";
    _DAT_10779218 = "PhysObjectHeader_t";
    _DAT_1077c4c4 = "CRagdoll";
    _DAT_1077e2a4 = "entitytable_t";
    _DAT_1077e2c4 = "SaveRestoreBlockHeader_t";
    _DAT_1077e3fc = "CSimpleSimTimer";
    _DAT_1077e41c = "CSimTimer";
    _DAT_1077e43c = "CRandSimTimer";
    _DAT_1077e45c = "CStopwatchBase";
    _DAT_1077e47c = "CStopwatch";
    _DAT_1077e49c = "CRandStopwatch";
    _DAT_1077e8f0 = "CSoundEnvelope";
    _DAT_1077e910 = "CCopyRecipientFilter";
    _DAT_1077e930 = "CSoundPatch";
    _DAT_1077e950 = "SoundCommand_t";
    _DAT_1077ed7c = "TrailPoint_t";
    _DAT_1077ed9c = "C_SpriteTrail";
    _DAT_1077f358 = "CTakeDamageInfo";
    _DAT_1077f378 = "CMultiDamage";
    _DAT_1077fc70 = "IntervalTimer";
    _DAT_1077fe08 = "CTimeline";
    _DAT_10781f94 = "screenfade_t";
    _DAT_10781fb4 = "screenshake_t";
    _DAT_10781fd4 = "screentilt_t";
    _DAT_107a383c = (int *)(**(code **)(*DAT_10730c88 + 0xc))("StaticGlobalsCreation");
    _DAT_10840004 = (int *)(**(code **)(*DAT_107c0a08 + 0x14c))("__utilVertexColor",puVar5);
    _DAT_10840008 = (int *)(**(code **)(*DAT_107c0a08 + 0x14c))("__utilVertexColorIgnoreZ",puVar5);
    _DAT_10847e18 = "VTFFileBaseHeader_t";
    _DAT_10847e38 = "VTFFileHeaderV7_1_t";
    _DAT_10847e58 = "VTFFileHeaderV7_2_t";
    _DAT_10847e78 = "VTFFileHeaderV7_3_t";
    _DAT_10847e98 = "VTFFileHeader_t";
    _DAT_10847ef4 = "VTFFileHeaderX360_t";
    _DAT_10847f14 = "VTFFileHeaderPS3_t";
    _File = _fopen(local_108,"r");
    _File = _fopen(local_308,"rb");
    _File = _fopen(pcVar1,"rb");
    _Mode = "wb";
    _Src = "";
    _Str = "no material";
    _Str1 = "";
    _Str1 = "grenade";
    _Str1 = "world";
    _param_3 = FUN_10491bb0(pvVar3,(int)this,"CompletionList",1);
    _strncmp(_Str1,"func_",5);
    bVar1 = FUN_100a6de0(param_1,"dog_entity");
    bVar1 = FUN_100a6de0(param_1,"hostage_entity");
    bVar1 = FUN_100a6de0(param_1,"player");
    bVar1 = FUN_100a6de0(param_1,"prop_movable");
    bVar1 = FUN_100a6de0(param_1,"worldspawn");
    bVar1 = FUN_100dd8f0(param_3,(byte *)"+attack");
    bVar1 = FUN_100dd8f0(param_3,(byte *)"+attack2");
    bVar1 = FUN_100dd8f0(param_3,(byte *)"+duck");
    bVar1 = FUN_100dd8f0(param_3,(byte *)"+jump");
    bVar1 = FUN_100dd8f0(param_3,(byte *)"+strafe");
    bVar1 = FUN_1042e410((void *)(param_1 + 0x308),(byte *)"loading");
    bVar11 = FUN_10086d20(this,param_2[2],*(byte *)((int)param_2 + 0x12) & 1,"m_fOutput",
    bVar2 = FUN_100a6de0(param_1,"info_target");
    bVar2 = FUN_100a6de0(this,"info_node_air");
    bVar2 = FUN_100a6de0(this,"info_node_air_hint");
    bVar2 = FUN_100a6de0(this,"info_node_hint");
    bVar5 = FUN_100a6de0(param_1,"func_water_analog");
    bVar6 = FUN_100a6de0(this,"func_tracktrain");
    cVar1 = (**(code **)(*(int *)(DAT_10681754 + 4) + 0x48))(puVar3,"LOGDIR");
    cVar1 = (**(code **)(*DAT_107c09f8 + 0x58))("SAVE\\faceposer",&DAT_10515278);
    cVar1 = (**(code **)(*piVar7 + 0x2c))("-debugstartupscreen");
    cVar1 = (**(code **)(DAT_10681754[1] + 0x5c))(param_1,"PROFILE",local_3c,1);
    cVar1 = (**(code **)(DAT_106cb7e8[1] + 0x4c))(local_234,"PROFILE");
    cVar1 = (**(code **)(DAT_106cb7e8[1] + 0x4c))(param_1,"PROFILE");
    cVar1 = VR_IsInterfaceVersionValid("IVRSystem_016");
    cVar2 = (**(code **)(*(int *)(DAT_10681754 + 4) + 0x48))("//mod/cfg/config.cfg",0);
    cVar2 = (**(code **)(*param_1 + 0x18))("disconnect",0);
    cVar2 = (**(code **)(*param_1 + 0x18))("penetrate",0);
    cVar2 = (**(code **)(*param_1 + 0x18))("silent",0);
    cVar2 = FUN_1013aba0(&local_10,(byte *)"Squad",(char *)local_858);
    cVar2 = FUN_1013aba0(&local_10,(byte *)"Stage",(char *)local_858);
    cVar2 = FUN_1013aba0(&local_10,(byte *)"TeamBias",(char *)local_858);
    cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
    cVar2 = FUN_1013aba0(&local_10,(byte *)"spawnradius",(char *)local_858);
    cVar2 = FUN_1013aba0(&local_10,(byte *)"target",(char *)local_858);
    cVar3 = (**(code **)(*DAT_1067e240 + 0x7c))(iVar7,"__EntityMakerResult",&local_14);
    cVar5 = FUN_1013aba0(&local_10,(byte *)"zone_stages",(char *)local_85c);
    case '\"':
    eVar6 = _wcscpy_s(param_2,param_3,L"C");
    else if ((pbVar6 == (byte *)"client") ||
    fVar11 = FUN_101044c0(param_1,"ElevatorPushPlayer1",
    fVar11 = FUN_101044c0(param_1,"ElevatorPushPlayer2",*(float *)(PTR_DAT_106ab8dc + 0x10),
    fVar11 = FUN_10114a40(param_1,"ElevatorPushPlayer1",
    fVar11 = FUN_10114a40(param_1,"ElevatorPushPlayer2",*(float *)(DAT_10646018 + 0x10),&local_40);
    fVar3 = (float)FUN_1013e450((void *)param_1[0x53],(int)puVar2 + 5,"relevant",pfVar6,pfVar6 + 4);
    fVar3 = FUN_102686b0(param_1,(uint *)"starttime",-1.0);
    fVar3 = FUN_1042f1d0(this_00,(uint *)"dust_prob",0.0);
    fVar3 = FUN_1042f1d0(this_00,(uint *)"effect_alpha",0.0);
    fVar3 = FUN_1042f1d0(this_00,(uint *)"max_dust_size",0.0);
    fVar3 = FUN_1042f1d0(this_00,(uint *)"min_dust_size",0.0);
    fVar3 = FUN_1042f1d0(this_00,(uint *)"update_rate",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"anglesx",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"anglesy",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"anglesz",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"directionx",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"directiony",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"directionz",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"originx",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"originy",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"originz",0.0);
    fVar4 = FUN_1042f1d0(param_1,(uint *)"scale",0.0);
    fVar6 = FUN_1042f1d0(param_1,(uint *)"minvalue",0.0);
    fVar7 = FUN_102686b0(param_1,(uint *)"drophoverdelay",0.0);
    fVar7 = FUN_1039d900(param_1,(uint *)"drophoverdelay",0.0);
    fVar7 = FUN_1042f1d0(param_1,(uint *)"drophoverdelay",0.0);
    fVar7 = FUN_1042f1d0(param_1,(uint *)"maxvalue",1.0);
    fVar9 = FUN_1042f1d0(param_2,(uint *)"TextureScale",(float)piVar8[0x5c9]);
    for (piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"env_screenoverlay");
    for (piVar3 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"func_areaportal");
    for (ppvVar2 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"prop_door_rotating");
    hModule = GetModuleHandleA("kernel32");
    hModule = GetModuleHandleW(L"kernel32.dll");
    hModule = LoadLibraryA("DbgHelp.dll");
    hModule = LoadLibraryA("dsound.dll");
    hModule = LoadLibraryA("vtuneapi.dll");
    hModule = LoadLibraryExW(L"USER32.DLL",(HANDLE)0x0,0x800);
    iVar1 = (**(code **)(*DAT_1067e240 + 0x3c))("ConnectOutputs",0);
    iVar1 = (**(code **)(*DAT_1067e240 + 0x3c))("DispatchOnPostSpawn",param_1[0xe1]);
    iVar1 = (**(code **)(*DAT_10730d00 + 0x18))("close_heal_teammate_hint",0,0);
    iVar1 = (**(code **)(*local_1c + 0xc))("-etwprofile");
    iVar1 = (**(code **)(*piVar2 + 0x2c))("-makereslists");
    iVar1 = (**(code **)(*piVar3 + 0x2c))("-xlsp");
    iVar1 = (**(code **)(*piVar3 + 0x2c))("-xlsp_insecure");
    iVar1 = (**(code **)(*piVar4 + 0xc))("DefaultVerySmallFallBack",0);
    iVar1 = (**(code **)(DAT_107c09f8[1] + 0x24))("cfg/settings.scr",&DAT_10528acc,&DAT_104eefa0);
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_00BUCKSHOT");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_40MM_GRENADE");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_OOZ_BULLETS");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_PISTOL_357SIG");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_PISTOL_44MAG");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_PISTOL_45ACP");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_PISTOL_9MM");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_RIFLE_556NATO");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_RIFLE_762MM");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_ROCKET");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_SMG_46MM");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_SMG_9MM");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_SNIPER_338LAPUA");
    iVar1 = FUN_10040220(&DAT_107a3268,(byte *)"AMMO_SNIPER_50BMG");
    iVar1 = FUN_10061a60(param_1,(byte *)"move_x");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_00BUCKSHOT");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_40MM_GRENADE");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_OOZ_BULLETS");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_PISTOL_357SIG");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_PISTOL_44MAG");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_PISTOL_45ACP");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_PISTOL_9MM");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_RIFLE_556NATO");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_RIFLE_762MM");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_ROCKET");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_SMG_46MM");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_SMG_9MM");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_SNIPER_338LAPUA");
    iVar1 = FUN_10085cc0(&DAT_10694980,(byte *)"AMMO_SNIPER_50BMG");
    iVar1 = FUN_100898d0(this,(byte *)"left_engine");
    iVar1 = FUN_100898d0(this,(byte *)"right_engine");
    iVar1 = FUN_1008c000(param_1,(byte *)"front_feeler");
    iVar1 = FUN_1008c000(param_1,(byte *)"muzzleflash_AK47");
    iVar1 = FUN_1008c000(param_1,(byte *)"muzzleflash_GSR1911");
    iVar1 = FUN_1008c000(param_1,(byte *)"muzzleflash_M4");
    iVar1 = FUN_1008c000(param_1,(byte *)"muzzleflash_UZI");
    iVar1 = FUN_1008c000(param_1,(byte *)"rappel_point");
    iVar1 = FUN_1008c000(param_1,(byte *)"vehicle_feet_passenger6");
    iVar1 = FUN_1008c000(param_1,(byte *)"wheel_fl");
    iVar1 = FUN_1008c000(param_1,(byte *)"wheel_rr");
    iVar1 = FUN_1008c000(this,(byte *)"engine_left");
    iVar1 = FUN_1008c000(this,(byte *)"engine_right");
    iVar1 = FUN_1008c0a0(param_1,(byte *)"move_x");
    iVar1 = FUN_100ae3e0("models/gibs/hgibs.mdl");
    iVar1 = FUN_10111700("unconnected");
    iVar1 = FUN_102659a0(param_1,(byte *)"Cancel");
    iVar1 = FUN_102659a0(param_1,(byte *)"cancel");
    iVar1 = FUN_102659b0(pcVar2,".mdl");
    iVar1 = FUN_10265bb0(local_94,"localhost:",10);
    iVar1 = FUN_10265c20((int)local_204,"sound\\",6);
    iVar1 = FUN_1026d670(param_1,"%f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f");
    iVar1 = FUN_10286590((undefined4 *)"AnimatingImagePanel");
    iVar1 = FUN_10286590((undefined4 *)"AnimationController");
    iVar1 = FUN_10286590((undefined4 *)"BaseInputDialog");
    iVar1 = FUN_10286590((undefined4 *)"BuildModeDialog");
    iVar1 = FUN_10286590((undefined4 *)"Button");
    iVar1 = FUN_10286590((undefined4 *)"CAreaPortalsUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CBaseActionPlaySoundStartDialog");
    iVar1 = FUN_10286590((undefined4 *)"CBugUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CBuildModeNavCombo");
    iVar1 = FUN_10286590((undefined4 *)"CColorBalanceUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CColorCorrectionUIChildPanel");
    iVar1 = FUN_10286590((undefined4 *)"CColorCorrectionUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CColorCurvesEditPanel");
    iVar1 = FUN_10286590((undefined4 *)"CColorCurvesUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CColorHistogramPanel");
    iVar1 = FUN_10286590((undefined4 *)"CColorLevelsUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CColorLookupUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CColorOperationListPanel");
    iVar1 = FUN_10286590((undefined4 *)"CColorSlider");
    iVar1 = FUN_10286590((undefined4 *)"CCurveEditorPanel");
    iVar1 = FUN_10286590((undefined4 *)"CDemoEditorPanel");
    iVar1 = FUN_10286590((undefined4 *)"CDemoSmootherPanel");
    iVar1 = FUN_10286590((undefined4 *)"CDemoUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CDemoUIPanel2");
    iVar1 = FUN_10286590((undefined4 *)"CDrawTreeFrame");
    iVar1 = FUN_10286590((undefined4 *)"CFogUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CFullScreenSelectionPanel");
    iVar1 = FUN_10286590((undefined4 *)"CLookupViewPanel");
    iVar1 = FUN_10286590((undefined4 *)"CLookupViewWindow");
    iVar1 = FUN_10286590((undefined4 *)"CNewOperationDialog");
    iVar1 = FUN_10286590((undefined4 *)"COcclusionUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"COperationFileListFrame");
    iVar1 = FUN_10286590((undefined4 *)"COperationListPanel");
    iVar1 = FUN_10286590((undefined4 *)"CPerfUIChildPanel");
    iVar1 = FUN_10286590((undefined4 *)"CPerfUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CPerforceFileListFrame");
    iVar1 = FUN_10286590((undefined4 *)"CPrecisionSlider");
    iVar1 = FUN_10286590((undefined4 *)"CProceduralTexturePanel");
    iVar1 = FUN_10286590((undefined4 *)"CProfileHierarchyPanel");
    iVar1 = FUN_10286590((undefined4 *)"CProfileTree");
    iVar1 = FUN_10286590((undefined4 *)"CPropFadeUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CRenderTextureEditor");
    iVar1 = FUN_10286590((undefined4 *)"CRenderTexturesListViewPanel");
    iVar1 = FUN_10286590((undefined4 *)"CSaveDocumentQuery");
    iVar1 = FUN_10286590((undefined4 *)"CSelectedHSVUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CSkyUIPanel");
    iVar1 = FUN_10286590((undefined4 *)"CSmallTextEntry");
    iVar1 = FUN_10286590((undefined4 *)"CTextureListPanel");
    iVar1 = FUN_10286590((undefined4 *)"CTreeViewListControl");
    iVar1 = FUN_10286590((undefined4 *)"CUncorrectedImagePanel");
    iVar1 = FUN_10286590((undefined4 *)"CVProfLabel");
    iVar1 = FUN_10286590((undefined4 *)"CVProfPanel");
    iVar1 = FUN_10286590((undefined4 *)"CVmtTextEntry");
    iVar1 = FUN_10286590((undefined4 *)"CheckButton");
    iVar1 = FUN_10286590((undefined4 *)"CircularProgressBar");
    iVar1 = FUN_10286590((undefined4 *)"ClickPanel");
    iVar1 = FUN_10286590((undefined4 *)"ComboBox");
    iVar1 = FUN_10286590((undefined4 *)"ContextLabel");
    iVar1 = FUN_10286590((undefined4 *)"ContinuousProgressBar");
    iVar1 = FUN_10286590((undefined4 *)"CountdownLabel");
    iVar1 = FUN_10286590((undefined4 *)"CreateDirectoryDialog");
    iVar1 = FUN_10286590((undefined4 *)"DirectorySelectDialog");
    iVar1 = FUN_10286590((undefined4 *)"Divider");
    iVar1 = FUN_10286590((undefined4 *)"EditablePanel");
    iVar1 = FUN_10286590((undefined4 *)"ExpandButton");
    iVar1 = FUN_10286590((undefined4 *)"FileNameComboBox");
    iVar1 = FUN_10286590((undefined4 *)"FileOpenDialog");
    iVar1 = FUN_10286590((undefined4 *)"FileOpenStateMachine");
    iVar1 = FUN_10286590((undefined4 *)"FrameSystemButton");
    iVar1 = FUN_10286590((undefined4 *)"GraphPanel");
    iVar1 = FUN_10286590((undefined4 *)"ImagePanel");
    iVar1 = FUN_10286590((undefined4 *)"ImageProgressBar");
    iVar1 = FUN_10286590((undefined4 *)"InputDialog");
    iVar1 = FUN_10286590((undefined4 *)"ListPanel");
    iVar1 = FUN_10286590((undefined4 *)"ListViewItem");
    iVar1 = FUN_10286590((undefined4 *)"ListViewPanel");
    iVar1 = FUN_10286590((undefined4 *)"MenuBar");
    iVar1 = FUN_10286590((undefined4 *)"MenuItem");
    iVar1 = FUN_10286590((undefined4 *)"MenuSeparator");
    iVar1 = FUN_10286590((undefined4 *)"MessageBox");
    iVar1 = FUN_10286590((undefined4 *)"MessagingPanel");
    iVar1 = FUN_10286590((undefined4 *)"PanelListPanel");
    iVar1 = FUN_10286590((undefined4 *)"PercentageCroppedImageLabel");
    iVar1 = FUN_10286590((undefined4 *)"ProgressBar");
    iVar1 = FUN_10286590((undefined4 *)"PropertyDialog");
    iVar1 = FUN_10286590((undefined4 *)"PropertyPage");
    iVar1 = FUN_10286590((undefined4 *)"PropertySheet");
    iVar1 = FUN_10286590((undefined4 *)"RadioButton");
    iVar1 = FUN_10286590((undefined4 *)"RichText");
    iVar1 = FUN_10286590((undefined4 *)"RichTextInterior");
    iVar1 = FUN_10286590((undefined4 *)"ScalableImagePanel");
    iVar1 = FUN_10286590((undefined4 *)"ScrollBar");
    iVar1 = FUN_10286590((undefined4 *)"ScrollBarSlider");
    iVar1 = FUN_10286590((undefined4 *)"Slider");
    iVar1 = FUN_10286590((undefined4 *)"Splitter");
    iVar1 = FUN_10286590((undefined4 *)"SplitterChildPanel");
    iVar1 = FUN_10286590((undefined4 *)"SplitterHandle");
    iVar1 = FUN_10286590((undefined4 *)"TileViewPanelEx");
    iVar1 = FUN_10286590((undefined4 *)"ToggleButton");
    iVar1 = FUN_10286590((undefined4 *)"TreeNode");
    iVar1 = FUN_10286590((undefined4 *)"TreeNodeDropPanel");
    iVar1 = FUN_10286590((undefined4 *)"TreeNodeText");
    iVar1 = FUN_10286590((undefined4 *)"TreeView");
    iVar1 = FUN_10286590((undefined4 *)"TxViewPanel");
    iVar1 = FUN_102866e0((uint *)"AnimatingImagePanel");
    iVar1 = FUN_102866e0((uint *)"AnimationController");
    iVar1 = FUN_102866e0((uint *)"BaseInputDialog");
    iVar1 = FUN_102866e0((uint *)"BuildModeDialog");
    iVar1 = FUN_102866e0((uint *)"Button");
    iVar1 = FUN_102866e0((uint *)"CAreaPortalsUIPanel");
    iVar1 = FUN_102866e0((uint *)"CBaseActionPlaySoundStartDialog");
    iVar1 = FUN_102866e0((uint *)"CBugUIPanel");
    iVar1 = FUN_102866e0((uint *)"CBuildModeNavCombo");
    iVar1 = FUN_102866e0((uint *)"CColorBalanceUIPanel");
    iVar1 = FUN_102866e0((uint *)"CColorCorrectionUIChildPanel");
    iVar1 = FUN_102866e0((uint *)"CColorCorrectionUIPanel");
    iVar1 = FUN_102866e0((uint *)"CColorCurvesEditPanel");
    iVar1 = FUN_102866e0((uint *)"CColorCurvesUIPanel");
    iVar1 = FUN_102866e0((uint *)"CColorHistogramPanel");
    iVar1 = FUN_102866e0((uint *)"CColorLevelsUIPanel");
    iVar1 = FUN_102866e0((uint *)"CColorLookupUIPanel");
    iVar1 = FUN_102866e0((uint *)"CColorOperationListPanel");
    iVar1 = FUN_102866e0((uint *)"CColorSlider");
    iVar1 = FUN_102866e0((uint *)"CCurveEditorPanel");
    iVar1 = FUN_102866e0((uint *)"CDemoEditorPanel");
    iVar1 = FUN_102866e0((uint *)"CDemoSmootherPanel");
    iVar1 = FUN_102866e0((uint *)"CDemoUIPanel");
    iVar1 = FUN_102866e0((uint *)"CDemoUIPanel2");
    iVar1 = FUN_102866e0((uint *)"CDrawTreeFrame");
    iVar1 = FUN_102866e0((uint *)"CFogUIPanel");
    iVar1 = FUN_102866e0((uint *)"CFullScreenSelectionPanel");
    iVar1 = FUN_102866e0((uint *)"CLookupViewPanel");
    iVar1 = FUN_102866e0((uint *)"CLookupViewWindow");
    iVar1 = FUN_102866e0((uint *)"CNewOperationDialog");
    iVar1 = FUN_102866e0((uint *)"COcclusionUIPanel");
    iVar1 = FUN_102866e0((uint *)"COperationFileListFrame");
    iVar1 = FUN_102866e0((uint *)"COperationListPanel");
    iVar1 = FUN_102866e0((uint *)"CPerfUIChildPanel");
    iVar1 = FUN_102866e0((uint *)"CPerfUIPanel");
    iVar1 = FUN_102866e0((uint *)"CPerforceFileListFrame");
    iVar1 = FUN_102866e0((uint *)"CPrecisionSlider");
    iVar1 = FUN_102866e0((uint *)"CProceduralTexturePanel");
    iVar1 = FUN_102866e0((uint *)"CProfileHierarchyPanel");
    iVar1 = FUN_102866e0((uint *)"CProfileTree");
    iVar1 = FUN_102866e0((uint *)"CPropFadeUIPanel");
    iVar1 = FUN_102866e0((uint *)"CRenderTextureEditor");
    iVar1 = FUN_102866e0((uint *)"CRenderTexturesListViewPanel");
    iVar1 = FUN_102866e0((uint *)"CSaveDocumentQuery");
    iVar1 = FUN_102866e0((uint *)"CSelectedHSVUIPanel");
    iVar1 = FUN_102866e0((uint *)"CSkyUIPanel");
    iVar1 = FUN_102866e0((uint *)"CSmallTextEntry");
    iVar1 = FUN_102866e0((uint *)"CTextureListPanel");
    iVar1 = FUN_102866e0((uint *)"CTreeViewListControl");
    iVar1 = FUN_102866e0((uint *)"CUncorrectedImagePanel");
    iVar1 = FUN_102866e0((uint *)"CVProfLabel");
    iVar1 = FUN_102866e0((uint *)"CVProfPanel");
    iVar1 = FUN_102866e0((uint *)"CVmtTextEntry");
    iVar1 = FUN_102866e0((uint *)"CheckButton");
    iVar1 = FUN_102866e0((uint *)"CircularProgressBar");
    iVar1 = FUN_102866e0((uint *)"ClickPanel");
    iVar1 = FUN_102866e0((uint *)"ComboBox");
    iVar1 = FUN_102866e0((uint *)"ContextLabel");
    iVar1 = FUN_102866e0((uint *)"ContinuousProgressBar");
    iVar1 = FUN_102866e0((uint *)"CountdownLabel");
    iVar1 = FUN_102866e0((uint *)"CreateDirectoryDialog");
    iVar1 = FUN_102866e0((uint *)"DirectorySelectDialog");
    iVar1 = FUN_102866e0((uint *)"Divider");
    iVar1 = FUN_102866e0((uint *)"EditablePanel");
    iVar1 = FUN_102866e0((uint *)"ExpandButton");
    iVar1 = FUN_102866e0((uint *)"FileNameComboBox");
    iVar1 = FUN_102866e0((uint *)"FileOpenDialog");
    iVar1 = FUN_102866e0((uint *)"FileOpenStateMachine");
    iVar1 = FUN_102866e0((uint *)"FrameSystemButton");
    iVar1 = FUN_102866e0((uint *)"GraphPanel");
    iVar1 = FUN_102866e0((uint *)"ImagePanel");
    iVar1 = FUN_102866e0((uint *)"ImageProgressBar");
    iVar1 = FUN_102866e0((uint *)"InputDialog");
    iVar1 = FUN_102866e0((uint *)"ListPanel");
    iVar1 = FUN_102866e0((uint *)"ListViewItem");
    iVar1 = FUN_102866e0((uint *)"ListViewPanel");
    iVar1 = FUN_102866e0((uint *)"MenuBar");
    iVar1 = FUN_102866e0((uint *)"MenuItem");
    iVar1 = FUN_102866e0((uint *)"MenuSeparator");
    iVar1 = FUN_102866e0((uint *)"MessageBox");
    iVar1 = FUN_102866e0((uint *)"MessagingPanel");
    iVar1 = FUN_102866e0((uint *)"PanelListPanel");
    iVar1 = FUN_102866e0((uint *)"PercentageCroppedImageLabel");
    iVar1 = FUN_102866e0((uint *)"ProgressBar");
    iVar1 = FUN_102866e0((uint *)"PropertyDialog");
    iVar1 = FUN_102866e0((uint *)"PropertyPage");
    iVar1 = FUN_102866e0((uint *)"PropertySheet");
    iVar1 = FUN_102866e0((uint *)"RadioButton");
    iVar1 = FUN_102866e0((uint *)"RichText");
    iVar1 = FUN_102866e0((uint *)"RichTextInterior");
    iVar1 = FUN_102866e0((uint *)"ScalableImagePanel");
    iVar1 = FUN_102866e0((uint *)"ScrollBar");
    iVar1 = FUN_102866e0((uint *)"ScrollBarSlider");
    iVar1 = FUN_102866e0((uint *)"Slider");
    iVar1 = FUN_102866e0((uint *)"Splitter");
    iVar1 = FUN_102866e0((uint *)"SplitterChildPanel");
    iVar1 = FUN_102866e0((uint *)"SplitterHandle");
    iVar1 = FUN_102866e0((uint *)"TileViewPanelEx");
    iVar1 = FUN_102866e0((uint *)"ToggleButton");
    iVar1 = FUN_102866e0((uint *)"TreeNode");
    iVar1 = FUN_102866e0((uint *)"TreeNodeDropPanel");
    iVar1 = FUN_102866e0((uint *)"TreeNodeText");
    iVar1 = FUN_102866e0((uint *)"TreeView");
    iVar1 = FUN_102866e0((uint *)"TxViewPanel");
    iVar1 = FUN_10290a70((int *)"AnimatingImagePanel");
    iVar1 = FUN_10290a70((int *)"BaseInputDialog");
    iVar1 = FUN_10290a70((int *)"BuildModeDialog");
    iVar1 = FUN_10290a70((int *)"Button");
    iVar1 = FUN_10290a70((int *)"CAreaPortalsUIPanel");
    iVar1 = FUN_10290a70((int *)"CBaseActionPlaySoundStartDialog");
    iVar1 = FUN_10290a70((int *)"CBugUIPanel");
    iVar1 = FUN_10290a70((int *)"CBuildModeNavCombo");
    iVar1 = FUN_10290a70((int *)"CColorBalanceUIPanel");
    iVar1 = FUN_10290a70((int *)"CColorCorrectionUIChildPanel");
    iVar1 = FUN_10290a70((int *)"CColorCorrectionUIPanel");
    iVar1 = FUN_10290a70((int *)"CColorCurvesEditPanel");
    iVar1 = FUN_10290a70((int *)"CColorCurvesUIPanel");
    iVar1 = FUN_10290a70((int *)"CColorHistogramPanel");
    iVar1 = FUN_10290a70((int *)"CColorLevelsUIPanel");
    iVar1 = FUN_10290a70((int *)"CColorLookupUIPanel");
    iVar1 = FUN_10290a70((int *)"CColorOperationListPanel");
    iVar1 = FUN_10290a70((int *)"CColorSlider");
    iVar1 = FUN_10290a70((int *)"CCurveEditorPanel");
    iVar1 = FUN_10290a70((int *)"CDemoEditorPanel");
    iVar1 = FUN_10290a70((int *)"CDemoSmootherPanel");
    iVar1 = FUN_10290a70((int *)"CDemoUIPanel");
    iVar1 = FUN_10290a70((int *)"CDemoUIPanel2");
    iVar1 = FUN_10290a70((int *)"CDrawTreeFrame");
    iVar1 = FUN_10290a70((int *)"CFogUIPanel");
    iVar1 = FUN_10290a70((int *)"CFullScreenSelectionPanel");
    iVar1 = FUN_10290a70((int *)"CLookupViewPanel");
    iVar1 = FUN_10290a70((int *)"CLookupViewWindow");
    iVar1 = FUN_10290a70((int *)"CNewOperationDialog");
    iVar1 = FUN_10290a70((int *)"COcclusionUIPanel");
    iVar1 = FUN_10290a70((int *)"COperationFileListFrame");
    iVar1 = FUN_10290a70((int *)"COperationListPanel");
    iVar1 = FUN_10290a70((int *)"CPerfUIChildPanel");
    iVar1 = FUN_10290a70((int *)"CPerfUIPanel");
    iVar1 = FUN_10290a70((int *)"CPerforceFileListFrame");
    iVar1 = FUN_10290a70((int *)"CPrecisionSlider");
    iVar1 = FUN_10290a70((int *)"CProceduralTexturePanel");
    iVar1 = FUN_10290a70((int *)"CProfileHierarchyPanel");
    iVar1 = FUN_10290a70((int *)"CProfileTree");
    iVar1 = FUN_10290a70((int *)"CPropFadeUIPanel");
    iVar1 = FUN_10290a70((int *)"CRenderTextureEditor");
    iVar1 = FUN_10290a70((int *)"CRenderTexturesListViewPanel");
    iVar1 = FUN_10290a70((int *)"CSaveDocumentQuery");
    iVar1 = FUN_10290a70((int *)"CSelectedHSVUIPanel");
    iVar1 = FUN_10290a70((int *)"CSkyUIPanel");
    iVar1 = FUN_10290a70((int *)"CSmallTextEntry");
    iVar1 = FUN_10290a70((int *)"CTextureListPanel");
    iVar1 = FUN_10290a70((int *)"CTreeViewListControl");
    iVar1 = FUN_10290a70((int *)"CUncorrectedImagePanel");
    iVar1 = FUN_10290a70((int *)"CVProfLabel");
    iVar1 = FUN_10290a70((int *)"CVProfPanel");
    iVar1 = FUN_10290a70((int *)"CVmtTextEntry");
    iVar1 = FUN_10290a70((int *)"CheckButton");
    iVar1 = FUN_10290a70((int *)"CircularProgressBar");
    iVar1 = FUN_10290a70((int *)"ClickPanel");
    iVar1 = FUN_10290a70((int *)"ComboBox");
    iVar1 = FUN_10290a70((int *)"ContextLabel");
    iVar1 = FUN_10290a70((int *)"ContinuousProgressBar");
    iVar1 = FUN_10290a70((int *)"CountdownLabel");
    iVar1 = FUN_10290a70((int *)"CreateDirectoryDialog");
    iVar1 = FUN_10290a70((int *)"DirectorySelectDialog");
    iVar1 = FUN_10290a70((int *)"Divider");
    iVar1 = FUN_10290a70((int *)"EditablePanel");
    iVar1 = FUN_10290a70((int *)"ExpandButton");
    iVar1 = FUN_10290a70((int *)"FileNameComboBox");
    iVar1 = FUN_10290a70((int *)"FileOpenDialog");
    iVar1 = FUN_10290a70((int *)"FileOpenStateMachine");
    iVar1 = FUN_10290a70((int *)"FrameSystemButton");
    iVar1 = FUN_10290a70((int *)"GraphPanel");
    iVar1 = FUN_10290a70((int *)"ImagePanel");
    iVar1 = FUN_10290a70((int *)"ImageProgressBar");
    iVar1 = FUN_10290a70((int *)"InputDialog");
    iVar1 = FUN_10290a70((int *)"ListPanel");
    iVar1 = FUN_10290a70((int *)"ListViewItem");
    iVar1 = FUN_10290a70((int *)"ListViewPanel");
    iVar1 = FUN_10290a70((int *)"MenuBar");
    iVar1 = FUN_10290a70((int *)"MenuItem");
    iVar1 = FUN_10290a70((int *)"MenuSeparator");
    iVar1 = FUN_10290a70((int *)"MessageBox");
    iVar1 = FUN_10290a70((int *)"MessagingPanel");
    iVar1 = FUN_10290a70((int *)"PanelListPanel");
    iVar1 = FUN_10290a70((int *)"PercentageCroppedImageLabel");
    iVar1 = FUN_10290a70((int *)"ProgressBar");
    iVar1 = FUN_10290a70((int *)"PropertyDialog");
    iVar1 = FUN_10290a70((int *)"PropertyPage");
    iVar1 = FUN_10290a70((int *)"PropertySheet");
    iVar1 = FUN_10290a70((int *)"RadioButton");
    iVar1 = FUN_10290a70((int *)"RichText");
    iVar1 = FUN_10290a70((int *)"RichTextInterior");
    iVar1 = FUN_10290a70((int *)"ScalableImagePanel");
    iVar1 = FUN_10290a70((int *)"ScrollBar");
    iVar1 = FUN_10290a70((int *)"ScrollBarSlider");
    iVar1 = FUN_10290a70((int *)"Slider");
    iVar1 = FUN_10290a70((int *)"Splitter");
    iVar1 = FUN_10290a70((int *)"SplitterChildPanel");
    iVar1 = FUN_10290a70((int *)"SplitterHandle");
    iVar1 = FUN_10290a70((int *)"TileViewPanelEx");
    iVar1 = FUN_10290a70((int *)"ToggleButton");
    iVar1 = FUN_10290a70((int *)"TreeNode");
    iVar1 = FUN_10290a70((int *)"TreeNodeDropPanel");
    iVar1 = FUN_10290a70((int *)"TreeNodeText");
    iVar1 = FUN_10290a70((int *)"TreeView");
    iVar1 = FUN_10290a70((int *)"TxViewPanel");
    iVar1 = FUN_10399150(param_2,param_3,(byte *)"([%d] %s: %s)");
    iVar1 = FUN_103991e0((char *)param_1,".mp3");
    iVar1 = FUN_103991e0(param_3,".wav");
    iVar1 = FUN_103991e0(pcVar3,".wav");
    iVar1 = FUN_103991e0(pcVar3,"music");
    iVar1 = FUN_10399410(pcVar2,"None",4);
    iVar1 = FUN_10399410(pcVar4,"None",4);
    iVar1 = FUN_103997b0("SNDLVL_");
    iVar1 = FUN_1039cac0(param_1,"%f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f");
    iVar1 = FUN_103b2880((undefined4 *)"AnimatingImagePanel");
    iVar1 = FUN_103b2880((undefined4 *)"AnimationController");
    iVar1 = FUN_103b2880((undefined4 *)"BuildModeDialog");
    iVar1 = FUN_103b2880((undefined4 *)"Button");
    iVar1 = FUN_103b2880((undefined4 *)"CBuildModeNavCombo");
    iVar1 = FUN_103b2880((undefined4 *)"CSmallTextEntry");
    iVar1 = FUN_103b2880((undefined4 *)"CTreeViewListControl");
    iVar1 = FUN_103b2880((undefined4 *)"CheckButton");
    iVar1 = FUN_103b2880((undefined4 *)"CircularProgressBar");
    iVar1 = FUN_103b2880((undefined4 *)"ClickPanel");
    iVar1 = FUN_103b2880((undefined4 *)"ComboBox");
    iVar1 = FUN_103b2880((undefined4 *)"ContinuousProgressBar");
    iVar1 = FUN_103b2880((undefined4 *)"CountdownLabel");
    iVar1 = FUN_103b2880((undefined4 *)"Divider");
    iVar1 = FUN_103b2880((undefined4 *)"EditablePanel");
    iVar1 = FUN_103b2880((undefined4 *)"ExpandButton");
    iVar1 = FUN_103b2880((undefined4 *)"FrameSystemButton");
    iVar1 = FUN_103b2880((undefined4 *)"GraphPanel");
    iVar1 = FUN_103b2880((undefined4 *)"ImagePanel");
    iVar1 = FUN_103b2880((undefined4 *)"ImageProgressBar");
    iVar1 = FUN_103b2880((undefined4 *)"Label");
    iVar1 = FUN_103b2880((undefined4 *)"ListPanel");
    iVar1 = FUN_103b2880((undefined4 *)"ListViewItem");
    iVar1 = FUN_103b2880((undefined4 *)"ListViewPanel");
    iVar1 = FUN_103b2880((undefined4 *)"MenuBar");
    iVar1 = FUN_103b2880((undefined4 *)"MenuItem");
    iVar1 = FUN_103b2880((undefined4 *)"MenuSeparator");
    iVar1 = FUN_103b2880((undefined4 *)"MessageBox");
    iVar1 = FUN_103b2880((undefined4 *)"MessagingPanel");
    iVar1 = FUN_103b2880((undefined4 *)"PanelListPanel");
    iVar1 = FUN_103b2880((undefined4 *)"PercentageCroppedImageLabel");
    iVar1 = FUN_103b2880((undefined4 *)"ProgressBar");
    iVar1 = FUN_103b2880((undefined4 *)"RadioButton");
    iVar1 = FUN_103b2880((undefined4 *)"RichText");
    iVar1 = FUN_103b2880((undefined4 *)"RichTextInterior");
    iVar1 = FUN_103b2880((undefined4 *)"ScalableImagePanel");
    iVar1 = FUN_103b2880((undefined4 *)"ScrollBar");
    iVar1 = FUN_103b2880((undefined4 *)"ScrollBarSlider");
    iVar1 = FUN_103b2880((undefined4 *)"ToggleButton");
    iVar1 = FUN_103b2880((undefined4 *)"TreeNode");
    iVar1 = FUN_103b2880((undefined4 *)"TreeNodeDropPanel");
    iVar1 = FUN_103b2880((undefined4 *)"TreeNodeText");
    iVar1 = FUN_103b2880((undefined4 *)"TreeView");
    iVar1 = FUN_103b29d0((uint *)"AnimatingImagePanel");
    iVar1 = FUN_103b29d0((uint *)"AnimationController");
    iVar1 = FUN_103b29d0((uint *)"BuildModeDialog");
    iVar1 = FUN_103b29d0((uint *)"Button");
    iVar1 = FUN_103b29d0((uint *)"CBuildModeNavCombo");
    iVar1 = FUN_103b29d0((uint *)"CSmallTextEntry");
    iVar1 = FUN_103b29d0((uint *)"CTreeViewListControl");
    iVar1 = FUN_103b29d0((uint *)"CheckButton");
    iVar1 = FUN_103b29d0((uint *)"CircularProgressBar");
    iVar1 = FUN_103b29d0((uint *)"ClickPanel");
    iVar1 = FUN_103b29d0((uint *)"ComboBox");
    iVar1 = FUN_103b29d0((uint *)"ContinuousProgressBar");
    iVar1 = FUN_103b29d0((uint *)"CountdownLabel");
    iVar1 = FUN_103b29d0((uint *)"Divider");
    iVar1 = FUN_103b29d0((uint *)"EditablePanel");
    iVar1 = FUN_103b29d0((uint *)"ExpandButton");
    iVar1 = FUN_103b29d0((uint *)"FrameSystemButton");
    iVar1 = FUN_103b29d0((uint *)"GraphPanel");
    iVar1 = FUN_103b29d0((uint *)"ImagePanel");
    iVar1 = FUN_103b29d0((uint *)"ImageProgressBar");
    iVar1 = FUN_103b29d0((uint *)"Label");
    iVar1 = FUN_103b29d0((uint *)"ListPanel");
    iVar1 = FUN_103b29d0((uint *)"ListViewItem");
    iVar1 = FUN_103b29d0((uint *)"ListViewPanel");
    iVar1 = FUN_103b29d0((uint *)"MenuBar");
    iVar1 = FUN_103b29d0((uint *)"MenuItem");
    iVar1 = FUN_103b29d0((uint *)"MenuSeparator");
    iVar1 = FUN_103b29d0((uint *)"MessageBox");
    iVar1 = FUN_103b29d0((uint *)"MessagingPanel");
    iVar1 = FUN_103b29d0((uint *)"PanelListPanel");
    iVar1 = FUN_103b29d0((uint *)"PercentageCroppedImageLabel");
    iVar1 = FUN_103b29d0((uint *)"ProgressBar");
    iVar1 = FUN_103b29d0((uint *)"RadioButton");
    iVar1 = FUN_103b29d0((uint *)"RichText");
    iVar1 = FUN_103b29d0((uint *)"RichTextInterior");
    iVar1 = FUN_103b29d0((uint *)"ScalableImagePanel");
    iVar1 = FUN_103b29d0((uint *)"ScrollBar");
    iVar1 = FUN_103b29d0((uint *)"ScrollBarSlider");
    iVar1 = FUN_103b29d0((uint *)"ToggleButton");
    iVar1 = FUN_103b29d0((uint *)"TreeNode");
    iVar1 = FUN_103b29d0((uint *)"TreeNodeDropPanel");
    iVar1 = FUN_103b29d0((uint *)"TreeNodeText");
    iVar1 = FUN_103b29d0((uint *)"TreeView");
    iVar1 = FUN_103e8bc0((int *)"AnimatingImagePanel");
    iVar1 = FUN_103e8bc0((int *)"BuildModeDialog");
    iVar1 = FUN_103e8bc0((int *)"Button");
    iVar1 = FUN_103e8bc0((int *)"CBuildModeNavCombo");
    iVar1 = FUN_103e8bc0((int *)"CSmallTextEntry");
    iVar1 = FUN_103e8bc0((int *)"CTreeViewListControl");
    iVar1 = FUN_103e8bc0((int *)"CheckButton");
    iVar1 = FUN_103e8bc0((int *)"CircularProgressBar");
    iVar1 = FUN_103e8bc0((int *)"ClickPanel");
    iVar1 = FUN_103e8bc0((int *)"ComboBox");
    iVar1 = FUN_103e8bc0((int *)"ContinuousProgressBar");
    iVar1 = FUN_103e8bc0((int *)"CountdownLabel");
    iVar1 = FUN_103e8bc0((int *)"Divider");
    iVar1 = FUN_103e8bc0((int *)"EditablePanel");
    iVar1 = FUN_103e8bc0((int *)"ExpandButton");
    iVar1 = FUN_103e8bc0((int *)"FrameSystemButton");
    iVar1 = FUN_103e8bc0((int *)"GraphPanel");
    iVar1 = FUN_103e8bc0((int *)"ImagePanel");
    iVar1 = FUN_103e8bc0((int *)"ImageProgressBar");
    iVar1 = FUN_103e8bc0((int *)"Label");
    iVar1 = FUN_103e8bc0((int *)"ListPanel");
    iVar1 = FUN_103e8bc0((int *)"ListViewItem");
    iVar1 = FUN_103e8bc0((int *)"ListViewPanel");
    iVar1 = FUN_103e8bc0((int *)"MenuBar");
    iVar1 = FUN_103e8bc0((int *)"MenuItem");
    iVar1 = FUN_103e8bc0((int *)"MenuSeparator");
    iVar1 = FUN_103e8bc0((int *)"MessageBox");
    iVar1 = FUN_103e8bc0((int *)"MessagingPanel");
    iVar1 = FUN_103e8bc0((int *)"PanelListPanel");
    iVar1 = FUN_103e8bc0((int *)"PercentageCroppedImageLabel");
    iVar1 = FUN_103e8bc0((int *)"ProgressBar");
    iVar1 = FUN_103e8bc0((int *)"RadioButton");
    iVar1 = FUN_103e8bc0((int *)"RichText");
    iVar1 = FUN_103e8bc0((int *)"RichTextInterior");
    iVar1 = FUN_103e8bc0((int *)"ScalableImagePanel");
    iVar1 = FUN_103e8bc0((int *)"ScrollBar");
    iVar1 = FUN_103e8bc0((int *)"ScrollBarSlider");
    iVar1 = FUN_103e8bc0((int *)"ToggleButton");
    iVar1 = FUN_103e8bc0((int *)"TreeNode");
    iVar1 = FUN_103e8bc0((int *)"TreeNodeDropPanel");
    iVar1 = FUN_103e8bc0((int *)"TreeNodeText");
    iVar1 = FUN_103e8bc0((int *)"TreeView");
    iVar1 = FUN_1042d940(param_2,param_3,(byte *)"models/weapons/v_models/%s/%s");
    iVar1 = FUN_1042d940(param_2,param_3,(byte *)"models/weapons/w_models/%s/%s_%i");
    iVar1 = FUN_1042d9d0(*(char **)((int)this + 0x2c),"music");
    iVar1 = FUN_1042d9d0(pcVar3,".wav");
    iVar1 = FUN_1042dc00((char *)param_1,"MaterialButton",0x14);
    iVar1 = FUN_1042dc00(pcVar2,"http://",7);
    iVar1 = FUN_1042e020("SNDLVL_");
    iVar1 = FUN_104368b0(param_1,"%f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f");
    iVar1 = FUN_10444d70(this,(byte *)"autobutton",0);
    iVar1 = FUN_10444d70(this_00,(byte *)"ChatPanel",1);
    iVar1 = FUN_104452c0((undefined4 *)"AchievementGenericPanelList");
    iVar1 = FUN_104452c0((undefined4 *)"Achievements");
    iVar1 = FUN_104452c0((undefined4 *)"AnimatingImagePanel");
    iVar1 = FUN_104452c0((undefined4 *)"AnimationController");
    iVar1 = FUN_104452c0((undefined4 *)"Audio");
    iVar1 = FUN_104452c0((undefined4 *)"AudioVideo");
    iVar1 = FUN_104452c0((undefined4 *)"BaseInputDialog");
    iVar1 = FUN_104452c0((undefined4 *)"BaseModHybridButton");
    iVar1 = FUN_104452c0((undefined4 *)"BaseModMenuBackground");
    iVar1 = FUN_104452c0((undefined4 *)"BorderedPanel");
    iVar1 = FUN_104452c0((undefined4 *)"BuildModeDialog");
    iVar1 = FUN_104452c0((undefined4 *)"Button");
    iVar1 = FUN_104452c0((undefined4 *)"CAdvancedVideo");
    iVar1 = FUN_104452c0((undefined4 *)"CAvatarImagePanel");
    iVar1 = FUN_104452c0((undefined4 *)"CBackpackSlotItem");
    iVar1 = FUN_104452c0((undefined4 *)"CBackpack_ContentsList");
    iVar1 = FUN_104452c0((undefined4 *)"CBaseHudChat");
    iVar1 = FUN_104452c0((undefined4 *)"CBaseItemPurchasingPopup");
    iVar1 = FUN_104452c0((undefined4 *)"CBaseModFooterPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CBaseModFrame");
    iVar1 = FUN_104452c0((undefined4 *)"CBaseModTransitionPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CBaseModelPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CBaseViewport");
    iVar1 = FUN_104452c0((undefined4 *)"CBuildModeNavCombo");
    iVar1 = FUN_104452c0((undefined4 *)"CCenterStringLabel");
    iVar1 = FUN_104452c0((undefined4 *)"CChatPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CChatRichText");
    iVar1 = FUN_104452c0((undefined4 *)"CConsoleDialog");
    iVar1 = FUN_104452c0((undefined4 *)"CConsolePanel");
    iVar1 = FUN_104452c0((undefined4 *)"CContextMenuBase");
    iVar1 = FUN_104452c0((undefined4 *)"CCreateMultiplayerGameBotPage");
    iVar1 = FUN_104452c0((undefined4 *)"CCreateMultiplayerGameDialog");
    iVar1 = FUN_104452c0((undefined4 *)"CCvarSlider");
    iVar1 = FUN_104452c0((undefined4 *)"CDialogListButton");
    iVar1 = FUN_104452c0((undefined4 *)"CDummyPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CExButton");
    iVar1 = FUN_104452c0((undefined4 *)"CExImageButton");
    iVar1 = FUN_104452c0((undefined4 *)"CExLabel");
    iVar1 = FUN_104452c0((undefined4 *)"CExplanationPopup");
    iVar1 = FUN_104452c0((undefined4 *)"CExtrasDialog");
    iVar1 = FUN_104452c0((undefined4 *)"CFPSPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CFadeOutStartGame");
    iVar1 = FUN_104452c0((undefined4 *)"CFadeOutToEconUI");
    iVar1 = FUN_104452c0((undefined4 *)"CFilterComboBox");
    iVar1 = FUN_104452c0((undefined4 *)"CFilterablePanelListPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CFooterBitmapButton");
    iVar1 = FUN_104452c0((undefined4 *)"CFriendsListPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CGameConsoleDialog");
    iVar1 = FUN_104452c0((undefined4 *)"CGammaDialog");
    iVar1 = FUN_104452c0((undefined4 *)"CHUDHealthVehicle");
    iVar1 = FUN_104452c0((undefined4 *)"CHUDMissionStatus");
    iVar1 = FUN_104452c0((undefined4 *)"CHUDPlayerHitOutput");
    iVar1 = FUN_104452c0((undefined4 *)"CHudAmmo");
    iVar1 = FUN_104452c0((undefined4 *)"CHudChatHistory");
    iVar1 = FUN_104452c0((undefined4 *)"CHudClock");
    iVar1 = FUN_104452c0((undefined4 *)"CHudDamageIndicator");
    iVar1 = FUN_104452c0((undefined4 *)"CHudDisplayBonuses");
    iVar1 = FUN_104452c0((undefined4 *)"CHudFullscreen");
    iVar1 = FUN_104452c0((undefined4 *)"CHudGrenades");
    iVar1 = FUN_104452c0((undefined4 *)"CHudHealth");
    iVar1 = FUN_104452c0((undefined4 *)"CHudHoldingObject");
    iVar1 = FUN_104452c0((undefined4 *)"CHudMenu");
    iVar1 = FUN_104452c0((undefined4 *)"CHudMessage");
    iVar1 = FUN_104452c0((undefined4 *)"CHudMiniMap");
    iVar1 = FUN_104452c0((undefined4 *)"CHudNumericDisplay");
    iVar1 = FUN_104452c0((undefined4 *)"CHudOBJLocator");
    iVar1 = FUN_104452c0((undefined4 *)"CHudPanelRoundWin");
    iVar1 = FUN_104452c0((undefined4 *)"CHudTICrosshair");
    iVar1 = FUN_104452c0((undefined4 *)"CHudVoiceSelfStatus");
    iVar1 = FUN_104452c0((undefined4 *)"CHudVoiceStatus");
    iVar1 = FUN_104452c0((undefined4 *)"CHudVote");
    iVar1 = FUN_104452c0((undefined4 *)"CHudWeaponSelection");
    iVar1 = FUN_104452c0((undefined4 *)"CIconPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CInfoLabel");
    iVar1 = FUN_104452c0((undefined4 *)"CInfoListItem");
    iVar1 = FUN_104452c0((undefined4 *)"CInventoryItem");
    iVar1 = FUN_104452c0((undefined4 *)"CItemButton");
    iVar1 = FUN_104452c0((undefined4 *)"CItemPreviewPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CKeyLabel");
    iVar1 = FUN_104452c0((undefined4 *)"CLoadoutSlotLabel");
    iVar1 = FUN_104452c0((undefined4 *)"CLoadoutSlotLabelItemImage");
    iVar1 = FUN_104452c0((undefined4 *)"CLoadoutSlotLabelItemLabel");
    iVar1 = FUN_104452c0((undefined4 *)"CLoadoutSlotPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CLoadoutSlotPreview");
    iVar1 = FUN_104452c0((undefined4 *)"CLoadoutSlotTitleLabel");
    iVar1 = FUN_104452c0((undefined4 *)"CLocatorPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CMDLPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CMapOverview");
    iVar1 = FUN_104452c0((undefined4 *)"CMouseMessageForwardingPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CNavProgress");
    iVar1 = FUN_104452c0((undefined4 *)"CNonFocusableMenu");
    iVar1 = FUN_104452c0((undefined4 *)"CNotificationQueuePanel");
    iVar1 = FUN_104452c0((undefined4 *)"CNotificationToastManager");
    iVar1 = FUN_104452c0((undefined4 *)"CNotificationsPresentPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CPanelListPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CPlayerPreviewPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CPolygonButton");
    iVar1 = FUN_104452c0((undefined4 *)"CPopUp_Purchase_Buy");
    iVar1 = FUN_104452c0((undefined4 *)"CRadialButton");
    iVar1 = FUN_104452c0((undefined4 *)"CRadialMenu");
    iVar1 = FUN_104452c0((undefined4 *)"CRadialMenuPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CRequisitionComboBox");
    iVar1 = FUN_104452c0((undefined4 *)"CRichTextWithScrollbarBorders");
    iVar1 = FUN_104452c0((undefined4 *)"CRoundWinHeader");
    iVar1 = FUN_104452c0((undefined4 *)"CRoundWinPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CRoundWinPersonalStats");
    iVar1 = FUN_104452c0((undefined4 *)"CRoundWinScores");
    iVar1 = FUN_104452c0((undefined4 *)"CSDKTextWindow");
    iVar1 = FUN_104452c0((undefined4 *)"CScoreHeader");
    iVar1 = FUN_104452c0((undefined4 *)"CScoreListItem");
    iVar1 = FUN_104452c0((undefined4 *)"CScoreListPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CSectionHeader");
    iVar1 = FUN_104452c0((undefined4 *)"CSlotItem");
    iVar1 = FUN_104452c0((undefined4 *)"CSmallTextEntry");
    iVar1 = FUN_104452c0((undefined4 *)"CSoundTest");
    iVar1 = FUN_104452c0((undefined4 *)"CSpectatorGUI");
    iVar1 = FUN_104452c0((undefined4 *)"CSpectatorPlayerItem");
    iVar1 = FUN_104452c0((undefined4 *)"CSpectatorPlayerList");
    iVar1 = FUN_104452c0((undefined4 *)"CTIFreezePanel");
    iVar1 = FUN_104452c0((undefined4 *)"CTIHudChat");
    iVar1 = FUN_104452c0((undefined4 *)"CTIHudChatInputLine");
    iVar1 = FUN_104452c0((undefined4 *)"CTIHudChatLine");
    iVar1 = FUN_104452c0((undefined4 *)"CTIItemAttributePanel");
    iVar1 = FUN_104452c0((undefined4 *)"CTIItemAttributesPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CTILocalPlayerPlanPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CTIMDLPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CTINotificationToast");
    iVar1 = FUN_104452c0((undefined4 *)"CTIScoreboard");
    iVar1 = FUN_104452c0((undefined4 *)"CTISpectatorGUI");
    iVar1 = FUN_104452c0((undefined4 *)"CTISpectatorMenu");
    iVar1 = FUN_104452c0((undefined4 *)"CTISquadButton");
    iVar1 = FUN_104452c0((undefined4 *)"CTITeamMenu");
    iVar1 = FUN_104452c0((undefined4 *)"CTIUserStatContainer");
    iVar1 = FUN_104452c0((undefined4 *)"CTIUserStatLabel");
    iVar1 = FUN_104452c0((undefined4 *)"CTeamListPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CTeamMenu");
    iVar1 = FUN_104452c0((undefined4 *)"CTextWindow");
    iVar1 = FUN_104452c0((undefined4 *)"CTimeLabel");
    iVar1 = FUN_104452c0((undefined4 *)"CTipPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CTransitionScreen");
    iVar1 = FUN_104452c0((undefined4 *)"CTreeViewListControl");
    iVar1 = FUN_104452c0((undefined4 *)"CVoiceListItem");
    iVar1 = FUN_104452c0((undefined4 *)"CVoiceListPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CVoteSetupDialog");
    iVar1 = FUN_104452c0((undefined4 *)"CWeaponStatsPanel");
    iVar1 = FUN_104452c0((undefined4 *)"CheckButton");
    iVar1 = FUN_104452c0((undefined4 *)"CircularProgressBar");
    iVar1 = FUN_104452c0((undefined4 *)"ClickPanel");
    iVar1 = FUN_104452c0((undefined4 *)"ClientModeTINormalFullscreen");
    iVar1 = FUN_104452c0((undefined4 *)"ComboBox");
    iVar1 = FUN_104452c0((undefined4 *)"CommandMenu");
    iVar1 = FUN_104452c0((undefined4 *)"ContextLabel");
    iVar1 = FUN_104452c0((undefined4 *)"ContinuousProgressBar");
    iVar1 = FUN_104452c0((undefined4 *)"ControllerOptions");
    iVar1 = FUN_104452c0((undefined4 *)"ControllerOptionsButtons");
    iVar1 = FUN_104452c0((undefined4 *)"ControllerOptionsSticks");
    iVar1 = FUN_104452c0((undefined4 *)"CountdownLabel");
    iVar1 = FUN_104452c0((undefined4 *)"Divider");
    iVar1 = FUN_104452c0((undefined4 *)"DropDownMenu");
    iVar1 = FUN_104452c0((undefined4 *)"EditablePanel");
    iVar1 = FUN_104452c0((undefined4 *)"ExclusiveEditablePanel");
    iVar1 = FUN_104452c0((undefined4 *)"ExpandButton");
    iVar1 = FUN_104452c0((undefined4 *)"FileNameComboBox");
    iVar1 = FUN_104452c0((undefined4 *)"FileOpenDialog");
    iVar1 = FUN_104452c0((undefined4 *)"FlyoutMenu");
    iVar1 = FUN_104452c0((undefined4 *)"FrameSystemButton");
    iVar1 = FUN_104452c0((undefined4 *)"FullscreenTIViewport");
    iVar1 = FUN_104452c0((undefined4 *)"GameModes");
    iVar1 = FUN_104452c0((undefined4 *)"GenericConfirmation");
    iVar1 = FUN_104452c0((undefined4 *)"GenericPanelList");
    iVar1 = FUN_104452c0((undefined4 *)"GenericWaitScreen");
    iVar1 = FUN_104452c0((undefined4 *)"GraphPanel");
    iVar1 = FUN_104452c0((undefined4 *)"HorizontalGauge");
    iVar1 = FUN_104452c0((undefined4 *)"ImagePanel");
    iVar1 = FUN_104452c0((undefined4 *)"ImageProgressBar");
    iVar1 = FUN_104452c0((undefined4 *)"InputDialog");
    iVar1 = FUN_104452c0((undefined4 *)"KeyboardMouse");
    iVar1 = FUN_104452c0((undefined4 *)"KilledByPanel");
    iVar1 = FUN_104452c0((undefined4 *)"Label");
    iVar1 = FUN_104452c0((undefined4 *)"ListPanel");
    iVar1 = FUN_104452c0((undefined4 *)"ListViewItem");
    iVar1 = FUN_104452c0((undefined4 *)"ListViewPanel");
    iVar1 = FUN_104452c0((undefined4 *)"LoadingProgress");
    iVar1 = FUN_104452c0((undefined4 *)"MainMenu");
    iVar1 = FUN_104452c0((undefined4 *)"MarqueeLabel");
    iVar1 = FUN_104452c0((undefined4 *)"MenuBar");
    iVar1 = FUN_104452c0((undefined4 *)"MenuItem");
    iVar1 = FUN_104452c0((undefined4 *)"MenuSeparator");
    iVar1 = FUN_104452c0((undefined4 *)"MessageBox");
    iVar1 = FUN_104452c0((undefined4 *)"MessagingPanel");
    iVar1 = FUN_104452c0((undefined4 *)"Multiplayer");
    iVar1 = FUN_104452c0((undefined4 *)"Options");
    iVar1 = FUN_104452c0((undefined4 *)"PanelListPanel");
    iVar1 = FUN_104452c0((undefined4 *)"PanelListPanel2");
    iVar1 = FUN_104452c0((undefined4 *)"Panel_PassNavigationToParent");
    iVar1 = FUN_104452c0((undefined4 *)"PasswordEntry");
    iVar1 = FUN_104452c0((undefined4 *)"PercentageCroppedImageLabel");
    iVar1 = FUN_104452c0((undefined4 *)"ProgressBar");
    iVar1 = FUN_104452c0((undefined4 *)"PropertyBox");
    iVar1 = FUN_104452c0((undefined4 *)"PropertyDialog");
    iVar1 = FUN_104452c0((undefined4 *)"PropertyPage");
    iVar1 = FUN_104452c0((undefined4 *)"PropertySheet");
    iVar1 = FUN_104452c0((undefined4 *)"RadioButton");
    iVar1 = FUN_104452c0((undefined4 *)"RichText");
    iVar1 = FUN_104452c0((undefined4 *)"RichTextInterior");
    iVar1 = FUN_104452c0((undefined4 *)"ScalableImagePanel");
    iVar1 = FUN_104452c0((undefined4 *)"ScrollBar");
    iVar1 = FUN_104452c0((undefined4 *)"ScrollBarSlider");
    iVar1 = FUN_104452c0((undefined4 *)"ScrollableEditablePanel");
    iVar1 = FUN_104452c0((undefined4 *)"SectionedListPanel");
    iVar1 = FUN_104452c0((undefined4 *)"Slider");
    iVar1 = FUN_104452c0((undefined4 *)"SliderControl");
    iVar1 = FUN_104452c0((undefined4 *)"TIAvatarSelectionList");
    iVar1 = FUN_104452c0((undefined4 *)"TIButton");
    iVar1 = FUN_104452c0((undefined4 *)"TICheckButton");
    iVar1 = FUN_104452c0((undefined4 *)"TIConVarCheckButton");
    iVar1 = FUN_104452c0((undefined4 *)"TIGameOptions");
    iVar1 = FUN_104452c0((undefined4 *)"TIHorizontalList");
    iVar1 = FUN_104452c0((undefined4 *)"TIHudDeathNotice");
    iVar1 = FUN_104452c0((undefined4 *)"TIImageButton");
    iVar1 = FUN_104452c0((undefined4 *)"TIImageButtonToggle");
    iVar1 = FUN_104452c0((undefined4 *)"TILocalInfoLabel");
    iVar1 = FUN_104452c0((undefined4 *)"TIMainMenuLocalUserInfoContainer");
    iVar1 = FUN_104452c0((undefined4 *)"TIMainMenuSocialContainer");
    iVar1 = FUN_104452c0((undefined4 *)"TIMessageBox");
    iVar1 = FUN_104452c0((undefined4 *)"TIPopUp_Base");
    iVar1 = FUN_104452c0((undefined4 *)"TIPropertyPage");
    iVar1 = FUN_104452c0((undefined4 *)"TIPropertySheet");
    iVar1 = FUN_104452c0((undefined4 *)"TIRadioButton");
    iVar1 = FUN_104452c0((undefined4 *)"TIRankListFrame");
    iVar1 = FUN_104452c0((undefined4 *)"TIRichText");
    iVar1 = FUN_104452c0((undefined4 *)"TIScrollBar");
    iVar1 = FUN_104452c0((undefined4 *)"TITabContainer");
    iVar1 = FUN_104452c0((undefined4 *)"TIUserAvatarPanel");
    iVar1 = FUN_104452c0((undefined4 *)"TIViewport");
    iVar1 = FUN_104452c0((undefined4 *)"TIVoiceControl");
    iVar1 = FUN_104452c0((undefined4 *)"ToggleButton");
    iVar1 = FUN_104452c0((undefined4 *)"TreeNode");
    iVar1 = FUN_104452c0((undefined4 *)"TreeNodeDropPanel");
    iVar1 = FUN_104452c0((undefined4 *)"TreeNodeText");
    iVar1 = FUN_104452c0((undefined4 *)"TreeView");
    iVar1 = FUN_104452c0((undefined4 *)"URLButton");
    iVar1 = FUN_104452c0((undefined4 *)"Video");
    iVar1 = FUN_104452c0((undefined4 *)"VoteBarPanel");
    iVar1 = FUN_104452c0((undefined4 *)"VoteOptions");
    iVar1 = FUN_104452c0((undefined4 *)"XboxLiveOptions");
    iVar1 = FUN_10445410((uint *)"AchievementGenericPanelList");
    iVar1 = FUN_10445410((uint *)"Achievements");
    iVar1 = FUN_10445410((uint *)"AnimatingImagePanel");
    iVar1 = FUN_10445410((uint *)"AnimationController");
    iVar1 = FUN_10445410((uint *)"Audio");
    iVar1 = FUN_10445410((uint *)"AudioVideo");
    iVar1 = FUN_10445410((uint *)"BaseInputDialog");
    iVar1 = FUN_10445410((uint *)"BaseModHybridButton");
    iVar1 = FUN_10445410((uint *)"BaseModMenuBackground");
    iVar1 = FUN_10445410((uint *)"BorderedPanel");
    iVar1 = FUN_10445410((uint *)"BuildModeDialog");
    iVar1 = FUN_10445410((uint *)"Button");
    iVar1 = FUN_10445410((uint *)"CAdvancedVideo");
    iVar1 = FUN_10445410((uint *)"CAvatarImagePanel");
    iVar1 = FUN_10445410((uint *)"CBackpackSlotItem");
    iVar1 = FUN_10445410((uint *)"CBackpack_ContentsList");
    iVar1 = FUN_10445410((uint *)"CBaseHudChat");
    iVar1 = FUN_10445410((uint *)"CBaseItemPurchasingPopup");
    iVar1 = FUN_10445410((uint *)"CBaseModFooterPanel");
    iVar1 = FUN_10445410((uint *)"CBaseModFrame");
    iVar1 = FUN_10445410((uint *)"CBaseModTransitionPanel");
    iVar1 = FUN_10445410((uint *)"CBaseModelPanel");
    iVar1 = FUN_10445410((uint *)"CBaseViewport");
    iVar1 = FUN_10445410((uint *)"CBuildModeNavCombo");
    iVar1 = FUN_10445410((uint *)"CCenterStringLabel");
    iVar1 = FUN_10445410((uint *)"CChatPanel");
    iVar1 = FUN_10445410((uint *)"CChatRichText");
    iVar1 = FUN_10445410((uint *)"CConsoleDialog");
    iVar1 = FUN_10445410((uint *)"CConsolePanel");
    iVar1 = FUN_10445410((uint *)"CContextMenuBase");
    iVar1 = FUN_10445410((uint *)"CCreateMultiplayerGameBotPage");
    iVar1 = FUN_10445410((uint *)"CCreateMultiplayerGameDialog");
    iVar1 = FUN_10445410((uint *)"CCvarSlider");
    iVar1 = FUN_10445410((uint *)"CDialogListButton");
    iVar1 = FUN_10445410((uint *)"CDummyPanel");
    iVar1 = FUN_10445410((uint *)"CExButton");
    iVar1 = FUN_10445410((uint *)"CExImageButton");
    iVar1 = FUN_10445410((uint *)"CExLabel");
    iVar1 = FUN_10445410((uint *)"CExplanationPopup");
    iVar1 = FUN_10445410((uint *)"CExtrasDialog");
    iVar1 = FUN_10445410((uint *)"CFPSPanel");
    iVar1 = FUN_10445410((uint *)"CFadeOutStartGame");
    iVar1 = FUN_10445410((uint *)"CFadeOutToEconUI");
    iVar1 = FUN_10445410((uint *)"CFilterComboBox");
    iVar1 = FUN_10445410((uint *)"CFilterablePanelListPanel");
    iVar1 = FUN_10445410((uint *)"CFooterBitmapButton");
    iVar1 = FUN_10445410((uint *)"CFriendsListPanel");
    iVar1 = FUN_10445410((uint *)"CGameConsoleDialog");
    iVar1 = FUN_10445410((uint *)"CGammaDialog");
    iVar1 = FUN_10445410((uint *)"CHUDHealthVehicle");
    iVar1 = FUN_10445410((uint *)"CHUDMissionStatus");
    iVar1 = FUN_10445410((uint *)"CHUDPlayerHitOutput");
    iVar1 = FUN_10445410((uint *)"CHudAmmo");
    iVar1 = FUN_10445410((uint *)"CHudChatHistory");
    iVar1 = FUN_10445410((uint *)"CHudClock");
    iVar1 = FUN_10445410((uint *)"CHudDamageIndicator");
    iVar1 = FUN_10445410((uint *)"CHudDisplayBonuses");
    iVar1 = FUN_10445410((uint *)"CHudFullscreen");
    iVar1 = FUN_10445410((uint *)"CHudGrenades");
    iVar1 = FUN_10445410((uint *)"CHudHealth");
    iVar1 = FUN_10445410((uint *)"CHudHoldingObject");
    iVar1 = FUN_10445410((uint *)"CHudMenu");
    iVar1 = FUN_10445410((uint *)"CHudMessage");
    iVar1 = FUN_10445410((uint *)"CHudMiniMap");
    iVar1 = FUN_10445410((uint *)"CHudNumericDisplay");
    iVar1 = FUN_10445410((uint *)"CHudOBJLocator");
    iVar1 = FUN_10445410((uint *)"CHudPanelRoundWin");
    iVar1 = FUN_10445410((uint *)"CHudTICrosshair");
    iVar1 = FUN_10445410((uint *)"CHudVoiceSelfStatus");
    iVar1 = FUN_10445410((uint *)"CHudVoiceStatus");
    iVar1 = FUN_10445410((uint *)"CHudVote");
    iVar1 = FUN_10445410((uint *)"CHudWeaponSelection");
    iVar1 = FUN_10445410((uint *)"CIconPanel");
    iVar1 = FUN_10445410((uint *)"CInfoLabel");
    iVar1 = FUN_10445410((uint *)"CInfoListItem");
    iVar1 = FUN_10445410((uint *)"CInventoryItem");
    iVar1 = FUN_10445410((uint *)"CItemButton");
    iVar1 = FUN_10445410((uint *)"CItemPreviewPanel");
    iVar1 = FUN_10445410((uint *)"CKeyLabel");
    iVar1 = FUN_10445410((uint *)"CLoadoutSlotLabel");
    iVar1 = FUN_10445410((uint *)"CLoadoutSlotLabelItemImage");
    iVar1 = FUN_10445410((uint *)"CLoadoutSlotLabelItemLabel");
    iVar1 = FUN_10445410((uint *)"CLoadoutSlotPanel");
    iVar1 = FUN_10445410((uint *)"CLoadoutSlotPreview");
    iVar1 = FUN_10445410((uint *)"CLoadoutSlotTitleLabel");
    iVar1 = FUN_10445410((uint *)"CLocatorPanel");
    iVar1 = FUN_10445410((uint *)"CMDLPanel");
    iVar1 = FUN_10445410((uint *)"CMapOverview");
    iVar1 = FUN_10445410((uint *)"CMouseMessageForwardingPanel");
    iVar1 = FUN_10445410((uint *)"CNavProgress");
    iVar1 = FUN_10445410((uint *)"CNonFocusableMenu");
    iVar1 = FUN_10445410((uint *)"CNotificationQueuePanel");
    iVar1 = FUN_10445410((uint *)"CNotificationToastManager");
    iVar1 = FUN_10445410((uint *)"CNotificationsPresentPanel");
    iVar1 = FUN_10445410((uint *)"CPanelListPanel");
    iVar1 = FUN_10445410((uint *)"CPlayerPreviewPanel");
    iVar1 = FUN_10445410((uint *)"CPolygonButton");
    iVar1 = FUN_10445410((uint *)"CPopUp_Purchase_Buy");
    iVar1 = FUN_10445410((uint *)"CRadialButton");
    iVar1 = FUN_10445410((uint *)"CRadialMenu");
    iVar1 = FUN_10445410((uint *)"CRadialMenuPanel");
    iVar1 = FUN_10445410((uint *)"CRequisitionComboBox");
    iVar1 = FUN_10445410((uint *)"CRichTextWithScrollbarBorders");
    iVar1 = FUN_10445410((uint *)"CRoundWinHeader");
    iVar1 = FUN_10445410((uint *)"CRoundWinPanel");
    iVar1 = FUN_10445410((uint *)"CRoundWinPersonalStats");
    iVar1 = FUN_10445410((uint *)"CRoundWinScores");
    iVar1 = FUN_10445410((uint *)"CSDKTextWindow");
    iVar1 = FUN_10445410((uint *)"CScoreHeader");
    iVar1 = FUN_10445410((uint *)"CScoreListItem");
    iVar1 = FUN_10445410((uint *)"CScoreListPanel");
    iVar1 = FUN_10445410((uint *)"CSectionHeader");
    iVar1 = FUN_10445410((uint *)"CSlotItem");
    iVar1 = FUN_10445410((uint *)"CSmallTextEntry");
    iVar1 = FUN_10445410((uint *)"CSoundTest");
    iVar1 = FUN_10445410((uint *)"CSpectatorGUI");
    iVar1 = FUN_10445410((uint *)"CSpectatorPlayerItem");
    iVar1 = FUN_10445410((uint *)"CSpectatorPlayerList");
    iVar1 = FUN_10445410((uint *)"CTIFreezePanel");
    iVar1 = FUN_10445410((uint *)"CTIHudChat");
    iVar1 = FUN_10445410((uint *)"CTIHudChatInputLine");
    iVar1 = FUN_10445410((uint *)"CTIHudChatLine");
    iVar1 = FUN_10445410((uint *)"CTIItemAttributePanel");
    iVar1 = FUN_10445410((uint *)"CTIItemAttributesPanel");
    iVar1 = FUN_10445410((uint *)"CTILocalPlayerPlanPanel");
    iVar1 = FUN_10445410((uint *)"CTIMDLPanel");
    iVar1 = FUN_10445410((uint *)"CTINotificationToast");
    iVar1 = FUN_10445410((uint *)"CTIScoreboard");
    iVar1 = FUN_10445410((uint *)"CTISpectatorGUI");
    iVar1 = FUN_10445410((uint *)"CTISpectatorMenu");
    iVar1 = FUN_10445410((uint *)"CTISquadButton");
    iVar1 = FUN_10445410((uint *)"CTITeamMenu");
    iVar1 = FUN_10445410((uint *)"CTIUserStatContainer");
    iVar1 = FUN_10445410((uint *)"CTIUserStatLabel");
    iVar1 = FUN_10445410((uint *)"CTeamListPanel");
    iVar1 = FUN_10445410((uint *)"CTeamMenu");
    iVar1 = FUN_10445410((uint *)"CTextWindow");
    iVar1 = FUN_10445410((uint *)"CTimeLabel");
    iVar1 = FUN_10445410((uint *)"CTipPanel");
    iVar1 = FUN_10445410((uint *)"CTransitionScreen");
    iVar1 = FUN_10445410((uint *)"CTreeViewListControl");
    iVar1 = FUN_10445410((uint *)"CVoiceListItem");
    iVar1 = FUN_10445410((uint *)"CVoiceListPanel");
    iVar1 = FUN_10445410((uint *)"CVoteSetupDialog");
    iVar1 = FUN_10445410((uint *)"CWeaponStatsPanel");
    iVar1 = FUN_10445410((uint *)"CheckButton");
    iVar1 = FUN_10445410((uint *)"CircularProgressBar");
    iVar1 = FUN_10445410((uint *)"ClickPanel");
    iVar1 = FUN_10445410((uint *)"ClientModeTINormalFullscreen");
    iVar1 = FUN_10445410((uint *)"ComboBox");
    iVar1 = FUN_10445410((uint *)"CommandMenu");
    iVar1 = FUN_10445410((uint *)"ContextLabel");
    iVar1 = FUN_10445410((uint *)"ContinuousProgressBar");
    iVar1 = FUN_10445410((uint *)"ControllerOptions");
    iVar1 = FUN_10445410((uint *)"ControllerOptionsButtons");
    iVar1 = FUN_10445410((uint *)"ControllerOptionsSticks");
    iVar1 = FUN_10445410((uint *)"CountdownLabel");
    iVar1 = FUN_10445410((uint *)"Divider");
    iVar1 = FUN_10445410((uint *)"DropDownMenu");
    iVar1 = FUN_10445410((uint *)"EditablePanel");
    iVar1 = FUN_10445410((uint *)"ExclusiveEditablePanel");
    iVar1 = FUN_10445410((uint *)"ExpandButton");
    iVar1 = FUN_10445410((uint *)"FileNameComboBox");
    iVar1 = FUN_10445410((uint *)"FileOpenDialog");
    iVar1 = FUN_10445410((uint *)"FlyoutMenu");
    iVar1 = FUN_10445410((uint *)"FrameSystemButton");
    iVar1 = FUN_10445410((uint *)"FullscreenTIViewport");
    iVar1 = FUN_10445410((uint *)"GameModes");
    iVar1 = FUN_10445410((uint *)"GenericConfirmation");
    iVar1 = FUN_10445410((uint *)"GenericPanelList");
    iVar1 = FUN_10445410((uint *)"GenericWaitScreen");
    iVar1 = FUN_10445410((uint *)"GraphPanel");
    iVar1 = FUN_10445410((uint *)"HorizontalGauge");
    iVar1 = FUN_10445410((uint *)"ImagePanel");
    iVar1 = FUN_10445410((uint *)"ImageProgressBar");
    iVar1 = FUN_10445410((uint *)"InputDialog");
    iVar1 = FUN_10445410((uint *)"KeyboardMouse");
    iVar1 = FUN_10445410((uint *)"KilledByPanel");
    iVar1 = FUN_10445410((uint *)"Label");
    iVar1 = FUN_10445410((uint *)"ListPanel");
    iVar1 = FUN_10445410((uint *)"ListViewItem");
    iVar1 = FUN_10445410((uint *)"ListViewPanel");
    iVar1 = FUN_10445410((uint *)"LoadingProgress");
    iVar1 = FUN_10445410((uint *)"MainMenu");
    iVar1 = FUN_10445410((uint *)"MarqueeLabel");
    iVar1 = FUN_10445410((uint *)"MenuBar");
    iVar1 = FUN_10445410((uint *)"MenuItem");
    iVar1 = FUN_10445410((uint *)"MenuSeparator");
    iVar1 = FUN_10445410((uint *)"MessageBox");
    iVar1 = FUN_10445410((uint *)"MessagingPanel");
    iVar1 = FUN_10445410((uint *)"Multiplayer");
    iVar1 = FUN_10445410((uint *)"Options");
    iVar1 = FUN_10445410((uint *)"PanelListPanel");
    iVar1 = FUN_10445410((uint *)"PanelListPanel2");
    iVar1 = FUN_10445410((uint *)"Panel_PassNavigationToParent");
    iVar1 = FUN_10445410((uint *)"PasswordEntry");
    iVar1 = FUN_10445410((uint *)"PercentageCroppedImageLabel");
    iVar1 = FUN_10445410((uint *)"ProgressBar");
    iVar1 = FUN_10445410((uint *)"PropertyBox");
    iVar1 = FUN_10445410((uint *)"PropertyDialog");
    iVar1 = FUN_10445410((uint *)"PropertyPage");
    iVar1 = FUN_10445410((uint *)"PropertySheet");
    iVar1 = FUN_10445410((uint *)"RadioButton");
    iVar1 = FUN_10445410((uint *)"RichText");
    iVar1 = FUN_10445410((uint *)"RichTextInterior");
    iVar1 = FUN_10445410((uint *)"ScalableImagePanel");
    iVar1 = FUN_10445410((uint *)"ScrollBar");
    iVar1 = FUN_10445410((uint *)"ScrollBarSlider");
    iVar1 = FUN_10445410((uint *)"ScrollableEditablePanel");
    iVar1 = FUN_10445410((uint *)"SectionedListPanel");
    iVar1 = FUN_10445410((uint *)"Slider");
    iVar1 = FUN_10445410((uint *)"SliderControl");
    iVar1 = FUN_10445410((uint *)"TIAvatarSelectionList");
    iVar1 = FUN_10445410((uint *)"TIButton");
    iVar1 = FUN_10445410((uint *)"TICheckButton");
    iVar1 = FUN_10445410((uint *)"TIConVarCheckButton");
    iVar1 = FUN_10445410((uint *)"TIGameOptions");
    iVar1 = FUN_10445410((uint *)"TIHorizontalList");
    iVar1 = FUN_10445410((uint *)"TIHudDeathNotice");
    iVar1 = FUN_10445410((uint *)"TIImageButton");
    iVar1 = FUN_10445410((uint *)"TIImageButtonToggle");
    iVar1 = FUN_10445410((uint *)"TILocalInfoLabel");
    iVar1 = FUN_10445410((uint *)"TIMainMenuLocalUserInfoContainer");
    iVar1 = FUN_10445410((uint *)"TIMainMenuSocialContainer");
    iVar1 = FUN_10445410((uint *)"TIMessageBox");
    iVar1 = FUN_10445410((uint *)"TIPopUp_Base");
    iVar1 = FUN_10445410((uint *)"TIPropertyPage");
    iVar1 = FUN_10445410((uint *)"TIPropertySheet");
    iVar1 = FUN_10445410((uint *)"TIRadioButton");
    iVar1 = FUN_10445410((uint *)"TIRankListFrame");
    iVar1 = FUN_10445410((uint *)"TIRichText");
    iVar1 = FUN_10445410((uint *)"TIScrollBar");
    iVar1 = FUN_10445410((uint *)"TITabContainer");
    iVar1 = FUN_10445410((uint *)"TIUserAvatarPanel");
    iVar1 = FUN_10445410((uint *)"TIViewport");
    iVar1 = FUN_10445410((uint *)"TIVoiceControl");
    iVar1 = FUN_10445410((uint *)"ToggleButton");
    iVar1 = FUN_10445410((uint *)"TreeNode");
    iVar1 = FUN_10445410((uint *)"TreeNodeDropPanel");
    iVar1 = FUN_10445410((uint *)"TreeNodeText");
    iVar1 = FUN_10445410((uint *)"TreeView");
    iVar1 = FUN_10445410((uint *)"URLButton");
    iVar1 = FUN_10445410((uint *)"Video");
    iVar1 = FUN_10445410((uint *)"VoteBarPanel");
    iVar1 = FUN_10445410((uint *)"VoteOptions");
    iVar1 = FUN_10445410((uint *)"XboxLiveOptions");
    iVar1 = FUN_1044f9a0((int *)"AchievementGenericPanelList");
    iVar1 = FUN_1044f9a0((int *)"Achievements");
    iVar1 = FUN_1044f9a0((int *)"AnimatingImagePanel");
    iVar1 = FUN_1044f9a0((int *)"Audio");
    iVar1 = FUN_1044f9a0((int *)"AudioVideo");
    iVar1 = FUN_1044f9a0((int *)"BaseInputDialog");
    iVar1 = FUN_1044f9a0((int *)"BaseModHybridButton");
    iVar1 = FUN_1044f9a0((int *)"BaseModMenuBackground");
    iVar1 = FUN_1044f9a0((int *)"BorderedPanel");
    iVar1 = FUN_1044f9a0((int *)"BuildModeDialog");
    iVar1 = FUN_1044f9a0((int *)"Button");
    iVar1 = FUN_1044f9a0((int *)"CAdvancedVideo");
    iVar1 = FUN_1044f9a0((int *)"CAvatarImagePanel");
    iVar1 = FUN_1044f9a0((int *)"CBackpackSlotItem");
    iVar1 = FUN_1044f9a0((int *)"CBackpack_ContentsList");
    iVar1 = FUN_1044f9a0((int *)"CBaseHudChat");
    iVar1 = FUN_1044f9a0((int *)"CBaseItemPurchasingPopup");
    iVar1 = FUN_1044f9a0((int *)"CBaseModFooterPanel");
    iVar1 = FUN_1044f9a0((int *)"CBaseModFrame");
    iVar1 = FUN_1044f9a0((int *)"CBaseModTransitionPanel");
    iVar1 = FUN_1044f9a0((int *)"CBaseModelPanel");
    iVar1 = FUN_1044f9a0((int *)"CBaseViewport");
    iVar1 = FUN_1044f9a0((int *)"CBuildModeNavCombo");
    iVar1 = FUN_1044f9a0((int *)"CCenterStringLabel");
    iVar1 = FUN_1044f9a0((int *)"CChatPanel");
    iVar1 = FUN_1044f9a0((int *)"CChatRichText");
    iVar1 = FUN_1044f9a0((int *)"CConsoleDialog");
    iVar1 = FUN_1044f9a0((int *)"CConsolePanel");
    iVar1 = FUN_1044f9a0((int *)"CContextMenuBase");
    iVar1 = FUN_1044f9a0((int *)"CCreateMultiplayerGameBotPage");
    iVar1 = FUN_1044f9a0((int *)"CCreateMultiplayerGameDialog");
    iVar1 = FUN_1044f9a0((int *)"CCvarSlider");
    iVar1 = FUN_1044f9a0((int *)"CDialogListButton");
    iVar1 = FUN_1044f9a0((int *)"CDummyPanel");
    iVar1 = FUN_1044f9a0((int *)"CExButton");
    iVar1 = FUN_1044f9a0((int *)"CExImageButton");
    iVar1 = FUN_1044f9a0((int *)"CExLabel");
    iVar1 = FUN_1044f9a0((int *)"CExplanationPopup");
    iVar1 = FUN_1044f9a0((int *)"CExtrasDialog");
    iVar1 = FUN_1044f9a0((int *)"CFPSPanel");
    iVar1 = FUN_1044f9a0((int *)"CFadeOutStartGame");
    iVar1 = FUN_1044f9a0((int *)"CFadeOutToEconUI");
    iVar1 = FUN_1044f9a0((int *)"CFilterComboBox");
    iVar1 = FUN_1044f9a0((int *)"CFilterablePanelListPanel");
    iVar1 = FUN_1044f9a0((int *)"CFooterBitmapButton");
    iVar1 = FUN_1044f9a0((int *)"CFriendsListPanel");
    iVar1 = FUN_1044f9a0((int *)"CGameConsoleDialog");
    iVar1 = FUN_1044f9a0((int *)"CGammaDialog");
    iVar1 = FUN_1044f9a0((int *)"CHUDHealthVehicle");
    iVar1 = FUN_1044f9a0((int *)"CHUDMissionStatus");
    iVar1 = FUN_1044f9a0((int *)"CHUDPlayerHitOutput");
    iVar1 = FUN_1044f9a0((int *)"CHudAmmo");
    iVar1 = FUN_1044f9a0((int *)"CHudChatHistory");
    iVar1 = FUN_1044f9a0((int *)"CHudClock");
    iVar1 = FUN_1044f9a0((int *)"CHudDamageIndicator");
    iVar1 = FUN_1044f9a0((int *)"CHudDisplayBonuses");
    iVar1 = FUN_1044f9a0((int *)"CHudFullscreen");
    iVar1 = FUN_1044f9a0((int *)"CHudGrenades");
    iVar1 = FUN_1044f9a0((int *)"CHudHealth");
    iVar1 = FUN_1044f9a0((int *)"CHudHoldingObject");
    iVar1 = FUN_1044f9a0((int *)"CHudMenu");
    iVar1 = FUN_1044f9a0((int *)"CHudMessage");
    iVar1 = FUN_1044f9a0((int *)"CHudMiniMap");
    iVar1 = FUN_1044f9a0((int *)"CHudNumericDisplay");
    iVar1 = FUN_1044f9a0((int *)"CHudOBJLocator");
    iVar1 = FUN_1044f9a0((int *)"CHudPanelRoundWin");
    iVar1 = FUN_1044f9a0((int *)"CHudTICrosshair");
    iVar1 = FUN_1044f9a0((int *)"CHudVoiceSelfStatus");
    iVar1 = FUN_1044f9a0((int *)"CHudVoiceStatus");
    iVar1 = FUN_1044f9a0((int *)"CHudVote");
    iVar1 = FUN_1044f9a0((int *)"CHudWeaponSelection");
    iVar1 = FUN_1044f9a0((int *)"CIconPanel");
    iVar1 = FUN_1044f9a0((int *)"CInfoLabel");
    iVar1 = FUN_1044f9a0((int *)"CInfoListItem");
    iVar1 = FUN_1044f9a0((int *)"CInventoryItem");
    iVar1 = FUN_1044f9a0((int *)"CItemButton");
    iVar1 = FUN_1044f9a0((int *)"CItemPreviewPanel");
    iVar1 = FUN_1044f9a0((int *)"CKeyLabel");
    iVar1 = FUN_1044f9a0((int *)"CLoadoutSlotLabel");
    iVar1 = FUN_1044f9a0((int *)"CLoadoutSlotLabelItemImage");
    iVar1 = FUN_1044f9a0((int *)"CLoadoutSlotLabelItemLabel");
    iVar1 = FUN_1044f9a0((int *)"CLoadoutSlotPanel");
    iVar1 = FUN_1044f9a0((int *)"CLoadoutSlotPreview");
    iVar1 = FUN_1044f9a0((int *)"CLoadoutSlotTitleLabel");
    iVar1 = FUN_1044f9a0((int *)"CLocatorPanel");
    iVar1 = FUN_1044f9a0((int *)"CMDLPanel");
    iVar1 = FUN_1044f9a0((int *)"CMapOverview");
    iVar1 = FUN_1044f9a0((int *)"CMouseMessageForwardingPanel");
    iVar1 = FUN_1044f9a0((int *)"CNavProgress");
    iVar1 = FUN_1044f9a0((int *)"CNonFocusableMenu");
    iVar1 = FUN_1044f9a0((int *)"CNotificationQueuePanel");
    iVar1 = FUN_1044f9a0((int *)"CNotificationToastManager");
    iVar1 = FUN_1044f9a0((int *)"CNotificationsPresentPanel");
    iVar1 = FUN_1044f9a0((int *)"CPanelListPanel");
    iVar1 = FUN_1044f9a0((int *)"CPlayerPreviewPanel");
    iVar1 = FUN_1044f9a0((int *)"CPolygonButton");
    iVar1 = FUN_1044f9a0((int *)"CPopUp_Purchase_Buy");
    iVar1 = FUN_1044f9a0((int *)"CRadialButton");
    iVar1 = FUN_1044f9a0((int *)"CRadialMenu");
    iVar1 = FUN_1044f9a0((int *)"CRadialMenuPanel");
    iVar1 = FUN_1044f9a0((int *)"CRequisitionComboBox");
    iVar1 = FUN_1044f9a0((int *)"CRichTextWithScrollbarBorders");
    iVar1 = FUN_1044f9a0((int *)"CRoundWinHeader");
    iVar1 = FUN_1044f9a0((int *)"CRoundWinPanel");
    iVar1 = FUN_1044f9a0((int *)"CRoundWinPersonalStats");
    iVar1 = FUN_1044f9a0((int *)"CRoundWinScores");
    iVar1 = FUN_1044f9a0((int *)"CSDKTextWindow");
    iVar1 = FUN_1044f9a0((int *)"CScoreHeader");
    iVar1 = FUN_1044f9a0((int *)"CScoreListItem");
    iVar1 = FUN_1044f9a0((int *)"CScoreListPanel");
    iVar1 = FUN_1044f9a0((int *)"CSectionHeader");
    iVar1 = FUN_1044f9a0((int *)"CSlotItem");
    iVar1 = FUN_1044f9a0((int *)"CSmallTextEntry");
    iVar1 = FUN_1044f9a0((int *)"CSoundTest");
    iVar1 = FUN_1044f9a0((int *)"CSpectatorGUI");
    iVar1 = FUN_1044f9a0((int *)"CSpectatorPlayerItem");
    iVar1 = FUN_1044f9a0((int *)"CSpectatorPlayerList");
    iVar1 = FUN_1044f9a0((int *)"CTIFreezePanel");
    iVar1 = FUN_1044f9a0((int *)"CTIHudChat");
    iVar1 = FUN_1044f9a0((int *)"CTIHudChatInputLine");
    iVar1 = FUN_1044f9a0((int *)"CTIHudChatLine");
    iVar1 = FUN_1044f9a0((int *)"CTIItemAttributePanel");
    iVar1 = FUN_1044f9a0((int *)"CTIItemAttributesPanel");
    iVar1 = FUN_1044f9a0((int *)"CTILocalPlayerPlanPanel");
    iVar1 = FUN_1044f9a0((int *)"CTIMDLPanel");
    iVar1 = FUN_1044f9a0((int *)"CTINotificationToast");
    iVar1 = FUN_1044f9a0((int *)"CTIScoreboard");
    iVar1 = FUN_1044f9a0((int *)"CTISpectatorGUI");
    iVar1 = FUN_1044f9a0((int *)"CTISpectatorMenu");
    iVar1 = FUN_1044f9a0((int *)"CTISquadButton");
    iVar1 = FUN_1044f9a0((int *)"CTITeamMenu");
    iVar1 = FUN_1044f9a0((int *)"CTIUserStatContainer");
    iVar1 = FUN_1044f9a0((int *)"CTIUserStatLabel");
    iVar1 = FUN_1044f9a0((int *)"CTeamListPanel");
    iVar1 = FUN_1044f9a0((int *)"CTeamMenu");
    iVar1 = FUN_1044f9a0((int *)"CTextWindow");
    iVar1 = FUN_1044f9a0((int *)"CTimeLabel");
    iVar1 = FUN_1044f9a0((int *)"CTipPanel");
    iVar1 = FUN_1044f9a0((int *)"CTransitionScreen");
    iVar1 = FUN_1044f9a0((int *)"CTreeViewListControl");
    iVar1 = FUN_1044f9a0((int *)"CVoiceListItem");
    iVar1 = FUN_1044f9a0((int *)"CVoiceListPanel");
    iVar1 = FUN_1044f9a0((int *)"CVoteSetupDialog");
    iVar1 = FUN_1044f9a0((int *)"CWeaponStatsPanel");
    iVar1 = FUN_1044f9a0((int *)"CheckButton");
    iVar1 = FUN_1044f9a0((int *)"CircularProgressBar");
    iVar1 = FUN_1044f9a0((int *)"ClickPanel");
    iVar1 = FUN_1044f9a0((int *)"ClientModeTINormalFullscreen");
    iVar1 = FUN_1044f9a0((int *)"ComboBox");
    iVar1 = FUN_1044f9a0((int *)"CommandMenu");
    iVar1 = FUN_1044f9a0((int *)"ContextLabel");
    iVar1 = FUN_1044f9a0((int *)"ContinuousProgressBar");
    iVar1 = FUN_1044f9a0((int *)"ControllerOptions");
    iVar1 = FUN_1044f9a0((int *)"ControllerOptionsButtons");
    iVar1 = FUN_1044f9a0((int *)"ControllerOptionsSticks");
    iVar1 = FUN_1044f9a0((int *)"CountdownLabel");
    iVar1 = FUN_1044f9a0((int *)"Divider");
    iVar1 = FUN_1044f9a0((int *)"DropDownMenu");
    iVar1 = FUN_1044f9a0((int *)"EditablePanel");
    iVar1 = FUN_1044f9a0((int *)"ExclusiveEditablePanel");
    iVar1 = FUN_1044f9a0((int *)"ExpandButton");
    iVar1 = FUN_1044f9a0((int *)"FileNameComboBox");
    iVar1 = FUN_1044f9a0((int *)"FileOpenDialog");
    iVar1 = FUN_1044f9a0((int *)"FlyoutMenu");
    iVar1 = FUN_1044f9a0((int *)"FrameSystemButton");
    iVar1 = FUN_1044f9a0((int *)"FullscreenTIViewport");
    iVar1 = FUN_1044f9a0((int *)"GameModes");
    iVar1 = FUN_1044f9a0((int *)"GenericConfirmation");
    iVar1 = FUN_1044f9a0((int *)"GenericPanelList");
    iVar1 = FUN_1044f9a0((int *)"GenericWaitScreen");
    iVar1 = FUN_1044f9a0((int *)"GraphPanel");
    iVar1 = FUN_1044f9a0((int *)"HorizontalGauge");
    iVar1 = FUN_1044f9a0((int *)"ImagePanel");
    iVar1 = FUN_1044f9a0((int *)"ImageProgressBar");
    iVar1 = FUN_1044f9a0((int *)"InputDialog");
    iVar1 = FUN_1044f9a0((int *)"KeyboardMouse");
    iVar1 = FUN_1044f9a0((int *)"KilledByPanel");
    iVar1 = FUN_1044f9a0((int *)"Label");
    iVar1 = FUN_1044f9a0((int *)"ListPanel");
    iVar1 = FUN_1044f9a0((int *)"ListViewItem");
    iVar1 = FUN_1044f9a0((int *)"ListViewPanel");
    iVar1 = FUN_1044f9a0((int *)"LoadingProgress");
    iVar1 = FUN_1044f9a0((int *)"MainMenu");
    iVar1 = FUN_1044f9a0((int *)"MarqueeLabel");
    iVar1 = FUN_1044f9a0((int *)"MenuBar");
    iVar1 = FUN_1044f9a0((int *)"MenuItem");
    iVar1 = FUN_1044f9a0((int *)"MenuSeparator");
    iVar1 = FUN_1044f9a0((int *)"MessageBox");
    iVar1 = FUN_1044f9a0((int *)"MessagingPanel");
    iVar1 = FUN_1044f9a0((int *)"Multiplayer");
    iVar1 = FUN_1044f9a0((int *)"Options");
    iVar1 = FUN_1044f9a0((int *)"PanelListPanel");
    iVar1 = FUN_1044f9a0((int *)"PanelListPanel2");
    iVar1 = FUN_1044f9a0((int *)"Panel_PassNavigationToParent");
    iVar1 = FUN_1044f9a0((int *)"PasswordEntry");
    iVar1 = FUN_1044f9a0((int *)"PercentageCroppedImageLabel");
    iVar1 = FUN_1044f9a0((int *)"ProgressBar");
    iVar1 = FUN_1044f9a0((int *)"PropertyBox");
    iVar1 = FUN_1044f9a0((int *)"PropertyDialog");
    iVar1 = FUN_1044f9a0((int *)"PropertyPage");
    iVar1 = FUN_1044f9a0((int *)"PropertySheet");
    iVar1 = FUN_1044f9a0((int *)"RadioButton");
    iVar1 = FUN_1044f9a0((int *)"RichText");
    iVar1 = FUN_1044f9a0((int *)"RichTextInterior");
    iVar1 = FUN_1044f9a0((int *)"ScalableImagePanel");
    iVar1 = FUN_1044f9a0((int *)"ScrollBar");
    iVar1 = FUN_1044f9a0((int *)"ScrollBarSlider");
    iVar1 = FUN_1044f9a0((int *)"ScrollableEditablePanel");
    iVar1 = FUN_1044f9a0((int *)"SectionedListPanel");
    iVar1 = FUN_1044f9a0((int *)"Slider");
    iVar1 = FUN_1044f9a0((int *)"SliderControl");
    iVar1 = FUN_1044f9a0((int *)"TIAvatarSelectionList");
    iVar1 = FUN_1044f9a0((int *)"TIButton");
    iVar1 = FUN_1044f9a0((int *)"TICheckButton");
    iVar1 = FUN_1044f9a0((int *)"TIConVarCheckButton");
    iVar1 = FUN_1044f9a0((int *)"TIGameOptions");
    iVar1 = FUN_1044f9a0((int *)"TIHorizontalList");
    iVar1 = FUN_1044f9a0((int *)"TIHudDeathNotice");
    iVar1 = FUN_1044f9a0((int *)"TIImageButton");
    iVar1 = FUN_1044f9a0((int *)"TIImageButtonToggle");
    iVar1 = FUN_1044f9a0((int *)"TILocalInfoLabel");
    iVar1 = FUN_1044f9a0((int *)"TIMainMenuLocalUserInfoContainer");
    iVar1 = FUN_1044f9a0((int *)"TIMainMenuSocialContainer");
    iVar1 = FUN_1044f9a0((int *)"TIMessageBox");
    iVar1 = FUN_1044f9a0((int *)"TIPopUp_Base");
    iVar1 = FUN_1044f9a0((int *)"TIPropertyPage");
    iVar1 = FUN_1044f9a0((int *)"TIPropertySheet");
    iVar1 = FUN_1044f9a0((int *)"TIRadioButton");
    iVar1 = FUN_1044f9a0((int *)"TIRankListFrame");
    iVar1 = FUN_1044f9a0((int *)"TIRichText");
    iVar1 = FUN_1044f9a0((int *)"TIScrollBar");
    iVar1 = FUN_1044f9a0((int *)"TITabContainer");
    iVar1 = FUN_1044f9a0((int *)"TIUserAvatarPanel");
    iVar1 = FUN_1044f9a0((int *)"TIViewport");
    iVar1 = FUN_1044f9a0((int *)"TIVoiceControl");
    iVar1 = FUN_1044f9a0((int *)"ToggleButton");
    iVar1 = FUN_1044f9a0((int *)"TreeNode");
    iVar1 = FUN_1044f9a0((int *)"TreeNodeDropPanel");
    iVar1 = FUN_1044f9a0((int *)"TreeNodeText");
    iVar1 = FUN_1044f9a0((int *)"TreeView");
    iVar1 = FUN_1044f9a0((int *)"URLButton");
    iVar1 = FUN_1044f9a0((int *)"Video");
    iVar1 = FUN_1044f9a0((int *)"VoteBarPanel");
    iVar1 = FUN_1044f9a0((int *)"VoteOptions");
    iVar1 = FUN_1044f9a0((int *)"XboxLiveOptions");
    iVar1 = FUN_104a8d56((char *)param_4,(int)"%255s %255s");
    iVar1 = FUN_104a8d56((char *)param_4,(int)"%255s");
    iVar1 = Warning("Player sent bad autoreload command\n");
    iVar1 = Warning("Player sent bad lefthand command\n");
    iVar1 = Warning("ViewBuilder Begin/End Error - Setting RenderablesListElement(-1)\n");
    iVar1 = _wcscmp(pwVar2,L"OCP");
    iVar10 = FUN_100898d0(this_01,(byte *)"police_lightbar");
    iVar14 = (**(code **)(DAT_10681754[1] + 0x24))(DAT_10681200,&DAT_1032efb8,"LOGDIR");
    iVar2 = (**(code **)((int)param_1 + 0x68))("VSoundEmitter003",0);
    iVar2 = (**(code **)(*(int *)(DAT_10681754 + 4) + 0x24))(local_310,&DAT_10323770,"PROFILE");
    iVar2 = (**(code **)(*DAT_106466c4 + 0xc))("models/error.mdl");
    iVar2 = (**(code **)(*DAT_107c0a04 + 0x150))("cable/cable","Other textures",1,0);
    iVar2 = (**(code **)(*param_1 + 0xbc))("$decalSecondPass",&DAT_10625888);
    iVar2 = (**(code **)(*param_1 + 8))("RaisedBorder");
    iVar2 = (**(code **)(*param_8 + 0xbc))("$decalFadeDuration",&DAT_105f8b3c);
    iVar2 = (**(code **)(*piVar1 + 0x20))("-csm_quality_level",0);
    iVar2 = (**(code **)(*piVar1 + 0x20))("-mat_aaquality",param_1[0x16]);
    iVar2 = (**(code **)(*piVar1 + 0x20))("-mat_antialias",param_1[9]);
    iVar2 = (**(code **)(*piVar1 + 0x20))("-mat_vsync",0);
    iVar2 = (**(code **)(*piVar1 + 0x20))("-startup",0);
    iVar2 = (**(code **)(*piVar1 + 0x20))("-width",*param_1);
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-NoVConfig");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-autoconfig");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-condebug");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-full");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-gamestatsfileoutputonly");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-height");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-mapname");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-nohltv");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-rebuildaudio");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-reslistmap");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-startwindowed");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-usedevshotsfile");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-useforcedmparms");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-usereslistfile");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-window");
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-windowed");
    iVar2 = (**(code **)(*piVar1 + 0xc))("-makereslists",&param_1);
    iVar2 = (**(code **)(*piVar1 + 0xc))("-makereslists",0);
    iVar2 = (**(code **)(*piVar1 + 0xc))("-netspike",&local_8);
    iVar2 = (**(code **)(*piVar1 + 0xc))("-resizing",0);
    iVar2 = (**(code **)(*piVar1 + 0xc))("-tools",0);
    iVar2 = (**(code **)(*piVar3 + 0x2c))("-buildmodelforworld");
    iVar2 = (**(code **)(*piVar3 + 0x2c))("-stringtables");
    iVar2 = (**(code **)(*piVar3 + 0xc))("-noconsole",0);
    iVar2 = (**(code **)(*piVar4 + 0x2c))("-nopreloadmodels");
    iVar2 = (**(code **)(*piVar4 + 0x2c))("-nopreloadsounds");
    iVar2 = (**(code **)(*piVar4 + 0xc))("-primarysound",0);
    iVar2 = (**(code **)(*ppuVar1 + 0x2c))("-noassert");
    iVar2 = FUN_00405740(param_1,uVar1,"VFileSystem017");
    iVar2 = FUN_0041e440("");
    iVar2 = FUN_10004d00("");
    iVar2 = FUN_10061a60(piVar4,(byte *)"mouth");
    iVar2 = FUN_100898d0(this,(byte *)"right_side");
    iVar2 = FUN_1008c000(param_1,(byte *)"vehicle_engine");
    iVar2 = FUN_1008c000(param_1,(byte *)"wheel_fl");
    iVar2 = FUN_1008c000(param_1,(byte *)"wheel_fr");
    iVar2 = FUN_1008c000(param_1,(byte *)"wheel_rl");
    iVar2 = FUN_1008c000(param_1,(byte *)"wheel_rr");
    iVar2 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_R_Hand");
    iVar2 = FUN_100e5ad0(puVar6,(int)local_10,(int)((ulonglong)local_10 >> 0x20),local_8,"angles",
    iVar2 = FUN_10111700("unconnected");
    iVar2 = FUN_102659a0(param_1,(byte *)"DynamicModels");
    iVar2 = FUN_102659a0(param_1,(byte *)"addfile");
    iVar2 = FUN_102659a0(param_1,(byte *)"clearfiles");
    iVar2 = FUN_102659a0(param_1,(byte *)"clearform");
    iVar2 = FUN_102659a0(param_1,(byte *)"close");
    iVar2 = FUN_102659a0(param_1,(byte *)"decalprecache");
    iVar2 = FUN_102659a0(param_1,(byte *)"downloadables");
    iVar2 = FUN_102659a0(param_1,(byte *)"genericprecache");
    iVar2 = FUN_102659a0(param_1,(byte *)"gototick");
    iVar2 = FUN_102659a0(param_1,(byte *)"instancebaseline");
    iVar2 = FUN_102659a0(param_1,(byte *)"lightstyles");
    iVar2 = FUN_102659a0(param_1,(byte *)"modelprecache");
    iVar2 = FUN_102659a0(param_1,(byte *)"nextframe");
    iVar2 = FUN_102659a0(param_1,(byte *)"reload");
    iVar2 = FUN_102659a0(param_1,(byte *)"savebsp");
    iVar2 = FUN_102659a0(param_1,(byte *)"savevmf");
    iVar2 = FUN_102659a0(param_1,(byte *)"server_query_info");
    iVar2 = FUN_102659a0(param_1,(byte *)"smooth");
    iVar2 = FUN_102659a0(param_1,(byte *)"soundprecache");
    iVar2 = FUN_102659a0(param_1,(byte *)"userinfo");
    iVar2 = FUN_102659a0(pbVar1,(byte *)"decal");
    iVar2 = FUN_102659a0(pbVar1,(byte *)"generic");
    iVar2 = FUN_102659a0(pbVar1,(byte *)"model");
    iVar2 = FUN_102659a0(pbVar1,(byte *)"sound");
    iVar2 = FUN_102659b0((char *)(puVar1 + 1),".spr");
    iVar2 = FUN_10265ad0(iVar1,"UnlitGeneric",0xc);
    iVar2 = FUN_10265c20((int)(param_1 + 5),"gridrandom",10);
    iVar2 = FUN_10265c20((int)param_3,"materials",9);
    iVar2 = FUN_10265c20((int)pcVar6,"<a href=",8);
    iVar2 = FUN_10265c20((int)pcVar6,"www.",4);
    iVar2 = FUN_10265ff0("");
    iVar2 = FUN_10286590((undefined4 *)"CvarToggleCheckButton");
    iVar2 = FUN_10286590((undefined4 *)"Frame");
    iVar2 = FUN_10286590((undefined4 *)"MenuButton");
    iVar2 = FUN_10286590((undefined4 *)"PageTab");
    iVar2 = FUN_10286590((undefined4 *)"URLLabel");
    iVar2 = FUN_102866e0((uint *)"CvarToggleCheckButton");
    iVar2 = FUN_102866e0((uint *)"Frame");
    iVar2 = FUN_102866e0((uint *)"MenuButton");
    iVar2 = FUN_102866e0((uint *)"PageTab");
    iVar2 = FUN_102866e0((uint *)"URLLabel");
    iVar2 = FUN_10290a70((int *)"CvarToggleCheckButton");
    iVar2 = FUN_10290a70((int *)"Frame");
    iVar2 = FUN_10290a70((int *)"MenuButton");
    iVar2 = FUN_10290a70((int *)"PageTab");
    iVar2 = FUN_10290a70((int *)"Panel");
    iVar2 = FUN_10290a70((int *)"URLLabel");
    iVar2 = FUN_10370b30(local_1d0,(byte *)"burstCenter");
    iVar2 = FUN_10370b30(local_1d0,(byte *)"placementOrigin");
    iVar2 = FUN_103729f0(local_13c,(byte *)"burstCenter");
    iVar2 = FUN_103729f0(local_13c,(byte *)"placementOrigin");
    iVar2 = FUN_103991e0(param_3,".wav");
    iVar2 = FUN_10399480((int)pcVar6,"<a href=",8);
    iVar2 = FUN_10399480((int)pcVar6,"www.",4);
    iVar2 = FUN_10399480((int)puVar9,"!player",8);
    iVar2 = FUN_10399480(iVar2,"silent",iVar4);
    iVar2 = FUN_103997b0("");
    iVar2 = FUN_103997b0("_to_curve_");
    iVar2 = FUN_103b2880((undefined4 *)"CvarToggleCheckButton");
    iVar2 = FUN_103b2880((undefined4 *)"Frame");
    iVar2 = FUN_103b2880((undefined4 *)"MenuButton");
    iVar2 = FUN_103b2880((undefined4 *)"URLLabel");
    iVar2 = FUN_103b29d0((uint *)"CvarToggleCheckButton");
    iVar2 = FUN_103b29d0((uint *)"Frame");
    iVar2 = FUN_103b29d0((uint *)"MenuButton");
    iVar2 = FUN_103b29d0((uint *)"URLLabel");
    iVar2 = FUN_103e8bc0((int *)"CvarToggleCheckButton");
    iVar2 = FUN_103e8bc0((int *)"Frame");
    iVar2 = FUN_103e8bc0((int *)"MenuButton");
    iVar2 = FUN_103e8bc0((int *)"Panel");
    iVar2 = FUN_103e8bc0((int *)"URLLabel");
    iVar2 = FUN_1042d980(param_1,param_2,(ushort *)L"%ls%d.%2.2d%ls");
    iVar2 = FUN_1042d9d0(param_3,".wav");
    iVar2 = FUN_1042dc00(local_1004,"/me ",4);
    iVar2 = FUN_1042dc70((int)pcVar4,"http://",7);
    iVar2 = FUN_1042dc70((int)pcVar4,"item://",7);
    iVar2 = FUN_1042dc70((int)pcVar6,"<a href=",8);
    iVar2 = FUN_1042dc70((int)pcVar6,"www.",4);
    iVar2 = FUN_1042dc70(param_1,"Btn",3);
    iVar2 = FUN_1042dc70(param_1,"vgui::",6);
    iVar2 = FUN_1042e020("");
    iVar2 = FUN_1042e020("_spraypaint");
    iVar2 = FUN_1042e020("_to_curve_");
    iVar2 = FUN_104452c0((undefined4 *)"CBaseModPanel");
    iVar2 = FUN_104452c0((undefined4 *)"CCreateMultiplayerGameServerPage");
    iVar2 = FUN_104452c0((undefined4 *)"CCvarToggleCheckButton");
    iVar2 = FUN_104452c0((undefined4 *)"CEORTeamScores");
    iVar2 = FUN_104452c0((undefined4 *)"CExRichText");
    iVar2 = FUN_104452c0((undefined4 *)"CHudGamePanel");
    iVar2 = FUN_104452c0((undefined4 *)"CMoviePlayer");
    iVar2 = FUN_104452c0((undefined4 *)"CNotificationToastControl");
    iVar2 = FUN_104452c0((undefined4 *)"CPlanCreationMenu");
    iVar2 = FUN_104452c0((undefined4 *)"CPotteryWheelPanel");
    iVar2 = FUN_104452c0((undefined4 *)"CTIGamePanel");
    iVar2 = FUN_104452c0((undefined4 *)"CVoicePlayerListContext");
    iVar2 = FUN_104452c0((undefined4 *)"CvarToggleCheckButton");
    iVar2 = FUN_104452c0((undefined4 *)"Frame");
    iVar2 = FUN_104452c0((undefined4 *)"InGameMainMenu");
    iVar2 = FUN_104452c0((undefined4 *)"MenuButton");
    iVar2 = FUN_104452c0((undefined4 *)"PageTab");
    iVar2 = FUN_104452c0((undefined4 *)"TIPageTab");
    iVar2 = FUN_104452c0((undefined4 *)"URLLabel");
    iVar2 = FUN_104452c0((undefined4 *)"VideoPanel");
    iVar2 = FUN_10445410((uint *)"CBaseModPanel");
    iVar2 = FUN_10445410((uint *)"CCreateMultiplayerGameServerPage");
    iVar2 = FUN_10445410((uint *)"CCvarToggleCheckButton");
    iVar2 = FUN_10445410((uint *)"CEORTeamScores");
    iVar2 = FUN_10445410((uint *)"CExRichText");
    iVar2 = FUN_10445410((uint *)"CHudGamePanel");
    iVar2 = FUN_10445410((uint *)"CMoviePlayer");
    iVar2 = FUN_10445410((uint *)"CNotificationToastControl");
    iVar2 = FUN_10445410((uint *)"CPlanCreationMenu");
    iVar2 = FUN_10445410((uint *)"CPotteryWheelPanel");
    iVar2 = FUN_10445410((uint *)"CTIGamePanel");
    iVar2 = FUN_10445410((uint *)"CVoicePlayerListContext");
    iVar2 = FUN_10445410((uint *)"CvarToggleCheckButton");
    iVar2 = FUN_10445410((uint *)"Frame");
    iVar2 = FUN_10445410((uint *)"InGameMainMenu");
    iVar2 = FUN_10445410((uint *)"MenuButton");
    iVar2 = FUN_10445410((uint *)"PageTab");
    iVar2 = FUN_10445410((uint *)"TIPageTab");
    iVar2 = FUN_10445410((uint *)"URLLabel");
    iVar2 = FUN_10445410((uint *)"VideoPanel");
    iVar2 = FUN_1044f9a0((int *)"CBaseModPanel");
    iVar2 = FUN_1044f9a0((int *)"CCreateMultiplayerGameServerPage");
    iVar2 = FUN_1044f9a0((int *)"CCvarToggleCheckButton");
    iVar2 = FUN_1044f9a0((int *)"CEORTeamScores");
    iVar2 = FUN_1044f9a0((int *)"CExRichText");
    iVar2 = FUN_1044f9a0((int *)"CHudGamePanel");
    iVar2 = FUN_1044f9a0((int *)"CMoviePlayer");
    iVar2 = FUN_1044f9a0((int *)"CNotificationToastControl");
    iVar2 = FUN_1044f9a0((int *)"CPlanCreationMenu");
    iVar2 = FUN_1044f9a0((int *)"CPotteryWheelPanel");
    iVar2 = FUN_1044f9a0((int *)"CTIGamePanel");
    iVar2 = FUN_1044f9a0((int *)"CVoicePlayerListContext");
    iVar2 = FUN_1044f9a0((int *)"CvarToggleCheckButton");
    iVar2 = FUN_1044f9a0((int *)"Frame");
    iVar2 = FUN_1044f9a0((int *)"InGameMainMenu");
    iVar2 = FUN_1044f9a0((int *)"MenuButton");
    iVar2 = FUN_1044f9a0((int *)"PageTab");
    iVar2 = FUN_1044f9a0((int *)"Panel");
    iVar2 = FUN_1044f9a0((int *)"TIPageTab");
    iVar2 = FUN_1044f9a0((int *)"URLLabel");
    iVar2 = FUN_1044f9a0((int *)"VideoPanel");
    iVar2 = FUN_104a8d56(pcVar1,(int)"%i %i %i %i");
    iVar2 = __stricmp(_Str1,".tgz");
    iVar2 = _strncmp("left_",pcVar5,sVar9);
    iVar3 = (**(code **)(*DAT_10730d00 + 0x18))("explain_throw_grenade",0,0);
    iVar3 = (**(code **)(*DAT_10730d00 + 0x18))("local_player_rolled",0,0);
    iVar3 = (**(code **)(*param_1 + 0x1c))("entindex",0);
    iVar3 = (**(code **)(*param_2 + 0xc))("Value",iVar6,0,DAT_105a0e28,DAT_105a0e2c);
    iVar3 = (**(code **)(*piVar2 + 0x2c))("-allowdebug");
    iVar3 = (**(code **)(*piVar2 + 0x2c))("-makereslists");
    iVar3 = (**(code **)(*piVar2 + 0x2c))("-nominidumps");
    iVar3 = (**(code **)(*piVar2 + 0x2c))("-nop4");
    iVar3 = (**(code **)(*piVar2 + 0x2c))("-spewsentences");
    iVar3 = (**(code **)(*piVar2 + 0x2c))("-uselogdir");
    iVar3 = (**(code **)(*piVar2 + 0x2c))("-xlsp");
    iVar3 = (**(code **)(*piVar2 + 0xc))("-remotebug",0);
    iVar3 = (**(code **)(*piVar2 + 0xc))("-reslistmap",&param_2);
    iVar3 = (**(code **)(*piVar2 + 0xc))("-tools",0);
    iVar3 = (**(code **)(*piVar2 + 0xc))("-wavonly",0);
    iVar3 = (**(code **)(*piVar2 + 0xc))("ChatText",1);
    iVar3 = (**(code **)(*piVar4 + 0x2c))("-insecure");
    iVar3 = (**(code **)(*piVar4 + 0x2c))("-steamport");
    iVar3 = (**(code **)(iVar3 + 0x604))("specgui",uVar1);
    iVar3 = FUN_100898d0(param_1,(byte *)"back_end");
    iVar3 = FUN_100898d0(param_1,(byte *)"front_end");
    iVar3 = FUN_100898d0(param_1,(byte *)"left_side");
    iVar3 = FUN_100898d0(param_1,(byte *)"right_side");
    iVar3 = FUN_100898d0(param_1,(byte *)"wheel_fl");
    iVar3 = FUN_100898d0(param_1,(byte *)"wheel_fr");
    iVar3 = FUN_100898d0(param_1,(byte *)"wheel_rl");
    iVar3 = FUN_100898d0(param_1,(byte *)"wheel_rr");
    iVar3 = FUN_1008c000(param_1,(byte *)"thruster");
    iVar3 = FUN_1008c000(piVar4,(byte *)"hostage_attachment");
    iVar3 = FUN_1008c000(this,(byte *)"smg_attachment");
    iVar3 = FUN_1008c000(this,(byte *)"vehicle_engine");
    iVar3 = FUN_1008c050(this,(byte *)"Quadruped.RFootBone1");
    iVar3 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_R_Hand");
    iVar3 = FUN_10146910((void *)(param_1 + 0x4b0),(undefined4 *)"burning_character_cheap",1,
    iVar3 = FUN_10169d60((byte *)"m_vecAbsVelocity",piVar2);
    iVar3 = FUN_10169d60((byte *)"m_vecNetworkOrigin",piVar2);
    iVar3 = FUN_10199990('\0',3,(byte *)"FileSystem_LoadSearchPaths: Invalid parameters specified.")
    iVar3 = FUN_102659a0(param_3,(byte *)"execute_once");
    iVar3 = FUN_102659b0(pcVar2,".360.bsp");
    iVar3 = FUN_102659b0(pcVar2,"music");
    iVar3 = FUN_102659b0(pcVar4,".hl");
    iVar3 = FUN_10265bb0(pcVar2,"DE",2);
    iVar3 = FUN_10265ff0("V_NUMBERS");
    iVar3 = FUN_1026d670(local_40,"%f %f %f\n");
    iVar3 = FUN_1026d670(this,"%d %d %d %d");
    iVar3 = FUN_10286590((undefined4 *)"TextEntry");
    iVar3 = FUN_102866e0((uint *)"TextEntry");
    iVar3 = FUN_10290a70((int *)"CDragDropHelperPanel");
    iVar3 = FUN_10290a70((int *)"TextEntry");
    iVar3 = FUN_102f2265(pcVar1,(int)"%d %d %d %d");
    iVar3 = FUN_10315e1f((ushort *)pwVar2,(ushort *)L".exe");
    iVar3 = FUN_10399150(param_2,param_3,(byte *)"%d %d %d %d");
    iVar3 = FUN_10399480((int)DAT_1064387c,"unused",iVar3);
    iVar3 = FUN_103997b0("unused");
    iVar3 = FUN_1039cac0(this,"%d %d %d %d");
    iVar3 = FUN_103b2880((undefined4 *)"TextEntry");
    iVar3 = FUN_103b29d0((uint *)"TextEntry");
    iVar3 = FUN_103e8bc0((int *)"CDragDropHelperPanel");
    iVar3 = FUN_103e8bc0((int *)"TextEntry");
    iVar3 = FUN_103fd956(pcVar1,(int)"%d %d %d %d");
    iVar3 = FUN_1042e020("DrpAntialias");
    iVar3 = FUN_1042e020("DrpFiltering");
    iVar3 = FUN_1042e020("DrpVSync");
    iVar3 = FUN_1042e020("_antialias");
    iVar3 = FUN_104368b0(this,"%d %d %d %d");
    iVar3 = FUN_104452c0((undefined4 *)"CClientScoreBoardDialog");
    iVar3 = FUN_104452c0((undefined4 *)"CKeyBindings");
    iVar3 = FUN_104452c0((undefined4 *)"TextEntry");
    iVar3 = FUN_10445410((uint *)"CClientScoreBoardDialog");
    iVar3 = FUN_10445410((uint *)"CKeyBindings");
    iVar3 = FUN_10445410((uint *)"TextEntry");
    iVar3 = FUN_1044f9a0((int *)"CClientScoreBoardDialog");
    iVar3 = FUN_1044f9a0((int *)"CDragDropHelperPanel");
    iVar3 = FUN_1044f9a0((int *)"CKeyBindings");
    iVar3 = FUN_1044f9a0((int *)"TextEntry");
    iVar3 = FUN_104a8d56(pcVar1,(int)"%d %d %d %d");
    iVar3 = FUN_104ad79a((ushort *)pwVar2,(ushort *)L".exe");
    iVar3 = Msg("VPROF playback finished.\n");
    iVar3 = Warning("Can\'t find decal %s\n",param_2);
    iVar4 = (**(code **)(*piVar1 + 0x2c))(local_30,iVar4,"Smoke.Emit");
    iVar4 = (**(code **)(*piVar1 + 0x2c))(local_30,iVar4,"fx.steam_light");
    iVar4 = (**(code **)(*piVar10 + 0x2c))("-norebuildaudiocache");
    iVar4 = (**(code **)(*piVar3 + 0x2c))("-nop4");
    iVar4 = (**(code **)(*piVar3 + 0x2c))("-tempcontent");
    iVar4 = (**(code **)(*piVar3 + 0xc))("-tools",0);
    iVar4 = (**(code **)(*piVar6 + 0xc))("HUD_Notifications",1);
    iVar4 = (**(code **)(*piVar6 + 0xc))("TargetID",1);
    iVar4 = (**(code **)(*piVar6 + 0xc))("TargetID_Size2",1);
    iVar4 = (**(code **)(*piVar6 + 0xc))("TargetID_Size3",1);
    iVar4 = (**(code **)(*ppuVar3 + 0x2c))("-internalbuild");
    iVar4 = (**(code **)(*this + 0x8ec))("#Radio_Roger",5);
    iVar4 = (**(code **)(iVar4 + 0x24))("-vproject",uVar3);
    iVar4 = FUN_0041dfc0(param_1,param_2,(byte *)"%s%c..%cbin");
    iVar4 = FUN_1008c000(param_1,(byte *)"vehicle_engine");
    iVar4 = FUN_101f7e20((int)local_ac,"MolotovScorch",'\0');
    iVar4 = FUN_10265920(param_1,param_2,(byte *)"%s%c..%cbin");
    iVar4 = FUN_102659b0(&DAT_10685bd4,"autosave");
    iVar4 = FUN_102659b0(&DAT_10685bd4,"autosavedangerous");
    iVar4 = FUN_10265bb0(pcVar3,"localhost",9);
    iVar4 = FUN_102f2265(pcVar3,(int)"%ld%c");
    iVar4 = FUN_103991e0(pcVar5,"glass");
    iVar4 = FUN_103991e0(pcVar6,".mp3");
    iVar4 = FUN_10399410((char *)local_18cc,"info_heli_supply_drop",0x15);
    iVar4 = FUN_10399410((char *)local_18cc,"info_oozpoint",0xd);
    iVar4 = FUN_10399410((char *)local_18cc,"info_player_terroriststart_",iVar4);
    iVar4 = FUN_103997b0("info_player_terroriststart_");
    iVar4 = FUN_103997b0("silent");
    iVar4 = FUN_1042d9d0(param_4,".mp3");
    iVar4 = FUN_1042e020("_res");
    iVar4 = FUN_10444d70(*(void **)((int)this + 0x1e4),(byte *)"PnlBackground",0);
    iVar4 = FUN_104a8d56(pcVar3,(int)"%d %d %d %d");
    iVar4 = _strncmp(_Str1,"grenade",9);
    iVar5 = (**(code **)(*param_1 + 0x1c))("proxies",0);
    iVar5 = (**(code **)(*param_1 + 0x1c))("userid",0);
    iVar5 = (**(code **)(*piVar2 + 0x2c))("-reuse");
    iVar5 = (**(code **)(*piVar2 + 0xc))("-allowdebug",0);
    iVar5 = (**(code **)(*piVar2 + 0xc))("-console",0);
    iVar5 = (**(code **)(*piVar2 + 0xc))("-novid",0);
    iVar5 = (**(code **)(*piVar2 + 0xc))("-toconsole",0);
    iVar5 = (**(code **)(*piVar4 + 0x2c))("-condebug");
    iVar5 = (**(code **)(*piVar4 + 0x2c))("-nomessagebox");
    iVar5 = (**(code **)(*piVar4 + 0xc))("-remotebug",0);
    iVar5 = FUN_1008c050(this,(byte *)"ValveBiped.Weapon_bone");
    iVar5 = FUN_10124190((byte *)"player_regenerates_health");
    iVar5 = FUN_102f2265(pcVar3,(int)"%d %d %d %d");
    iVar5 = FUN_102f2283(&local_b0,(int)"encoding %s %d format %s %d\n");
    iVar5 = FUN_103991e0((char *)pbVar1,".vmt");
    iVar5 = FUN_10399300((int)piVar2,"vo",2);
    iVar5 = FUN_103fd956(pcVar3,(int)"%d %d %d %d");
    iVar5 = FUN_103fd974(&local_b0,(int)"encoding %s %d format %s %d\n");
    iVar5 = FUN_104a8d56(pcVar3,(int)"%d %d %d %d");
    iVar5 = FUN_104a8d74(&local_b0,(int)"encoding %s %d format %s %d\n");
    iVar6 = (**(code **)(*(int *)param_1[2] + 0x1c))("userid",0);
    iVar6 = (**(code **)(*param_1 + 0x1c))("attacker",0);
    iVar6 = (**(code **)(*piVar5 + 0x20))(local_4c,iVar6,6,"Weapon_RPG7.MidAir",0x78);
    iVar6 = (**(code **)(*piVar5 + 0x2c))("-nopreloadmodels");
    iVar6 = (**(code **)(*piVar7 + 0xc))("-requirecubemaps",0);
    iVar6 = FUN_10023a9c((byte *)puVar4,(byte *)"AuthenticAMD");
    iVar6 = FUN_1008c000(this_00,(byte *)"hostage_attachment");
    iVar6 = FUN_10265c20((int)local_18,"FKID_",5);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_ammo_box_spawn",0x13);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_car_spawn",0xe);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_forklift_spawn",0x13);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_heli_CT_spawn",0x12);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_heli_TER_spawn",0x13);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_heli_supply_drop",0x15);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_heli_wp",0xc);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_spawn_1",0x14);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_hostage_waypoint_1",0x17);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_oozpoint",0xd);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_plane_wp",0xd);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_player_ctstart_",iVar6);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_player_terroriststart_",iVar6);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_portable_blockade",0x16);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_supply_crate_spawn",0x17);
    iVar6 = FUN_10399410(&stack0xffffe730,"info_vehicle_wp",0xf);
    iVar6 = FUN_10399410(&stack0xffffe730,"wheeled_controllable",iVar6);
    iVar6 = FUN_103997b0("info_player_ctstart_");
    iVar6 = FUN_103997b0("info_player_terroriststart_");
    iVar6 = FUN_103997b0("wheeled_controllable");
    iVar6 = FUN_1042dc70(local_c,"dirt",4);
    iVar7 = (**(code **)(*(int *)param_1[2] + 0x1c))("attacker",0);
    iVar7 = (**(code **)(*piVar4 + 0x2c))("-nohltv");
    iVar7 = (**(code **)(*piVar6 + 0x1c))("count",0);
    iVar7 = FUN_102659b0(pcVar14,"autoexec");
    iVar7 = FUN_10265ff0("TacticalInterventionQuery");
    iVar9 = (**(code **)(*DAT_10730d00 + 0x18))("hide_freezepanel",0,0);
    iVar9 = (**(code **)(*DAT_107c09d0 + 0x44))("snd_soundmixer");
    iVar9 = (**(code **)(*piVar3 + 0xc))("-high",0);
    iVar9 = FUN_10286590((undefined4 *)"CBaseActionEditDialog");
    iVar9 = FUN_102866e0((uint *)"CBaseActionEditDialog");
    iVar9 = FUN_10290a70((int *)"CBaseActionEditDialog");
    iVar9 = FUN_103991e0(pcVar11,"glass");
    if ((!bVar2) && ((char *)param_1[0x17] != "info_landmark")) {
    if (((((char *)param_1[0x17] == "dynamic_prop") ||
    if ((((*(char **)((int)*(void **)(local_8 + 4) + 0x5c) != "npc_monk") &&
    if ((((this[0xdd] & 0x1000U) == 0) && ((char *)this[0x17] != "npc_bullseye")) &&
    if (((*(char **)((int)*(void **)(param_1 + 4) + 0x5c) == "npc_monk") ||
    if (((char *)param_1[0x17] == "func_door_rotating") ||
    if (((char *)param_1[0x17] == "prop_physics_override") ||
    if (((char *)param_1[0x17] == "weapon_smg1") ||
    if (((char *)this[0x17] == "game_team_master") ||
    if (((char *)this[0x17] == "info_landmark") ||
    if (((char *)this[0x17] == "trigger_transition") ||
    if (((char)local_44 == '\"') && ((&stack0xffffffbb)[iVar3] == '\"')) {
    if (((param_4 & 0x20) == 0) || (pcVar9 = "(%d) + %d bytes", param_2 == (undefined2 *)0x0)) {
    if (((uVar3 == 0) || (uVar3 = FUN_1042df80(param_1,(byte *)"d3_citadel_04"), uVar3 == 0)) ||
    if (((uVar4 == 0) || (uVar4 = FUN_10399710(param_1,(byte *)"d3_citadel_04"), uVar4 == 0)) ||
    if ((*(char **)((int)this_00 + 0x5c) != "env_fire") &&
    if ((1 < iVar4) && (*(char *)((param_1[3] - param_1[8]) + *param_1 + -1 + iVar4) == '\"')) {
    if ((bVar1) || (*(char **)((int)param_1 + 0x5c) == "dog_entity")) goto LAB_1020ae9f;
    if ((bVar2) || (*(char **)((int)this + 0x5c) == "info_node_air_hint")) goto LAB_100569a1;
    if ((bVar2) || (*(char **)((int)this + 0x5c) == "info_node_air_hint")) goto LAB_10056b9d;
    if ((cVar2 != '\"') && (cVar2 != '%')) {
    if ((char *)this[0x17] == "func_tracktrain") break;
    if ((iVar3 == 0) && (iVar3 = FUN_103991e0(local_10c,"_selected_"), iVar3 != 0)) {
    if ((iVar7 == 0) && (iVar7 = FUN_102659b0(pcVar14,"userconfig"), iVar7 == 0)) {
    if ((in_EAX != 0) && (param_1 != (uint *)"height")) {
    if ((local_48[0] == 0) || (uVar4 = FUN_1042df80(local_48,(byte *)"english"), uVar4 == 0)) {
    if ((param_1 != (uint *)"Solid") &&
    if ((param_1 == (uint *)"gibmodel") ||
    if ((param_1 == (uint *)"spawnobject") ||
    if ((param_3 != '\0') || (uVar4 = FUN_1042f270(pvVar2,(uint *)"SteamApp",0), uVar4 == 0)) {
    if ((pbVar1 != (byte *)"OnPlayerAward") &&
    if ((pbVar1 != (byte *)"pvsplayer") &&
    if ((pbVar1 == (byte *)"player_hurt") ||
    if ((pbVar1 == (byte *)0x0) || (uVar4 = FUN_1042df80(pbVar1,(byte *)"unconnected"), uVar4 == 0))
    if ((pbVar2 == (byte *)"bottom") || (uVar3 = FUN_10399710(pbVar2,(byte *)"bottom"), uVar3 == 0))
    if ((pbVar4 == (byte *)0x0) || (uVar5 = FUN_10265f50(pbVar4,(byte *)"GameHeader"), uVar5 != 0))
    if ((pbVar5 != (byte *)"worldspawn") &&
    if ((pbVar6 == (byte *)"server") || (uVar5 = FUN_10399710(pbVar6,(byte *)"server"), uVar5 == 0))
    if ((this == (void *)0x0) || (iVar2 = FUN_1008c000(this,(byte *)"headlight"), iVar2 == -1)) {
    if ((this_00 != (void *)0x0) && (uVar2 = FUN_1042f270(this_00,(uint *)"Selected",0), uVar2 == 0)
    if ((uVar1 != 0) && (uVar1 = FUN_10399710(param_1,(byte *)"!friend"), uVar1 != 0)) {
    if ((uVar1 == 0) || (uVar1 = FUN_10399710(param_1,(byte *)"!target1"), uVar1 == 0)) {
    if ((uVar2 != 0) && (uVar2 = FUN_1042df20(pbVar1,(byte *)"round_pre_start"), uVar2 != 0)) {
    if ((uVar2 == 0) || (uVar2 = FUN_10265f50(pbVar1,(byte *)"noexclude"), uVar2 == 0)) {
    if ((uVar2 == 0) || (uVar2 = FUN_1042df20(param_3,(byte *)"say_team"), uVar2 == 0)) {
    if ((uVar3 == 0) || (uVar3 = FUN_1042df80(param_1,(byte *)"ep1_citadel_02b"), uVar3 == 0))
    if ((uVar3 == 0) || (uVar3 = FUN_1042df80(pbVar2,(byte *)"player_escort"), uVar3 == 0)) {
    if ((uVar4 == 0) || (iVar1 = FUN_1042d9d0((char *)pbVar3,"(Disabled on Server)"), iVar1 != 0)) {
    if ((uVar4 == 0) || (uVar4 = FUN_10399710(param_1,(byte *)"ep1_citadel_02b"), uVar4 == 0))
    if ((uVar4 == 0) || (uVar4 = FUN_1042df80((byte *)"nextlevel",pbVar3), uVar4 == 0)) {
    if ((uVar4 == 0) || (uVar4 = FUN_1042df80(pbVar3,(byte *)"iterate_team"), uVar4 == 0)) {
    if (*(char **)((int)param_1 + 0x5c) != "func_water") {
    if (*(char **)((int)param_1 + 0x5c) != "func_water_analog") {
    if (*(char **)((int)param_1 + 0x5c) != "prop_physics") {
    if (*(char **)((int)param_1 + 0x5c) != "worldspawn") {
    if (*(char **)((int)param_1 + 0x5c) == "hostage_entity") goto LAB_1020ae9f;
    if (*(char **)((int)param_1 + 0x5c) == "player") {
    if (*(char **)((int)param_1 + 0x5c) == "prop_movable") goto LAB_1020af8e;
    if (*(char **)((int)param_1 + 0x5c) == "worldspawn") goto LAB_1020af8e;
    if (*(char **)((int)pvVar1 + 0x5c) != "prop_door_rotating") {
    if (*(char **)((int)pvVar2 + 0x5c) != "func_breakable") {
    if (*(char **)((int)pvVar2 + 0x5c) != "func_breakable_surf") {
    if (*(char **)((int)pvVar2 + 0x5c) != "path_track") {
    if (*(char **)((int)pvVar2 + 0x5c) != "prop_dynamic") {
    if (*(char **)((int)this + 0x5c) != "prop_physics_override") {
    if (*(char **)((int)this + 0x5c) != "prop_ragdoll") {
    if (*(char **)((int)this + 0x5c) == "info_node_climb") {
    if (*param_2 == '\"') {
    if (cVar1 == '\"') {
    if (cVar2 != '\"') {
    if (param_1 != (uint *)"_ambient") {
    if (param_1 != (uint *)"materialVar") {
    if (pbVar1 != (byte *)"func_pushable") {
    in_EAX = (**(code **)(*DAT_1067e240 + 100))(*param_1,"PreSpawnInstance");
    in_EAX = (**(code **)(*DAT_106a5ea8 + 8))("VMaterialSystem080");
    in_EAX = (**(code **)(*DAT_107c0a08 + 8))("VMaterialSystem080");
    in_EAX = (wchar_t *)(**(code **)(*DAT_107c09f0 + 0x2c))("Tip_Count");
    in_EAX = FUN_100612d0(param_1,"func_stageblocker");
    in_EAX = FUN_10061a60(param_1,(byte *)"move_y");
    in_EAX = FUN_1008c0a0(param_1,(byte *)"move_y");
    in_EAX = FUN_102659b0(&DAT_104a3380 + param_1 * 0x78,"music");
    in_EAX = FUN_10265c20((int)(param_1 + ((int)pcVar2 - (int)(param_1 + 1)) + -4),".mp3",4);
    in_EAX = FUN_10265f50(param_1,(byte *)"portal2");
    in_EAX = FUN_10399710((byte *)param_1,(byte *)"health");
    in_EAX = FUN_10399710((byte *)param_1,(byte *)"navprop");
    in_EAX = FUN_10399710((byte *)param_1,(byte *)"style");
    in_EAX = FUN_10399710(param_2,(byte *)"Ignore");
    in_EAX = FUN_10399710(pbVar11,(byte *)"voicemenu");
    in_EAX = FUN_1042c450(param_1,(int)"unconnected");
    in_EAX = Warning("Attempted to create unknown particle system type \"%s\"!\n",param_1);
    local_10 = "-1";
    local_10 = "-182";
    local_10 = "-484";
    local_10 = "0 0 0 0";
    local_10 = "0 0 0 150";
    local_10 = "0 0 255 255";
    local_10 = "0 255 0 255";
    local_10 = "0";
    local_10 = "0.0";
    local_10 = "0.1";
    local_10 = "1";
    local_10 = "1.0";
    local_10 = "10";
    local_10 = "108";
    local_10 = "112";
    local_10 = "12";
    local_10 = "128 255 128 255";
    local_10 = "14";
    local_10 = "15";
    local_10 = "153 204 255 255";
    local_10 = "153 255 153 255";
    local_10 = "16";
    local_10 = "160";
    local_10 = "182";
    local_10 = "2";
    local_10 = "20";
    local_10 = "24";
    local_10 = "25";
    local_10 = "255 0 0 255";
    local_10 = "255 180 0 255";
    local_10 = "255 210 0 255";
    local_10 = "255 255 0 255";
    local_10 = "255 255 255 255";
    local_10 = "255 64 64 255";
    local_10 = "255 80 0 255";
    local_10 = "255";
    local_10 = "255.0";
    local_10 = "28";
    local_10 = "3";
    local_10 = "32";
    local_10 = "33";
    local_10 = "4";
    local_10 = "40 40 40 220";
    local_10 = "40";
    local_10 = "46 107 22 200";
    local_10 = "484";
    local_10 = "5";
    local_10 = "50";
    local_10 = "54";
    local_10 = "6";
    local_10 = "72";
    local_10 = "8";
    local_10 = "9";
    local_10 = "98";
    local_10 = "Black";
    local_10 = "BlueColor";
    local_10 = "Default";
    local_10 = "DefaultButton";
    local_10 = "FgColor";
    local_10 = "GreenColor";
    local_10 = "HudNumbers";
    local_10 = "HudNumbersGlow";
    local_10 = "HudNumbersSmall";
    local_10 = "HudNumbersSmallGlow";
    local_10 = "HudSelectionNumbers";
    local_10 = "HudSelectionText";
    local_10 = "InstructorButtons";
    local_10 = "InstructorButtonsSteamController";
    local_10 = "InstructorButtonsSteamController_ss";
    local_10 = "InstructorButtons_ss";
    local_10 = "InstructorKeyBindings";
    local_10 = "InstructorKeyBindingsSmall";
    local_10 = "InstructorTitle";
    local_10 = "InstructorTitle_ss";
    local_10 = "ItemColor";
    local_10 = "MenuBoxBg";
    local_10 = "MenuColor";
    local_10 = "MenuItemFont";
    local_10 = "MenuItemFontPulsing";
    local_10 = "MenuTextFont";
    local_10 = "RedColor";
    local_10 = "SelectionBoxBg";
    local_10 = "SelectionEmptyBoxBg";
    local_10 = "SelectionNumberFg";
    local_10 = "SelectionSelectedBoxBg";
    local_10 = "SelectionTextFg";
    local_10 = "false";
    local_10 = "vgui/game_panel/player_icon";
    local_10 = "vgui/game_panel/player_icon_inverse";
    local_10 = "vgui/game_panel/player_icon_localplayer";
    local_10 = "vgui/hud/800corner1";
    local_10 = "vgui/hud/800corner2";
    local_10 = "vgui/hud/800corner3";
    local_10 = "vgui/hud/800corner4";
    local_10 = "vgui/hud/vote_no";
    local_10 = "vgui/hud/vote_yes";
    local_10 = "vgui/ingame/gamepanel_bg";
    local_10 = "vgui/ingame/gamepanel_bg_tdm";
    local_10 = "vgui/ingame/gamepanel_fullbg";
    local_10 = "vgui/ingame/intro_ct";
    local_10 = "vgui/ingame/intro_terrorist";
    local_10 = "vgui/mm/new/check";
    local_10 = "vgui/mm/new/checkbg";
    local_10 = "vgui/mm/new/list_background";
    local_10 = "vgui/mm/new/scanline_bg_01";
    local_10 = "vgui/mm/new/scanline_bg_02";
    local_10 = "vgui/mm/new/tab_close";
    local_10 = (byte *)"FCVAR_NEVER_AS_STRING";
    local_10 = (char *)(**(code **)(*piVar2 + 4))("HybridButton.SymbolFont");
    local_10 = (int *)FUN_10444d70(param_1,(byte *)"RoomHeaderLabel",1);
    local_10 = (int *)FUN_10444d70(piVar1,(byte *)"RankEXP",1);
    local_10 = (int *)FUN_10444d70(piVar1,(byte *)"RankImage",1);
    local_10 = (int *)FUN_10444d70(piVar1,(byte *)"Ranklabel",1);
    local_10 = FUN_1042ea30(pvVar2,"Platform");
    local_10 = FUN_1042ea30(pvVar2,"extras");
    local_10 = FUN_1042ea30(this,"splitscreen");
    local_100 = "-quiet";
    local_100 = "ctstart";
    local_104 = "-oldcubepath";
    local_120 = "TOTAL";
    local_14 = "Color";
    local_14 = "Default";
    local_14 = "DefaultUnderline";
    local_14 = "bool";
    local_14 = "float";
    local_14 = "int";
    local_14 = "proportional_float";
    local_14 = "proportional_int";
    local_14 = "proportional_xpos";
    local_14 = "proportional_ypos";
    local_14 = "textureid";
    local_14 = "vgui::HFont";
    local_14 = (**(code **)(*DAT_107c0a04 + 0x150))("dev/glow_color","Other textures",1,0);
    local_14 = (**(code **)(*DAT_107c0a04 + 0x170))("_rt_SkyMask","RenderTargets",1,0);
    local_14 = (**(code **)(*DAT_107c0a04 + 0x170))("_rt_ViewmodelMask");
    local_14 = (char *)(**(code **)(*piVar3 + 4))("TIButtonDefault.Font");
    local_14 = (char *)FUN_1042f3d0(param_1,(uint *)"primtext",0);
    local_18 = "DrawBoxBackground";
    local_18 = "Health_Critical_Color";
    local_18 = "Health_High_Color";
    local_18 = "Health_Low_Color";
    local_18 = "Medikit_Juice_Color";
    local_18 = "PROFILE";
    local_18 = "avatar_tall";
    local_18 = "avatar_wide";
    local_18 = "avatar_xpos";
    local_18 = "avatar_ypos";
    local_18 = "camAngX";
    local_18 = "camAngY";
    local_18 = "camAngZ";
    local_18 = "camFov";
    local_18 = "camPosX";
    local_18 = "camPosY";
    local_18 = "camPosZ";
    local_18 = "car_seat_size";
    local_18 = "car_tall";
    local_18 = "car_wheel_fl_x";
    local_18 = "car_wheel_fl_y";
    local_18 = "car_wheel_fr_x";
    local_18 = "car_wheel_fr_y";
    local_18 = "car_wheel_rl_x";
    local_18 = "car_wheel_rl_y";
    local_18 = "car_wheel_rr_x";
    local_18 = "car_wheel_rr_y";
    local_18 = "car_wheel_tall";
    local_18 = "car_wheel_wide";
    local_18 = "car_wide";
    local_18 = "car_x";
    local_18 = "car_y";
    local_18 = "colon_spacing";
    local_18 = "colon_tall";
    local_18 = "colon_wide";
    local_18 = "count0_tall";
    local_18 = "count0_wide";
    local_18 = "count0_xpos";
    local_18 = "count0_ypos";
    local_18 = "count1_tall";
    local_18 = "count1_wide";
    local_18 = "count1_xpos";
    local_18 = "count1_ypos";
    local_18 = "count2_tall";
    local_18 = "count2_wide";
    local_18 = "count2_xpos";
    local_18 = "count2_ypos";
    local_18 = "dead_icon_tall";
    local_18 = "dead_icon_wide";
    local_18 = "dead_icon_xpos";
    local_18 = "dead_icon_ypos";
    local_18 = "digit2_xpos";
    local_18 = "digit2_ypos";
    local_18 = "digit_spacing";
    local_18 = "digit_tall";
    local_18 = "digit_wide";
    local_18 = "digit_xpos";
    local_18 = "digit_ypos";
    local_18 = "dog_health_tall";
    local_18 = "dog_health_wide";
    local_18 = "dog_health_xpos";
    local_18 = "dog_health_ypos";
    local_18 = "dog_state_tall";
    local_18 = "dog_state_wide";
    local_18 = "dog_state_xpos";
    local_18 = "dog_state_ypos";
    local_18 = "fade_in_time";
    local_18 = "fade_out_time";
    local_18 = "health_tall";
    local_18 = "health_vertical";
    local_18 = "health_wide";
    local_18 = "health_xpos";
    local_18 = "health_ypos";
    local_18 = "heli_seat_spacing";
    local_18 = "heli_seat_x";
    local_18 = "heli_seat_y";
    local_18 = "heli_tall";
    local_18 = "heli_wide";
    local_18 = "heli_x";
    local_18 = "heli_y";
    local_18 = "hostage_icon_size";
    local_18 = "hostage_icon_xpos";
    local_18 = "hostage_icon_ypos";
    local_18 = "hostage_leftarrow_xpos";
    local_18 = "hostage_leftarrow_ypos";
    local_18 = "hostage_rightarrow_xpos";
    local_18 = "hostage_rightarrow_ypos";
    local_18 = "icon_tall";
    local_18 = "icon_wide";
    local_18 = "icon_xpos";
    local_18 = "icon_ypos";
    local_18 = "item_spacing";
    local_18 = "item_tall";
    local_18 = "item_wide";
    local_18 = "local_seat_color";
    local_18 = "m_Ammo2Color";
    local_18 = "m_AutoColorBlue";
    local_18 = "m_AutoColorCustom";
    local_18 = "m_AutoColorGreen";
    local_18 = "m_AutoColorRed";
    local_18 = "m_AutoColorYellow";
    local_18 = "m_BGColor";
    local_18 = "m_BoxColor";
    local_18 = "m_CornerColor";
    local_18 = "m_CriticalColor";
    local_18 = "m_EmptyBoxColor";
    local_18 = "m_FGColor";
    local_18 = "m_FlashingColor";
    local_18 = "m_FriendlyColor";
    local_18 = "m_IconColor";
    local_18 = "m_InboundColor";
    local_18 = "m_IntroAlpha";
    local_18 = "m_ItemColor";
    local_18 = "m_MenuColor";
    local_18 = "m_NameFont";
    local_18 = "m_NormalColor";
    local_18 = "m_NumberColor";
    local_18 = "m_OutboundColor";
    local_18 = "m_SelectedBoxColor";
    local_18 = "m_SelectionColor";
    local_18 = "m_TextColor";
    local_18 = "m_bAutoHideButtons";
    local_18 = "m_bAutoHideSelf";
    local_18 = "m_bDisableManipulation";
    local_18 = "m_bDrawTiled";
    local_18 = "m_bForceClose";
    local_18 = "m_bLimitTabWidth";
    local_18 = "m_bObjectiveVisible";
    local_18 = "m_bRequisitionVisible";
    local_18 = "m_bRightJustify";
    local_18 = "m_bShowColumns";
    local_18 = "m_bStageVisible";
    local_18 = "m_bStartFramed";
    local_18 = "m_bTabFitText";
    local_18 = "m_bTeamVisible";
    local_18 = "m_bUseParentBG";
    local_18 = "m_cColorCT";
    local_18 = "m_cColorHighlight";
    local_18 = "m_cColorTer";
    local_18 = "m_cUnselectedColor";
    local_18 = "m_clrBaseBGColor";
    local_18 = "m_clrBlueText";
    local_18 = "m_clrIcon";
    local_18 = "m_clrLocalBGColor";
    local_18 = "m_clrOutline";
    local_18 = "m_clrRedText";
    local_18 = "m_fZoom";
    local_18 = "m_flAlpha";
    local_18 = "m_flAlphaOverride";
    local_18 = "m_flBlur";
    local_18 = "m_flBoxGap";
    local_18 = "m_flLargeBoxTall";
    local_18 = "m_flLargeBoxWide";
    local_18 = "m_flLineHeight";
    local_18 = "m_flLineSpacing";
    local_18 = "m_flMaxHitOutput";
    local_18 = "m_flOpenCloseTime";
    local_18 = "m_flSelectionAlphaOverride";
    local_18 = "m_flSelectionNumberXPos";
    local_18 = "m_flSelectionNumberYPos";
    local_18 = "m_flSmallBoxSize";
    local_18 = "m_flStaminaAlpha";
    local_18 = "m_flTextScan";
    local_18 = "m_flTextYPos";
    local_18 = "m_flWeaponPickupGrowTime";
    local_18 = "m_hButtonFont";
    local_18 = "m_hButtonFontSC";
    local_18 = "m_hButtonFontSC_ss";
    local_18 = "m_hButtonFont_ss";
    local_18 = "m_hCaptionFont";
    local_18 = "m_hCaptionFont_ss";
    local_18 = "m_hCustomizeFont";
    local_18 = "m_hItemFont";
    local_18 = "m_hItemFontPulsing";
    local_18 = "m_hKeysFont";
    local_18 = "m_hKeysFontSmall";
    local_18 = "m_hNumberFont";
    local_18 = "m_hNumberGlowFont";
    local_18 = "m_hSmallNumberFont";
    local_18 = "m_hSmallNumberGlowFont";
    local_18 = "m_hTextFont";
    local_18 = "m_iAvatarWidth";
    local_18 = "m_iBackgroundTex";
    local_18 = "m_iBottomPadding";
    local_18 = "m_iBoxInset";
    local_18 = "m_iBoxSize";
    local_18 = "m_iCalloutInParentsX";
    local_18 = "m_iCalloutInParentsY";
    local_18 = "m_iClassWidth";
    local_18 = "m_iContentH";
    local_18 = "m_iContentW";
    local_18 = "m_iDeathWidth";
    local_18 = "m_iEndH";
    local_18 = "m_iEndW";
    local_18 = "m_iEndX";
    local_18 = "m_iEndY";
    local_18 = "m_iHeaderTall";
    local_18 = "m_iHeaderY";
    local_18 = "m_iIconSize";
    local_18 = "m_iIssueWidth";
    local_18 = "m_iItemGap";
    local_18 = "m_iMarqueeDirection";
    local_18 = "m_iMaxDeathNotices";
    local_18 = "m_iMaxDeathNotices_Spec";
    local_18 = "m_iNameWidth";
    local_18 = "m_iObjH";
    local_18 = "m_iObjW";
    local_18 = "m_iObjX";
    local_18 = "m_iObjY";
    local_18 = "m_iOverlapOffset_X";
    local_18 = "m_iOverlapOffset_Y";
    local_18 = "m_iParameterWidth";
    local_18 = "m_iPingWidth";
    local_18 = "m_iReqTextX";
    local_18 = "m_iReqTextY";
    local_18 = "m_iScoreWidth";
    local_18 = "m_iScrollSpeed";
    local_18 = "m_iSheetInsetBottom";
    local_18 = "m_iShouldWrapStaticLocators";
    local_18 = "m_iSpacer";
    local_18 = "m_iSpecifiedTabHeight";
    local_18 = "m_iSpecifiedTabHeightSmall";
    local_18 = "m_iSquadID";
    local_18 = "m_iStageH";
    local_18 = "m_iStageW";
    local_18 = "m_iStageX";
    local_18 = "m_iStageY";
    local_18 = "m_iStartH";
    local_18 = "m_iStartW";
    local_18 = "m_iStartX";
    local_18 = "m_iStartY";
    local_18 = "m_iTabXDelta";
    local_18 = "m_iTabXIndent";
    local_18 = "m_iTeamH";
    local_18 = "m_iTeamID";
    local_18 = "m_iTeamW";
    local_18 = "m_iTeamX";
    local_18 = "m_iTeamY";
    local_18 = "m_iTitleTextInsetXOverride";
    local_18 = "m_iTitleTextInsetYOverride";
    local_18 = "m_iTitleXOffset";
    local_18 = "m_iVisibleBuffer";
    local_18 = "m_iXInset";
    local_18 = "m_iYInset";
    local_18 = "m_nBGImage";
    local_18 = "m_nBGImageMis";
    local_18 = "m_nBGImageTDM";
    local_18 = "m_nBGTextureId";
    local_18 = "m_nBannerCT";
    local_18 = "m_nBannerTerrorist";
    local_18 = "m_nBgTextureId1";
    local_18 = "m_nBgTextureId2";
    local_18 = "m_nBgTextureId3";
    local_18 = "m_nBgTextureId4";
    local_18 = "m_nBottomOffset";
    local_18 = "m_nButtonGap";
    local_18 = "m_nButtonHeight";
    local_18 = "m_nButtonWidth";
    local_18 = "m_nCheckBG";
    local_18 = "m_nCheckImage";
    local_18 = "m_nCheckImage2";
    local_18 = "m_nCloseTexture";
    local_18 = "m_nCroppedImage";
    local_18 = "m_nListNumber";
    local_18 = "m_nLocalPlayerImage";
    local_18 = "m_nNoTextureId";
    local_18 = "m_nPaintBackgroundType";
    local_18 = "m_nPlayerImage";
    local_18 = "m_nPlayerImageInverse";
    local_18 = "m_nRightOffset";
    local_18 = "m_nTextInsetLeft";
    local_18 = "m_nTextureId";
    local_18 = "m_nYesTextureId";
    local_18 = "medikit_tall";
    local_18 = "medikit_wide";
    local_18 = "medikit_xpos";
    local_18 = "medikit_ypos";
    local_18 = "modelAngX";
    local_18 = "modelAngY";
    local_18 = "modelAngZ";
    local_18 = "other_seat_color";
    local_18 = "show_avatar";
    local_18 = "show_dead_icon";
    local_18 = "show_friend";
    local_18 = "show_voice_icon";
    local_18 = "start_x";
    local_18 = "start_y";
    local_18 = "suv_wheel_fl_x";
    local_18 = "suv_wheel_fl_y";
    local_18 = "suv_wheel_fr_x";
    local_18 = "suv_wheel_fr_y";
    local_18 = "suv_wheel_rl_x";
    local_18 = "suv_wheel_rl_y";
    local_18 = "suv_wheel_rr_x";
    local_18 = "suv_wheel_rr_y";
    local_18 = "text_xpos";
    local_18 = "text_ypos";
    local_18 = "van_wheel_fl_x";
    local_18 = "van_wheel_fl_y";
    local_18 = "van_wheel_fr_x";
    local_18 = "van_wheel_fr_y";
    local_18 = "van_wheel_rl_x";
    local_18 = "van_wheel_rl_y";
    local_18 = "van_wheel_rr_x";
    local_18 = "van_wheel_rr_y";
    local_18 = "vgui::HFont";
    local_18 = "vip_progress_icon_tall";
    local_18 = "vip_progress_icon_wide";
    local_18 = "vip_progress_tall";
    local_18 = "vip_progress_wide";
    local_18 = "vip_progress_xpos";
    local_18 = "vip_progress_ypos";
    local_18 = "voice_icon_tall";
    local_18 = "voice_icon_wide";
    local_18 = "voice_icon_xpos";
    local_18 = "voice_icon_ypos";
    local_18 = "wheel_flat_color";
    local_18 = (**(code **)(*DAT_107c0a04 + 0x150))("dev/glow_blackmask","Other textures",1,0);
    local_18 = (byte *)"FCVAR_NEVER_AS_STRING";
    local_18 = CreateFontA((int)&DAT_fffffff4,0,0,0,400,0,0,0,0,4,0,4,0,"Arial");
    local_18 = FUN_1042f270(param_1,(uint *)"wideatopen",0);
    local_18c = "";
    local_1c = "Alpha";
    local_1c = "Ammo2Color";
    local_1c = "BGImage";
    local_1c = "BGImageMis";
    local_1c = "BGImageTDM";
    local_1c = "BaseBackgroundColor";
    local_1c = "Blur";
    local_1c = "BoxColor";
    local_1c = "BoxGap";
    local_1c = "ButtonBottomOffset";
    local_1c = "ButtonGap";
    local_1c = "ButtonHeight";
    local_1c = "ButtonRightOffset";
    local_1c = "ButtonWidth";
    local_1c = "CAMAngX";
    local_1c = "CAMAngY";
    local_1c = "CAMAngZ";
    local_1c = "CAMFov";
    local_1c = "CAMPosX";
    local_1c = "CAMPosY";
    local_1c = "CAMPosZ";
    local_1c = "CheckBG";
    local_1c = "CheckImage";
    local_1c = "CheckImageOOF";
    local_1c = "CloseButtonTexture";
    local_1c = "CornerColor";
    local_1c = "CustomizeFont";
    local_1c = "Default";
    local_1c = "Direction";
    local_1c = "DrawBoxBackground";
    local_1c = "EmptyBoxColor";
    local_1c = "FriendlyColor";
    local_1c = "Health_Critical_Color";
    local_1c = "Health_High_Color";
    local_1c = "Health_Low_Color";
    local_1c = "IconColor";
    local_1c = "InboundColor";
    local_1c = "ItemFont";
    local_1c = "ItemFontPulsing";
    local_1c = "LargeBoxTall";
    local_1c = "LargeBoxWide";
    local_1c = "LineHeight";
    local_1c = "LineSpacing";
    local_1c = "LocalBackgroundColor";
    local_1c = "MaxDeathNotices";
    local_1c = "MaxDeathNotices_Spec";
    local_1c = "MaxHitOutputs";
    local_1c = "Medikit_Juice_Color";
    local_1c = "MenuBoxColor";
    local_1c = "MenuColor";
    local_1c = "MenuItemColor";
    local_1c = "ModelAngX";
    local_1c = "ModelAngY";
    local_1c = "ModelAngZ";
    local_1c = "NumberColor";
    local_1c = "NumberFont";
    local_1c = "NumberGlowFont";
    local_1c = "OpenCloseTime";
    local_1c = "OutboundColor";
    local_1c = "PaintBackgroundType";
    local_1c = "RightJustify";
    local_1c = "ScrollSpeed";
    local_1c = "SelectedBoxClor";
    local_1c = "SelectionAlpha";
    local_1c = "SelectionGrowTime";
    local_1c = "SelectionNumberXPos";
    local_1c = "SelectionNumberYPos";
    local_1c = "SmallBoxSize";
    local_1c = "SmallNumberFont";
    local_1c = "SmallNumberGlowFont";
    local_1c = "TeamBlue";
    local_1c = "TeamRed";
    local_1c = "TextColor";
    local_1c = "TextFont";
    local_1c = "TextScan";
    local_1c = "TextScane";
    local_1c = "TextYPos";
    local_1c = "Texture1";
    local_1c = "Texture2";
    local_1c = "Texture3";
    local_1c = "Texture4";
    local_1c = "WrapStaticLocators";
    local_1c = "_font";
    local_1c = "alpha";
    local_1c = "autocolor_blue";
    local_1c = "autocolor_custom";
    local_1c = "autocolor_green";
    local_1c = "autocolor_red";
    local_1c = "autocolor_yellow";
    local_1c = "autohide_buttons";
    local_1c = "autohide_self";
    local_1c = "avatar_tall";
    local_1c = "avatar_wide";
    local_1c = "avatar_width";
    local_1c = "avatar_xpos";
    local_1c = "avatar_ypos";
    local_1c = "background_image";
    local_1c = "bg_image";
    local_1c = "bottompadding";
    local_1c = "box_bg_color";
    local_1c = "box_fg_color";
    local_1c = "box_inset";
    local_1c = "box_size";
    local_1c = "buffer_between_visible";
    local_1c = "callout_inparents_x";
    local_1c = "callout_inparents_y";
    local_1c = "car_seat_size";
    local_1c = "car_tall";
    local_1c = "car_wheel_fl_x";
    local_1c = "car_wheel_fl_y";
    local_1c = "car_wheel_fr_x";
    local_1c = "car_wheel_fr_y";
    local_1c = "car_wheel_rl_x";
    local_1c = "car_wheel_rl_y";
    local_1c = "car_wheel_rr_x";
    local_1c = "car_wheel_rr_y";
    local_1c = "car_wheel_tall";
    local_1c = "car_wheel_wide";
    local_1c = "car_wide";
    local_1c = "car_x";
    local_1c = "car_y";
    local_1c = "cl_soundscape_flush";
    local_1c = "class_width";
    local_1c = "colon_spacing";
    local_1c = "colon_tall";
    local_1c = "colon_wide";
    local_1c = "color_mouseover";
    local_1c = "color_outline";
    local_1c = "color_selected_ct";
    local_1c = "color_selected_ter";
    local_1c = "color_unselected";
    local_1c = "count0_tall";
    local_1c = "count0_wide";
    local_1c = "count0_xpos";
    local_1c = "count0_ypos";
    local_1c = "count1_tall";
    local_1c = "count1_wide";
    local_1c = "count1_xpos";
    local_1c = "count1_ypos";
    local_1c = "count2_tall";
    local_1c = "count2_wide";
    local_1c = "count2_xpos";
    local_1c = "count2_ypos";
    local_1c = "critical_color";
    local_1c = "croppedimage";
    local_1c = "dead_tall";
    local_1c = "dead_wide";
    local_1c = "dead_xpos";
    local_1c = "dead_ypos";
    local_1c = "death_width";
    local_1c = "digit2_xpos";
    local_1c = "digit2_ypos";
    local_1c = "digit_spacing";
    local_1c = "digit_tall";
    local_1c = "digit_wide";
    local_1c = "digit_xpos";
    local_1c = "digit_ypos";
    local_1c = "disable_manipulation";
    local_1c = "dog_health_tall";
    local_1c = "dog_health_wide";
    local_1c = "dog_health_xpos";
    local_1c = "dog_health_ypos";
    local_1c = "dog_state_tall";
    local_1c = "dog_state_wide";
    local_1c = "dog_state_xpos";
    local_1c = "dog_state_ypos";
    local_1c = "draw_tiled";
    local_1c = "element_gap";
    local_1c = "element_tall";
    local_1c = "element_wide";
    local_1c = "end_tall";
    local_1c = "end_wide";
    local_1c = "end_x";
    local_1c = "end_y";
    local_1c = "fade_in_time";
    local_1c = "fade_out_time";
    local_1c = "fg_image";
    local_1c = "flashing_color";
    local_1c = "font";
    local_1c = "force_close";
    local_1c = "header_tall";
    local_1c = "header_title_x";
    local_1c = "header_y";
    local_1c = "health_tall";
    local_1c = "health_vertical";
    local_1c = "health_wide";
    local_1c = "health_xpos";
    local_1c = "health_ypos";
    local_1c = "heli_seat_spacing";
    local_1c = "heli_seat_x";
    local_1c = "heli_seat_y";
    local_1c = "heli_tall";
    local_1c = "heli_wide";
    local_1c = "heli_x";
    local_1c = "heli_y";
    local_1c = "hostage_icon_size";
    local_1c = "hostage_icon_xpos";
    local_1c = "hostage_icon_ypos";
    local_1c = "hostage_leftarrow_xpos";
    local_1c = "hostage_leftarrow_ypos";
    local_1c = "hostage_rightarrow_xpos";
    local_1c = "hostage_rightarrow_ypos";
    local_1c = "iconColor";
    local_1c = "icon_image";
    local_1c = "icon_image_inverse";
    local_1c = "icon_image_local";
    local_1c = "icon_size";
    local_1c = "icon_tall";
    local_1c = "icon_texture";
    local_1c = "icon_wide";
    local_1c = "icon_xpos";
    local_1c = "icon_ypos";
    local_1c = "intro_alpha";
    local_1c = "issue_width";
    local_1c = "item_spacing";
    local_1c = "item_tall";
    local_1c = "item_wide";
    local_1c = "list_number";
    local_1c = "local_seat_color";
    local_1c = "m_hFontUnderline";
    local_1c = "medikit_tall";
    local_1c = "medikit_wide";
    local_1c = "medikit_xpos";
    local_1c = "medikit_ypos";
    local_1c = "name_width";
    local_1c = "no_texture";
    local_1c = "normal_color";
    local_1c = "obj_tall";
    local_1c = "obj_visible";
    local_1c = "obj_wide";
    local_1c = "obj_xpos";
    local_1c = "obj_ypos";
    local_1c = "other_seat_color";
    local_1c = "overlap_offset_x";
    local_1c = "overlap_offset_y";
    local_1c = "parameter_width";
    local_1c = "ping_width";
    local_1c = "req_txpos";
    local_1c = "req_typos";
    local_1c = "req_visible";
    local_1c = "score_width";
    local_1c = "selection_color";
    local_1c = "sheetinset_bottom";
    local_1c = "show_avatar";
    local_1c = "show_columns";
    local_1c = "show_dead_icon";
    local_1c = "show_friend";
    local_1c = "show_voice_icon";
    local_1c = "spacer";
    local_1c = "squad";
    local_1c = "stage_tall";
    local_1c = "stage_visible";
    local_1c = "stage_wide";
    local_1c = "stage_xpos";
    local_1c = "stage_ypos";
    local_1c = "stamina_alpha";
    local_1c = "start_framed";
    local_1c = "start_tall";
    local_1c = "start_wide";
    local_1c = "start_x";
    local_1c = "start_y";
    local_1c = "suv_wheel_fl_x";
    local_1c = "suv_wheel_fl_y";
    local_1c = "suv_wheel_fr_x";
    local_1c = "suv_wheel_fr_y";
    local_1c = "suv_wheel_rl_x";
    local_1c = "suv_wheel_rl_y";
    local_1c = "suv_wheel_rr_x";
    local_1c = "suv_wheel_rr_y";
    local_1c = "tabheight";
    local_1c = "tabheight_small";
    local_1c = "tabxdelta";
    local_1c = "tabxfittotext";
    local_1c = "tabxindent";
    local_1c = "tabxlimitwidth";
    local_1c = "team";
    local_1c = "team_tall";
    local_1c = "team_visible";
    local_1c = "team_wide";
    local_1c = "team_xpos";
    local_1c = "team_ypos";
    local_1c = "text_xpos";
    local_1c = "text_ypos";
    local_1c = "textinsetleft";
    local_1c = "titletextinsetX";
    local_1c = "titletextinsetY";
    local_1c = "useparentbg";
    local_1c = "van_wheel_fl_x";
    local_1c = "van_wheel_fl_y";
    local_1c = "van_wheel_fr_x";
    local_1c = "van_wheel_fr_y";
    local_1c = "van_wheel_rl_x";
    local_1c = "van_wheel_rl_y";
    local_1c = "van_wheel_rr_x";
    local_1c = "van_wheel_rr_y";
    local_1c = "vip_progress_icon_tall";
    local_1c = "vip_progress_icon_wide";
    local_1c = "vip_progress_tall";
    local_1c = "vip_progress_wide";
    local_1c = "vip_progress_xpos";
    local_1c = "vip_progress_ypos";
    local_1c = "wheel_flat_color";
    local_1c = "x_inset";
    local_1c = "y_inset";
    local_1c = "yes_texture";
    local_1c = (**(code **)(*piVar5 + 0x4c))("VideoMaterial",local_154,&DAT_10323b20,0);
    local_1c = (char *)(**(code **)(*piVar3 + 4))("HybridButton.Font");
    local_1c = (float)FUN_1014fb90(this,(int *)"effects/splash2");
    local_1c = (int *)(**(code **)(*piVar7 + 0xbc))("$orientation",param_4);
    local_1c = (undefined4 *)(**(code **)(*piVar3 + 4))("TIButtonDefault.Enabled");
    local_1c0 = "PERF/ms";
    local_20 = "Font";
    local_20 = "UnderlineFont";
    local_20 = (char *)(**(code **)(*piVar3 + 4))("TIButtonDefault.NoImages");
    local_238 = "tacint";
    local_24 = "#PORTAL2_ButtonAction_Reset";
    local_24 = (int *)(**(code **)(*DAT_106cb7f4 + 0x170))("debugempty",&DAT_103236cf,0,0);
    local_24 = (int *)(**(code **)(*DAT_106cb7f8 + 0x14c))("__background",puVar5);
    local_24 = (undefined4 *)(**(code **)(*piVar3 + 4))("TIButtonDefault.Over");
    local_24[0] = "dod";
    local_24[1] = "cstrike";
    local_24[2] = "lostcoast";
    local_28 = "Total";
    local_28 = "acos";
    local_28 = "asin";
    local_28 = "atan";
    local_28 = "ceil";
    local_28 = "cos";
    local_28 = "exp";
    local_28 = "floor";
    local_28 = "log";
    local_28 = "log10";
    local_28 = "modf";
    local_28 = "pow";
    local_28 = "sin";
    local_28 = "sqrt";
    local_28 = "tan";
    local_28 = (**(code **)(*DAT_106cb7f8 + 0x14c))("__title",puVar5);
    local_28 = (undefined4 *)(**(code **)(*piVar3 + 4))("TIButtonDefault.Disabled");
    local_28 = GetProcAddress(local_1c,"MiniDumpWriteDump");
    local_2c = "FCVAR_NEVER_AS_STRING";
    local_2c = "Parent";
    local_2c = "template-parameter-";
    local_2c = (char *)(**(code **)(*piVar3 + 4))("TIButtonDefault.ShowText");
    local_2c = (int *)(**(code **)(*DAT_106cb7f8 + 0x14c))("__loading",puVar5);
    local_2c = FUN_1014fb90(local_c,(int *)"effects/fleck_magazine4");
    local_30 = "#L4D360UI_PasswordEntry_Prompt";
    local_30 = "#Portal2UI_pvp_QuickMatch_Confirm";
    local_30 = "#VideoOptions_Antialiasing_Info";
    local_30 = "#VideoOptions_CPUDetail_Info";
    local_30 = "#VideoOptions_CSMQuality_Info";
    local_30 = "#VideoOptions_Filtering_Info";
    local_30 = "#VideoOptions_Model_Detail_Info";
    local_30 = "#VideoOptions_QueuedMode_Info";
    local_30 = "#VideoOptions_ShaderDetail_Info";
    local_30 = "#VideoOptions_TextureDetail_Info";
    local_30 = "#VideoOptions_WaitForVSync_Info";
    local_30 = FUN_1014fb90(local_c,(int *)"effects/fleck_magazine3");
    local_34 = "#GameUI_CSMQuality";
    local_34 = "#GameUI_Filtering_Mode";
    local_34 = "#GameUI_Shader_Detail";
    local_34 = "#GameUI_Wait_For_VSync";
    local_34 = "#L4D360UI_Controller_Default_Details";
    local_34 = "#L4D360UI_PasswordEntry_Title";
    local_34 = "#Portal2UI_PlayOnline";
    local_34 = "#VideoOptions_Antialiasing";
    local_34 = "#VideoOptions_CPU_Detail";
    local_34 = "#VideoOptions_Model_Detail";
    local_34 = "#VideoOptions_Queued_Mode";
    local_34 = "#VideoOptions_TextureDetail";
    local_34 = "delta";
    local_34 = "oldtall";
    local_34 = FUN_1014fb90(local_c,(int *)"effects/fleck_magazine2");
    local_38 = "#L4D360UI_Controller_Default";
    local_38 = (char *)(**(code **)(*piVar3 + 4))("TIButtonDefault.AllCaps");
    local_38 = FUN_1014fb90(local_c,(int *)"effects/fleck_magazine1");
    local_3c = "#L4D360UI_Commentary_Explanation";
    local_3c = "VPanel";
    local_3c = "binding";
    local_3c = "button";
    local_3c = "column";
    local_3c = "command";
    local_3c = "delta";
    local_3c = "direction";
    local_3c = "fullpath";
    local_3c = "handle";
    local_3c = "index";
    local_3c = "itemID";
    local_3c = "oldwide";
    local_3c = "pPanelName";
    local_3c = "panel";
    local_3c = "panelName";
    local_3c = "panelPtr";
    local_3c = "position";
    local_3c = "progress";
    local_3c = "state";
    local_3c = "string";
    local_3c = "tabposition";
    local_3c = (undefined4 *)(**(code **)(*piVar3 + 4))("TIButtonDefault.Click");
    local_40 = "#GAMEUI_CommentaryDialogTitle";
    local_44[0] = (**(code **)(*DAT_10730cd8 + 0xc))("models/props_rocks/small-1.mdl");
    local_44[1] = (**(code **)(*DAT_10730cd8 + 0xc))("models/props_rocks/small-2.mdl");
    local_44[2] = (**(code **)(*DAT_10730cd8 + 0xc))("models/props_rocks/small-3.mdl");
    local_48[0] = (uint *)FUN_1014fb90(local_c,(int *)"effects/fleck_magazine1");
    local_48[0] = (uint *)FUN_1014fb90(local_c,(int *)"effects/fleck_paper1");
    local_48[1] = (uint *)FUN_1014fb90(local_c,(int *)"effects/fleck_magazine2");
    local_48[1] = (uint *)FUN_1014fb90(local_c,(int *)"effects/fleck_paper2");
    local_48[2] = (uint *)FUN_1014fb90(local_c,(int *)"effects/fleck_magazine3");
    local_48[2] = (uint *)FUN_1014fb90(local_c,(int *)"effects/fleck_paper3");
    local_48[3] = (uint *)FUN_1014fb90(local_c,(int *)"effects/fleck_magazine4");
    local_48[3] = (uint *)FUN_1014fb90(local_c,(int *)"effects/fleck_paper4");
    local_4c = (**(code **)(*DAT_107c0a04 + 0x150))("effects/splash3",0,0,0);
    local_5 = (**(code **)(DAT_10730ce4[1] + 0x5c))(local_14c,"PROFILE",&local_48,0);
    local_50 = "ai_drop_hint";
    local_50[0] = (float)(**(code **)(*DAT_10730cd8 + 0xc))("models/props_rocks/small-1.mdl");
    local_50[1] = (float)(**(code **)(*DAT_10730cd8 + 0xc))("models/props_rocks/small-2.mdl");
    local_50[2] = (float)(**(code **)(*DAT_10730cd8 + 0xc))("models/props_rocks/small-3.mdl");
    local_54 = "SendTable_WritePropList->inputBuffer";
    local_60[0] = "AcceptFriend";
    local_60[0] = "Activate";
    local_60[0] = "ActivateItem";
    local_60[0] = "AddFriend";
    local_60[0] = "ApplyButtonEnable";
    local_60[0] = "ApplyChanges";
    local_60[0] = "ApplyDataToControls";
    local_60[0] = "ArmItem";
    local_60[0] = "CancelMakeFileWriteable";
    local_60[0] = "CancelOverwriteFile";
    local_60[0] = "ChatUser";
    local_60[0] = "CheckButtonChecked";
    local_60[0] = "ChildResized";
    local_60[0] = "ClickPanel";
    local_60[0] = "Close";
    local_60[0] = "CloseCompletionList";
    local_60[0] = "CloseFrameButtonPressed";
    local_60[0] = "CloseModal";
    local_60[0] = "CloseTabPage";
    local_60[0] = "ClosedByHittingTilde";
    local_60[0] = "ColumnResized";
    local_60[0] = "CommandSubmitted";
    local_60[0] = "CompletionCommand";
    local_60[0] = "ControlModified";
    local_60[0] = "CreateDirectory";
    local_60[0] = "CreateNewControl";
    local_60[0] = "CurrentDefaultButtonSet";
    local_60[0] = "CursorEnteredMenuButton";
    local_60[0] = "CursorEnteredMenuItem";
    local_60[0] = "CursorExitedMenuItem";
    local_60[0] = "DefaultButtonSet";
    local_60[0] = "DeletePanel";
    local_60[0] = "DenyFriend";
    local_60[0] = "DialogVariables";
    local_60[0] = "DirectorySelected";
    local_60[0] = "DisarmItem";
    local_60[0] = "DoCompositionString";
    local_60[0] = "DoConversionModeChanged";
    local_60[0] = "DoCopySelected";
    local_60[0] = "DoCutSelected";
    local_60[0] = "DoHideIMECandidates";
    local_60[0] = "DoLanguageChanged";
    local_60[0] = "DoOpenVmtSelected";
    local_60[0] = "DoPaste";
    local_60[0] = "DoSentenceModeChanged";
    local_60[0] = "DoShowIMECandidates";
    local_60[0] = "DoUpdateIMECandidates";
    local_60[0] = "EnableSaveButton";
    local_60[0] = "Expanded";
    local_60[0] = "FileSelected";
    local_60[0] = "FileSelectionCancelled";
    local_60[0] = "FindDefaultButton";
    local_60[0] = "FlashWindow";
    local_60[0] = "GM_Kick";
    local_60[0] = "GM_Mute";
    local_60[0] = "GM_Slap";
    local_60[0] = "GM_Slay";
    local_60[0] = "GM_Strip";
    local_60[0] = "GameUIHidden";
    local_60[0] = "Hotkey";
    local_60[0] = "InputCanceled";
    local_60[0] = "InputCompleted";
    local_60[0] = "ItemDoubleLeftClick";
    local_60[0] = "ItemLeftClick";
    local_60[0] = "ItemSelected";
    local_60[0] = "KeyModeSet";
    local_60[0] = "KillFocus";
    local_60[0] = "LabelChanged";
    local_60[0] = "LaunchOperation";
    local_60[0] = "ListItemSelected";
    local_60[0] = "LoadoutSelected";
    local_60[0] = "MakeFileWriteable";
    local_60[0] = "MenuClose";
    local_60[0] = "MenuItemSelected";
    local_60[0] = "MigrateHostToClient";
    local_60[0] = "Minimize";
    local_60[0] = "MoveScrollBar";
    local_60[0] = "MoveScrollBarDirect";
    local_60[0] = "MsgLeaveGameConfirm";
    local_60[0] = "MsgOpenCoopMode";
    local_60[0] = "MsgOpenSinglePlayer";
    local_60[0] = "MsgWaitingForExit";
    local_60[0] = "MsgWaitingForOpen";
    local_60[0] = "OnCancelSaveDocument";
    local_60[0] = "OnChangeChild";
    local_60[0] = "OnChooseVMFFolder";
    local_60[0] = "OnFolderUp";
    local_60[0] = "OnHybridButtonNavigatedTo";
    local_60[0] = "OnItemAdded";
    local_60[0] = "OnItemRemoved";
    local_60[0] = "OnItemSelected";
    local_60[0] = "OnMarkNotDirty";
    local_60[0] = "OnMatchStringSelected";
    local_60[0] = "OnMovedPopupToFront";
    local_60[0] = "OnNavigateTo";
    local_60[0] = "OnNewFolder";
    local_60[0] = "OnOpen";
    local_60[0] = "OnSaveFile";
    local_60[0] = "OnScreenSizeChanged";
    local_60[0] = "OnSiblingHybridButtonOpened";
    local_60[0] = "OpPanelClose";
    local_60[0] = "OpenColumnChoiceMenu";
    local_60[0] = "OpenContextMenu";
    local_60[0] = "OpenInExplorer";
    local_60[0] = "OpenMainMenuJoinFailed";
    local_60[0] = "OverwriteFile";
    local_60[0] = "PageHide";
    local_60[0] = "PageShow";
    local_60[0] = "PageTabActivated";
    local_60[0] = "PanelMoved";
    local_60[0] = "PanelSelected";
    local_60[0] = "Paste";
    local_60[0] = "PerforceQueryCompleted";
    local_60[0] = "PollHideCode";
    local_60[0] = "PopulateDriveList";
    local_60[0] = "PopulateFileList";
    local_60[0] = "PopulateFileNameSearchHistory";
    local_60[0] = "PressButton";
    local_60[0] = "RadioButtonChecked";
    local_60[0] = "ReloadLocalization";
    local_60[0] = "RemoveFriend";
    local_60[0] = "RequestKeyBindingEdit";
    local_60[0] = "ResetData";
    local_60[0] = "ResizeColumnToContents";
    local_60[0] = "ScrollBarSliderMoved";
    local_60[0] = "ScrollBarSliderReleased";
    local_60[0] = "SelectFolder";
    local_60[0] = "SetActiveControl";
    local_60[0] = "SetAsCurrentDefaultButton";
    local_60[0] = "SetAsDefaultButton";
    local_60[0] = "SetClipboardText";
    local_60[0] = "SetProgress";
    local_60[0] = "SetSortColumn";
    local_60[0] = "SetState";
    local_60[0] = "SetText";
    local_60[0] = "SetTitle";
    local_60[0] = "SetupSlot";
    local_60[0] = "ShowNewControlMenu";
    local_60[0] = "ShutdownRequest";
    local_60[0] = "SliderMoved";
    local_60[0] = "SquadButtonIn";
    local_60[0] = "SquadButtonOut";
    local_60[0] = "SquadSelected";
    local_60[0] = "StoreUndo";
    local_60[0] = "TabPressed";
    local_60[0] = "TextChanged";
    local_60[0] = "TextKillFocus";
    local_60[0] = "TextNewLine";
    local_60[0] = "ToggleAttributes";
    local_60[0] = "ToggleColumnVisible";
    local_60[0] = "TreeViewItemSelected";
    local_60[0] = "UpdateControlData";
    local_60[0] = "ViewProfile";
    local_60[0] = "lobbystate";
    local_64 = "Physics.WaterSplash";
    local_64[0] = "FirstStage";
    local_64[1] = "SecondStage";
    local_64[2] = "ThirdStage";
    local_6c = "sprites/nav_waypoint.vmt";
    local_74 = "sprites/nav_beam.vmt";
    local_74 = "sprites/physbeam.vmt";
    local_8 = "";
    local_8 = "Default";
    local_8 = "Make Key";
    local_8 = "Make Target";
    local_8 = "Use";
    local_8 = "empty";
    local_8 = (byte *)"DefaultButton";
    local_8 = (byte *)(**(code **)(*piVar3 + 4))("HybridButton.SymbolFont");
    local_8 = (byte *)FUN_1042f3d0(param_1,(uint *)"EnableCondition",(uint)&DAT_104eefb3);
    local_8 = (int *)(**(code **)(piVar2[1] + 0x84))("muzzle");
    local_8 = FUN_0041eb80(pvVar2,"attributes");
    local_8 = FUN_10267d30(this,"OnNavigateTo",(uint *)"panelName",pcVar1);
    local_8 = FUN_10267f50(this,"CursorEnteredMenuButton");
    local_8 = FUN_102687d0(param_1,(uint *)"PinnedCornerOffsetY",local_8);
    local_8 = FUN_1039d150(this,"OnNavigateTo",(uint *)"panelName",pcVar1);
    local_8 = FUN_1039d370(pvVar1,"ResourceFile");
    local_8 = FUN_1039d370(pvVar2,"Vehicle");
    local_8 = FUN_1039d370(pvVar6,"Nav Selected Set");
    local_8 = FUN_1039d370(this,"CursorEnteredMenuButton");
    local_8 = FUN_1039d370(this,"WeaponDatafile");
    local_8 = FUN_1039d9a0(param_1,(uint *)"PinnedCornerOffsetY",local_8);
    local_8 = FUN_1042e810(this,"OnNavigateTo",(uint *)"panelName",pcVar1);
    local_8 = FUN_1042ea30(pvVar1,"ResourceFile");
    local_8 = FUN_1042ea30(pvVar2,"instructor_lessons");
    local_8 = FUN_1042ea30(pvVar3,"scripts/soundscapes_manifest.txt");
    local_8 = FUN_1042ea30(this,"CursorEnteredMenuButton");
    local_8 = FUN_1042ea30(this,"WeaponDatafile");
    local_8 = FUN_1042f270(param_1,(uint *)"PinnedCornerOffsetY",local_8);
    local_8c = "sprites/lgtning.vmt";
    local_8c = FUN_1042f3d0(pvVar6,(uint *)"disconnecthdlr",0);
    local_9 = (**(code **)(*param_1 + 0x18))("autoteam",0);
    local_c = "Console";
    local_c = (**(code **)(DAT_10681754[1] + 0x24))("undelete.lst",&DAT_10323770,0);
    local_c = (int *)(**(code **)(*DAT_10730d00 + 0x18))("spec_target_updated",0,0);
    local_c = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_SmallFB0","RenderTargets",1,0);
    local_c = (int *)FUN_10444d70(piVar5,(byte *)"RankEXP",1);
    local_c = (int *)FUN_10444d70(piVar5,(byte *)"RankImage",1);
    local_c = (int *)FUN_10444d70(piVar5,(byte *)"Ranklabel",1);
    local_c = (short *)(**(code **)(*DAT_107c09f0 + 0x2c))("#Score_InTheLead");
    local_c = (short *)(**(code **)(*DAT_107c09f0 + 0x2c))("#TI_KillStreakAward_M320");
    local_c = (short *)(**(code **)(*DAT_107c09f0 + 0x2c))("#TI_KillStreakAward_MG4");
    local_c = (short *)(**(code **)(*DAT_107c09f0 + 0x2c))("#TI_KillStreakAward_RPG7");
    local_c = FUN_100ed440(uVar3,"Decal textures",'\x01');
    local_c = FUN_10267d30(this,"OnNavigateFrom",(uint *)"panelName",pcVar7);
    local_c = FUN_1039d150(this,"OnNavigateFrom",(uint *)"panelName",pcVar7);
    local_c = FUN_1039d370(pvVar1,"VoiceCommands");
    local_c = FUN_1039d370(pvVar3,"scripts/soundscapes_manifest.txt");
    local_c = FUN_1039d370(this,"ScoreValues");
    local_c = FUN_1039d370(this_00,"Vehicle");
    local_c = FUN_1042e810(this,"OnNavigateFrom",(uint *)"panelName",pcVar7);
    local_c = FUN_1042ea30(pvVar1,"VoiceCommands");
    local_c = FUN_1042ea30(pvVar2,"scripts/hudanimations_manifest.txt");
    local_c = FUN_1042ea30(pvVar3,"Vehicle");
    local_c = FUN_1042ee30(puVar12,(uint *)"PnlBackground/tall",0);
    local_d8[0] = "Alpha";
    local_d8[1] = "Bravo";
    local_d8[2] = "Charlie";
    local_d8[3] = "Delta";
    local_f8 = "-WarningsAsErrors";
    local_f8 = "TOTAL";
    local_f8[0] = "Plan1";
    local_f8[1] = "Plan2";
    local_f8[2] = "Plan3";
    local_f8[3] = "Plan4";
    local_fc = "-UseStandardError";
    local_fc = "terroriststart";
    lpProcName = "CreateFile2";
    lpProcName = "IsWow64Process";
    operator_((char *)param_1,(DName *)"void ");
    pDVar2 = (DName *)DName::DName((DName *)local_14," throw(");
    pDVar2 = (DName *)DName::DName(local_1c," throw(");
    pDVar4 = (DName *)DName::DName((DName *)local_60,"[thunk]:");
    pDVar4 = (DName *)DName::DName((DName *)local_60,"extern \"C\" ");
    pDVar4 = (DName *)DName::DName((DName *)local_60,"virtual ");
    pDVar5 = (DName *)DName::DName((DName *)&local_24,"::");
    pFVar1 = GetProcAddress(hModule,"EventRegister");
    pFVar1 = GetProcAddress(hModule,"EventUnregister");
    pFVar1 = GetProcAddress(hModule,"EventWrite");
    pFVar1 = GetProcAddress(hModule,"GetConsoleWindow");
    pFVar1 = GetProcAddress(hModule,"VerSetConditionMask");
    pFVar2 = GetProcAddress(hModule,"DirectSoundCaptureCreate");
    pFVar2 = GetProcAddress(local_8,"CorExitProcess");
    pFVar4 = GetProcAddress(hModule,"GetActiveWindow");
    pFVar4 = GetProcAddress(hModule,"GetLastActivePopup");
    pFVar4 = GetProcAddress(hModule,"GetUserObjectInformationW");
    pHVar2 = (HMODULE)GetProcAddress(*param_1,"MiniDumpUnlock");
    pHVar2 = (HMODULE)GetProcAddress(pHVar2,"BGetMiniDumpLock");
    pHVar4 = FUN_10433650((undefined (*) [16])"bin/g15.dll");
    param_1 = "";
    param_1 = "TIButtonDefault";
    param_1 = "Usage:  maps <substring>\nmaps * for full listing\n";
    param_1 = "empty";
    param_1 = "glass";
    param_1 = "models/tiny_object.mdl";
    param_1 = (**(code **)(*piVar3 + 0xc))("Default",0);
    param_1 = (**(code **)(*this + 0x640))(param_2,"ladder");
    param_1 = (byte *)FUN_10265f50(param_1,(byte *)"demorestart");
    param_1 = (char *)Warning("Master was null or not a master!\n");
    param_1 = (int *)(**(code **)(*piVar1 + 4))("FrameSystemButton.Icon");
    param_1 = (undefined *)Warning("The head tracker requires the filesystem to run!\n");
    param_1 = FUN_10267e50(this_00,"KeyCodePressed",(uint *)&DAT_103c8ea4,(uint)param_1);
    param_1 = FUN_10267f50(param_1,"VideoConfig");
    param_1 = FUN_102a99e0(pvVar2,(int)this,"LookInLabel","#FileOpenDialog_Look_in",1);
    param_1 = FUN_1039d270(this_00,"KeyCodePressed",(uint *)&DAT_105366dc,(uint)param_1);
    param_1 = FUN_1042e930(this_00,"KeyCodePressed",(uint *)&DAT_10539390,(uint)param_1);
    param_1 = FUN_10454240(pvVar2,(int)this,"LookInLabel","#FileOpenDialog_Look_in",1);
    param_1->pclmap = "";
    param_1->pcumap = "";
    param_1[0x1abe9] = "bad compressed size";
    param_1[0x1abe9] = "invalid length";
    param_1[0x1abe9] = "not enough codes";
    param_1[0x1abe9] = "output buffer too small for in-memory compression";
    param_1[0x1abe9] = "too many codes";
    param_1[0x2d] = (int)"models/props_containers/military_case-1.mdl";
    param_1[0x2d] = (int)"models/vehicles/cars/truck-2_npc.mdl";
    param_1[0x2d] = (int)"models/vehicles/cars/truck-4_npc.mdl";
    param_1[6] = (int)"buffer error";
    param_1[6] = (int)"stream error";
    param_2 = "<untitled>";
    param_2 = ConDMsg("No challenge from %s.\n",pcVar4);
    param_3 = FUN_10223af0(pvVar5,(int)this,"ProfileTree",1);
    param_4 = "";
    param_4 = FUN_1042ea30(pvVar3,"Settings");
    param_5 = "";
    param_5 = "bad exception";
    param_5 = FUN_103145a0(pvVar5,(int)this,"ButtonViewProfile","#TI_PLR_Context_Profile",0,
    param_6 = "";
    param_6 = "-no model-";
    param_7 = "";
    param_8 = "";
    pauVar1 = FUN_102f0a20(extraout_ECX,extraout_EDX,param_1,(undefined (*) [16])"disconnect");
    pauVar3 = (undefined (*) [16])"FCVAR_NEVER_AS_STRING";
    pauVar3 = (undefined (*) [16])"console.log";
    pbVar1 = (byte *)(**(code **)(*DAT_10730cc4 + 0x58))("save_replay");
    pbVar1 = (byte *)FUN_10268930(*param_2,(uint *)"filename",(uint)&DAT_103236cf);
    pbVar1 = (byte *)FUN_10268930(param_1,(uint *)"group",(uint)&DAT_103236cf);
    pbVar1 = (byte *)FUN_10268930(this,(uint *)"drive",(uint)&DAT_103236cf);
    pbVar1 = (byte *)FUN_1042f3d0(pvVar6,(uint *)"reason",(uint)&DAT_104eefb3);
    pbVar2 = (byte *)"FCVAR_NEVER_AS_STRING";
    pbVar2 = (byte *)FUN_10268930(*param_3,(uint *)"filename",(uint)&DAT_103236cf);
    pbVar2 = (byte *)FUN_10268930(param_1,(uint *)"Format",(uint)&DAT_103236cf);
    pbVar2 = (byte *)FUN_10268930(param_2,(uint *)"group",(uint)&DAT_103236cf);
    pbVar3 = (byte *)(**(code **)(*param_1 + 0x28))("npcname",&DAT_104eefb3);
    pbVar3 = (byte *)FUN_10268930(*(void **)(param_1 + 0x168),(uint *)"networkid_force",0);
    pbVar3 = (byte *)FUN_1042f3d0(pvVar2,(uint *)"Issue",(uint)&DAT_104eefb3);
    pbVar3 = (byte *)FUN_1042f3d0(pvVar6,(uint *)"Binding",(uint)&DAT_104eefb3);
    pbVar3 = (byte *)FUN_1042f3d0(this_00,(uint *)"Binding",(uint)&DAT_104eefb3);
    pbVar3 = FUN_101f6800((byte *)"vehicle_exit%d");
    pbVar4 = (byte *)"FCVAR_NEVER_AS_STRING";
    pbVar4 = (byte *)FUN_1042f3d0(pvVar3,(uint *)"Issue",(uint)&DAT_104eefb3);
    pbVar5 = (byte *)(**(code **)(*param_1 + 0x28))("newname",&DAT_104eefb3,"TacticalTV");
    pbVar5 = (byte *)(**(code **)(*param_1 + 0x28))(&DAT_104f4a20,&DAT_104eefb3,"TacticalTV");
    pbVar5 = (byte *)(**(code **)(*piVar12 + 0x28))(&DAT_104f4a20,&DAT_104eefb3,"TacticalTV");
    pbVar6 = (byte *)FUN_10268930(local_1c,(uint *)"override_if",0);
    pbVar6 = (byte *)FUN_1039db00(puVar4,(uint *)"colour",(uint)&DAT_1043677a);
    pbVar6 = (byte *)FUN_1042f3d0(param_1,(uint *)"Style",0);
    pbVar7 = (byte *)"FCVAR_NEVER_AS_STRING";
    pbVar9 = (byte *)FUN_1042f3d0(param_1,(uint *)"usablePlayerIndex",(uint)&DAT_104eefb3);
    pbVar9 = FUN_101f6800((byte *)"scripts/soundscapes_%s.txt");
    pcStack212 = "CreateInstance called on a point_template that has no templates: %s\n";
    pcStack32 = "no affinity...";
    pcStack32 = "world";
    pcStack48 = "DEFAULT";
    pcVar1 = " (Visible)";
    pcVar1 = "";
    pcVar1 = "#L4D360UI_Enabled";
    pcVar1 = "<<null>>";
    pcVar1 = "<no file>";
    pcVar1 = "ConcreteChunks";
    pcVar1 = "Direct Sound";
    pcVar1 = "ERROR: CPooledVBAllocator_ColorMesh has unfreed allocations!";
    pcVar1 = "FCVAR_NEVER_AS_STRING";
    pcVar1 = "FULL";
    pcVar1 = "GlassChunks";
    pcVar1 = "Impact.Concrete";
    pcVar1 = "MetalChunks";
    pcVar1 = "MetalPanelChunks";
    pcVar1 = "NotificationToastContainer";
    pcVar1 = "Save As";
    pcVar1 = "Unknown exception";
    pcVar1 = "WoodChunks";
    pcVar1 = "absolute";
    pcVar1 = "adduser";
    pcVar1 = "breaching_charge_explode";
    pcVar1 = "c4_charge_explode";
    pcVar1 = "center";
    pcVar1 = "dev/downsample_non_hdr";
    pcVar1 = "east";
    pcVar1 = "enabled";
    pcVar1 = "false";
    pcVar1 = "full update";
    pcVar1 = "grenade_explode";
    pcVar1 = "north";
    pcVar1 = "north-east";
    pcVar1 = "north-west";
    pcVar1 = "removeuser";
    pcVar1 = "south";
    pcVar1 = "south-east";
    pcVar1 = "south-west";
    pcVar1 = "unpaused";
    pcVar1 = "world";
    pcVar1 = (char *)FUN_10268930(*(void **)((int)this + 0x264),(uint *)"command",
    pcVar1 = (char *)FUN_10268930(param_1,(uint *)"filterinfo",(uint)&DAT_103236cf);
    pcVar1 = (char *)FUN_10268930(param_1,(uint *)"fullpath",(uint)&DAT_103236cf);
    pcVar1 = (char *)FUN_10268930(param_1,(uint *)"target",(uint)&DAT_103236cf);
    pcVar1 = (char *)FUN_1039db00(*(void **)((int)this + 0x264),(uint *)"command",
    pcVar1 = (char *)FUN_1039db00(param_1,param_2,(uint)"0 0 0");
    pcVar1 = (char *)FUN_1042f3d0(*(void **)((int)this + 0x260),(uint *)"command",
    pcVar1 = (char *)FUN_1042f3d0(*(void **)((int)this + 0x264),(uint *)"command",
    pcVar1 = (char *)FUN_1042f3d0(param_1,param_2,(uint)"0 0 0");
    pcVar1 = (char *)FUN_1042f3d0(this_00,(uint *)"srcVar1",(uint)&DAT_104eefb3);
    pcVar1 = (char *)Warning("Couldn\'t scan four color values from %s\n",pcVar1);
    pcVar1 = FUN_100d0740((byte *)"bignum_%i");
    pcVar1 = FUN_101f6800((byte *)"%s_weapon");
    pcVar10 = "";
    pcVar10 = "#TILoad_TDM";
    pcVar10 = "#TIMap_FFAWrap";
    pcVar10 = "#TI_vote_failed_quorum";
    pcVar10 = "#TI_vote_failed_yesno";
    pcVar10 = "#TI_vote_vote_failed";
    pcVar10 = "3rd_muzzleflash-V";
    pcVar10 = "3rd_muzzleflash-X";
    pcVar10 = "3rd_muzzleflash-Y";
    pcVar10 = "3rd_muzzleflash-pistol";
    pcVar10 = "3rd_muzzleflash-shotgun";
    pcVar10 = "CRadialMenu";
    pcVar10 = "FrameTitleBar.Font";
    pcVar10 = "FrameTitleBar.SmallFont";
    pcVar10 = "Hit Location: Chest\n";
    pcVar10 = "Hit Location: Gear\n";
    pcVar10 = "Hit Location: Head\n";
    pcVar10 = "Hit Location: Left/Right Arm\n";
    pcVar10 = "Hit Location: Left/Right Leg\n";
    pcVar10 = "Hit Location: Stomach\n";
    pcVar10 = "Hit Location: UNKNOWN\n";
    pcVar10 = "Marlett";
    pcVar10 = "MarlettSmall";
    pcVar10 = "SquadDesc_CT";
    pcVar10 = "backpack.dat";
    pcVar10 = "backpack_tm.dat";
    pcVar10 = "command";
    pcVar10 = "exec modsettings.cfg mod\n";
    pcVar10 = "models/germangibs.mdl";
    pcVar10 = "models/gibs/hgibs.mdl";
    pcVar10 = "private: ";
    pcVar10 = "public: ";
    pcVar10 = "quit\n";
    pcVar10 = "resource/UI/Econ/NotificationToastContainer.res";
    pcVar10 = "resource/UI/Econ/NotificationToastControl.res";
    pcVar10 = "smoke_muzzle_pistol";
    pcVar10 = "true";
    pcVar11 = "";
    pcVar11 = "#GameUI_2Speakers";
    pcVar11 = "#Inv_SlotPrevTitle";
    pcVar11 = "#Inv_Ter";
    pcVar11 = "(%f, %f, %f)";
    pcVar11 = "//mod/%s.HL3";
    pcVar11 = "CHudHealth";
    pcVar11 = "Client_Animation_Threaded";
    pcVar11 = "Couldn\'t load \'%s\'\n";
    pcVar11 = "MenuClose";
    pcVar11 = "MenuOpen";
    pcVar11 = "VoiceSettings";
    pcVar11 = "baseclass";
    pcVar11 = "dev/engine_post";
    pcVar11 = "dev/engine_post_splitscreen";
    pcVar11 = "m_iMaxSlots";
    pcVar11 = "player_crouch";
    pcVar11 = "player_stand";
    pcVar11 = "prop_dynamic";
    pcVar11 = "should_never_see_this";
    pcVar12 = "#HL2_SetupMicrophoneSteam";
    pcVar12 = "Breakable.Ceiling";
    pcVar12 = "Breakable.Computer";
    pcVar12 = "Breakable.Concrete";
    pcVar12 = "Breakable.Crate";
    pcVar12 = "Breakable.Flesh";
    pcVar12 = "Breakable.Glass";
    pcVar12 = "Breakable.Metal";
    pcVar12 = "GenuineIntel";
    pcVar12 = "NPCModels";
    pcVar12 = "\"%s<%i><%s><%s>\" say \"%s\"\n";
    pcVar12 = "\"%s<%i><%s><%s>\" say_team \"%s\"\n";
    pcVar12 = "cmdline,";
    pcVar12 = "enabled";
    pcVar12 = "frame data csv,";
    pcVar12 = "gpu_level,";
    pcVar12 = "in the Chest -->";
    pcVar12 = "in the Family Jewels -->";
    pcVar12 = "in the Head ***";
    pcVar12 = "in the Left Arm -->";
    pcVar12 = "in the Left Leg -->";
    pcVar12 = "in the Right Arm -->";
    pcVar12 = "in the Right Leg -->";
    pcVar12 = "in the Stomach -->";
    pcVar12 = "m_iStartHealth";
    pcVar12 = "motionblur,";
    pcVar12 = "msaa,";
    pcVar12 = (char *)FUN_1039db00(puVar11,(uint *)"EngineStart",(uint)puVar8);
    pcVar12 = (char *)FUN_1039db00(puVar11,(uint *)"EngineStop",(uint)puVar8);
    pcVar12 = (char *)FUN_1039db00(puVar11,(uint *)"Gear1_ThrottleOff",(uint)puVar8);
    pcVar12 = (char *)FUN_1039db00(puVar11,(uint *)"Gear1_ThrottleOff_Mid",(uint)puVar8);
    pcVar13 = "";
    pcVar13 = "#GP_HG_CT";
    pcVar13 = "Bug UI disabled:  Couldn\'t log in to PVCS Tracker\n";
    pcVar13 = "Bug UI disabled:  Couldn\'t see repository\n";
    pcVar13 = "GroupConVarToggle";
    pcVar13 = "backpack.dat";
    pcVar13 = "class C_World";
    pcVar13 = "m_bExplodeInAir";
    pcVar13 = "m_bVIP_HasCaseGoal";
    pcVar13 = "m_iWeaponBits";
    pcVar13 = "out: %5i  %5.2fk/s";
    pcVar13 = (char *)FUN_1042f3d0(puVar8,(uint *)"EngineStart",(uint)puVar9);
    pcVar13 = (char *)FUN_1042f3d0(puVar8,(uint *)"EngineStop",(uint)puVar9);
    pcVar13 = (char *)FUN_1042f3d0(puVar8,(uint *)"Gear1_ThrottleOff",(uint)puVar9);
    pcVar13 = (char *)FUN_1042f3d0(puVar8,(uint *)"Gear1_ThrottleOff_Mid",(uint)puVar9);
    pcVar14 = "        bucket sorting ...\n";
    pcVar14 = "";
    pcVar14 = "#TI_CLOSE";
    pcVar14 = "#TI_SUBMIT";
    pcVar14 = "#Wait_FriendJoin";
    pcVar14 = "%08X-%04hX-%04hX-%02X%02X-%02X%02X%02X%02X%02X%02X";
    pcVar14 = "m_szDisplayText";
    pcVar15 = "#TI_IDC_ACCURACY";
    pcVar15 = "#TI_IDC_CLIPSIZE";
    pcVar15 = "#TI_IDC_DAMAGE";
    pcVar15 = "#TI_IDC_MOBILITY";
    pcVar15 = "#TI_IDC_STABILITY";
    pcVar15 = "Error loading file %s!\n";
    pcVar15 = "File %s !\n";
    pcVar15 = "Icon Target is using effect NODRAW and allow_nodraw_target is false!";
    pcVar15 = "Lost locator target handle.";
    pcVar15 = "Lost our icon target handle returned NULL.";
    pcVar15 = "Not inside include zones.";
    pcVar15 = "Singleplayer";
    pcVar15 = "assign_bomb";
    pcVar15 = "icon_look";
    pcVar15 = "radio r5\n";
    pcVar15 = "screenshots";
    pcVar15 = "vip_splitsquad";
    pcVar16 = "m_bAllowNodrawTarget";
    pcVar16 = "m_bBumpWithTimeoutWhenLearned";
    pcVar16 = "m_bCanOpenWhenDead";
    pcVar16 = "m_bCanTimeoutWhileInactive";
    pcVar16 = "m_bFixedPosition";
    pcVar16 = "m_bForceCaption";
    pcVar16 = "m_bNoIconTarget";
    pcVar16 = "m_bNoOffscreen";
    pcVar16 = "m_bOnceLearnedNeverOpen";
    pcVar16 = "m_bShowWhenOccluded";
    pcVar16 = "m_bUsableInMidair";
    pcVar16 = "m_bVisible";
    pcVar16 = (char *)FUN_1042f3d0(this,(uint *)pcVar16,(uint)"error");
    pcVar17 = "        bucket sorting ...\n";
    pcVar17 = "        main sort initialise ...\n";
    pcVar17 = ")\n";
    pcVar17 = "\t![%s]->Weapon_OwnsThisType([%s] ";
    pcVar17 = "\t[output] = [%s]->AngularDistTo( [%s] ) ";
    pcVar17 = "\t[output] = [%s]->DistTo( [%s] ) ";
    pcVar17 = "car_wheel_fx_dirt";
    pcVar17 = "car_wheel_fx_grass";
    pcVar17 = "car_wheel_fx_gravel";
    pcVar17 = "grenade";
    pcVar17 = "m_bVIP_HasCarGoal";
    pcVar17 = "m_hActiveWeapon";
    pcVar17 = "m_iOnlyTeamToVote";
    pcVar17 = "m_nSurfaceType";
    pcVar17 = (char *)FUN_1042f3d0(local_c,(uint *)pcVar17,(uint)"error");
    pcVar18 = "flashlight_vertec";
    pcVar18 = "newname";
    pcVar18 = "sp_%d%s.vhv";
    pcVar18 = "sp_hdr_%d%s.vhv";
    pcVar2 = "   Ray";
    pcVar2 = "";
    pcVar2 = "#GameUI_Icons_A_BUTTON";
    pcVar2 = "#GameUI_Icons_B_BUTTON";
    pcVar2 = "#GameUI_Icons_DOWN";
    pcVar2 = "#GameUI_Icons_LEFT";
    pcVar2 = "#GameUI_Icons_LSTICK";
    pcVar2 = "#GameUI_Icons_L_SHOULDER";
    pcVar2 = "#GameUI_Icons_L_TRIGGER";
    pcVar2 = "#GameUI_Icons_RIGHT";
    pcVar2 = "#GameUI_Icons_RSTICK";
    pcVar2 = "#GameUI_Icons_R_SHOULDER";
    pcVar2 = "#GameUI_Icons_R_TRIGGER";
    pcVar2 = "#GameUI_Icons_UP";
    pcVar2 = "#GameUI_Icons_X_BUTTON";
    pcVar2 = "#GameUI_Icons_Y_BUTTON";
    pcVar2 = "#L4D360UI_Cancel";
    pcVar2 = "#L4D360UI_Ok";
    pcVar2 = "#L4D360UI_ShowAchievements";
    pcVar2 = "#PORTAL2_Hud_SavingGame";
    pcVar2 = "#TI_Score_CaseToHelicopter";
    pcVar2 = "#TI_Score_CaseToHelicopter_XMAS";
    pcVar2 = "#TI_vote_alltalk_enable";
    pcVar2 = "%*sSource: emitter\n";
    pcVar2 = "%*sSource: entity\n";
    pcVar2 = "%s (%s: %d/%s) [%d]";
    pcVar2 = "%s (%s: %d/%s) [%d]\n";
    pcVar2 = "(null)";
    pcVar2 = "-1";
    pcVar2 = "5.1 speaker";
    pcVar2 = "7.1 speaker";
    pcVar2 = "<<illegal>>";
    pcVar2 = "<no file>";
    pcVar2 = "???";
    pcVar2 = "BADFUNCTIONPOINTER";
    pcVar2 = "Edit %s Action";
    pcVar2 = "FCVAR_NEVER_AS_STRING";
    pcVar2 = "General.BurningFlesh";
    pcVar2 = "General.BurningObject";
    pcVar2 = "NAV IGNORE";
    pcVar2 = "New %s Action";
    pcVar2 = "Note: Changes to sv_pure take effect when the next map is loaded.\n";
    pcVar2 = "Test_ProxyToggle_EnsureValue: object doesn\'t exist on the client.";
    pcVar2 = "Test_ProxyToggle_EnsureValue: requires value parameter.";
    pcVar2 = "Unknown";
    pcVar2 = "acos";
    pcVar2 = "acosh";
    pcVar2 = "add";
    pcVar2 = "allow_from_disk";
    pcVar2 = "allow_from_disk+check_crc";
    pcVar2 = "asin";
    pcVar2 = "asinh";
    pcVar2 = "atan";
    pcVar2 = "atanh";
    pcVar2 = "block_start";
    pcVar2 = "bone_L_Foot";
    pcVar2 = "bone_R_Foot";
    pcVar2 = "ceil";
    pcVar2 = "center";
    pcVar2 = "class ";
    pcVar2 = "cli::array<";
    pcVar2 = "cli::pin_ptr<";
    pcVar2 = "cos";
    pcVar2 = "cosh";
    pcVar2 = "delay";
    pcVar2 = "distvar";
    pcVar2 = "div";
    pcVar2 = "dsp";
    pcVar2 = "east";
    pcVar2 = "empty";
    pcVar2 = "equals";
    pcVar2 = "erf";
    pcVar2 = "erfc";
    pcVar2 = "exp";
    pcVar2 = "exp2";
    pcVar2 = "expm1";
    pcVar2 = "fabs";
    pcVar2 = "facing";
    pcVar2 = "floor";
    pcVar2 = "from_steam";
    pcVar2 = "gamemode - 8.1 with some 9.0 (half-precision)";
    pcVar2 = "gamemode - 9.0 (half-precision)";
    pcVar2 = "gamma";
    pcVar2 = "greater_than";
    pcVar2 = "greater_than_or_equal";
    pcVar2 = "headphone";
    pcVar2 = "helicopter_ter";
    pcVar2 = "hllog.txt";
    pcVar2 = "invert";
    pcVar2 = "invert_scale";
    pcVar2 = "less_than";
    pcVar2 = "less_than_or_equal";
    pcVar2 = "level";
    pcVar2 = "lgamma";
    pcVar2 = "log";
    pcVar2 = "log10";
    pcVar2 = "log1p";
    pcVar2 = "log2";
    pcVar2 = "logb";
    pcVar2 = "m_nBeamFlags";
    pcVar2 = "max";
    pcVar2 = "min";
    pcVar2 = "mixlayer_trigger";
    pcVar2 = "mod";
    pcVar2 = "models/characters/vip.mdl";
    pcVar2 = "mult";
    pcVar2 = "mute";
    pcVar2 = "muzzleflash_AK47";
    pcVar2 = "muzzleflash_AUG";
    pcVar2 = "muzzleflash_M4";
    pcVar2 = "muzzleflash_URatio";
    pcVar2 = "nearbyint";
    pcVar2 = "none";
    pcVar2 = "north";
    pcVar2 = "north-east";
    pcVar2 = "north-west";
    pcVar2 = "not_equal";
    pcVar2 = "pitch";
    pcVar2 = "position";
    pcVar2 = "pow";
    pcVar2 = "prop_dynamic";
    pcVar2 = "prop_physics_multiplayer";
    pcVar2 = "quad speaker";
    pcVar2 = "quit\n";
    pcVar2 = "rint";
    pcVar2 = "rintol";
    pcVar2 = "round";
    pcVar2 = "roundtol";
    pcVar2 = "save_restore";
    pcVar2 = "set";
    pcVar2 = "sin";
    pcVar2 = "sinh";
    pcVar2 = "solo";
    pcVar2 = "south";
    pcVar2 = "south-east";
    pcVar2 = "south-west";
    pcVar2 = "speakers";
    pcVar2 = "sqrt";
    pcVar2 = "step";
    pcVar2 = "stereo speaker";
    pcVar2 = "stop_hold";
    pcVar2 = "struct ";
    pcVar2 = "sub";
    pcVar2 = "tan";
    pcVar2 = "tanh";
    pcVar2 = "true";
    pcVar2 = "trunc";
    pcVar2 = "union ";
    pcVar2 = "volume";
    pcVar2 = "west";
    pcVar2 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar3,"cl_lagcompensation");
    pcVar2 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar3,"cl_predictweapons");
    pcVar2 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar3,"fov_desired");
    pcVar2 = (char *)FUN_10268930(pvVar1,(uint *)"filterinfo",0);
    pcVar2 = (char *)FUN_10268930(this_00,(uint *)"command",(uint)&DAT_103236cf);
    pcVar2 = (char *)FUN_1042f3d0(pvVar1,(uint *)"filterinfo",0);
    pcVar2 = FUN_1017c740((byte *)"%s %f");
    pcVar2 = FUN_1017c740((byte *)"map \"%s\"\n");
    pcVar2 = FUN_101f6800((byte *)"VPhysics Penetration Error (%s)!");
    pcVar20 = "_female";
    pcVar20 = "_male";
    pcVar21 = "Client_Animation_Threaded";
    pcVar21 = "TI_RPDT";
    pcVar21 = "m_hDog";
    pcVar28 = "dti_delta_distances.txt";
    pcVar29 = "#TI_Objective_OOB2";
    pcVar3 = "   Hull";
    pcVar3 = "";
    pcVar3 = "#ClrName_Bot";
    pcVar3 = "#FreezePanel_SaveReplay";
    pcVar3 = "#L4D360UI_Enabled";
    pcVar3 = "#PORTAL2_MsgBx_SaveCompletedTxt";
    pcVar3 = "#PORTAL2_MsgBx_SaveProfileCompleted";
    pcVar3 = "...";
    pcVar3 = ".tga";
    pcVar3 = "<unconnected>";
    pcVar3 = "???";
    pcVar3 = "Array";
    pcVar3 = "Bullets.DefaultNearmiss";
    pcVar3 = "Bullets.HeavyNearmiss";
    pcVar3 = "CHudPanelRoundWin";
    pcVar3 = "CRadialMenu";
    pcVar3 = "DVariant type %i unknown";
    pcVar3 = "DataTable";
    pcVar3 = "Delete Key";
    pcVar3 = "Delete Target";
    pcVar3 = "Didn\'t receive protocol failure data.";
    pcVar3 = "EDIT_MERGE.Disable";
    pcVar3 = "EDIT_MERGE.Enable";
    pcVar3 = "FALSE";
    pcVar3 = "FCVAR_NEVER_AS_STRING";
    pcVar3 = "False";
    pcVar3 = "HLTV";
    pcVar3 = "MenuClose";
    pcVar3 = "MenuPulse";
    pcVar3 = "REPLAY";
    pcVar3 = "Receive failed.";
    pcVar3 = "Resume";
    pcVar3 = "Server is hibernating\n";
    pcVar3 = "Server rejected protocol.";
    pcVar3 = "UNKNOWN";
    pcVar3 = "Underwater.BulletImpact";
    pcVar3 = "Unknown";
    pcVar3 = "Upload failed.";
    pcVar3 = "Visual C++ CRT: Not enough memory to complete call to strerror.";
    pcVar3 = "autoselect";
    pcVar3 = "baseclass";
    pcVar3 = "bcc_localdata";
    pcVar3 = "bugreporter_public";
    pcVar3 = "char ";
    pcVar3 = "didn\'t find rank template\n";
    pcVar3 = "disconnect\n";
    pcVar3 = "english";
    pcVar3 = "false";
    pcVar3 = "found rank template\n";
    pcVar3 = "func_trafficzone";
    pcVar3 = "grenade_40mm";
    pcVar3 = "hostage_entity";
    pcVar3 = "impact_fx_plaster";
    pcVar3 = "impact_fx_tile";
    pcVar3 = "int ";
    pcVar3 = "long ";
    pcVar3 = "m_bEnabled";
    pcVar3 = "m_bSwitchingWeapon";
    pcVar3 = "m_fFixedPositionX";
    pcVar3 = "m_fFixedPositionY";
    pcVar3 = "m_fFloat1";
    pcVar3 = "m_fFloat2";
    pcVar3 = "m_fLockDuration";
    pcVar3 = "m_fRange";
    pcVar3 = "m_fTimeout";
    pcVar3 = "m_fUpdateInterval";
    pcVar3 = "m_flRelativeUpOffset";
    pcVar3 = "m_flUpOffset";
    pcVar3 = "m_hEntity1";
    pcVar3 = "m_hEntity2";
    pcVar3 = "m_hIconTarget";
    pcVar3 = "m_hLocalPlayer";
    pcVar3 = "m_iActiveIssueIndex";
    pcVar3 = "m_iFlags";
    pcVar3 = "m_iInteger1";
    pcVar3 = "m_iInteger2";
    pcVar3 = "m_iPriority";
    pcVar3 = "m_nForceBone";
    pcVar3 = "m_nNumWide";
    pcVar3 = "m_nSceneStringIndex";
    pcVar3 = "m_nVguiTargetEdge";
    pcVar3 = "m_stringReplaceKey";
    pcVar3 = "m_szBinding";
    pcVar3 = "m_szCaptionColor";
    pcVar3 = "m_szDisplayParamText";
    pcVar3 = "m_szDisplayText";
    pcVar3 = "m_szGamepadBinding";
    pcVar3 = "m_szLessonGroup";
    pcVar3 = "m_szOffscreenIcon";
    pcVar3 = "m_szOnscreenIcon";
    pcVar3 = "m_szStartSound";
    pcVar3 = "m_szString1";
    pcVar3 = "m_szString2";
    pcVar3 = "m_szVguiTargetLookup";
    pcVar3 = "m_szVguiTargetName";
    pcVar3 = "move_x";
    pcVar3 = "move_y";
    pcVar3 = "paused";
    pcVar3 = "prop_rocket_crate";
    pcVar3 = "public";
    pcVar3 = "resource/BugUIPanel_Filequeue.res";
    pcVar3 = "resource/BugUIPanel_Public.res";
    pcVar3 = "rpg_rocket";
    pcVar3 = "save modeswitchsave;wait;load modeswitchsave\n";
    pcVar3 = "short ";
    pcVar3 = "should_never_see_this";
    pcVar3 = "true";
    pcVar3 = "unknown";
    pcVar3 = "vprof_off\n";
    pcVar3 = "vprof_on\n";
    pcVar3 = "vr/vr_distort_texture_right";
    pcVar3 = "vr/vr_distort_texture_right_nort";
    pcVar3 = "wheeled_controllable";
    pcVar3 = (char *)(**(code **)(*piVar1 + 0x24))("-language","english",0x40);
    pcVar3 = (char *)(**(code **)(*piVar1 + 0x24))("-sfm_shadowmapres",&local_c);
    pcVar3 = (char *)(**(code **)(*piVar1 + 4))("RichText.InsetX",uVar5);
    pcVar3 = (char *)(**(code **)(*piVar1 + 4))("RichText.InsetY");
    pcVar3 = (char *)FUN_0041f250(param_1,"name",0);
    pcVar3 = FUN_1017c740((byte *)"%s %d\n");
    pcVar3 = FUN_101f6800((byte *)"%s_destroyed.mdl");
    pcVar3 = FUN_103980c0(pcVar1,(int)"player_activate");
    pcVar3 = FUN_103980c0(pcVar1,(int)"player_death");
    pcVar3 = FUN_103980c0(pcVar1,(int)"player_team");
    pcVar3 = FUN_1042c450((char *)param_1,(int)"radio");
    pcVar3 = _strstr(param_1,"bin/");
    pcVar4 = "   Physics";
    pcVar4 = " [ACME] %s killed by frag\n";
    pcVar4 = " [ACME] %s killed by m320\n";
    pcVar4 = " [ACME] %s killed by rpg7\n";
    pcVar4 = " {\n";
    pcVar4 = "";
    pcVar4 = "#GameUI_CSMQuality";
    pcVar4 = "#L4D360UI_MsgBx_MustBindButtonsTitle";
    pcVar4 = "#PORTAL2_MsgBx_SaveCompletedTxt";
    pcVar4 = "#PORTAL2_MsgBx_SaveProfileCompleted";
    pcVar4 = "#Wait_Purchasing";
    pcVar4 = "#Wait_Purchasing_Cash";
    pcVar4 = "#chat_say";
    pcVar4 = "#chat_say_team";
    pcVar4 = "%3.1f  (%s,%d) <-- (%s)\n";
    pcVar4 = "%3.1f  (%s,%s) <-- (%s)\n";
    pcVar4 = "%s : Automatically canceling playback\n";
    pcVar4 = "%s : PauseThink canceling playback\n";
    pcVar4 = "-usedevshotsfile";
    pcVar4 = "//mod/";
    pcVar4 = "//mod/%s%02d.%s";
    pcVar4 = "//mod/%s.HL2";
    pcVar4 = "//mod/autosave%s.sav";
    pcVar4 = "//mod/autosavedangerous%s.sav";
    pcVar4 = "<< NULL >>\n";
    pcVar4 = "<NULL>";
    pcVar4 = "A vote has not been called.\n";
    pcVar4 = "Add File to Perforce?";
    pcVar4 = "CBaseEntity::PhysicsDispatchThink";
    pcVar4 = "CHudMessage";
    pcVar4 = "CQueuedPacketSender";
    pcVar4 = "CRadialMenu";
    pcVar4 = "Check Out File from Perforce?";
    pcVar4 = "ClientEffect textures";
    pcVar4 = "Could not find factory interface in library %s";
    pcVar4 = "Could not load library %s";
    pcVar4 = "DOOR STATE: AJAR";
    pcVar4 = "DOOR STATE: CLOSED";
    pcVar4 = "DOOR STATE: CLOSING";
    pcVar4 = "DOOR STATE: OPEN";
    pcVar4 = "DOOR STATE: OPENING";
    pcVar4 = "EDIT_DISCONNECT.MarkedArea";
    pcVar4 = "EDIT_SPLICE.MarkedArea";
    pcVar4 = "EDIT_SPLICE.NoMarkedArea";
    pcVar4 = "Equal Power";
    pcVar4 = "Exponential";
    pcVar4 = "FCVAR_NEVER_AS_STRING";
    pcVar4 = "Game Entity KeyValues";
    pcVar4 = "Gold Source";
    pcVar4 = "Image";
    pcVar4 = "LobbyInvite";
    pcVar4 = "Moveto: Custom move to Mark";
    pcVar4 = "Moveto: Run to Mark";
    pcVar4 = "Moveto: Teleport to Mark";
    pcVar4 = "Moveto: Wait Facing";
    pcVar4 = "Moveto: Wait";
    pcVar4 = "Moveto: Walk to Mark";
    pcVar4 = "Per-frame texture stats";
    pcVar4 = "Player.FastRope_Descend";
    pcVar4 = "PulseOption1";
    pcVar4 = "PulseOption2";
    pcVar4 = "PulseOption3";
    pcVar4 = "PulseOption4";
    pcVar4 = "PulseOption5";
    pcVar4 = "Pure server: file [%s]\\%s does not match the server\'s file.";
    pcVar4 = "QueryMonitorTexture";
    pcVar4 = "SelectedImage";
    pcVar4 = "Soundlog file %s is read-only!!\n";
    pcVar4 = "SteamID (%llu) P2P session started";
    pcVar4 = "TLK_LEAD_MISSING_WEAPON";
    pcVar4 = "UNKNOWN";
    pcVar4 = "Unknown SteamID (%llu) trying to send p2p messages.";
    pcVar4 = "Value: DEAD";
    pcVar4 = "Value: OFF";
    pcVar4 = "Value: ON";
    pcVar4 = "Vote failed: no changing vote.\n";
    pcVar4 = "Vote failed: server disabled.\n";
    pcVar4 = "Vote failed: system error.\n";
    pcVar4 = "Vote failed: team restricted.\n";
    pcVar4 = "Vote failed: voting closed.\n";
    pcVar4 = "WC/Engine map versions different...";
    pcVar4 = "Worldcraft not running...";
    pcVar4 = "active";
    pcVar4 = "alpha";
    pcVar4 = "baseclass";
    pcVar4 = "console.log";
    pcVar4 = "d3_breen_01";
    pcVar4 = "demo_gototick %s 0 1\n";
    pcVar4 = "disconnect\n";
    pcVar4 = "env_fire_large";
    pcVar4 = "env_fire_medium";
    pcVar4 = "env_fire_small";
    pcVar4 = "env_fire_tiny";
    pcVar4 = "ep1_citadel_03";
    pcVar4 = "fog_enable 0\n";
    pcVar4 = "fog_override 0\n";
    pcVar4 = "game/map";
    pcVar4 = "game/mode";
    pcVar4 = "m_angEyeAngles[0]";
    pcVar4 = "m_iParentAttachment";
    pcVar4 = "m_iVehicleType";
    pcVar4 = "m_mDir";
    pcVar4 = "models/player/vip.mdl";
    pcVar4 = "play_demo %s\n";
    pcVar4 = "snd_dump_filepaths: Wrote %s\n";
    pcVar4 = "tacint";
    pcVar4 = "true";
    pcVar4 = "wheeled_controllable";
    pcVar4 = "writing";
    pcVar4 = (char *)(**(code **)(*piVar2 + 4))("HybridButton.AllCaps");
    pcVar4 = (char *)(**(code **)(*piVar2 + 4))("HybridButton.CursorHeight");
    pcVar4 = (char *)(**(code **)(*piVar2 + 4))("HybridButton.MultiLine");
    pcVar4 = (char *)(**(code **)(*piVar2 + 4))("HybridButton.TextInsetX");
    pcVar4 = (char *)(**(code **)(*piVar2 + 4))("HybridButton.TextInsetY");
    pcVar4 = (char *)FUN_1042f3d0(param_1,(uint *)"secondarytext",0);
    pcVar4 = FUN_1017c740((byte *)"%s [%s]");
    pcVar4 = FUN_1017c740((byte *)"changelevel %s\n");
    pcVar4 = FUN_1017c740((byte *)"materials/%s");
    pcVar4 = FUN_1017c740((byte *)"r_farz %i\n");
    pcVar4 = FUN_1017c740((byte *)"sound/%s");
    pcVar4 = FUN_101f6800((byte *)"%s_destroyed.mdl");
    pcVar4 = FUN_102640a0((char *)local_24,(int)"VLV_INTERNAL");
    pcVar5 = " (Steam)";
    pcVar5 = " (VSS)";
    pcVar5 = " (background map)";
    pcVar5 = "";
    pcVar5 = "#L4D360UI_Scroll_Progress";
    pcVar5 = "#TI_Score_HG_RescCountCt";
    pcVar5 = "#TI_Score_HG_RescCountTer";
    pcVar5 = "#TI_Score_TDM_TimeOut_Draw";
    pcVar5 = "#TI_Score_TDM_TimeOut_DrawNoPoints";
    pcVar5 = "-language";
    pcVar5 = "//mod/%s.HL3";
    pcVar5 = "::ExecGameTypeCfg";
    pcVar5 = "<unknown seq>";
    pcVar5 = "All queries completed on time\n";
    pcVar5 = "Arming Bomb";
    pcVar5 = "Bad challenge.\n";
    pcVar5 = "CHudAmmo";
    pcVar5 = "CHudMiniMap";
    pcVar5 = "CModelLoader::Map_IsValid:  No such map \'%s\'\n";
    pcVar5 = "CModelLoader::Map_IsValid: \'%s\' is not a valid BSP file\n";
    pcVar5 = "DoorSound.DefaultLocked";
    pcVar5 = "EA";
    pcVar5 = "ECHEM";
    pcVar5 = "ECON";
    pcVar5 = "ED";
    pcVar5 = "EF";
    pcVar5 = "EFIRE";
    pcVar5 = "EH";
    pcVar5 = "ERAD";
    pcVar5 = "ERROR: CPooledVBAllocator_ColorMesh has unfreed allocations!";
    pcVar5 = "ERROR: Unconnected ladder #%d bottom at ( %g, %g, %g )\n";
    pcVar5 = "ERROR: Unconnected ladder #%d top at ( %g, %g, %g )\n";
    pcVar5 = "FCVAR_NEVER_AS_STRING";
    pcVar5 = "Fullscreen";
    pcVar5 = "Generating Caches: Setting command line:\n\'%s\'\n";
    pcVar5 = "Generating Reslists: Setting command line:\n\'%s\'\n";
    pcVar5 = "GenericPanelList.BgColor";
    pcVar5 = "LeftFoot";
    pcVar5 = "NA";
    pcVar5 = "NCHEM";
    pcVar5 = "NCON";
    pcVar5 = "ND";
    pcVar5 = "NF";
    pcVar5 = "NFIRE";
    pcVar5 = "NG";
    pcVar5 = "NH";
    pcVar5 = "NRAD";
    pcVar5 = "No events registered\n";
    pcVar5 = "No untrivial occlusion calls registered\n";
    pcVar5 = "RightFoot";
    pcVar5 = "RotDoorSound.DefaultLocked";
    pcVar5 = "ShowStateTransitions: entering #%d\n";
    pcVar5 = "ShowStateTransitions: entering \'%s\'\n";
    pcVar5 = "TLK_LEAD_ARRIVAL";
    pcVar5 = "TLK_LEAD_ATTRACTPLAYER";
    pcVar5 = "TLK_LEAD_COMINGBACK";
    pcVar5 = "TLK_LEAD_RETRIEVE";
    pcVar5 = "TLK_LEAD_START";
    pcVar5 = "TLK_LEAD_SUCCESS";
    pcVar5 = "TLK_LEAD_WAITOVER";
    pcVar5 = "Windowed no border";
    pcVar5 = "[Cloud]: local file %s does not exist. cannot upload to cloud.\n";
    pcVar5 = "[NO NAME]";
    pcVar5 = "blood_splatter1";
    pcVar5 = "blood_splatter2";
    pcVar5 = "blood_splatter3";
    pcVar5 = "blood_splatter4";
    pcVar5 = "bool (%s)\n";
    pcVar5 = "byte (%d)\n";
    pcVar5 = "callvote BalanceTeams;";
    pcVar5 = "cl_predict 0";
    pcVar5 = "cl_predict 1";
    pcVar5 = "command";
    pcVar5 = "contextlabel";
    pcVar5 = "d3_breen_01";
    pcVar5 = "disconnect\n";
    pcVar5 = "ep1_citadel_03";
    pcVar5 = "lead_fail";
    pcVar5 = "loadouts/slot_%d.dat";
    pcVar5 = "loadouts/slot_tournament_%d.dat";
    pcVar5 = "m_bGameEndLevelProceed";
    pcVar5 = "m_szSnapshotFileName";
    pcVar5 = "media/lobby/%s.ogv";
    pcVar5 = "media/lobby/menu_bg%02d.ogv";
    pcVar5 = "models/player/vip.mdl";
    pcVar5 = "models/vgui/waypoint_arrow-1.mdl";
    pcVar5 = "models/vgui/waypoint_arrow-1_small.mdl";
    pcVar5 = "net_File";
    pcVar5 = "net_NOP";
    pcVar5 = "prop_bomb";
    pcVar5 = "prop_door_rotating";
    pcVar5 = "prop_dynamic";
    pcVar5 = "prop_vip_retrieval_entity";
    pcVar5 = "quit\n";
    pcVar5 = "scripts/HudAnimations.txt";
    pcVar5 = "short (%i) net (%i)\n";
    pcVar5 = "should_never_see_this";
    pcVar5 = "weapon_m320";
    pcVar5 = "weapon_mg4";
    pcVar5 = "weapon_rpg7";
    pcVar5 = (char *)(**(code **)(*piVar3 + 4))("HybridButton.AllCaps");
    pcVar5 = (char *)(**(code **)(*piVar3 + 4))("HybridButton.CursorHeight");
    pcVar5 = (char *)(**(code **)(*piVar3 + 4))("HybridButton.CursorImage");
    pcVar5 = (char *)(**(code **)(*piVar3 + 4))("HybridButton.MultiLine");
    pcVar5 = (char *)(**(code **)(*piVar3 + 4))("HybridButton.TextInsetX");
    pcVar5 = (char *)(**(code **)(*piVar3 + 4))("HybridButton.TextInsetY");
    pcVar5 = (char *)FUN_1042f3d0(param_1,(uint *)"Style",0);
    pcVar5 = FUN_1017c740((byte *)"connect %s\n");
    pcVar5 = FUN_1017c740((byte *)"play %s\n");
    pcVar5 = FUN_10398070(pcVar4,(int)"models");
    pcVar5 = FUN_1042c450(pcVar8,(int)"models");
    pcVar6 = "";
    pcVar6 = "#Atr_PctNeg";
    pcVar6 = "#Chat_All";
    pcVar6 = "#FileOpenDialog_File_name";
    pcVar6 = "#GameUI_vote_failed_cannot_kick_admin";
    pcVar6 = "#GameUI_vote_failed_cannot_kick_for_time";
    pcVar6 = "#GameUI_vote_failed_disabled_issue";
    pcVar6 = "#GameUI_vote_failed_event_already_active";
    pcVar6 = "#GameUI_vote_failed_map_name_required";
    pcVar6 = "#GameUI_vote_failed_map_not_found";
    pcVar6 = "#GameUI_vote_failed_map_not_valid";
    pcVar6 = "#GameUI_vote_failed_nextlevel_set";
    pcVar6 = "#GameUI_vote_failed_recently";
    pcVar6 = "#GameUI_vote_failed_round_active";
    pcVar6 = "#GameUI_vote_failed_scramble_in_prog";
    pcVar6 = "#GameUI_vote_failed_spectator";
    pcVar6 = "#GameUI_vote_failed_team_cant_call";
    pcVar6 = "#GameUI_vote_failed_waitingforplayers";
    pcVar6 = "#L4D360UI_Enabled";
    pcVar6 = "#TI_Score_BOSS_TimeOut_Attacker";
    pcVar6 = "#TI_Score_BOSS_TimeOut_Attacker2";
    pcVar6 = "#TI_Vote_rebalance_once";
    pcVar6 = "#TI_vote_failed";
    pcVar6 = "#TI_vote_mission_only";
    pcVar6 = "#TI_vote_no_transition_vote";
    pcVar6 = "#TI_vote_notunbalanced";
    pcVar6 = "#TI_vote_restart_game_too_late";
    pcVar6 = "#TI_vote_tdm_only";
    pcVar6 = "#Valve_MinShaderModel3";
    pcVar6 = "%s %i\n";
    pcVar6 = "(DORMANT)";
    pcVar6 = "-%s %i\n";
    pcVar6 = "<NULL>";
    pcVar6 = "Bounce.Concrete";
    pcVar6 = "Bounce.Flesh";
    pcVar6 = "Bounce.Glass";
    pcVar6 = "Bounce.Metal";
    pcVar6 = "Bounce.Shell";
    pcVar6 = "Bounce.ShotgunShell";
    pcVar6 = "Bounce.Shrapnel";
    pcVar6 = "Bounce.Wood";
    pcVar6 = "Custom Slot %i";
    pcVar6 = "Default Slot %i";
    pcVar6 = "Default";
    pcVar6 = "EDIT_CONNECT.Added";
    pcVar6 = "FCVAR_NEVER_AS_STRING";
    pcVar6 = "From";
    pcVar6 = "GetPlayerLimits:  default maxplayers must be >= 1 (%i)";
    pcVar6 = "GetPlayerLimits:  min maxplayers must be >= 1 (%i)";
    pcVar6 = "Heli.Apache_Rotor";
    pcVar6 = "Marlett";
    pcVar6 = "PROFILE";
    pcVar6 = "Subject";
    pcVar6 = "\nCUE Operators:\n";
    pcVar6 = "\nSTART Operators:\n";
    pcVar6 = "\n\nPLAN TIME (EQUIPMENT) IS: %f\n";
    pcVar6 = "_ds";
    pcVar6 = "_xlsp";
    pcVar6 = "binary";
    pcVar6 = "bool (%s)\n";
    pcVar6 = "bothTeamsReady::%s\n";
    pcVar6 = "burning_character";
    pcVar6 = "byte (%d)\n";
    pcVar6 = "channel";
    pcVar6 = "debugsystemui 0";
    pcVar6 = "default";
    pcVar6 = "demo";
    pcVar6 = "devshots";
    pcVar6 = "dirt_vertical_explode";
    pcVar6 = "dormant";
    pcVar6 = "env_fire_large_smoke";
    pcVar6 = "env_fire_medium_smoke";
    pcVar6 = "env_fire_small_smoke";
    pcVar6 = "env_fire_tiny_smoke";
    pcVar6 = "ep2_groggy";
    pcVar6 = "episodic_intro";
    pcVar6 = "episodic_stun";
    pcVar6 = "event";
    pcVar6 = "gameui_activate";
    pcVar6 = "gameui_hide";
    pcVar6 = "grass_vertical_explode";
    pcVar6 = "info_player_ct";
    pcVar6 = "item_battery";
    pcVar6 = "item_suit";
    pcVar6 = "keyvalues2";
    pcVar6 = "loading";
    pcVar6 = "media/RecapVids.txt";
    pcVar6 = "models/vehicles/cars/truck-6_npc.mdl";
    pcVar6 = "private";
    pcVar6 = "resource/perforcefilelist.res";
    pcVar6 = "resource/perforcefilelistdescription.res";
    pcVar6 = "rndwave";
    pcVar6 = "rock_vertical_explode";
    pcVar6 = "short (%i) net (%i)\n";
    pcVar6 = "slideshow_display_screen";
    pcVar6 = "sp_a5_credits";
    pcVar6 = "string (%s)\n";
    pcVar6 = "vgui/%s";
    pcVar6 = "vgui/mm/bg/background_01%s";
    pcVar6 = "worldspawn";
    pcVar6 = (char *)(**(code **)(*piVar5 + 4))("Dialog.TileHeight");
    pcVar6 = (char *)FUN_0041f250(this_01,"addcommands",(uint)&DAT_0043b3d2);
    pcVar6 = (char *)FUN_0041f250(this_01,"subdir",(uint)&DAT_0043b3d2);
    pcVar6 = FUN_102640a0((char *)(param_1 + 1),(int)"effect");
    pcVar7 = "";
    pcVar7 = "#TI_Score_HoKill";
    pcVar7 = "#TI_Score_TeamKill";
    pcVar7 = "#Wait_JoinRoom";
    pcVar7 = ") == 0\n";
    pcVar7 = "<<null>>";
    pcVar7 = "Actv: INVALID";
    pcVar7 = "Actv: RESET";
    pcVar7 = "CRadialMenu";
    pcVar7 = "CloneOperation";
    pcVar7 = "DrpAntialias";
    pcVar7 = "DrpFiltering";
    pcVar7 = "DrpVSync";
    pcVar7 = "ERROR! Couldn\'t send snapshot.";
    pcVar7 = "ERROR! Reliable snapshot overflow.";
    pcVar7 = "FCVAR_NEVER_AS_STRING";
    pcVar7 = "MapOff";
    pcVar7 = "NewOperation";
    pcVar7 = "Playing Demo File \"%s\"\n";
    pcVar7 = "Rejecting func_breakablesurf at (%2.2f, %2.2f, %2.2f).  Drawn face isn\'t a quad.\n";
    pcVar7 = "Relay \"%s\", not connect.\n";
    pcVar7 = "RoundIntro";
    pcVar7 = "TI_LPDT";
    pcVar7 = "TI_Score_ElimDraw";
    pcVar7 = "TI_Score_HR_ElimDraw";
    pcVar7 = "WRoundIntro";
    pcVar7 = "_ds";
    pcVar7 = "_xlsp";
    pcVar7 = "bgColor";
    pcVar7 = "blood_splatter1";
    pcVar7 = "blood_splatter2";
    pcVar7 = "blood_splatter3";
    pcVar7 = "blood_splatter4";
    pcVar7 = "char";
    pcVar7 = "hltv_cameraman";
    pcVar7 = "hostage_entity";
    pcVar7 = "m_Local";
    pcVar7 = "m_bFreeFalling";
    pcVar7 = "m_bIsBroken";
    pcVar7 = "m_szSlideshowDirectory";
    pcVar7 = "metal_gibs_beige";
    pcVar7 = "metal_gibs_black";
    pcVar7 = "metal_gibs_blue";
    pcVar7 = "metal_gibs_brown";
    pcVar7 = "metal_gibs_dark_blue";
    pcVar7 = "metal_gibs_dark_grey";
    pcVar7 = "metal_gibs_grey";
    pcVar7 = "metal_gibs_orange";
    pcVar7 = "metal_gibs_red";
    pcVar7 = "metal_gibs_steel_blue";
    pcVar7 = "metal_gibs_turquoise";
    pcVar7 = "metal_gibs_white";
    pcVar7 = "metal_gibs_yellow";
    pcVar7 = "prop_bomb";
    pcVar7 = "prop_vip_retrieval_entity";
    pcVar7 = "signed ";
    pcVar7 = "unsigned ";
    pcVar7 = "vip_entity";
    pcVar7 = "weapon_tracers";
    pcVar7 = (char *)FUN_1042f3d0(param_1,(uint *)"Style",0);
    pcVar7 = FUN_1003ef70(&local_328,(byte *)"Cur Accuracy: %.1f");
    pcVar7 = FUN_101f6800((byte *)"no such entity %s\n");
    pcVar70 = "      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\n";
    pcVar70 = "      bytes: mapping %d, ";
    pcVar70 = "code lengths %d, ";
    pcVar70 = "codes %d\n";
    pcVar70 = "selectors %d, ";
    pcVar8 = "";
    pcVar8 = "#DeathMsg_AssistedSuicide";
    pcVar8 = "#L4D360UI_SplitScreenDirection_Horizontal";
    pcVar8 = "#Player";
    pcVar8 = "#TI_Score_Assist";
    pcVar8 = "#TI_Score_DogKill";
    pcVar8 = "#TI_Score_Kill";
    pcVar8 = "#game_player_changed_name";
    pcVar8 = "#game_player_connecting";
    pcVar8 = "#game_player_joined_game";
    pcVar8 = "#game_player_left_game";
    pcVar8 = "//mod/%s.HL1";
    pcVar8 = "14:45:41";
    pcVar8 = "BOT (No Has VoxBaux)";
    pcVar8 = "Compilation of \"%s\" succeeded\n";
    pcVar8 = "DUCT Detected \n";
    pcVar8 = "Decal textures";
    pcVar8 = "FCVAR_NEVER_AS_STRING";
    pcVar8 = "Failed compiling %s\n";
    pcVar8 = "Label.TextBrightColor";
    pcVar8 = "Label.TextColor";
    pcVar8 = "Label.TextDullColor";
    pcVar8 = "back_end";
    pcVar8 = "backpack.dat";
    pcVar8 = "backpack_tm.dat";
    pcVar8 = "client created";
    pcVar8 = "enginetools.txt";
    pcVar8 = "frags";
    pcVar8 = "front_end";
    pcVar8 = "handle %u";
    pcVar8 = "hltv_cameraman";
    pcVar8 = "left_side";
    pcVar8 = "mapname";
    pcVar8 = "ping";
    pcVar8 = "predicted";
    pcVar8 = "quit\n";
    pcVar8 = "right_side";
    pcVar8 = "sdkenginetools.txt";
    pcVar8 = "sound";
    pcVar8 = "vgui/inworldui";
    pcVar8 = "vgui/inworldui_opaque";
    pcVar8 = "wp %d %d %d %d initial";
    pcVar8 = (char *)(**(code **)(*param_1 + 0x28))("oldname",&DAT_104eefb3);
    pcVar8 = FUN_1042c450((char *)pbVar14,(int)"InviteUI_");
    pcVar9 = "";
    pcVar9 = "#Chat_Dev";
    pcVar9 = "#Header_RoomList";
    pcVar9 = "%s at %.0f %.0f %0.f uses model %s, which has an invalid prop_data type. DELETED.\n";
    pcVar9 = "(%f, %f, %f)";
    pcVar9 = "BuildArea - NULL node.\n";
    pcVar9 = "BuildArea: Out of memory.\n";
    pcVar9 = "DmeParticleSystemDefinition";
    pcVar9 = "ERROR: CSOAContainer_Serializable::Unserialize - found wrong amount of memory data!\n"
    pcVar9 = "FCVAR_NEVER_AS_STRING";
    pcVar9 = "GSCreateLocalUser failed\n";
    pcVar9 = "HudChat.Message";
    pcVar9 = "HudChat.TeamMessage";
    pcVar9 = "Set coop level failed\n";
    pcVar9 = "Using primary sound buffer\n";
    pcVar9 = "`non-type-template-parameter";
    pcVar9 = "candyjelly";
    pcVar9 = "defendzone_white";
    pcVar9 = "event";
    pcVar9 = "exec modsettings.cfg mod\n";
    pcVar9 = "impact_fx_candy";
    pcVar9 = "m_LastHitGroup";
    pcVar9 = "m_bVIPReachedCarGoal";
    pcVar9 = "m_flForceClientTime";
    pcVar9 = "m_nHitboxSet";
    pcVar9 = "m_nNumBeamEnts";
    pcVar9 = "model";
    pcVar9 = "quit\n";
    pcVar9 = "should_never_see_this";
    pcVar9 = "true";
    pcVar9 = "unknown";
    pfVar1 = FUN_10149d40((void *)((int)param_1 + 8),(int *)"particle/particledefault");
    pfVar2 = FUN_10149d40((void *)((int)this + 0x1444),(int *)"sprites/heatwave");
    pfVar3 = FUN_10149d40(this_00,(int *)"particle/particle_smokegrenade2");
    pfVar3 = FUN_10149d40(this_00,(int *)"particle/particle_smokegrenade3");
    piVar1 = (int *)(*(code *)local_c)("VPhysics031",0);
    piVar1 = (int *)(*(code *)param_1)("VPhysicsSurfaceProps001",0);
    piVar1 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("player_info",0,0);
    piVar1 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_pre_shutdown",0,0);
    piVar1 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_shutdown",0,0);
    piVar1 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("hltv_cameraman",1,0);
    piVar1 = (int *)(**(code **)(*DAT_106cb7c4 + 0x44))("fs_report_sync_opens");
    piVar1 = (int *)(**(code **)(*DAT_107c09d0 + 0x44))("sv_cheats");
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(param_6,"ClientEffect textures",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(param_9,"ClientEffect textures",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_Camera","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameDepth","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_Fullscreen","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_PowerOfTwoFB","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_SmallFB0","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_SmallFB1","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_SmallFB2","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_SmallFB3","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_WaterReflection","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_WaterRefraction","RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("decals/blood1","Decal textures",1,0);
    piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))(local_104,"RenderTargets",1,0);
    piVar1 = (int *)(**(code **)(*piVar1 + 0xbc))("$frame",&DAT_1077ed54);
    piVar1 = (int *)Error("Can\'t find background image \'%s\'\n",local_138);
    piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"info_dog_waypoint_1");
    piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"point_viewcontrol_multiplayer");
    piVar1 = FUN_100a7bb0("entity_blocker",local_9c,&DAT_106a6510,0);
    piVar1 = FUN_1011a710(this,param_1,"ChatInputLine",1);
    piVar1 = FUN_1011a860(this,iVar2,"ChatLine1",1);
    piVar1 = FUN_101c8100(this,"CMapOverview",1);
    piVar1 = FUN_101ef470(this,0,(char *)0x0,"CvarToggleCheckButton",(char *)0x0,1);
    piVar1 = FUN_101f5aa0(this,0,(char *)0x0,"URLButton",0,(char *)0x0,1);
    piVar1 = FUN_10200f10(local_34,"materials/console/startup_loading.vtf");
    piVar1 = FUN_10220420(this,param_1,"DrawTreeFrame",1);
    piVar1 = FUN_1022f460(this,DAT_10799110,"RankListFrame",1);
    piVar1 = FUN_1024dde0(this,param_1,"ChatInputLine",1);
    piVar1 = FUN_1024ded0(this,iVar2,"ChatLine1",1);
    piVar1 = FUN_10290ab0(&DAT_106f1e98,(int *)"AnimationController");
    piVar1 = FUN_1029c040(this,0,(char *)0x0,"Button",0,(char *)0x0,1);
    piVar1 = FUN_102b6ea0(this,0,(char *)0x0,"MenuButton",1);
    piVar1 = FUN_102c3800(this,0,(char *)0x0,"",(undefined1 *)0x0,'\0',1);
    piVar1 = FUN_102c56e0(this,0,(char *)0x0,"MenuItem",0,0,1);
    piVar1 = FUN_102c6890(this,"Build Mode Help",(char *)local_3f8,param_1,1);
    piVar1 = FUN_102c6890(this,"MessageBox","MessageBoxText",0,1);
    piVar1 = FUN_102f9a80(this_00,(int)this + 0x224,"roundwin",1);
    piVar1 = FUN_103a46f0(this,0,(char *)0x0,"Button",0,(char *)0x0,1);
    piVar1 = FUN_103c0380(this,0,(char *)0x0,"",(undefined1 *)0x0,'\0',1);
    piVar1 = FUN_103ce890(this,0,(char *)0x0,"MenuButton",1);
    piVar1 = FUN_103cf440(this,0,(char *)0x0,"MenuItem",0,0,1);
    piVar1 = FUN_103d05d0(this,"Build Mode Help",(char *)local_3f8,param_1,1);
    piVar1 = FUN_103d05d0(this,"MessageBox","MessageBoxText",0,1);
    piVar1 = FUN_103e8c00(&DAT_106d2820,(int *)"AnimationController");
    piVar1 = FUN_1044f9e0(&DAT_10840278,(int *)"AnimationController");
    piVar1 = FUN_10462790(this,0,(char *)0x0,"Button",0,(char *)0x0,1);
    piVar1 = FUN_10468d60(this,0,(char *)0x0,"",(undefined1 *)0x0,'\0',1);
    piVar1 = FUN_10476ee0(this,0,(char *)0x0,"MenuButton",1);
    piVar1 = FUN_10477920(this,0,(char *)0x0,"MenuItem",0,0,1);
    piVar1 = FUN_10478ab0(this,"Build Mode Help",(char *)local_3f8,param_1,1);
    piVar1 = FUN_10478ab0(this,"MessageBox","MessageBoxText",0,1);
    piVar11 = (int *)(**(code **)(*param_1 + 0xbc))("$hdrcolorscale",&DAT_10716068);
    piVar11 = (int *)Msg("!! (%s) key not handled: \"%s\" \"%s\"\n",puVar16,param_1,param_2);
    piVar2 = (int *)(*(code *)param_1)("VEngineServer022",0);
    piVar2 = (int *)(**(code **)(**param_2 + 0xbc))("$decalScaleVariation",&DAT_1062587c);
    piVar2 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("hltv_message",1,0);
    piVar2 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("ragdoll_dissolved",0,0);
    piVar2 = (int *)(**(code **)(*DAT_106a5e70 + 0x44))("hostip");
    piVar2 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("hltv_changed_mode",0,0);
    piVar2 = (int *)(**(code **)(*DAT_107c09d0 + 0x44))("hostip");
    piVar2 = (int *)(**(code **)(*piVar2 + 0xbc))("$decalScale",&DAT_10625878);
    piVar2 = (int *)(**(code **)(*piVar2 + 0xc))("-startmap",&local_8);
    piVar2 = (int *)FUN_00405c80(param_1,(int)"VMaterialSystem080");
    piVar2 = (int *)FUN_100d0740((byte *)"effects/muzzleflash%d");
    piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"func_gamezone");
    piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar2,"ambient_generic");
    piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar2,"point_viewcontrol_multiplayer");
    piVar2 = (int *)FUN_1014fb30(&local_8,"C_EntityDissolve");
    piVar2 = (int *)FUN_1014fb30(&param_1,"FX_Bubble");
    piVar2 = (int *)FUN_102659a0(param_1,(byte *)"instancebaseline");
    piVar2 = (int *)FUN_10444d70(param_1,(byte *)"UsesCloudLabel",0);
    piVar2 = FUN_100a7bb0("point_enable_motion_fixup",param_2,param_3,this);
    piVar2 = FUN_100a7c20("instanced_scripted_scene",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
    piVar2 = FUN_100a7c20("ti_rope_weight",&local_30,(undefined8 *)&local_18,param_1);
    piVar2 = FUN_10295010(this_00,(int)this,"Commands",1);
    piVar2 = FUN_10295010(this_00,(int)this,"PauseTime",1);
    piVar2 = FUN_10295010(this_00,(int)this,"PlaybackRate",1);
    piVar2 = FUN_10295010(this_00,(int)this,"TrackNumber",1);
    piVar2 = FUN_1029c040(pvVar1,(int)param_1,(char *)0x0,"#MessageBox_Cancel",0,(char *)0x0,1);
    piVar2 = FUN_1029c040(pvVar1,(int)param_1,(char *)0x0,"#MessageBox_OK",0,(char *)0x0,1);
    piVar2 = FUN_1029c040(this_00,(int)this,"CloseBtn","#OK",(int)this,"Close",1);
    piVar2 = FUN_102a99e0(this_00,(int)this,"mode label","",1);
    piVar2 = FUN_102b2d60(pvVar1,param_1,"EditMenu",1);
    piVar2 = FUN_102b2d60(this_00,(int)this,"DebugMenu",1);
    piVar2 = FUN_102b2d60(this_00,(int)this,"DemoEditNewAction",1);
    piVar2 = FUN_102b2d60(this_00,(int)this,"DemoSmootherEdgeFixType",1);
    piVar2 = FUN_102b2d60(this_00,(int)this,"DemoSmootherTypeMenu",1);
    piVar2 = FUN_103037b0(pvVar6,(int)this,"VoiceListItem",1);
    piVar2 = FUN_103145a0(pvVar1,(int)param_1,"ApplyButton","#PropertyDialog_Apply",0,(char *)0x0,1)
    piVar2 = FUN_103145a0(pvVar1,(int)param_1,"CancelButton","#PropertyDialog_Cancel",0,(char *)0x0,
    piVar2 = FUN_103145a0(pvVar1,(int)param_1,"OKButton","#PropertyDialog_OK",0,(char *)0x0,1);
    piVar2 = FUN_103a46f0(pvVar1,(int)param_1,(char *)0x0,"#MessageBox_Cancel",0,(char *)0x0,1);
    piVar2 = FUN_103a46f0(pvVar1,(int)param_1,(char *)0x0,"#MessageBox_OK",0,(char *)0x0,1);
    piVar2 = FUN_103c9d10(pvVar1,param_1,"EditMenu",1);
    piVar2 = FUN_10462790(pvVar1,(int)param_1,(char *)0x0,"#MessageBox_Cancel",0,(char *)0x0,1);
    piVar2 = FUN_10462790(pvVar1,(int)param_1,(char *)0x0,"#MessageBox_OK",0,(char *)0x0,1);
    piVar2 = FUN_10472550(pvVar1,param_1,"EditMenu",1);
    piVar3 = (int *)(*(code *)param_1[1][0x21])("mouth");
    piVar3 = (int *)(**(code **)(*(int *)PTR_PTR_10419110 + 200))("Material Editor");
    piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("dog_stops_following",0,0);
    piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("nav_blocked",0,0);
    piVar3 = (int *)(**(code **)(*DAT_106a5e70 + 0x44))("hostport");
    piVar3 = (int *)(**(code **)(*DAT_106cb7f4 + 400))("_rt_BuildCubemaps16bit",0,0,4,0x19,0,0xc,0);
    piVar3 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("hltv_changed_target",0,0);
    piVar3 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("item_closeby",0,0);
    piVar3 = (int *)(**(code **)(*DAT_107c09d0 + 0x44))("hostport");
    piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("dev/blurfiltery_nohdr_clear");
    piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("dev/fade_blur","Other textures",1,0);
    piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(puVar6,"Other textures",0,0);
    piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_NVG","RenderTargets",1,0);
    piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_SmallFB1","RenderTargets",1,0);
    piVar3 = (int *)(**(code **)(*local_70 + 0xbc))("$decalScale",&DAT_10625878);
    piVar3 = (int *)(**(code **)(*local_70 + 0xbc))("$decalScaleVariation",&DAT_1062587c);
    piVar3 = (int *)(**(code **)(*param_1 + 0xbc))("$decalFadeDuration",&DAT_10625880);
    piVar3 = (int *)(**(code **)(*param_1 + 8))("filmgrain");
    piVar3 = (int *)(**(code **)(*piVar2 + 0x2c))("$multperc",0,1);
    piVar3 = (int *)(**(code **)(iVar1 + 400))("_rt_gui",0x280,0x1e0,5,uVar2);
    piVar3 = (int *)(**(code **)(iVar2 + 400))("_rt_Camera",uVar4,uVar4,1,uVar5);
    piVar3 = (int *)(**(code **)(iVar2 + 400))("_rt_WaterReflection",uVar4,uVar4,2,uVar5);
    piVar3 = (int *)FUN_1007ad40((byte *)"blink");
    piVar3 = (int *)FUN_1007b680(param_1,(byte *)"eyes_rightleft");
    piVar3 = (int *)FUN_1007b680(param_1,(byte *)"eyes_updown");
    piVar3 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar3,"env_particlelight");
    piVar3 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar3,"multi_manager");
    piVar3 = (int *)FUN_10135420("env_spiller",-1,'\x01');
    piVar3 = (int *)FUN_10286040(*(void **)(param_1 + 0x238),(byte *)"Close",0);
    piVar3 = (int *)FUN_10286040(*(void **)(param_1 + 0x238),(byte *)"Maximize",0);
    piVar3 = (int *)FUN_10286040(*(void **)(param_1 + 0x238),(byte *)"Minimize",0);
    piVar3 = (int *)FUN_103b2330(*(void **)(param_1 + 0x238),(byte *)"Close",0);
    piVar3 = (int *)FUN_103b2330(*(void **)(param_1 + 0x238),(byte *)"Maximize",0);
    piVar3 = (int *)FUN_103b2330(*(void **)(param_1 + 0x238),(byte *)"Minimize",0);
    piVar3 = (int *)FUN_10444d70(*(void **)((int)this + 0x1e4),(byte *)"LabelScoreable",1);
    piVar3 = (int *)FUN_10444d70(*(void **)(param_1 + 0x238),(byte *)"Close",0);
    piVar3 = (int *)FUN_10444d70(*(void **)(param_1 + 0x238),(byte *)"Maximize",0);
    piVar3 = (int *)FUN_10444d70(*(void **)(param_1 + 0x238),(byte *)"Minimize",0);
    piVar3 = (int *)FUN_10444d70(this,(byte *)"Label_Tier1_TDM",1);
    piVar3 = (int *)FUN_10444d70(this,(byte *)"Label_Tier2_TDM",1);
    piVar3 = (int *)FUN_10444d70(this,(byte *)"Label_Tier3_TDM",1);
    piVar3 = (int *)FUN_10444d70(this,(byte *)"Label_Tier4_TDM",1);
    piVar3 = FUN_100ed440(param_1,"Other textures",'\0');
    piVar3 = FUN_1011a710(pvVar4,(int)this,"ChatInputLine",1);
    piVar3 = FUN_1011a860(pvVar4,(int)this_00,"ChatLine1",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"draw focus","Highlight MouseOver",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"freeze option","Freeze",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"highlight selected","Highlight Selected",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"panel alpha option","Show Alpha",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"panel ptr option","Show Addresses",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"popups only","Popups Only",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"render order option","In Render Order",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"show hidden","Show Hidden",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"show panel bounds","Show Panel Bounds",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"show scheme","Show Scheme",1);
    piVar3 = FUN_10221790(pvVar4,(int)this,"show visible","Show Visible",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"ActionSkip",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"ActionStop",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"ScreenFadeColor",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"ScreenFadeDuration",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"ScreenFadeHoldTime",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"TextMessageColor1",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"TextMessageColor2",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"TextMessageFXTime",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"TextMessageFadeInTime",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"TextMessageFadeOutTime",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"TextMessageHoldTime",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"TextMessageText",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"TextMessageX",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"TextMessageY",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"ZoomFOV",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"ZoomHold",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"ZoomIn",1);
    piVar3 = FUN_10295010(pvVar2,(int)this,"ZoomOut",1);
    piVar3 = FUN_10295010(this_00,(int)this,"PrecisionEditPanel",1);
    piVar3 = FUN_102a9d70(this_00,(int)this,"SubtitleLabel",&PTR_1035fa48,1);
    piVar3 = FUN_102ba640(pvVar4,(int)this,"HorizScrollBar",'\0',1);
    piVar3 = FUN_102ba640(pvVar4,(int)this,"VertScrollBar",'\x01',1);
    piVar3 = FUN_102ba640(this_00,(int)this,"HorizScrollBar",'\0',1);
    piVar3 = FUN_102ba640(this_00,(int)this,"VerticalScrollBar",'\x01',1);
    piVar3 = FUN_10308320(this_00,(int)this,"ScrollBar",'\x01',(uint *)0x1);
    piVar3 = FUN_103d8f10(pvVar4,(int)this,"HorizScrollBar",'\0',1);
    piVar3 = FUN_103d8f10(pvVar4,(int)this,"VertScrollBar",'\x01',1);
    piVar3 = FUN_103d8f10(this_00,(int)this,"HorizScrollBar",'\0',1);
    piVar3 = FUN_1043f640(this_01,(int)this,"PanelListEmbedded",1);
    piVar3 = FUN_10452a40(this_00,(int)this,"PanelListEmbedded",1);
    piVar3 = FUN_10464a30(pvVar4,(int)this,"expired",1);
    piVar3 = FUN_10464a30(pvVar4,(int)this,"restricted",1);
    piVar3 = FUN_1047c910(pvVar4,(int)this,"HorizScrollBar",'\0',1);
    piVar3 = FUN_1047c910(pvVar4,(int)this,"VertScrollBar",'\x01',1);
    piVar3 = FUN_1047c910(this_00,(int)this,"HorizScrollBar",'\0',1);
    piVar3 = FUN_104917a0(this_00,(int)this,"ConsolePage",param_3,1);
    piVar4 = (int *)(**(code **)(*DAT_106cb7c0 + 0x44))("hostip");
    piVar4 = (int *)(**(code **)(*DAT_106cb7f4 + 0x150))(uVar3,"Other textures",0,0);
    piVar4 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("debug/showz","Other textures",1,0);
    piVar4 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("effects/tearcrying","Other textures",0,0);
    piVar4 = (int *)(**(code **)(*local_24[DAT_1079561c] + 0x2c))("$alpha",(int)&param_1 + 3,0);
    piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$basetexture",&local_5,0);
    piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$c0_x",&local_5,1);
    piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$c0_x",0,0);
    piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$c0_y",0,0);
    piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$c0_z",0,0);
    piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$c1_x",&local_5,1);
    piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$c2_x",&local_5,1);
    piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$c2_y",&local_5,1);
    piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$c2_z",&local_5,1);
    piVar4 = (int *)FUN_100d0740((byte *)"%s%s%s %2d:%02d:%02d %s");
    piVar4 = (int *)FUN_100eebc0(&DAT_1060f4b8,DAT_10650428,"info_player_coop");
    piVar4 = (int *)FUN_100eebc0(&DAT_1060f4b8,DAT_10650428,"info_player_start");
    piVar4 = (int *)FUN_10268900(param_1,(uint *)"panel",0);
    piVar4 = (int *)FUN_10444d70(*(void **)((int)this + 0x23c),(byte *)"SelectedItemLabel",1);
    piVar4 = FUN_100be330(pvVar3,(int)this,"Materials",1);
    piVar4 = FUN_100ccbf0(pvVar3,(int)this,"BlendFactorSlider",1);
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotAllowGrenadesCheck","","bot_allow_grenades",1);
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotAllowMachineGunsCheck","","bot_allow_machine_guns",1)
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotAllowPistolsCheck","","bot_allow_pistols",1);
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotAllowRiflesCheck","","bot_allow_rifles",1);
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotAllowRogueCheck","","bot_allow_rogues",1);
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotAllowShotgunsCheck","","bot_allow_shotguns",1);
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotAllowSnipersCheck","","bot_allow_snipers",1);
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotAllowSubmachineGunsCheck","",
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotDeferToHumanCheck","","bot_defer_to_human",1);
    piVar4 = FUN_101ef470(pvVar3,(int)this,"BotJoinAfterPlayerCheck","","bot_join_after_player",1);
    piVar4 = FUN_1021be70(pvVar3,(int)this,"InfoList",5,1);
    piVar4 = FUN_10223c00(pvVar3,0,"data",1);
    piVar4 = FUN_10223c00(pvVar3,0,"group",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"ActionName",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"ActionStart",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"DemoGoToTick",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"NameEntry",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"SoundName",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"skyColomierBlueText",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"skyColorBlueText",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"skyColorGreenText",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"skyColorRedText",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"skyColormieGreenText",1);
    piVar4 = FUN_10295010(pvVar3,(int)this,"skyColormieRedText",1);
    piVar4 = FUN_1029c040(pvVar2,(int)this,"CancelButton","#FileOpenDialog_Cancel",(int)this,
    piVar4 = FUN_1029c040(pvVar2,(int)this,"FolderUpButton","",(int)this,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar2,(int)this,"NewFolderButton","",(int)this,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar2,(int)this,"OpenInExplorerButton","",(int)this,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"+","+",(int)this,"size+",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"--","--",(int)this,"size-",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"ApplyButton","#PropertyDialog_Apply",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"BringForward","Up",(int)this,"BringForward",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"Cancel","Cancel",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"CancelButton","#PropertyDialog_Cancel",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"ChooseSound","Choose...",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"CopyImg","Copy Image",(int)this,"CopyImg",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"CopyTxt","Copy Text",(int)this,"CopyTxt",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DeleteOperation","Delete",(int)this,"DeleteOperation",1)
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoEdit","Edit...",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoEditCancel","Cancel",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoEditDelete","Delete",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoEditEdit","Edit...",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoEditOk","OK",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoEditRevert","Revert",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoEditSave","Save",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoFastBackward","Fast Bwd",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoFastForward","Fast Fwd",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoGo","Go",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoGoEnd","Go End",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoLoad","Load...",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoNextFrame","Next Frame",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoPlayPauseResume","PlayPauseResume",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoPrevFrame","Prev Frame",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoSmooth","Smooth...",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"DemoStop","Stop",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"Explore","Open",(int)this,"Explore",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"FlashBtn","Flash in Game",(int)this,"FlashBtn",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"Load Lookup","",(int)this,"LoadLookup",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"Load","Load",(int)this,"Load",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"NewOperation","New",(int)this,"NewOperation",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"NoButton","No",(int)this,"No",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"OK","OK",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"OKButton","#PropertyDialog_OK",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"OKButton","#VGui_OK",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"OKButton","#vgui_cancel",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"OKButton","#vgui_ok",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"PushBack","Down",(int)this,"PushBack",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"Refresh","Refresh",0,(char *)0x0,1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"Reload","Reload",(int)this,"Reload",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"Save","Save",(int)this,"Save",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"SaveAs","Save As",(int)this,"SaveAs",1);
    piVar4 = FUN_1029c040(pvVar3,(int)this,"YesButton","Yes",(int)this,"Yes",1);
    piVar4 = FUN_1029f6d0(pvVar3,(int)this,"Enable","Enable",1);
    piVar4 = FUN_1029f6d0(pvVar3,(int)this,"EnableEntities","Enable Entities",1);
    piVar4 = FUN_1029f6d0(pvVar3,(int)this,"Exclude","Exclude",1);
    piVar4 = FUN_102a99e0(pvVar2,(int)this,"FileNameLabel",pcVar6,1);
    piVar4 = FUN_102a99e0(pvVar3,(int)this,(char *)0x0,"",1);
    piVar4 = FUN_102accb0(pvVar5,(int)pvVar3,"Browser",1);
    piVar4 = FUN_102b8000(pvVar3,(int)this,"DemoProgress",1);
    piVar4 = FUN_102b9090(pvVar3,(int)this,"DemoProgress",1);
    piVar4 = FUN_102b9090(pvVar3,(int)this,"DemoSpeedScale",1);
    piVar4 = FUN_102b9090(pvVar3,(int)this,"skyColorBlue",1);
    piVar4 = FUN_102b9090(pvVar3,(int)this,"skyColorGreen",1);
    piVar4 = FUN_102b9090(pvVar3,(int)this,"skyColorRed",1);
    piVar4 = FUN_102b9090(pvVar3,(int)this,"skyColormieBlue",1);
    piVar4 = FUN_102b9090(pvVar3,(int)this,"skyColormieGreen",1);
    piVar4 = FUN_102b9090(pvVar3,(int)this,"skyColormieRed",1);
    piVar4 = FUN_102ba640(pvVar3,(int)this,"HorizScrollBar",'\0',1);
    piVar4 = FUN_102ba640(pvVar3,(int)this,"PanelListPanelVScroll",'\x01',1);
    piVar4 = FUN_102ba640(pvVar3,(int)this,"ScrollBar",'\x01',1);
    piVar4 = FUN_102ba640(pvVar3,(int)this,"VertScrollBar",'\x01',1);
    piVar4 = FUN_102c1b60(pvVar3,0,"ListImage",1);
    piVar4 = FUN_102ccf20(pvVar3,(int)this,"TreeNodeText",*(undefined4 *)((int)this + 0x1a8),param_3
    piVar4 = FUN_102dcae0(pvVar3,"");
    piVar4 = FUN_102dcae0(pvVar3,"+");
    piVar4 = FUN_102e0bc0(pvVar3,(int)this,"dragdroptab","",(char *)0x0,
    piVar4 = FUN_102e0e80(pvVar3,(int)this,"Sheet",'\0',1,1);
    piVar4 = FUN_102f9500(pvVar3,(int)this,"TeamScores",(int *)0x1);
    piVar4 = FUN_102f9900(pvVar3,(int)this,"WinHeader",1);
    piVar4 = FUN_102f9cc0(pvVar3,(int)this,"WinPersonal",1);
    piVar4 = FUN_102f9f60(pvVar3,(int)this,"WinScores",1);
    piVar4 = FUN_10307200(pvVar3,(int)this,"ModelPanel",1);
    piVar4 = FUN_10317120(pvVar3,(int)this,this,"dragdroptab","",(char *)0x0,
    piVar4 = FUN_103173e0(pvVar3,(int)this,"Sheet",'\0',param_3,param_4,1);
    piVar4 = FUN_103a80c0(pvVar3,0,"ListImage",1);
    piVar4 = FUN_103a8fb0(pvVar3,(int)this,(char *)0x0,"",1);
    piVar4 = FUN_103d8f10(pvVar3,(int)this,"HorizScrollBar",'\0',1);
    piVar4 = FUN_103d8f10(pvVar3,(int)this,"PanelListPanelVScroll",'\x01',1);
    piVar4 = FUN_103d8f10(pvVar3,(int)this,"ScrollBar",'\x01',1);
    piVar4 = FUN_103d8f10(pvVar3,(int)this,"VertScrollBar",'\x01',1);
    piVar4 = FUN_103e18a0(pvVar3,(int)this,"TreeNodeText",*(undefined4 *)((int)this + 0x1a8),param_3
    piVar4 = FUN_103f0bb0(pvVar3,"");
    piVar4 = FUN_103f0bb0(pvVar3,"+");
    piVar4 = FUN_1043f640(pvVar3,(int)this,"ContentPanel",1);
    piVar4 = FUN_1043f640(pvVar3,(int)this,"bottombarblank",1);
    piVar4 = FUN_1043f640(pvVar3,(int)this,"topbar",1);
    piVar4 = FUN_10454240(pvVar2,(int)this,"FileNameLabel",pcVar6,1);
    piVar4 = FUN_10454240(pvVar3,(int)this,"LoadingLabel","",1);
    piVar4 = FUN_10454240(pvVar3,(int)this,"playerlabel","",1);
    piVar4 = FUN_10454240(pvVar3,(int)this,(char *)0x0,"",1);
    piVar4 = FUN_10454240(pvVar3,(int)this_00,"WaitLabel","#Game_WaitingUsers",1);
    piVar4 = FUN_104570e0(pvVar3,(int)this,"BotPrefixEntry",1);
    piVar4 = FUN_104570e0(pvVar3,(int)this,"TextMessage",1);
    piVar4 = FUN_10462790(pvVar2,(int)this,"CancelButton","#FileOpenDialog_Cancel",(int)this,
    piVar4 = FUN_10462790(pvVar2,(int)this,"FolderUpButton","",(int)this,(char *)0x0,1);
    piVar4 = FUN_10462790(pvVar2,(int)this,"NewFolderButton","",(int)this,(char *)0x0,1);
    piVar4 = FUN_10462790(pvVar2,(int)this,"OpenInExplorerButton","",(int)this,(char *)0x0,1);
    piVar4 = FUN_10462790(pvVar3,(int)this,"ApplyButton","#PropertyDialog_Apply",0,(char *)0x0,1);
    piVar4 = FUN_10462790(pvVar3,(int)this,"CancelButton","#PropertyDialog_Cancel",0,(char *)0x0,1);
    piVar4 = FUN_10462790(pvVar3,(int)this,"ConsoleSubmit","#Console_Submit",0,(char *)0x0,1);
    piVar4 = FUN_10462790(pvVar3,(int)this,"OKButton","#PropertyDialog_OK",0,(char *)0x0,1);
    piVar4 = FUN_10462790(pvVar3,(int)this,"OKButton","#VGui_OK",0,(char *)0x0,1);
    piVar4 = FUN_10462790(pvVar3,(int)this,"ok","#PropertyDialog_OK",0,(char *)0x0,1);
    piVar4 = FUN_10464a30(pvVar3,(int)this,"ScoreBackground",1);
    piVar4 = FUN_10464a30(pvVar3,0,"ListImage",1);
    piVar4 = FUN_10464a30(this_00,(int)this,"RadialButtonImage",1);
    piVar4 = FUN_104674c0(pvVar3,(int)this,"BotChatterCombo",4,'\0',1);
    piVar4 = FUN_104674c0(pvVar3,(int)this,"BotJoinTeamCombo",3,'\0',1);
    piVar4 = FUN_1046a280(pvVar3,(int)this_00,"WaitList",1);
    piVar4 = FUN_1047c910(pvVar3,(int)this,"HorizScrollBar",'\0',1);
    piVar4 = FUN_1047c910(pvVar3,(int)this,"PanelListPanelVScroll",'\x01',1);
    piVar4 = FUN_1047c910(pvVar3,(int)this,"ScrollBar",'\x01',1);
    piVar4 = FUN_1047c910(pvVar3,(int)this,"SectionedScrollBar",'\x01',1);
    piVar4 = FUN_1047c910(pvVar3,(int)this,"VertScrollBar",'\x01',1);
    piVar4 = FUN_1047e0e0(pvVar3,(int)this,"TreeNodeText",*(undefined4 *)((int)this + 0x1a8),param_3
    piVar4 = FUN_1048d0f0(pvVar3,"");
    piVar4 = FUN_1048d0f0(pvVar3,"+");
    piVar4 = FUN_1049d5c0(pvVar3,(int)this,"dragdroptab","",(char *)0x0,
    piVar4 = FUN_1049d880(pvVar3,(int)this,"Sheet",'\0',1,1);
    piVar5 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_removeban",0,0);
    piVar5 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("teamplay_teambalanced_player",0,0);
    piVar5 = (int *)(**(code **)(*DAT_106cb7f4 + 0x170))("debugempty",&DAT_103236cf,0,0);
    piVar5 = (int *)(**(code **)(*piVar1 + 0x2c))("$forcecheap",0,0);
    piVar5 = (int *)(**(code **)(*piVar4 + 0x2c))("$basetexture",0,0);
    piVar5 = (int *)(**(code **)(*piVar4 + 0x2c))("$c0_x",0,0);
    piVar5 = (int *)(**(code **)(*piVar4 + 0x2c))("$c0_y",0,0);
    piVar5 = (int *)(**(code **)(*piVar4 + 0x2c))("$c0_z",0,0);
    piVar5 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"hammer_updateignorelist");
    piVar5 = (int *)FUN_10268900(param_1,(uint *)"panel",0);
    piVar5 = (int *)FUN_104235d0(local_8,(uint *)"particleSystemDefinitions");
    piVar5 = (int *)FUN_104d70b0(local_8,(uint *)"particleSystemDefinitions");
    piVar5 = (int *)FUN_104d70b0(this_00,(uint *)"container");
    piVar5 = (int *)FUN_104d70b0(this_00,(uint *)"version");
    piVar5 = FUN_100cb000(pvVar3,(int)this,"CurveEditor",1);
    piVar5 = FUN_100ccbf0(pvVar3,(int)this,"BlendFactorSlider",1);
    piVar5 = FUN_100ccbf0(pvVar3,(int)this,"CyanRedSlider",1);
    piVar5 = FUN_100ccbf0(pvVar3,(int)this,"MagentaGreenSlider",1);
    piVar5 = FUN_100ccbf0(pvVar3,(int)this,"YellowBlueSlider",1);
    piVar5 = FUN_101ab540((int *)this,param_1,(short)iVar3,(short)param_12,2,"cable/cable.vmt",5,
    piVar5 = FUN_10221790(pvVar4,(int)this,"m_pAllTextures","Show ALL textures",1);
    piVar5 = FUN_10221790(pvVar4,(int)this,"m_pShowTextureMemoryUsageOption",
    piVar5 = FUN_10221790(pvVar4,(int)this,"m_pViewTextures","View textures thumbnails",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"ColorEntry1",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"ColorEntry2",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"ColorEntry3",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"DemoSmoothEndFrame",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"DemoSmoothFixFrames",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"DemoSmoothGotoFrame",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"DemoSmoothStartFrame",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FarZText",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogColorBlueText",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogColorBlueTextSky",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogColorGreenText",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogColorGreenTextSky",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogColorRedText",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogColorRedTextSky",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogEndText",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogEndTextSky",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogStartText",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"FogStartTextSky",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"MaxFadeSize",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"MaxOccludeeSize",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"MinFadeSize",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"MinOccluderSize",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"Name",1);
    piVar5 = FUN_10295010(pvVar3,(int)this,"Text",1);
    piVar5 = FUN_10295010(pvVar4,(int)this,"BugDescription",1);
    piVar5 = FUN_10295010(pvVar4,(int)this,"BugEmail",1);
    piVar5 = FUN_10295010(pvVar4,(int)this,"BugIncludedFiles",1);
    piVar5 = FUN_10295010(pvVar4,(int)this,"BugTitle",1);
    piVar5 = FUN_10295010(pvVar4,(int)this,"FilteringTxt",1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"Cancel","Cancel",(int)this,"Cancel",1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"Cancel","Cancel",(int)this,"cancel",1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"Create","Create",(int)this,"Create",1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothCameraAtPoint","Set View",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothCancel","Cancel",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothGoto","Jump To",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothNextKey","+Key",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothNextTarget","+Target",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothOk","OK",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothPauseResume","Pause",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothPrevKey","-Key",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothPrevTarget","-Target",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothPreviewOriginal","Show Original",0,(char *)0x0
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothPreviewProcessed","Show Processed",0,
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothRedo","Redo",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothReload","Reload",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothRevert","Revert",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothRevertPoint","Revert Pt.",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothSave","Save",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothSaveKey","Save Key",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothSelect","Select",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothSetKeyFrame","Mark Keyframe",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothSetLookTarget","Mark Look Target",0,
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothStepBackward","<<",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothStepForward",">>",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"DemoSmoothUndo","Undo",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"HSVPickButton","HSV",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"No","No",(int)this,"no",1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"RGBPickButton","RGB",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"SelectionButton","Select",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar3,(int)this,"Yes","Yes",(int)this,"yes",1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugCancel","Cancel",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugChooseVMFFolder","Choose folder",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugClearForm","Clear Form",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugClearIncludedFiles","Clear files",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugIncludeFile","Include file...",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugSaveBSP","Include .bsp",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugSaveGame","Save game",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugSaveVMF","Include .vmf",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugSubmit","Submit",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"BugTakeShot","Take shot",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"CancelButton","#VGui_Cancel",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"CopyToClipboard","Copy to Clipboard",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"CreateButton","#VGui_CreateFolder",0,(char *)0x0,1);
    piVar5 = FUN_1029c040(pvVar4,(int)this,"SelectButton","#VGui_Select",0,(char *)0x0,1);
    piVar5 = FUN_1029f6d0(pvVar3,(int)this,"DeactivateOcclusion","",1);
    piVar5 = FUN_1029f6d0(pvVar4,(int)this,"FilteringChk","Filter: ",1);
    piVar5 = FUN_1029f6d0(pvVar4,(int)this,"ShowAlpha","Alpha",1);
    piVar5 = FUN_1029f6d0(pvVar4,(int)this,"ThumbWarnings","Warns",1);
    piVar5 = FUN_1029f6d0(pvVar4,(int)this,"resolvepath","Resolve Full Texture Path",1);
    piVar5 = FUN_1029f6d0(pvVar4,(int)this,"service","Render Targets and Special Textures",1);
    piVar5 = FUN_102a00c0(pvVar4,(int)this,"frame_caption",1);
    piVar5 = FUN_102a0d90(pvVar4,(int *)this,"frame_close","r",1);
    piVar5 = FUN_102a0d90(pvVar4,(int *)this,"frame_maximize","1",1);
    piVar5 = FUN_102a0d90(pvVar4,(int *)this,"frame_minimize","0",1);
    piVar5 = FUN_102a0d90(pvVar4,(int *)this,"frame_mintosystray",(char *)&param_5,1);
    piVar5 = FUN_102a0ea0(pvVar4,(int)this,"frame_menu",1);
    piVar5 = FUN_102a99e0(pvVar4,(int)this,"m_pCVarListLabel",
    piVar5 = FUN_102a99e0(pvVar4,(int)this,"m_pTotalUsageLabel","",1);
    piVar5 = FUN_102b7830(pvVar4,(int)this,"Collapse"," ",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FarZ",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogColorBlue",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogColorBlueSky",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogColorGreen",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogColorGreenSky",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogColorRed",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogColorRedSky",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogEnd",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogEndSky",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogStart",1);
    piVar5 = FUN_102b9090(pvVar3,(int)this,"FogStartSky",1);
    piVar5 = FUN_102ba640(pvVar4,(int)this,"MenuScrollBar",'\x01',1);
    piVar5 = FUN_10307200(pvVar3,(int)this,"ModelPanel",1);
    piVar5 = FUN_103145a0(pvVar3,(int)this,"CloseButton","X",(int)this,"OK",1);
    piVar5 = FUN_103145a0(pvVar4,*(int *)((int)this + 0x288),"Add","Add",(int)this,"wp add",1);
    piVar5 = FUN_103145a0(pvVar4,*(int *)((int)this + 0x288),"Clear","Clear",(int)this,"wp clear",1)
    piVar5 = FUN_103145a0(pvVar4,*(int *)((int)this + 0x288),"Initial","Initial",(int)this,
    piVar5 = FUN_103145a0(pvVar4,*(int *)((int)this + 0x288),"Reload","Reload",(int)this,"wp reload"
    piVar5 = FUN_103145a0(pvVar4,*(int *)((int)this + 0x288),"Remove","Remove",(int)this,"wp remove"
    piVar5 = FUN_103145a0(pvVar4,*(int *)((int)this + 0x288),"Save","Save",(int)this,"wp save",1);
    piVar5 = FUN_1031b030(pvVar4,(int)this,"DownArrow","",0,(char *)0x0,1);
    piVar5 = FUN_1031b030(pvVar4,(int)this,"UpArrow","",0,(char *)0x0,1);
    piVar5 = FUN_103d8f10(pvVar4,(int)this,"MenuScrollBar",'\x01',1);
    piVar5 = FUN_103f2cd0(pvVar4,(int)this,"frame_caption",1);
    piVar5 = FUN_103f39a0(pvVar4,(int *)this,"frame_close","r",1);
    piVar5 = FUN_103f39a0(pvVar4,(int *)this,"frame_maximize","1",1);
    piVar5 = FUN_103f39a0(pvVar4,(int *)this,"frame_minimize","0",1);
    piVar5 = FUN_103f39a0(pvVar4,(int *)this,"frame_mintosystray",(char *)&param_5,1);
    piVar5 = FUN_103f3ab0(pvVar4,(int)this,"frame_menu",1);
    piVar5 = FUN_1043f640(pvVar3,(int)this,"PnlLowerGarnish",1);
    piVar5 = FUN_1043f640(pvVar3,(int)this,"ProgressBar",1);
    piVar5 = FUN_1043f640(pvVar3,(int)this,"ProgressBarBorder",1);
    piVar5 = FUN_1043f640(pvVar3,(int)this,"ProgressBarSizer",1);
    piVar5 = FUN_10452a40(pvVar4,(int)this,"ContainerPanel",1);
    piVar5 = FUN_10454240(pvVar4,(int)this,"LblMessage","",1);
    piVar5 = FUN_104570e0(pvVar3,(int)this,"ChatEntry",1);
    piVar5 = FUN_104570e0(pvVar3,(int)this,"GammaEntry",1);
    piVar5 = FUN_104570e0(pvVar3,(int)this,"Text",1);
    piVar5 = FUN_104570e0(pvVar3,(int)this,"TxtPasswordEntry",1);
    piVar5 = FUN_10462790(pvVar3,(int)this,"CallVoteButton","CallVote",(int)this,"CallVote",1);
    piVar5 = FUN_10462790(pvVar3,(int)this,"OKButton","#vgui_ok",0,(char *)0x0,1);
    piVar5 = FUN_10464a30(pvVar3,(int)this,"ImagePlus",1);
    piVar5 = FUN_10464a30(pvVar4,(int)this,"WorkingAnim",1);
    piVar5 = FUN_1046a280(pvVar4,*(int *)((int)this + 0x288),"WaypointList",1);
    piVar5 = FUN_104797d0(pvVar3,(int)this,"SliderDamage",1);
    piVar5 = FUN_1047c910(pvVar3,(int)this,"ScrVerticalScroll",'\x01',1);
    piVar5 = FUN_1047c910(pvVar4,(int)this,"MenuScrollBar",'\x01',1);
    piVar5 = FUN_104847c0(pvVar4,(int)this,"frame_caption",1);
    piVar5 = FUN_10485490(pvVar4,(int *)this,"frame_close","r",1);
    piVar5 = FUN_10485490(pvVar4,(int *)this,"frame_maximize","1",1);
    piVar5 = FUN_10485490(pvVar4,(int *)this,"frame_minimize","0",1);
    piVar5 = FUN_10485490(pvVar4,(int *)this,"frame_mintosystray",(char *)&param_5,1);
    piVar5 = FUN_104855a0(pvVar4,(int)this,"frame_menu",1);
    piVar6 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_addban",0,0);
    piVar6 = (int *)(**(code **)(*piVar1 + 0x2c))("$forceexpensive",0,0);
    piVar6 = (int *)(**(code **)(*piVar4 + 0x2c))("$ALPHADEPTH",0,0);
    piVar6 = (int *)(**(code **)(*piVar4 + 0x2c))("$bluramount",0,1);
    piVar6 = (int *)(**(code **)(*piVar4 + 0x2c))("$refractamount",0,1);
    piVar6 = FUN_102239a0(pvVar5,(int)this,"Hierarchy",1);
    piVar6 = FUN_1029c040(pvVar5,(int)this,"GotoButton","",(int)this,"GotoButton",1);
    piVar6 = FUN_1029c040(pvVar5,(int)this,"RedoSorting","",(int)this,"redosort",1);
    piVar6 = FUN_1029c040(pvVar5,(int)this,"StepBack","",(int)this,"StepBack",1);
    piVar6 = FUN_1029c040(pvVar5,(int)this,"StepForward","",(int)this,"StepForward",1);
    piVar6 = FUN_1029deb0(pvVar5,(int)this,"CategoryCombo",5,'\0',1);
    piVar6 = FUN_1029deb0(pvVar5,(int)this,"SortCombo",5,'\0',1);
    piVar6 = FUN_1029f6d0(pvVar5,(int)this,"HierarchicalViewSelection","",1);
    piVar6 = FUN_1029f6d0(pvVar5,(int)this,"VerboseCheckbox","",1);
    piVar6 = FUN_102a99e0(pvVar5,(int)this,"PlaybackLabel","",1);
    piVar6 = FUN_102ba640(pvVar5,(int)this,"PlaybackScroll",'\0',1);
    piVar6 = FUN_10466ac0(pvVar4,(int)this,"EnableBotsCheck","",1);
    piVar6 = FUN_10489550(pvVar4,(int)this,"CTPlayers",1);
    piVar6 = FUN_10489550(pvVar4,(int)this,"TerPlayers",1);
    piVar6 = FUN_10489550(pvVar5,(int)this,"PlayerList",1);
    piVar7 = (int *)(**(code **)(*DAT_106cb7f4 + 0x170))(local_43c,"CubeMap textures",1,0);
    piVar7 = (int *)FUN_10135420("ai_network_build_helper",-1,'\x01');
    piVar7 = (int *)FUN_103980c0(pcVar1,(int)"player_changename");
    piVar7 = FUN_101e54e0("Steam");
    piVar8 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("player_death",0,0);
    piVar8 = (int *)(**(code **)(*piVar3 + 0x2c))("$farPlane",&local_5,1);
    piVar8 = (int *)(**(code **)(*piVar3 + 0x2c))("$nearPlane",&local_5,1);
    piVar8 = (int *)(*pcVar7)("BugReporter005",0);
    piVar8 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"info_player_start");
    piVar8 = (int *)FUN_10243620(local_14,(uint *)"operators");
    piVar8 = FUN_1029c040(pvVar3,param_1,"ApplyButton","&Apply",0,(char *)0x0,1);
    piVar8 = FUN_1029c040(pvVar3,param_1,"DeletePanelButton","Delete",0,(char *)0x0,1);
    piVar8 = FUN_1029c040(pvVar3,param_1,"ExitButton","&Exit",0,(char *)0x0,1);
    piVar8 = FUN_1029c040(pvVar3,param_1,"Localization","&Reload Localization",0,(char *)0x0,1);
    piVar8 = FUN_1029c040(pvVar3,param_1,"NextChild","Next",param_1,(char *)0x0,1);
    piVar8 = FUN_1029c040(pvVar3,param_1,"PrevChild","Prev",param_1,(char *)0x0,1);
    piVar8 = FUN_1029c040(pvVar3,param_1,"SaveButton","&Save",0,(char *)0x0,1);
    piVar8 = FUN_102a99e0(pvVar3,param_1,"StatusLabel","[nothing currently selected]",1);
    piVar8 = FUN_102b6ea0(pvVar3,param_1,"VarsButton","Variables",1);
    piVar8 = FUN_103a46f0(pvVar3,param_1,"ApplyButton","&Apply",0,(char *)0x0,1);
    piVar8 = FUN_103a46f0(pvVar3,param_1,"DeletePanelButton","Delete",0,(char *)0x0,1);
    piVar8 = FUN_103a46f0(pvVar3,param_1,"ExitButton","&Exit",0,(char *)0x0,1);
    piVar8 = FUN_103a46f0(pvVar3,param_1,"Localization","&Reload Localization",0,(char *)0x0,1);
    piVar8 = FUN_103a46f0(pvVar3,param_1,"NextChild","Next",param_1,(char *)0x0,1);
    piVar8 = FUN_103a46f0(pvVar3,param_1,"PrevChild","Prev",param_1,(char *)0x0,1);
    piVar8 = FUN_103a46f0(pvVar3,param_1,"SaveButton","&Save",0,(char *)0x0,1);
    piVar8 = FUN_103a8fb0(pvVar3,param_1,"StatusLabel","[nothing currently selected]",1);
    piVar8 = FUN_103ce890(pvVar3,param_1,"VarsButton","Variables",1);
    piVar8 = FUN_10454240(pvVar3,param_1,"StatusLabel","[nothing currently selected]",1);
    piVar8 = FUN_10462790(pvVar3,param_1,"ApplyButton","&Apply",0,(char *)0x0,1);
    piVar8 = FUN_10462790(pvVar3,param_1,"DeletePanelButton","Delete",0,(char *)0x0,1);
    piVar8 = FUN_10462790(pvVar3,param_1,"ExitButton","&Exit",0,(char *)0x0,1);
    piVar8 = FUN_10462790(pvVar3,param_1,"Localization","&Reload Localization",0,(char *)0x0,1);
    piVar8 = FUN_10462790(pvVar3,param_1,"NextChild","Next",param_1,(char *)0x0,1);
    piVar8 = FUN_10462790(pvVar3,param_1,"PrevChild","Prev",param_1,(char *)0x0,1);
    piVar8 = FUN_10462790(pvVar3,param_1,"SaveButton","&Save",0,(char *)0x0,1);
    piVar8 = FUN_10476ee0(pvVar3,param_1,"VarsButton","Variables",1);
    piVar9 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("nav_blocked",0,0);
    ppcVar1 = FUN_101214f0(&local_c,"func_brush");
    ppcVar1[1] = "";
    ppcVar2 = FUN_101214f0((char **)&local_8,"models/characters/ct_helipilot.mdl");
    ppcVar2 = FUN_101214f0((char **)&local_8,"models/error.mdl");
    ppcVar2[10] = "j";
    ppcVar2[1] = "AddBroadcastTeamTarget";
    ppcVar2[1] = "ChangeTeam";
    ppcVar2[1] = "ConnectOutputToScript";
    ppcVar2[1] = "CreateByClassname";
    ppcVar2[1] = "DisconnectOutputFromScript";
    ppcVar2[1] = "EstimateLength";
    ppcVar2[1] = "FindByClassname";
    ppcVar2[1] = "FindByClassnameNearest";
    ppcVar2[1] = "FindByClassnameWithin";
    ppcVar2[1] = "FindByModel";
    ppcVar2[1] = "FindByName";
    ppcVar2[1] = "FindByNameNearest";
    ppcVar2[1] = "FindByNameWithin";
    ppcVar2[1] = "FindByTarget";
    ppcVar2[1] = "FindInSphere";
    ppcVar2[1] = "First";
    ppcVar2[1] = "GetAbsOrigin";
    ppcVar2[1] = "GetAbsVelocity";
    ppcVar2[1] = "GetClassname";
    ppcVar2[1] = "GetEntityNameAsCStr";
    ppcVar2[1] = "GetHealth";
    ppcVar2[1] = "GetMaxHealth";
    ppcVar2[1] = "GetPreTemplateName";
    ppcVar2[1] = "GetScriptId";
    ppcVar2[1] = "GetScriptOwnerEntity";
    ppcVar2[1] = "GetScriptScope";
    ppcVar2[1] = "GetTeamNumber";
    ppcVar2[1] = "IsPaused";
    ppcVar2[1] = "IsPlayingBack";
    ppcVar2[1] = "IsSequenceFinished";
    ppcVar2[1] = "KeyValueFromFloat";
    ppcVar2[1] = "KeyValueFromInt";
    ppcVar2[1] = "KeyValueFromString";
    ppcVar2[1] = "KeyValueFromVector";
    ppcVar2[1] = "LookupAttachment";
    ppcVar2[1] = "RemoveBroadcastTeamTarget";
    ppcVar2[1] = "ScriptEmitSound";
    ppcVar2[1] = "ScriptEyePosition";
    ppcVar2[1] = "ScriptFindKey";
    ppcVar2[1] = "ScriptFindNamedEntity";
    ppcVar2[1] = "ScriptFirstMoveChild";
    ppcVar2[1] = "ScriptGetAngles";
    ppcVar2[1] = "ScriptGetAttachmentAngles";
    ppcVar2[1] = "ScriptGetAttachmentOrigin";
    ppcVar2[1] = "ScriptGetBoundingMaxs";
    ppcVar2[1] = "ScriptGetBoundingMins";
    ppcVar2[1] = "ScriptGetFirstSubKey";
    ppcVar2[1] = "ScriptGetForward";
    ppcVar2[1] = "ScriptGetFov";
    ppcVar2[1] = "ScriptGetKeyValueBool";
    ppcVar2[1] = "ScriptGetKeyValueFloat";
    ppcVar2[1] = "ScriptGetKeyValueInt";
    ppcVar2[1] = "ScriptGetKeyValueString";
    ppcVar2[1] = "ScriptGetLeft";
    ppcVar2[1] = "ScriptGetLocalAngularVelocity";
    ppcVar2[1] = "ScriptGetModelKeyValues";
    ppcVar2[1] = "ScriptGetModelName";
    ppcVar2[1] = "ScriptGetMoveParent";
    ppcVar2[1] = "ScriptGetNextKey";
    ppcVar2[1] = "ScriptGetOldestScene";
    ppcVar2[1] = "ScriptGetRootMoveParent";
    ppcVar2[1] = "ScriptGetSceneByIndex";
    ppcVar2[1] = "ScriptGetUp";
    ppcVar2[1] = "ScriptIsKeyValueEmpty";
    ppcVar2[1] = "ScriptIsPlayerNoclipping";
    ppcVar2[1] = "ScriptLoadSceneFromString";
    ppcVar2[1] = "ScriptNextMovePeer";
    ppcVar2[1] = "ScriptReleaseKeyValues";
    ppcVar2[1] = "ScriptSetAngles";
    ppcVar2[1] = "ScriptSetForward";
    ppcVar2[1] = "ScriptSetFov";
    ppcVar2[1] = "ScriptSetLocalAngularVelocity";
    ppcVar2[1] = "ScriptSetOrigin";
    ppcVar2[1] = "ScriptSetOwner";
    ppcVar2[1] = "ScriptSetPoseParameter";
    ppcVar2[1] = "ScriptSetSize";
    ppcVar2[1] = "ScriptSoundDuration";
    ppcVar2[1] = "ScriptUtilRemove";
    ppcVar2[1] = "SetAbsOrigin";
    ppcVar2[1] = "SetAbsVelocity";
    ppcVar2[1] = "SetBodygroup";
    ppcVar2[1] = "SetHealth";
    ppcVar2[1] = "SetMaxHealth";
    ppcVar2[1] = "SetModel";
    ppcVar2[1] = "SetScriptOwnerEntity";
    ppcVar2[1] = "VScriptPrecacheScriptSound";
    ppcVar2[1] = "ValidateScriptScope";
    ppcVar2[1] = "WorldSpaceCenter";
    ppcVar2[1] = "entindex";
    ppcVar2[2] = "";
    ppcVar2[2] = "@";
    ppcVar2[2] = "Adds a team (by index) to the broadcast list";
    ppcVar2[2] = "Ask whether the main sequence is done playing";
    ppcVar2[2] = "Begin an iteration over the list of entities";
    ppcVar2[2] = "Creates an entity by classname";
    ppcVar2[2] = "Ensure that an entity\'s script scope has been created";
    ppcVar2[2] = "Find entities by class name nearest to a point.";
    ppcVar2[2] = "Find entities by name nearest to a point.";
    ppcVar2[2] = "Get a KeyValue class instance on this entity\'s model";
    ppcVar2[2] = "Get a vector containing max bounds, centered on object";
    ppcVar2[2] = "Get a vector containing min bounds, centered on object";
    ppcVar2[2] = "Get entity pitch, yaw, roll as a vector";
    ppcVar2[2] = "Get the attachement id\'s angles as a p,y,r vector";
    ppcVar2[2] = "Get the attachement id\'s origin vector";
    ppcVar2[2] = "Get the entity name stripped of template unique decoration";
    ppcVar2[2] = "Get the forward vector of the entity";
    ppcVar2[2] = "Get the left vector of the entity";
    ppcVar2[2] = "Get the local angular velocity - returns a vector of pitch,yaw,roll";
    ppcVar2[2] = "Get the named attachement id";
    ppcVar2[2] = "Get the up vector of the entity";
    ppcVar2[2] = "Get vector to center of object - absolute coords";
    ppcVar2[2] = "Get vector to eye position - absolute coords";
    ppcVar2[2] = "Gets this entity\'s owner";
    ppcVar2[2] = "Gets this entity\'s team";
    ppcVar2[2] = "Given a KeyValues object and a key name, return associated bool value";
    ppcVar2[2] = "Given a KeyValues object and a key name, return associated float value";
    ppcVar2[2] = "Given a KeyValues object and a key name, return associated integer value";
    ppcVar2[2] = "Given a KeyValues object and a key name, return associated string value";
    ppcVar2[2] = "Given a KeyValues object and a key name, return true if key name has no value";
    ppcVar2[2] = "Given a KeyValues object, return the first sub key object";
    ppcVar2[2] = "Given a KeyValues object, return the next key object in a sub key group";
    ppcVar2[2] = "Given a root KeyValues object, release its contents";
    ppcVar2[2] = "If in hierarchy, retrieves the entity\'s parent";
    ppcVar2[2] = "If in hierarchy, walks up the hierarchy to find the root parent";
    ppcVar2[2] = "If this scene is currently paused.";
    ppcVar2[2] = "If this scene is currently playing.";
    ppcVar2[2] = "Plays a sound from this entity.";
    ppcVar2[2] = "Precache a sound for later playing.";
    ppcVar2[2] = "Removes a connected script function from an I/O event.";
    ppcVar2[2] = "Removes a team (by index) from the broadcast list";
    ppcVar2[2] = "Retrieve the script-side data associated with an entity";
    ppcVar2[2] = "Returns float duration of the sound. Takes soundname and optional actormodelname."
    ppcVar2[2] = "Returns length of this scene in seconds.";
    ppcVar2[2] = "Returns the instance of the oldest active scene entity (if any).";
    ppcVar2[2] = "Returns the instance of the scene entity at the specified index.";
    ppcVar2[2] = "Returns the name of the model";
    ppcVar2[2] = "Returns true if the player is in noclip mode.";
    ppcVar2[2] = "Set entity pitch, yaw, roll";
    ppcVar2[2] = "Set the local angular velocity - takes float pitch,yaw,roll velocities";
    ppcVar2[2] = "Set the orientation of the entity to have this forward vector";
    ppcVar2[2] = "Set the specified pose parameter to the specified value";
    ppcVar2[2] = "SetAbsOrigin";
    ppcVar2[2] = "Sets a bodygroup";
    ppcVar2[2] = "Sets this entity\'s owner";
    ppcVar2[2] = "get camera\'s current fov setting as integer";
    ppcVar2[2] = "given a dummy scene name and a vcd string, load the scene";
    ppcVar2[2] = "given an entity reference, such as !target, get actual entity from scene object";
    ppcVar2[2] = "set camera\'s current fov in integer degrees and fov change rate as float";
    ppcVar3[1] = "ScriptGetPlayerSpeechDuration";
    ppcVar3[1] = "ScriptIsPlayerSpeaking";
    ppcVar3[2] = "Returns the number of seconds the player has been continuously speaking.";
    ppcVar3[2] = "Returns whether the player specified is speaking.";
    ppcVar4 = FUN_101214f0(&local_8,"sprites/light_glow02_add_noz.vmt");
    ppcVar5 = FUN_101214f0((char **)&local_10,"models/characters/ct_helipilot.mdl");
    ppiVar1 = (int **)FUN_103af9c0(PTR_DAT_106cd710,(undefined4 *)"error");
    ppvVar1 = (void **)(**(code **)(*DAT_107c09d4 + 0x3c))("cl_updaterate");
    ppvVar1 = (void **)(**(code **)(*DAT_107c09d4 + 0x3c))("sv_client_max_interp_ratio");
    ppvVar1 = (void **)(**(code **)(*DAT_107c09d4 + 0x3c))("sv_client_min_interp_ratio");
    ppvVar1 = (void **)(**(code **)(*DAT_107c09d4 + 0x3c))("sv_client_predict");
    ppvVar1 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)ppvVar1,"trigger_changelevel");
    ppvVar1 = (void **)FUN_10135420("aitesthull",-1,'\x01');
    ppvVar1 = (void **)FUN_10135420("prop_hostage_suitcase",-1,'\x01');
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"BtnBrowseSpraypaint",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"BtnCancel",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpAllowCustomContent",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpAllowFreeLook",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpAspectRatio",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpColorBlind",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpDisplayMode",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpGameInstructor",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpGore",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpLanGamesDiscovery",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpOutputDevice",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpResolution",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpSpraypaint",0);
    ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"LogoImage",0);
    ppvVar1 = (void **)FUN_10444d70(this,(byte *)"PlayerModel",1);
    ppvVar1 = (void **)FUN_10444d70(this,(byte *)"ScrollingChild",0);
    ppvVar2 = (void **)FUN_10135420("prop_rocket_crate",-1,'\x01');
    ppvVar2 = (void **)FUN_10135420("prop_truck_load",-1,'\x01');
    ppvVar2 = (void **)FUN_10135420("wheeled_controllable",-1,'\x01');
    ppvVar2 = (void **)FUN_10218bc0(this,(byte *)"QuickMatchCoOp");
    ppvVar2 = (void **)FUN_10444d70(param_1,(byte *)"MapMissionInfo_Desc",1);
    ppvVar2 = (void **)FUN_10444d70(this,(byte *)"LabelContainer",0);
    ppvVar2 = (void **)FUN_10444d70(this,(byte *)"LblInfoName",0);
    ppvVar2 = (void **)FUN_10444d70(this,(byte *)"UserAvatar",1);
    ppvVar3 = (void **)FUN_10135420("boat_controllable",-1,'\x01');
    ppvVar3 = (void **)FUN_10135420("env_particlesmokegrenade",-1,'\x01');
    ppvVar3 = (void **)FUN_10135420("env_projectedtexture",-1,'\x01');
    ppvVar3 = (void **)FUN_10135420("wheeled_controllable",-1,'\x01');
    ppvVar3 = (void **)FUN_10444d70(this,(byte *)"AcceptButton",0);
    ppvVar3 = (void **)FUN_10444d70(this,(byte *)"DeclineButton",0);
    ppvVar3 = (void **)FUN_10444d70(this,(byte *)"LegacyExplanation",0);
    ppvVar3 = (void **)FUN_10444d70(this,(byte *)"TriggerButton",0);
    ppvVar4 = (void **)FUN_100a7bb0("env_steam",(undefined8 *)((int)this + 0x7bc),&local_30,piVar1);
    ppvVar4 = (void **)FUN_101ffc80(pvVar9,(int)this,"TIGameOptions",1);
    ppvVar4 = (void **)FUN_1020af60(pvVar9,(int)this,"Achievements",1);
    ppvVar4 = (void **)FUN_1020b830(pvVar9,(int)this,"AdvancedVideo",1);
    ppvVar4 = (void **)FUN_1020ec00(pvVar9,(int)this,"AudioVideo",1);
    ppvVar4 = (void **)FUN_1020f870(pvVar9,(int)this,"ControllerOptions",1);
    ppvVar4 = (void **)FUN_10210990(pvVar9,(int)this,"ControllerOptionsButtons",1);
    ppvVar4 = (void **)FUN_10212a40(pvVar9,(int)this,"ControllerOptionsSticks",1);
    ppvVar4 = (void **)FUN_10217aa0(pvVar9,(int)this,"FadeOutStartGame",1);
    ppvVar4 = (void **)FUN_102181d0(pvVar9,(int)this,"FadeOutToEconUI",1);
    ppvVar4 = (void **)FUN_1021b390(pvVar9,(int)this,"GenericConfirmation",1);
    ppvVar4 = (void **)FUN_1021e110(pvVar9,(int)this,"GenericWaitScreen",1);
    ppvVar4 = (void **)FUN_102220b0(pvVar9,(int)this,"InGameMainMenu",1);
    ppvVar4 = (void **)FUN_102232d0(pvVar9,(int)this,"KeyBindings",1);
    ppvVar4 = (void **)FUN_10224ec0(pvVar9,(int)this,"LoadingProgress",1);
    ppvVar4 = (void **)FUN_10227760(pvVar9,(int)this,"MoviePlayer",1);
    ppvVar4 = (void **)FUN_10228450(pvVar9,(int)this,"Multiplayer",1);
    ppvVar4 = (void **)FUN_10229bf0(pvVar9,(int)this,"Options",1);
    ppvVar4 = (void **)FUN_1022a140(pvVar9,(int)this,"PasswordEntry",1);
    ppvVar4 = (void **)FUN_1022c3c0(pvVar9,(int)this,"SoundTest",1);
    ppvVar4 = (void **)FUN_1022c820(pvVar9,(int)this,"TransitionScreen",1);
    ppvVar4 = (void **)FUN_1022ccf0(pvVar9,(int)this,"Video",1);
    ppvVar4 = (void **)FUN_1022e5e0(pvVar9,(int)this,"VoteOptions",1);
    ppvVar4 = (void **)FUN_1022eaa0(pvVar9,(int)this,"XboxLIVE",1);
    ppvVar4 = (void **)FUN_1023c720(pvVar9,(int)this,"KeyboardMouse",1);
    ppvVar4 = (void **)FUN_10268900(param_1,(uint *)"panel",0);
    ppvVar4 = FUN_10215e70(pvVar9,(int)this,"ExtrasDialog",1);
    ppvVar5 = (void **)FUN_10444d70((void *)(param_1 + -0x26c),(byte *)"specbutton",0);
    ppvVar5 = (void **)FUN_10444d70(local_8,(byte *)"LoadingProgess",0);
    ppvVar5 = (void **)FUN_10444d70(piVar2,(byte *)"CancelButton",0);
    ppvVar7 = (void **)FUN_10444d70(pvVar8,(byte *)"WorkingAnim",0);
    psVar6 = FUN_1038d930(local_14,(int *)"TLK_HELLO");
    psVar6 = FUN_1038d930(local_14,(int *)"TLK_HELLO_NPC");
    puVar1 = (uint *)FUN_1014fb90(local_8,(int *)"effects/yellowflare");
    puVar1 = (uint *)FUN_1014fb90(local_8,(int *)"particle/smoke-1");
    puVar1 = (uint *)FUN_1014fb90(this_00,(int *)"effects/spark");
    puVar1 = (undefined4 *)FUN_100ff990(local_40,"m_flEncodedController[0]",0x1494,4,0,FUN_100ffbf0)
    puVar1 = (undefined4 *)FUN_100ff990(local_40,"m_flPoseParameter[0]",0x3184,4,0,FUN_100ffbf0);
    puVar1 = (undefined4 *)FUN_100ff990(local_40,"m_flValues[0]",8,4,0,FUN_100ffbf0);
    puVar1 = (undefined4 *)FUN_100ff990(local_40,"m_nValueCounts[0]",0x108,4,0,FUN_100ffbf0);
    puVar1 = FUN_100b10f0(local_120,(byte *)"#GameUI_DownloadFilter_%s");
    puVar1 = FUN_100b10f0(local_120,(byte *)"ColorBlind%d");
    puVar1 = FUN_100b10f0(local_120,(byte *)"MpLanGames%sabled");
    puVar1 = FUN_100d0740((byte *)"host_writeconfig_ss %d");
    puVar1 = FUN_100d0740((byte *)"models/props_tools/fire_extinguisher-1_p%d.mdl");
    puVar1 = FUN_100d0740((byte *)"models/vehicles/planes/777/engine_gibs/shell-%d.mdl");
    puVar1 = FUN_100ff9f0(local_40,"m_AddonModelWeaponIDs[0]",0x47d8,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_NetworkWaitList[0]",0x404d8,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_NetworkWaitList_LoadPercent[0]",0x4054c,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_RawPanelBitVec[ 0 ]",0x1494,1,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_VehicleFlags [0]",0x3524,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_bConnected[0]",0x1654,1,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_chAreaBits[0]",4,1,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_chAreaPortalBits[0]",0x24,1,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_chCurrentSlideLists[0]",0x1558,1,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_chPoseIndex[0]",&DAT_00001450,1,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_fireXDelta[0]",&DAT_0000144c,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_fireYDelta[0]",0x15dc,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_fireZDelta[0]",0x176c,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iAmmo[0]",0x3794,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iControlPointParents[0]",0x1694,1,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iDeaths[0]",0x15d0,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iExperience[0]",0x1844,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iExperience_Delta[0]",0x18c8,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iFixUserId[0]",0x17c0,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iFrags[0]",0x154c,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iGrenades[0]",0x454c,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iHealth[0]",0x1720,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iPing[0]",0x14c8,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_iServerControlPointAssignments[0]",0x1584,1,0,(undefined *)0x0
    puVar1 = FUN_100ff9f0(local_40,"m_iTeam[0]",0x1678,4,0,FUN_100b6c30);
    puVar1 = FUN_100ff9f0(local_40,"m_nAttachIndex[0]",&DAT_0000148c,4,0,(undefined *)0x0);
    puVar1 = FUN_100ff9f0(local_40,"m_nVoteOptionCount[0]",&DAT_00001454,4,0,FUN_1027b1e0);
    puVar1 = FUN_10139f70(this,"CHudMenu",1);
    puVar1 = FUN_1013b420(this,"CHudMessage",1);
    puVar1 = FUN_1014f730(this,"snowfall");
    puVar1 = FUN_10177470(local_40,"m_bAlive[0]",0x16fc,1);
    puVar1 = FUN_10177490(local_40,"m_hAttachEntity[0]",&DAT_00001464,4,FUN_10177570);
    puVar1 = FUN_10177490(local_40,"m_hControlPointEnts[0]",0x1598,4,FUN_10177570);
    puVar1 = FUN_10177490(local_40,"m_hMyWeapons[0]",0x37d0,4,FUN_10177570);
    puVar1 = FUN_10177490(local_40,"m_hProps[0]",0x1440,4,FUN_10177570);
    puVar1 = FUN_10177490(local_40,"m_pPassengers[0]",0x33d0,4,FUN_10177570);
    puVar1 = FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"Announcer",FUN_1024f530);
    puVar1 = FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"Radio",FUN_1024f570);
    puVar1 = FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"SayText",FUN_1024f5f0);
    puVar1 = FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"SayText2",FUN_1024f5b0);
    puVar1 = FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"TextMsg",FUN_1024f630);
    puVar1 = FUN_101f6800((byte *)"weapon_%s");
    puVar1 = FUN_10212cf0(local_34 * 2,"CM_DispTreeLeafnum",'\0');
    puVar1 = FUN_102136f0(this,0,(char *)0x0,"DialogListButton",0,(char *)0x0,1);
    puVar1 = FUN_1021f290(this,0,(char *)0x0,"HybridButton",0,(char *)0x0,1);
    puVar1 = FUN_1023d1e0(this,"CHudClock",1);
    puVar1 = FUN_1023de10(this,"CTIFreezePanel",1);
    puVar1 = FUN_1023f060(this,"CHudFullscreen",1);
    puVar1 = FUN_10244510(this,"CHudGrenades",1);
    puVar1 = FUN_10244b40(this,"CHudHoldingObject",1);
    puVar1 = FUN_10245440(this,"CHUDMissionStatus",1);
    puVar1 = FUN_10246820(this,"CHudOBJLocator",1);
    puVar1 = FUN_1024c5c0(this,"CHudHealth",1);
    puVar1 = FUN_1024dc90(this,"CTIHudChat",1);
    puVar1 = FUN_1024f670(this,"CHudTICrosshair",1);
    puVar1 = FUN_10254f90(this,"CHudDamageIndicator",1);
    puVar1 = FUN_10255af0(this,"TIHudDeathNotice",1);
    puVar1 = FUN_10257b50(this,"CHudDisplayBonuses",1);
    puVar1 = FUN_1025a760(this,"CHudGamePanel",1);
    puVar1 = FUN_1025d7a0(this,"CHUDPlayerHitOutput",1);
    puVar1 = FUN_1025e5d0(this,"CHudWeaponSelection",1);
    puVar1 = FUN_1025f880(this,"CHUDHealthVehicle",1);
    puVar1 = FUN_102619a0(this,"CHudVoiceSelfStatus",1);
    puVar1 = FUN_10261b00(this,"CHudVoiceStatus",1);
    puVar1 = FUN_10263460(this,"CHudVote",1);
    puVar1 = FUN_10267600(this,"CHudAmmo",1);
    puVar1 = FUN_10267d30(this,"Command",(uint *)"Command","SelectedItemChanged");
    puVar1 = FUN_10267d30(this_00,"Command",(uint *)"Command","SelectedItemChanged");
    puVar1 = FUN_10267d30(this_00,"Command",(uint *)"command",param_1);
    puVar1 = FUN_10267d30(this_00,"SetText",(uint *)&DAT_10353100,param_1);
    puVar1 = FUN_10267db0(this_00,"OnCursorMoved",(uint *)&DAT_10334008,param_1,
    puVar1 = FUN_10267db0(this_00,"OnRequestFocus",(uint *)"subFocus",param_1,(uint *)"defaultPanel"
    puVar1 = FUN_10267e50(this,"ScrollBarSliderMoved",(uint *)"position",param_1[0x73]);
    puVar1 = FUN_10267e50(this,"ScrollBarSliderReleased",(uint *)"position",param_1[0x73]);
    puVar1 = FUN_10267e50(this_00,"ClickPanel",(uint *)"index",*(uint *)((int)this + 0x1a8));
    puVar1 = FUN_10267e50(this_00,"KeyCodeReleased",(uint *)&DAT_103c8ea4,param_1);
    puVar1 = FUN_10267e50(this_00,"KeyTyped",(uint *)"unichar",param_1 & 0xffff);
    puVar1 = FUN_10267e50(this_00,"MouseDoublePressed",(uint *)&DAT_103c8ea4,param_1);
    puVar1 = FUN_10267e50(this_00,"MousePressed",(uint *)&DAT_103c8ea4,param_1);
    puVar1 = FUN_10267e50(this_00,"MouseWheeled",(uint *)"delta",param_1);
    puVar1 = FUN_10267e50(this_00,"ScrollBarSliderMoved",(uint *)"position",param_1);
    puVar1 = FUN_10267e50(this_00,"ScrollBarSliderReleased",(uint *)"position",param_1);
    puVar1 = FUN_10267f50(this,"ApplyButtonEnable");
    puVar1 = FUN_10267f50(this,"ApplyChanges");
    puVar1 = FUN_10267f50(this,"Close");
    puVar1 = FUN_10267f50(this,"CursorExited");
    puVar1 = FUN_10267f50(this,"KeyFocusTicked");
    puVar1 = FUN_10267f50(this,"MenuClose");
    puVar1 = FUN_10267f50(this,"MouseFocusTicked");
    puVar1 = FUN_10267f50(this,"OnMouseFocusTicked");
    puVar1 = FUN_10267f50(this,"TextChanged");
    puVar1 = FUN_10267f50(this,"TreeViewItemSelectionCleared");
    puVar1 = FUN_10267f50(this,"scripts\\newbindings.txt");
    puVar1 = FUN_10268340(param_1,(uint *)"soundentry_operator_data",0);
    puVar1 = FUN_102864d0(&DAT_106f1de0,(undefined4 *)"CDragDropHelperPanel");
    puVar1 = FUN_102865d0(&DAT_106f1d88,(uint *)"CDragDropHelperPanel");
    puVar1 = FUN_102865d0(&DAT_106f1d88,(uint *)"Panel");
    puVar1 = FUN_1029f6d0(this,0,(char *)0x0,"CheckButton",1);
    puVar1 = FUN_102a99e0(this,0,(char *)0x0,"Label",1);
    puVar1 = FUN_102aa100(this,0,(char *)0x0,"PercentageCroppedImageLabel",1);
    puVar1 = FUN_102b7830(this,0,(char *)0x0,"ToggleButton",1);
    puVar1 = FUN_102bf480(this,0,(char *)0x0,"RadioButton",1);
    puVar1 = FUN_102c2f50(this,0,(char *)0x0,"BitmapImagePanel",1);
    puVar1 = FUN_102d2ad0(this,0,(char *)0x0,"URLLabel",(char *)0x0,1);
    puVar1 = FUN_102d2ee0(this,0,(char *)0x0,"CountdownLabel",1);
    puVar1 = FUN_102f2dd0(this,"CRadialMenu",1);
    puVar1 = FUN_102f97a0(this,"CHudPanelRoundWin",1);
    puVar1 = FUN_10301a00(this,"CHudMiniMap",1);
    puVar1 = FUN_10311590(this,0,(char *)0x0,"MarqueeLabel",1);
    puVar1 = FUN_10314320(this,0,(char *)0x0,"TIButton",0,(char *)0x0,1);
    puVar1 = FUN_103145a0(this,0,(char *)0x0,"TIImageButton",0,(char *)0x0,1);
    puVar1 = FUN_10314780(this,0,(char *)0x0,"TIImageButtonToggle",0,(char *)0x0,1);
    puVar1 = FUN_1031aef0(this,0,(char *)0x0,"CExButton",0,(char *)0x0,1);
    puVar1 = FUN_1031b030(this,0,(char *)0x0,"CExImageButton",0,(char *)0x0,1);
    puVar1 = FUN_1031b1f0(this,0,(char *)0x0,"CExLabel",1);
    puVar1 = FUN_1031eb90(this,"CNotificationQueuePanel",1);
    puVar1 = FUN_103243a0(this,0,(char *)0x0,"TISquadButton",1);
    puVar1 = FUN_10368180(PTR_PTR_FUN_105e5b28,(int)"Battery");
    puVar1 = FUN_1039d150(this_00,"Command",(uint *)"command",param_1);
    puVar1 = FUN_1039d150(this_00,"SetText",(uint *)&DAT_10464104,param_1);
    puVar1 = FUN_1039d1d0(this_00,"OnCursorMoved",(uint *)&DAT_10498674,param_1,
    puVar1 = FUN_1039d1d0(this_00,"OnRequestFocus",(uint *)"subFocus",param_1,(uint *)"defaultPanel"
    puVar1 = FUN_1039d270(this,"ScrollBarSliderMoved",(uint *)"position",param_1[0x73]);
    puVar1 = FUN_1039d270(this,"ScrollBarSliderReleased",(uint *)"position",param_1[0x73]);
    puVar1 = FUN_1039d270(this_00,"ClickPanel",(uint *)"index",*(uint *)((int)this + 0x1a8));
    puVar1 = FUN_1039d270(this_00,"KeyCodeReleased",(uint *)&DAT_105366dc,param_1);
    puVar1 = FUN_1039d270(this_00,"KeyTyped",(uint *)"unichar",param_1 & 0xffff);
    puVar1 = FUN_1039d270(this_00,"MouseDoublePressed",(uint *)&DAT_105366dc,param_1);
    puVar1 = FUN_1039d270(this_00,"MousePressed",(uint *)&DAT_105366dc,param_1);
    puVar1 = FUN_1039d270(this_00,"MouseWheeled",(uint *)"delta",param_1);
    puVar1 = FUN_1039d270(this_00,"ScrollBarSliderMoved",(uint *)"position",param_1);
    puVar1 = FUN_1039d270(this_00,"ScrollBarSliderReleased",(uint *)"position",param_1);
    puVar1 = FUN_1039d370(this,"Close");
    puVar1 = FUN_1039d370(this,"CursorExited");
    puVar1 = FUN_1039d370(this,"KeyFocusTicked");
    puVar1 = FUN_1039d370(this,"MenuClose");
    puVar1 = FUN_1039d370(this,"MouseFocusTicked");
    puVar1 = FUN_1039d370(this,"OnMouseFocusTicked");
    puVar1 = FUN_1039d370(this,"TextChanged");
    puVar1 = FUN_1039d370(this,"TreeViewItemSelectionCleared");
    puVar1 = FUN_1039d370(this,"achievement_counts");
    puVar1 = FUN_1039d560(this_00,(uint *)"NorthEast",1);
    puVar1 = FUN_1039d560(this_00,(uint *)"NorthWest",1);
    puVar1 = FUN_1039d560(this_00,(uint *)"SouthEast",1);
    puVar1 = FUN_1039d560(this_00,(uint *)"SouthWest",1);
    puVar1 = FUN_103a8fb0(this,0,(char *)0x0,"Label",1);
    puVar1 = FUN_103a96d0(this,0,(char *)0x0,"PercentageCroppedImageLabel",1);
    puVar1 = FUN_103b27c0(&DAT_106cff40,(undefined4 *)"CDragDropHelperPanel");
    puVar1 = FUN_103b28c0(&DAT_106cfee8,(uint *)"CDragDropHelperPanel");
    puVar1 = FUN_103b28c0(&DAT_106cfee8,(uint *)"Panel");
    puVar1 = FUN_103bc960(this,0,(char *)0x0,"ToggleButton",1);
    puVar1 = FUN_103bd510(this,0,(char *)0x0,"BitmapImagePanel",1);
    puVar1 = FUN_103bddc0(this,0,(char *)0x0,"CheckButton",1);
    puVar1 = FUN_103d30d0(this,0,(char *)0x0,"RadioButton",1);
    puVar1 = FUN_103e7520(this,0,(char *)0x0,"URLLabel",(char *)0x0,1);
    puVar1 = FUN_103e7930(this,0,(char *)0x0,"CountdownLabel",1);
    puVar1 = FUN_1042e810(this,"Command",(uint *)"Command","PanelListSliderMoved");
    puVar1 = FUN_1042e810(this,&DAT_1051d524,(uint *)"mapname","#GameUI_RandomMap");
    puVar1 = FUN_1042e810(this_00,"Command",(uint *)"command",param_1);
    puVar1 = FUN_1042e810(this_00,"CommandSubmitted",(uint *)"command",param_1);
    puVar1 = FUN_1042e810(this_00,"SetText",(uint *)&DAT_10524ef8,param_1);
    puVar1 = FUN_1042e890(this_00,"OnCursorMoved",(uint *)&DAT_10524fd8,param_1,
    puVar1 = FUN_1042e890(this_00,"OnRequestFocus",(uint *)"subFocus",param_1,(uint *)"defaultPanel"
    puVar1 = FUN_1042e930(this,"ScrollBarSliderMoved",(uint *)"position",param_1[0x73]);
    puVar1 = FUN_1042e930(this,"ScrollBarSliderReleased",(uint *)"position",param_1[0x73]);
    puVar1 = FUN_1042e930(this_00,"ClickPanel",(uint *)"index",*(uint *)((int)this + 0x1a8));
    puVar1 = FUN_1042e930(this_00,"KeyCodeReleased",(uint *)&DAT_10539390,param_1);
    puVar1 = FUN_1042e930(this_00,"KeyTyped",(uint *)"unichar",param_1 & 0xffff);
    puVar1 = FUN_1042e930(this_00,"MouseDoublePressed",(uint *)&DAT_10539390,param_1);
    puVar1 = FUN_1042e930(this_00,"MousePressed",(uint *)&DAT_10539390,param_1);
    puVar1 = FUN_1042e930(this_00,"MouseWheeled",(uint *)"delta",param_1);
    puVar1 = FUN_1042e930(this_00,"ScrollBarSliderMoved",(uint *)"position",param_1);
    puVar1 = FUN_1042e930(this_00,"ScrollBarSliderReleased",(uint *)"position",param_1);
    puVar1 = FUN_1042e930(this_00,(int)this + 500,(uint *)"selection",*(uint *)((int)this + 0x288));
    puVar1 = FUN_1042ea30(this,"ApplyButtonEnable");
    puVar1 = FUN_1042ea30(this,"ApplyChanges");
    puVar1 = FUN_1042ea30(this,"Close");
    puVar1 = FUN_1042ea30(this,"CursorExited");
    puVar1 = FUN_1042ea30(this,"KeyFocusTicked");
    puVar1 = FUN_1042ea30(this,"MenuClose");
    puVar1 = FUN_1042ea30(this,"MouseFocusTicked");
    puVar1 = FUN_1042ea30(this,"OnMouseFocusTicked");
    puVar1 = FUN_1042ea30(this,"OnSiblingHybridButtonOpened");
    puVar1 = FUN_1042ea30(this,"SquadButtonOut");
    puVar1 = FUN_1042ea30(this,"TextChanged");
    puVar1 = FUN_1042ea30(this,"TreeViewItemSelectionCleared");
    puVar1 = FUN_1042ea30(this_00,"Operators");
    puVar1 = FUN_1042ee30(*(void **)((int)this + 0x830),(uint *)"controls",0);
    puVar1 = FUN_10432330(&DAT_1079a2a0,"sv_disablefreezecam");
    puVar1 = FUN_10445200(&DAT_108401c0,(undefined4 *)"CDragDropHelperPanel");
    puVar1 = FUN_10445300(&DAT_10840168,(uint *)"CDragDropHelperPanel");
    puVar1 = FUN_10445300(&DAT_10840168,(uint *)"Panel");
    puVar1 = FUN_10454240(this,0,(char *)0x0,"Label",1);
    puVar1 = FUN_10454240(this_00,(int)this,"LblMessage",param_1[1],1);
    puVar1 = FUN_10454960(this,0,(char *)0x0,"PercentageCroppedImageLabel",1);
    puVar1 = FUN_10465780(this,0,(char *)0x0,"ToggleButton",1);
    puVar1 = FUN_10466220(this,0,(char *)0x0,"BitmapImagePanel",1);
    puVar1 = FUN_10466ac0(this,0,(char *)0x0,"CheckButton",1);
    puVar1 = FUN_1047b2e0(this,0,(char *)0x0,"RadioButton",1);
    puVar1 = FUN_10483b40(this,0,(char *)0x0,"URLLabel",(char *)0x0,1);
    puVar1 = FUN_10483f50(this,0,(char *)0x0,"CountdownLabel",1);
    puVar10 = (ushort *)(**(code **)(*DAT_107c09f0 + 0x2c))("#TI_vote_no_pc_instruction");
    puVar10 = (ushort *)(**(code **)(*DAT_107c09f0 + 0x2c))("#TI_vote_yes_pc_instruction");
    puVar10 = FUN_100b10f0(local_15c,(byte *)"hitbox_default_explodemodel_%d");
    puVar10 = FUN_101f6800((byte *)"materials/%s");
    puVar10 = FUN_10267f50(pvVar7,"Repaint");
    puVar10 = FUN_10268340(param_1,(uint *)"PinnedCornerOffsetX",0);
    puVar10 = FUN_10268340(param_1,(uint *)"PinnedCornerOffsetY",0);
    puVar10 = FUN_10268340(param_1,(uint *)"UnpinnedCornerOffsetX",0);
    puVar10 = FUN_10268340(param_1,(uint *)"UnpinnedCornerOffsetY",0);
    puVar10 = FUN_1039d370(pvVar7,"Repaint");
    puVar10 = FUN_1039d560(param_1,(uint *)"PinnedCornerOffsetX",0);
    puVar10 = FUN_1039d560(param_1,(uint *)"PinnedCornerOffsetY",0);
    puVar10 = FUN_1039d560(param_1,(uint *)"UnpinnedCornerOffsetX",0);
    puVar10 = FUN_1039d560(param_1,(uint *)"UnpinnedCornerOffsetY",0);
    puVar10 = FUN_1042ea30(pvVar7,"Repaint");
    puVar10 = FUN_1042ee30(param_1,(uint *)"PinnedCornerOffsetX",0);
    puVar10 = FUN_1042ee30(param_1,(uint *)"PinnedCornerOffsetY",0);
    puVar10 = FUN_1042ee30(param_1,(uint *)"UnpinnedCornerOffsetX",0);
    puVar10 = FUN_1042ee30(param_1,(uint *)"UnpinnedCornerOffsetY",0);
    puVar12 = FUN_10031640(puVar13,(byte *)"%08X-%04hX-%04hX-%02X%02X-%02X%02X%02X%02X%02X%02X");
    puVar13 = FUN_100b10f0(local_27c,(byte *)"00:%02d");
    puVar2 = (undefined *)FUN_102659b0(pcVar1,"\r");
    puVar2 = (undefined *)FUN_10268930(this_00,(uint *)"filter",(uint)&DAT_10324290);
    puVar2 = (undefined *)FUN_1042d9d0((char *)&local_204,".vmt");
    puVar2 = (undefined2 *)(**(code **)(*DAT_107c09f0 + 0x2c))("#L4D360UI_MainMenu_DemoVersion");
    puVar2 = (undefined4 *)"error";
    puVar2 = FUN_0041eb80(pvVar1,"items");
    puVar2 = FUN_10021180(local_110,(byte *)"PrintHelp( \"%s\" );");
    puVar2 = FUN_10031640(local_1ec,(byte *)"hit%04d_box_brush%d");
    puVar2 = FUN_10031640(local_214,(byte *)"sound\\%s");
    puVar2 = FUN_100b10f0(local_110,(byte *)"PrintHelp( \"%s\" );");
    puVar2 = FUN_100b10f0(local_110,(byte *)"gm_kick %i\n");
    puVar2 = FUN_100b10f0(local_110,(byte *)"gm_mute %i\n");
    puVar2 = FUN_100b10f0(local_110,(byte *)"gm_slap %i\n");
    puVar2 = FUN_100b10f0(local_110,(byte *)"gm_slay %i\n");
    puVar2 = FUN_100b10f0(local_110,(byte *)"gm_strip %i\n");
    puVar2 = FUN_100d0740((byte *)"host_writeconfig_ss %d");
    puVar2 = FUN_100d0740((byte *)"host_writeconfig_video_ss %d");
    puVar2 = FUN_10123570(&DAT_1064ae18,(int *)"Schedule",0,*(undefined4 *)((int)this + 0x370));
    puVar2 = FUN_101f31e0(this_00,(int)this,"GameOptions",'\0',1);
    puVar2 = FUN_101f6800((byte *)"debug_hostage_recorder%d.txt");
    puVar2 = FUN_10212cf0(local_12c[0],"FaceBrushLists",'\0');
    puVar2 = FUN_10212cf0(local_12c[0],"FaceBrushes",'\0');
    puVar2 = FUN_10212cf0(param_2,"Lightmaps",'\0');
    puVar2 = FUN_1021e0f0(pvVar1,param_1,"BudgetPanel",1);
    puVar2 = FUN_10221dd0(pvVar1,param_1,"TextureBudgetPanel",1);
    puVar2 = FUN_10223d10(pvVar1,param_1,"VProfPanel",(undefined4 *)0x1);
    puVar2 = FUN_10267d30(this,"OnEngineDisconnectReason",(uint *)"reason",pcVar4);
    puVar2 = FUN_10267d30(this_00,"SetText",(uint *)&DAT_10353100,param_2);
    puVar2 = FUN_10267db0(this_00,"OnCursorMoved",(uint *)&DAT_10334008,param_1,
    puVar2 = FUN_10267e50(this_00,"MouseWheeled",(uint *)"delta",param_1);
    puVar2 = FUN_10267e50(this_00,"ScrollButtonPressed",(uint *)"index",param_2);
    puVar2 = FUN_10267ed0(this_00,"TextClicked",(uint *)&DAT_10353100,local_41c);
    puVar2 = FUN_10267f50(pvVar1,"FileSystem");
    puVar2 = FUN_10267f50(pvVar1,"GameInfo");
    puVar2 = FUN_10267f50(pvVar1,"ModInfo");
    puVar2 = FUN_10267f50(pvVar1,"SearchPaths");
    puVar2 = FUN_10267f50(pvVar1,"resourefiles");
    puVar2 = FUN_10267f50(this,"DefaultKeys");
    puVar2 = FUN_10267f50(this,"KeyModeSet");
    puVar2 = FUN_10267f50(this,"OnMatchStringSelected");
    puVar2 = FUN_10268340(this_00,(uint *)"setting.defaultres",0);
    puVar2 = FUN_10268340(this_00,(uint *)"setting.defaultresheight",0);
    puVar2 = FUN_10268340(this_00,(uint *)"setting.fullscreen",0);
    puVar2 = FUN_10268340(this_00,(uint *)"setting.nowindowborder",0);
    puVar2 = FUN_1029deb0(pvVar3,param_1,"FileSelectionCombo",10,'\0',1);
    puVar2 = FUN_102b8000(this_00,(int)this,"ProgressBar",1);
    puVar2 = FUN_102c3ef0(pvVar3,param_1,"Divider",1);
    puVar2 = FUN_102e4900(pvVar3,param_1,"BuildModeControls",1);
    puVar2 = FUN_1039d150(this_00,"SetText",(uint *)&DAT_10464104,param_2);
    puVar2 = FUN_1039d1d0(this_00,"OnCursorMoved",(uint *)&DAT_10498674,param_1,
    puVar2 = FUN_1039d270(this_00,"MouseWheeled",(uint *)"delta",param_1);
    puVar2 = FUN_1039d270(this_00,"ScrollButtonPressed",(uint *)"index",param_2);
    puVar2 = FUN_1039d2f0(this_00,"TextClicked",(uint *)&DAT_10464104,local_41c);
    puVar2 = FUN_1039d370(this,"KeyModeSet");
    puVar2 = FUN_1039d370(this,"PropDatafile");
    puVar2 = FUN_103be9d0(pvVar3,param_1,"FileSelectionCombo",10,'\0',1);
    puVar2 = FUN_103c0a80(pvVar3,param_1,"Divider",1);
    puVar2 = FUN_103f8710(pvVar3,param_1,"BuildModeControls",1);
    puVar2 = FUN_1042e810(this_00,"SetText",(uint *)&DAT_10524ef8,param_2);
    puVar2 = FUN_1042e890(this_00,"OnCursorMoved",(uint *)&DAT_10524fd8,param_1,
    puVar2 = FUN_1042e930(this_00,"MouseWheeled",(uint *)"delta",param_1);
    puVar2 = FUN_1042e930(this_00,"ScrollButtonPressed",(uint *)"index",param_2);
    puVar2 = FUN_1042e9b0(this_00,"TextClicked",(uint *)&DAT_10524ef8,local_41c);
    puVar2 = FUN_1042ea30(pvVar1,"ClientMenu");
    puVar2 = FUN_1042ea30(pvVar1,"LoadingStarted");
    puVar2 = FUN_1042ea30(pvVar1,"filmdust");
    puVar2 = FUN_1042ea30(pvVar1,"filmgrain");
    puVar2 = FUN_1042ea30(this,"KeyModeSet");
    puVar2 = FUN_1042ea30(this,"OnMatchStringSelected");
    puVar2 = FUN_1042ee30(*(void **)((int)this + 0x830),(uint *)"commands",0);
    puVar2 = FUN_104545d0(this_00,(int)this,"ChatInputPrompt",(ushort *)L"Enter text:",1);
    puVar2 = FUN_104674c0(pvVar3,param_1,"FileSelectionCombo",10,'\0',1);
    puVar2 = FUN_10469440(pvVar3,param_1,"Divider",1);
    puVar2 = FUN_1048e390(pvVar3,param_1,"BuildModeControls",1);
    puVar3 = (uint *)FUN_102659b0((char *)param_1,"materials\\");
    puVar3 = (uint *)Warning("*** Unable to serialize... have no image data!\n");
    puVar3 = FUN_004017b0(local_114,(byte *)"%s\\%s\\%s");
    puVar3 = FUN_0041eb80(pvVar2,"manifest");
    puVar3 = FUN_10021180(local_12c,(byte *)"%f %f %f");
    puVar3 = FUN_10021180(local_184,(byte *)"(%f, %f, %f)");
    puVar3 = FUN_10021180(local_21c,(byte *)"(%f, %f, %f)");
    puVar3 = FUN_10021180(puVar8,(byte *)"(%f, %f, %f)");
    puVar3 = FUN_10031640(local_118,(byte *)"tab_%s");
    puVar3 = FUN_100b10f0(local_110,(byte *)"Addon%i");
    puVar3 = FUN_100b10f0(local_110,(byte *)"Btn%d");
    puVar3 = FUN_100b10f0(local_118,(byte *)"tab_%s");
    puVar3 = FUN_100b10f0(local_130,(byte *)"%s.%s");
    puVar3 = FUN_100b10f0(local_130,(byte *)"%s.SymbolFont");
    puVar3 = FUN_100b10f0(local_218,(byte *)"resource/overviews/%s_stage%i.txt");
    puVar3 = FUN_100d0740((byte *)"decals/playerlogo%2.2d");
    puVar3 = FUN_100d0740((byte *)"expressions/%s.vfe");
    puVar3 = FUN_101f6800((byte *)"[NPCState::%s]");
    puVar3 = FUN_101f6800((byte *)"\n\nPLAN TIME (EQUIPMENT) IS: %f\n");
    puVar3 = FUN_101f6800((byte *)"expressions/%s.vfe");
    puVar3 = FUN_101f6800((byte *)"models/vehicles/planes/777/engine_gibs/shell-%d.mdl");
    puVar3 = FUN_101f6be0(this_00,(int)this,"listpanel_custombindlist",1);
    puVar3 = FUN_10267210(param_1,(byte *)"nomsg");
    puVar3 = FUN_10267e50(this_00,"MouseDoublePressed",(uint *)&DAT_103c8ea4,param_1);
    puVar3 = FUN_10267e50(this_00,"SliderMoved",(uint *)&DAT_10343e98,param_1);
    puVar3 = FUN_10267f50(pvVar1,"DoCopySelected");
    puVar3 = FUN_10267f50(pvVar2,"DepthWrite");
    puVar3 = FUN_10267f50(pvVar2,"enginetools");
    puVar3 = FUN_10268340(param_1,(uint *)"soundentry_operator_data",0);
    puVar3 = FUN_102864d0(&DAT_106f1de0,(undefined4 *)"Panel");
    puVar3 = FUN_1029deb0(pvVar2,(int)this,"FileTypeCombo",6,'\0',1);
    puVar3 = FUN_1029deb0(pvVar2,(int)this,"FullPathEdit",6,'\0',1);
    puVar3 = FUN_1029deb0(pvVar4,(int)this,"DriveCombo",6,'\0',1);
    puVar3 = FUN_102a4df0(pvVar2,(int)this,"FileNameCombo",6,'\x01',1);
    puVar3 = FUN_102a99e0(this_00,(int)this,"MessageLabel",param_2,1);
    puVar3 = FUN_102accb0(pvVar2,(int)this,"FileList",1);
    puVar3 = FUN_10311d70(this_00,(int)this,"ItemsList",1);
    puVar3 = FUN_103207e0(this_00,(int)this,*(undefined4 *)((int)this + 0x1ec),"PlanPanel",1);
    puVar3 = FUN_1039d270(this_00,"MouseDoublePressed",(uint *)&DAT_105366dc,param_1);
    puVar3 = FUN_1039d370(pvVar1,"DoCopySelected");
    puVar3 = FUN_1039d560(local_c,(uint *)"Gears",0);
    puVar3 = FUN_1039d560(local_c,(uint *)"Sounds",0);
    puVar3 = FUN_1039d560(this_00,(uint *)"CTPlans",0);
    puVar3 = FUN_1039d560(this_00,(uint *)"TPlans",0);
    puVar3 = FUN_103a8fb0(this_00,(int)this,"MessageLabel",param_2,1);
    puVar3 = FUN_103b27c0(&DAT_106cff40,(undefined4 *)"Panel");
    puVar3 = FUN_1042e810(this_00,"Command",(uint *)"command",pcVar2);
    puVar3 = FUN_1042e930(this_00,"MouseDoublePressed",(uint *)&DAT_10539390,param_1);
    puVar3 = FUN_1042ea30(pvVar1,"DoCopySelected");
    puVar3 = FUN_1042ea30(pvVar2,"DisconnectedFromGame");
    puVar3 = FUN_1042ea30(this_00,"CommandMenuClosed");
    puVar3 = FUN_1042ea30(this_00,"video");
    puVar3 = FUN_1042ee30(puVar3,(uint *)"autoenable",0);
    puVar3 = FUN_1042ee30(this,(uint *)"prop_data",0);
    puVar3 = FUN_10445200(&DAT_108401c0,(undefined4 *)"Panel");
    puVar3 = FUN_10454240(this_00,(int)this,"Label","",1);
    puVar3 = FUN_10454240(this_00,(int)this,"MessageLabel",param_2,1);
    puVar3 = FUN_10454240(this_00,(int)this,"NoticeText","",1);
    puVar3 = FUN_10454240(this_00,(int)this,"NumberDisplay","x",1);
    puVar3 = FUN_10464a30(this_00,(int)this,"SubImage",1);
    puVar3 = FUN_104674c0(pvVar2,(int)this,"FileTypeCombo",6,'\0',1);
    puVar3 = FUN_104674c0(pvVar2,(int)this,"FullPathEdit",6,'\0',1);
    puVar3 = FUN_1046a280(pvVar2,(int)this,"FileList",1);
    puVar3 = FUN_104843d0(this_00,(int)this,"OnlinePanel",1);
    puVar3 = FUN_10494710(pvVar2,(int)this,"FileNameCombo",6,'\x01',1);
    puVar4 = (uint *)"FCVAR_NEVER_AS_STRING";
    puVar4 = (uint *)FUN_1042f3d0(param_1,(uint *)"script",(uint)&DAT_104eefb3);
    puVar4 = (undefined *)FUN_103991e0((char *)(local_8c + iVar2),"_to_curve_");
    puVar4 = (undefined *)FUN_1042d9d0((char *)(local_8c + iVar2),"_to_curve_");
    puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&local_8,"HybridButton.CursorColor",piVar3);
    puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&local_8,"HybridButton.FocusColor",piVar3);
    puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&local_8,"HybridButton.TextColor",piVar3);
    puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x14))(local_8,"SteamLightGreen",*puVar4);
    puVar4 = (undefined4 *)FUN_10299700((byte *)"weapon_%s");
    puVar4 = (undefined4 *)FUN_102eb550((byte *)"weapon_%s");
    puVar4 = FUN_10021180((undefined4 *)&stack0xfffffec4,(byte *)"%f %f %f");
    puVar4 = FUN_10021180(local_110,(byte *)"banid %d %s;");
    puVar4 = FUN_10021180(local_110,(byte *)"kickid %d VOTEKICKED;");
    puVar4 = FUN_10021180(local_140,(byte *)"Slow %.1f, %s %.1f ");
    puVar4 = FUN_10021180(local_19c,(byte *)"ProcessUsercmds: Overflowed: too many cmds %i sent\n");
    puVar4 = FUN_10021180(local_290,(byte *)"(%f, %f, %f)");
    puVar4 = FUN_10021180(puVar8,(byte *)"(%f, %f, %f)");
    puVar4 = FUN_10031640(local_124,(byte *)"%s\\%s");
    puVar4 = FUN_10031640(local_df4,(byte *)"disconnect; map %s\n");
    puVar4 = FUN_100a9f10(pvVar3,(int)this,"DemoSmoothFixFrameButton","Edge->",1);
    puVar4 = FUN_100aa010(pvVar3,(int)this,"DemoSmootherType","Process->",1);
    puVar4 = FUN_100b10f0(local_110,(byte *)"Addon%i");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.CursorColor");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.CursorImage");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.DisabledColor");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.FocusColor");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.FocusDisabledColor");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.Font");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.ListButtonActiveColor");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.ListButtonInactiveColor");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.Style");
    puVar4 = FUN_100b10f0(local_134,(byte *)"%s.TextColor");
    puVar4 = FUN_100b10f0(local_230,(byte *)"(%f, %f, %f)");
    puVar4 = FUN_100b10f0(local_240,(byte *)"%s.%s");
    puVar4 = FUN_100b10f0(local_240,(byte *)"%s.SelectFont");
    puVar4 = FUN_100b10f0(local_240,(byte *)"%s.SymbolFont");
    puVar4 = FUN_100cb370(pvVar3,(int)this,"Histogram",param_2,1);
    puVar4 = FUN_100cc2c0(pvVar3,(int)this,"InputLevelSlider",3,1);
    puVar4 = FUN_100cc2c0(pvVar3,(int)this,"OutputLevelSlider",2,1);
    puVar4 = FUN_100cc4f0(pvVar3,"SelectionPanel",uVar2,(int)this,1);
    puVar4 = FUN_100ccbf0(pvVar3,(int)this,"BlendFactorSlider",1);
    puVar4 = FUN_100ccbf0(pvVar3,(int)this,"FuzzinessSlider",1);
    puVar4 = FUN_100ccbf0(pvVar3,(int)this,"HueSlider",1);
    puVar4 = FUN_100ccbf0(pvVar3,(int)this,"SaturationSlider",1);
    puVar4 = FUN_100ccbf0(pvVar3,(int)this,"ToleranceSlider",1);
    puVar4 = FUN_100ccbf0(pvVar3,(int)this,"ValueSlider",1);
    puVar4 = FUN_100cd450(pvVar3,(int)this,"UncorrectedImage",1);
    puVar4 = FUN_100d0740((byte *)"host_writeconfig_ss %d");
    puVar4 = FUN_1017c740((byte *)"%f %f %f");
    puVar4 = FUN_1017c740((byte *)"Demo Playback - %s");
    puVar4 = FUN_1017c740((byte *)"Tick: %i / %i");
    puVar4 = FUN_1017c740((byte *)"Time: %s / %s");
    puVar4 = FUN_1017c740((byte *)"Unnamed%i");
    puVar4 = FUN_101c6e90(pvVar3,*(int *)((int)this + 0x1dc),"spectatormenu",iVar1,iVar5);
    puVar4 = FUN_101c6e90(pvVar3,*(int *)((int)this + 0x1dc),"spectatormodes",iVar1,iVar5);
    puVar4 = FUN_101ecf60(pvVar3,(int)this,"GameplayPage",1);
    puVar4 = FUN_101eda90(pvVar3,(int)this,"ServerPage",1);
    puVar4 = FUN_101ee8d0(pvVar3,(int)this,"Gamma","#GameUI_Gamma",1.6,2.6,(int)"mat_monitorgamma",0
    puVar4 = FUN_101f6800((byte *)"bothTeamsReady::%s\n");
    puVar4 = FUN_101f6800((byte *)"kickid %d CBaseEntity::InputKill()\n");
    puVar4 = FUN_1020ae40(pvVar3,(int)this,"GplAchievements",2,*(undefined4 *)((int)this + 0x84c),1)
    puVar4 = FUN_10216840(pvVar3,(int)this,"PerfNone",1);
    puVar4 = FUN_1021cf30(pvVar3,(int)this,"BudgetBarGraph",1);
    puVar4 = FUN_1021da00(pvVar3,(int)this,"FrametimeHistory",1);
    puVar4 = FUN_10267210(param_1,(byte *)"nomsg");
    puVar4 = FUN_10267e50(pvVar3,"KeyCodeTyped",(uint *)&DAT_103c8ea4,param_1);
    puVar4 = FUN_10267e50(pvVar3,"OnChangeChild",(uint *)"direction",0xffffffff);
    puVar4 = FUN_10267e50(pvVar3,"OnChangeChild",(uint *)"direction",1);
    puVar4 = FUN_10267e50(this_00,"MousePressed",(uint *)&DAT_103c8ea4,param_1);
    puVar4 = FUN_10267e50(this_00,"MouseReleased",(uint *)&DAT_103c8ea4,param_1);
    puVar4 = FUN_10267f50(pvVar3,"BuildDialog");
    puVar4 = FUN_10267f50(pvVar3,"ReloadLocalization");
    puVar4 = FUN_10267f50(this,"DoOpenVmtSelected");
    puVar4 = FUN_10267f50(this_00,"userinfo");
    puVar4 = FUN_1029deb0(pvVar2,(int)this,"ActionSkipType",2,'\0',1);
    puVar4 = FUN_1029deb0(pvVar2,(int)this,"ActionStopType",2,'\0',1);
    puVar4 = FUN_1029deb0(pvVar2,(int)this,"TextMessageEffect",3,'\0',1);
    puVar4 = FUN_1029deb0(pvVar2,(int)this,"TextMessageFont",6,'\0',1);
    puVar4 = FUN_1029deb0(pvVar3,(int)this,"ColorMask",4,'\0',1);
    puVar4 = FUN_1029deb0(pvVar3,(int)this,"OperationType",6,'\0',1);
    puVar4 = FUN_1029deb0(pvVar3,(int)this,"PerformanceTool",10,'\0',1);
    puVar4 = FUN_1029deb0(pvVar3,(int)this,"SelectionMethod",10,'\0',1);
    puVar4 = FUN_1029deb0(pvVar3,(int)this,"VisualizeMode",2,'\0',1);
    puVar4 = FUN_1029deb0(pvVar3,(int)this,"VisualizeMode",3,'\0',1);
    puVar4 = FUN_1029f6d0(pvVar2,(int)this,"ScreenFadeFFADE_IN","Fade in",1);
    puVar4 = FUN_1029f6d0(pvVar2,(int)this,"ScreenFadeFFADE_MODULATE","Modulate",1);
    puVar4 = FUN_1029f6d0(pvVar2,(int)this,"ScreenFadeFFADE_OUT","Fade out",1);
    puVar4 = FUN_1029f6d0(pvVar2,(int)this,"ScreenFadeFFADE_Purge","Purge",1);
    puVar4 = FUN_1029f6d0(pvVar2,(int)this,"ScreenFadeFFADE_STAYOUT","Stay out",1);
    puVar4 = FUN_1029f6d0(pvVar2,(int)this,"ZoomSpline","Spline",1);
    puVar4 = FUN_1029f6d0(pvVar2,(int)this,"ZoomStayout","Stay Out",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"ColorizeButton","Colorize",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"DemoSmoothBackoff","Back off",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"DemoSmoothHideLegend","Hide legend",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"DemoSmoothHideOriginal","Hide original",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"DemoSmoothHideProcessed","Hide processed",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"DemoSmoothShowAll","Show All",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"FarZOverride","FarZOverride",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"FogEnable","FogEnable",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"FogEnableSky","FogEnableSky",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"FogOverride","FogOverride",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"InvertSelectionButton","Invert Selection",1);
    puVar4 = FUN_1029f6d0(pvVar3,(int)this,"PreserveLuminosity","Preserve Luminosity",1);
    puVar4 = FUN_102a99e0(pvVar3,(int)this,"DemoSmoothSelectionInfo","",1);
    puVar4 = FUN_102a99e0(pvVar3,(int)this,"FileNameLabel","",1);
    puVar4 = FUN_102a99e0(pvVar3,(int)this,"Prompt",param_3,1);
    puVar4 = FUN_102bf480(pvVar3,(int)this,"HighlightMode","Highlights",1);
    puVar4 = FUN_102bf480(pvVar3,(int)this,"MidtoneMode","Midtones",1);
    puVar4 = FUN_102bf480(pvVar3,(int)this,"ShadowMode","Shadows",1);
    puVar4 = FUN_102ddf10(pvVar3,param_1,"#FileOpenDialog_NewFolder_InputTitle",
    puVar4 = FUN_102fc190(pvVar3,(int)this,"ScoreHeader",1);
    puVar4 = FUN_102fc6d0(pvVar3,(int)this,"CTPlayers",1);
    puVar4 = FUN_102fc6d0(pvVar3,(int)this,"TerPlayers",1);
    puVar4 = FUN_102fe7d0(pvVar3,(int)this,"specmenu",1);
    puVar4 = FUN_103063a0(pvVar3,(int)this,"ChatHistory",1);
    puVar4 = FUN_10306c00(pvVar3,(int)this,"LabelKey1",1);
    puVar4 = FUN_10306c00(pvVar3,(int)this,"LabelKey2",1);
    puVar4 = FUN_10306c00(pvVar3,(int)this,"LabelKeySingle",1);
    puVar4 = FUN_10311d70(pvVar3,(int)this,"TabList",1);
    puVar4 = FUN_103145a0(pvVar3,(int)this,"Button_ScrollLeft","",0,(char *)0x0,1);
    puVar4 = FUN_103145a0(pvVar3,(int)this,"ChatSubmit","#TI_Submit",0,(char *)0x0,1);
    puVar4 = FUN_103145a0(pvVar3,(int)this,"MuteButton","",0,(char *)0x0,1);
    puVar4 = FUN_103145a0(pvVar3,(int)this,"ProfileButton","",0,(char *)0x0,1);
    puVar4 = FUN_103145a0(pvVar3,(int)this,"VoteKickButton","",0,(char *)0x0,1);
    puVar4 = FUN_10314780(pvVar3,(int)this,"Map_Large","",0,(char *)0x0,1);
    puVar4 = FUN_10314780(pvVar3,(int)this,"Map_Normal","",0,(char *)0x0,1);
    puVar4 = FUN_10314780(pvVar3,(int)this,"Map_Off","",0,(char *)0x0,1);
    puVar4 = FUN_1039d270(pvVar3,"KeyCodeTyped",(uint *)&DAT_105366dc,param_1);
    puVar4 = FUN_1039d270(pvVar3,"OnChangeChild",(uint *)"direction",0xffffffff);
    puVar4 = FUN_1039d270(pvVar3,"OnChangeChild",(uint *)"direction",1);
    puVar4 = FUN_1039d270(this_00,"MousePressed",(uint *)&DAT_105366dc,param_1);
    puVar4 = FUN_1039d270(this_00,"MouseReleased",(uint *)&DAT_105366dc,param_1);
    puVar4 = FUN_1039d370(pvVar3,"BuildDialog");
    puVar4 = FUN_1039d370(pvVar3,"ReloadLocalization");
    puVar4 = FUN_1042e810(pvVar2,"OnItemRemoved",(uint *)"panelName",pcVar3);
    puVar4 = FUN_1042e930(pvVar3,"KeyCodeTyped",(uint *)&DAT_10539390,param_1);
    puVar4 = FUN_1042e930(pvVar3,"OnChangeChild",(uint *)"direction",0xffffffff);
    puVar4 = FUN_1042e930(pvVar3,"OnChangeChild",(uint *)"direction",1);
    puVar4 = FUN_1042e930(this_00,"KeyCodeTyped",(uint *)&DAT_10539390,param_1);
    puVar4 = FUN_1042e930(this_00,"MousePressed",(uint *)&DAT_10539390,param_1);
    puVar4 = FUN_1042e930(this_00,"MouseReleased",(uint *)&DAT_10539390,param_1);
    puVar4 = FUN_1042ea30(pvVar3,"BuildDialog");
    puVar4 = FUN_1042ea30(pvVar3,"PropDatafile");
    puVar4 = FUN_1042ea30(pvVar3,"ReloadLocalization");
    puVar4 = FUN_1042ea30(pvVar3,"audio");
    puVar4 = FUN_1042ea30(pvVar3,"resource/UI/VoteOptions.res");
    puVar4 = FUN_1042ee30(puVar3,(uint *)"autodisable",0);
    puVar4 = FUN_1042ee30(this_01,(uint *)"CTPlans",0);
    puVar4 = FUN_1042ee30(this_01,(uint *)"TPlans",0);
    puVar4 = FUN_10454240(pvVar3,(int)this,"CTTotalScore","#SB_TotalScoreCT",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"CharName","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"DM_KillLimit","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"DM_LeadLabel","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"Deaths","deaths",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"Experience","xp",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"GameTypeLabel","#SB_GameType",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"Gamma label","#GameUI_Gamma",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"HitYouString","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"Itemtitle","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"KilledByString","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"KillerHealth","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"Kills","kills",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LabelAccuracy","#TI_IDC_ACCURACY",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LabelClipSize","#TI_IDC_CLIPSIZE",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LabelDamage","#TI_IDC_DAMAGE",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LabelMobility","#TI_IDC_MOBILITY",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LabelStability","#TI_IDC_STABILITY",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblCancelButton","#GameUI_Icons_B_3DBUTTON",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblCancelText","#L4D360UI_Cancel",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblComplete","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblDownArrow","#GameUI_Icons_DOWN_ARROW",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblGamerscore","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblOkButton","#GameUI_Icons_A_3DBUTTON",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblOkText","#L4D360UI_Ok",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblScrollProgress","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblTitle","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"LblUpArrow","#GameUI_Icons_UP_ARROW",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"OtherLabel","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"Ping","ping",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"Prompt",param_3,1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"RankValue","rank",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"RoomLabel","#SB_Room",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"RoundLabel","#SB_Round",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"StageLabel","#SB_Stage",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"TerTotalScore","#SB_TotalScoreT",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"TextLabel","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"TitleLabel","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"UserName","name",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"UserStatus","status",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"WeaponName","",1);
    puVar4 = FUN_10454240(pvVar3,(int)this,"YouHitString","",1);
    puVar4 = FUN_104545d0(pvVar3,(int)this,"LabelTipText",&DAT_104ef75c,1);
    puVar4 = FUN_10464a30(pvVar3,(int)this,"CharImage",1);
    puVar4 = FUN_10464a30(pvVar3,(int)this,"ImageTip",1);
    puVar4 = FUN_10464a30(pvVar3,(int)this,"ItemImagePanel",1);
    puVar4 = FUN_10464a30(pvVar3,(int)this,"OptionsIcon",1);
    puVar4 = FUN_10464a30(pvVar3,(int)this,"RankIcon",1);
    puVar4 = FUN_10464a30(pvVar3,(int)this,"RankImage",1);
    puVar4 = FUN_10464a30(pvVar3,(int)this,"ScoreBackground",1);
    puVar4 = FUN_10464a30(pvVar3,(int)this,"WeaponImage",1);
    puVar4 = FUN_10464a30(pvVar3,(int)this,"WeaponSwatch",1);
    puVar4 = FUN_104674c0(pvVar3,(int)this,"ComboBox",5,'\0',1);
    puVar4 = FUN_104674c0(pvVar3,(int)this,"settingscombo",10,'\0',1);
    puVar4 = FUN_104674c0(pvVar3,(int)this,"viewcombo",10,'\0',1);
    puVar4 = FUN_104796e0(pvVar3,(int)this,"ProTotalProgress",1);
    puVar4 = FUN_104797d0(pvVar3,(int)this,"SliderAccuracy",1);
    puVar4 = FUN_104797d0(pvVar3,(int)this,"SliderClipSize",1);
    puVar4 = FUN_104797d0(pvVar3,(int)this,"SliderMobility",1);
    puVar4 = FUN_104797d0(pvVar3,(int)this,"SliderStability",1);
    puVar4 = FUN_10489550(pvVar3,(int)this,"VoteParameterList",1);
    puVar4 = FUN_10489550(pvVar3,(int)this,"VoteSetupList",1);
    puVar4 = FUN_104a58b0(pvVar3,param_1,"#FileOpenDialog_NewFolder_InputTitle",
    puVar5 = (uint *)FUN_1014fb90(local_28,(int *)"effects/tesla_glow_noz");
    puVar5 = (undefined4 *)(**(code **)(iVar1 + 0x14))(local_c,"Button.TextColor",*puVar5);
    puVar5 = FUN_0041ee00(param_1,"attr",0);
    puVar5 = FUN_0041ee00(param_1,"bodygroups",0);
    puVar5 = FUN_0041ee00(param_1,"extra",0);
    puVar5 = FUN_0041ee00(param_1,"flags",0);
    puVar5 = FUN_0041ee00(param_1,"info",0);
    puVar5 = FUN_0041ee00(param_1,"models",0);
    puVar5 = FUN_10021180(local_174,(byte *)"yaw: %f");
    puVar5 = FUN_10021180(puVar10,(byte *)"(%f, %f, %f)");
    puVar5 = FUN_10031640(local_114,(byte *)"%s\\%s");
    puVar5 = FUN_100a8cc0(pvVar3,(int)this,"DemoEditNew","New->",1);
    puVar5 = FUN_100b10f0(local_118,(byte *)"callvote kick %i\n");
    puVar5 = FUN_100b10f0(local_124,(byte *)"(%f, %f, %f)");
    puVar5 = FUN_100b10f0(local_124,(byte *)"cmd%d joy_cfg_custom");
    puVar5 = FUN_100b10f0(local_220,(byte *)"-jlobby %i -jroom 0\n");
    puVar5 = FUN_100b10f0(local_220,(byte *)"In Lobby: %s");
    puVar5 = FUN_100b10f0(local_224,(byte *)"resource/overviews/%s_stage%i.txt");
    puVar5 = FUN_100d0740((byte *)"host_writeconfig_ss %d");
    puVar5 = FUN_100d0740((byte *)"rank_images/%i");
    puVar5 = FUN_1011a950(pvVar4,(int)this_00,"HudChatHistory",1);
    puVar5 = FUN_101f6800((byte *)"Degenerate area %d");
    puVar5 = FUN_101f6800((byte *)"Hostage_%d.Captured");
    puVar5 = FUN_101f6800((byte *)"Hostage_%d.Rescued");
    puVar5 = FUN_101f6be0(this_00,(int)this,"listpanel_keybindlist",1);
    puVar5 = FUN_10203700(pvVar4,"TransitionPanel",1);
    puVar5 = FUN_10216060(pvVar3,(void **)this,"InfoText",1);
    puVar5 = FUN_10219c70(pvVar4,(int)this,"FooterPanel",1);
    puVar5 = FUN_1021ee40(pvVar4,(int)this,"Debug Menu","Debug Menu",1);
    puVar5 = FUN_1021efc0(pvVar4,(int)this,"DebugOptions",1);
    puVar5 = FUN_10263aa0(pvVar4,*(int *)((int)this + 0x400),"VoteBar",1);
    puVar5 = FUN_10267f50(pvVar2,"OnFolderUp");
    puVar5 = FUN_10267f50(pvVar2,"OnNewFolder");
    puVar5 = FUN_10267f50(pvVar2,"OpenInExplorer");
    puVar5 = FUN_10267f50(pvVar2,"PopulateDriveList");
    puVar5 = FUN_10267f50(pvVar2,"PopulateFileList");
    puVar5 = FUN_10267f50(pvVar4,"TabPressed");
    puVar5 = FUN_10267f50(this,"TextKillFocus");
    puVar5 = FUN_10267f50(this_00,"ResetData");
    puVar5 = FUN_1029deb0(pvVar3,(int)this,"ActionStartType",3,'\0',1);
    puVar5 = FUN_102a99e0(pvVar3,(int)this,"DemoName","",1);
    puVar5 = FUN_102a99e0(pvVar3,(int)this,"DemoProgressLabelFrame","",1);
    puVar5 = FUN_102a99e0(pvVar3,(int)this,"DemoProgressLabelTime","",1);
    puVar5 = FUN_102a99e0(pvVar3,(int)this,"SpeedScale","",1);
    puVar5 = FUN_102accb0(pvVar3,(int)this,"DemoActionList",1);
    puVar5 = FUN_102b3140(pvVar4,(int)this,"MenuSeparator",1);
    puVar5 = FUN_102b3140(pvVar4,param_1,"MenuSeparator",1);
    puVar5 = FUN_102b7830(pvVar3,(int)this,"DemoDriveCamera","Drive...",1);
    puVar5 = FUN_102b7830(pvVar3,(int)this,"DemoGoStart","Go Start",1);
    puVar5 = FUN_102bbda0(pvVar3,(int)this,"Textures",1);
    puVar5 = FUN_1039d370(pvVar4,"dmspawns");
    puVar5 = FUN_1039d370(this,"TextKillFocus");
    puVar5 = FUN_1039d560(this_01,(uint *)"physgun_interactions",0);
    puVar5 = FUN_103ca0f0(pvVar4,(int)this,"MenuSeparator",1);
    puVar5 = FUN_103ca0f0(pvVar4,param_1,"MenuSeparator",1);
    puVar5 = FUN_1042ea30(pvVar2,"OnFolderUp");
    puVar5 = FUN_1042ea30(pvVar2,"OnNewFolder");
    puVar5 = FUN_1042ea30(pvVar2,"OpenInExplorer");
    puVar5 = FUN_1042ea30(pvVar2,"PopulateDriveList");
    puVar5 = FUN_1042ea30(pvVar2,"PopulateFileList");
    puVar5 = FUN_1042ea30(pvVar3,"OfflineConfig");
    puVar5 = FUN_1042ea30(pvVar3,"RadialMenu");
    puVar5 = FUN_1042ea30(pvVar4,"TabPressed");
    puVar5 = FUN_1042ea30(this,"TextKillFocus");
    puVar5 = FUN_1042ea30(this_00,"ResetData");
    puVar5 = FUN_1042ee30(*(void **)(param_1 + 8),(uint *)"Default",1);
    puVar5 = FUN_1042ee30(this,(uint *)"door_options",0);
    puVar5 = FUN_10452a40(pvVar4,(int)this,"CallVoteFailed",1);
    puVar5 = FUN_10452a40(pvVar4,(int)this,"VoteActive",1);
    puVar5 = FUN_10452a40(pvVar4,(int)this,"VoteFailed",1);
    puVar5 = FUN_10452a40(pvVar4,(int)this,"VotePassed",1);
    puVar5 = FUN_10454240(pvVar3,(int)this,"LabelAward","#EORPS_Award",1);
    puVar5 = FUN_10454240(pvVar3,(int)this,"LabelExperience","#EORPS_Experience",1);
    puVar5 = FUN_10454240(pvVar3,(int)this,"LabelGamepoints","#EORPS_Gamepoints",1);
    puVar5 = FUN_10454240(pvVar3,(int)this,"LabelPrimary","",1);
    puVar5 = FUN_10454240(pvVar3,(int)this,"LabelRatio","#EORPS_Ratio",1);
    puVar5 = FUN_10454240(pvVar3,(int)this,"LabelRequisition","#EORPS_RP",1);
    puVar5 = FUN_10454240(pvVar3,(int)this,"LabelSecondary","",1);
    puVar5 = FUN_10454240(pvVar3,(int)this,"LabelTitle","#EORPS_Title",1);
    puVar5 = FUN_10454240(pvVar3,(int)this,"MessageTitle","Message Title",1);
    puVar5 = FUN_104674c0(pvVar4,(int)this,"MapList",0xc,'\0',1);
    puVar5 = FUN_10472930(pvVar4,(int)this,"MenuSeparator",1);
    puVar5 = FUN_10472930(pvVar4,param_1,"MenuSeparator",1);
    puVar5 = FUN_10479a20(pvVar3,(int)this,"LoadingProgress",1);
    puVar6 = (undefined4 *)(**(code **)(*this + 0x104))(&local_8,"TIButtonDefault.OverColor",piVar3)
    puVar6 = (undefined4 *)(**(code **)(*this + 0x104))(&local_8,"TIButtonDefault.TextColor",piVar3)
    puVar6 = FUN_100b10f0(local_14c,(byte *)"%s.ClickedColor");
    puVar6 = FUN_100b10f0(local_14c,(byte *)"%s.DisabledColor");
    puVar6 = FUN_100b10f0(local_14c,(byte *)"%s.OverColor");
    puVar6 = FUN_100b10f0(local_14c,(byte *)"%s.TextColor");
    puVar6 = FUN_100b10f0(local_254,(byte *)"HKEY_CURRENT_USER\\%s\\Rate");
    puVar6 = FUN_100b10f0(local_258,(byte *)"%s.Disabled");
    puVar6 = FUN_100b10f0(local_258,(byte *)"%s.Style");
    puVar6 = FUN_100b10f0(puVar10,(byte *)"(%f, %f, %f)");
    puVar6 = FUN_100bd8a0(pvVar4,(int)this,"View Panel",1);
    puVar6 = FUN_1025aa30(pvVar4,(int)this_00,"KilledByPanel",1);
    puVar6 = FUN_10267e50(pvVar3,"SliderMoved",(uint *)&DAT_10343e98,0);
    puVar6 = FUN_10267e50(pvVar3,"SliderMoved",(uint *)&DAT_10343e98,1);
    puVar6 = FUN_10267e50(pvVar3,"SliderMoved",(uint *)&DAT_10343e98,2);
    puVar6 = FUN_10267f50(this,"OnEngineListenServerStarted");
    puVar6 = FUN_1029deb0(pvVar4,(int)this,"BugArea",10,'\0',1);
    puVar6 = FUN_1029deb0(pvVar4,(int)this,"BugMapNumber",10,'\0',1);
    puVar6 = FUN_1029deb0(pvVar4,(int)this,"BugOwner",10,'\0',1);
    puVar6 = FUN_1029deb0(pvVar4,(int)this,"BugPriority",10,'\0',1);
    puVar6 = FUN_1029deb0(pvVar4,(int)this,"BugReportType",10,'\0',1);
    puVar6 = FUN_1029deb0(pvVar4,(int)this,"BugSeverity",10,'\0',1);
    puVar6 = FUN_1029deb0(pvVar4,(int)this,"BugSubmitter",5,'\0',1);
    puVar6 = FUN_102a99e0(pvVar4,(int)this,"BugBSPURL","",1);
    puVar6 = FUN_102a99e0(pvVar4,(int)this,"BugBuild","",1);
    puVar6 = FUN_102a99e0(pvVar4,(int)this,"BugLevel","",1);
    puVar6 = FUN_102a99e0(pvVar4,(int)this,"BugOrientation","",1);
    puVar6 = FUN_102a99e0(pvVar4,(int)this,"BugPosition","",1);
    puVar6 = FUN_102a99e0(pvVar4,(int)this,"BugSaveGameURL","",1);
    puVar6 = FUN_102a99e0(pvVar4,(int)this,"BugScreenShotURL","",1);
    puVar6 = FUN_102a99e0(pvVar4,(int)this,"BugSubmitterLabel","Submitter:",1);
    puVar6 = FUN_102a99e0(pvVar4,(int)this,"BugVMFURL","",1);
    puVar6 = FUN_102accb0(pvVar4,(int)this,"List Panel",1);
    puVar6 = FUN_1042e810(pvVar4,"OnItemAdded",(uint *)"panelName",pcVar5);
    puVar6 = FUN_1042e930(pvVar5,"ViewProfile",(uint *)"userid",*(uint *)((int)this + 0x200));
    puVar6 = FUN_1042ea30(pvVar5,"ResetData");
    puVar7 = (undefined4 *)(**(code **)(*piVar3 + 0x14))(&param_1,"ControlBG",0xff000000);
    puVar7 = (undefined4 *)(**(code **)(iVar2 + 0x104))(&local_8,"Panel.BgColor",param_1);
    puVar7 = (undefined4 *)(**(code **)(iVar2 + 0x104))(&local_8,"Panel.FgColor",param_1);
    puVar7 = FUN_10021180((undefined4 *)&stack0xfffffbb0,(byte *)"%s %s %s");
    puVar7 = FUN_10031640(local_1e0,(byte *)"guid=%s");
    puVar7 = FUN_100b10f0(local_114,(byte *)"%s / %s %s");
    puVar7 = FUN_1017c740((byte *)"Tick: %i / %i");
    puVar7 = FUN_1017c740((byte *)"Time: %s / %s");
    puVar7 = FUN_10212cf0(*param_3,"LeafAmbient",'\x01');
    puVar7 = FUN_10212cf0(*puVar8,"LeafAmbientSamples",'\x01');
    puVar7 = FUN_10219a50(pvVar5,param_1[0x17],"FocusOverlayPanel",1);
    puVar7 = FUN_10219af0(pvVar5,param_1[0x17],"TransitionEffect",1);
    puVar7 = FUN_1021f1a0(pvVar5,param_1[0x17],"Engine Debug System",1);
    puVar7 = FUN_10267f50(pvVar4,"CloseFrameButtonPressed");
    puVar7 = FUN_10267f50(pvVar4,"Minimize");
    puVar7 = FUN_10267f50(pvVar4,"OnChooseVMFFolder");
    puVar7 = FUN_1039d370(pvVar4,"CloseFrameButtonPressed");
    puVar7 = FUN_1039d370(pvVar4,"Minimize");
    puVar7 = FUN_1042e810(pvVar5,"RequestKeyBindingEdit",(uint *)"binding","+voicerecord");
    puVar7 = FUN_1042ea30(pvVar4,"CloseFrameButtonPressed");
    puVar7 = FUN_1042ea30(pvVar4,"Minimize");
    puVar7 = FUN_1042ea30(pvVar6,"ClosedByHittingTilde");
    puVar8 = (uint *)(**(code **)(*piVar7 + 0x20))("PseudoUUID",&DAT_103236cf);
    puVar8 = FUN_10031640(local_220,(byte *)"%s\\all.lst");
    puVar8 = FUN_10031640(local_220,(byte *)"%s\\engine.lst");
    puVar8 = FUN_100b10f0(local_8a0,(byte *)"%s.Enabled");
    puVar8 = FUN_10212cf0(uVar14 * 0x1c,"LeafAmbientSamples",'\x01');
    puVar8 = FUN_10212cf0(uVar14 * 4,"LeafAmbient",'\x01');
    puVar8 = FUN_10243420(puVar6,(uint *)"cubemapHdr");
    puVar8 = FUN_10267d30(this_00,"command",(uint *)"command","BlendFactorUpdate");
    puVar8 = FUN_10267e50(pvVar6,"TreeViewItemSelected",(uint *)"itemIndex",uVar7);
    puVar8 = FUN_10267e50(this_00,"KeyCodeTyped",(uint *)&DAT_103c8ea4,param_1);
    puVar8 = FUN_10267f50(pvVar7,"bugreport_convars");
    puVar8 = FUN_1039d270(pvVar6,"TreeViewItemSelected",(uint *)"itemIndex",uVar7);
    puVar8 = FUN_1039d270(this_00,"KeyCodeTyped",(uint *)&DAT_105366dc,param_1);
    puVar8 = FUN_1042e930(pvVar6,"TreeViewItemSelected",(uint *)"itemIndex",uVar7);
    puVar8 = FUN_1042e930(this_00,"KeyCodeTyped",(uint *)&DAT_10539390,param_1);
    puVar9 = (uint *)FUN_100d0740((byte *)"scripts/soundscapes_%s.txt");
    puVar9 = (undefined4 *)(**(code **)(iVar2 + 0x100))(local_14,"Tooltip.TextColor",*puVar9,piVar4)
    puVar9 = (undefined4 *)(**(code **)(iVar2 + 0x100))(local_18,"Tooltip.BgColor",*puVar9,piVar4);
    puVar9 = FUN_10021180(local_124,(byte *)"models/vehicles/cars/%s.mdl");
    puVar9 = FUN_10021180(local_124,(byte *)"scripts/vehicles/%s.txt");
    puVar9 = FUN_10021180(local_1d0,(byte *)"(%f, %f, %f)");
    puVar9 = FUN_100b10f0(local_14c,(byte *)"%s.Font");
    puVar9 = FUN_100b10f0(local_364,(byte *)"%s.AllCaps");
    puVar9 = FUN_100b10f0(local_470,(byte *)"%s.ShowText");
    puVar9 = FUN_100b10f0(local_57c,(byte *)"%s.Click");
    puVar9 = FUN_100b10f0(local_688,(byte *)"%s.NoImages");
    puVar9 = FUN_100b10f0(local_794,(byte *)"%s.Over");
    puVar9 = FUN_10267f50(pvVar8,"HideNewControlMenu");
    puVar9 = FUN_1039d370(pvVar8,"HideNewControlMenu");
    puVar9 = FUN_1039d560(pvVar6,(uint *)"NorthEast",0);
    puVar9 = FUN_1039d560(pvVar6,(uint *)"NorthWest",0);
    puVar9 = FUN_1039d560(pvVar6,(uint *)"SouthEast",0);
    puVar9 = FUN_1039d560(pvVar6,(uint *)"SouthWest",0);
    puVar9 = FUN_1042ea30(pvVar8,"HideNewControlMenu");
    pvVar1 = (void *)FUN_100ae3e0("cable/cable.vmt");
    pvVar2 = (void *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"info_player_start");
    pvVar3 = (void *)FUN_10290a70((int *)"ImageProgressBar");
    pvVar3 = (void *)FUN_10290a70((int *)"PropertyDialog");
    pvVar3 = (void *)FUN_10290a70((int *)"PropertySheet");
    pvVar3 = (void *)FUN_10290a70((int *)"RichText");
    pvVar3 = (void *)FUN_10290a70((int *)"ScrollBar");
    pvVar3 = (void *)FUN_10314ac0(param_1,'\0',(uint *)"TrafficDensity",'\x01');
    pvVar3 = (void *)FUN_103e8bc0((int *)"ImageProgressBar");
    pvVar3 = (void *)FUN_103e8bc0((int *)"Label");
    pvVar3 = (void *)FUN_103e8bc0((int *)"RichText");
    pvVar3 = (void *)FUN_103e8bc0((int *)"ScrollBar");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CBaseModFrame");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CBaseModelPanel");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CExplanationPopup");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHUDHealthVehicle");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHUDMissionStatus");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHUDPlayerHitOutput");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHudAmmo");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHudClock");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHudHealth");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHudMenu");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHudNumericDisplay");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHudOBJLocator");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHudVoiceStatus");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CHudWeaponSelection");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CItemPreviewPanel");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CLocatorPanel");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CNotificationQueuePanel");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CPlayerPreviewPanel");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CRadialMenu");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CTISquadButton");
    pvVar3 = (void *)FUN_1044f9a0((int *)"CVoteSetupDialog");
    pvVar3 = (void *)FUN_1044f9a0((int *)"ImageProgressBar");
    pvVar3 = (void *)FUN_1044f9a0((int *)"Label");
    pvVar3 = (void *)FUN_1044f9a0((int *)"MarqueeLabel");
    pvVar3 = (void *)FUN_1044f9a0((int *)"PropertyBox");
    pvVar3 = (void *)FUN_1044f9a0((int *)"PropertyDialog");
    pvVar3 = (void *)FUN_1044f9a0((int *)"PropertySheet");
    pvVar3 = (void *)FUN_1044f9a0((int *)"RichText");
    pvVar3 = (void *)FUN_1044f9a0((int *)"ScrollBar");
    pvVar3 = (void *)FUN_1044f9a0((int *)"SectionedListPanel");
    pvVar3 = (void *)FUN_1044f9a0((int *)"TICheckButton");
    pvVar3 = (void *)FUN_1044f9a0((int *)"TIHorizontalList");
    pvVar3 = (void *)FUN_1044f9a0((int *)"TIHudDeathNotice");
    pvVar3 = (void *)FUN_1044f9a0((int *)"TIPropertySheet");
    pvVar3 = (void *)FUN_1044f9a0((int *)"VoteBarPanel");
    pvVar4 = (void *)FUN_10290a70((int *)"Frame");
    pvVar4 = (void *)FUN_10290a70((int *)"Panel");
    pvVar4 = (void *)FUN_103e8bc0((int *)"Frame");
    pvVar4 = (void *)FUN_103e8bc0((int *)"Panel");
    pvVar4 = (void *)FUN_1044f9a0((int *)"CHudGamePanel");
    pvVar4 = (void *)FUN_1044f9a0((int *)"CPotteryWheelPanel");
    pvVar4 = (void *)FUN_1044f9a0((int *)"CTIGamePanel");
    pvVar4 = (void *)FUN_1044f9a0((int *)"Frame");
    pvVar4 = (void *)FUN_1044f9a0((int *)"Panel");
    pvVar5 = (void *)FUN_10290a70((int *)"TextEntry");
    pvVar5 = (void *)FUN_103e8bc0((int *)"TextEntry");
    pvVar5 = (void *)FUN_1044f9a0((int *)"CClientScoreBoardDialog");
    pvVar5 = (void *)FUN_1044f9a0((int *)"TextEntry");
    pvVar6 = FUN_102240e0(param_1,(byte *)"cancelselect",(int *)0x0);
    pvVar6 = FUN_102240e0(param_1,(byte *)"toggleconsole",(int *)0x0);
    pvVar7 = (void *)Msg("NET_GetLong:  Split packet from %s with invalid split size (number %i/ count %i) where size %i is out of valid range [%d - %d ]\n"
    pwVar3 = L"%d %ls";
    pwVar3 = L"%d%ls";
    pwVar3 = L"%ls%d";
    pwVar3 = _wcspbrk(param_1,L"./\\");
    pwVar5 = L"%f";
    pwVar5 = L"%lld";
    return "";
    return "#GameUI_Icons_NONE";
    return "#RC_Mode_Intel";
    return "#RC_Mode_TDM";
    return "#RC_Skill_Normal";
    return "#RC_Skill_Pro";
    return "#TI_GT_BOMBING";
    return "#TI_GT_CASERETRIEVAL";
    return "#TI_GT_FFA";
    return "#TI_GT_HOSTAGEGRAB";
    return "#TI_GT_HOSTAGERESCUE";
    return "#TI_GT_PLANEBOMBING";
    return "#TI_GT_TEAMDM";
    return "#TI_GT_VIPCARESCORT";
    return "#TI_GT_VIPESCAPE";
    return "10.0 Shader Model 4.0";
    return "5 Channel Surround";
    return "9.0 Shader Model 2.0b";
    return "9.0 Shader Model 3.0";
    return "<<null>>";
    return "<null>";
    return "???CRR_Response bogus index";
    return "ACT_INVALID";
    return "Approach Nearby CT";
    return "Approach Nearby Ter";
    return "Armed Cowering";
    return "Armed Escorting";
    return "Armed_Patrolling";
    return "BAD FILE VERSION";
    return "BOT";
    return "Breakable.Computer";
    return "Breakable.MatConcrete";
    return "Breakable.MatFlesh";
    return "Breakable.MatGlass";
    return "Breakable.MatMetal";
    return "Breakable.MatWood";
    return "BulletProof";
    return "CANT ACCESS FILE";
    return "CENTER";
    return "CORRUPT DATA";
    return "CT";
    return "Center";
    return "Chat_Team";
    return "Dancing";
    return "Dedicated Server";
    return "EAST";
    return "ERRORNAME";
    return "ERROR_MISSING_CONTROLLABLE_MODEL";
    return "East";
    return "FCVAR_NEVER_AS_STRING";
    return "FIND OUT OF DATE";
    return "Failed to specify!";
    return "FindSeat";
    return "GlassBreak";
    return "Grabbed";
    return "Head Towards Vehicle/Teammate";
    return "INVALID FILE";
    return "In Vehicle Armed";
    return "In Vehicle";
    return "Injured";
    return "Invalid node";
    return "N/A";
    return "NORTH";
    return "NORTH_EAST";
    return "NORTH_WEST";
    return "No conversion to string";
    return "None";
    return "North";
    return "NorthEast";
    return "NorthWest";
    return "Not Found!";
    return "OK";
    return "OUT OF MEMORY";
    return "RESPONSE_ENTITYIO";
    return "RESPONSE_NONE";
    return "RESPONSE_PRINT";
    return "RESPONSE_RESPONSE";
    return "RESPONSE_SCENE";
    return "RESPONSE_SENTENCE";
    return "RESPONSE_SPEAK";
    return "Rescued";
    return "SOUTH";
    return "SOUTH_EAST";
    return "SOUTH_WEST";
    return "SQUAD_SLOT_ATTACK1";
    return "SQUAD_SLOT_ATTACK2";
    return "SQUAD_SLOT_EXCLUSIVE_HANDSIGN";
    return "SQUAD_SLOT_EXCLUSIVE_RELOAD";
    return "SQUAD_SLOT_INVESTIGATE_SOUND";
    return "SQUAD_SLOT_PICKUP_WEAPON1";
    return "SQUAD_SLOT_PICKUP_WEAPON2";
    return "SQUAD_SLOT_SPECIAL_ATTACK";
    return "Scared";
    return "Scared_RunFromPoint";
    return "Search for Vehicle/Teammate";
    return "Sitting";
    return "Sitting_Scared";
    return "South";
    return "SouthEast";
    return "SouthWest";
    return "Spectator";
    return "UI/buttonclick.wav";
    return "UI/menu_accept.wav";
    return "UI/menu_back.wav";
    return "UI/menu_countdown.wav";
    return "UI/menu_focus.wav";
    return "UI/menu_invalid.wav";
    return "UI/ui_menu_flip_single_01.wav";
    return "UI/ui_menu_flip_single_02.wav";
    return "UNKNOWN ERROR";
    return "UNKNOWN";
    return "Unassigned";
    return "Unknown";
    return "WEST";
    return "WSANO_RECOVERY";
    return "WSATRY_AGAIN";
    return "WWWWWWWWWWWWWWW";
    return "West";
    return "XBox 360";
    return "arrayboundsexceeded";
    return "aug";
    return "bday";
    return "boolean";
    return "bugreporter_remote";
    return "character";
    return "crash";
    return "cstring";
    return "dedicated";
    return "dsa58";
    return "float";
    return "fltdenormaloperand";
    return "fltdividebyzero";
    return "fltinexactresult";
    return "fltinvalidoperation";
    return "fltoverflow";
    return "fltstackcheck";
    return "fltunderflow";
    return "fp6";
    return "gamemode - 6.0";
    return "gamemode - 7.0";
    return "gamemode - 8.0";
    return "gamemode - 8.1";
    return "gamemode";
    return "halloween";
    return "hscript";
    return "intdividebyzero";
    return "integer";
    return "intoverflow";
    return "items/weapons/addons/rifle/acog";
    return "items/weapons/addons/rifle/compensator";
    return "items/weapons/addons/rifle/flashlight";
    return "items/weapons/addons/rifle/holosight";
    return "items/weapons/addons/rifle/reddot";
    return "items/weapons/addons/rifle/silencer";
    return "knife";
    return "m14";
    return "models/player/santa.mdl";
    return "mp5";
    return "mp7";
    return "noncontinuableexception";
    return "p90";
    return "pistol";
    return "privinstruction";
    return "prop_bomb";
    return "prop_bomb_dropped";
    return "sg551";
    return "static prop";
    return "unknown_script_type";
    return "uratio";
    return "uzi";
    return "variant";
    return "vector";
    return "void";
    return (wchar_t *)L"ja-JP";
    return (wchar_t *)L"ko-KR";
    return (wchar_t *)L"zh-CN";
    this = (DName *)DName::DName((DName *)&local_14,"void ");
    this = (DName *)DName::DName(local_1c,"unsigned ");
    this = (int *)FUN_100eebc0(&DAT_1060f4b8,this,"vgui_screen");
    this = (void *)(**(code **)(*piVar3 + 0x2c))(param_1[0x100],"HideVoteBackgrounds");
    this = (void *)FUN_101bdfa0((byte *)"%s : event suppressed\n");
    this = (void *)FUN_102866e0((uint *)"BuildModeDialog");
    this = (void *)FUN_102866e0((uint *)"Button");
    this = (void *)FUN_102866e0((uint *)"CBaseActionPlaySoundStartDialog");
    this = (void *)FUN_102866e0((uint *)"CBugUIPanel");
    this = (void *)FUN_102866e0((uint *)"CColorBalanceUIPanel");
    this = (void *)FUN_102866e0((uint *)"CColorCurvesUIPanel");
    this = (void *)FUN_102866e0((uint *)"CColorLevelsUIPanel");
    this = (void *)FUN_102866e0((uint *)"CColorLookupUIPanel");
    this = (void *)FUN_102866e0((uint *)"CColorOperationListPanel");
    this = (void *)FUN_102866e0((uint *)"CDemoUIPanel");
    this = (void *)FUN_102866e0((uint *)"CDemoUIPanel2");
    this = (void *)FUN_102866e0((uint *)"CDrawTreeFrame");
    this = (void *)FUN_102866e0((uint *)"CFogUIPanel");
    this = (void *)FUN_102866e0((uint *)"COcclusionUIPanel");
    this = (void *)FUN_102866e0((uint *)"COperationListPanel");
    this = (void *)FUN_102866e0((uint *)"CPerfUIPanel");
    this = (void *)FUN_102866e0((uint *)"CPrecisionSlider");
    this = (void *)FUN_102866e0((uint *)"CPropFadeUIPanel");
    this = (void *)FUN_102866e0((uint *)"CSelectedHSVUIPanel");
    this = (void *)FUN_102866e0((uint *)"CSkyUIPanel");
    this = (void *)FUN_102866e0((uint *)"CTextureListPanel");
    this = (void *)FUN_102866e0((uint *)"CVProfPanel");
    this = (void *)FUN_102866e0((uint *)"CVmtTextEntry");
    this = (void *)FUN_102866e0((uint *)"CheckButton");
    this = (void *)FUN_102866e0((uint *)"ComboBox");
    this = (void *)FUN_102866e0((uint *)"CvarToggleCheckButton");
    this = (void *)FUN_102866e0((uint *)"DirectorySelectDialog");
    this = (void *)FUN_102866e0((uint *)"EditablePanel");
    this = (void *)FUN_102866e0((uint *)"ExpandButton");
    this = (void *)FUN_102866e0((uint *)"FileOpenDialog");
    this = (void *)FUN_102866e0((uint *)"FileOpenStateMachine");
    this = (void *)FUN_102866e0((uint *)"Frame");
    this = (void *)FUN_102866e0((uint *)"ListPanel");
    this = (void *)FUN_102866e0((uint *)"ListViewPanel");
    this = (void *)FUN_102866e0((uint *)"MenuBar");
    this = (void *)FUN_102866e0((uint *)"MenuButton");
    this = (void *)FUN_102866e0((uint *)"MenuItem");
    this = (void *)FUN_102866e0((uint *)"MessageBox");
    this = (void *)FUN_102866e0((uint *)"PanelListPanel");
    this = (void *)FUN_102866e0((uint *)"ProgressBar");
    this = (void *)FUN_102866e0((uint *)"PropertyDialog");
    this = (void *)FUN_102866e0((uint *)"PropertyPage");
    this = (void *)FUN_102866e0((uint *)"PropertySheet");
    this = (void *)FUN_102866e0((uint *)"RadioButton");
    this = (void *)FUN_102866e0((uint *)"RichText");
    this = (void *)FUN_102866e0((uint *)"ScrollBar");
    this = (void *)FUN_102866e0((uint *)"TextEntry");
    this = (void *)FUN_102866e0((uint *)"TileViewPanelEx");
    this = (void *)FUN_102866e0((uint *)"TreeNode");
    this = (void *)FUN_102866e0((uint *)"TreeNodeText");
    this = (void *)FUN_102866e0((uint *)"TreeView");
    this = (void *)FUN_102866e0((uint *)"TxViewPanel");
    this = (void *)FUN_10314ac0(param_1,'\0',(uint *)"force_civillians",'\x01');
    this = (void *)FUN_103b29d0((uint *)"BuildModeDialog");
    this = (void *)FUN_103b29d0((uint *)"Button");
    this = (void *)FUN_103b29d0((uint *)"CheckButton");
    this = (void *)FUN_103b29d0((uint *)"ComboBox");
    this = (void *)FUN_103b29d0((uint *)"CvarToggleCheckButton");
    this = (void *)FUN_103b29d0((uint *)"EditablePanel");
    this = (void *)FUN_103b29d0((uint *)"ExpandButton");
    this = (void *)FUN_103b29d0((uint *)"Frame");
    this = (void *)FUN_103b29d0((uint *)"Label");
    this = (void *)FUN_103b29d0((uint *)"ListPanel");
    this = (void *)FUN_103b29d0((uint *)"ListViewPanel");
    this = (void *)FUN_103b29d0((uint *)"MenuBar");
    this = (void *)FUN_103b29d0((uint *)"MenuButton");
    this = (void *)FUN_103b29d0((uint *)"MenuItem");
    this = (void *)FUN_103b29d0((uint *)"MessageBox");
    this = (void *)FUN_103b29d0((uint *)"PanelListPanel");
    this = (void *)FUN_103b29d0((uint *)"ProgressBar");
    this = (void *)FUN_103b29d0((uint *)"RadioButton");
    this = (void *)FUN_103b29d0((uint *)"RichText");
    this = (void *)FUN_103b29d0((uint *)"ScrollBar");
    this = (void *)FUN_103b29d0((uint *)"TextEntry");
    this = (void *)FUN_103b29d0((uint *)"TreeNode");
    this = (void *)FUN_103b29d0((uint *)"TreeNodeText");
    this = (void *)FUN_103b29d0((uint *)"TreeView");
    this = (void *)FUN_10445410((uint *)"BaseModHybridButton");
    this = (void *)FUN_10445410((uint *)"BuildModeDialog");
    this = (void *)FUN_10445410((uint *)"Button");
    this = (void *)FUN_10445410((uint *)"CAdvancedVideo");
    this = (void *)FUN_10445410((uint *)"CBaseModFrame");
    this = (void *)FUN_10445410((uint *)"CBaseModPanel");
    this = (void *)FUN_10445410((uint *)"CCenterStringLabel");
    this = (void *)FUN_10445410((uint *)"CChatPanel");
    this = (void *)FUN_10445410((uint *)"CClientScoreBoardDialog");
    this = (void *)FUN_10445410((uint *)"CConsoleDialog");
    this = (void *)FUN_10445410((uint *)"CConsolePanel");
    this = (void *)FUN_10445410((uint *)"CCreateMultiplayerGameServerPage");
    this = (void *)FUN_10445410((uint *)"CCvarSlider");
    this = (void *)FUN_10445410((uint *)"CCvarToggleCheckButton");
    this = (void *)FUN_10445410((uint *)"CExtrasDialog");
    this = (void *)FUN_10445410((uint *)"CFPSPanel");
    this = (void *)FUN_10445410((uint *)"CGameConsoleDialog");
    this = (void *)FUN_10445410((uint *)"CGammaDialog");
    this = (void *)FUN_10445410((uint *)"CInventoryItem");
    this = (void *)FUN_10445410((uint *)"CKeyBindings");
    this = (void *)FUN_10445410((uint *)"CLoadoutSlotLabel");
    this = (void *)FUN_10445410((uint *)"CLoadoutSlotLabelItemImage");
    this = (void *)FUN_10445410((uint *)"CLoadoutSlotLabelItemLabel");
    this = (void *)FUN_10445410((uint *)"CLoadoutSlotTitleLabel");
    this = (void *)FUN_10445410((uint *)"CPanelListPanel");
    this = (void *)FUN_10445410((uint *)"CSpectatorPlayerItem");
    this = (void *)FUN_10445410((uint *)"CTIGamePanel");
    this = (void *)FUN_10445410((uint *)"CTISpectatorMenu");
    this = (void *)FUN_10445410((uint *)"CVoteSetupDialog");
    this = (void *)FUN_10445410((uint *)"CheckButton");
    this = (void *)FUN_10445410((uint *)"ComboBox");
    this = (void *)FUN_10445410((uint *)"ControllerOptionsButtons");
    this = (void *)FUN_10445410((uint *)"ControllerOptionsSticks");
    this = (void *)FUN_10445410((uint *)"CvarToggleCheckButton");
    this = (void *)FUN_10445410((uint *)"EditablePanel");
    this = (void *)FUN_10445410((uint *)"ExpandButton");
    this = (void *)FUN_10445410((uint *)"FileOpenDialog");
    this = (void *)FUN_10445410((uint *)"Frame");
    this = (void *)FUN_10445410((uint *)"GenericPanelList");
    this = (void *)FUN_10445410((uint *)"InGameMainMenu");
    this = (void *)FUN_10445410((uint *)"Label");
    this = (void *)FUN_10445410((uint *)"ListPanel");
    this = (void *)FUN_10445410((uint *)"ListViewPanel");
    this = (void *)FUN_10445410((uint *)"MainMenu");
    this = (void *)FUN_10445410((uint *)"MenuBar");
    this = (void *)FUN_10445410((uint *)"MenuButton");
    this = (void *)FUN_10445410((uint *)"MenuItem");
    this = (void *)FUN_10445410((uint *)"MessageBox");
    this = (void *)FUN_10445410((uint *)"Multiplayer");
    this = (void *)FUN_10445410((uint *)"PanelListPanel");
    this = (void *)FUN_10445410((uint *)"PanelListPanel2");
    this = (void *)FUN_10445410((uint *)"ProgressBar");
    this = (void *)FUN_10445410((uint *)"PropertyDialog");
    this = (void *)FUN_10445410((uint *)"PropertyPage");
    this = (void *)FUN_10445410((uint *)"PropertySheet");
    this = (void *)FUN_10445410((uint *)"RadioButton");
    this = (void *)FUN_10445410((uint *)"RichText");
    this = (void *)FUN_10445410((uint *)"ScrollBar");
    this = (void *)FUN_10445410((uint *)"ScrollableEditablePanel");
    this = (void *)FUN_10445410((uint *)"SectionedListPanel");
    this = (void *)FUN_10445410((uint *)"TIMainMenuSocialContainer");
    this = (void *)FUN_10445410((uint *)"TIPropertyPage");
    this = (void *)FUN_10445410((uint *)"TIPropertySheet");
    this = (void *)FUN_10445410((uint *)"TIVoiceControl");
    this = (void *)FUN_10445410((uint *)"TextEntry");
    this = (void *)FUN_10445410((uint *)"TreeNode");
    this = (void *)FUN_10445410((uint *)"TreeNodeText");
    this = (void *)FUN_10445410((uint *)"TreeView");
    this = (void *)FUN_10445410((uint *)"URLButton");
    this = FUN_100a7bb0("inferno",(undefined8 *)&local_1c,&local_28,iVar3);
    this = FUN_100c6ec0("sprites/lgtning.vmt",10.0);
    this = FUN_10267f50(this,"VideoConfig");
    this = FUN_1039d370(pvVar1,"PlanDescription");
    this = FUN_1042ea30(this,"VideoConfig");
    this = FUN_1042ee30(this_00,(uint *)"description",0);
    this[0x2d] = "models/vehicles/helicopters/bell212/bell212.mdl";
    this[0x2d] = (int)"models/vehicles/industrial/drivable/forklift-1.mdl";
    this_00 = (int *)FUN_10135420("_firesmoke",-1,'\x01');
    this_00 = (int *)FUN_10135420("_plasma",-1,'\x01');
    this_00 = (int *)FUN_10135420("prop_physics_multiplayer",-1,'\x01');
    this_00 = (void *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"point_viewcontrol");
    this_00 = (void *)FUN_10290a70((int *)"PercentageCroppedImageLabel");
    this_00 = (void *)FUN_10314ac0(DAT_10693b08,'\x01',(uint *)"sirentype",'\0');
    this_00 = (void *)FUN_103e8bc0((int *)"PercentageCroppedImageLabel");
    this_00 = (void *)FUN_1044f9a0((int *)"CAvatarImagePanel");
    this_00 = (void *)FUN_1044f9a0((int *)"CDialogListButton");
    this_00 = (void *)FUN_1044f9a0((int *)"CHudTICrosshair");
    this_00 = (void *)FUN_1044f9a0((int *)"CIconPanel");
    this_00 = (void *)FUN_1044f9a0((int *)"CMapOverview");
    this_00 = (void *)FUN_1044f9a0((int *)"PercentageCroppedImageLabel");
    this_00 = FUN_0041eb80(pvVar5,"reslists");
    this_00 = FUN_0041ee00(param_1,"info",0);
    this_00 = FUN_100ccae0(pvVar3,(int)this,"OperationList",1);
    this_00 = FUN_1014d780(this,(int *)0x0,(undefined4 *)"error");
    this_00 = FUN_1022f070(this,param_2,"PopUp_ItemPurchase",param_1,param_3,1);
    this_00 = FUN_10267d30(pvVar1,"FileSelected",(uint *)"fullpath",param_1);
    this_00 = FUN_10267e50(pvVar2,"PerforceQueryCompleted",(uint *)"operationPerformed",1);
    this_00 = FUN_10267e50(this,"SliderDragEnd",(uint *)"position",param_1[0x74]);
    this_00 = FUN_10267e50(this,"SliderDragStart",(uint *)"position",param_1[0x74]);
    this_00 = FUN_10267e50(this,"SliderMoved",(uint *)"position",param_1[0x74]);
    this_00 = FUN_10267f50(pvVar1,"PLATFORM");
    this_00 = FUN_10267f50(this,"BuildDialog");
    this_00 = FUN_10267f50(this,"ButtonToggled");
    this_00 = FUN_10267f50(this,"CanBeDefaultButton");
    this_00 = FUN_10267f50(this,"CursorEnteredMenuItem");
    this_00 = FUN_10267f50(this,"CursorExitedMenuItem");
    this_00 = FUN_10267f50(this,"ModInfo");
    this_00 = FUN_10267f50(this,"OnHostChangeLevel");
    this_00 = FUN_10267f50(this,"OpPanelClose");
    this_00 = FUN_10267f50(this,"SetActiveControl");
    this_00 = FUN_10267f50(this,"benchmark");
    this_00 = FUN_10267f50(this,"defaults");
    this_00 = FUN_10267f50(this,"drive");
    this_00 = FUN_10267f50(this,"modinfo");
    this_00 = FUN_10293ae0(pvVar3,(int)this,"PanelListEmbedded",1);
    this_00 = FUN_102fc480(pvVar9,(int)this,"ScoreListItem",1);
    this_00 = FUN_1039d370(this,"BuildDialog");
    this_00 = FUN_1039d370(this,"ButtonToggled");
    this_00 = FUN_1039d370(this,"CanBeDefaultButton");
    this_00 = FUN_1039d370(this,"CursorEnteredMenuItem");
    this_00 = FUN_1039d370(this,"CursorExitedMenuItem");
    this_00 = FUN_1039d370(this,"PlanDescription");
    this_00 = FUN_1039d370(this,"Selected Nav Areas");
    this_00 = FUN_1039d370(this,"SetActiveControl");
    this_00 = FUN_1039d370(this,"sv_gravity");
    this_00 = FUN_1039d560(local_14,(uint *)"faceposer",0);
    this_00 = FUN_103a69f0(pvVar3,(int)this,"PanelListEmbedded",1);
    this_00 = FUN_1042e810(pvVar1,"FileSelected",(uint *)"fullpath",param_1);
    this_00 = FUN_1042e930(this,"SliderDragEnd",(uint *)"position",param_1[0x74]);
    this_00 = FUN_1042e930(this,"SliderDragStart",(uint *)"position",param_1[0x74]);
    this_00 = FUN_1042e930(this,"SliderMoved",(uint *)"position",param_1[0x74]);
    this_00 = FUN_1042ea30(pvVar1,"ButtonToggled");
    this_00 = FUN_1042ea30(pvVar1,"LoadingFinished");
    this_00 = FUN_1042ea30(this,"BuildDialog");
    this_00 = FUN_1042ea30(this,"ButtonToggled");
    this_00 = FUN_1042ea30(this,"CanBeDefaultButton");
    this_00 = FUN_1042ea30(this,"ConnectedToGame");
    this_00 = FUN_1042ea30(this,"CursorEnteredMenuItem");
    this_00 = FUN_1042ea30(this,"CursorExitedMenuItem");
    this_00 = FUN_1042ea30(this,"SetActiveControl");
    this_00 = FUN_1042ea30(this,"SquadButtonIn");
    this_00 = FUN_1042ea30(this,"SquadSelected");
    this_00 = FUN_10452a40(pvVar3,(int)this,"PanelListEmbedded",1);
    this_00 = FUN_1045e0a0(pvVar3,(int)this,"ConsoleHistory",1);
    this_00 = FUN_10464a30(pvVar3,(int)this,"ImageWinTeam",1);
    this_01 = (int *)FUN_10268900(*(void **)*param_1,(uint *)"propertysheet",0);
    this_01 = (int *)FUN_1042f3a0(*(void **)*param_1,(uint *)"TIPropertySheet",0);
    this_01 = (int *)FUN_1042f3a0(*(void **)*param_1,(uint *)"propertysheet",0);
    this_01 = FUN_100bd490(this_00,(int)this,"TxEdt",1);
    this_01 = FUN_10267d30(this_00,&DAT_103e18a4,(uint *)"filename",param_2);
    this_01 = FUN_10267f50(this_00,"::ExecGameTypeCfg");
    this_01 = FUN_10267f50(this_00,"GetText");
    this_01 = FUN_10267f50(this_00,"ModInfo");
    this_01 = FUN_10267f50(this_00,"SetActiveControl");
    this_01 = FUN_10267f50(this_00,"SetText");
    this_01 = FUN_10267f50(this_00,"UnlitGeneric");
    this_01 = FUN_1039d370(this_00,"GetText");
    this_01 = FUN_1039d370(this_00,"SetActiveControl");
    this_01 = FUN_1039d370(this_00,"SetText");
    this_01 = FUN_1042e810(pvVar4,"Wireframe",(uint *)"$model","1");
    this_01 = FUN_1042ea30(this_00,"GetText");
    this_01 = FUN_1042ea30(this_00,"PlanDescription");
    this_01 = FUN_1042ea30(this_00,"SetActiveControl");
    this_01 = FUN_1042ea30(this_00,"SetText");
    this_01 = FUN_1042ea30(this_00,"SetupSlot");
    this_01 = FUN_1042ea30(this_00,"UnlitGeneric");
    this_01 = FUN_1047c910(this_00,(int)this,"VerticalScrollBar",'\x01',1);
    this_02 = (int *)FUN_10268900(this_01,(uint *)"PanelPtr",0);
    this_02 = (int *)FUN_1039dad0(this_01,(uint *)"PanelPtr",0);
    this_02 = (int *)FUN_1042f3a0(this_01,(uint *)"PanelPtr",0);
    uStack16 = (**(code **)(*piVar2 + 0x1c))("priority",0xffffffff);
    uVar1 = (**(code **)(*(int *)(param_1 + -8) + 0x84))("thruster");
    uVar1 = (**(code **)(*(int *)(param_1 + 4) + 0x84))("muzzleflash_AK47");
    uVar1 = (**(code **)(*(int *)(param_1 + 4) + 0x84))("muzzleflash_GSR1911");
    uVar1 = (**(code **)(*(int *)(param_1 + 4) + 0x84))("muzzleflash_M4");
    uVar1 = (**(code **)(*(int *)(param_1 + 4) + 0x84))("muzzleflash_UZI");
    uVar1 = (**(code **)(**(int **)(param_1 + 200) + 0xc))("instancebaseline");
    uVar1 = (**(code **)(**(int **)(param_1 + 200) + 0xc))("lightstyles");
    uVar1 = (**(code **)(**(int **)(param_1 + 200) + 0xc))("userinfo");
    uVar1 = (**(code **)(*DAT_10034bbc + 0x170))("_rt_FullFrameFB1","RenderTargets",1,0);
    uVar1 = (**(code **)(*DAT_107c09f0 + 0x2c))("#L4D360UI_Native");
    uVar1 = (**(code **)(*DAT_107c0a04 + 0x150))((int)this + 0x1438,"Other textures",1,0);
    uVar1 = (**(code **)(*piVar2 + 0xc))("InstructorTitle_ss",1);
    uVar1 = (**(code **)(*piVar2 + 0xc))("NewGameChapterName",1);
    uVar1 = (**(code **)(*this + 0x1ac))("models/tiny_object.mdl",0);
    uVar1 = (**(code **)(*this + 0x3a8))(param_1,"HudScheme");
    uVar1 = Error("Unable to load %s",local_108);
    uVar1 = FUN_00401c70('\0',3,(byte *)"FileSystem_GetExecutableDir failed.");
    uVar1 = FUN_0041e3a0(param_1,(byte *)"WINDOWS");
    uVar1 = FUN_0041f130(param_1,"effect",0);
    uVar1 = FUN_0041f130(param_1,"id",0);
    uVar1 = FUN_0041f130(param_1,"itemonly",0);
    uVar1 = FUN_0041f130(param_1,"type",0);
    uVar1 = FUN_00420e80(&DAT_00447480,"KV Conditional Evaluation Error");
    uVar1 = FUN_10077120("CAI_BaseNPC",(uint)PTR_s__Schedule_SCHED_IDLE_WALK_Tasks_T_1059239c,
    uVar1 = FUN_100845f0(param_1,(byte *)"angle");
    uVar1 = FUN_10104e40((void *)((int)this + 0x14),param_1,param_2,(uint *)"minVal",(byte *)0x0);
    uVar1 = FUN_10104e40((void *)((int)this + 0x14),param_1,param_2,(uint *)"range_in_min",
    uVar1 = FUN_10104e40((void *)((int)this + 0x14),param_1,param_2,(uint *)"scale",
    uVar1 = FUN_10104e40((void *)((int)this + 0xc),param_1,param_2,(uint *)"minVal",(byte *)0x0);
    uVar1 = FUN_10104e40((void *)((int)this + 0xc),param_1,param_2,(uint *)"sinePeriod",
    uVar1 = FUN_101a5ad0(1,(byte *)"CL_ParseClassInfo_EndClasses: CreateDecoders failed.\n");
    uVar1 = FUN_101a5ad0(1,(byte *)"ProcessSendTable: RecvTable_RecvClassInfos failed.\n");
    uVar1 = FUN_101a5c10((byte *)"Send Table signon buffer overflowed %i bytes!!!\n");
    uVar1 = FUN_101c7240(param_1,"Car.Horn_A",0,0);
    uVar1 = FUN_101c7240(param_1,"Car.Horn_B",0,0);
    uVar1 = FUN_101c7240(param_1,"Car.Horn_BTeam",0,0);
    uVar1 = FUN_101c7240(param_1,"Car.Horn_C",0,0);
    uVar1 = FUN_101c7240(param_1,"Car.Horn_D",0,0);
    uVar1 = FUN_101c7240(param_1,"Car.Horn_E",0,0);
    uVar1 = FUN_10265ef0((byte *)"genericprecache",param_1);
    uVar1 = FUN_10265f50((byte *)"DisableColorCorrection",param_1);
    uVar1 = FUN_10265f50((byte *)"level",param_2);
    uVar1 = FUN_10265f50((byte *)param_1[0x103],(byte *)"visible");
    uVar1 = FUN_10265f50(local_10,(byte *)"layout");
    uVar1 = FUN_10265f50(local_108,(byte *)"portal2");
    uVar1 = FUN_10265f50(local_204,(byte *)"voice_duck");
    uVar1 = FUN_10265f50(param_1,(byte *)"Cancel");
    uVar1 = FUN_10265f50(param_1,(byte *)"GotoButton");
    uVar1 = FUN_10265f50(param_1,(byte *)"Invalid STEAM UserID Ticket\n");
    uVar1 = FUN_10265f50(param_1,(byte *)"WINDOWS");
    uVar1 = FUN_10265f50(pbVar2,(byte *)"autoselect");
    uVar1 = FUN_102687d0((void *)param_1[0x6c],(uint *)"Image",0);
    uVar1 = FUN_102687d0(param_1,(uint *)"Height",0);
    uVar1 = FUN_102687d0(param_1,(uint *)"Width",0);
    uVar1 = FUN_10268900(*(void **)*param_1,(uint *)"propertysheet",0);
    uVar1 = FUN_10269690(piVar2,(uint *)"cfg\\video.txt","PROFILE",(int *)0x0);
    uVar1 = FUN_1026b080(&DAT_1041bbf8,"KV Conditional Evaluation Error");
    uVar1 = FUN_102eb0f0(puVar2,(uint *)"precache_helicopters");
    uVar1 = FUN_10314280(DAT_10693b08,(uint *)"assign_case",'\x01');
    uVar1 = FUN_10314280(param_1,(uint *)"always_show_minimap",'\x01');
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"Alpha");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"Frozen");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"Speed");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"StartOpen");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"VehicleScript");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"_light");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"beveragetype");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"color");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"filename");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"init_detonatetime");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"locked_sentence");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"locked_sound");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"materialName");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"pitch");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"points");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"preset");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"rotation");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"startcolor");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"texture");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"tolerance");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"volume");
    uVar1 = FUN_10399710((byte *)param_1,(byte *)"width");
    uVar1 = FUN_10399710(param_1,(byte *)"!enemy");
    uVar1 = FUN_10399710(param_1,(byte *)"!nearestfriend");
    uVar1 = FUN_10399710(param_1,(byte *)"!self");
    uVar1 = FUN_10399710(param_1,(byte *)"BulletSounds");
    uVar1 = FUN_10399710(param_1,(byte *)"WINDOWS");
    uVar1 = FUN_10399710(param_1,(byte *)"color");
    uVar1 = FUN_10399710(param_1,(byte *)"lightcolor");
    uVar1 = FUN_10399710(param_1,(byte *)"snapshot_file");
    uVar1 = FUN_10399710(param_2,(byte *)"burst");
    uVar1 = FUN_10399710(param_2,(byte *)"debris");
    uVar1 = FUN_10399710(param_2,(byte *)"fademaxdist");
    uVar1 = FUN_10399710(param_2,(byte *)"fademindist");
    uVar1 = FUN_10399710(param_2,(byte *)"multiplayer_break");
    uVar1 = FUN_10399710(param_2,(byte *)"placementattachment");
    uVar1 = FUN_10399710(param_2,(byte *)"placementbone");
    uVar1 = FUN_10399710(pbVar3,(byte *)"!player");
    uVar1 = FUN_1039d9a0((void *)param_1[0x6c],(uint *)"Image",0);
    uVar1 = FUN_1039fae0(&DAT_105e68f8,"KV Conditional Evaluation Error");
    uVar1 = FUN_103a7480("CLIENT",(int)&param_1,1);
    uVar1 = FUN_1042df20(param_1,(byte *)"active");
    uVar1 = FUN_1042df80((byte *)"ImportSprayImage",param_1);
    uVar1 = FUN_1042df80((byte *)((int)this + 0x144),(byte *)"@glados");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"HitZoneHealth");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"emitlight");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"fademaxdist");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"fademindist");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"fadescale");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"framerate");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"inertiaScale");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"lightcolor");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"lightstyle");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"model");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"physicsmode");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"spawnflags");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"stage");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"stage1_enabled");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"stage2_enabled");
    uVar1 = FUN_1042df80((byte *)param_1,(byte *)"stage3_enabled");
    uVar1 = FUN_1042df80(param_1,(byte *)"#L4D360UI_Gore_High");
    uVar1 = FUN_1042df80(param_1,(byte *)"#L4D360UI_Gore_Low");
    uVar1 = FUN_1042df80(param_1,(byte *)"BulletSounds");
    uVar1 = FUN_1042df80(param_1,(byte *)"Cancel");
    uVar1 = FUN_1042df80(param_1,(byte *)"WINDOWS");
    uVar1 = FUN_1042df80(param_1,(byte *)"cancel");
    uVar1 = FUN_1042df80(param_1,(byte *)"rendercolor32");
    uVar1 = FUN_1042df80(pbVar4,(byte *)"Enabled");
    uVar1 = FUN_1042df80(pbVar6,(byte *)"reload");
    uVar1 = FUN_1042f270((void *)param_1[0x6c],(uint *)"Image",0);
    uVar1 = FUN_1042f270(param_1,(uint *)"additionaltiles",0);
    uVar1 = FUN_1042f270(param_1,(uint *)"delta_gp",0);
    uVar1 = FUN_1042f270(param_1,(uint *)"scoreable",0);
    uVar1 = FUN_1042f270(param_1,(uint *)"total_gp",0);
    uVar1 = FUN_1042f270(param_1,(uint *)"winner",0);
    uVar1 = FUN_1042f270(this_00,(uint *)"itemselection",0);
    uVar1 = FUN_1042f3a0(*(void **)*param_1,(uint *)"TIPropertySheet",0);
    uVar1 = FUN_1042f3a0(*(void **)*param_1,(uint *)"propertysheet",0);
    uVar1 = FUN_1042f3d0((void *)param_1[0x20c],(uint *)"default/control",0);
    uVar1 = FUN_1042f3d0((void *)param_1[0x20c],(uint *)"default/entity",0);
    uVar1 = FUN_1042f3d0(param_1,(uint *)"command",(uint)&DAT_104eefb3);
    uVar1 = FUN_1042f3d0(param_1,(uint *)"cvar_name",(uint)&DAT_104eefb3);
    uVar1 = FUN_1042f3d0(param_1,(uint *)"toggle",(uint)&DAT_104eefb3);
    uVar1 = FUN_1042f3d0(this_00,(uint *)"TextureFrameNumVar",(uint)&DAT_104eefb3);
    uVar1 = FUN_1042f3d0(this_00,(uint *)"animatedTextureFrameNumVar",(uint)&DAT_104eefb3);
    uVar1 = FUN_1042f3d0(this_00,(uint *)"greaterVar",(uint)&DAT_104eefb3);
    uVar1 = FUN_1042f3d0(this_00,(uint *)"toggleTextureFrameNumVar",(uint)&DAT_104eefb3);
    uVar1 = FUN_10431760(&DAT_106facc8,"KV Conditional Evaluation Error");
    uVar1 = Msg("CommandMenu::LoadFromKeyValueInternal: depth > 100.\n");
    uVar1 = Msg("Invalid split packet length %i\n",*(uint *)(param_2 + 8));
    uVar1 = Warning("*** Encountered VTF file with an invalid version!\n");
    uVar1 = Warning("*** Error unserializing VTF file... is the file empty?\n");
    uVar1 = Warning("*** Tried to load a non-VTF file as a VTF file!\n");
    uVar1 = Warning("ERROR: CPooledVBAllocator_ColorMesh has unfreed allocations!");
    uVar1 = Warning("Image dimensions must be multiple of 4!\n");
    uVar1 = Warning("WARNING: Command too long... ignoring!\n%s\n",param_1);
    uVar1 = Warning("maskTextureVar [%s] not found\n",uVar1);
    uVar1 = Warning("selfillummaskscale [%s] not found\n",uVar1);
    uVar10 = FUN_101a5ad0(1,(byte *)"CL_ParseClassInfo: can\'t allocate %d C_ServerClassInfos.\n");
    uVar10 = FUN_103996b0(pbVar9,(byte *)"grenade_projectile");
    uVar10 = FUN_1042e050(extraout_ECX,extraout_EDX,pauVar3,(undefined (*) [16])"VOTEKICKED");
    uVar11 = FUN_0041e3a0(pbVar3,(byte *)"#include");
    uVar11 = FUN_10265f50(pbVar3,(byte *)"#include");
    uVar11 = FUN_102687d0(param_1,(uint *)"UnpinnedCornerOffsetY",uVar11);
    uVar11 = FUN_10399710(pbVar3,(byte *)"#include");
    uVar11 = FUN_1039d9a0(param_1,(uint *)"UnpinnedCornerOffsetY",uVar11);
    uVar11 = FUN_1042df80(pbVar3,(byte *)"#include");
    uVar11 = FUN_1042f270(param_1,(uint *)"UnpinnedCornerOffsetY",uVar11);
    uVar12 = FUN_102687d0(param_1,(uint *)"PinnedCornerOffsetX",uVar12);
    uVar12 = FUN_102687d0(param_1,(uint *)"UnpinnedCornerOffsetX",uVar2);
    uVar12 = FUN_1039d9a0(param_1,(uint *)"PinnedCornerOffsetX",uVar12);
    uVar12 = FUN_1039d9a0(param_1,(uint *)"UnpinnedCornerOffsetX",uVar2);
    uVar12 = FUN_1042f270(param_1,(uint *)"PinnedCornerOffsetX",uVar12);
    uVar12 = FUN_1042f270(param_1,(uint *)"UnpinnedCornerOffsetX",uVar2);
    uVar13 = (**(code **)((int)*param_1 + 0x270))("button");
    uVar13 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_KillStreakAward_Flashbang");
    uVar13 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_KillStreakAward_FragGrenade");
    uVar13 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_KillStreakAward_IncendiaryGrenade");
    uVar13 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_KillStreakAward_SmokeGrenade");
    uVar13 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_KillStreakAward_TearGas");
    uVar13 = FUN_102687d0(param_1,(uint *)"usetitlesafe",0);
    uVar13 = FUN_1039d9a0(param_1,(uint *)"usetitlesafe",0);
    uVar13 = FUN_1042f270(param_1,(uint *)"usetitlesafe",0);
    uVar16 = FUN_101cf7e0(*(void ***)((int)this + 8),(int *)this_01,(byte *)"%c00000000000000");
    uVar2 = (**(code **)(*DAT_106cb7f4 + 0x150))("decals/playerlogo01","Decal textures",1,0);
    uVar2 = (**(code **)(*DAT_106cb818 + 8))("editable");
    uVar2 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Atr_PctNeg",1,local_10c);
    uVar2 = (**(code **)(*DAT_107c09f0 + 0x2c))("#FreezePanel_SaveReplay",1,local_34);
    uVar2 = (**(code **)(*DAT_107c0a04 + 0x150))("dev/no_pixel_write","Other textures",1,0);
    uVar2 = (**(code **)(*DAT_107c0a7c + 0x14))("basemodui_scheme");
    uVar2 = (**(code **)(*param_1 + 0x2c))("$selfillummaskscale",(int)&uStack8 + 3,0);
    uVar2 = (**(code **)(*param_1 + 0x344))("BotQuotaCombo",0);
    uVar2 = (**(code **)(*piVar1 + 0x2c))("$basetextureoffset",(int)&param_1 + 3,0);
    uVar2 = (**(code **)(*piVar1 + 0x2c))("-nomusic");
    uVar2 = (**(code **)(*piVar3 + 0xc))("CloseCaption_IntroMovie",1);
    uVar2 = (**(code **)(iVar1 + 0x14))("SourceScheme");
    uVar2 = (**(code **)(iVar6 + 0xc))("Default",uVar1);
    uVar2 = DevMsg(1,"Successfully loaded audio cache file\n");
    uVar2 = Error("CUtlCachedFileData:  Can\'t Init, no repository file specified.");
    uVar2 = Error("Unable to get factory from unicode.dll");
    uVar2 = Error("Unable to load interface \'%s\' from unicode.dll","VENGINEUNICODE001");
    uVar2 = Error("Unable to load unicode.dll");
    uVar2 = FUN_0041f130(param_1,"base",0);
    uVar2 = FUN_0041f130(param_1,"category",0xffffffff);
    uVar2 = FUN_0041f130(param_1,"default",0);
    uVar2 = FUN_0041f130(param_1,"noparent_attr",0);
    uVar2 = FUN_0041f130(param_1,"noparent_bodygroups",0);
    uVar2 = FUN_0041f130(param_1,"noparent_flags",0);
    uVar2 = FUN_0041f130(param_1,"type",0xffffffff);
    uVar2 = FUN_0041f130(param_1,"unlockxp",0);
    uVar2 = FUN_0041f130(param_2,"tdm_kl",0);
    uVar2 = FUN_0041f130(param_2,"tdm_tl",0);
    uVar2 = FUN_1001fc56(pauVar1,(undefined (*) [16])"-assertonce");
    uVar2 = FUN_1001fc56(pauVar1,(undefined (*) [16])"-assertstack");
    uVar2 = FUN_1001fc56(pauVar1,(undefined (*) [16])"-mpi_worker");
    uVar2 = FUN_100845f0(param_1,(byte *)"disableflashlight");
    uVar2 = FUN_100845f0(param_1,(byte *)"disablereceiveshadows");
    uVar2 = FUN_100845f0(param_1,(byte *)"nodamageforces");
    uVar2 = FUN_101448a0(param_2,(uint *)"color",(undefined *)&local_8);
    uVar2 = FUN_1014fb90(*(void **)((int)this + 0x1454),(int *)"particle/fire");
    uVar2 = FUN_101c7240(this,"Blockade.Setup",0,0);
    uVar2 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting element type name, didn\'t find it!")
    uVar2 = FUN_10265ef0((byte *)"bugreporter_filequeue",pbVar1);
    uVar2 = FUN_10265ef0(pbVar1,(byte *)"server_addban");
    uVar2 = FUN_10265ef0(pbVar1,(byte *)"server_cvar");
    uVar2 = FUN_10265ef0(pbVar1,(byte *)"server_message");
    uVar2 = FUN_10265ef0(pbVar1,(byte *)"server_shutdown");
    uVar2 = FUN_10265ef0(pbVar1,(byte *)"server_spawn");
    uVar2 = FUN_10265f50(&DAT_105fb468,(byte *)"infested");
    uVar2 = FUN_10265f50(&DAT_10680b50,(byte *)"infested");
    uVar2 = FUN_10265f50((byte *)param_1[0x103],(byte *)"setpos");
    uVar2 = FUN_10265f50(param_1,(byte *)"Apply");
    uVar2 = FUN_10265f50(param_1,(byte *)"Create");
    uVar2 = FUN_10265f50(param_1,(byte *)"DeleteOperation");
    uVar2 = FUN_10265f50(param_1,(byte *)"DeletePanel");
    uVar2 = FUN_10265f50(param_1,(byte *)"RevertToSaved");
    uVar2 = FUN_10265f50(param_1,(byte *)"ShowHelp");
    uVar2 = FUN_10265f50(param_2,(byte *)"warning");
    uVar2 = FUN_10265f50(pbVar1,(byte *)"english");
    uVar2 = FUN_10265f50(pbVar1,(byte *)"exclude");
    uVar2 = FUN_102687d0(param_1,(uint *)"frame",*(uint *)((int)this + 0x204));
    uVar2 = FUN_102687d0(param_1,(uint *)"frames",0);
    uVar2 = FUN_102687d0(param_1,(uint *)"iController",0);
    uVar2 = FUN_102687d0(param_1,(uint *)"outputavi",0);
    uVar2 = FUN_102687d0(param_1,(uint *)"outputjpg",0);
    uVar2 = FUN_102687d0(param_1,(uint *)"scaleImage",0);
    uVar2 = FUN_102687d0(param_1,(uint *)"starttick",0xffffffff);
    uVar2 = FUN_102687d0(param_2,(uint *)"Width",0);
    uVar2 = FUN_102687d0(this_00,(uint *)"cldll",0);
    uVar2 = FUN_102687d0(this_00,(uint *)"result",0);
    uVar2 = FUN_102687d0(this_00,(uint *)"svonly",0);
    uVar2 = FUN_10268900(*(void **)*param_1,(uint *)"propertysheet",0);
    uVar2 = FUN_10268900(this_00,(uint *)"PanelPtr",0);
    uVar2 = FUN_10268930(param_1,(uint *)"filename",0);
    uVar2 = FUN_10268930(this_00,(uint *)"hlversion",(uint)&DAT_103236cf);
    uVar2 = FUN_10268930(this_00,(uint *)"url_dl",(uint)&DAT_103236cf);
    uVar2 = FUN_10268930(this_00,(uint *)"url_info",(uint)&DAT_103236cf);
    uVar2 = FUN_10286590((undefined4 *)"BaseInputDialog");
    uVar2 = FUN_10286590((undefined4 *)"Button");
    uVar2 = FUN_10286590((undefined4 *)"CBaseActionEditDialog");
    uVar2 = FUN_10286590((undefined4 *)"CColorCorrectionUIChildPanel");
    uVar2 = FUN_10286590((undefined4 *)"CCurveEditorPanel");
    uVar2 = FUN_10286590((undefined4 *)"COperationFileListFrame");
    uVar2 = FUN_10286590((undefined4 *)"CPerfUIChildPanel");
    uVar2 = FUN_10286590((undefined4 *)"CProceduralTexturePanel");
    uVar2 = FUN_10286590((undefined4 *)"ComboBox");
    uVar2 = FUN_10286590((undefined4 *)"ContinuousProgressBar");
    uVar2 = FUN_10286590((undefined4 *)"EditablePanel");
    uVar2 = FUN_10286590((undefined4 *)"Frame");
    uVar2 = FUN_10286590((undefined4 *)"MenuButton");
    uVar2 = FUN_10286590((undefined4 *)"Panel");
    uVar2 = FUN_10286590((undefined4 *)"ProgressBar");
    uVar2 = FUN_10286590((undefined4 *)"TextEntry");
    uVar2 = FUN_10286590((undefined4 *)"ToggleButton");
    uVar2 = FUN_10286590((undefined4 *)"TreeView");
    uVar2 = FUN_10286590((undefined4 *)"vgui::CTreeViewListControl");
    uVar2 = FUN_10286590((undefined4 *)"vgui::EditablePanel");
    uVar2 = FUN_10286590((undefined4 *)"vgui::Frame");
    uVar2 = FUN_10286590((undefined4 *)"vgui::ListPanel");
    uVar2 = FUN_10286590((undefined4 *)"vgui::Panel");
    uVar2 = FUN_10286590((undefined4 *)"vgui::Slider");
    uVar2 = FUN_10286590((undefined4 *)"vgui::TextEntry");
    uVar2 = FUN_10286590((undefined4 *)"vgui::TileViewPanelEx");
    uVar2 = FUN_102866e0((uint *)"BaseInputDialog");
    uVar2 = FUN_102866e0((uint *)"Button");
    uVar2 = FUN_102866e0((uint *)"CBaseActionEditDialog");
    uVar2 = FUN_102866e0((uint *)"CColorCorrectionUIChildPanel");
    uVar2 = FUN_102866e0((uint *)"CCurveEditorPanel");
    uVar2 = FUN_102866e0((uint *)"COperationFileListFrame");
    uVar2 = FUN_102866e0((uint *)"CPerfUIChildPanel");
    uVar2 = FUN_102866e0((uint *)"CProceduralTexturePanel");
    uVar2 = FUN_102866e0((uint *)"ComboBox");
    uVar2 = FUN_102866e0((uint *)"ContinuousProgressBar");
    uVar2 = FUN_102866e0((uint *)"EditablePanel");
    uVar2 = FUN_102866e0((uint *)"Frame");
    uVar2 = FUN_102866e0((uint *)"MenuButton");
    uVar2 = FUN_102866e0((uint *)"Panel");
    uVar2 = FUN_102866e0((uint *)"ProgressBar");
    uVar2 = FUN_102866e0((uint *)"TextEntry");
    uVar2 = FUN_102866e0((uint *)"ToggleButton");
    uVar2 = FUN_102866e0((uint *)"TreeView");
    uVar2 = FUN_102866e0((uint *)"vgui::CTreeViewListControl");
    uVar2 = FUN_102866e0((uint *)"vgui::EditablePanel");
    uVar2 = FUN_102866e0((uint *)"vgui::Frame");
    uVar2 = FUN_102866e0((uint *)"vgui::ListPanel");
    uVar2 = FUN_102866e0((uint *)"vgui::Panel");
    uVar2 = FUN_102866e0((uint *)"vgui::Slider");
    uVar2 = FUN_102866e0((uint *)"vgui::TextEntry");
    uVar2 = FUN_102866e0((uint *)"vgui::TileViewPanelEx");
    uVar2 = FUN_10290a70((int *)"BaseInputDialog");
    uVar2 = FUN_10290a70((int *)"Button");
    uVar2 = FUN_10290a70((int *)"CBaseActionEditDialog");
    uVar2 = FUN_10290a70((int *)"CColorCorrectionUIChildPanel");
    uVar2 = FUN_10290a70((int *)"CCurveEditorPanel");
    uVar2 = FUN_10290a70((int *)"COperationFileListFrame");
    uVar2 = FUN_10290a70((int *)"CPerfUIChildPanel");
    uVar2 = FUN_10290a70((int *)"CProceduralTexturePanel");
    uVar2 = FUN_10290a70((int *)"ComboBox");
    uVar2 = FUN_10290a70((int *)"ContinuousProgressBar");
    uVar2 = FUN_10290a70((int *)"EditablePanel");
    uVar2 = FUN_10290a70((int *)"Frame");
    uVar2 = FUN_10290a70((int *)"MenuButton");
    uVar2 = FUN_10290a70((int *)"Panel");
    uVar2 = FUN_10290a70((int *)"ProgressBar");
    uVar2 = FUN_10290a70((int *)"TextEntry");
    uVar2 = FUN_10290a70((int *)"ToggleButton");
    uVar2 = FUN_10290a70((int *)"TreeView");
    uVar2 = FUN_10290a70((int *)"vgui::CTreeViewListControl");
    uVar2 = FUN_10290a70((int *)"vgui::EditablePanel");
    uVar2 = FUN_10290a70((int *)"vgui::Frame");
    uVar2 = FUN_10290a70((int *)"vgui::ListPanel");
    uVar2 = FUN_10290a70((int *)"vgui::Panel");
    uVar2 = FUN_10290a70((int *)"vgui::Slider");
    uVar2 = FUN_10290a70((int *)"vgui::TextEntry");
    uVar2 = FUN_10290a70((int *)"vgui::TileViewPanelEx");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"GoalDistance");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"Stage");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"_light");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"angles");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"cheapwaterstartdistance");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"fanfriction");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"fireballsprite");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"globalname");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"panelname");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"skyname");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"snapshot_file");
    uVar2 = FUN_10399710((byte *)param_1,(byte *)"soundscape");
    uVar2 = FUN_10399710(local_404,(byte *)"automate");
    uVar2 = FUN_10399710(param_1,(byte *)"!target1");
    uVar2 = FUN_10399710(param_1,(byte *)"!target2");
    uVar2 = FUN_10399710(param_1,(byte *)"Apply");
    uVar2 = FUN_10399710(param_1,(byte *)"DeletePanel");
    uVar2 = FUN_10399710(param_1,(byte *)"RevertToSaved");
    uVar2 = FUN_10399710(param_1,(byte *)"ShowHelp");
    uVar2 = FUN_10399710(param_1,(byte *)"StepSounds");
    uVar2 = FUN_10399710(param_1,(byte *)"fademindist");
    uVar2 = FUN_10399710(pbVar1,(byte *)"ignoremsg");
    uVar2 = FUN_1039d9a0(param_1,(uint *)"frame",*(uint *)((int)this + 0x204));
    uVar2 = FUN_1039d9a0(param_1,(uint *)"frames",0);
    uVar2 = FUN_1039d9a0(param_1,(uint *)"scaleImage",0);
    uVar2 = FUN_1039d9a0(this_00,(uint *)"result",0);
    uVar2 = FUN_1039dad0(this_00,(uint *)"PanelPtr",0);
    uVar2 = FUN_103b2880((undefined4 *)"Button");
    uVar2 = FUN_103b2880((undefined4 *)"ComboBox");
    uVar2 = FUN_103b2880((undefined4 *)"ContinuousProgressBar");
    uVar2 = FUN_103b2880((undefined4 *)"EditablePanel");
    uVar2 = FUN_103b2880((undefined4 *)"Frame");
    uVar2 = FUN_103b2880((undefined4 *)"Label");
    uVar2 = FUN_103b2880((undefined4 *)"MenuButton");
    uVar2 = FUN_103b2880((undefined4 *)"Panel");
    uVar2 = FUN_103b2880((undefined4 *)"ProgressBar");
    uVar2 = FUN_103b2880((undefined4 *)"TextEntry");
    uVar2 = FUN_103b2880((undefined4 *)"ToggleButton");
    uVar2 = FUN_103b29d0((uint *)"Button");
    uVar2 = FUN_103b29d0((uint *)"ComboBox");
    uVar2 = FUN_103b29d0((uint *)"ContinuousProgressBar");
    uVar2 = FUN_103b29d0((uint *)"EditablePanel");
    uVar2 = FUN_103b29d0((uint *)"Frame");
    uVar2 = FUN_103b29d0((uint *)"Label");
    uVar2 = FUN_103b29d0((uint *)"MenuButton");
    uVar2 = FUN_103b29d0((uint *)"Panel");
    uVar2 = FUN_103b29d0((uint *)"ProgressBar");
    uVar2 = FUN_103b29d0((uint *)"TextEntry");
    uVar2 = FUN_103b29d0((uint *)"ToggleButton");
    uVar2 = FUN_103e8bc0((int *)"Button");
    uVar2 = FUN_103e8bc0((int *)"ComboBox");
    uVar2 = FUN_103e8bc0((int *)"ContinuousProgressBar");
    uVar2 = FUN_103e8bc0((int *)"EditablePanel");
    uVar2 = FUN_103e8bc0((int *)"Frame");
    uVar2 = FUN_103e8bc0((int *)"Label");
    uVar2 = FUN_103e8bc0((int *)"MenuButton");
    uVar2 = FUN_103e8bc0((int *)"Panel");
    uVar2 = FUN_103e8bc0((int *)"ProgressBar");
    uVar2 = FUN_103e8bc0((int *)"TextEntry");
    uVar2 = FUN_103e8bc0((int *)"ToggleButton");
    uVar2 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting element type name, didn\'t find it!")
    uVar2 = FUN_1042df20(*(byte **)(local_8 + 0x24),(byte *)"unnamed");
    uVar2 = FUN_1042df20(param_1,(byte *)"active");
    uVar2 = FUN_1042df20(param_2,(byte *)"empty");
    uVar2 = FUN_1042df20(param_3,(byte *)"messagemode");
    uVar2 = FUN_1042df20(param_3,(byte *)"messagemode2");
    uVar2 = FUN_1042df20(pbVar1,(byte *)"round_start");
    uVar2 = FUN_1042df80((byte *)"LowViolence_On",param_1);
    uVar2 = FUN_1042df80((byte *)"OnEngineEndGame",pbVar1);
    uVar2 = FUN_1042df80(local_88,(byte *)"english");
    uVar2 = FUN_1042df80(param_1,(byte *)"#L4D360UI_SplitScreenDirection_Horizontal");
    uVar2 = FUN_1042df80(param_1,(byte *)"Apply");
    uVar2 = FUN_1042df80(param_1,(byte *)"DeletePanel");
    uVar2 = FUN_1042df80(param_1,(byte *)"RevertToSaved");
    uVar2 = FUN_1042df80(param_1,(byte *)"ShowHelp");
    uVar2 = FUN_1042df80(param_1,(byte *)"StepSounds");
    uVar2 = FUN_1042df80(pbVar1,(byte *)"PowerSavingsEnabled");
    uVar2 = FUN_1042df80(pbVar1,(byte *)"burst");
    uVar2 = FUN_1042df80(pbVar1,(byte *)"debris");
    uVar2 = FUN_1042df80(pbVar1,(byte *)"fademaxdist");
    uVar2 = FUN_1042df80(pbVar1,(byte *)"fademindist");
    uVar2 = FUN_1042df80(pbVar1,(byte *)"multiplayer_break");
    uVar2 = FUN_1042df80(pbVar1,(byte *)"placementattachment");
    uVar2 = FUN_1042df80(pbVar1,(byte *)"placementbone");
    uVar2 = FUN_1042f270(param_1,(uint *)"allowoutofrange",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"arrowheight",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"arrowoffsety",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"arrowwidth",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"delta_exp",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"frame",*(uint *)((int)this + 0x204));
    uVar2 = FUN_1042f270(param_1,(uint *)"framerate",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"frames",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"hidelabels",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"magnitude",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"menutitletall",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"menutitlewide",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"menutitlex",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"menutitley",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"picheight",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"picoffsetx",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"picwidth",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"rightarrowoffsetx",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"scaleImage",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"subpicgap",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"subpicheight",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"subpicoffsetx",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"subpicoffsety",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"subpics",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"subpicwidth",0);
    uVar2 = FUN_1042f270(param_1,(uint *)"total_exp",0);
    uVar2 = FUN_1042f270(this_00,(uint *)"enable_flicker",0);
    uVar2 = FUN_1042f270(this_00,(uint *)"flicker_alpha",0);
    uVar2 = FUN_1042f270(this_00,(uint *)"max_dust_particles",0);
    uVar2 = FUN_1042f270(this_00,(uint *)"result",0);
    uVar2 = FUN_1042f3a0(*(void **)*param_1,(uint *)"TIPropertySheet",0);
    uVar2 = FUN_1042f3a0(*(void **)*param_1,(uint *)"propertysheet",0);
    uVar2 = FUN_1042f3a0(this_00,(uint *)"PanelPtr",0);
    uVar2 = FUN_1042f3d0(param_1,(uint *)"borderimage",(uint)&DAT_104eefb3);
    uVar2 = FUN_1042f3d0(param_1,(uint *)"headerFont",0);
    uVar2 = FUN_1042f3d0(param_1,(uint *)"leftarrow",(uint)&DAT_104eefb3);
    uVar2 = FUN_1042f3d0(param_1,(uint *)"rightarrow",(uint)&DAT_104eefb3);
    uVar2 = FUN_1042f3d0(param_1,(uint *)"rowfont",0);
    uVar2 = FUN_1042f3d0(param_1,(uint *)"subpicnamefont",(uint)&DAT_104eefb3);
    uVar2 = FUN_104300e0(piVar1,local_10c,"PROFILE",(int *)0x0);
    uVar2 = FUN_104452c0((undefined4 *)"BaseInputDialog");
    uVar2 = FUN_104452c0((undefined4 *)"Button");
    uVar2 = FUN_104452c0((undefined4 *)"CBaseHudChat");
    uVar2 = FUN_104452c0((undefined4 *)"CBaseHudChatInputLine");
    uVar2 = FUN_104452c0((undefined4 *)"CBaseHudChatLine");
    uVar2 = FUN_104452c0((undefined4 *)"CBaseItemPurchasingPopup");
    uVar2 = FUN_104452c0((undefined4 *)"CBaseModFrame");
    uVar2 = FUN_104452c0((undefined4 *)"CBaseViewport");
    uVar2 = FUN_104452c0((undefined4 *)"CClientScoreBoardDialog");
    uVar2 = FUN_104452c0((undefined4 *)"CExButton");
    uVar2 = FUN_104452c0((undefined4 *)"CExRichText");
    uVar2 = FUN_104452c0((undefined4 *)"CHudNumericDisplay");
    uVar2 = FUN_104452c0((undefined4 *)"CLoadoutSlotPanel");
    uVar2 = FUN_104452c0((undefined4 *)"CMDLPanel");
    uVar2 = FUN_104452c0((undefined4 *)"CPolygonButton");
    uVar2 = FUN_104452c0((undefined4 *)"CPotteryWheelPanel");
    uVar2 = FUN_104452c0((undefined4 *)"CSpectatorGUI");
    uVar2 = FUN_104452c0((undefined4 *)"CTeamMenu");
    uVar2 = FUN_104452c0((undefined4 *)"CTextWindow");
    uVar2 = FUN_104452c0((undefined4 *)"ClientModeTINormal");
    uVar2 = FUN_104452c0((undefined4 *)"ComboBox");
    uVar2 = FUN_104452c0((undefined4 *)"ContinuousProgressBar");
    uVar2 = FUN_104452c0((undefined4 *)"EditablePanel");
    uVar2 = FUN_104452c0((undefined4 *)"Frame");
    uVar2 = FUN_104452c0((undefined4 *)"GenericPanelList");
    uVar2 = FUN_104452c0((undefined4 *)"ImagePanel");
    uVar2 = FUN_104452c0((undefined4 *)"Label");
    uVar2 = FUN_104452c0((undefined4 *)"MenuButton");
    uVar2 = FUN_104452c0((undefined4 *)"Panel");
    uVar2 = FUN_104452c0((undefined4 *)"ProgressBar");
    uVar2 = FUN_104452c0((undefined4 *)"RICHTEXTCLASS");
    uVar2 = FUN_104452c0((undefined4 *)"TIButton");
    uVar2 = FUN_104452c0((undefined4 *)"TICheckButton");
    uVar2 = FUN_104452c0((undefined4 *)"TIHorizontalList");
    uVar2 = FUN_104452c0((undefined4 *)"TIImageButton");
    uVar2 = FUN_104452c0((undefined4 *)"TIPopUp_Base");
    uVar2 = FUN_104452c0((undefined4 *)"TIRichText");
    uVar2 = FUN_104452c0((undefined4 *)"TIViewport");
    uVar2 = FUN_104452c0((undefined4 *)"TextEntry");
    uVar2 = FUN_104452c0((undefined4 *)"ToggleButton");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::Button");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::CConsoleDialog");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::ComboBox");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::EditablePanel");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::Frame");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::ImagePanel");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::Label");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::MessageBox");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::MessagingPanel");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::Panel");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::PanelListPanel2");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::PropertyDialog");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::PropertyPage");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::RichText");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::ScrollBar");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::Slider");
    uVar2 = FUN_104452c0((undefined4 *)"vgui::TIButton");
    uVar2 = FUN_10445410((uint *)"BaseInputDialog");
    uVar2 = FUN_10445410((uint *)"Button");
    uVar2 = FUN_10445410((uint *)"CBaseHudChat");
    uVar2 = FUN_10445410((uint *)"CBaseHudChatInputLine");
    uVar2 = FUN_10445410((uint *)"CBaseHudChatLine");
    uVar2 = FUN_10445410((uint *)"CBaseItemPurchasingPopup");
    uVar2 = FUN_10445410((uint *)"CBaseModFrame");
    uVar2 = FUN_10445410((uint *)"CBaseViewport");
    uVar2 = FUN_10445410((uint *)"CClientScoreBoardDialog");
    uVar2 = FUN_10445410((uint *)"CExButton");
    uVar2 = FUN_10445410((uint *)"CExRichText");
    uVar2 = FUN_10445410((uint *)"CHudNumericDisplay");
    uVar2 = FUN_10445410((uint *)"CLoadoutSlotPanel");
    uVar2 = FUN_10445410((uint *)"CMDLPanel");
    uVar2 = FUN_10445410((uint *)"CPolygonButton");
    uVar2 = FUN_10445410((uint *)"CPotteryWheelPanel");
    uVar2 = FUN_10445410((uint *)"CSpectatorGUI");
    uVar2 = FUN_10445410((uint *)"CTeamMenu");
    uVar2 = FUN_10445410((uint *)"CTextWindow");
    uVar2 = FUN_10445410((uint *)"ClientModeTINormal");
    uVar2 = FUN_10445410((uint *)"ComboBox");
    uVar2 = FUN_10445410((uint *)"ContinuousProgressBar");
    uVar2 = FUN_10445410((uint *)"EditablePanel");
    uVar2 = FUN_10445410((uint *)"Frame");
    uVar2 = FUN_10445410((uint *)"GenericPanelList");
    uVar2 = FUN_10445410((uint *)"ImagePanel");
    uVar2 = FUN_10445410((uint *)"Label");
    uVar2 = FUN_10445410((uint *)"MenuButton");
    uVar2 = FUN_10445410((uint *)"Panel");
    uVar2 = FUN_10445410((uint *)"ProgressBar");
    uVar2 = FUN_10445410((uint *)"RICHTEXTCLASS");
    uVar2 = FUN_10445410((uint *)"TIButton");
    uVar2 = FUN_10445410((uint *)"TICheckButton");
    uVar2 = FUN_10445410((uint *)"TIHorizontalList");
    uVar2 = FUN_10445410((uint *)"TIImageButton");
    uVar2 = FUN_10445410((uint *)"TIPopUp_Base");
    uVar2 = FUN_10445410((uint *)"TIRichText");
    uVar2 = FUN_10445410((uint *)"TIViewport");
    uVar2 = FUN_10445410((uint *)"TextEntry");
    uVar2 = FUN_10445410((uint *)"ToggleButton");
    uVar2 = FUN_10445410((uint *)"vgui::Button");
    uVar2 = FUN_10445410((uint *)"vgui::CConsoleDialog");
    uVar2 = FUN_10445410((uint *)"vgui::ComboBox");
    uVar2 = FUN_10445410((uint *)"vgui::EditablePanel");
    uVar2 = FUN_10445410((uint *)"vgui::Frame");
    uVar2 = FUN_10445410((uint *)"vgui::ImagePanel");
    uVar2 = FUN_10445410((uint *)"vgui::Label");
    uVar2 = FUN_10445410((uint *)"vgui::MessageBox");
    uVar2 = FUN_10445410((uint *)"vgui::MessagingPanel");
    uVar2 = FUN_10445410((uint *)"vgui::Panel");
    uVar2 = FUN_10445410((uint *)"vgui::PanelListPanel2");
    uVar2 = FUN_10445410((uint *)"vgui::PropertyDialog");
    uVar2 = FUN_10445410((uint *)"vgui::PropertyPage");
    uVar2 = FUN_10445410((uint *)"vgui::RichText");
    uVar2 = FUN_10445410((uint *)"vgui::ScrollBar");
    uVar2 = FUN_10445410((uint *)"vgui::Slider");
    uVar2 = FUN_10445410((uint *)"vgui::TIButton");
    uVar2 = FUN_1044f9a0((int *)"BaseInputDialog");
    uVar2 = FUN_1044f9a0((int *)"Button");
    uVar2 = FUN_1044f9a0((int *)"CBaseHudChat");
    uVar2 = FUN_1044f9a0((int *)"CBaseHudChatInputLine");
    uVar2 = FUN_1044f9a0((int *)"CBaseHudChatLine");
    uVar2 = FUN_1044f9a0((int *)"CBaseItemPurchasingPopup");
    uVar2 = FUN_1044f9a0((int *)"CBaseModFrame");
    uVar2 = FUN_1044f9a0((int *)"CBaseViewport");
    uVar2 = FUN_1044f9a0((int *)"CClientScoreBoardDialog");
    uVar2 = FUN_1044f9a0((int *)"CExButton");
    uVar2 = FUN_1044f9a0((int *)"CExRichText");
    uVar2 = FUN_1044f9a0((int *)"CHudNumericDisplay");
    uVar2 = FUN_1044f9a0((int *)"CLoadoutSlotPanel");
    uVar2 = FUN_1044f9a0((int *)"CMDLPanel");
    uVar2 = FUN_1044f9a0((int *)"CPolygonButton");
    uVar2 = FUN_1044f9a0((int *)"CPotteryWheelPanel");
    uVar2 = FUN_1044f9a0((int *)"CSpectatorGUI");
    uVar2 = FUN_1044f9a0((int *)"CTeamMenu");
    uVar2 = FUN_1044f9a0((int *)"CTextWindow");
    uVar2 = FUN_1044f9a0((int *)"ClientModeTINormal");
    uVar2 = FUN_1044f9a0((int *)"ComboBox");
    uVar2 = FUN_1044f9a0((int *)"ContinuousProgressBar");
    uVar2 = FUN_1044f9a0((int *)"EditablePanel");
    uVar2 = FUN_1044f9a0((int *)"Frame");
    uVar2 = FUN_1044f9a0((int *)"GenericPanelList");
    uVar2 = FUN_1044f9a0((int *)"ImagePanel");
    uVar2 = FUN_1044f9a0((int *)"Label");
    uVar2 = FUN_1044f9a0((int *)"MenuButton");
    uVar2 = FUN_1044f9a0((int *)"Panel");
    uVar2 = FUN_1044f9a0((int *)"ProgressBar");
    uVar2 = FUN_1044f9a0((int *)"RICHTEXTCLASS");
    uVar2 = FUN_1044f9a0((int *)"TIButton");
    uVar2 = FUN_1044f9a0((int *)"TICheckButton");
    uVar2 = FUN_1044f9a0((int *)"TIHorizontalList");
    uVar2 = FUN_1044f9a0((int *)"TIImageButton");
    uVar2 = FUN_1044f9a0((int *)"TIPopUp_Base");
    uVar2 = FUN_1044f9a0((int *)"TIRichText");
    uVar2 = FUN_1044f9a0((int *)"TIViewport");
    uVar2 = FUN_1044f9a0((int *)"TextEntry");
    uVar2 = FUN_1044f9a0((int *)"ToggleButton");
    uVar2 = FUN_1044f9a0((int *)"vgui::Button");
    uVar2 = FUN_1044f9a0((int *)"vgui::CConsoleDialog");
    uVar2 = FUN_1044f9a0((int *)"vgui::ComboBox");
    uVar2 = FUN_1044f9a0((int *)"vgui::EditablePanel");
    uVar2 = FUN_1044f9a0((int *)"vgui::Frame");
    uVar2 = FUN_1044f9a0((int *)"vgui::ImagePanel");
    uVar2 = FUN_1044f9a0((int *)"vgui::Label");
    uVar2 = FUN_1044f9a0((int *)"vgui::MessageBox");
    uVar2 = FUN_1044f9a0((int *)"vgui::MessagingPanel");
    uVar2 = FUN_1044f9a0((int *)"vgui::Panel");
    uVar2 = FUN_1044f9a0((int *)"vgui::PanelListPanel2");
    uVar2 = FUN_1044f9a0((int *)"vgui::PropertyDialog");
    uVar2 = FUN_1044f9a0((int *)"vgui::PropertyPage");
    uVar2 = FUN_1044f9a0((int *)"vgui::RichText");
    uVar2 = FUN_1044f9a0((int *)"vgui::ScrollBar");
    uVar2 = FUN_1044f9a0((int *)"vgui::Slider");
    uVar2 = FUN_1044f9a0((int *)"vgui::TIButton");
    uVar2 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting element type name, didn\'t find it!")
    uVar2 = Msg("Save file %s is not valid\n",local_214);
    uVar2 = Msg("Unable to initialize HMD tracker. Error code %d\n",local_8);
    uVar2 = Msg("Unable to retrieve VRExtendedDisplay.\n");
    uVar2 = Msg("Voice_Init Failed: invalid voice codec %s.\n",param_1);
    uVar2 = V_tier0_stricmp(pbVar1,(byte *)"GenuineIntel");
    uVar2 = Warning("#######################################\n");
    uVar2 = Warning("Bad field type\n");
    uVar2 = Warning("Couldn\'t find script file %s\n",param_1);
    uVar2 = Warning("Engine wasn\'t able to acquire required interfaces!\n");
    uVar2 = Warning("Particles: Missing \'%s\'\n",param_1);
    uVar2 = Warning("Socket accept ioctl(FIONBIO) failed (%i)\n",iVar1);
    uVar2 = Warning("can\'t create %s\n",local_108);
    uVar3 = (**(code **)(*(int *)((int)this + 4) + 0x84))("wheel_fl",&local_2c);
    uVar3 = (**(code **)(*(int *)((int)this + 4) + 0x84))("wheel_fr",&local_5c);
    uVar3 = (**(code **)(*(int *)((int)this + 4) + 0x84))("wheel_rl",param_1);
    uVar3 = (**(code **)(*(int *)((int)this + 4) + 0x84))("wheel_rr",param_1);
    uVar3 = (**(code **)(*(int *)(param_1 + 8) + 0x28))("Player.OnFire");
    uVar3 = (**(code **)(*(int *)(param_1 + 8) + 0x28))("fx.fire_extinguisher_spray");
    uVar3 = (**(code **)(*(int *)(param_1 + 8) + 0x28))("fx.propane_thrust");
    uVar3 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Wait_JoinRoom",1,local_90);
    uVar3 = (**(code **)(*DAT_107c09f0 + 0x2c))("#game_player_changed_name",2,local_394,local_294);
    uVar3 = (**(code **)(*DAT_107c09f0 + 0x2c))("#game_player_left_game",2,local_294,local_314);
    uVar3 = (**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
    uVar3 = (**(code **)(*param_1 + 0x1c))("userid",0);
    uVar3 = (**(code **)(*param_1 + 0x28))("mapname",&DAT_104eefb3);
    uVar3 = (**(code **)(*param_1 + 0x28))("newname",&DAT_104eefb3,local_294,0x100);
    uVar3 = (**(code **)(*piVar1 + 0x20))("-mat_resolveFullFrameDepth",1);
    uVar3 = (**(code **)(*piVar1 + 0x24))("-game",0);
    uVar3 = (**(code **)(*piVar12 + 0x28))("reason",&DAT_104eefb3,local_314,0x80);
    uVar3 = (**(code **)(*piVar4 + 0x2c))("-allowdebug");
    uVar3 = (**(code **)(*piVar6 + 0x1c))("potentialVotes",0);
    uVar3 = (**(code **)(iVar1 + 0xc))("water");
    uVar3 = (**(code **)(iVar4 + 0xc))("Default",uVar1);
    uVar3 = (**(code **)(iVar4 + 0xc))("sprites/fire1.vmt");
    uVar3 = COM_TimestampedLog("CClientState::SetSignonState: end %i",param_1);
    uVar3 = DevMsg(1,"func_ladderendpoint(%s) without matching target\n",puVar5);
    uVar3 = Error("Fatal Error:  Unable to create game window!");
    uVar3 = Error("Unable to init wavedatacache system\n");
    uVar3 = FUN_100612d0(param_1,"func_breakable_surf");
    uVar3 = FUN_1014fb90((void *)((int)this + 0x1460),(int *)"particle/sparkles");
    uVar3 = FUN_1014fb90(this,(int *)"effects/splash1");
    uVar3 = FUN_101a5c10((byte *)"CEngineSoundServer::PrecacheSound: \'%s\' overflow");
    uVar3 = FUN_101bdc70((int *)(param_1 + 8),local_c,local_8,"reslists",(int *)(param_1 + 0x1c));
    uVar3 = FUN_101f3700((int)param_1,3,"#TINoRemoteC4",(char *)0x0,(char *)0x0,(char *)0x0,
    uVar3 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Attribute \"%s\" was defined more than once.\n"
    uVar3 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting \'[\', didn\'t find it!");
    uVar3 = FUN_10265f50((byte *)"CheckButtonChecked",pbVar2);
    uVar3 = FUN_10265f50((byte *)local_170,(byte *)"paint");
    uVar3 = FUN_10265f50((byte *)piVar2[0x104],(byte *)"incremental");
    uVar3 = FUN_10265f50(local_84,(byte *)"english");
    uVar3 = FUN_10265f50(param_1,(byte *)"OnCancel");
    uVar3 = FUN_10265f50(param_1,(byte *)"ShowAlpha");
    uVar3 = FUN_10265f50(param_1,(byte *)"ThumbWarnings");
    uVar3 = FUN_10265f50(param_1,(byte *)"ViewThumbnails");
    uVar3 = FUN_10265f50(pbVar6,(byte *)"consoleonly");
    uVar3 = FUN_102687d0((void *)param_1[0xa6],(uint *)"SpecialTx",0);
    uVar3 = FUN_102687d0(*(void **)((int)this + 0x160),(uint *)"tv_relay",0);
    uVar3 = FUN_102687d0(param_1,(uint *)"state",0);
    uVar3 = FUN_102687d0(param_2,(uint *)"BindsFrame",0);
    uVar3 = FUN_102687d0(this_00,(uint *)"screenx",0);
    uVar3 = FUN_102687d0(this_01,(uint *)"nodegraph",1);
    uVar3 = FUN_10268900(param_1,(uint *)"panel",0);
    uVar3 = FUN_10268930(local_1c,(uint *)"ideal_key",0);
    uVar3 = FUN_10268930(param_1,(uint *)"ControlName",(uint)&DAT_103236cf);
    uVar3 = FUN_10268d10(local_10,(uint *)"cellcolor");
    uVar3 = FUN_10269690(piVar2,(uint *)"resource/SourceScheme.res",0,(int *)0x0);
    uVar3 = FUN_1026b280(param_1,(uint *)"state",uVar2);
    uVar3 = FUN_10286590((undefined4 *)"Button");
    uVar3 = FUN_10286590((undefined4 *)"CheckButton");
    uVar3 = FUN_10286590((undefined4 *)"EditablePanel");
    uVar3 = FUN_10286590((undefined4 *)"Frame");
    uVar3 = FUN_10286590((undefined4 *)"Panel");
    uVar3 = FUN_102866e0((uint *)"Button");
    uVar3 = FUN_102866e0((uint *)"CheckButton");
    uVar3 = FUN_102866e0((uint *)"EditablePanel");
    uVar3 = FUN_102866e0((uint *)"Frame");
    uVar3 = FUN_102866e0((uint *)"Panel");
    uVar3 = FUN_10290a70((int *)"Button");
    uVar3 = FUN_10290a70((int *)"CheckButton");
    uVar3 = FUN_10290a70((int *)"EditablePanel");
    uVar3 = FUN_10290a70((int *)"Frame");
    uVar3 = FUN_10290a70((int *)"Panel");
    uVar3 = FUN_102c09d0(DAT_107a27d0,(uint *)"assign_bomb",'\x01');
    uVar3 = FUN_102eb0f0(puVar2,(uint *)"precache_npcvehicles");
    uVar3 = FUN_102eb0f0(puVar2,(uint *)"precache_vehicles");
    uVar3 = FUN_10314250(param_1,(uint *)"mafia_mode");
    uVar3 = FUN_10314280(DAT_10693b08,(uint *)"spawn_in_cars",'\x01');
    uVar3 = FUN_10399710((byte *)param_1,(byte *)"color");
    uVar3 = FUN_10399710((byte *)param_1,(byte *)"fish_count");
    uVar3 = FUN_10399710((byte *)param_1,(byte *)"targetname");
    uVar3 = FUN_10399710(param_1,(byte *)"OnCancel");
    uVar3 = FUN_10399710(param_1,(byte *)"PhysicsImpactSounds");
    uVar3 = FUN_10399710(pbVar6,(byte *)"demorestart");
    uVar3 = FUN_10399710(pbVar6,(byte *)"hostage_entity");
    uVar3 = FUN_10399710(pbVar9,(byte *)"spec_prev");
    uVar3 = FUN_1039db00(param_1,(uint *)"ControlName",(uint)&DAT_1043677a);
    uVar3 = FUN_1039de90(local_10,(uint *)"cellcolor");
    uVar3 = FUN_1039e3f0(piVar2,(uint *)"scripts/weapon_manifest.txt",&DAT_1045b2f0,(int *)0x0);
    uVar3 = FUN_1039fce0(param_1,(uint *)"state",uVar2);
    uVar3 = FUN_103b2880((undefined4 *)"Button");
    uVar3 = FUN_103b2880((undefined4 *)"CheckButton");
    uVar3 = FUN_103b2880((undefined4 *)"EditablePanel");
    uVar3 = FUN_103b2880((undefined4 *)"Frame");
    uVar3 = FUN_103b2880((undefined4 *)"Label");
    uVar3 = FUN_103b2880((undefined4 *)"Panel");
    uVar3 = FUN_103b29d0((uint *)"Button");
    uVar3 = FUN_103b29d0((uint *)"CheckButton");
    uVar3 = FUN_103b29d0((uint *)"EditablePanel");
    uVar3 = FUN_103b29d0((uint *)"Frame");
    uVar3 = FUN_103b29d0((uint *)"Label");
    uVar3 = FUN_103b29d0((uint *)"Panel");
    uVar3 = FUN_103e8bc0((int *)"Button");
    uVar3 = FUN_103e8bc0((int *)"CheckButton");
    uVar3 = FUN_103e8bc0((int *)"EditablePanel");
    uVar3 = FUN_103e8bc0((int *)"Frame");
    uVar3 = FUN_103e8bc0((int *)"Label");
    uVar3 = FUN_103e8bc0((int *)"Panel");
    uVar3 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Attribute \"%s\" was defined more than once.\n"
    uVar3 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting \'[\', didn\'t find it!");
    uVar3 = FUN_1042df20((byte *)"freezecam_started",pbVar2);
    uVar3 = FUN_1042df20((byte *)"hide_freezepanel",pbVar2);
    uVar3 = FUN_1042df20((byte *)"round_end",pbVar2);
    uVar3 = FUN_1042df20((byte *)"server_spawn",pbVar2);
    uVar3 = FUN_1042df20((byte *)"show_freezepanel",pbVar2);
    uVar3 = FUN_1042df20(local_1810,(byte *)"func_proprrespawnzone");
    uVar3 = FUN_1042df20(local_1810,(byte *)"prop_physics_clientside");
    uVar3 = FUN_1042df20(local_1810,(byte *)"prop_physics_multiplayer");
    uVar3 = FUN_1042df20(local_184,(byte *)"SEMICOLON");
    uVar3 = FUN_1042df20(pbVar1,(byte *)"A_BUTTON");
    uVar3 = FUN_1042df20(pbVar1,(byte *)"EditSticks");
    uVar3 = FUN_1042df20(pbVar2,(byte *)"replay_status");
    uVar3 = FUN_1042df80((byte *)"MouseYInvertDisabled",pbVar1);
    uVar3 = FUN_1042df80(local_454,(byte *)"instantly");
    uVar3 = FUN_1042df80(param_1,(byte *)"OnCancel");
    uVar3 = FUN_1042df80(param_1,(byte *)"PhysicsImpactSounds");
    uVar3 = FUN_1042df80(param_1,(byte *)"burning_character");
    uVar3 = FUN_1042df80(param_1,(byte *)"d3_citadel_03");
    uVar3 = FUN_1042df80(param_1,(byte *)"ep1_citadel_02");
    uVar3 = FUN_1042df80(param_1,(byte *)"indicator_capture");
    uVar3 = FUN_1042df80(param_1,(byte *)"vguicancel");
    uVar3 = FUN_1042df80(param_3,(byte *)"screenshot");
    uVar3 = FUN_1042df80(pbVar1,(byte *)"Audio");
    uVar3 = FUN_1042df80(pbVar1,(byte *)"local");
    uVar3 = FUN_1042df80(pbVar2,(byte *)"getpos_exact");
    uVar3 = FUN_1042df80(pbVar2,(byte *)"player_vipescorted");
    uVar3 = FUN_1042df80(pbVar2,(byte *)"vote_changed");
    uVar3 = FUN_1042f270(param_1,(uint *)"traillength",0);
    uVar3 = FUN_1042f270(this_00,(uint *)"screenx",0);
    uVar3 = FUN_1042f3a0(param_1,(uint *)"baseanimating",0);
    uVar3 = FUN_1042f3d0(param_1,(uint *)"ControlName",(uint)&DAT_104eefb3);
    uVar3 = FUN_1042f760(local_10,(uint *)"cellcolor");
    uVar3 = FUN_104300e0(piVar2,(uint *)"scripts/weapon_manifest.txt",&DAT_104eefa0,(int *)0x0);
    uVar3 = FUN_10431960(param_1,(uint *)"state",uVar2 & 0xff);
    uVar3 = FUN_10431960(param_1,(uint *)"state",uVar2);
    uVar3 = FUN_104319f0(param_1,(uint *)"command",pcVar4);
    uVar3 = FUN_104452c0((undefined4 *)"Button");
    uVar3 = FUN_104452c0((undefined4 *)"CBaseModFrame");
    uVar3 = FUN_104452c0((undefined4 *)"CContextMenuBase");
    uVar3 = FUN_104452c0((undefined4 *)"CheckButton");
    uVar3 = FUN_104452c0((undefined4 *)"EditablePanel");
    uVar3 = FUN_104452c0((undefined4 *)"Frame");
    uVar3 = FUN_104452c0((undefined4 *)"Label");
    uVar3 = FUN_104452c0((undefined4 *)"Panel");
    uVar3 = FUN_104452c0((undefined4 *)"TIImageButton");
    uVar3 = FUN_104452c0((undefined4 *)"vgui::CheckButton");
    uVar3 = FUN_104452c0((undefined4 *)"vgui::EditablePanel");
    uVar3 = FUN_104452c0((undefined4 *)"vgui::Frame");
    uVar3 = FUN_104452c0((undefined4 *)"vgui::PropertyPage");
    uVar3 = FUN_104452c0((undefined4 *)"vgui::RichText");
    uVar3 = FUN_10445410((uint *)"Button");
    uVar3 = FUN_10445410((uint *)"CBaseModFrame");
    uVar3 = FUN_10445410((uint *)"CContextMenuBase");
    uVar3 = FUN_10445410((uint *)"CheckButton");
    uVar3 = FUN_10445410((uint *)"EditablePanel");
    uVar3 = FUN_10445410((uint *)"Frame");
    uVar3 = FUN_10445410((uint *)"Label");
    uVar3 = FUN_10445410((uint *)"Panel");
    uVar3 = FUN_10445410((uint *)"TIImageButton");
    uVar3 = FUN_10445410((uint *)"vgui::CheckButton");
    uVar3 = FUN_10445410((uint *)"vgui::EditablePanel");
    uVar3 = FUN_10445410((uint *)"vgui::Frame");
    uVar3 = FUN_10445410((uint *)"vgui::PropertyPage");
    uVar3 = FUN_10445410((uint *)"vgui::RichText");
    uVar3 = FUN_1044f9a0((int *)"Button");
    uVar3 = FUN_1044f9a0((int *)"CBaseModFrame");
    uVar3 = FUN_1044f9a0((int *)"CContextMenuBase");
    uVar3 = FUN_1044f9a0((int *)"CheckButton");
    uVar3 = FUN_1044f9a0((int *)"EditablePanel");
    uVar3 = FUN_1044f9a0((int *)"Frame");
    uVar3 = FUN_1044f9a0((int *)"Label");
    uVar3 = FUN_1044f9a0((int *)"Panel");
    uVar3 = FUN_1044f9a0((int *)"TIImageButton");
    uVar3 = FUN_1044f9a0((int *)"vgui::CheckButton");
    uVar3 = FUN_1044f9a0((int *)"vgui::EditablePanel");
    uVar3 = FUN_1044f9a0((int *)"vgui::Frame");
    uVar3 = FUN_1044f9a0((int *)"vgui::PropertyPage");
    uVar3 = FUN_1044f9a0((int *)"vgui::RichText");
    uVar3 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Attribute \"%s\" was defined more than once.\n"
    uVar3 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting \'[\', didn\'t find it!");
    uVar3 = Msg("unknown type %d in ProcessSceneEvent()\n",uVar2);
    uVar3 = Msg((byte *)"TSList cannot hold more that %d nodes\n");
    uVar3 = Warning("**COULD NOT CREATE SOUNDENT**\n");
    uVar3 = Warning("CBugUIPanel::UploadFile:  Unable to open local path \'%s\'\n",param_1);
    uVar3 = Warning("CSceneEntity::LoadSceneFromString: Unable to parse scene data \'%s\'\n",param_1
    uVar3 = Warning("CShadowMgr::AddDecalToShadowList - overflowed m_ShadowSurfaces linked list!\n")
    uVar3 = Warning("ERROR: CSOAContainer_Serializable::Unserialize - missing version field!\n");
    uVar3 = Warning("HandleCommand_JoinTeam( %d ) - invalid team index.\n",param_1);
    uVar3 = Warning("UnserializeDMX: Unable to open file \"%s\"\n");
    uVar3 = Warning("VPROF PLAYBACK ASSERT (%s, line %d) - stopping playback.\n",
    uVar3 = Warning("vprof_playback_start: Open( %s ) failed.\n",puVar5);
    uVar3 = und_strncmp(DAT_10848d90,"template-parameter-",0x13);
    uVar4 = (**(code **)(**(int **)((int)this + 200) + 0xc))("instancebaseline");
    uVar4 = (**(code **)(*DAT_10650104 + 0xc))("PlayerHelmet");
    uVar4 = (**(code **)(*DAT_10650104 + 0xc))("default");
    uVar4 = (**(code **)(*DAT_1077924c + 0xc))("default");
    uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Chat_All",2,local_3ec,local_7f4);
    uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Chat_Dev",1,local_c2c);
    uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Inv_SlotPrevTitle",2,uVar4);
    uVar4 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Player",2,puVar5);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("debug/debugvertexcolor","Other textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("debug/env_cubemap_model","Other textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("models/debug/debugbumps","Other textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("models/debug/debugmesh","Other textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("models/debug/debugwhite","Other textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("models/debug/debugwhite2","Other textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("models/debug/debugwhite3","Other textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("models/shadertest/predator","Other textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))("vgui/black","VGUI textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))(pcVar5,"Other textures",1,0);
    uVar4 = (**(code **)(*DAT_107c0a7c + 0x14))("basemodui_scheme");
    uVar4 = (**(code **)(*param_1 + 0x1c))("clients",0);
    uVar4 = (**(code **)(*param_1 + 0x1c))("userid",0);
    uVar4 = (**(code **)(*piVar1 + 0x84))("wheel_fl",&local_30);
    uVar4 = (**(code **)(*piVar1 + 0x84))("wheel_fr",&local_60);
    uVar4 = (**(code **)(*piVar1 + 0x84))("wheel_rl",param_1);
    uVar4 = (**(code **)(*piVar1 + 0x84))("wheel_rr",param_1);
    uVar4 = (**(code **)(*piVar2 + 0x2c))("-full_memory_dumps");
    uVar4 = (**(code **)(*piVar3 + 0x20))("-monitorTextureSize",0x100);
    uVar4 = (**(code **)(*piVar3 + 0x20))("-monitorTextureSize",param_4);
    uVar4 = (**(code **)(*piVar3 + 0x20))("-reflectionTextureSize",0x400);
    uVar4 = (**(code **)(*this + 0xc4))(this,param_3,"Invalid connection.\n");
    uVar4 = (**(code **)(iVar1 + 0x84))("engine_left_exhaust_port",&local_34,&local_d0);
    uVar4 = (**(code **)(iVar1 + 0x84))("engine_right_exhaust_port",&local_c4,&local_7c);
    uVar4 = (**(code **)(iVar9 + 0x24))("-fix_extip",pcVar6,uVar8);
    uVar4 = Error("MXR_LoadAllSoundMixers: unable to open \'%s\'\n",local_118);
    uVar4 = Error("Unable to load \'%s\'\n",local_288);
    uVar4 = FUN_0041f130(pvVar1,"id",0xffffffff);
    uVar4 = FUN_0041f130(pvVar2,"id",0xffffffff);
    uVar4 = FUN_100612d0(param_1,"prop_physics");
    uVar4 = FUN_1016b9c0((uint *)&local_10,local_80,"EXECUTABLE_PATH");
    uVar4 = FUN_101a4020(this,(uint *)"impale_forward",(int)local_44);
    uVar4 = FUN_101a5ad0(1,(byte *)"CL_ParseClassInfo_EndClasses: CreateDecoders failed.\n");
    uVar4 = FUN_101a5c10((byte *)"Expecting interval_per_tick %f, got %f\n");
    uVar4 = FUN_101a5c10((byte *)"Signon buffer overflowed %i bytes!!!\n");
    uVar4 = FUN_101f54b0((byte *)"\"%s<%i><%s><%s>\" disconnected (reason \"%s\")\n");
    uVar4 = FUN_101f54b0((byte *)"\"%s<%i><%s><>\" connected, address \"%s\"\n");
    uVar4 = FUN_10265ef0((byte *)"SliderDragEnd",pbVar3);
    uVar4 = FUN_10265ef0((byte *)"SliderDragStart",pbVar3);
    uVar4 = FUN_10265ef0((byte *)"SliderMoved",pbVar3);
    uVar4 = FUN_10265ef0(pbVar3,(byte *)"hltv_status");
    uVar4 = FUN_10265f50((byte *)"CheckButtonChecked",pbVar3);
    uVar4 = FUN_10265f50(pbVar3,(byte *)"center");
    uVar4 = FUN_10265f50(pbVar3,(byte *)"north");
    uVar4 = FUN_10265f50(pbVar3,(byte *)"north-east");
    uVar4 = FUN_10265f50(pbVar3,(byte *)"north-west");
    uVar4 = FUN_10265f50(pbVar3,(byte *)"south");
    uVar4 = FUN_10265f50(pbVar3,(byte *)"south-east");
    uVar4 = FUN_10265f50(pbVar3,(byte *)"south-west");
    uVar4 = FUN_10265f50(pbVar6,(byte *)"disable");
    uVar4 = FUN_10265f50(pbVar6,(byte *)"enable");
    uVar4 = FUN_102687d0(param_1,(uint *)"brighttext",0);
    uVar4 = FUN_102687d0(puVar2,(uint *)"nodegraph",1);
    uVar4 = FUN_102687d0(this_00,(uint *)"screeny",0);
    uVar4 = FUN_10269690(piVar3,(uint *)"scripts/DebugOptions.txt",0,(int *)0x0);
    uVar4 = FUN_1026b210(this_01,(uint *)"fgColor",*puVar3);
    uVar4 = FUN_1026b280(param_1,(uint *)"result",(uint)(cVar1 != '\0'));
    uVar4 = FUN_1026b280(param_1,(uint *)"state",uVar3 & 0xff);
    uVar4 = FUN_1026b310(param_1,(uint *)"command",pcVar5);
    uVar4 = FUN_10286590((undefined4 *)"EditablePanel");
    uVar4 = FUN_102866e0((uint *)"EditablePanel");
    uVar4 = FUN_10290a70((int *)"EditablePanel");
    uVar4 = FUN_10290a70((int *)"Panel");
    uVar4 = FUN_10299070(puVar3,(uint *)"night_map");
    uVar4 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01');
    uVar4 = FUN_10314250(DAT_10693b08,(uint *)"mafia_mode");
    uVar4 = FUN_10399710((byte *)param_1,(byte *)"Collide");
    uVar4 = FUN_10399710((byte *)param_1,(byte *)"Start_WP");
    uVar4 = FUN_10399710((byte *)param_1,(byte *)"targetname");
    uVar4 = FUN_10399710(param_1,(byte *)"d3_citadel_03");
    uVar4 = FUN_10399710(param_1,(byte *)"ep1_citadel_02");
    uVar4 = FUN_10399710(pbVar3,(byte *)"center");
    uVar4 = FUN_10399710(pbVar3,(byte *)"force");
    uVar4 = FUN_10399710(pbVar3,(byte *)"nav_selected_set_border_color");
    uVar4 = FUN_10399710(pbVar3,(byte *)"north");
    uVar4 = FUN_10399710(pbVar3,(byte *)"north-east");
    uVar4 = FUN_10399710(pbVar3,(byte *)"north-west");
    uVar4 = FUN_10399710(pbVar3,(byte *)"south");
    uVar4 = FUN_10399710(pbVar3,(byte *)"south-east");
    uVar4 = FUN_10399710(pbVar3,(byte *)"south-west");
    uVar4 = FUN_10399710(pbVar5,(byte *)"permitrepeats");
    uVar4 = FUN_1039d9a0(param_1,(uint *)"brighttext",0);
    uVar4 = FUN_1039fc70(this_01,(uint *)"fgColor",*puVar3);
    uVar4 = FUN_1039fce0(param_1,(uint *)"result",(uint)(cVar1 != '\0'));
    uVar4 = FUN_1039fce0(param_1,(uint *)"state",uVar3 & 0xff);
    uVar4 = FUN_1039fd20(param_1,(uint *)"command",pcVar5);
    uVar4 = FUN_103b2880((undefined4 *)"EditablePanel");
    uVar4 = FUN_103b29d0((uint *)"EditablePanel");
    uVar4 = FUN_103e8bc0((int *)"EditablePanel");
    uVar4 = FUN_103e8bc0((int *)"Panel");
    uVar4 = FUN_1042df20((byte *)"game_newmap",pbVar3);
    uVar4 = FUN_1042df20((byte *)"hltv_cameraman",pbVar3);
    uVar4 = FUN_1042df20((byte *)"hltv_endofmatch",pbVar3);
    uVar4 = FUN_1042df20((byte *)"npc_hitoutput",pbVar3);
    uVar4 = FUN_1042df20(pbVar1,(byte *)"RestartMatch");
    uVar4 = FUN_1042df20(pbVar3,(byte *)"gameinstructor_nodraw");
    uVar4 = FUN_1042df20(pbVar3,(byte *)"map_transition");
    uVar4 = FUN_1042df20(pbVar3,(byte *)"player_death");
    uVar4 = FUN_1042df20(pbVar3,(byte *)"player_disconnect");
    uVar4 = FUN_1042df20(pbVar3,(byte *)"player_team");
    uVar4 = FUN_1042df20(pbVar3,(byte *)"round_end");
    uVar4 = FUN_1042df20(pbVar3,(byte *)"round_start");
    uVar4 = FUN_1042df80(&DAT_107973a0,(byte *)"VERSION");
    uVar4 = FUN_1042df80((byte *)"Voting disabled on this Server",pbVar3);
    uVar4 = FUN_1042df80((byte *)"changelevel",pbVar3);
    uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"rendercolor32");
    uVar4 = FUN_1042df80(param_1,(byte *)"BtnSpecCustom");
    uVar4 = FUN_1042df80(pbVar1,(byte *)"GoIdle");
    uVar4 = FUN_1042df80(pbVar2,(byte *)"$alpha");
    uVar4 = FUN_1042df80(pbVar3,(byte *)"iterate_players");
    uVar4 = FUN_1042df80(pbVar3,(byte *)"north");
    uVar4 = FUN_1042df80(pbVar3,(byte *)"north-east");
    uVar4 = FUN_1042df80(pbVar3,(byte *)"north-west");
    uVar4 = FUN_1042df80(pbVar3,(byte *)"solid");
    uVar4 = FUN_1042df80(pbVar3,(byte *)"south");
    uVar4 = FUN_1042df80(pbVar3,(byte *)"south-east");
    uVar4 = FUN_1042df80(pbVar3,(byte *)"south-west");
    uVar4 = FUN_1042f270(param_1,(uint *)"brighttext",0);
    uVar4 = FUN_1042f270(param_2,(uint *)"Gravity",1);
    uVar4 = FUN_1042f270(param_2,(uint *)"Length",0);
    uVar4 = FUN_1042f270(pvVar2,(uint *)"developer",0);
    uVar4 = FUN_1042f270(this_00,(uint *)"screeny",0);
    uVar4 = FUN_104300e0(piVar3,(uint *)"scripts/HudLayout.res",0,(int *)0x0);
    uVar4 = FUN_104318f0(this_01,(uint *)"fgColor",*puVar3);
    uVar4 = FUN_10431960(param_1,(uint *)"result",(uint)(cVar1 != '\0'));
    uVar4 = FUN_10431960(param_1,(uint *)"state",uVar3 & 0xff);
    uVar4 = FUN_104319f0(param_1,(uint *)"command",pcVar5);
    uVar4 = FUN_104452c0((undefined4 *)"CBaseModFrame");
    uVar4 = FUN_104452c0((undefined4 *)"EditablePanel");
    uVar4 = FUN_104452c0((undefined4 *)"vgui::EditablePanel");
    uVar4 = FUN_10445410((uint *)"CBaseModFrame");
    uVar4 = FUN_10445410((uint *)"EditablePanel");
    uVar4 = FUN_10445410((uint *)"vgui::EditablePanel");
    uVar4 = FUN_1044f9a0((int *)"CBaseModFrame");
    uVar4 = FUN_1044f9a0((int *)"EditablePanel");
    uVar4 = FUN_1044f9a0((int *)"Panel");
    uVar4 = FUN_1044f9a0((int *)"vgui::EditablePanel");
    uVar4 = Msg("CResListGenerator: Falling back to legacy reslists system.\n");
    uVar4 = Msg("WARNING! User command buffer overflow(%i %i), last cmd was %i bits long\n",param_3,
    uVar4 = Msg("\nEnd mem_test\n");
    uVar4 = Warning("***\nPlayer Anim Event Collision! %s<->%s\n***\n",param_1,uVar3);
    uVar4 = Warning("***\nShared activity collision! %s<->%s\n***\n",param_1,uVar3);
    uVar4 = Warning("Socket unable to create socket (%s)\n",pcVar3);
    uVar5 = (**(code **)(*DAT_106cb7f4 + 0x150))("debug/debugportals","Other textures",1,0);
    uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#SB_DEADLABEL",0);
    uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_IDC_ACCURACY",1,local_ac);
    uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_IDC_CLIPSIZE",1,local_ac);
    uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_IDC_DAMAGE",1,local_ac);
    uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_IDC_MOBILITY",1,local_ac);
    uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_IDC_STABILITY",1,local_ac);
    uVar5 = (**(code **)(*param_1 + 0x1c))("attacker",0);
    uVar5 = (**(code **)(*param_1 + 0x28))("mapname",&DAT_104eefb3);
    uVar5 = (**(code **)(*piVar1 + 4))("FrameSystemButton.DisabledIcon");
    uVar5 = (**(code **)(*piVar4 + 0x20))(uVar2,uVar3,"SteamFriends015");
    uVar5 = (**(code **)(*piVar4 + 0x84))("engine_left2_exhaust_port");
    uVar5 = (**(code **)(*piVar4 + 0x84))("engine_left2_turbines");
    uVar5 = (**(code **)(*piVar4 + 0x84))("engine_right2_exhaust_port");
    uVar5 = (**(code **)(iVar1 + 0xc))("Default",uVar3);
    uVar5 = (**(code **)(iVar1 + 0xc))("DefaultVerySmall",uVar3);
    uVar5 = (**(code **)(iVar2 + 0xc))("DefaultVerySmall",uVar3);
    uVar5 = (**(code **)(param_1[2] + 0x28))("Drive_No_Tire");
    uVar5 = (**(code **)(param_1[2] + 0x28))("Drive_On_Gravel");
    uVar5 = (*pcVar19)(&DAT_106a8e30,"\tVar handle as BaseCombatCharacter returned NULL!\n");
    uVar5 = FUN_1001fc56(pauVar4,(undefined (*) [16])"-noassert");
    uVar5 = FUN_1014fb90(*(void **)((int)this + 0x1548),(int *)"sprites/flamelet1");
    uVar5 = FUN_1014fb90(*(void **)((int)this + 0x1548),(int *)"sprites/flamelet2");
    uVar5 = FUN_1014fb90(*(void **)((int)this + 0x1548),(int *)"sprites/flamelet3");
    uVar5 = FUN_1014fb90(*(void **)((int)this + 0x1548),(int *)"sprites/flamelet4");
    uVar5 = FUN_1014fb90(*(void **)((int)this + 0x1548),(int *)"sprites/flamelet5");
    uVar5 = FUN_101f9bc0((byte *)"CVoiceGameMgr::ClientCommand: cmd %s from invalid client (%d)\n");
    uVar5 = FUN_10227600(param_1,uVar5,"VTOOLFRAMEWORKVERSION002");
    uVar5 = FUN_10228160(param_1,"engine_mapkit.dll");
    uVar5 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Attribute \"%s\" was defined more than once.\n"
    uVar5 = FUN_102445a0((int)&DAT_1041a888,(byte *)"Expecting \'[\', didn\'t find it!");
    uVar5 = FUN_102687d0(param_2,(uint *)"BindsMax",0);
    uVar5 = FUN_10268930(param_1,(uint *)&DAT_10334314,(uint)"Default");
    uVar5 = FUN_10269690(piVar4,local_20,"EXECUTABLE_PATH",(int *)0x0);
    uVar5 = FUN_1026b2f0(param_1,(uint *)"PanelPtr",uVar3);
    uVar5 = FUN_10299070(puVar4,(uint *)"use_player_rtt");
    uVar5 = FUN_10399710((byte *)param_1,(byte *)"lightcolor");
    uVar5 = FUN_10399710(pbVar4,(byte *)"solid");
    uVar5 = FUN_1039d9a0(param_1,(uint *)"forcecleanreset",0);
    uVar5 = FUN_1039d9a0(param_1,(uint *)"forcenextround",0);
    uVar5 = FUN_1039d9a0(param_1,(uint *)"forcerepeatround",0);
    uVar5 = FUN_1039db00(param_1,(uint *)&DAT_10536090,(uint)"Default");
    uVar5 = FUN_1039e3f0(piVar4,(uint *)"maps/manifest.res",&DAT_1045b2f0,(int *)0x0);
    uVar5 = FUN_1039fd00(param_1,(uint *)"PanelPtr",uVar3);
    uVar5 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Attribute \"%s\" was defined more than once.\n"
    uVar5 = FUN_104244c0((int)&DAT_105e8910,(byte *)"Expecting \'[\', didn\'t find it!");
    uVar5 = FUN_1042df80(pbVar4,(byte *)"solid");
    uVar5 = FUN_1042e050(extraout_ECX,extraout_EDX,param_1,(undefined (*) [16])"/high");
    uVar5 = FUN_1042f3d0(param_1,(uint *)&DAT_10524fe8,(uint)"Default");
    uVar5 = FUN_1042f3d0(pvVar2,(uint *)"labelText",(uint)&DAT_104eefb3);
    uVar5 = FUN_104300e0(piVar4,(uint *)"maps/manifest.res",&DAT_104eefa0,(int *)0x0);
    uVar5 = FUN_104319d0(param_1,(uint *)"PanelPtr",uVar3);
    uVar5 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Attribute \"%s\" was defined more than once.\n"
    uVar5 = FUN_104dba20((int)&DAT_106fe118,(byte *)"Expecting \'[\', didn\'t find it!");
    uVar5 = Msg("Couldn\'t find any entity named \'%s\'\n",puVar4);
    uVar5 = Warning("CSceneEntity %s :\"%s\" unable to find gesture \"%s\"\n",puVar6,uVar4,uVar3);
    uVar5 = Warning("CSceneEntity %s :\"%s\" unable to find sequence \"%s\"\n",puVar6,uVar4,uVar3);
    uVar5 = Warning("ERROR: Tried to create bone follower on invalid bone %s\n",pbVar6);
    uVar5 = Warning("SVC_ClassInfo::ReadFromBuffer:  bad numserverclasses %d\n");
    uVar6 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Header_RoomList",1,local_114);
    uVar6 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Intro_StageRound",2,local_98,local_118);
    uVar6 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Spec_Map",1,puVar13);
    uVar6 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Spec_PlayerItem",1,local_148);
    uVar6 = (**(code **)(*DAT_107c0a7c + 0x14))("SourceScheme");
    uVar6 = (**(code **)(*piVar1 + 0xc))("Default",1);
    uVar6 = (**(code **)(*piVar4 + 8))("ToolTipBorder");
    uVar6 = (**(code **)(*piVar5 + 0xc))("Normal_Smaller",1);
    uVar6 = (**(code **)(iVar2 + 0xc))("ToolTipFont",uVar1);
    uVar6 = FUN_10314250(local_8,(uint *)"mafia_mode");
    uVar6 = FUN_10314250(piVar12,(uint *)"mafia_mode");
    uVar6 = FUN_10314280(piVar12,(uint *)"spawn_in_cars",'\x01');
    uVar6 = FUN_10314280(piVar12,(uint *)"vip_splitsquad",'\x01');
    uVar6 = FUN_10314280(this,(uint *)"ct_heli_insert",'\x01');
    uVar6 = FUN_103996b0((byte *)_Str1,(byte *)"inferno");
    uVar6 = FUN_10399710(pbVar5,(byte *)"weapon_bugbait");
    uVar6 = FUN_1042df20((byte *)"teamplay_broadcast_audio",pbVar5);
    uVar6 = FUN_1042df80(pbVar5,(byte *)"TacticalTV");
    uVar6 = FUN_1042df80(pbVar7,(byte *)"server");
    uVar6 = FUN_10431960(pvVar2,(uint *)"MapTime",
    uVar6 = Msg("Response rule targeted %s with entityio, but that doesn\'t exist.\n",pcVar1);
    uVar6 = Warning("Bad field type\n");
    uVar6 = Warning("CSceneEntity %s :\"%s\" unable to find sequence \"%s\"\n",puVar9,uVar5,uVar4);
    uVar7 = (**(code **)(iVar2 + 0xc))("Default",uVar3);
    uVar7 = (**(code **)(iVar2 + 0xc))("Marlett",uVar3);
    uVar7 = (**(code **)(param_1[1] + 0x84))("Root_attachment",&local_20);
    uVar7 = (**(code **)(param_1[1] + 0x84))("view_origin",&local_14);
    uVar7 = FUN_0041e3a0(pbVar6,(byte *)"#include");
    uVar7 = FUN_1016b9c0((uint *)(local_c[0] + 0x30),local_6c,"EXECUTABLE_PATH");
    uVar7 = FUN_10265f50(param_1,(byte *)"autosavedangerous");
    uVar7 = FUN_10265f50(pbVar6,(byte *)"#include");
    uVar7 = FUN_10286590((undefined4 *)"vgui::Frame");
    uVar7 = FUN_102866e0((uint *)"vgui::Frame");
    uVar7 = FUN_10290a70((int *)"vgui::Frame");
    uVar7 = FUN_102c09a0(DAT_107a27d0,(uint *)"mafia_mode");
    uVar7 = FUN_10399710(pbVar6,(byte *)"#include");
    uVar7 = FUN_103fd956((char *)param_2,(int)"%f %f %f");
    uVar7 = FUN_1042df20(pbVar14,(byte *)"AudioVideo");
    uVar7 = FUN_1042df20(pbVar14,(byte *)"FlmExtrasFlyoutCheck");
    uVar7 = FUN_1042df80(local_8,(byte *)"AltButton");
    uVar7 = FUN_1042df80(pbVar6,(byte *)"#include");
    uVar7 = FUN_1042f270(param_1,(uint *)"ActivationType",1);
    uVar7 = FUN_1042f270(param_1,(uint *)"DropDownIndicatorSize",8);
    uVar7 = FUN_1042f270(param_1,(uint *)"arrowInsetX",0);
    uVar7 = FUN_1042f270(param_1,(uint *)"tabPosition",0);
    uVar7 = FUN_1042f270(param_1,(uint *)"wideatopen",0);
    uVar7 = FUN_1042f270(puVar4,(uint *)"default_height",0);
    uVar7 = FUN_1042f3d0(*(void **)((int)local_10 + 0x40f4),(uint *)"material",(uint)&DAT_104eefb3);
    uVar7 = Warning("Bad field type\n");
    uVar8 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_Objective_OOB2",1,local_170);
    uVar8 = (**(code **)(*DAT_107c0a08 + 500))("__DepthWrite01","Other textures",this_01);
    uVar8 = ConDMsg("Received fragment chunk out of bounds: %i+%i>%i from %s\n",local_c,local_8,
    uVar8 = FUN_101cf7e0(*(void ***)((int)param_1 + 0xc),(int *)param_1,(byte *)"%c00000000000000");
    uVar8 = FUN_10265f50(param_5,(byte *)"binary_v2");
    uVar8 = FUN_10265f50(param_5,(byte *)"keyvalues2_v1");
    uVar8 = FUN_10314250(param_1,(uint *)"mafia_mode");
    uVar8 = FUN_10314280(param_1,(uint *)"spawn_in_cars",'\x01');
    uVar8 = FUN_10399710(param_5,(byte *)"binary_v2");
    uVar8 = FUN_10399710(param_5,(byte *)"keyvalues2_v1");
    uVar8 = FUN_1042df80(param_5,(byte *)"binary_v2");
    uVar8 = FUN_1042df80(param_5,(byte *)"bomb_arm");
    uVar8 = FUN_1042df80(param_5,(byte *)"bomb_disarm");
    uVar8 = FUN_1042df80(param_5,(byte *)"bomb_planthere");
    uVar8 = FUN_1042df80(param_5,(byte *)"bomb_spotted");
    uVar8 = FUN_1042df80(param_5,(byte *)"door_breach");
    uVar8 = FUN_1042df80(param_5,(byte *)"door_open");
    uVar8 = FUN_1042df80(param_5,(byte *)"keyvalues2_v1");
    uVar8 = FUN_1042f270(param_1,(uint *)"ActivationType",1);
    uVar8 = FUN_1042f270(param_1,(uint *)"DropDownIndicatorSize",8);
    uVar8 = FUN_1042f270(param_1,(uint *)"IgnoreButtonA",0);
    uVar8 = FUN_1042f270(param_1,(uint *)"OnlyActiveUser",0);
    uVar8 = FUN_1042f270(param_1,(uint *)"ShowDropDownIndicator",0);
    uVar8 = FUN_1042f270(param_1,(uint *)"tabPosition",0);
    uVar8 = FUN_1042f270(param_1,(uint *)"wideatopen",0);
    uVar8 = Warning("ERROR!: Can\'t create physics object for %s\n",puVar9);
    uVar8 = Warning("Net message exceeds max size (%u / %u)\n",0x3ffffff,uVar8);
    uVar9 = (**(code **)(param_1[1] + 0x34))(param_1 + 1,"No TacticalTV relay available");
    uVar9 = Plat_DebugString("cannot upsample, only downsample.\n");
    while ((uVar2 != 0 && (uVar2 = FUN_10265f50(local_1024,(byte *)"PHRASE"), uVar2 == 0))) {
  (*(code *)param_1)("Invalid nav file for %s\n");
  (*(code *)param_1)("Missing nav file for %s\n");
  (*(code *)param_1)("Old nav file for %s\n");
  (*(code *)param_1)("The nav file for %s is built from an old version of the map\n");
  (**(code **)((int)param_1[0x13c] + 0x34))("ConcreteChunks");
  (**(code **)(*(int *)(*(int *)((int)this + 0x224) + 4) + 0x70))("spectate");
  (**(code **)(*(int *)(DAT_106466b4 + 4) + 0x58))("NavPlace.db",&DAT_1045b2f0,&local_50,0,0,0);
  (**(code **)(*(int *)(param_1 + 0x224) + 0x31c))("resource/UI/RadialMenu.res",0,0,0);
  (**(code **)(*(int *)(param_1 + 4) + 0x34))(param_1 + 4,"Server info data overflow");
  (**(code **)(*(int *)PTR_DAT_10417380 + 0xc))(param_1,"server_addban",1);
  (**(code **)(*(int *)PTR_DAT_10417380 + 0xc))(param_1,"server_cvar",1);
  (**(code **)(*(int *)PTR_DAT_10417380 + 0xc))(param_1,"server_message",1);
  (**(code **)(*(int *)PTR_DAT_10417380 + 0xc))(param_1,"server_removeban",1);
  (**(code **)(*(int *)PTR_DAT_10417380 + 0xc))(param_1,"server_shutdown",1);
  (**(code **)(*(int *)PTR_DAT_10417380 + 0xc))(param_1,"server_spawn",1);
  (**(code **)(*(int *)PTR_PTR_106b2a68 + 0x20))("filmgrain");
  (**(code **)(*(int *)param_1[0x1d] + 0x31c))("scripts/EngineVGuiLayout.res",0,0,0);
  (**(code **)(*(int *)param_1[0x79] + 0x49c))("Cancel");
  (**(code **)(*(int *)param_1[0x7a] + 0x49c))("Apply");
  (**(code **)(*(int *)param_1[0x9d] + 0x338))(0,"Issue","#TF_Vote_Column_Issue",8,param_1[0xac],0);
  (**(code **)(*(int *)param_1[0x9d] + 800))(0,"Issue",0);
  (**(code **)(*(int *)param_1[0x9e] + 0x330))(1,"Group",0x7d,0);
  (**(code **)(*(int *)param_1[0x9e] + 0x338))(0,"Avatar",&DAT_104eefb3,0x12,0x37,0);
  (**(code **)(*(int *)param_1[0xa4] + 900))("TimeUseClock");
  (**(code **)(*(int *)param_1[0xa8] + 0x398))("C&opy",cVar1 != '\0');
  (**(code **)(*(int *)param_1[0xab] + 0x388))("#Title_Extend");
  (**(code **)(*(int *)piVar9[0xba] + 0xe4))("hl2.exe");
  (**(code **)(**(int **)((int)param_1 + 0x1e8) + 0x4c4))("#GameUI_RandomMap",puVar1);
  (**(code **)(**(int **)((int)this + 0x10) + 0x398))("resource/ClientScheme.res");
  (**(code **)(**(int **)((int)this + 0x1c00) + 0x10))(uVar4,"authkey",local_1010);
  (**(code **)(**(int **)((int)this + 0x1c00) + 0x10))(uVar4,"steamid",local_1010);
  (**(code **)(**(int **)((int)this + 0x1c00) + 0x10))(uVar4,"version",local_1010);
  (**(code **)(**(int **)((int)this + 0x1dc) + 900))("#Spec_Modes");
  (**(code **)(**(int **)((int)this + 0x1e0) + 900))("#Spec_Options");
  (**(code **)(**(int **)((int)this + 0x1e8) + 0x388))("#error");
  (**(code **)(**(int **)((int)this + 0x1e8) + 0x49c))("submit");
  (**(code **)(**(int **)((int)this + 0x208) + 0x31c))(0,"image",&DAT_103236cf,0x18,4);
  (**(code **)(**(int **)((int)this + 0x208) + 0x31c))(1,"layer",&DAT_103236cf,0xe2,0);
  (**(code **)(**(int **)((int)this + 0x210) + 0x4c4))("#Cstrike_ScoreBoard_CT",0);
  (**(code **)(**(int **)((int)this + 0x210) + 0x4c4))("#Cstrike_ScoreBoard_Ter",0);
  (**(code **)(**(int **)((int)this + 0x214) + 0x4c4))("#Cstrike_Bot_Chatter_Minimal",0);
  (**(code **)(**(int **)((int)this + 0x214) + 0x4c4))("#Cstrike_Bot_Chatter_Off",0);
  (**(code **)(**(int **)((int)this + 0x214) + 0x4c4))("#Cstrike_Bot_Chatter_Radio",0);
  (**(code **)(**(int **)((int)this + 0x21c) + 900))("items/expired");
  (**(code **)(**(int **)((int)this + 0x220) + 900))("items/restricted");
  (**(code **)(**(int **)((int)this + 0x270) + 0x31c))(1,"filename",param_3,0x80,2);
  (**(code **)(**(int **)((int)this + 0x270) + 0x3f8))("No Perforce Operations");
  (**(code **)(**(int **)((int)this + 0x274) + 0x334))("#GameUI_Light","#GameUI_Dark");
  (**(code **)(**(int **)((int)this + 0x274) + 0x49c))("Close");
  (**(code **)(**(int **)((int)this + 0x274) + 800))(0,&DAT_10340084,"Texture Name",200,100,700,2);
  (**(code **)(**(int **)((int)this + 0x274) + 800))(2,&DAT_1033f348,"Kilobytes",0x32,0x32,0x32,0);
  (**(code **)(**(int **)((int)this + 0x274) + 800))(3,"TexGroup","Group",100,100,300,0);
  (**(code **)(**(int **)((int)this + 0x274) + 800))(4,"Format","Format",0xfa,0x32,300,0);
  (**(code **)(**(int **)((int)this + 0x274) + 800))(5,"Width","Width",0x32,0x32,0x32,0);
  (**(code **)(**(int **)((int)this + 0x274) + 800))(6,"Height","Height",0x32,0x32,0x32,0);
  (**(code **)(**(int **)((int)this + 0x274) + 800))(7,"BindsFrame","# Binds",0x32,0x32,0x32,0);
  (**(code **)(**(int **)((int)this + 0x274) + 800))(8,"BindsMax","BindsMax",0x32,0x32,0x32,0);
  (**(code **)(**(int **)((int)this + 0x278) + 0x330))(1,"Group",0x78,0);
  (**(code **)(**(int **)((int)this + 0x278) + 0x49c))("Cancel");
  (**(code **)(**(int **)((int)this + 0x27c) + 0x49c))("Apply");
  (**(code **)(**(int **)((int)this + 0x27c) + 0x49c))("service");
  (**(code **)(**(int **)((int)this + 0x280) + 0x49c))("resolvepath");
  (**(code **)(**(int **)((int)this + 0x284) + 0x4c4))("By Budget Group",0);
  (**(code **)(**(int **)((int)this + 0x284) + 0x4c4))("By Name",0);
  (**(code **)(**(int **)((int)this + 0x288) + 0x49c))("AllTextures");
  (**(code **)(**(int **)((int)this + 0x28c) + 0x49c))("ViewThumbnails");
  (**(code **)(**(int **)((int)this + 0x290) + 0x49c))("Exclude");
  (**(code **)(**(int **)((int)this + 0x294) + 0x49c))("CloseModal");
  (**(code **)(**(int **)((int)this + 0x294) + 0x49c))("Collapse");
  (**(code **)(**(int **)((int)this + 0x298) + 0x49c))("ShowAlpha");
  (**(code **)(**(int **)((int)this + 0x29c) + 0x49c))("ThumbWarnings");
  (**(code **)(**(int **)((int)this + 0x2a0) + 0x49c))("FilteringChk");
  (**(code **)(**(int **)((int)this + 0x2c4) + 0x32c))("Auto-setup keys 1 second","keys1",param_1,0)
  (**(code **)(**(int **)((int)this + 0x2c4) + 0x32c))("Auto-setup keys 2 second","keys2",param_1,0)
  (**(code **)(**(int **)((int)this + 0x2c4) + 0x32c))("Auto-setup keys 4 second","keys4",param_1,0)
  (**(code **)(**(int **)((int)this + 0x2c4) + 0x32c))("Look At Points","lookatpoints",param_1,0);
  (**(code **)(**(int **)((int)this + 0x2c4) + 0x32c))("Smooth Both","smoothboth",param_1,0);
  (**(code **)(**(int **)((int)this + 0x2c4) + 0x32c))("Smooth Right","smoothright",param_1,0);
  (**(code **)(**(int **)((int)this + 0x2c4) + 0x32c))("Spline Angles","splineangles",param_1,0);
  (**(code **)(**(int **)((int)this + 0x2c4) + 0x32c))("Spline Origin","splineorigin",param_1,0);
  (**(code **)(**(int **)((int)this + 0x400) + 0x354))("Divider1",*(undefined *)((int)this + 0x47c))
  (**(code **)(**(int **)((int)this + 0x400) + 0x354))("Divider2",*(undefined *)((int)this + 0x47c))
  (**(code **)(**(int **)((int)this + 0x400) + 0x354))("LabelOption1",1);
  (**(code **)(**(int **)((int)this + 0x400) + 0x354))("LabelOption2",1);
  (**(code **)(**(int **)((int)this + 0x400) + 0x360))("header",local_d1c);
  (**(code **)(**(int **)((int)this + 0x400) + 0x360))("voteissue",puVar9);
  (**(code **)(**(int **)((int)this + 0x408) + 0x33c))("FailedReason",pcVar10);
  (**(code **)(**(int **)((int)this + 0x40c) + 0x360))("passedresult",puVar4);
  (**(code **)(**(int **)((int)this + 0x410) + 0x33c))("FailedReason",pcVar6);
  (**(code **)(**(int **)((int)this + 0x428) + 0x31c))(0,"column1","column1",100,0x22);
  (**(code **)(**(int **)((int)this + 0x428) + 0x31c))(2,"column2","column2",100,0x22);
  (**(code **)(**(int **)((int)this + 0x428) + 800))(1,"columnpct1","columnpct1",0,0,0x78,0x60);
  (**(code **)(**(int **)((int)this + 0x428) + 800))(3,"columnpct2","columnpct2",0,0,0x78,0x60);
  (**(code **)(**(int **)((int)this + 0x4cc) + 0x49c))("Cancel");
  (**(code **)(**(int **)((int)this + 0x4d0) + 0x49c))("Select");
  (**(code **)(**(int **)((int)this + 0x4d4) + 0x49c))("Create");
  (**(code **)(**(int **)(*(int *)(param_1 + 0x220) + 4) + 0x388))("30 fps (33 1/3 ms)");
  (**(code **)(**(int **)(*(int *)(param_1 + 0x220) + 8) + 0x388))("60 fps (16 2/3 ms)");
  (**(code **)(**(int **)(param_1 + 0x260) + 0x328))("C&opy",puVar3,param_1,0);
  (**(code **)(**(int **)(param_1 + 0x260) + 0x398))("C&opy",!bVar1);
  (**(code **)(**(int **)(param_1 + 0x290) + 900))("TimeUseClock");
  (**(code **)(**(int **)(param_1 + 0x294) + 0x388))("Screenshot file");
  (**(code **)(**(int **)(param_1 + 0x298) + 0x388))("Save game file");
  (**(code **)(**(int **)(param_1 + 0x29c) + 0x388))(".bsp file");
  (**(code **)(**(int **)(param_1 + 0x2a0) + 0x388))(".vmf file");
  (**(code **)(**(int **)(param_1 + 0x2a0) + 0x49c))("Apply");
  (**(code **)(**(int **)(param_1 + 0x2a4) + 0x4c4))("TextMessageDefault",0);
  (**(code **)(**(int **)(param_1 + 0x2a8) + 0x49c))("DeletePanel");
  (**(code **)(***(int ***)(param_1 + 0x220) + 0x388))("20 fps (50 ms)");
  (**(code **)(*DAT_106466ac + 0x15c))("scripts/instructor_lessons.txt");
  (**(code **)(*DAT_106466ac + 0x15c))("scripts/mod_lessons.txt");
  (**(code **)(*DAT_106466ac + 0x94))("bot_kick\n");
  (**(code **)(*DAT_106466ac + 0x94))("exec game.cfg\n");
  (**(code **)(*DAT_106466ac + 0x94))("vprof_record_start benchmark\n");
  (**(code **)(*DAT_106466ac + 0x94))("vprof_record_stop\n");
  (**(code **)(*DAT_106466ac + 0xc0))(DAT_106466ac,2,"MaxStep %d",iVar4);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_activate",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_changename",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_civkill",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_civrescue",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_connect",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_death",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_disconnect",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_escort_score",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_hurt",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_spawn",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_team",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"round_end",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"round_pre_start",1);
  (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"round_start",1);
  (**(code **)(*DAT_106466d0 + 0xc))(param_1 + -0xc,"player_death",1);
  (**(code **)(*DAT_106466d0 + 0xc))(param_1 + 0xc,"round_start",1);
  (**(code **)(*DAT_106466d0 + 0xc))(param_1,"break_breakable",1);
  (**(code **)(*DAT_106466d0 + 0xc))(param_1,"break_prop",1);
  (**(code **)(*DAT_106466d0 + 0xc))(param_1,"round_start",1);
  (**(code **)(*DAT_106466d0 + 0xc))(puVar1,"bomb_exploded",1);
  (**(code **)(*DAT_106466d0 + 0xc))(puVar1,"flashbang_detonate",1);
  (**(code **)(*DAT_106466d0 + 0xc))(puVar1,"hegrenade_detonate",1);
  (**(code **)(*DAT_106466d0 + 0xc))(puVar1,"player_footstep",1);
  (**(code **)(*DAT_106466d0 + 0xc))(puVar1,"player_shoot",1);
  (**(code **)(*DAT_106466d0 + 0xc))(puVar1,"smokegrenade_detonate",1);
  (**(code **)(*DAT_106466d0 + 0xc))(puVar1,"weapon_fire",1);
  (**(code **)(*DAT_106466d0 + 4))("resource/ModEvents.res");
  (**(code **)(*DAT_106466f8 + 0x20))(1,"error",0xffffffff,0);
  (**(code **)(*DAT_106466fc + 0x20))(1,"error",0xffffffff,0);
  (**(code **)(*DAT_10646700 + 0x20))(1,"debug/debugempty",0xffffffff,0);
  (**(code **)(*DAT_10646ab0 + 0x20))(1,"classname",pbVar4 + (1 - (int)(param_1 + 1)),param_1);
  (**(code **)(*DAT_1064ce34 + 0x1c))(*(int *)(param_1 + 8) + 0x9c,"Player.Swim");
  (**(code **)(*DAT_1064ce34 + 0x1c))(param_1[2] + 0x9c,"Player.Swim");
  (**(code **)(*DAT_10681754 + 0x2c))(&DAT_10676620,"DEFAULT_WRITE_PATH",1);
  (**(code **)(*DAT_10681754 + 0x2c))(&DAT_10676620,"PROFILE");
  (**(code **)(*DAT_10681754 + 0x2c))(pcVar4,"LOGDIR",1);
  (**(code **)(*DAT_10681754 + 0x30))(0,"LOGDIR");
  (**(code **)(*DAT_10681754 + 0x3c))("LOGDIR",1);
  (**(code **)(*DAT_10681754 + 0x54))("results",&DAT_1032376c);
  (**(code **)(*DAT_10681754 + 0x54))(puVar4,"DEFAULT_WRITE_PATH");
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"$scale 1.0\n");
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"$staticprop\n");
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"$surfaceprop \"default\"\n");
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"%5.1f,");
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"%5.1f,",(double)local_24);
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar1,"%5.1f,",(double)local_28);
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar7,"0x%x,",local_260);
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,iVar7,"0x%x,",local_264);
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,uVar1,"PF\n%d %d\n-1.000000\n",param_3,param_4);
  (**(code **)(*DAT_10681754 + 0x70))(DAT_10681754,uVar2,"\"stripalphachannel\" \"1\"\n");
  (**(code **)(*DAT_106852b8 + 0xc))(&local_128,"SaveJob");
  (**(code **)(*DAT_10694ff4 + 0x20))(1,"classname",pbVar4 + (1 - (int)(param_1 + 1)),param_1);
  (**(code **)(*DAT_106ac638 + 0x3c))(param_1,"Save Header",local_cc,0,DAT_10417800,DAT_10417804);
  (**(code **)(*DAT_106ac638 + 0x40))(param_1,"Save Header",param_2,0,DAT_10417800,DAT_10417804);
  (**(code **)(*DAT_106cb7e0 + 0x24))("resource/valve_%language%.txt",0,0);
  (**(code **)(*DAT_106cb7e8 + 0x44))("CONTENT",0,local_108,0x104);
  (**(code **)(*DAT_106cb7e8 + 0x54))("cache/sounds","PROFILE");
  (**(code **)(*DAT_106cb7e8 + 0x54))((int)puVar7 + 5,"PROFILE");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,*this,"f %d %d %d %d\n",iVar2,iVar8,iVar5,iVar1);
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,*this,"f %d %d %d %d\n",iVar4,iVar5,iVar8,iVar6);
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,*this,"f %d %d %d %d\n",iVar6,iVar8,iVar2,iVar3);
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,*this,"g %s\nusemtl %s\n",param_1,param_2);
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,*this,"g default\nusemtl %s\n",param_2);
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,*this,"s off\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,iVar1,"\"patch\"\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,iVar1,"\t\"insert\"\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,param_1,"0 \"polymsh_extracted2\" -1\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,param_1,"nodes\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,param_1,"skeleton\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,param_1,"time 0\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,param_1,"triangles\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,param_1,"version 1\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,uVar6,"\"nocompress\" \"1\"\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,uVar6,"\"nolod\" \"1\"\n");
  (**(code **)(*DAT_106cb7e8 + 0x70))(DAT_106cb7e8,uVar6,"\"nomip\" \"1\"\n");
  (**(code **)(*DAT_106cb7f4 + 0x48))("CHostState::OnClientConnected");
  (**(code **)(*DAT_106cb7f4 + 0x48))("CHostState::OnClientDisconnected");
  (**(code **)(*DAT_106cb7f4 + 0x48))("CHostState::RunGameInit");
  (**(code **)(*DAT_106cb7f4 + 0x48))("CHostState::State_ChangeLevelMP");
  (**(code **)(*DAT_106cb7f4 + 0x48))("CHostState::State_ChangeLevelSP");
  (**(code **)(*DAT_106cb7f4 + 0x48))("CHostState::State_GameShutdown");
  (**(code **)(*DAT_106cb7f4 + 0x48))("CHostState::State_LoadGame");
  (**(code **)(*DAT_106cb7f4 + 0x48))("CHostState::State_NewGame");
  (**(code **)(*DAT_106cb85c + 0x90))(uVar2,"vgui/white",1,0);
  (**(code **)(*DAT_106cb870 + 0x84))(&DAT_1033fb30,"explorer.exe",local_304);
  (**(code **)(*DAT_10730cc4 + 0x1bc))("disconnect");
  (**(code **)(*DAT_10730cc4 + 0x1bc))("exec joy_preset_1.cfg");
  (**(code **)(*DAT_10730cc4 + 0x1bc))("gameui_activate");
  (**(code **)(*DAT_10730cc4 + 0x1bc))("gameui_allowescape");
  (**(code **)(*DAT_10730cc4 + 0x1bc))("gameui_hide");
  (**(code **)(*DAT_10730cc4 + 0x1bc))("gameui_preventescape");
  (**(code **)(*DAT_10730cc4 + 0x1bc))("joy_cfg_preset 1");
  (**(code **)(*DAT_10730cc4 + 0x1c0))("cancelselect",uVar3);
  (**(code **)(*DAT_10730cc4 + 0x1c0))("demo_stop\n");
  (**(code **)(*DAT_10730cc4 + 0x1c0))("host_timescale 0",uVar1);
  (**(code **)(*DAT_10730cc4 + 0x1c0))("host_timescale 0.0001");
  (**(code **)(*DAT_10730cc4 + 0x1c0))("host_writeconfig\n");
  (**(code **)(*DAT_10730cc4 + 0x1c0))("joyadvancedupdate silent\n");
  (**(code **)(*DAT_10730cc4 + 0x1c0))("r_cleardecals\n");
  (**(code **)(*DAT_10730cc4 + 0x1c0))("setpause nomsg");
  (**(code **)(*DAT_10730cc4 + 0x1c0))("toggleconsole");
  (**(code **)(*DAT_10730cc4 + 0x1c0))("unpause nomsg");
  (**(code **)(*DAT_10730cc4 + 0x238))("RadialMenuMouseCallback",FUN_102f71f0);
  (**(code **)(*DAT_10730cc4 + 0x28))("cancelselect\n");
  (**(code **)(*DAT_10730cc4 + 0x28))("dump_mapids_server");
  (**(code **)(*DAT_10730cc4 + 0x28))("exec joy_pc_default.cfg");
  (**(code **)(*DAT_10730cc4 + 0x28))("swap_grenade");
  (**(code **)(*DAT_10730cc4 + 0x80))(DAT_10730cc4,&local_20,"[ %2d  ]    Model: %s",uVar4,iVar7);
  (**(code **)(*DAT_10730d00 + 0xc))((int)this + 0x1dc,"game_newmap",0);
  (**(code **)(*DAT_10730d00 + 0xc))((undefined4 *)((int)this + 0x1a4),"vote_changed",0);
  (**(code **)(*DAT_10730d00 + 0xc))((undefined4 *)((int)this + 0x1d8),"gameui_hidden",0);
  (**(code **)(*DAT_10730d00 + 0xc))((undefined4 *)((int)this + 0x1d8),"plans_loaded",0);
  (**(code **)(*DAT_10730d00 + 0xc))((undefined4 *)((int)this + 0x290),"spec_target_updated",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1 + 0x1048,"round_start",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1 + 0x510,"vote_cast",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1 + 0xc,"player_death",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1 + 0xc,"round_end",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"freezecam_started",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"game_newmap",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"hide_freezepanel",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"hltv_cameraman",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"hltv_chase",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"hltv_chat",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"hltv_endofmatch",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"hltv_fixed",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"hltv_message",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"hltv_status",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"hltv_title",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"npc_hitoutput",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_bombarm",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_bombdefuse",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_civkill",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_civrescue",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_connect",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_death",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_disconnect",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_escort",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_info",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_securecase",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_spawn",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_team",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_vipescort",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"player_vipescorted",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"plr_hitoutput",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"round_pre_start",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"round_start",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"show_freezepanel",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"vote_cast",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"vote_changed",0);
  (**(code **)(*DAT_10730d00 + 0xc))(param_1,"vote_options",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"achievement_earned",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"player_changename",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"player_connect",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"player_disconnect",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"player_fullyjoined",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"player_team",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"round_end",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"round_pre_start",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"round_start",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"server_cvar",0);
  (**(code **)(*DAT_10730d00 + 0xc))(piVar1,"teamplay_broadcast_audio",0);
  (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"hltv_status",0);
  (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"map_transition",0);
  (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"plans_loaded",0);
  (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"replay_status",0);
  (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"round_end",0);
  (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"round_pre_start",0);
  (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"round_start",0);
  (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"server_spawn",0);
  (**(code **)(*DAT_10777070 + 0x1c))(*(int *)(param_1 + 0x18) + 0x9c,"Player.Swim");
  (**(code **)(*DAT_107c09f0 + 0x24))("resource/basemodui_%language%.txt",0,0);
  (**(code **)(*DAT_107c09f0 + 0x24))("resource/basemodui_tu_%language%.txt",0,0);
  (**(code **)(*DAT_107c09f0 + 0x24))("resource/chat_%language%.txt",0,0);
  (**(code **)(*DAT_107c09f0 + 0x24))("resource/game_%language%.txt",&DAT_104eefa0,0);
  (**(code **)(*DAT_107c09f0 + 0x24))("resource/gameui_%language%.txt",&DAT_104eefa0,1);
  (**(code **)(*DAT_107c09f0 + 0x24))("resource/items_%language%.txt",&DAT_104eefa0,0);
  (**(code **)(*DAT_107c09f0 + 0x24))("resource/mapinfo_%language%.txt",&DAT_104eefa0,0);
  (**(code **)(*DAT_107c09f0 + 0x24))("resource/publisher_%language%.txt",&DAT_104eefa0,0);
  (**(code **)(*DAT_107c09f0 + 0x24))("resource/valve_%language%.txt",&DAT_104eefa0,1);
  (**(code **)(*DAT_107c09f8 + 0x4c))("textwindow_temp.html","DEFAULT_WRITE_PATH");
  (**(code **)(*DAT_107c09f8 + 0x70))(DAT_107c09f8,param_1,"DESCRIPTION SERVER_OPTIONS\r\n{\r\n");
  (**(code **)(*DAT_107c0a04 + 0x48))("CGameUI::OnGameUIActivated");
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)((int)this + 0x1b8),"vgui/goal_hostage",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)((int)this + 0x1bc),"vgui/player_outline",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)((int)this + 0x264),"vgui/hud/defend_zone",1,0)
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)((int)this + 0x274),"vgui/hud/bomb_zone",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)(param_1 + 0x3ec),"vgui/vertical_bar",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)(param_1 + 0x41a8),"vgui/stamina/fullbar",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)(param_1 + 0x41ac),"vgui/hud/defend_zone",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)(param_1 + 0x41bc),"vgui/hud/bomb_zone",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)(param_1 + 0x41c),"vgui/accu_bonus-1",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)(param_1 + 0x420),"vgui/accu_bonus-2",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)(param_1 + 0x424),"vgui/accu_bonus-3",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(*(undefined4 *)(param_1 + 1000),"vgui/stamina/fullbar",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/SA_indicator",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/ally_indicator",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/ally_indicator_UP",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/ally_indicator_middle",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/ammobox_open",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/ammobox_timer",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/ammobox_timer_outline",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/arrow_pointer",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/arrow_radial",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/flashbang",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/flashbang_HALO",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/frag_grenade",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/frag_grenade_HALO",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/incendiary",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/m320",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/m320_HALO",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/mg4",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/mg4_HALO",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/pistol_bullets",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/pistol_bullets_HALO",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/rifle_bullets",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/rifle_bullets_HALO",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/rpg7",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/rpg7_HALO",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/smoke",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/smoke_HALO",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/bonus_icons/teargas",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/flinch_indicator",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/goal_ally_icon",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/icon_arm",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/icon_bomb_a",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/icon_bomb_b",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/icon_capture",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/icon_defend",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/icon_intel_a",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/icon_intel_b",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/icon_retrieve",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/icon_target",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/magazines/plus",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/magazines/x",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/objective_arrow",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/progress_circle",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/progress_circle_arrows",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar2,"vgui/white",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar4,"vgui/mm/ti_logo",1,0);
  (**(code **)(*DAT_107c0a6c + 0x90))(uVar4,"vgui/resource/icon_cloud_small",1,0);
  (**(code **)(*param_1 + 0x128))("Apply");
  (**(code **)(*param_1 + 0x128))("Close");
  (**(code **)(*param_1 + 0x128))("FilteringTxt");
  (**(code **)(*param_1 + 0x2c))(local_108,"EXECUTABLE_PATH",1);
  (**(code **)(*param_1 + 0x31c))("resource/UI/FreezePanel_Basic.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionCDTrackStartDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionPauseDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionPlayCommandsDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionPlaySoundStartDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionPlaybackRateDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionScreenFadeStartDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionSkipAheadDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionStopPlaybackDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionTextMessageStartDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("resource\\BaseActionZoomDialog.res",0,0,0);
  (**(code **)(*param_1 + 0x31c))("scripts/HudLayout.res",0,0,this);
  (**(code **)(*param_1 + 0x33c))("append","#TextEntry_AppendText","append",this,0);
  (**(code **)(*param_1 + 0x33c))("replace","#TextEntry_ReplaceText","replace",this,0);
  (**(code **)(*param_1 + 0x350))("BtnLoadLastSave",!bVar1);
  (**(code **)(*param_1 + 0x350))("BtnSaveGame",uVar5);
  (**(code **)(*param_1 + 0x38))("EXECUTABLE_PATH");
  (**(code **)(*param_1 + 0x388))("Choose VCC File",1);
  (**(code **)(*param_1 + 0x4c))("media/EndGameVids.txt",0);
  (**(code **)(*param_1 + 0x4c))("memstats",0);
  (**(code **)(*param_1 + 0x6c))("models/animals/malinois.mdl");
  (**(code **)(*param_1 + 0x6c))("models/brokenglass_piece.mdl");
  (**(code **)(*param_1 + 0x6c))("models/can.mdl");
  (**(code **)(*param_1 + 0x6c))("models/player.mdl");
  (**(code **)(*param_1 + 0x6c))("models/props_containers/ammo_box-2.mdl");
  (**(code **)(*param_1 + 0x6c))("models/props_containers/ammo_rocket_crate-1_STATIC.mdl");
  (**(code **)(*param_1 + 0x6c))("models/props_misc/ammo_bag-1.mdl");
  (**(code **)(*param_1 + 0x6c))("models/props_misc/briefcase_bomb-1.mdl");
  (**(code **)(*param_1 + 0x6c))("models/props_misc/portable_ballistic_wall_folded.mdl");
  (**(code **)(*param_1 + 0x6c))("models/props_tools/fire_extinguisher-1.mdl");
  (**(code **)(*param_1 + 0x6c))("models/vehicles/cars/load_wood-1.mdl");
  (**(code **)(*param_1 + 0x6c))("models/vehicles/helicopters/bell212/bell212.mdl");
  (**(code **)(*param_1 + 0x6c))("models/weapons/c4_charge-1.mdl");
  (**(code **)(*param_1 + 0x6c))("models/weapons/door_charge-1.mdl");
  (**(code **)(*param_1 + 0x6c))("models/weapons/flashbang.mdl");
  (**(code **)(*param_1 + 0x6c))("models/weapons/frag.mdl");
  (**(code **)(*param_1 + 0x6c))("models/weapons/grenade_40mm.mdl");
  (**(code **)(*param_1 + 0x6c))("models/weapons/rocket.mdl");
  (**(code **)(*param_1 + 0x6c))("models/weapons/rocket_deployed.mdl");
  (**(code **)(*param_1 + 0x6c))("models/weapons/smoke.mdl");
  (**(code **)(*param_1 + 0x88))("autosavedangerous");
  (**(code **)(*param_1 + 0xc))(param_1,"expecting flex animation data\n");
  (**(code **)(*param_1 + 0xc))(param_1,"expecting ramp data\n");
  (**(code **)(*param_1 + 4))("resource/serverevents.res");
  (**(code **)(*param_2 + 0x5c))("<<invalid>>");
  (**(code **)(*piVar1 + 0x14))("-safe");
  (**(code **)(*piVar1 + 0x20))("+tv_port",uVar3);
  (**(code **)(*piVar1 + 0x28))("split",iVar6,piVar5,1,*(undefined4 *)(param_2 + 0x2dc),param_1);
  (**(code **)(*piVar1 + 0x31c))("resource/ingame/roundwinpanel.res",0,0,0);
  (**(code **)(*piVar1 + 0x48))("cl_autorezoom",&DAT_10324480);
  (**(code **)(*piVar1 + 0x48))("cl_cmdrate",(int)puVar4 + 5);
  (**(code **)(*piVar1 + 0x48))("cl_interp",&DAT_10325b0c);
  (**(code **)(*piVar1 + 0x48))("cl_interp_ratio",&DAT_103242e4);
  (**(code **)(*piVar1 + 0x48))("cl_interpolate",&DAT_103256a0);
  (**(code **)(*piVar1 + 0x48))("cl_lagcompensation",&DAT_10324480);
  (**(code **)(*piVar1 + 0x48))("cl_predict",&DAT_10324480);
  (**(code **)(*piVar1 + 0x48))("cl_predictweapons",&DAT_10324480);
  (**(code **)(*piVar1 + 0x48))("cl_team",&DAT_10357e98);
  (**(code **)(*piVar1 + 0x48))("cl_updaterate",(int)puVar4 + 5);
  (**(code **)(*piVar1 + 0x48))("closecaption",&DAT_103256a0);
  (**(code **)(*piVar1 + 0x48))("english",&DAT_10324480);
  (**(code **)(*piVar1 + 0x48))("fov_desired",&DAT_1033cb28);
  (**(code **)(*piVar1 + 0x48))("hud_classautokill",&DAT_10324480);
  (**(code **)(*piVar1 + 0x48))("tf_medigun_autoheal",&DAT_103256a0);
  (**(code **)(*piVar1 + 4))("base_controllable","C_BasePlayerControllable",0x3b60,FUN_102cd0f0);
  (**(code **)(*piVar1 + 4))("beam_spotlight","C_BeamSpotLight",0x1498,FUN_10093bf0);
  (**(code **)(*piVar1 + 4))("boat_controllable","C_BaseBoatControllable",0x9c70,FUN_102c8ed0);
  (**(code **)(*piVar1 + 4))("client_ragdoll","C_ClientRagdoll",0x3460,FUN_1005a2d0);
  (**(code **)(*piVar1 + 4))("cycler_weapon","C_WeaponCycler",0x3460,FUN_102efc40);
  (**(code **)(*piVar1 + 4))("env_cascade_light","C_CascadeLight",&DAT_00001468,FUN_1009b330);
  (**(code **)(*piVar1 + 4))("env_detail_controller","C_EnvDetailController",0x1448,FUN_10101290);
  (**(code **)(*piVar1 + 4))("env_sprite","C_Sprite",0x14b0,FUN_101836c0);
  (**(code **)(*piVar1 + 4))("env_sprite_oriented","C_SpriteOriented",0x14b0,FUN_101836e0);
  (**(code **)(*piVar1 + 4))("env_spritetrail","C_SpriteTrail",0x1b18,FUN_10184d60);
  (**(code **)(*piVar1 + 4))("func_stage_props_zone","C_FuncStagePropZone",0x1448,FUN_10281ad0);
  (**(code **)(*piVar1 + 4))("func_teamclip","C_FuncTeamClip",0x1440,FUN_1027c090);
  (**(code **)(*piVar1 + 4))("func_useableladder","C_FuncLadder",0x1480,FUN_101049b0);
  (**(code **)(*piVar1 + 4))("grenade","C_BaseGrenade",0x3810,FUN_1004b440);
  (**(code **)(*piVar1 + 4))("grenade_40mm","C_40MMGrenade",0x3800,FUN_102e9cc0);
  (**(code **)(*piVar1 + 4))("helicopter_ct","C_Helicopter_CT",0x5980,FUN_102cb3b0);
  (**(code **)(*piVar1 + 4))("helicopter_mafia","C_Helicopter_Mafia",0x5980,FUN_102cb410);
  (**(code **)(*piVar1 + 4))("helicopter_ter","C_Helicopter_Ter",0x5980,FUN_102cb470);
  (**(code **)(*piVar1 + 4))("info_ladder_dismount","C_InfoLadderDismount",0x1440,FUN_101049d0);
  (**(code **)(*piVar1 + 4))("phys_controllable","C_BaseVPhysicsControllable",0x4380,FUN_102cf610);
  (**(code **)(*piVar1 + 4))("predicted_viewmodel","C_TIViewModel",0x3670,FUN_102be070);
  (**(code **)(*piVar1 + 4))("prop_breaching_charge","C_PropBreachingCharge",0x33d0,FUN_102e9410);
  (**(code **)(*piVar1 + 4))("prop_c4_charge","C_PropC4Charge",0x33d0,FUN_102e9660);
  (**(code **)(*piVar1 + 4))("prop_hitzone","C_PropHitZone",0x3410,FUN_10281b20);
  (**(code **)(*piVar1 + 4))("rpg_rocket","C_Rocket",0x3800,FUN_102ea770);
  (**(code **)(*piVar1 + 4))("slideshow_display_screen",&PTR_vftable_106b4930);
  (**(code **)(*piVar1 + 4))("tacint_gamerules","C_TIGameRulesProxy",0x1440,FUN_102c0950);
  (**(code **)(*piVar1 + 4))("tistaticglobalsproxy","C_TIStaticGlobals_Proxy",0x1440,FUN_102c27f0);
  (**(code **)(*piVar1 + 4))("vgui_screen_panel",&PTR_vftable_106ab868);
  (**(code **)(*piVar1 + 4))("viewangleanim","CViewAngleAnimation",&DAT_00001470,FUN_101a5e70);
  (**(code **)(*piVar1 + 4))("viewmodel","C_BaseViewModel",0x3450,FUN_1004fea0);
  (**(code **)(*piVar1 + 4))("vip_entity","C_NPC_Vip",0x3a40,FUN_102c4960);
  (**(code **)(*piVar1 + 4))("weapon_Knife","C_WeaponKnife",0x3590,FUN_102e8000);
  (**(code **)(*piVar1 + 4))("weapon_ak47","C_WeaponAK47",0x3510,FUN_102eaef0);
  (**(code **)(*piVar1 + 4))("weapon_amd65","C_WeaponAMD65",0x3510,FUN_102eb0c0);
  (**(code **)(*piVar1 + 4))("weapon_as50","C_WeaponAS50",0x3510,FUN_102eecc0);
  (**(code **)(*piVar1 + 4))("weapon_aug","C_WeaponAUG",0x3510,FUN_102eb260);
  (**(code **)(*piVar1 + 4))("weapon_bekas","C_WeaponBekas",0x3520,FUN_102ec0d0);
  (**(code **)(*piVar1 + 4))("weapon_c4detonator","C_WeaponC4Detonator",0x3520,FUN_102e97a0);
  (**(code **)(*piVar1 + 4))("weapon_cubemap","C_WeaponCubemap",0x3460,FUN_102efbf0);
  (**(code **)(*piVar1 + 4))("weapon_dsa58","C_WeaponDSA58",0x3510,FUN_102eb470);
  (**(code **)(*piVar1 + 4))("weapon_fp6","C_WeaponFP6",0x3520,FUN_102ec940);
  (**(code **)(*piVar1 + 4))("weapon_g36k","C_WeaponG36K",0x3510,FUN_102eb610);
  (**(code **)(*piVar1 + 4))("weapon_gsr1911","C_WeaponGSR1911",0x3510,FUN_102e81b0);
  (**(code **)(*piVar1 + 4))("weapon_hk417","C_WeaponHK417",0x3510,FUN_102eb7c0);
  (**(code **)(*piVar1 + 4))("weapon_k1a","C_WeaponK1A",0x3510,FUN_102eb970);
  (**(code **)(*piVar1 + 4))("weapon_m1","C_WeaponM1",0x3510,FUN_102ebb10);
  (**(code **)(*piVar1 + 4))("weapon_m14","C_WeaponM14",0x3510,FUN_102eeea0);
  (**(code **)(*piVar1 + 4))("weapon_m320","C_WeaponM320",0x3530,FUN_102e9d20);
  (**(code **)(*piVar1 + 4))("weapon_m4","C_WeaponM4",0x3510,FUN_102ebd10);
  (**(code **)(*piVar1 + 4))("weapon_m4star10","C_WeaponM4STAR10",0x3520,FUN_102ed0e0);
  (**(code **)(*piVar1 + 4))("weapon_mg4","C_WeaponMG4",0x3510,FUN_102ea290);
  (**(code **)(*piVar1 + 4))("weapon_mp5","C_WeaponMP5",0x3510,FUN_102ee0d0);
  (**(code **)(*piVar1 + 4))("weapon_mp7","C_WeaponMP7",0x3510,FUN_102ee270);
  (**(code **)(*piVar1 + 4))("weapon_mr96","C_WeaponMR96",0x3510,FUN_102e8350);
  (**(code **)(*piVar1 + 4))("weapon_mtx","C_WeaponMTX",0x3510,FUN_102e8620);
  (**(code **)(*piVar1 + 4))("weapon_p2000","C_WeaponP2000",0x3510,FUN_102e8bb0);
  (**(code **)(*piVar1 + 4))("weapon_p250","C_WeaponP250",0x3510,FUN_102e8d50);
  (**(code **)(*piVar1 + 4))("weapon_p90","C_WeaponP90",0x3510,FUN_102ee410);
  (**(code **)(*piVar1 + 4))("weapon_pdw","C_WeaponPDW",0x3510,FUN_102ee5b0);
  (**(code **)(*piVar1 + 4))("weapon_rpg7","C_WeaponRPG7",0x3520,FUN_102ea7d0);
  (**(code **)(*piVar1 + 4))("weapon_sg551","C_WeaponSG551",0x3510,FUN_102ebef0);
  (**(code **)(*piVar1 + 4))("weapon_skorpion","C_WeaponSkorpion",0x3510,FUN_102ee760);
  (**(code **)(*piVar1 + 4))("weapon_sphinx","C_WeaponSphinx",0x3510,FUN_102e8ef0);
  (**(code **)(*piVar1 + 4))("weapon_spr","C_WeaponSPR",0x3510,FUN_102ef070);
  (**(code **)(*piVar1 + 4))("weapon_superv","C_WeaponSUPERV",0x3510,FUN_102ee930);
  (**(code **)(*piVar1 + 4))("weapon_tgs12","C_WeaponTGS12",0x3520,FUN_102ed930);
  (**(code **)(*piVar1 + 4))("weapon_ti_base","C_WeaponTIBase",0x3510,FUN_102dedd0);
  (**(code **)(*piVar1 + 4))("weapon_uratio","C_WeaponURatio",0x3510,FUN_102ef3a0);
  (**(code **)(*piVar1 + 4))("weapon_uzi","C_WeaponUZI",0x3510,FUN_102eeb00);
  (**(code **)(*piVar1 + 4))("weapon_vertec","C_WeaponVertec",0x3510,FUN_102e9080);
  (**(code **)(*piVar1 + 4))("weapon_xd45","C_WeaponXD45",0x3510,FUN_102e9220);
  (**(code **)(*piVar1 + 4))("wheeled_controllable","C_BaseWheeledControllable",0x9c70,FUN_102d2ff0)
  (**(code **)(*piVar1 + 4))(&DAT_104f2b38,"C_Beam",0x14e8,FUN_10051400);
  (**(code **)(*piVar1 + 4))(s_player_104f92fc,"C_TIPlayer",0x49d0,FUN_1026a8a0);
  (**(code **)(*piVar1 + 8))("AnimateSpecificTexture",FUN_10040880);
  (**(code **)(*piVar1 + 8))("AnimatedEntityTexture",FUN_10040420);
  (**(code **)(*piVar1 + 8))("AnimatedOffsetTexture",FUN_10040480);
  (**(code **)(*piVar1 + 8))("AnimatedTexture",FUN_10040620);
  (**(code **)(*piVar1 + 8))("BloomAdd",FUN_101a8600);
  (**(code **)(*piVar1 + 8))("BreakableSurface",FUN_100a4d30);
  (**(code **)(*piVar1 + 8))("BurnLevel",FUN_1026a870);
  (**(code **)(*piVar1 + 8))("Clamp",FUN_10138340);
  (**(code **)(*piVar1 + 8))("ConVar",FUN_100f3ce0);
  (**(code **)(*piVar1 + 8))("ConveyorScroll",FUN_100a78e0);
  (**(code **)(*piVar1 + 8))("CurrentTime",FUN_10189f90);
  (**(code **)(*piVar1 + 8))("Cycle",FUN_100f6b80);
  (**(code **)(*piVar1 + 8))("Divide",FUN_10138370);
  (**(code **)(*piVar1 + 8))("Dummy",FUN_101000f0);
  (**(code **)(*piVar1 + 8))("Empty",FUN_101383a0);
  (**(code **)(*piVar1 + 8))("EntityOrigin",FUN_10100e90);
  (**(code **)(*piVar1 + 8))("EntityOriginAlyx",FUN_10100e60);
  (**(code **)(*piVar1 + 8))("EntityRandom",FUN_1016d370);
  (**(code **)(*piVar1 + 8))("EntitySpeed",FUN_1016d3a0);
  (**(code **)(*piVar1 + 8))("Ep1IntroVortRefract",FUN_10100ec0);
  (**(code **)(*piVar1 + 8))("Equals",FUN_101383c0);
  (**(code **)(*piVar1 + 8))("Exponential",FUN_101383f0);
  (**(code **)(*piVar1 + 8))("GaussianNoise",FUN_10138450);
  (**(code **)(*piVar1 + 8))("Health",FUN_1016d2a0);
  (**(code **)(*piVar1 + 8))("IsNPC",FUN_101350c0);
  (**(code **)(*piVar1 + 8))("LessOrEqual",FUN_101384b0);
  (**(code **)(*piVar1 + 8))("LinearRamp",FUN_101384e0);
  (**(code **)(*piVar1 + 8))("LocalPlayerHealthPercent",FUN_1026a840);
  (**(code **)(*piVar1 + 8))("LumCompare",FUN_101a86c0);
  (**(code **)(*piVar1 + 8))("MaterialModify",FUN_100b0530);
  (**(code **)(*piVar1 + 8))("MaterialModifyAnimated",FUN_100b0500);
  (**(code **)(*piVar1 + 8))("MatrixRotate",FUN_101399f0);
  (**(code **)(*piVar1 + 8))("Modulo",FUN_10138510);
  (**(code **)(*piVar1 + 8))("MotionBlur",FUN_101a8730);
  (**(code **)(*piVar1 + 8))("Multiply",FUN_10138540);
  (**(code **)(*piVar1 + 8))("ParticleSphereProxy",FUN_10147990);
  (**(code **)(*piVar1 + 8))("PlayerLogo",FUN_1016d430);
  (**(code **)(*piVar1 + 8))("PlayerLogoOnModel",FUN_1016d3d0);
  (**(code **)(*piVar1 + 8))("PlayerPosition",FUN_1016d490);
  (**(code **)(*piVar1 + 8))("PlayerProximity",FUN_1016d4c0);
  (**(code **)(*piVar1 + 8))("PlayerSpeed",FUN_1016d4f0);
  (**(code **)(*piVar1 + 8))("PlayerTeamMatch",FUN_1016d520);
  (**(code **)(*piVar1 + 8))("PlayerView",FUN_1016d550);
  (**(code **)(*piVar1 + 8))("Pupil",FUN_1016df90);
  (**(code **)(*piVar1 + 8))("RemapValClamp",FUN_10138570);
  (**(code **)(*piVar1 + 8))("Shadow",FUN_100e2c40);
  (**(code **)(*piVar1 + 8))("ShadowModel",FUN_100e2bf0);
  (**(code **)(*piVar1 + 8))("Subtract",FUN_101385d0);
  (**(code **)(*piVar1 + 8))("SunDirection",FUN_100c6120);
  (**(code **)(*piVar1 + 8))("TextureScroll",FUN_10189d40);
  (**(code **)(*piVar1 + 8))("TextureTransform",FUN_10139a20);
  (**(code **)(*piVar1 + 8))("ToggleTexture",FUN_10189fe0);
  (**(code **)(*piVar1 + 8))("UIWeaponSkin",FUN_1030a240);
  (**(code **)(*piVar1 + 8))("UniformNoise",FUN_10138600);
  (**(code **)(*piVar1 + 8))("VehicleGear",FUN_102cd0c0);
  (**(code **)(*piVar1 + 8))("VideoProxy",FUN_10040650);
  (**(code **)(*piVar1 + 8))("WaterLOD",FUN_101bf410);
  (**(code **)(*piVar1 + 8))("WeaponSkin",FUN_102ded70);
  (**(code **)(*piVar1 + 8))("WorldDims",FUN_101c1f60);
  (**(code **)(*piVar1 + 8))("WrapMinMax",FUN_10138630);
  (**(code **)(*piVar1 + 8))("blurfilterx",FUN_101a8750);
  (**(code **)(*piVar1 + 8))("blurfiltery",FUN_101a8780);
  (**(code **)(*piVar1 + 8))("downsample_non_hdr",FUN_101a8620);
  (**(code **)(*piVar1 + 8))("engine_post",FUN_101a8660);
  (**(code **)(*piVar1 + 8))("lampbeam",FUN_101379e0);
  (**(code **)(*piVar1 + 8))("lamphalo",FUN_10137ad0);
  (**(code **)(*piVar1 + 8))("no_pixel_write",FUN_101a8700);
  (**(code **)(*piVar1 + 8))("radialmenupanel",param_1);
  (**(code **)(*piVar1 + 8))("scores",0);
  (**(code **)(*piVar10 + 0x14))("-makereslists");
  (**(code **)(*piVar10 + 0x14))("-norebuildaudio");
  (**(code **)(*piVar10 + 0x14))("-reslistdir");
  (**(code **)(*piVar10 + 0x14))("-startmap");
  (**(code **)(*piVar10 + 0x14))("-startstage");
  (**(code **)(*piVar10 + 0xc))("-startmap",&local_8);
  (**(code **)(*piVar13 + 0x34))("attacker",0);
  (**(code **)(*piVar13 + 0x34))("dmg_health",local_18);
  (**(code **)(*piVar13 + 0x34))("health",iVar4);
  (**(code **)(*piVar13 + 0x34))("hitgroup",uVar15);
  (**(code **)(*piVar13 + 0x34))("priority",5);
  (**(code **)(*piVar13 + 0x34))("userid",uVar15);
  (**(code **)(*piVar13 + 0x40))("weapon",pcVar17);
  (**(code **)(*piVar2 + 0x14))("+load");
  (**(code **)(*piVar2 + 0x14))(&local_18,"HybridButton.BorderColor",0xff00d2ff);
  (**(code **)(*piVar2 + 0x32c))("Debug Panel","toggledebugpanel",param_1,0);
  (**(code **)(*piVar2 + 0x32c))("Smooth Left","smoothleft",param_1,0);
  (**(code **)(*piVar2 + 0x32c))("Smooth Selection Angles","smoothselectionangles",param_1,0);
  (**(code **)(*piVar2 + 0x34))("index",*(undefined4 *)((int)this + 0x24));
  (**(code **)(*piVar2 + 0x34))("userid",*(undefined4 *)((int)this + 0x2c));
  (**(code **)(*piVar2 + 0x40))("address",puVar4);
  (**(code **)(*piVar2 + 0x49c))("OnCancel");
  (**(code **)(*piVar2 + 0x94))("iMagnitude",local_98);
  (**(code **)(*piVar2 + 0xac))("Explode",0,0,0,uStack20,local_10,0xffffffff,0,0,param_3);
  (**(code **)(*piVar2 + 0xc))(piVar2,"expecting scalesettings data\n");
  (**(code **)(*piVar3 + 0x14))("+mat_hdr_level");
  (**(code **)(*piVar3 + 0x14))("-defaultgamedir");
  (**(code **)(*piVar3 + 0x14))("-game");
  (**(code **)(*piVar3 + 0x49c))("ButtonClicked");
  (**(code **)(*piVar3 + 0xac))("InPass",param_1,param_1,0,uStack20);
  (**(code **)(*piVar3 + 0xf0))("TLK_ELECTROCUTESCREAM");
  (**(code **)(*piVar4 + 0x100))(&local_10,"CheckButton.DepressedBgColor",0xff37463e,piVar3);
  (**(code **)(*piVar4 + 0x100))(&local_c,"CheckButton.ArmedBgColor",0xff37463e,piVar3);
  (**(code **)(*piVar4 + 0x14))(local_3c,"HybridButton.BorderColor",0xff000000);
  (**(code **)(*piVar4 + 0x14))(local_40,"HybridButton.BlotchColor",0xff000000);
  (**(code **)(*piVar4 + 0x31c))(0,"operation","Operation",0x34,0);
  (**(code **)(*piVar4 + 0x388))("Lookup View",1);
  (**(code **)(*piVar4 + 0x49c))("submit");
  (**(code **)(*piVar4 + 0x4c4))("#Cstrike_Bot_Chatter_Normal",0);
  (**(code **)(*piVar4 + 0x4c4))("#Cstrike_Random",0);
  (**(code **)(*piVar4 + 900))("ingame/scoreboard/eor_01");
  (**(code **)(*piVar4 + 900))("ingame/scoreboard/eor_02");
  (**(code **)(*piVar4 + 900))("ingame/scoreboard/eor_03");
  (**(code **)(*piVar5 + 0x49c))("MinimizeToSysTray");
  (**(code **)(*piVar5 + 900))("ingame/tips/tip_plus");
  (**(code **)(*piVar6 + 0x4c4))("All Categories",0);
  (**(code **)(*piVar6 + 0x4c4))("By Time",0);
  (**(code **)(*this + 0x128))("ReturnToGame");
  (**(code **)(*this + 0x31c))("resource/LoadingDialogNoBanner.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/UI/Econ/NotificationQueuePanel.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/UI/Econ/NotificationsPresentPanel.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/UI/Locator.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/UI/TextWindow.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/UI/VideoPanel.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/UI/VoteHud.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/UI/basemodui/extras_infoitem.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/UI/basemodui/mainmenu.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/ingame/BaseChat.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/ingame/TextWindow.res",0,0,0);
  (**(code **)(*this + 0x31c))("resource/ingame/votehud.res",0,0,0);
  (**(code **)(*this + 0x340))("BotQuotaCombo",uVar1);
  (**(code **)(*this + 0x354))("Normal_Look",bVar2);
  (**(code **)(*this + 0x354))("Normal_Move",bVar2);
  (**(code **)(*this + 0x354))("Southpaw_Look",param_1);
  (**(code **)(*this + 0x354))("Southpaw_Move",param_1);
  (**(code **)(*this + 0x35c))("totalct",param_1);
  (**(code **)(*this + 0x35c))("totalt",param_2);
  (**(code **)(*this + 0x364))("explanationnumber",local_44);
  (**(code **)(*this + 0x6c))("models/props_misc/portable_ballistic_wall_folded.mdl");
  (**(code **)(*this + 0x78))("plat_trigger");
  (**(code **)(*this + 0x94))("model",puVar5);
  (**(code **)(*this + 0xfc))("ClientScheme");
  (**(code **)(*this + 900))("items/none");
  (**(code **)(iVar1 + 0x31c))(0,"actionname","Action",iVar6 / 3,uVar2);
  (**(code **)(iVar1 + 0x31c))(1,"actiontype",&DAT_1033904c,iVar6 / 3,uVar2);
  (**(code **)(iVar1 + 0x31c))(2,"actionstart","Start",iVar6 / 3,uVar2);
  (**(code **)(iVar1 + 0x338))(*(undefined4 *)(param_1 + 500),&DAT_104f4a20,"#PlayerName",0,uVar3);
  (**(code **)(iVar1 + 0x350))("BotDifficultyLabel",uVar2);
  (**(code **)(iVar1 + 0x350))("BotQuotaCombo",uVar2);
  (**(code **)(iVar1 + 0x350))("BotQuotaLabel",uVar2);
  (**(code **)(iVar1 + 0x350))("SkillLevel0",uVar2);
  (**(code **)(iVar1 + 0x350))("SkillLevel1",uVar2);
  (**(code **)(iVar1 + 0x350))("SkillLevel2",uVar2);
  (**(code **)(iVar1 + 0x350))("SkillLevel3",uVar2);
  (**(code **)(iVar1 + 0x398))("Open VMT",uVar2);
  (**(code **)(iVar1 + 0x40))("networkid",uVar3);
  (**(code **)(iVar2 + 0x31c))(0,"title","Title",uVar3);
  (**(code **)(iVar2 + 0x338))(*(undefined4 *)(param_1 + 500),"deaths","#PlayerDeath",0,uVar3);
  (**(code **)(iVar2 + 0x338))(*(undefined4 *)(param_1 + 500),"frags","#PlayerScore",0,uVar3);
  (**(code **)(iVar2 + 0x338))(*(undefined4 *)(param_1 + 500),&DAT_1054488c,"#PlayerPing",0,uVar3);
  (**(code **)(iVar3 + 0x80))(DAT_10730cc4,&local_20,"%15s %30s(%d): %15s",local_40,uVar7);
  (**(code **)(iVar5 + 0x5c))(local_c,param_1,0,"%c(%s) %s%c: %s",3,local_4c,uVar6);
  (**(code **)(local_2c + 0x18))("GLOBAL",&DAT_1064af10,0,DAT_105b7070,DAT_105b7074);
  (**(code **)*DAT_10730cf0)("UI/buttonclick.wav",1,1);
  (**(code **)*DAT_10730cf0)("UI/buttonclickrelease.wav",1,1);
  (**(code **)*DAT_10730cf0)("UI/buttonrollover.wav",1,1);
  (**(code **)*DAT_10730cf0)("UI/menu_accept.wav",1,1);
  (**(code **)*DAT_10730cf0)("UI/menu_back.wav",1,1);
  (**(code **)*DAT_10730cf0)("UI/menu_countdown.wav",1,1);
  (**(code **)*DAT_10730cf0)("UI/menu_focus.wav",1,1);
  (**(code **)*DAT_10730cf0)("UI/menu_invalid.wav",1,1);
  (**(code **)*DAT_10730cf0)("UI/ui_menu_flip_single_01.wav",1,1);
  (**(code **)*DAT_10730cf0)("UI/ui_menu_flip_single_02.wav",1,1);
  (**(code **)*param_1)(0xb,"FX_GunshotSlimeSplash",param_2,param_3,0);
  (**(code **)*param_1)(0xb,"FX_GunshotSplash",param_2,param_3,0);
  (**(code **)*param_1)(0xb,"FX_WaterRipple",param_2,param_3,0);
  (**(code **)*param_1)(1,"cable/rope_shadowdepth",param_2,param_3,0);
  (**(code **)*param_1)(1,"debug/debugscreenspacewireframe",param_2,param_3,0);
  (**(code **)*param_1)(1,"decals/playerlogo01",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/bloomadd",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/blurfilterx",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/blurfilterx_nohdr",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/blurfiltery",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/blurfiltery_and_add_nohdr",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/blurfiltery_nohdr",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/blurfiltery_nohdr_clear",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/blurgaussian_3x3",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/clearalpha",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/copyfullframefb",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/copyfullframefb_vanilla",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/depth_of_field",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/downsample",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/downsample_non_hdr",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/engine_post",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/engine_post_splitscreen",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/fade_blur",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/floattoscreen_combine",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/glow_blur_x",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/glow_blur_y",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/glow_color",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/glow_downsample",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/halo_add_to_screen",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/lumcompare",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/motion_blur",param_2,param_3,0);
  (**(code **)*param_1)(1,"dev/no_pixel_write",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/blood_core",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/blood_drop",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/blood_gore",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/blood_puff",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/fire_cloud1",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/fire_cloud2",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/fire_embers1",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/fire_embers2",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/fire_embers3",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/flashbang",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/flashbang_white",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/fleck_glass1",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/fleck_glass2",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/fleck_tile1",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/fleck_tile2",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/halo",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/halo_diamond",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/slime1",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/spark",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/spark-1",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/spark-2",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/spark-3",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/splash1",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/splash2",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/splash3",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/splash4",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/splashwake1",param_2,param_3,0);
  (**(code **)*param_1)(1,"effects/tearcrying",param_2,param_3,0);
  (**(code **)*param_1)(1,"engine/occlusionproxy",param_2,param_3,0);
  (**(code **)*param_1)(1,"engine/occlusionproxy_countdraw",param_2,param_3,0);
  (**(code **)*param_1)(1,"engine/writez",param_2,param_3,0);
  (**(code **)*param_1)(1,"models/player/player_invuln_blue",param_2,param_3,0);
  (**(code **)*param_1)(1,"models/player/player_invuln_red",param_2,param_3,0);
  (**(code **)*param_1)(1,"particle/SmokeStack",param_2,param_3,0);
  (**(code **)*param_1)(1,"particle/particle_smokegrenade",param_2,param_3,0);
  (**(code **)*param_1)(1,"particle/particle_smokegrenade1",param_2,param_3,0);
  (**(code **)*param_1)(1,"particle/rain",param_2,param_3,0);
  (**(code **)*param_1)(1,"particle/screenspace_fog",param_2,param_3,0);
  (**(code **)*param_1)(1,"particle/smokesprites_0001",param_2,param_3,0);
  (**(code **)*param_1)(1,"particle/snow",param_2,param_3,0);
  (**(code **)*param_1)(1,"sprites/light_glow02_add_noz",param_2,param_3,0);
  (**(code **)*param_1)(1,"sprites/muzzleflash1",param_2,param_3,0);
  (**(code **)*param_1)(1,"sprites/muzzleflash2",param_2,param_3,0);
  (**(code **)*param_1)(1,"sprites/muzzleflash3",param_2,param_3,0);
  (**(code **)*param_1)(1,"sun/overlay",param_2,param_3,0);
  (**(code **)*param_1)(1,"vgui/hud/commands/cancel",param_2,param_3,0);
  (**(code **)*param_1)(1,"vgui/hud/commands/empty",param_2,param_3,0);
  (**(code **)*param_1)(1,"vgui/hud/commands/stick",param_2,param_3,0);
  (**(code **)*param_1)(1,"vgui/hud/icon_arrow_down",param_2,param_3,0);
  (**(code **)*param_1)(1,"vgui/hud/icon_arrow_left",param_2,param_3,0);
  (**(code **)*param_1)(1,"vgui/hud/icon_arrow_plain",param_2,param_3,0);
  (**(code **)*param_1)(1,"vgui/hud/icon_arrow_right",param_2,param_3,0);
  (**(code **)*param_1)(1,"vgui/hud/icon_arrow_up",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/cable.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/cable_lit.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/chain-1.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/chain-2.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/chain-3.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/chain.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/jewelery-1.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/jewelery-2.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/jewelery-3.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"cable/rope.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/animals/doberman.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/animals/husky.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/animals/malinois.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/animals/pitbull.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/characters/static_poses/driving/npc1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/characters/static_poses/driving/npc10.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/characters/static_poses/driving/npc11.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/characters/static_poses/driving/npc12.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/characters/static_poses/driving/npc13.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/characters/static_poses/driving/npc5.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/crossbow_bolt.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/error.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/arctic.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/bomber.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/desertfox.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/devgru.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/arm-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/arm-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/gib_small-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/gib_small-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/gib_small-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/leg-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/leg-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/torso-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/torso-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gibbed/_limbs/torso-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gign.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/gsg9.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/headgibs/head1_p1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/headgibs/head1_p2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/headgibs/head1_p3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/jtf2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/santa.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/sdu.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/snake.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/vip.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/player/vip2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_clothing/hats/vip-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_clothing/hats/vip-1_player.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_construction/gas_tank-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_construction/gas_tank-1_p1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_construction/gas_tank-1_p2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_construction/gas_tank-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_construction/gas_tank-2_p1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_construction/gas_tank-2_p2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_construction/gas_tank-2_p3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_containers/ammo_box-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_containers/barrel-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_containers/barrel-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_containers/barrel-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_containers/military_case-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_containers/military_case-1_bonemerge.mdl",param_2,param_3,0)
  (**(code **)*param_1)(2,"models/props_jewelery/display_case-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_jewelery/display_case-4.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_jewelery/necklace_rack-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_jewelery/necklace_stand-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_jewelery/necklace_stand-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_misc/ammo_bag-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_misc/briefcase_bomb-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_misc/riot_shield-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_misc/riot_shield-1_HELD.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_misc/riot_shield-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_misc/riot_shield-2_HELD.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_misc/wooden_log-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_misc/wooden_log-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_misc/wooden_log-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_rocks/small-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_rocks/small-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_rocks/small-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_tools/fire_extinguisher-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_tools/fire_extinguisher-1_p1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_tools/fire_extinguisher-1_p2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_tools/fire_extinguisher-1_p3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_vehicles/cars/broken_parts/door-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_vehicles/cars/broken_parts/door-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_vehicles/cars/broken_parts/hood-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_vehicles/cars/broken_parts/muffler-1.mdl",param_2,param_3,0)
  (**(code **)*param_1)(2,"models/props_vehicles/cars/broken_parts/roof-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/props_vehicles/cars/broken_parts/wheel-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/shells/pistol_shell.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/shells/rifle_shell.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/shells/shotgun_shell.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/airport/drivable/refuel_truck-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-10.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-10_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-10_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-11.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-12.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-12_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-13.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-13_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-13_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-14.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-14_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-1_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-1_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-2_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-2_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-3_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-3_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-4.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-4_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-4_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-5.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-5_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-5_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-6.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-6_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-6_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-7.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-7_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-7_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-8.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-8_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-8_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-9.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-9_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/car-9_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/load_barrels-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/load_wood-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/sedan-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/sedan-1_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/sedan-1_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-1_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-1_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-2_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-2_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-3_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-3_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-4.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-4_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-4_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-5_destroyed_p1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-5_destroyed_p2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-5_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-6.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-6_destroyed_p1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-6_destroyed_p2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-6_destroyed_p3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-6_destroyed_p4.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/truck-6_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/van-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/van-1_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/van-1_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/van-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/van-2_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/van-2_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/van-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/van-3_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/cars/van-3_npc.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/bell212/bell212.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/main_rotor-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/panel-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/panel-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/panel-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/seat-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/seat-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/side_door-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/side_door-2.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/side_door-3.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/debris/tail_rotor-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/ka50/ka50.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vehicles/helicopters/ka50/ka50_destroyed.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vgui/waypoint_arrow-1.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/vgui/waypoint_arrow-1_small.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/magazines/ak47.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/magazines/aug.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/magazines/m4.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/magazines/mg4.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/magazines/mp5.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/magazines/p90.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/magazines/uratio.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/magazines/uzi.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/magazines/vertec.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"models/weapons/v_arms_vip.mdl",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/WXplo1.vmt",param_2,param_3,&DAT_1073053c);
  (**(code **)*param_1)(2,"sprites/blood.vmt",param_2,param_3,&DAT_1073054c);
  (**(code **)*param_1)(2,"sprites/bloodspray.vmt",param_2,param_3,&DAT_10730548);
  (**(code **)*param_1)(2,"sprites/blueglow1.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/bubble.vmt",param_2,param_3,&DAT_10730540);
  (**(code **)*param_1)(2,"sprites/flashlight_beam.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/flashlight_halo.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/glow01.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/laserbeam.vmt",param_2,param_3,&DAT_10730530);
  (**(code **)*param_1)(2,"sprites/laserdot.vmt",param_2,param_3,&DAT_10730534);
  (**(code **)*param_1)(2,"sprites/nav_beam.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/nav_beam_flashing.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/nav_beam_player.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/nav_goal.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/nav_waypoint.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/purpleglow1.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/purplelaser1.vmt",param_2,param_3,0);
  (**(code **)*param_1)(2,"sprites/steam1.vmt",param_2,param_3,&DAT_10730544);
  (**(code **)*param_1)(2,"sprites/zerogxplode.vmt",param_2,param_3,&DAT_10730538);
  (**(code **)*param_1)(3,"Action.Error",param_2,param_3,0);
  (**(code **)*param_1)(3,"Ammo.Pickup",param_2,param_3,0);
  (**(code **)*param_1)(3,"AmmoBox.Close",param_2,param_3,0);
  (**(code **)*param_1)(3,"AmmoBox.GrabAmmo",param_2,param_3,0);
  (**(code **)*param_1)(3,"AmmoBox.Locked",param_2,param_3,0);
  (**(code **)*param_1)(3,"AmmoBox.Open",param_2,param_3,0);
  (**(code **)*param_1)(3,"AmmoBox.Tick",param_2,param_3,0);
  (**(code **)*param_1)(3,"BaseEntity.EnterWater",param_2,param_3,0);
  (**(code **)*param_1)(3,"BaseEntity.ExitWater",param_2,param_3,0);
  (**(code **)*param_1)(3,"BaseExplosionEffect.Sound",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bomb.Beep",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bounce.Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bounce.Flesh",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bounce.Glass",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bounce.Metal",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bounce.Shell",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bounce.ShotgunShell",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bounce.Shrapnel",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bounce.Wood",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bullets.DefaultNearmiss",param_2,param_3,0);
  (**(code **)*param_1)(3,"Bullets.HeavyNearmiss",param_2,param_3,0);
  (**(code **)*param_1)(3,"Canister.ImpactHard",param_2,param_3,0);
  (**(code **)*param_1)(3,"Canister.ImpactSoft",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car.Horn_A",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car.Horn_B",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car.Horn_BTeam",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car.Horn_C",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car.Horn_D",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car.Horn_E",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car.PeelOut",param_2,param_3,0);
  (**(code **)*param_1)(3,"CarDoor_Close",param_2,param_3,0);
  (**(code **)*param_1)(3,"CarDoor_Open",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car_Police_Siren_EU",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car_Police_Siren_UK",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car_Police_Siren_US",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car_Skid1",param_2,param_3,0);
  (**(code **)*param_1)(3,"Car_Skid2",param_2,param_3,0);
  (**(code **)*param_1)(3,"Carpet.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"Cloth.BulletImpact",param_2,param_3,0);
  (**(code **)*param_1)(3,"Concrete.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"Dog.Run_Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Dog.Run_Gravel",param_2,param_3,0);
  (**(code **)*param_1)(3,"Dog.Run_Wood",param_2,param_3,0);
  (**(code **)*param_1)(3,"Drive_No_Tire",param_2,param_3,0);
  (**(code **)*param_1)(3,"Drive_On_Gravel",param_2,param_3,0);
  (**(code **)*param_1)(3,"Gravel.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"Grenade.Switch",param_2,param_3,0);
  (**(code **)*param_1)(3,"HangingClothes.BulletImpact",param_2,param_3,0);
  (**(code **)*param_1)(3,"Heli.Apache_Rotor",param_2,param_3,0);
  (**(code **)*param_1)(3,"Heli.Apache_Rotor_Damaged",param_2,param_3,0);
  (**(code **)*param_1)(3,"Heli.Apache_Start",param_2,param_3,0);
  (**(code **)*param_1)(3,"Heli.Bell212_Rotor",param_2,param_3,0);
  (**(code **)*param_1)(3,"Heli.Bell212_Rotor_Damaged",param_2,param_3,0);
  (**(code **)*param_1)(3,"Heli.Bell212_Start",param_2,param_3,0);
  (**(code **)*param_1)(3,"Heli.WarningSound",param_2,param_3,0);
  (**(code **)*param_1)(3,"Honda_impact_heavy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Honda_skid_highfriction",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.BodyCheck",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Cough",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Falling_Scream",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Handcuff",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.OnFire_Scream",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.PainScream",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Run_Boots_Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Run_CombatBoots_Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Run_DressShoes_Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Run_Sneakers_Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Scratch",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.ShortScream",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Sneeze",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Strain",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Vomit",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Walk_Boots_Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Walk_CombatBoots_Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Walk_DressShoes_Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage.Walk_Sneakers_Concrete",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_1.Captured",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_1.Rescued",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_1.Scared",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_1.Scared_Running",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_2.Captured",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_2.Rescued",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_2.Scared",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_2.Scared_Running",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_3.Captured",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_3.Rescued",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_3.Scared",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_3.Scared_Running",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_4.Captured",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_4.Rescued",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_4.Scared",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_4.Scared_Running",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_5.Captured",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_5.Rescued",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_5.Scared",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_5.Scared_Running",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_6.Captured",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_6.Rescued",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_6.Scared",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_6.Scared_Running",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_69.Captured",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_69.Rescued",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_69.Scared",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_69.Scared_Running",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_7.Captured",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_7.Rescued",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_7.Scared",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hostage_7.Scared_Running",param_2,param_3,0);
  (**(code **)*param_1)(3,"Hud.ButtonPress1",param_2,param_3,0);
  (**(code **)*param_1)(3,"HudChat.Announcement",param_2,param_3,0);
  (**(code **)*param_1)(3,"HudChat.TeamMessage",param_2,param_3,0);
  (**(code **)*param_1)(3,"Inferno.Fire.Ignite",param_2,param_3,0);
  (**(code **)*param_1)(3,"Inferno.Loop",param_2,param_3,0);
  (**(code **)*param_1)(3,"Inferno.Start",param_2,param_3,0);
  (**(code **)*param_1)(3,"Leaves.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"Malinois.Bark",param_2,param_3,0);
  (**(code **)*param_1)(3,"Malinois.Bite",param_2,param_3,0);
  (**(code **)*param_1)(3,"Malinois.Breathe",param_2,param_3,0);
  (**(code **)*param_1)(3,"Malinois.BreatheGrowl",param_2,param_3,0);
  (**(code **)*param_1)(3,"Malinois.Pain",param_2,param_3,0);
  (**(code **)*param_1)(3,"Malinois.Scratch",param_2,param_3,0);
  (**(code **)*param_1)(3,"Marble.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"Metal.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"MetalGrate.StepRight",param_2,param_3,0);
  (**(code **)*param_1)(3,"Missile.ShotDown",param_2,param_3,0);
  (**(code **)*param_1)(3,"OOZ_50Cal.Fire",param_2,param_3,0);
  (**(code **)*param_1)(3,"Physics.WaterSplash",param_2,param_3,0);
  (**(code **)*param_1)(3,"Pistol.Drop",param_2,param_3,0);
  (**(code **)*param_1)(3,"Pistol.Pickup",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.AUGReload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.BodyGib",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Breathing_Short",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.BulletImpact_Vest",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.CarHit",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.CarJack",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.CarStop",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Car_Hit",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.DSA58Deploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Death",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.DeathNoGib",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.DenyWeaponSelection",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.FP6Deploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.FP6Reload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.FastRope_Climb",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.FastRope_Descend",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.HWaveOver",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Headshot",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Heal",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Helmet",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Hostage_ButtStroke",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Hostage_Grab",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Hostage_KickAway",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.JacketMovement",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.M14Deploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.M14Reload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.MP5Deploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.MP5Reload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.MP7Deploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.MP7Reload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.NVGOff",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.NVGOn",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.PainScream",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.PickupWeapon",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.PistolDeploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.PistolReload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.RangeTarget_Down",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Rappel_Attach",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Rappel_Climb",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Rappel_Detach",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Rappel_Jump",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Rappel_Land",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Rappel_Movement",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.RevolverDeploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.RevolverReload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Roll",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Roll_Water",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.SG551Deploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.SG551Reload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Suggest_Grenade",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Swim",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.URatioDeploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.URatioReload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.UratioWorldFire",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.UziDeploy",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.UziReload",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.WP_GoalTouch",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.WP_Touch",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.WeaponSelected",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.WeaponSelectionClose",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.WeaponSelectionMoveSlot",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Whistle_Dog_Follow",param_2,param_3,0);
  (**(code **)*param_1)(3,"Player.Whistle_Dog_Goto",param_2,param_3,0);
  (**(code **)*param_1)(3,"RPG7.Pickup",param_2,param_3,0);
  (**(code **)*param_1)(3,"Replace_Tire",param_2,param_3,0);
  (**(code **)*param_1)(3,"Rifle.Drop",param_2,param_3,0);
  (**(code **)*param_1)(3,"Rifle.Pickup",param_2,param_3,0);
  (**(code **)*param_1)(3,"Rifle.Scrape",param_2,param_3,0);
  (**(code **)*param_1)(3,"Sand.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"Snow.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"Splash.SplashSound",param_2,param_3,0);
  (**(code **)*param_1)(3,"Tire_Explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"Trunk_Open",param_2,param_3,0);
  (**(code **)*param_1)(3,"Trunk_Open_SpareTire",param_2,param_3,0);
  (**(code **)*param_1)(3,"Underwater.BulletImpact",param_2,param_3,0);
  (**(code **)*param_1)(3,"Vehicle_Critical_Hit",param_2,param_3,0);
  (**(code **)*param_1)(3,"WP.Delete",param_2,param_3,0);
  (**(code **)*param_1)(3,"WP.DeletePlans",param_2,param_3,0);
  (**(code **)*param_1)(3,"WP.Plot",param_2,param_3,0);
  (**(code **)*param_1)(3,"WP.Start",param_2,param_3,0);
  (**(code **)*param_1)(3,"Water.BulletImpact",param_2,param_3,0);
  (**(code **)*param_1)(3,"Water.Impact_Large",param_2,param_3,0);
  (**(code **)*param_1)(3,"Water.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_GenericPistol.DryFire",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_GenericRevolver.DryFire",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_GenericRifle.DryFire",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_Knife.FleshHit",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_Knife.FlipOpen",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_Knife.ScrapeMetal",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_Knife.ScrapeWall",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_Knife.Swing",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_MetalPistol.SlideLock",param_2,param_3,0);
  (**(code **)*param_1)(3,"Weapon_PlasticPistol.SlideLock",param_2,param_3,0);
  (**(code **)*param_1)(3,"Windows_Break",param_2,param_3,0);
  (**(code **)*param_1)(3,"Wood.PlayerLand",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.bomb_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.bricks_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.car_burning",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.car_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.cosmetics_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.disks_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.fire_extinguisher_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.fire_extinguisher_spray",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.fire_hydrant_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.food_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.food_explode_gushy",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.fullglassbottle_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.garbage_bin_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.glasses_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.hardcandy_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.jewelery_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.jug_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.lamp_post_uproot",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.large_struts_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.mailbox_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.mannequin_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.metal_crash",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.metalshards_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.parking_meter_break",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.plastic_pails_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.propane_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.propane_thrust",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.rawmeat_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.rawveggies_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.tree_uproot",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.tv_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.watches_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.water_barrel_explode",param_2,param_3,0);
  (**(code **)*param_1)(3,"fx.water_explode",param_2,param_3,0);
  (**(code **)*param_1)(4,"RifleTracer",param_2,param_3,0);
  (**(code **)*param_1)(4,"Rocket_Smoke",param_2,param_3,0);
  (**(code **)*param_1)(4,"SMGTracer",param_2,param_3,0);
  (**(code **)*param_1)(4,"ash_outer",param_2,param_3,0);
  (**(code **)*param_1)(4,"blood_bleedout",param_2,param_3,0);
  (**(code **)*param_1)(4,"blood_impact_red_01",param_2,param_3,0);
  (**(code **)*param_1)(4,"blood_incapacitated",param_2,param_3,0);
  (**(code **)*param_1)(4,"bugs_precipitation",param_2,param_3,0);
  (**(code **)*param_1)(4,"bugs_precipitation_outer",param_2,param_3,0);
  (**(code **)*param_1)(4,"burning_character",param_2,param_3,0);
  (**(code **)*param_1)(4,"burning_character_screen",param_2,param_3,0);
  (**(code **)*param_1)(4,"burning_engine",param_2,param_3,0);
  (**(code **)*param_1)(4,"command_target_ping",param_2,param_3,0);
  (**(code **)*param_1)(4,"command_target_ping_no_arrows",param_2,param_3,0);
  (**(code **)*param_1)(4,"error",param_2,param_3,0);
  (**(code **)*param_1)(4,"explode_tire",param_2,param_3,0);
  (**(code **)*param_1)(4,"footstep_dirt",param_2,param_3,0);
  (**(code **)*param_1)(4,"footstep_grass",param_2,param_3,0);
  (**(code **)*param_1)(4,"footstep_mud",param_2,param_3,0);
  (**(code **)*param_1)(4,"footstep_puddle",param_2,param_3,0);
  (**(code **)*param_1)(4,"footstep_wet",param_2,param_3,0);
  (**(code **)*param_1)(4,"fx_heal",param_2,param_3,0);
  (**(code **)*param_1)(4,"halloween_bats",param_2,param_3,0);
  (**(code **)*param_1)(4,"halloween_ghosts",param_2,param_3,0);
  (**(code **)*param_1)(4,"headshot_gibs",param_2,param_3,0);
  (**(code **)*param_1)(4,"impact_explosive_ammo_small",param_2,param_3,0);
  (**(code **)*param_1)(4,"impact_explosive_ammo_world",param_2,param_3,0);
  (**(code **)*param_1)(4,"impact_physics_dust",param_2,param_3,0);
  (**(code **)*param_1)(4,"impact_physics_sparks",param_2,param_3,0);
  (**(code **)*param_1)(4,"impact_player",param_2,param_3,0);
  (**(code **)*param_1)(4,"impact_player_bodyarmour",param_2,param_3,0);
  (**(code **)*param_1)(4,"indicator_capture",param_2,param_3,0);
  (**(code **)*param_1)(4,"indicator_contain",param_2,param_3,0);
  (**(code **)*param_1)(4,"indicator_escort",param_2,param_3,0);
  (**(code **)*param_1)(4,"indicator_kill",param_2,param_3,0);
  (**(code **)*param_1)(4,"indicator_rescue",param_2,param_3,0);
  (**(code **)*param_1)(4,"molotov_explosion",param_2,param_3,0);
  (**(code **)*param_1)(4,"molotov_groundfire",param_2,param_3,0);
  (**(code **)*param_1)(4,"rain_outer",param_2,param_3,0);
  (**(code **)*param_1)(4,"rain_storm",param_2,param_3,0);
  (**(code **)*param_1)(4,"rain_storm_outer",param_2,param_3,0);
  (**(code **)*param_1)(4,"rain_storm_screen",param_2,param_3,0);
  (**(code **)*param_1)(4,"screen_bashed",param_2,param_3,0);
  (**(code **)*param_1)(4,"screen_blood_splatter",param_2,param_3,0);
  (**(code **)*param_1)(4,"screen_blood_splatter_melee",param_2,param_3,0);
  (**(code **)*param_1)(4,"screen_blood_splatter_melee_blunt",param_2,param_3,0);
  (**(code **)*param_1)(4,"screen_hurt",param_2,param_3,0);
  (**(code **)*param_1)(4,"screen_mud_splatter",param_2,param_3,0);
  (**(code **)*param_1)(4,"slime_splash_01",param_2,param_3,0);
  (**(code **)*param_1)(4,"slime_splash_02",param_2,param_3,0);
  (**(code **)*param_1)(4,"slime_splash_03",param_2,param_3,0);
  (**(code **)*param_1)(4,"smoke_precipitation",param_2,param_3,0);
  (**(code **)*param_1)(4,"smoke_precipitation_outer",param_2,param_3,0);
  (**(code **)*param_1)(4,"smoke_precipitation_screen",param_2,param_3,0);
  (**(code **)*param_1)(4,"smouldering_character",param_2,param_3,0);
  (**(code **)*param_1)(4,"snow_outer",param_2,param_3,0);
  (**(code **)*param_1)(4,"water_splash_01",param_2,param_3,0);
  (**(code **)*param_1)(4,"water_splash_02",param_2,param_3,0);
  (**(code **)*param_1)(4,"water_splash_02_surface2",param_2,param_3,0);
  (**(code **)*param_1)(4,"water_splash_03",param_2,param_3,0);
  (**(code **)*param_1)(5,"entityflame",param_2,param_3,0);
  (**(code **)*param_1)(5,"env_entity_freezing",param_2,param_3,0);
  (**(code **)*param_1)(5,"flashbang_projectile",param_2,param_3,0);
  (**(code **)*param_1)(5,"grenade_40mm",param_2,param_3,0);
  (**(code **)*param_1)(5,"grenade_projectile",param_2,param_3,0);
  (**(code **)*param_1)(5,"helicopter_controllable",param_2,param_3,0);
  (**(code **)*param_1)(5,"incendiary_projectile",param_2,param_3,0);
  (**(code **)*param_1)(5,"player",param_2,param_3,0);
  (**(code **)*param_1)(5,"predicted_viewmodel",param_2,param_3,0);
  (**(code **)*param_1)(5,"prop_bomb",param_2,param_3,0);
  (**(code **)*param_1)(5,"prop_breaching_charge",param_2,param_3,0);
  (**(code **)*param_1)(5,"prop_c4_charge",param_2,param_3,0);
  (**(code **)*param_1)(5,"prop_retrieval_entity",param_2,param_3,0);
  (**(code **)*param_1)(5,"prop_shield_entity",param_2,param_3,0);
  (**(code **)*param_1)(5,"prop_sparetire",param_2,param_3,0);
  (**(code **)*param_1)(5,"prop_vip_retrieval_entity",param_2,param_3,0);
  (**(code **)*param_1)(5,"smokegrenade_projectile",param_2,param_3,0);
  (**(code **)*param_1)(5,"spraycan",param_2,param_3,0);
  (**(code **)*param_1)(5,"teargrenade_projectile",param_2,param_3,0);
  (**(code **)*param_1)(5,"vgui_screen",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_ak47",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_amd65",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_as50",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_aug",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_bekas",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_c4detonator",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_dsa58",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_fp6",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_g36k",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_gsr1911",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_hk417",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_k1a",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_knife",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_m1",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_m14",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_m320",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_m4",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_m4star10",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_mg4",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_mp5",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_mp7",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_mr96",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_mtx",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_p2000",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_p250",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_p90",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_pdw",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_rpg7",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_sg551",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_skorpion",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_sphinx",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_spr",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_superv",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_tgs12",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_uratio",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_uzi",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_vertec",param_2,param_3,0);
  (**(code **)*param_1)(5,"weapon_xd45",param_2,param_3,0);
  (**(code **)*param_1)(7,"effects/blood",param_2,param_3,&DAT_107ada34);
  (**(code **)*param_1)(7,"effects/blood2",param_2,param_3,&DAT_107ada38);
  (**(code **)*param_1)(7,"effects/fleck_cement1",param_2,param_3,&DAT_107ada14);
  (**(code **)*param_1)(7,"effects/fleck_cement2",param_2,param_3,&DAT_107ada18);
  (**(code **)*param_1)(7,"effects/fleck_glass1",param_2,param_3,&DAT_107ada3c);
  (**(code **)*param_1)(7,"effects/fleck_glass2",param_2,param_3,&DAT_107ada40);
  (**(code **)*param_1)(7,"effects/fleck_tile1",param_2,param_3,&DAT_107ada24);
  (**(code **)*param_1)(7,"effects/fleck_tile2",param_2,param_3,&DAT_107ada28);
  (**(code **)*param_1)(7,"effects/fleck_wood1",param_2,param_3,&DAT_107ada0c);
  (**(code **)*param_1)(7,"effects/fleck_wood2",param_2,param_3,&DAT_107ada10);
  (**(code **)*param_1)(7,"particle/particle_noisesphere",param_2,param_3,&DAT_107ada30);
  (**(code **)*param_1)(7,"particle/particle_smokegrenade",param_2,param_3,&DAT_107ada2c);
  (**(code **)*puVar1)(&PTR_vftable_105934b4,"info_hint");
  (**(code **)*puVar1)(&PTR_vftable_105934b8,"info_node");
  (**(code **)*puVar1)(&PTR_vftable_105934bc,"info_node_hint");
  (**(code **)*puVar1)(&PTR_vftable_105934c0,"info_node_air");
  (**(code **)*puVar1)(&PTR_vftable_105934c4,"info_node_air_hint");
  (**(code **)*puVar1)(&PTR_vftable_105934c8,"info_node_climb");
  (**(code **)*puVar1)(&PTR_vftable_105934cc,"aitesthull");
  (**(code **)*puVar1)(&PTR_vftable_105949a0,"ai_network");
  (**(code **)*puVar1)(&PTR_vftable_10594c18,"ai_ally_speech_manager");
  (**(code **)*puVar1)(&PTR_vftable_105959e0,"ai_script_conditions");
  (**(code **)*puVar1)(&PTR_vftable_10596278,"ai_speechfilter");
  (**(code **)*puVar1)(&PTR_vftable_10598784,"ambient_generic");
  (**(code **)*puVar1)(&PTR_vftable_1059d89c,"funCBaseFlex");
  (**(code **)*puVar1)(&PTR_vftable_1059db70,"cycler_flex");
  (**(code **)*puVar1)(&PTR_vftable_1059e57c,"grenade");
  (**(code **)*puVar1)(&PTR_vftable_1059e760,"viewmodel");
  (**(code **)*puVar1)(&PTR_vftable_1059e780,"info_target");
  (**(code **)*puVar1)(&PTR_vftable_1059ee38,"beam_spotlight");
  (**(code **)*puVar1)(&PTR_vftable_1059f348,"func_wall");
  (**(code **)*puVar1)(&PTR_vftable_1059f440,"func_wall_toggle");
  (**(code **)*puVar1)(&PTR_vftable_1059f4fc,"func_vehicleclip");
  (**(code **)*puVar1)(&PTR_vftable_1059f500,"func_conveyor");
  (**(code **)*puVar1)(&PTR_vftable_1059f638,"func_illusionary");
  (**(code **)*puVar1)(&PTR_vftable_1059f63c,"func_rotating");
  (**(code **)*puVar1)(&PTR_vftable_1059fe78,"func_clip_vphysics");
  (**(code **)*puVar1)(&PTR_vftable_105a057c,"func_button");
  (**(code **)*puVar1)(&PTR_vftable_105a0598,"func_rot_button");
  (**(code **)*puVar1)(&PTR_vftable_105a0bf4,"momentary_rot_button");
  (**(code **)*puVar1)(&PTR_vftable_105a10a4,"event_queue_saveload_proxy");
  (**(code **)*puVar1)(&PTR_vftable_105a1358,"baseprojectile");
  (**(code **)*puVar1)(&PTR_vftable_105a1520,"point_clientcommand");
  (**(code **)*puVar1)(&PTR_vftable_105a15a0,"point_servercommand");
  (**(code **)*puVar1)(&PTR_vftable_105a1620,"point_broadcastclientcommand");
  (**(code **)*puVar1)(&PTR_vftable_105a1964,"color_correction");
  (**(code **)*puVar1)(&PTR_vftable_105a1984,"color_correction_volume");
  (**(code **)*puVar1)(&PTR_vftable_105a1cc4,"target_cdaudio");
  (**(code **)*puVar1)(&PTR_vftable_105a1d7c,"target_changegravity");
  (**(code **)*puVar1)(&PTR_vftable_105a1ec4,"phys_ragdollmagnet");
  (**(code **)*puVar1)(&PTR_vftable_105a2a78,"func_door");
  (**(code **)*puVar1)(&PTR_vftable_105a2a7c,"func_water");
  (**(code **)*puVar1)(&PTR_vftable_105a2a84,"func_door_rotating");
  (**(code **)*puVar1)(&PTR_vftable_105a4b48,"light_dynamic");
  (**(code **)*puVar1)(&PTR_vftable_105a5068,"env_bubbles");
  (**(code **)*puVar1)(&PTR_vftable_105a5340,"env_tracer");
  (**(code **)*puVar1)(&PTR_vftable_105a5870,"gibshooter");
  (**(code **)*puVar1)(&PTR_vftable_105a5968,"env_shooter");
  (**(code **)*puVar1)(&PTR_vftable_105a596c,"env_rotorshooter");
  (**(code **)*puVar1)(&PTR_vftable_105a5a9c,"test_effect");
  (**(code **)*puVar1)(&PTR_vftable_105a5aa0,"env_blood");
  (**(code **)*puVar1)(&PTR_vftable_105a5bd4,"env_funnel");
  (**(code **)*puVar1)(&PTR_vftable_105a5cc8,"env_beverage");
  (**(code **)*puVar1)(&PTR_vftable_105a5ccc,"item_sodacan");
  (**(code **)*puVar1)(&PTR_vftable_105a5cd0,"func_precipitation");
  (**(code **)*puVar1)(&PTR_vftable_105a5d54,"func_precipitation_blocker");
  (**(code **)*puVar1)(&PTR_vftable_105a5d5c,"func_detail_blocker");
  (**(code **)*puVar1)(&PTR_vftable_105a5d60,"env_wind");
  (**(code **)*puVar1)(&PTR_vftable_105a60b8,"env_embers");
  (**(code **)*puVar1)(&PTR_vftable_105a622c,"env_physwire");
  (**(code **)*puVar1)(&PTR_vftable_105a6398,"env_muzzleflash");
  (**(code **)*puVar1)(&PTR_vftable_105a6454,"env_splash");
  (**(code **)*puVar1)(&PTR_vftable_105a6908,"env_gunfire");
  (**(code **)*puVar1)(&PTR_vftable_105a6a3c,"env_quadraticbeam");
  (**(code **)*puVar1)(&PTR_vftable_105a6a54,"env_viewpunch");
  (**(code **)*puVar1)(&PTR_vftable_105a6b60,"entity_blocker");
  (**(code **)*puVar1)(&PTR_vftable_105a6ecc,"env_entity_dissolver");
  (**(code **)*puVar1)(&PTR_vftable_105a70a8,"entityflame");
  (**(code **)*puVar1)(&PTR_vftable_105a7174,"env_entity_igniter");
  (**(code **)*puVar1)(&PTR_vftable_105a72fc,"env_entity_freezing");
  (**(code **)*puVar1)(&PTR_vftable_105ab48c,"env_particle_trail");
  (**(code **)*puVar1)(&PTR_vftable_105ab5f0,"env_ambient_light");
  (**(code **)*puVar1)(&PTR_vftable_105ab704,"env_cascade_light");
  (**(code **)*puVar1)(&PTR_vftable_105ab97c,"env_debughistory");
  (**(code **)*puVar1)(&PTR_vftable_105ab984,"env_detail_controller");
  (**(code **)*puVar1)(&PTR_vftable_105ab9a4,"env_dof_controller");
  (**(code **)*puVar1)(&PTR_vftable_105abe8c,"env_instructor_hint");
  (**(code **)*puVar1)(&PTR_vftable_105ac3f4,"info_target_instructor_hint");
  (**(code **)*puVar1)(&PTR_vftable_105ac410,"env_player_surface_trigger");
  (**(code **)*puVar1)(&PTR_vftable_105ac64c,"env_projectedtexture");
  (**(code **)*puVar1)(&PTR_vftable_105ad0d4,"env_screenoverlay");
  (**(code **)*puVar1)(&PTR_vftable_105ad730,"env_screeneffect");
  (**(code **)*puVar1)(&PTR_vftable_105ad880,"env_texturetoggle");
  (**(code **)*puVar1)(&PTR_vftable_105ad96c,"env_tonemap_controller");
  (**(code **)*puVar1)(&PTR_vftable_105adf8c,"trigger_tonemap");
  (**(code **)*puVar1)(&PTR_vftable_105ae03c,"env_beam");
  (**(code **)*puVar1)(&PTR_vftable_105ae670,"env_fade");
  (**(code **)*puVar1)(&PTR_vftable_105ae834,"env_hudhint");
  (**(code **)*puVar1)(&PTR_vftable_105ae940,"env_laser");
  (**(code **)*puVar1)(&PTR_vftable_105aebe8,"env_message");
  (**(code **)*puVar1)(&PTR_vftable_105aedd0,"env_credits");
  (**(code **)*puVar1)(&PTR_vftable_105aefb8,"env_outtro_stats");
  (**(code **)*puVar1)(&PTR_vftable_105af104,"env_microphone");
  (**(code **)*puVar1)(&PTR_vftable_105af668,"env_shake");
  (**(code **)*puVar1)(&PTR_vftable_105af9f4,"env_tilt");
  (**(code **)*puVar1)(&PTR_vftable_105afe4c,"env_spark");
  (**(code **)*puVar1)(&PTR_vftable_105afe6c,"spark_shower");
  (**(code **)*puVar1)(&PTR_vftable_105afe70,"env_explosion");
  (**(code **)*puVar1)(&PTR_vftable_105b0274,"filter_base");
  (**(code **)*puVar1)(&PTR_vftable_105b03a4,"filter_multi");
  (**(code **)*puVar1)(&PTR_vftable_105b06b4,"filter_activator_name");
  (**(code **)*puVar1)(&PTR_vftable_105b0730,"filter_activator_model");
  (**(code **)*puVar1)(&PTR_vftable_105b07b0,"filter_activator_context");
  (**(code **)*puVar1)(&PTR_vftable_105b0830,"filter_activator_class");
  (**(code **)*puVar1)(&PTR_vftable_105b08b0,"filter_activator_team");
  (**(code **)*puVar1)(&PTR_vftable_105b0930,"filter_activator_mass_greater");
  (**(code **)*puVar1)(&PTR_vftable_105b09b0,"filter_damage_type");
  (**(code **)*puVar1)(&PTR_vftable_105b0a30,"filter_enemy");
  (**(code **)*puVar1)(&PTR_vftable_105b11c4,"env_fire");
  (**(code **)*puVar1)(&PTR_vftable_105b1330,"env_firesource");
  (**(code **)*puVar1)(&PTR_vftable_105b15cc,"env_firesensor");
  (**(code **)*puVar1)(&PTR_vftable_105b172c,"_firesmoke");
  (**(code **)*puVar1)(&PTR_vftable_105b1c98,"func_fish_pool");
  (**(code **)*puVar1)(&PTR_vftable_105b1f4c,"prop_talker");
  (**(code **)*puVar1)(&PTR_vftable_105b1f80,"env_fog_controller");
  (**(code **)*puVar1)(&PTR_vftable_105b2874,"trigger_fog");
  (**(code **)*puVar1)(&PTR_vftable_105b2aac,"fog_volume");
  (**(code **)*puVar1)(&PTR_vftable_105b2d20,"func_areaportal");
  (**(code **)*puVar1)(&PTR_vftable_105b300c,"func_areaportalwindow");
  (**(code **)*puVar1)(&PTR_vftable_105b3278,"func_breakable");
  (**(code **)*puVar1)(&PTR_vftable_105b3ba8,"func_pushable");
  (**(code **)*puVar1)(&PTR_vftable_105b3bdc,"window_pane");
  (**(code **)*puVar1)(&PTR_vftable_105b3be0,"func_breakable_surf");
  (**(code **)*puVar1)(&PTR_vftable_105b4458,"func_dustmotes");
  (**(code **)*puVar1)(&PTR_vftable_105b445c,"func_dustcloud");
  (**(code **)*puVar1)(&PTR_vftable_105b4464,"env_dustpuff");
  (**(code **)*puVar1)(&PTR_vftable_105b4588,"info_elevator_floor");
  (**(code **)*puVar1)(&PTR_vftable_105b4608,"func_elevator");
  (**(code **)*puVar1)(&PTR_vftable_105b49ec,"func_instance_io_proxy");
  (**(code **)*puVar1)(&PTR_vftable_105b5894,"func_useableladder");
  (**(code **)*puVar1)(&PTR_vftable_105b5b30,"info_ladder_dismount");
  (**(code **)*puVar1)(&PTR_vftable_105b5b34,"func_ladderendpoint");
  (**(code **)*puVar1)(&PTR_vftable_105b5b54,"func_lod");
  (**(code **)*puVar1)(&PTR_vftable_105b5c24,"func_movelinear");
  (**(code **)*puVar1)(&PTR_vftable_105b5c28,"momentary_door");
  (**(code **)*puVar1)(&PTR_vftable_105b5c2c,"func_water_analog");
  (**(code **)*puVar1)(&PTR_vftable_105b5fd0,"func_occluder");
  (**(code **)*puVar1)(&PTR_vftable_105b6158,"func_reflective_glass");
  (**(code **)*puVar1)(&PTR_vftable_105b64c4,"func_smokevolume");
  (**(code **)*puVar1)(&PTR_vftable_105b6b00,"game_ui");
  (**(code **)*puVar1)(&PTR_vftable_105b7054,"raggib");
  (**(code **)*puVar1)(&PTR_vftable_105b747c,"info_camera_link");
  (**(code **)*puVar1)(&PTR_vftable_105b749c,"info_overlay_accessor");
  (**(code **)*puVar1)(&PTR_vftable_105b7530,"info_remarkable");
  (**(code **)*puVar1)(&PTR_vftable_105b75b0,"info_intermission");
  (**(code **)*puVar1)(&PTR_vftable_105b76a8,"world_items");
  (**(code **)*puVar1)(&PTR_vftable_105b799c,"env_lightglow");
  (**(code **)*puVar1)(&PTR_vftable_105b7bd4,"light");
  (**(code **)*puVar1)(&PTR_vftable_105b7ea8,"light_spot");
  (**(code **)*puVar1)(&PTR_vftable_105b7eac,"light_glspot");
  (**(code **)*puVar1)(&PTR_vftable_105b7eb0,"light_directional");
  (**(code **)*puVar1)(&PTR_vftable_105b7eb4,"light_environment");
  (**(code **)*puVar1)(&PTR_vftable_105b7ed0,"logic_eventlistener");
  (**(code **)*puVar1)(&PTR_vftable_105b8094,"logic_measure_movement");
  (**(code **)*puVar1)(&PTR_vftable_105b84e8,"logic_navigation");
  (**(code **)*puVar1)(&PTR_vftable_105b8670,"logic_playerproxy");
  (**(code **)*puVar1)(&PTR_vftable_105b8834,"logic_random_outputs");
  (**(code **)*puVar1)(&PTR_vftable_105b8cc4,"logic_timescale");
  (**(code **)*puVar1)(&PTR_vftable_105b8dd0,"logic_auto");
  (**(code **)*puVar1)(&PTR_vftable_105b9178,"logic_multicompare");
  (**(code **)*puVar1)(&PTR_vftable_105b9360,"logic_register_activator");
  (**(code **)*puVar1)(&PTR_vftable_105b96ec,"logic_timer");
  (**(code **)*puVar1)(&PTR_vftable_105b9b28,"logic_lineto");
  (**(code **)*puVar1)(&PTR_vftable_105b9c5c,"math_remap");
  (**(code **)*puVar1)(&PTR_vftable_105b9eb8,"math_colorblend");
  (**(code **)*puVar1)(&PTR_vftable_105ba374,"env_global");
  (**(code **)*puVar1)(&PTR_vftable_105ba51c,"multisource");
  (**(code **)*puVar1)(&PTR_vftable_105ba520,"math_counter");
  (**(code **)*puVar1)(&PTR_vftable_105bab04,"logic_case");
  (**(code **)*puVar1)(&PTR_vftable_105bb468,"logic_compare");
  (**(code **)*puVar1)(&PTR_vftable_105bb704,"logic_branch");
  (**(code **)*puVar1)(&PTR_vftable_105bb960,"logic_autosave");
  (**(code **)*puVar1)(&PTR_vftable_105bbb0c,"logic_active_autosave");
  (**(code **)*puVar1)(&PTR_vftable_105bbe94,"logic_collision_pair");
  (**(code **)*puVar1)(&PTR_vftable_105bbe98,"logic_branch_listener");
  (**(code **)*puVar1)(&PTR_vftable_105bc494,"logic_relay");
  (**(code **)*puVar1)(&PTR_vftable_105bc948,"game_score");
  (**(code **)*puVar1)(&PTR_vftable_105bca40,"game_end");
  (**(code **)*puVar1)(&PTR_vftable_105bca44,"game_text");
  (**(code **)*puVar1)(&PTR_vftable_105bce44,"game_zone_player");
  (**(code **)*puVar1)(&PTR_vftable_105bcfb0,"game_player_equip");
  (**(code **)*puVar1)(&PTR_vftable_105bd06c,"game_player_team");
  (**(code **)*puVar1)(&PTR_vftable_105bd088,"material_modify_control");
  (**(code **)*puVar1)(&PTR_vftable_105bd4ac,"point_message");
  (**(code **)*puVar1)(&PTR_vftable_105bd6c4,"func_brush");
  (**(code **)*puVar1)(&PTR_vftable_105bd960,"trigger_brush");
  (**(code **)*puVar1)(&PTR_vftable_105bdbac,"keyframe_track");
  (**(code **)*puVar1)(&PTR_vftable_105bddcc,"move_keyframed");
  (**(code **)*puVar1)(&PTR_vftable_105be1b8,"env_particlelight");
  (**(code **)*puVar1)(&PTR_vftable_105bf700,"info_particle_system");
  (**(code **)*puVar1)(&PTR_vftable_105bf764,"path_corner");
  (**(code **)*puVar1)(&PTR_vftable_105bf768,"path_corner_crash");
  (**(code **)*puVar1)(&PTR_vftable_105bfc78,"path_track");
  (**(code **)*puVar1)(&PTR_vftable_105c0124,"phys_thruster");
  (**(code **)*puVar1)(&PTR_vftable_105c0218,"phys_torque");
  (**(code **)*puVar1)(&PTR_vftable_105c074c,"phys_motor");
  (**(code **)*puVar1)(&PTR_vftable_105c0750,"phys_keepupright");
  (**(code **)*puVar1)(&PTR_vftable_105c0b68,"info_constraint_anchor");
  (**(code **)*puVar1)(&PTR_vftable_105c0c24,"phys_constraintsystem");
  (**(code **)*puVar1)(&PTR_vftable_105c1114,"phys_hinge");
  (**(code **)*puVar1)(&PTR_vftable_105c1118,"phys_ballsocket");
  (**(code **)*puVar1)(&PTR_vftable_105c111c,"phys_slideconstraint");
  (**(code **)*puVar1)(&PTR_vftable_105c124c,"phys_constraint");
  (**(code **)*puVar1)(&PTR_vftable_105c137c,"phys_pulleyconstraint");
  (**(code **)*puVar1)(&PTR_vftable_105c14e8,"phys_lengthconstraint");
  (**(code **)*puVar1)(&PTR_vftable_105c1748,"phys_ragdollconstraint");
  (**(code **)*puVar1)(&PTR_vftable_105c1a38,"phys_bone_follower");
  (**(code **)*puVar1)(&PTR_vftable_105c1b60,"physics_cannister");
  (**(code **)*puVar1)(&PTR_vftable_105c239c,"physics_npc_solver");
  (**(code **)*puVar1)(&PTR_vftable_105c2544,"physics_entity_solver");
  (**(code **)*puVar1)(&PTR_vftable_105c26ec,"physics_prop_ragdoll");
  (**(code **)*puVar1)(&PTR_vftable_105c26f0,"prop_ragdoll");
  (**(code **)*puVar1)(&PTR_vftable_105c4c3c,"prop_ragdoll_attached");
  (**(code **)*puVar1)(&PTR_vftable_105c4e04,"physics_prop_statue");
  (**(code **)*puVar1)(&PTR_vftable_105c53cc,"phys_spring");
  (**(code **)*puVar1)(&PTR_vftable_105c571c,"func_physbox");
  (**(code **)*puVar1)(&PTR_vftable_105c5db0,"env_physexplosion");
  (**(code **)*puVar1)(&PTR_vftable_105c5f98,"env_physimpact");
  (**(code **)*puVar1)(&PTR_vftable_105c6108,"simple_physics_brush");
  (**(code **)*puVar1)(&PTR_vftable_105c610c,"simple_physics_prop");
  (**(code **)*puVar1)(&PTR_vftable_105c6110,"phys_convert");
  (**(code **)*puVar1)(&PTR_vftable_105c6244,"phys_magnet");
  (**(code **)*puVar1)(&PTR_vftable_105c673c,"info_mass_center");
  (**(code **)*puVar1)(&PTR_vftable_105c8330,"spraycan");
  (**(code **)*puVar1)(&PTR_vftable_105c8344,"player_weaponstrip");
  (**(code **)*puVar1)(&PTR_vftable_105c83fc,"player_loadsaved");
  (**(code **)*puVar1)(&PTR_vftable_105c8568,"player_speedmod");
  (**(code **)*puVar1)(&PTR_vftable_105c8634,"player_manager");
  (**(code **)*puVar1)(&PTR_vftable_105c9570,"point_camera");
  (**(code **)*puVar1)(&PTR_vftable_105c9a44,"point_devshot_camera");
  (**(code **)*puVar1)(&PTR_vftable_105c9a60,"point_entity_finder");
  (**(code **)*puVar1)(&PTR_vftable_105c9c60,"point_playermoveconstraint");
  (**(code **)*puVar1)(&PTR_vftable_105ca2d8,"point_spotlight");
  (**(code **)*puVar1)(&PTR_vftable_105ca30c,"point_template");
  (**(code **)*puVar1)(&PTR_vftable_105ca8e4,"point_anglesensor");
  (**(code **)*puVar1)(&PTR_vftable_105cad20,"point_proximity_sensor");
  (**(code **)*puVar1)(&PTR_vftable_105caf38,"point_angularvelocitysensor");
  (**(code **)*puVar1)(&PTR_vftable_105cb3b4,"point_velocitysensor");
  (**(code **)*puVar1)(&PTR_vftable_105cb880,"point_hurt");
  (**(code **)*puVar1)(&PTR_vftable_105cb89c,"point_teleport");
  (**(code **)*puVar1)(&PTR_vftable_105cba20,"postprocess_controller");
  (**(code **)*puVar1)(&PTR_vftable_105cc5b4,"point_enable_motion_fixup");
  (**(code **)*puVar1)(&PTR_vftable_105cc5c0,"prop_physics_multiplayer");
  (**(code **)*puVar1)(&PTR_vftable_105cc6f4,"prop_movable");
  (**(code **)*puVar1)(&PTR_vftable_105cd36c,"dynamic_prop");
  (**(code **)*puVar1)(&PTR_vftable_105cd370,"prop_dynamic");
  (**(code **)*puVar1)(&PTR_vftable_105cd374,"prop_dynamic_override");
  (**(code **)*puVar1)(&PTR_vftable_105cdc28,"prop_dynamic_ornament");
  (**(code **)*puVar1)(&PTR_vftable_105cdd20,"physics_prop");
  (**(code **)*puVar1)(&PTR_vftable_105cdd24,"prop_physics");
  (**(code **)*puVar1)(&PTR_vftable_105cdd28,"prop_physics_override");
  (**(code **)*puVar1)(&PTR_vftable_105cf3c8,"prop_door_rotating");
  (**(code **)*puVar1)(&PTR_vftable_105cf3cc,"prop_sphere");
  (**(code **)*puVar1)(&PTR_vftable_105cf3d0,"func_physbox_multiplayer");
  (**(code **)*puVar1)(&PTR_vftable_105cf544,"prop_physics_respawnable");
  (**(code **)*puVar1)(&PTR_vftable_105cf548,"func_proprrespawnzone");
  (**(code **)*puVar1)(&PTR_vftable_105cf8a4,"game_gib_manager");
  (**(code **)*puVar1)(&PTR_vftable_105cf8c4,"game_ragdoll_manager");
  (**(code **)*puVar1)(&PTR_vftable_105cfb78,"env_ragdoll_boogie");
  (**(code **)*puVar1)(&PTR_vftable_105cfc38,"move_rope");
  (**(code **)*puVar1)(&PTR_vftable_105cfc3c,"keyframe_rope");
  (**(code **)*puVar1)(&PTR_vftable_105d07a0,"logic_choreographed_scene");
  (**(code **)*puVar1)(&PTR_vftable_105d07a4,"scripted_scene");
  (**(code **)*puVar1)(&PTR_vftable_105d1bd8,"instanced_scripted_scene");
  (**(code **)*puVar1)(&PTR_vftable_105d1d88,"scene_manager");
  (**(code **)*puVar1)(&PTR_vftable_105d1d8c,"logic_scene_list_manager");
  (**(code **)*puVar1)(&PTR_vftable_105d3738,"scripted_sequence");
  (**(code **)*puVar1)(&PTR_vftable_105d3a88,"aiscripted_schedule");
  (**(code **)*puVar1)(&PTR_vftable_105d3e9c,"scripted_sentence");
  (**(code **)*puVar1)(&PTR_vftable_105d3f60,"shadow_control");
  (**(code **)*puVar1)(&PTR_vftable_105d45bc,"skybox_swapper");
  (**(code **)*puVar1)(&PTR_vftable_105d4690,"sky_camera");
  (**(code **)*puVar1)(&PTR_vftable_105d4a34,"vgui_slideshow_display");
  (**(code **)*puVar1)(&PTR_vftable_105d4fe8,"soundent");
  (**(code **)*puVar1)(&PTR_vftable_105d53ec,"ai_sound");
  (**(code **)*puVar1)(&PTR_vftable_105d5da8,"env_soundscape_proxy");
  (**(code **)*puVar1)(&PTR_vftable_105d5e28,"env_soundscape");
  (**(code **)*puVar1)(&PTR_vftable_105d622c,"env_soundscape_triggerable");
  (**(code **)*puVar1)(&PTR_vftable_105d6230,"trigger_soundscape");
  (**(code **)*puVar1)(&PTR_vftable_105d6274,"spotlight_end");
  (**(code **)*puVar1)(&PTR_vftable_105d63c8,"env_glow");
  (**(code **)*puVar1)(&PTR_vftable_105d63cc,"env_sprite_clientside");
  (**(code **)*puVar1)(&PTR_vftable_105d6b54,"env_sprite");
  (**(code **)*puVar1)(&PTR_vftable_105d6b5c,"env_sprite_oriented");
  (**(code **)*puVar1)(&PTR_vftable_105d6bb0,"info_null");
  (**(code **)*puVar1)(&PTR_vftable_105d6c30,"info_player_start");
  (**(code **)*puVar1)(&PTR_vftable_105d6c34,"info_landmark");
  (**(code **)*puVar1)(&PTR_vftable_105d7018,"env_sun");
  (**(code **)*puVar1)(&PTR_vftable_105d79c0,"func_tanktrain");
  (**(code **)*puVar1)(&PTR_vftable_105d7a40,"tanktrain_aitarget");
  (**(code **)*puVar1)(&PTR_vftable_105d7ac0,"tanktrain_ai");
  (**(code **)*puVar1)(&PTR_vftable_105d7d64,"team_manager");
  (**(code **)*puVar1)(&PTR_vftable_105d7e7c,"handle_test");
  (**(code **)*puVar1)(&PTR_vftable_105d7e80,"handle_dummy");
  (**(code **)*puVar1)(&PTR_vftable_105d83bc,"func_plat");
  (**(code **)*puVar1)(&PTR_vftable_105d83c0,"func_platrot");
  (**(code **)*puVar1)(&PTR_vftable_105d847c,"func_train");
  (**(code **)*puVar1)(&PTR_vftable_105d9308,"func_tracktrain");
  (**(code **)*puVar1)(&PTR_vftable_105d9310,"func_traincontrols");
  (**(code **)*puVar1)(&PTR_vftable_105d9314,"func_trackchange");
  (**(code **)*puVar1)(&PTR_vftable_105d9628,"func_trackautochange");
  (**(code **)*puVar1)(&PTR_vftable_105d9ca4,"trigger");
  (**(code **)*puVar1)(&PTR_vftable_105d9d28,"trigger_remove");
  (**(code **)*puVar1)(&PTR_vftable_105d9d2c,"trigger_hurt");
  (**(code **)*puVar1)(&PTR_vftable_105d9d30,"trigger_multiple");
  (**(code **)*puVar1)(&PTR_vftable_105d9d34,"trigger_once");
  (**(code **)*puVar1)(&PTR_vftable_105d9d38,"trigger_look");
  (**(code **)*puVar1)(&PTR_vftable_105d9fd4,"trigger_transition");
  (**(code **)*puVar1)(&PTR_vftable_105d9fd8,"trigger_changelevel");
  (**(code **)*puVar1)(&PTR_vftable_105da1fc,"trigger_softbarrier");
  (**(code **)*puVar1)(&PTR_vftable_105da2f0,"trigger_push");
  (**(code **)*puVar1)(&PTR_vftable_105da2f4,"trigger_teleport");
  (**(code **)*puVar1)(&PTR_vftable_105da3e8,"info_teleport_destination");
  (**(code **)*puVar1)(&PTR_vftable_105da4e0,"trigger_togglesave");
  (**(code **)*puVar1)(&PTR_vftable_105da5d8,"trigger_autosave");
  (**(code **)*puVar1)(&PTR_vftable_105da5dc,"trigger_gravity");
  (**(code **)*puVar1)(&PTR_vftable_105da5e0,"ai_changetarget");
  (**(code **)*puVar1)(&PTR_vftable_105da69c,"ai_changehintgroup");
  (**(code **)*puVar1)(&PTR_vftable_105da844,"point_viewcontrol");
  (**(code **)*puVar1)(&PTR_vftable_105db040,"point_viewcontrol_multiplayer");
  (**(code **)*puVar1)(&PTR_vftable_105db2dc,"point_viewproxy");
  (**(code **)*puVar1)(&PTR_vftable_105db808,"trigger_cdaudio");
  (**(code **)*puVar1)(&PTR_vftable_105db80c,"trigger_proximity");
  (**(code **)*puVar1)(&PTR_vftable_105db810,"logic_proximity");
  (**(code **)*puVar1)(&PTR_vftable_105db8cc,"trigger_wind");
  (**(code **)*puVar1)(&PTR_vftable_105dbc90,"trigger_hierarchy");
  (**(code **)*puVar1)(&PTR_vftable_105dbd10,"trigger_impact");
  (**(code **)*puVar1)(&PTR_vftable_105dbefc,"trigger_playermovement");
  (**(code **)*puVar1)(&PTR_vftable_105dc468,"trigger_vphysics_motion");
  (**(code **)*puVar1)(&PTR_vftable_105dc46c,"trigger_serverragdoll");
  (**(code **)*puVar1)(&PTR_vftable_105dc470,"trigger_auto_crouch");
  (**(code **)*puVar1)(&PTR_vftable_105dc6c8,"vgui_screen");
  (**(code **)*puVar1)(&PTR_vftable_105dc6cc,"vgui_screen_team");
  (**(code **)*puVar1)(&PTR_vftable_105dc9f0,"waterbullet");
  (**(code **)*puVar1)(&PTR_vftable_105dca10,"water_lod_control");
  (**(code **)*puVar1)(&PTR_vftable_105dcb60,"hammer_updateignorelist");
  (**(code **)*puVar1)(&PTR_vftable_105dd0b0,"info_game_event_proxy");
  (**(code **)*puVar1)(&PTR_vftable_105dd404,"infodecal");
  (**(code **)*puVar1)(&PTR_vftable_105dd590,"info_projecteddecal");
  (**(code **)*puVar1)(&PTR_vftable_105dd594,"worldspawn");
  (**(code **)*puVar1)(&PTR_vftable_105ddd54,"func_nav_blocker");
  (**(code **)*puVar1)(&PTR_vftable_105dddd0,"func_nav_avoidance_obstacle");
  (**(code **)*puVar1)(&PTR_vftable_105dded8,"env_smoker");
  (**(code **)*puVar1)(&PTR_vftable_105de028,"env_spiller");
  (**(code **)*puVar1)(&PTR_vftable_105de16c,"func_navmesh_zone");
  (**(code **)*puVar1)(&PTR_vftable_105de18c,"ti_player_resource");
  (**(code **)*puVar1)(&PTR_vftable_105de20c,"player");
  (**(code **)*puVar1)(&PTR_vftable_105de22c,"sdk_ragdoll");
  (**(code **)*puVar1)(&PTR_vftable_105de284,"npc_helicopter_circle");
  (**(code **)*puVar1)(&PTR_vftable_105de3fc,"sdk_bot");
  (**(code **)*puVar1)(&PTR_vftable_105de40c,"prop_ballistic_blockade");
  (**(code **)*puVar1)(&PTR_vftable_105de42c,"prop_bomb");
  (**(code **)*puVar1)(&PTR_vftable_105de45c,"prop_fire_extinguisher");
  (**(code **)*puVar1)(&PTR_vftable_105de56c,"prop_propane_tank");
  (**(code **)*puVar1)(&PTR_vftable_105de730,"prop_retrieval_entity");
  (**(code **)*puVar1)(&PTR_vftable_105de744,"prop_vip_retrieval_entity");
  (**(code **)*puVar1)(&PTR_vftable_105de774,"prop_shield_entity");
  (**(code **)*puVar1)(&PTR_vftable_105de90c,"prop_sparetire");
  (**(code **)*puVar1)(&PTR_vftable_105de924,"info_suitcase_spawn");
  (**(code **)*puVar1)(&PTR_vftable_105de9dc,"ti_team_manager");
  (**(code **)*puVar1)(&PTR_vftable_105de9e4,"ti_team_blue");
  (**(code **)*puVar1)(&PTR_vftable_105de9ec,"ti_team_red");
  (**(code **)*puVar1)(&PTR_vftable_105de9f4,"ti_team_unassigned");
  (**(code **)*puVar1)(&PTR_vftable_105dee08,"vote_controller");
  (**(code **)*puVar1)(&PTR_vftable_105deec0,"func_gamezone");
  (**(code **)*puVar1)(&PTR_vftable_105df308,"func_teamclip");
  (**(code **)*puVar1)(&PTR_vftable_105df3a0,"func_speedadjust");
  (**(code **)*puVar1)(&PTR_vftable_105df4f0,"func_stageblocker");
  (**(code **)*puVar1)(&PTR_vftable_105df50c,"func_trafficzone");
  (**(code **)*puVar1)(&PTR_vftable_105df510,"prop_traffic_light");
  (**(code **)*puVar1)(&PTR_vftable_105df514,"info_traffic_controller");
  (**(code **)*puVar1)(&PTR_vftable_105df54c,"inferno");
  (**(code **)*puVar1)(&PTR_vftable_105df6b8,"prop_ignite");
  (**(code **)*puVar1)(&PTR_vftable_105df6bc,"info_dynamic_roadblock");
  (**(code **)*puVar1)(&PTR_vftable_105df6c0,"info_vip_car_spawn");
  (**(code **)*puVar1)(&PTR_vftable_105df6c8,"info_vip_case_goal");
  (**(code **)*puVar1)(&PTR_vftable_105df6cc,"info_vip_car_goal");
  (**(code **)*puVar1)(&PTR_vftable_105df6d0,"info_ct_car_spawn");
  (**(code **)*puVar1)(&PTR_vftable_105df6d4,"info_terrorist_car_spawn");
  (**(code **)*puVar1)(&PTR_vftable_105df6d8,"info_planebomb_truck_spawn");
  (**(code **)*puVar1)(&PTR_vftable_105df6f8,"prop_breakdown");
  (**(code **)*puVar1)(&PTR_vftable_105dfeb0,"point_intro_camera");
  (**(code **)*puVar1)(&PTR_vftable_105dffa8,"point_planning_stage_camera");
  (**(code **)*puVar1)(&PTR_vftable_105dffb0,"point_pusher");
  (**(code **)*puVar1)(&PTR_vftable_105dffb4,"prop_ammo_bag");
  (**(code **)*puVar1)(&PTR_vftable_105dffd4,"prop_ammo_box");
  (**(code **)*puVar1)(&PTR_vftable_105e0214,"prop_rappelpoint");
  (**(code **)*puVar1)(&PTR_vftable_105e0218,"ti_rope_weight");
  (**(code **)*puVar1)(&PTR_vftable_105e021c,"prop_rocket_crate");
  (**(code **)*puVar1)(&PTR_vftable_105e0220,"prop_truck_load");
  (**(code **)*puVar1)(&PTR_vftable_105e0468,"npc_track_plane");
  (**(code **)*puVar1)(&PTR_vftable_105e0470,"large_metal_gib");
  (**(code **)*puVar1)(&PTR_vftable_105e06ec,"npc_track_vehicle");
  (**(code **)*puVar1)(&PTR_vftable_105e0728,"npc_vehicle");
  (**(code **)*puVar1)(&PTR_vftable_105e0748,"dog_entity");
  (**(code **)*puVar1)(&PTR_vftable_105e07e4,"hostage_entity");
  (**(code **)*puVar1)(&PTR_vftable_105e07fc,"info_NPCseat");
  (**(code **)*puVar1)(&PTR_vftable_105e0810,"prop_hostage_suitcase");
  (**(code **)*puVar1)(&PTR_vftable_105e081c,"flashbang_projectile");
  (**(code **)*puVar1)(&PTR_vftable_105e0830,"grenade_projectile");
  (**(code **)*puVar1)(&PTR_vftable_105e0844,"incendiary_projectile");
  (**(code **)*puVar1)(&PTR_vftable_105e0870,"smokegrenade_projectile");
  (**(code **)*puVar1)(&PTR_vftable_105e089c,"teargrenade_projectile");
  (**(code **)*puVar1)(&PTR_vftable_105e126c,"predicted_viewmodel");
  (**(code **)*puVar1)(&PTR_vftable_105e1308,"tacint_gamerules");
  (**(code **)*puVar1)(&PTR_vftable_105e139c,"tistaticglobalsproxy");
  (**(code **)*puVar1)(&PTR_vftable_105e13a8,"vip_entity");
  (**(code **)*puVar1)(&PTR_vftable_105e1cc8,"info_mapinfo");
  (**(code **)*puVar1)(&PTR_vftable_105e1dc0,"info_player_deathmatch");
  (**(code **)*puVar1)(&PTR_vftable_105e1dc4,"info_player_ct");
  (**(code **)*puVar1)(&PTR_vftable_105e1dc8,"info_player_terrorist");
  (**(code **)*puVar1)(&PTR_vftable_105e1dd0,"boat_controllable");
  (**(code **)*puVar1)(&PTR_vftable_105e1dfc,"helicopter_ct");
  (**(code **)*puVar1)(&PTR_vftable_105e1e00,"helicopter_ter");
  (**(code **)*puVar1)(&PTR_vftable_105e1e04,"helicopter_mafia");
  (**(code **)*puVar1)(&PTR_vftable_105e1e08,"helicopter_controllable");
  (**(code **)*puVar1)(&PTR_vftable_105e1f34,"base_controllable");
  (**(code **)*puVar1)(&PTR_vftable_105e1f3c,"car_glass");
  (**(code **)*puVar1)(&PTR_vftable_105e1f58,"phys_controllable");
  (**(code **)*puVar1)(&PTR_vftable_105e2008,"wheeled_controllable");
  (**(code **)*puVar1)(&PTR_vftable_105e2038,"realwheeled_controllable");
  (**(code **)*puVar1)(&PTR_vftable_105e2144,"weapon_ti_base");
  (**(code **)*puVar1)(&PTR_vftable_105e21bc,"weapon_Knife");
  (**(code **)*puVar1)(&PTR_vftable_105e2258,"weapon_gsr1911");
  (**(code **)*puVar1)(&PTR_vftable_105e22f8,"weapon_mr96");
  (**(code **)*puVar1)(&PTR_vftable_105e2398,"weapon_mtx");
  (**(code **)*puVar1)(&PTR_vftable_105e2438,"weapon_p2000");
  (**(code **)*puVar1)(&PTR_vftable_105e24d8,"weapon_p250");
  (**(code **)*puVar1)(&PTR_vftable_105e2578,"weapon_sphinx");
  (**(code **)*puVar1)(&PTR_vftable_105e2618,"weapon_vertec");
  (**(code **)*puVar1)(&PTR_vftable_105e26b8,"weapon_xd45");
  (**(code **)*puVar1)(&PTR_vftable_105e26dc,"prop_breaching_charge");
  (**(code **)*puVar1)(&PTR_vftable_105e26f4,"prop_c4_charge");
  (**(code **)*puVar1)(&PTR_vftable_105e2788,"weapon_c4detonator");
  (**(code **)*puVar1)(&PTR_vftable_105e2828,"weapon_m320");
  (**(code **)*puVar1)(&PTR_vftable_105e283c,"grenade_40mm");
  (**(code **)*puVar1)(&PTR_vftable_105e28e0,"weapon_mg4");
  (**(code **)*puVar1)(&PTR_vftable_105e2980,"weapon_rpg7");
  (**(code **)*puVar1)(&PTR_vftable_105e2994,"rpg_rocket");
  (**(code **)*puVar1)(&PTR_vftable_105e299c,"rpg_cheatrocket");
  (**(code **)*puVar1)(&PTR_vftable_105e2a28,"weapon_ak47");
  (**(code **)*puVar1)(&PTR_vftable_105e2ac8,"weapon_amd65");
  (**(code **)*puVar1)(&PTR_vftable_105e2b68,"weapon_aug");
  (**(code **)*puVar1)(&PTR_vftable_105e2c08,"weapon_dsa58");
  (**(code **)*puVar1)(&PTR_vftable_105e2ca8,"weapon_g36k");
  (**(code **)*puVar1)(&PTR_vftable_105e2d48,"weapon_hk417");
  (**(code **)*puVar1)(&PTR_vftable_105e2de8,"weapon_k1a");
  (**(code **)*puVar1)(&PTR_vftable_105e2e88,"weapon_m1");
  (**(code **)*puVar1)(&PTR_vftable_105e2f28,"weapon_m4");
  (**(code **)*puVar1)(&PTR_vftable_105e2fc8,"weapon_sg551");
  (**(code **)*puVar1)(&PTR_vftable_105e3068,"weapon_bekas");
  (**(code **)*puVar1)(&PTR_vftable_105e3108,"weapon_fp6");
  (**(code **)*puVar1)(&PTR_vftable_105e31a8,"weapon_m4star10");
  (**(code **)*puVar1)(&PTR_vftable_105e3248,"weapon_tgs12");
  (**(code **)*puVar1)(&PTR_vftable_105e32e8,"weapon_mp5");
  (**(code **)*puVar1)(&PTR_vftable_105e3388,"weapon_mp7");
  (**(code **)*puVar1)(&PTR_vftable_105e3428,"weapon_p90");
  (**(code **)*puVar1)(&PTR_vftable_105e34c8,"weapon_pdw");
  (**(code **)*puVar1)(&PTR_vftable_105e3568,"weapon_skorpion");
  (**(code **)*puVar1)(&PTR_vftable_105e3608,"weapon_superv");
  (**(code **)*puVar1)(&PTR_vftable_105e36a8,"weapon_uzi");
  (**(code **)*puVar1)(&PTR_vftable_105e3748,"weapon_as50");
  (**(code **)*puVar1)(&PTR_vftable_105e37e8,"weapon_m14");
  (**(code **)*puVar1)(&PTR_vftable_105e3888,"weapon_spr");
  (**(code **)*puVar1)(&PTR_vftable_105e3928,"weapon_uratio");
  (**(code **)*puVar1)(&PTR_vftable_105e3944,"te_tester");
  (**(code **)*puVar1)(&PTR_vftable_105e3964,"env_particlefire");
  (**(code **)*puVar1)(&PTR_vftable_105e3a38,"env_particlesmokegrenade");
  (**(code **)*puVar1)(&PTR_vftable_105e3bc0,"_plasma");
  (**(code **)*puVar1)(&PTR_vftable_105e3d4c,"env_smoketrail");
  (**(code **)*puVar1)(&PTR_vftable_105e4114,"env_rockettrail");
  (**(code **)*puVar1)(&PTR_vftable_105e44dc,"env_sporetrail");
  (**(code **)*puVar1)(&PTR_vftable_105e46c4,"env_sporeexplosion");
  (**(code **)*puVar1)(&PTR_vftable_105e4a18,"env_fire_trail");
  (**(code **)*puVar1)(&PTR_vftable_105e4a20,"env_dusttrail");
  (**(code **)*puVar1)(&PTR_vftable_105e4de0,"env_smokestack");
  (**(code **)*puVar1)(&PTR_vftable_105e56b0,"env_spritetrail");
  (**(code **)*puVar1)(&PTR_vftable_105e56d0,"env_steam");
  (**(code **)*puVar1)(&PTR_vftable_105e56d4,"env_steamjet");
  (**(code **)*puVar2)("scripts/vgui_screens.txt");
  (**(code **)*puVar3)("#FileOpenDialog_ToolTip_NewFolder");
  (**(code **)*puVar3)("#FileOpenDialog_ToolTip_OpenInExplorerButton");
  (**(code **)*puVar3)("#FileOpenDialog_ToolTip_Up");
  (*pcVar10)("hostname: %s\n",pcVar6);
  (*pcVar10)("players : %i humans, %i bots (%i max) (%s)\n\n",local_10,local_c);
  (*pcVar10)("version : %s/%d %d %s %s %s\n",pcVar6,uVar5,uVar4,pcVar11);
  (*pcVar11)("[RULES] TOTAL ROUNDS: %i PLAYED %i\n",*(undefined4 *)((int)this + 0x90),
  (*pcVar5)("END LIST\n");
  (*pcVar5)("R_LevelInit: Finish");
  (*pcVar5)("g_mastermixlayer:\n");
  (*pcVar6)("%sAll %d values are equal to %d.\n",iVar3,local_c,**(int **)(param_1 + 0x38));
  (*pcVar6)("%sa: %d\n",iVar3,*(undefined4 *)(param_1 + 0x3c));
  (*pcVar6)("%sb: %d\n",iVar3,*(undefined4 *)(param_1 + 0x40));
  (*pcVar6)("%spflt: ",iVar3);
  (*pcVar6)("DSP: Warning, failed to allocate lfo or mdy for chorus.\n");
  (*pcVar8)("CAsyncWavDataCache:  %i .wavs total %s, %.2f %% of capacity\n",uVar1,pcVar6,dVar10);
  (*pcVar9)("[RULES] =====================\nMAX STAGES IS: %i\n",*(undefined4 *)((int)this + 0x80));
  *(char **)(&stack0xffffffe4 + iVar4) = "Precached";
  *(char **)((int)apcStack36 + iVar4 + 8) = "%s\\%s";
  *(char **)((int)puVar24 + -4) = "Fixing player blocking train via gamemovement!\n";
  *(char **)((int)puVar24 + -4) = "Fixing player blocking train!\n";
  *(char **)((int)this + 0x1c) = "inpacket.message";
  *(char **)(*(int *)((int)this + 0x428) + 0x2a8) = "Condensed_Smaller";
  *(char **)(*piVar1 + iVar3 * 0x10) = "defaultSelectionBG2Color_override";
  *(char **)(*piVar1 + iVar3 * 0x10) = "disabledBgColor_override";
  *(char **)(*piVar1 + iVar3 * 0x10) = "disabledFgColor_override";
  *(char **)(*piVar1 + iVar3 * 0x10) = "selectionColor_override";
  *(char **)(*piVar1 + iVar3 * 0x10) = "selectionTextColor_override";
  *(char **)(*piVar5 + iVar2 * 0x10) = "infocus_bgcolor_override";
  *(char **)(*piVar5 + iVar2 * 0x10) = "outoffocus_bgcolor_override";
  *(char **)(*piVar5 + iVar2 * 0x10) = "titlebarbgcolor_override";
  *(char **)(*piVar5 + iVar2 * 0x10) = "titlebardisabledbgcolor_override";
  *(char **)(*piVar5 + iVar2 * 0x10) = "titlebardisabledfgcolor_override";
  *(char **)(*piVar5 + iVar2 * 0x10) = "titlebarfgcolor_override";
  *(char **)(*this + iVar1 * 0x10) = "armedBgColor_override";
  *(char **)(*this + iVar1 * 0x10) = "armedFgColor_override";
  *(char **)(*this + iVar1 * 0x10) = "blinkFgColor_override";
  *(char **)(*this + iVar1 * 0x10) = "defaultBgColor_override";
  *(char **)(*this + iVar1 * 0x10) = "defaultFgColor_override";
  *(char **)(*this + iVar1 * 0x10) = "depressedBgColor_override";
  *(char **)(*this + iVar1 * 0x10) = "depressedFgColor_override";
  *(char **)(*this + iVar1 * 0x10) = "disabledFgColor1_override";
  *(char **)(*this + iVar1 * 0x10) = "disabledFgColor2_override";
  *(char **)(*this + iVar1 * 0x10) = "keyboardFocusColor_override";
  *(char **)(*this_00 + iVar1 * 0x10) = "drawcolor_override";
  *(char **)(*this_00 + iVar1 * 0x10) = "fillcolor_override";
  *(char **)(*this_00 + iVar2 * 0x10) = "selectedcolor";
  *(char **)(*this_00 + iVar2 * 0x10) = "unselectedcolor";
  *(char **)(*this_00 + iVar3 * 0x10) = "bgcolor_override";
  *(char **)(*this_00 + iVar3 * 0x10) = "fgcolor_override";
  *(char **)(local_104 + iVar4 + -0x14) = "DEFAULT_WRITE_PATH";
  *(char **)(local_104 + iVar4 + -0x18) = "cubemap_screenshots";
  *(char **)(local_104 + iVar4 + -0x18) = "cubemap_screenshots/%s";
  *(char **)(param_1 + 0x348) = "**empty**";
  *(char **)(param_1 + 0x5c) = "**displacement**";
  *(char **)(param_1 + 0x62c) = "DEFAULT";
  *(char **)(puVar10 + -8) = "viewmodel";
  *(char **)(puVar6 + -8) = "AppFramework : Unable to load module %s!\n";
  *(char **)(puVar7 + -8) = "AppFramework : Unable to load module %s!\n";
  *(char **)(puVar9 + -8) = "baseanimating";
  *(char **)(this + 8) = "MainThread";
  *param_2 = "vgui_screen";
  *this_00 = "CDeltaCalculator->m_bfFromState";
  *this_01 = "CDeltaCalculator->m_bfToState";
  BVar1 = GetModuleHandleExW(0,L"mscoree.dll",&local_8);
  COM_TimestampedLog("    Model Loading time GetVCollide %.4f -async",DAT_105fb5a8);
  COM_TimestampedLog("    Model Loading time GetVCollide %.4f -sync",DAT_105fb5a0);
  COM_TimestampedLog("    Model Loading time GetVirtualModel %.4f",DAT_105fb5b0);
  COM_TimestampedLog("    Model loading time Mod_GetModelMaterials only %.4f",DAT_105fb5b8);
  COM_TimestampedLog("  CM_LoadMap");
  COM_TimestampedLog("  CollisionBSPData_LoadAreaPortals");
  COM_TimestampedLog("  CollisionBSPData_LoadAreas");
  COM_TimestampedLog("  CollisionBSPData_LoadBrushSides");
  COM_TimestampedLog("  CollisionBSPData_LoadBrushes");
  COM_TimestampedLog("  CollisionBSPData_LoadDispInfo");
  COM_TimestampedLog("  CollisionBSPData_LoadEntityString");
  COM_TimestampedLog("  CollisionBSPData_LoadFakeEntityString");
  COM_TimestampedLog("  CollisionBSPData_LoadLeafBrushes");
  COM_TimestampedLog("  CollisionBSPData_LoadLeafs");
  COM_TimestampedLog("  CollisionBSPData_LoadPhysics");
  COM_TimestampedLog("  CollisionBSPData_LoadPlanes");
  COM_TimestampedLog("  CollisionBSPData_LoadSubmodels");
  COM_TimestampedLog("  CollisionBSPData_LoadTexinfo");
  COM_TimestampedLog("  CollisionBSPData_LoadTextures");
  COM_TimestampedLog("  CollisionBSPData_LoadVisibility");
  COM_TimestampedLog("  LUMP_AREAPORTALS");
  COM_TimestampedLog("  LUMP_AREAS");
  COM_TimestampedLog("  LUMP_CLIPPORTALVERTS");
  COM_TimestampedLog("  Map_CheckForHDR");
  COM_TimestampedLog("  Map_SetRenderInfoAllocated");
  COM_TimestampedLog("  Map_VisClear");
  COM_TimestampedLog("  Mod_LoadCubemapSamples");
  COM_TimestampedLog("  Mod_LoadEdges");
  COM_TimestampedLog("  Mod_LoadFaces");
  COM_TimestampedLog("  Mod_LoadGameLumpDict");
  COM_TimestampedLog("  Mod_LoadLeafMinDistToWater");
  COM_TimestampedLog("  Mod_LoadLeafWaterData");
  COM_TimestampedLog("  Mod_LoadLeafs");
  COM_TimestampedLog("  Mod_LoadLighting");
  COM_TimestampedLog("  Mod_LoadMarksurfaces");
  COM_TimestampedLog("  Mod_LoadNodes");
  COM_TimestampedLog("  Mod_LoadOcclusion");
  COM_TimestampedLog("  Mod_LoadPlanes");
  COM_TimestampedLog("  Mod_LoadPrimIndices");
  COM_TimestampedLog("  Mod_LoadPrimVerts");
  COM_TimestampedLog("  Mod_LoadPrimitives");
  COM_TimestampedLog("  Mod_LoadSubmodels");
  COM_TimestampedLog("  Mod_LoadSurfedges");
  COM_TimestampedLog("  Mod_LoadTexdata");
  COM_TimestampedLog("  Mod_LoadTexinfo");
  COM_TimestampedLog("  Mod_LoadVertNormalIndices");
  COM_TimestampedLog("  Mod_LoadVertNormals");
  COM_TimestampedLog("  Mod_LoadVertices");
  COM_TimestampedLog("  Mod_LoadWorldlights");
  COM_TimestampedLog("  Model Loading time meshes %.4f");
  COM_TimestampedLog("  Model Loading time sprites %.4f",DAT_105fb598);
  COM_TimestampedLog("  Model Loading time studio %.4f",DAT_105fb580);
  COM_TimestampedLog("  Model Loading time world %.4f",DAT_105fb590);
  COM_TimestampedLog("  OverlayMgr()->LoadOverlays");
  COM_TimestampedLog("  RecomputeSurfaceFlags");
  COM_TimestampedLog("  SetupSubModels");
  COM_TimestampedLog(" CBaseClient::ProcessCreateStringTable(%s)",*(undefined4 *)(param_1 + 0x10));
  COM_TimestampedLog(" CBaseClient::ProcessCreateStringTable(%s)-done",
  COM_TimestampedLog(" CBaseClient::ProcessServerInfo");
  COM_TimestampedLog(" CBaseClient::SendServerInfo: %s  :  %d",uVar3);
  COM_TimestampedLog(" CBaseClient::SendSignonData");
  COM_TimestampedLog("*** Map Load Complete");
  COM_TimestampedLog("*** Map Load: %s",param_1,pcVar5);
  COM_TimestampedLog("ActivateGameUI()");
  COM_TimestampedLog("AttachToWindow");
  COM_TimestampedLog("Building Panels (Engine Tools)");
  COM_TimestampedLog("Building Panels (FocusOverlayPanel)");
  COM_TimestampedLog("Building Panels (console, entity report, drawtree, texturelist, vprof)");
  COM_TimestampedLog("Building Panels (staticClientDLLPanel)");
  COM_TimestampedLog("Building Panels (staticClientDLLToolsPanel)");
  COM_TimestampedLog("Building Panels (staticDebugSystemPanel)");
  COM_TimestampedLog("Building Panels (staticGameDLLPanel)");
  COM_TimestampedLog("Building Panels (staticGameUIBackgroundPanel)");
  COM_TimestampedLog("Building Panels (staticGameUIPanel)");
  COM_TimestampedLog("Building Panels (staticPanel)");
  COM_TimestampedLog("Building Panels (staticTransitionPanel)");
  COM_TimestampedLog("CBaseClient::ActivatePlayer");
  COM_TimestampedLog("CBaseClient::Connect");
  COM_TimestampedLog("CBaseClient::ProcessSignonStateMsg: %s  :  %d",uVar3);
  COM_TimestampedLog("CBaseClient::SpawnPlayer");
  COM_TimestampedLog("CBaseClientState::FullConnect");
  COM_TimestampedLog("CBaseModPanel::OnGameUIActivated()");
  COM_TimestampedLog("CBaseServer::ConnectClient");
  COM_TimestampedLog("CClientState::SetSignonState: end %i",param_1);
  COM_TimestampedLog("CClientState::SetSignonState: start %i",param_1);
  COM_TimestampedLog("CGameClient::ActivatePlayer -end");
  COM_TimestampedLog("CGameClient::ActivatePlayer -start");
  COM_TimestampedLog("CModAppSystemGroup::Create() - Start");
  COM_TimestampedLog("CResponseSystem::LoadFromBuffer [%s] - Finish",param_1);
  COM_TimestampedLog("CResponseSystem::LoadFromBuffer [%s] - Start",param_1);
  COM_TimestampedLog("CSourceAppSystemGroup::Create()");
  COM_TimestampedLog("CStaticPropMgr::PrecacheLighting - end");
  COM_TimestampedLog("CStaticPropMgr::PrecacheLighting - start");
  COM_TimestampedLog("CVideoMode_Common::Init  CreateGameWindow");
  COM_TimestampedLog("CVideoMode_Common::Init  SetupStartupGraphic");
  COM_TimestampedLog("CWorld::Precache - Finish");
  COM_TimestampedLog("CWorld::Precache - Start");
  COM_TimestampedLog("ClientDLL factories - Start");
  COM_TimestampedLog("ClientDLL_InitRecvTableMgr");
  COM_TimestampedLog("ClientPrecache()");
  COM_TimestampedLog("ConnectTier1/2/3Libraries - Start");
  COM_TimestampedLog("CreateGameWindow - Start");
  COM_TimestampedLog("Finished UnserializeModelDict\n");
  COM_TimestampedLog("Host_FreeToLowMark");
  COM_TimestampedLog("Host_NewGame");
  COM_TimestampedLog("Host_ReadPreStartupConfiguration - Start");
  COM_TimestampedLog("IGameSystem::LevelInitPreEntityAllSystems");
  COM_TimestampedLog("IGameSystem::PostInitAllSystems - Finish");
  COM_TimestampedLog("IGameSystem::PostInitAllSystems - Start");
  COM_TimestampedLog("InitializeEntityDLLFields");
  COM_TimestampedLog("Install bug reporter");
  COM_TimestampedLog("Install perf tools");
  COM_TimestampedLog("LevelInitPreEntity - CacheUsedMaterials - Finish");
  COM_TimestampedLog("LevelInitPreEntity - CacheUsedMaterials - Start");
  COM_TimestampedLog("LevelInitPreEntity - PreCache - Finish");
  COM_TimestampedLog("LevelInitPreEntity - PreCache - Start");
  COM_TimestampedLog("LightStyles");
  COM_TimestampedLog("Load Scheme File");
  COM_TimestampedLog("Map_LoadModel: Finish - loading took %.4f seconds",
  COM_TimestampedLog("ModInit");
  COM_TimestampedLog("Model Loading time %.4f",DAT_105fb578);
  COM_TimestampedLog("Precache brush models");
  COM_TimestampedLog("Precache world model (%s)",local_170);
  COM_TimestampedLog("PrecacheStandardParticleSystems()");
  COM_TimestampedLog("PrecacheTempEnts()");
  COM_TimestampedLog("R_LevelInit: Start");
  COM_TimestampedLog("Return to Lobby");
  COM_TimestampedLog("SENTENCEG_Init()");
  COM_TimestampedLog("SV_ActivateServer");
  COM_TimestampedLog("SV_ActivateServer(finished)");
  COM_TimestampedLog("SV_AllocateEdicts");
  COM_TimestampedLog("SV_ClearWorld");
  COM_TimestampedLog("SV_CreateBaseline");
  COM_TimestampedLog("SV_CreateNetworkStringTables");
  COM_TimestampedLog("SV_InitGameDLL");
  COM_TimestampedLog("SV_SpawnServer -- Finished");
  COM_TimestampedLog("SV_SpawnServer(%s)",param_1);
  COM_TimestampedLog("Send Reconnects");
  COM_TimestampedLog("SendConnectPacket");
  COM_TimestampedLog("Set up players");
  COM_TimestampedLog("Set up players(done)");
  COM_TimestampedLog("Sound Loading time %.4f",DAT_10446878);
  COM_TimestampedLog("Starting UnserializeModelDict for %d models\n",local_c);
  COM_TimestampedLog("StaticPropMgr()->LevelShutdown()");
  COM_TimestampedLog("W_Precache()");
  COM_TimestampedLog("framesnapshotmanager->LevelChanged()");
  COM_TimestampedLog("g_ClientDLL->Init");
  COM_TimestampedLog("g_pGameRules->CreateStandardEntities()");
  COM_TimestampedLog("g_pServerPluginHandler->ClientActive");
  COM_TimestampedLog("g_pServerPluginHandler->ClientSettingsChanged");
  COM_TimestampedLog("g_pVGuiLocalize->AddFile");
  COM_TimestampedLog("game->Init");
  COM_TimestampedLog("ivgui()->Start()");
  COM_TimestampedLog("materials->CacheUsedMaterials()");
  COM_TimestampedLog("modelloader->GetModelForName(%s) -- Finished",local_170);
  COM_TimestampedLog("modelloader->GetModelForName(%s) -- Start",local_170);
  COM_TimestampedLog("serverGameDLL->ServerActivate");
  COM_TimestampedLog("staticGameUIFuncs->Initialize");
  COM_TimestampedLog("staticGameUIFuncs->Start");
  COM_TimestampedLog("sv.Clear()");
  CThread::SetName((CThread *)param_1,"QueuedPacketSender");
  CVProfNode::CVProfNode((CVProfNode *)(this + 0x1018),"Root",0,(CVProfNode *)0x0,"Unaccounted",0);
  CVProfile::EnterScope((CVProfile *)g_VProfCurrentProfile_exref,pcVar4,1,"Unaccounted",false,0);
  CVProfile::FindOrCreateCounter((CVProfile *)g_VProfCurrentProfile_exref,"reacquire_resources",1);
  CVProfile::OutputReport((CVProfile *)g_VProfCurrentProfile_exref,-0x205,"AINet",-1);
  CVProfile::OutputReport((CVProfile *)g_VProfCurrentProfile_exref,-0x205,"AINet",iVar1);
  CVProfile::OutputReport((CVProfile *)g_VProfCurrentProfile_exref,-0x205,"Host_NewGame",-1);
  CVProfile::OutputReport((CVProfile *)g_VProfCurrentProfile_exref,-0x207,"NPCs",-1);
  CVProfile::OutputReport((CVProfile *)g_VProfCurrentProfile_exref,-0x207,"NPCs",iVar3);
  ConColorMsg((Color *)&DAT_106a8e20,"GAME INSTRUCTOR: ");
  ConColorMsg((Color *)&DAT_106a8e24,"Open lessons...\n");
  ConColorMsg((Color *)&local_8," %d connections\n",*(undefined4 *)(param_1 + 0x38));
  ConColorMsg((Color *)&local_8,"::CLIENT::Applying Attributes for player: %s\n",puVar1);
  ConColorMsg((Color *)&local_8,"::SERVER::Applying Attributes for player: %s\n",uVar2);
  ConColorMsg((Color *)&local_8,"Bug submission succeeded for bug (%i)\n",param_1);
  ConColorMsg((Color *)&local_8,"RememberIPAddressForLobby: lobby %llx from address %s\n",param_1,
  ConColorMsg((Color *)&local_8,"SteamSocketMgr Status\n");
  ConDMsg("Committing AutoSaveDangerous...\n");
  ConDMsg("Heap: %5.2f Mb\n");
  ConDMsg("Initializing renderer...\n");
  ConDMsg("Missing end tag in demo file.\n");
  ConDMsg("Saving game to %s...\n",local_27c);
  ConMsg("  %i/%i items\n",uVar1);
  ConMsg(" done.\n");
  ConMsg("%-80s\n",local_103c);
  ConMsg("%5.2f MB: total\n",SUB84((double)local_8,0),(int)((ulonglong)(double)local_8 >> 0x20));
  ConMsg("%f seconds (%f fps)\n",(double)local_c._4_4_,(double)(128.0 / local_c._4_4_),uVar1);
  ConMsg("%i frames %5.3f seconds %5.2f fps (%5.2f ms/f) %5.3f fps variability\n",iVar7,
  ConMsg("%s",*(undefined4 *)(param_1 + 0x10));
  ConMsg("%s",local_81c);
  ConMsg("- Config: %s, %s, %i connections\n",pcVar15);
  ConMsg("- Ports: ");
  ConMsg("--- TacticalTV Status ---\n");
  ConMsg("------------------\n");
  ConMsg("Banning %s for rcon hacking attempts\n",pcVar7);
  ConMsg("CBaseClientState::FileDenied: %s.\n",param_1);
  ConMsg("CBaseClientState::FileReceived: %s.\n",param_1);
  ConMsg("CDemoFile::Open: couldn\'t open file %s for %s.\n",param_1,pcVar4);
  ConMsg("CPU   In    Out   Uptime  Users   FPS    Players\n%s\n",local_204);
  ConMsg("Can\'t \'users\', not running a server\n",param_1);
  ConMsg("Can\'t load bsppack.dll\n");
  ConMsg("Can\'t load vtex_dll.dll\n");
  ConMsg("Can\'t retry, no previous connection\n");
  ConMsg("Clock speed: %.0f Mhz\n",
  ConMsg("Commencing TacticalTV connection retry to %s\n",puVar2);
  ConMsg("Connection lost: %s.\n",pcVar1);
  ConMsg("Couldn\'t dispatch user message (%i)\n",*(undefined4 *)(param_1 + 0x10));
  ConMsg("Couldn\'t open %s\n",local_10c);
  ConMsg("CreateFragmentsFromFile: couldn\'t open \'%s\'.\n",piVar1);
  ConMsg("Default weight : %0.5f\n",SUB84((double)fVar1,0),(int)((ulonglong)(double)fVar1 >> 0x20));
  ConMsg("Disconnect: %s.\n",pcVar1);
  ConMsg("Displacement list:\n");
  ConMsg("Downloading file \'%s\' from client %s failed.\n",param_1,uVar1);
  ConMsg("ERROR: CBaseDemoAction::NameForTimingType type %i out of range\n",param_1);
  ConMsg("ERROR: CBaseDemoAction::NameForType type %i out of range\n",param_1);
  ConMsg("Engine Build: %s %s Build Number: %i\n","14:42:54",&DAT_1035ac38,uVar3);
  ConMsg("Engine Version: %s (%s)\n",pcVar2,pcVar1);
  ConMsg("Error, bad server command %s (InsertServerCommand)\n",param_1);
  ConMsg("Error, bad server command %s\n",param_1);
  ConMsg("File \'%s\' requested from %s.\n",param_1,uVar1);
  ConMsg("File \'%s\' sent.\n",param_1);
  ConMsg("Forcing client reconnect (%i)\n",param_1[0x68]);
  ConMsg("Game Time %s, Mod \"%s\", Map \"%s\", Players %i\n",puVar3,pcVar7,uVar11);
  ConMsg("Heap Used:\n");
  ConMsg("Host_EndGame: %s\n",local_404);
  ConMsg("Loading game from %s...\n",local_124);
  ConMsg("Loading game from %s...\n",local_214);
  ConMsg("Local IP %s:%i, KB/sec In %.1f, Out %.1f\n",pcVar7,uVar5);
  ConMsg("Local Slots %i, Spectators %i, Proxies %i\n",local_10,local_8 - local_14,local_14,piVar4,
  ConMsg("Luxel Value: %d %d %d\n",uVar1,uVar2,uVar3);
  ConMsg("Malformed fragment ofs %i len %d, buffer size %d from %s\n",local_10,local_14,uVar8,pcVar7
  ConMsg("Models:\n");
  ConMsg("Net status for host %s:\n");
  ConMsg("No # necessary\n");
  ConMsg("Online %s, FPS %.1f, Version %i (%s)\n",puVar3);
  ConMsg("Precache table \'%s\' not found.\n");
  ConMsg("Received signon %i when at %i\n",param_1,*(undefined4 *)((int)this + 0x68));
  ConMsg("Recomputing clock speed...\n");
  ConMsg("Recording TacticalTV demo to %s...\n",param_1);
  ConMsg("Sent file \'%s\' to client %s.\n",param_1,uVar1);
  ConMsg("Smoothing demo from %s ...",local_108);
  ConMsg("Table %s\n",uVar1);
  ConMsg("TacticalTV not active.\n");
  ConMsg("Total Slots %i, Spectators %i, Proxies %i\n",local_10,local_8 - local_14,local_14);
  ConMsg("Total displacements: %d\nCollision stats: %d with physics, %d with hull, %d with ray.\n",
  ConMsg("Unable to change level!\n");
  ConMsg("Unable to find a valid incremental demo filename for %s, try clearing the directory of %snnn.dem\n"
  ConMsg("Usage:  removeid < userid | uniqueid >\n");
  ConMsg("Usage: buildcubemaps [numBounces]\n");
  ConMsg("User not in server.\n");
  ConMsg("Weight 0       : %0.5f\n",SUB84((double)fVar1,0),(int)((ulonglong)(double)fVar1 >> 0x20));
  ConMsg("Weight 1       : %0.5f\n",SUB84((double)fVar1,0),(int)((ulonglong)(double)fVar1 >> 0x20));
  ConMsg("Weight 2       : %0.5f\n",SUB84((double)fVar1,0),(int)((ulonglong)(double)fVar1 >> 0x20));
  ConMsg("Weight 3       : %0.5f\n",SUB84((double)fVar1,0),(int)((ulonglong)(double)fVar1 >> 0x20));
  ConMsg("Writing %s.\n",local_10c);
  ConMsg("Writing memory stats to file memstats.txt\n");
  ConMsg("\"%s\" isn\'t a valid key\n",puVar4);
  ConMsg("\"maxplayers\" is \"%u\"\n",uVar2);
  ConMsg("\n!!!\n\nStuffCmd:  Some entity tried to stuff \'%s\' to console buffer of entity %i when maxclients was set to %i, ignoring\n\n"
  ConMsg("\nHunk Memory Used:\n");
  ConMsg("\nVideo Memory Used:\n");
  ConMsg("failed to load tools from %s\n",param_1);
  ConMsg("hit material \"%s\"\n",uVar2);
  ConMsg("logaddress_add:  %s is already in the list\n",pcVar3);
  ConMsg("logaddress_del:  address %s not found in the list\n",pcVar3);
  ConMsg("logaddress_delall:  no addresses in the list\n");
  ConMsg("maxplayers set to %i\n",iVar1);
  ConMsg("record %s: invalid path.\n",param_1);
  ConMsg("removeallids:  filter removed for %u user IDs\n",uVar1);
  ConMsg("tried to DLL_FadeClientVolume a non-client\n");
  ConMsg("tried to sprint to a non-client\n");
  ConMsg("userid \"%d\" not found\n",param_1);
  DAT_00448d60 = CreateFileW(L"CONOUT$",0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);
  DAT_00449f08 = CreateMutexA((LPSECURITY_ATTRIBUTES)0x0,0,"tacint_singleton_mutex");
  DAT_10034580 = CreateFileW(L"CONOUT$",0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);
  DAT_10047b00 = CreateFileW(L"CONOUT$",0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);
  DAT_100483c4 = FUN_100089e0(DAT_100483bc,(byte *)"General",(undefined *)0x0,0,0,iVar1);
  DAT_100483cc = FUN_100089e0(DAT_100483bc,(byte *)"Assert",(undefined *)0x0,0,0,iVar1);
  DAT_100483d0 = FUN_100089e0(DAT_100483bc,(byte *)"DeveloperVerbose",&LAB_10008c20,1,3,-0x3f7f40);
  DAT_100483d0 = FUN_100089e0(DAT_100483bc,(byte *)"DeveloperVerbose",FUN_10008c20,1,3,-0x3f7f40);
  DAT_100483d4 = FUN_100089e0(DAT_100483bc,(byte *)"DeveloperConsole",FUN_10008bf0,1,3,iVar1);
  DAT_100483d8 = FUN_100089e0(DAT_100483bc,(byte *)"Console",FUN_10008be0,1,3,iVar1);
  DAT_100483dc = FUN_100089e0(DAT_100483bc,(byte *)"Developer",FUN_10008c10,1,3,iVar1);
  DAT_1041f0d0 = CreateFileW(L"CONOUT$",0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);
  DAT_104c2ea8 = LoggingSystem_RegisterLoggingChannel("SndOperators",FUN_1006e5b0,1,0,DAT_104c2ea4);
  DAT_104e3350 = (HMODULE)(**(code **)(*DAT_10681754 + 0x74))(puVar1,"EXECUTABLE_PATH",0);
  DAT_104e3364 = (*DAT_104e3348)("ClientRenderTargets001",0);
  DAT_104f3614 = LoggingSystem_RegisterLoggingChannel("Console",0,0,0,DAT_104f3610);
  DAT_105e8810 = CreateFileW(L"CONOUT$",0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);
  DAT_105f75fc = FUN_100ed440("debug/debugwireframe","Other textures",'\0');
  DAT_105f7600 = FUN_100ed440("debug/debugtranslucentsinglecolor","Other textures",'\0');
  DAT_105f7604 = FUN_100ed440("debug/debugtranslucentvertexcolor","Other textures",'\0');
  DAT_105f7608 = FUN_100ed440("debug/debugworldwireframe","Other textures",'\0');
  DAT_105f760c = FUN_100ed440("debug/debugworldwireframezbuffer","Other textures",'\0');
  DAT_105f7610 = FUN_100ed440("debug/debugbrushwireframe","Other textures",'\0');
  DAT_105f7614 = FUN_100ed440("debug/debugdecalwireframe","Other textures",'\0');
  DAT_105f7618 = FUN_100ed440("debug/debuglightmap","Other textures",'\0');
  DAT_105f761c = FUN_100ed440("debug/debuglightmapzbuffer","Other textures",'\0');
  DAT_105f7620 = FUN_100ed440("debug/debugluxels","Other textures",'\0');
  DAT_105f7624 = FUN_100ed440("debug/debugleafviswireframe","Other textures",'\0');
  DAT_105f7628 = FUN_100ed440("debug/debugwireframevertexcolor","Other textures",'\0');
  DAT_105f762c = FUN_100ed440("debug/debugwireframevertexcolorignorez","Other textures",'\0');
  DAT_105f7630 = FUN_100ed440("engine/lightsprite","Other textures",'\0');
  DAT_105f7634 = FUN_100ed440("engine/shadowbuild","Other textures",'\0');
  DAT_105f7638 = FUN_100ed440("debug/debugmrmwireframe","Other textures",'\0');
  DAT_105f763c = FUN_100ed440("engine/writez","Other textures",'\0');
  DAT_105f764c = FUN_100ed440("debug/debugambientcube","Other textures",'\0');
  DAT_105f7650 = FUN_100ed440("debug/debugdrawflattriangles","Other textures",'\0');
  DAT_105f7654 = (int *)(**(code **)(*DAT_106cb7f8 + 500))("__DepthWrite00","Other textures",puVar3)
  DAT_105f7658 = (int *)(**(code **)(*DAT_106cb7f8 + 500))("__DepthWrite01","Other textures",puVar3)
  DAT_105fa798 = FUN_100ed440("debug/debugempty","Other textures",'\0');
  DAT_1064135c = FUN_10212cf0(DAT_10641358 << 4,"edicts",'\x01');
  DAT_10641360 = FUN_10212cf0(DAT_10641358 << 2,"edictchangeinfo",'\x01');
  DAT_10645928 = (**(code **)(*DAT_106a5e70 + 0x44))("developer");
  DAT_1064600c = (**(code **)(*DAT_10646008 + 4))("VguiScreen",0x100,0,0,0);
  DAT_10646010 = (**(code **)(*DAT_10646008 + 4))("Scenes",0x2000,0,0,1);
  DAT_106466f8 = (int *)(**(code **)(*DAT_10646008 + 4))("ParticleEffectNames",0x400,0,0,1);
  DAT_106466fc = (int *)(**(code **)(*DAT_10646008 + 4))("EffectDispatch",0x400,0,0,0);
  DAT_10646700 = (int *)(**(code **)(*DAT_10646008 + 4))("Materials",0x400,0,0,1);
  DAT_10646ab0 = (**(code **)(*DAT_10646008 + 4))("GameRulesCreation",1,0,0,0);
  DAT_106732cc = (**(code **)(*DAT_106a5e70 + 0x44))("closecaption");
  DAT_1067e248 = LoggingSystem_RegisterLoggingChannel("VScript",0,1,1,DAT_1067e244);
  DAT_10680b44 = LoggingSystem_RegisterLoggingChannel("DownloadManager",0,0,0,DAT_10680af0);
  DAT_10693b1c = LoggingSystem_RegisterLoggingChannel("TIRules",&LAB_10315260,1,0,0xff800a0a);
  DAT_10693b1c = LoggingSystem_RegisterLoggingChannel("TIRules",FUN_10315260,1,0,0xff800a0a);
  DAT_10693b20 = LoggingSystem_RegisterLoggingChannel("TIRulesDebug",&LAB_10315240,1,0,0xffff3232);
  DAT_10693b20 = LoggingSystem_RegisterLoggingChannel("TIRulesDebug",FUN_10315240,1,0,0xffff3232);
  DAT_10694ff4 = (**(code **)(*DAT_10646008 + 4))("StaticGlobalsCreation",1,0,0,0);
  DAT_106a92f4 = LoggingSystem_RegisterLoggingChannel("StaticPropManager",0,0,3,DAT_106a9218);
  DAT_106ac578 = LoggingSystem_RegisterLoggingChannel("ServerLog",0,2,0,DAT_106abf40);
  DAT_106ac778 = (*pcVar4)("Hammer001",0);
  DAT_106ad118 = (*pcVar3)("VENGINEUNICODE001",0);
  DAT_106afa38 = (int *)(*pcVar1)("GameUI011",0);
  DAT_106afa3c = (int *)(*(code *)param_1[0x16])("GameConsole004",0);
  DAT_106b92e4 = "LIFE_DURATION";
  DAT_106c6d2c = FUN_1042f270(param_1,(uint *)"squad",0);
  DAT_106cb7b8 = (int *)(*DAT_106abaa8)("SourceVirtualReality001",0);
  DAT_106fdee0 = CreateFileW(L"CONOUT$",0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);
  DAT_10730cc4 = (*(code *)param_1)("VEngineClient015",0);
  DAT_10730cf0 = (*(code *)param_1)("IEngineSoundClient003",0,ppuVar4,uVar5,uVar6,uVar7,ppuVar8,
  DAT_10730cfc = (*(code *)param_1)("VENGINE_GAMEUIFUNCS_VERSION005",0);
  DAT_1076e240 = (**(code **)(*DAT_107c09d0 + 0x44))("tv_transmitall");
  DAT_1076e244 = (**(code **)(*piVar3 + 0xc))("CenterPrintText",1);
  DAT_1077e77c = (**(code **)(*DAT_107c09d0 + 0x44))("closecaption");
  DAT_107827c4 = (**(code **)(*param_2 + 0x2c))("$C0_X",(int)&uStack8 + 3,0);
  DAT_10782824 = (**(code **)(*param_2 + 0x2c))("$bloomexp",(int)&uStack8 + 3,0);
  DAT_10792998 = LoggingSystem_RegisterLoggingChannel("VScript",0,1,1,DAT_10792994);
  DAT_10795bd0 = (int *)(*(code *)param_1)("VEngineVGui001",0);
  DAT_10795bf4 = (*(code *)param_1)("GameClientExports001",0);
  DAT_107d48ac = "LIFE_DURATION";
  DAT_10833d70 = VoidFnPtrLookup_Tier0((byte *)"Kernel32.dll","TryEnterCriticalSection");
  DAT_10833e18 = "CTSList";
  DAT_10833e18 = "CTSQueue";
  DName::operator__((DName *)&local_c,") ");
  DName::operator__(param_1,"{for ");
  DevMsg("     clientname: %s\n",param_1 + 0x218);
  DevMsg("     demofilestamp: %s\n",param_1 + 0x104,puVar2);
  DevMsg("     demoprotocol (should be %i): %i\n",4,*(undefined4 *)(param_1 + 0x10c));
  DevMsg("     gamedirectory: %s\n",param_1 + 0x420);
  DevMsg("     mapname: %s\n",param_1 + 0x31c);
  DevMsg("     networkprotocol (should be %i): %i\n",uVar1,uVar3);
  DevMsg("     playback_frames: %i\n",*(undefined4 *)(param_1 + 0x52c));
  DevMsg("     playback_ticks: %i\n",*(undefined4 *)(param_1 + 0x528));
  DevMsg("     playback_time: %f\n",(double)*(float *)(param_1 + 0x524));
  DevMsg("     servername: %s\n",param_1 + 0x114);
  DevMsg("     signonlength: %i\n",*(undefined4 *)(param_1 + 0x530));
  DevMsg(" AddOn: %s couldn\'t find Host %s\n",uVar4);
  DevMsg(" Moving ");
  DevMsg(" Tasks timings:\n");
  DevMsg(" iCustomDamage: %i:: damagebits: %i\n",local_c,uVar3);
  DevMsg("%f Async I/O Bumped priority for %s (%8.2f msec)\n",DAT_10683898,puVar3,
  DevMsg("%f BCD:  Async I/O Force %s (%8.2f msec / %8.2f msec total)\n",DAT_10683898,puVar3,
  DevMsg("%f BlockingGetDataPointer:  Async I/O Force %s (%8.2f msec / %8.2f msec total )\n",
  DevMsg("%s Didn\'t find a best rally point!\n",puVar10);
  DevMsg("%s thinking for %.02fms!!! (%s); r%.2f (c%.2f, pst%.2f, ms%.2f), p-r%.2f, m%.2f\n",pcVar2,
  DevMsg("%s",pcVar4);
  DevMsg("%s: ",puVar6);
  DevMsg("%sCurrent preset: %d\n",iVar2,*(undefined4 *)(param_1 + 0x1c));
  DevMsg("%sD0: %d\n",iVar3,*(undefined4 *)(param_1 + 0x30));
  DevMsg("%sD: %d\n",iVar1,param_1[3]);
  DevMsg("%sD: %d\n",iVar3,*(undefined4 *)(param_1 + 8));
  DevMsg("%sDFR: %08X [Addr]\n",iVar1,param_1);
  DevMsg("%sDSP: %08x [Addr]\n");
  DevMsg("%sDelay: %08X [Addr]\n",iVar3,param_1);
  DevMsg("%sFilter:",iVar1);
  DevMsg("%sModDelay: %08X [Addr]\n");
  DevMsg("%sPRC: %08X [Addr]\n");
  DevMsg("%sPSET: %08x [Addr]\n");
  DevMsg("%sPos: %08X [Addr]\n",iVar1,param_1);
  DevMsg("%sPosOne: %08X [Addr]\n",(int)&DAT_10462960 - iVar1,param_1);
  DevMsg("%sPrevious preset: %d\n");
  DevMsg("%sRVA: %08X [Addr]\n",iVar1,param_1);
  DevMsg("%sRmp: %08X [Addr]\n",iVar1,param_1);
  DevMsg("%sType: %d\n",iVar1,*param_1);
  DevMsg("%sType: %s -",(int)&DAT_10462960 - iVar1);
  DevMsg("%sa1: %d - a2: %d - a3: %d\n",iVar3,*(undefined4 *)(param_1 + 0x24),
  DevMsg("%sbEnabled: %s\n",iVar2,pcVar3);
  DevMsg("%sbEndAtTime: %d\n",iVar1,(uint)*(byte *)((int)param_1 + 0x15));
  DevMsg("%sbPhaseInvert: %d\n",iVar1,(uint)param_1[0x48]);
  DevMsg("%sbexpfade: %s\n",iVar2,pcVar3);
  DevMsg("%scchan: %d\n",iVar2,*(undefined4 *)(param_1 + 4));
  DevMsg("%scprcs: %d\n",iVar1,param_1[1]);
  DevMsg("%scsamp_duration: %d\n",iVar1,param_1[0x7b]);
  DevMsg("%scstep: %d\n",iVar1,param_1[1]);
  DevMsg("%sdb_min: %f\n",iVar1,(double)(float)param_1[0x77]);
  DevMsg("%sdb_mixdrop: %f\n",iVar1,(double)(float)param_1[0x78]);
  DevMsg("%sdepth: %f\n",iVar1,(double)*(float *)(param_1 + 0x14));
  DevMsg("%sduration: %f\n",iVar1,(double)(float)param_1[0x79]);
  DevMsg("%sfade: %f\n",iVar1);
  DevMsg("%sfchanging: %d\n",iVar1,(uint)param_1[1]);
  DevMsg("%sfhitend: %d\n",(int)&DAT_10462960 - iVar1,(uint)*(byte *)(param_1 + 4));
  DevMsg("%sfhitend: %d\n",iVar1,(uint)*(byte *)(param_1 + 5));
  DevMsg("%sfmoddly: %d\n",iVar1,(uint)param_1[0x70]);
  DevMsg("%sfparallel: %d\n",iVar1,*(undefined4 *)(param_1 + 8));
  DevMsg("%sfused: %d\n",iVar1,(uint)*param_1);
  DevMsg("%sfused: %d\n",iVar1,param_1[0x84],puVar4);
  DevMsg("%sfused: %d\n",iVar3,(uint)*param_1);
  DevMsg("%sfused: %s\n",iVar2,pcVar3);
  DevMsg("%sinitval: %d\n",iVar1,*param_1);
  DevMsg("%sm: %d\n",iVar1,*(undefined4 *)(param_1 + 4));
  DevMsg("%smix: %d\n",iVar1,*(undefined4 *)(param_1 + 0x18));
  DevMsg("%smix_max: %f\n",iVar1,(double)(float)param_1[0x76]);
  DevMsg("%smix_min: %f\n",iVar1,(double)(float)param_1[0x75]);
  DevMsg("%smtime: %d\n",iVar1,*(undefined4 *)(param_1 + 0xc));
  DevMsg("%smtimecur: %d\n",iVar1,*(undefined4 *)(param_1 + 0x10));
  DevMsg("%spdly: ",iVar1);
  DevMsg("%spos: %d\n",iVar1,param_1[2]);
  DevMsg("%sprm: ");
  DevMsg("%sramptime: %f\n",iVar1,(double)*(float *)(param_1 + 8));
  DevMsg("%ssign: %d\n",iVar1,param_1[2]);
  DevMsg("%sstep: %d\n",iVar1,*param_1);
  DevMsg("%st1: %d - t2: %d - t3: %d\n",iVar3,*(undefined4 *)(param_1 + 0x18),
  DevMsg("%st: %d\n",iVar3,*(undefined4 *)(param_1 + 0xc));
  DevMsg("%starget: %d\n",iVar1,param_1[1]);
  DevMsg("%stnew: %d\n",iVar3,*(undefined4 *)(param_1 + 0x10));
  DevMsg("%stype: %d\n",iVar3,*(undefined4 *)(param_1 + 4));
  DevMsg("%sw: ",iVar1);
  DevMsg("%sw: %d\n",iVar3,*(int *)(param_1 + 0x34) - *(int *)(param_1 + 0x38) >> 2);
  DevMsg("%sxf: %d\n",iVar3,*(undefined4 *)(param_1 + 0x14));
  DevMsg("%sxfade default: %f\n",iVar2,(double)*(float *)(param_1 + 0x3c));
  DevMsg("%sxfade: %f\n",iVar2,(double)*(float *)(param_1 + 0x38));
  DevMsg("*** PARSING VEHICLE SCRIPT :%s: ***\n",param_1);
  DevMsg("*** Warning! LeadPlayer() has a NULL Goal Ent\n");
  DevMsg("**ERROR: Can\'t find any assault points named: %s\n",puVar7);
  DevMsg("AI Disabled.\n");
  DevMsg("AI Enabled.\n");
  DevMsg("AI Resume...\n");
  DevMsg("AI Stepping...\n");
  DevMsg("AllocGroundLink: failed to allocate groundlink_t.!!!\n");
  DevMsg("BSP Version: %i\n",puVar1);
  DevMsg("Bad sequence in GetSequenceActivityName() for model \'%s\'!\n",iVar2);
  DevMsg("Bad sequence in GetSequenceName() for model \'%s\'!\n",iVar2);
  DevMsg("Bots: %i\n",iVar3);
  DevMsg("CBaseModPanel::OnDisconnectFromGame::showMainMenu: %s\n",puVar2);
  DevMsg("CBaseWheeledControllable Client Spawn\n");
  DevMsg("CBaseWheeledControllable Server Spawn\n");
  DevMsg("CDemoFile::ReadRawData: buffe overflow (%i).\n");
  DevMsg("CDemoFile::WriteNetworkDataTables: Haven\'t opened file yet!\n");
  DevMsg("CDemoFile::WriteStringTables: Haven\'t opened file yet!\n");
  DevMsg("CFuncStageBlocker::Spawn()\n");
  DevMsg("CHLTVClient::FileDenied: %s.\n",param_1);
  DevMsg("CHLTVClient::FileReceived: %s.\n",param_1);
  DevMsg("CHLTVClient::FileRequested: %s.\n",param_1);
  DevMsg("CHLTVClient::FileSent: %s.\n",param_1);
  DevMsg("CHLTVServer: failed to serialize local event \'%s\'.\n",uVar3);
  DevMsg("CRTeamDeathmatch::RoundTimeExceeded\n");
  DevMsg("CSoundEmitterSystem:  Unknown sound level %s\n",param_1);
  DevMsg("CTextWindow::Update: unknown content type %i\n",iVar2);
  DevMsg("CUserMessages::HookMessage:  no such message %s\n",param_1);
  DevMsg("CUserMessages::UnHookMessage:  no such message %s\n",param_1);
  DevMsg("C_PropHitZone::Initialize::Model %s Has no Hitboxes!!\n",pcVar3);
  DevMsg("CalculateFriendCount(): %i friends, friend a: %i, friend b: %i, friend c: %i\n",uVar8,
  DevMsg("Called wrong RunTask()\n");
  DevMsg("Called wrong StartTask()\n");
  DevMsg("Couldn\'t find temp entity \'%s\'\n",(int)param_1 + 0x3bc);
  DevMsg("Creating ragdoll at tick %d\n",*(undefined4 *)(PTR_DAT_106ab8dc + 0x1c));
  DevMsg("Current Team: %i Current Loadout: %i\n",uVar6,iVar4);
  DevMsg("DSP: Warning, failed to allocate amp.\n");
  DevMsg("DSP: Warning, failed to allocate delay for pitch shifter.\n");
  DevMsg("DSP: Warning, failed to allocate envelope follower.\n");
  DevMsg("DSP: Warning, failed to allocate envelope.\n",this);
  DevMsg("Deferred shadow rendering only supported on the 360.\n");
  DevMsg("ERROR: Rejecting spawn of %s as error in NPC\'s schedules.\n",pcVar6);
  DevMsg("ERROR: SquadNewEnemy() - pEnemy is NULL!\n");
  DevMsg("EndRound\n");
  DevMsg("Ending Defuse\n");
  DevMsg("FCVAR_CHEAT cvars reverted to defaults.\n");
  DevMsg("Failed to play: %s\n",puVar1);
  DevMsg("File \'%s\' requested from client %s.\n",param_1,uVar1);
  DevMsg("Finish Planting\n");
  DevMsg("FireRoundDraw()\n");
  DevMsg("FireRoundWin_Defenders()\n");
  DevMsg("Freeing %d bytes of save data\n",*(undefined4 *)(param_1 + 8));
  DevMsg("GameEventManager: failed to serialize event \'%s\'.\n",uVar6);
  DevMsg("GetBestEquipment::Nothing to choose from.\n");
  DevMsg("Giving %s -> %s\n",uVar4);
  DevMsg("Glass killed, setting model to :%s:\n",uVar3);
  DevMsg("Groundent: NULL\n\n");
  DevMsg("Here is our script model name :%s:\n",puVar7,pcVar15,pcVar16,pcVar12);
  DevMsg("Here is our script model name :%s:\n",puVar8,pcVar15,pcVar16,pcVar13);
  DevMsg("Hostage Model %s\n",puVar8);
  DevMsg("Lead goal entity activated for an NPC that doesn\'t have the lead behavior\n");
  DevMsg("Leader.");
  DevMsg("NULL\n");
  DevMsg("Note: Strange link found between nodes in AI node graph\n");
  DevMsg("Parameters: mix group name, layer name, [vol, mute, solo], value, amount");
  DevMsg("Particle Effect Systems:\n");
  DevMsg("Pet_Killed: %s\n",uVar1);
  DevMsg("Plan Creation: %s\n",param_1);
  DevMsg("Player entering in slot :%i:\n",param_2);
  DevMsg("PlayerDisconnect: %s\n",uVar6);
  DevMsg("Playing %s\n",puVar1);
  DevMsg("Preparing panel %s for state %s switching to options for %s\n",uVar2);
  DevMsg("Preparing states for %s\n",uVar5);
  DevMsg("RATE FROM REGISTRY: %s [%i]\n",local_84,iVar4);
  DevMsg("R_FindDynamicDecalSlot: no slot available.\n");
  DevMsg("R_RedownloadAllLightmaps took %.3f msec!\n",
  DevMsg("Rate did not match table, defaulting to BALANCED.\n");
  DevMsg("Removing player %s to queue %d\n",uVar1);
  DevMsg("ReplyReservationRequest:  Reservation request with bogus payload size from %s [%d bytes]\n"
  DevMsg("S_PurgeSoundsDueToLanguageChange()\n");
  DevMsg("Scoring rule \'%s\' (%i)\n{\n");
  DevMsg("Seeded random number generator @ %d ( %.3f )\n",uVar7);
  DevMsg("Sending full update to Client %s (%s)\n",uVar2);
  DevMsg("Sending server info signon packet for %s: %u / %u buffer %s\n",uVar3);
  DevMsg("SerializeKeyValues:: not supported\n");
  DevMsg("SetFailure unimplemented\n");
  DevMsg("Setting shield models to: world: %s carried: %s\n",uVar2,uVar1);
  DevMsg("Size:  %d items\n",(uint)*(ushort *)(param_1 + 0x16));
  DevMsg("Sound Initialization: Finish, Sampling Rate: %i\n",uVar4);
  DevMsg("Sound Initialization: Start\n");
  DevMsg("Stopped Playing %s\n",puVar1);
  DevMsg("TIGetNextMap::current map %s[%llu] has element: %i\n",*(undefined4 *)(puVar3 + 8),param_1,
  DevMsg("Unexpected double-death-cleanup\n");
  DevMsg("UnserializeKeyValue:: not supported\n");
  DevMsg("VideoPanel::OnClose() played video for %.2f seconds\n",
  DevMsg("WARNING: DSP processor failed to initialize! \n");
  DevMsg("Yaw speed:%3.1f,Health: %3d\n",SUB84((double)*(float *)(param_1[0x26c] + 0x18),0),
  DevMsg("[%s] PutAway\n","Client");
  DevMsg("[%s] PutAway\n","Server");
  DevMsg("[Cloud]: SUCCEESS loading %s from remote storage\n",pcVar10);
  DevMsg("[Cloud]: SUCCEESS saving %s in remote storage\n",pcVar13);
  DevMsg("[FixAPI][Client] %s\n",param_1);
  DevMsg("[FixAPI][Game] %s\n",param_1);
  DevMsg("[FixAPI][Inventory] Preparing defaults for if user %d (SteamID: %llu)\n",uVar5);
  DevMsg("[RULES] CalculateNextNevel\n");
  DevMsg("[RULES] Gamerules Kicking user: %s\n",uVar1);
  DevMsg("[RULES] Gamerules seeing RoomUserLocationUpdate for user: %s\n",uVar2);
  DevMsg("[RULES] Gamerules seeing Room_UserConnecting for user %s: (%d)\n",uVar1);
  DevMsg("[RULES] planning (EQUIPMENT) time is: %i ends at: %f (curtime: %f) (which is: %f)\n",
  DevMsg("[SendRoundResult] User: %i (%s) XP: %i GP: %i\n",uVar3);
  DevMsg("[WAITLIST] Room User Count: %i\n",uVar3);
  DevMsg("[debug] RadialMenu Command: %s\n",param_5);
  DevMsg("\n");
  DevMsg("\n***\nFAILED to create private ScriptScope. ABORTING script\n***\n");
  DevMsg("\nCURRENT MATCH STAGE::: %i\n",*(undefined4 *)((int)this + 0xa4));
  DevMsg("\tSHOW GAMEPANEL...[%s]\n",puVar1);
  DevMsg("ai_debug_node_connect: debugging enbabled for %d <--> %d\n",DAT_10594980,DAT_10594984);
  DevMsg("failed to get rate values.\n");
  DevMsg("m_iViewModelIndex(%i) != viewModelIndex(%i)!!! enforcing!!\n",
  DevMsg("move_rope has TextureScale greater than 10 at (%2.2f, %2.2f, %2.2f)\n",
  DevMsg("npc couldn\'t find any valid chair, checked %i seats (%i occupied)\n",local_10,local_14);
  DevMsg("player exiting slot :%i:\n",uVar6);
  DevMsg("register user message: %s idx: %i\n",puVar1,uVar3);
  DevMsg("response %s = \'%s\'\n",pcVar1,iVar2);
  DevMsg("world deleted\n");
  DevMsg(1,"%s(token %i) : %s",local_104,uVar3,local_504);
  DevMsg(1,"%s: VPhysics exceeded collision check limit (%d)!!!\nInterpenetration may result!\n",
  DevMsg(1,"%s\n   origin %f %f %f\n   angles %f %f %f\n",puVar4,(double)(float)param_1[0x84],
  DevMsg(1,"Beam spline with %i points invoked\n",param_3);
  DevMsg(1,"Beam spline with %i points received\n",*(undefined4 *)(param_1 + 0xcc));
  DevMsg(1,"CDummyMaterialProxy::OnBind( %p )\n",param_1);
  DevMsg(1,"CDummyMaterialProxy::~CDummyMaterialProxy()\n");
  DevMsg(1,"CResponseSystem:  failed to load %s\n",param_1);
  DevMsg(1,"Can\'t find streaming wav file: sound\\%s\n",puVar6);
  DevMsg(1,"Decal: entity = %i",*(undefined4 *)(param_1 + 0x18));
  DevMsg(1,"Decal: entity = %i",param_4);
  DevMsg(1,"Fast Build Temp Cache:  \'%s\'\n",local_228);
  DevMsg(1,"Firing PickRandom input on logic_case %s with no cases set up\n",pcVar3);
  DevMsg(1,"GetClientConVarValue: player invalid index %i\n",param_1);
  DevMsg(1,"LEVEL DESIGN ERROR: Divide by zero in math_value\n");
  DevMsg(1,"Max entity count along ray exceeded!\n");
  DevMsg(1,"NET_CloseNetChannel: unknown channel.\n");
  DevMsg(1,"Trying cache :  \'%s\'\n",local_10c);
  DevMsg(2,"%s Blocked by %s\n",puVar2,puVar4);
  DevMsg(2,"AWLAYS RESPAWN ENTITY: %s DURING CLEANUP\n",puVar8);
  DevMsg(2,"Blocking load of scene from \'%s\'\n",param_1);
  DevMsg(2,"Cancelling script: %s\n",puVar3);
  DevMsg(2,"NEVER RESPAWN ENTITY: %s DURING CLEANUP\n",puVar8);
  DevMsg(2,"Playing sentence %s\n",puVar4);
  DevMsg(2,"TRAIN(%s), speed to %.2f\n",pcVar1,dVar3);
  DevMsg(2,"TRAIN(%s), speed to %.2f\n",pcVar1,dVar4);
  DevMsg(2,"TRAIN(%s), speed to %.2f\n",pcVar2,dVar3);
  DevMsg(2,"TRAIN(%s), speed to %.2f\n",pcVar2,dVar4);
  DevMsg(2,"TRAIN(%s), speed to %.2f\n",pcVar3,dVar5);
  DevMsg(2,"TRAIN(%s): Dead end ",pcVar1);
  DevMsg(2,"TRAIN(%s): Lost path\n",pcVar1);
  DevMsg(2,"input: (%s) -> (%s,%s), from (%s)\n",param_1,pcVar3,pcVar1,pcVar4);
  DevMsg(2,"output: (%s,%s) -> (%s,%s)\n",puVar2,pcVar1,uVar6);
  DevMsg(2,"scripted_schedule \"%s\" can\'t find NPC \"%s\"\n",pcVar2,puVar4);
  DevMsg(2,"scripted_sequence %d:\"%s\" can\'t find NPC \"%s\"\n",iVar3,pcVar4,puVar5);
  DevMsg(3,"(client)PropBreakablePrecacheAll::Precaching model %s and all it\'s breaks\n",param_1);
  DevMsg(3,"[CARDEBUG] Updating shadow to [%s] [%s]\n",(int)puVar10 + 5,"Client",puVar13,pcVar14,
  DevWarning(" Entity %s encountered an error in RunScript()\n",pcVar4);
  DevWarning("%s FAILED to call script think function %s!\n",pcVar2,puVar3);
  DevWarning("AllocTouchLink: failed to allocate touchlink_t.\n");
  DevWarning("Failed to CRC %s\n");
  DevWarning("Invalid lesson action type used with \"%s\" variable type.\n");
  DevWarning("Invalid scripted lesson variable/param type: %s\n",&DAT_104f9794);
  DevWarning("Invalid scripted lesson variable/param type: %s\n",param_1);
  DevWarning("Invalid scripted lesson variable/param type: %s\n",s_float_104f9798);
  DevWarning("Locator Panel has no free targets!\n");
  DevWarning("Maximun Proxy Messages used - ask a programmer for more.\n");
  DevWarning("No conversion from %s to float now\n",pcVar1);
  DevWarning("Player %s calling LeavePlanningAndSpawn while not in PLAYER_STATE_PLANNING_EQUIPMENT!!!\n"
  DevWarning("Prerequisite %s added by lesson %s doesn\'t exist!\n",pbVar1,puVar4);
  DevWarning("SOS System Warning: Unable to set or create float variable %s\n",param_1);
  DevWarning("Scene %s has %d actors, but scene entity only has %d actors\n",iVar5,uVar9,uVar6);
  DevWarning("caption_color format incorrect. RRR,GGG,BBB expected.\n");
  DevWarning("nav_unmark; nav_mark ladder %d; nav_warp_to_mark\n",*(undefined4 *)((int)this + 0x48))
  DevWarning("waveOutOpen failed\n");
  DevWarning(1,"CViewRenderBeams::DrawBeam:  Unknown beam type %i\n",
  DevWarning(1,"Couldn\'t alloc a high priority TENT (max %i)!\n",0x28a);
  DevWarning(1,"No Sprite %d!\n",param_2);
  DevWarning(1,"Overflow %d temporary ents!\n",0x28a);
  DevWarning(1,"RegisterTemplateEntity: template entity with no name, class %s\n",puVar6);
  DevWarning(1,"[%d] Could not find Hud Element: %s\n",*(undefined4 *)((int)this + 0x78),param_1);
  DevWarning(2,"Asking LastKnownPosition for enemy that\'s not in my memory!!\n");
  DevWarning(2,"Script failed for %s\n",puVar2);
  DevWarning(2,"TRAIN(%s): Blocked by %s (dmg:%.2f)\n",pcVar3,puVar5);
  DevWarning(2,"Unhandled animation event %d from %s --> %s\n",uVar4,puVar3,puVar2);
  ETWBegin("CL_FullyConnected");
  ETWEnd("CBaseViewport::ReloadScheme",uVar4);
  ETWEnd("CHostState::State_NewGame",uVar4);
  ETWEnd("MIX_PaintChannels",local_20);
  Error("CResponseSystem::LoadFromBuffer:  Unknown entry type \'%s\', expecting \'response\', \'criterion\', \'enumeration\' or \'rules\' in file %s(offset:%i)\n"
  Error("CTSListBase: Misaligned list\n");
  Error("CTSQueue: Misaligned queue\n");
  Error("Called RequestFile_OLD");
  Error("Engine hunk overflow!\n");
  Error("GenerateRepresentativePalette: not implemented");
  Error("Heap is corrupt\n");
  Error("InitGameRules: missing gamerules class \'%s\' on the server",param_1);
  Error("InitStaticGlobals: missing StaticGlobals class \'%s\' on the server",param_1);
  Error("Invalid client specified in GetPrevCheckTransmitInfo\n");
  Error("OnGameRulesCreationStringChanged: missing gamerules class \'%s\' on the client",pbVar4);
  Error("OnStaticGlobalsCreationStringChanged: missing StaticGlobals class \'%s\' on the client",
  Error("Unable to determine platform directory\n");
  Error("UserMessageBegin:  Unregistered message \'%s\'\n",param_1);
  Error("UserMessageBegin:  Unregistered message \'%s\'\n",param_2);
  Error("an entity named \'helicopter_escape_point\' is missing from level.\n");
  Error((byte *)"CTSQueue: Misaligned queue\n");
  FID_conflict__memcpy(local_94,"127.0.0.1",9);
  FUN_00404270(param_1,extraout_DL,"all.lst");
  FUN_00404270(param_1,extraout_DL_00,"engine.lst");
  FUN_0040f440((int *)0x0,DAT_0044a6d8,(byte *)"Creating user %d");
  FUN_0040f440((int *)0x0,DAT_0044a6d8,(byte *)"Releasing user %d");
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Creating user %d");
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Releasing user %d");
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Steam Auth Ticket: %d : %s\n");
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Updating/Loading %d slots");
  FUN_0040f440(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Analytics Web Request Completed: %d");
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"============ FIX CLIENT API INIT ============");
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"============ NEW AUTH SESSION ============");
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Attempting Steam Auth login to %s with SteamID %llu"
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Attempting login to %s");
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Auth Ticket Recieved: %d | Result %d");
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Requesting Steam Auth Ticket");
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Session Start Web Request Completed: %d");
  FUN_0040f4e0(DAT_0044a6c0,(undefined4 *)0x0,(byte *)"Micro Transaction Auth Response Recieved: %s"
  FUN_0040f4e0(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Socket connecting to %s:%d");
  FUN_004104c0(param_1 + 0x6e,*puVar4,puVar4[1],"81fc7f92d860694fff1ef960f2114a43",
  FUN_0041dfc0((char *)local_128,0x104,(byte *)"scripts/items/%s.res");
  FUN_0041dfc0((char *)local_128,0x124,(byte *)"%s=%s");
  FUN_0041dfc0(local_1010,0xff,(byte *)"%s/Session/Start");
  FUN_0041dfc0(local_108,0x104,(byte *)"%s\\%s");
  FUN_0041dfc0(local_288,0x200,(byte *)"%s/%s");
  FUN_0041dfc0(local_348,0x200,(byte *)"%s/%s");
  FUN_0041dfc0(param_1,param_2,(byte *)"%s%cfilesystem_stdio.dll");
  FUN_0041e120(local_114,"vconfig.exe",0x104,0xffffffff);
  FUN_0041e120(param_1,"\\",param_2,0xffffffff);
  FUN_0041e120(param_1,"bin",param_2,0xffffffff);
  FUN_0041e1d0((char *)(param_1 + 9),(int)"tacint",0x200);
  FUN_0041e380((int)(param_1 + 0x2d),"");
  FUN_0041e380((int)(param_1 + 0x45c),"");
  FUN_0041e380((int)(param_1 + 2),"");
  FUN_0041e380((int)local_124,"");
  FUN_00420fb0((void *)0x0,"steamworks",1);
  FUN_004214d0(param_1 + 0x12,"reslists_work");
  FUN_004214d0(param_1 + 0xe,"reslists");
  FUN_004214d0(param_1 + 300,"reslists");
  FUN_00422320(&DAT_00457070,0x5c,"\"",0xb,(int)&DAT_00447600);
  FUN_00422320(&DAT_00457a90,0x7f,"\"",1,(int)&DAT_00447658);
  FUN_0042618f("PATH");
  FUN_004276f9((char *)local_1108,0x1000,(byte *)"PATH=%s\\;%s");
  FUN_10004f60(&DAT_10044500,0x5c,"\"",0xb,(int)&DAT_10033210);
  FUN_10004f60(&DAT_10044f20,0x7f,"\"",1,(int)&DAT_10033268);
  FUN_10005190((void *)(param_1 + 0x2c),"dev/warp","Other",1);
  FUN_10005190((void *)(param_1 + 0x34),pcVar3,"Other",1);
  FUN_10005190((void *)(param_1 + 0x38),"vr/vr_distort_hud_left","Other",1);
  FUN_10005190((void *)(param_1 + 0x3c),"vr/vr_distort_hud_right","Other",1);
  FUN_10005190((void *)(param_1 + 0x40),"vgui/inworldui","Other",1);
  FUN_10005190((void *)(param_1 + 0x44),"vgui/inworldui_opaque","Other",1);
  FUN_10005190((void *)(param_1 + 0x48),"vgui/black","Other",1);
  FUN_1000c5b0((void *)((int)this + 0xea0),"Secondary Page SBH",_File,0);
  FUN_1000c5b0((void *)((int)this + 8),"Fixed Page SBH",_File,param_2);
  FUN_1000c900((void *)((int)this + 0x1d38),"Fallback SBH",_File,param_2);
  FUN_10021180(puVar4,(byte *)"[Nav] %s");
  FUN_1002158b(_File,(byte *)"%s:%i\n");
  FUN_1002158b(param_2,(byte *)"<div class=\"sbhTable\" data-role=\"collapsible\">");
  FUN_1002158b(param_2,(byte *)"<legend%s>Committed:<b>%16s</b> Allocated:<b>%16s</b></legend>\n");
  FUN_1002169d(local_104,0x100,(byte *)"***** OUT OF MEMORY! attempted allocation size: %u ****\n");
  FUN_1002169d(local_204,0x1ff,(byte *)"%s.txt");
  FUN_10021ad0(extraout_ECX,extraout_EDX,param_1,(undefined (*) [16])"-RESERVELOWMEM");
  FUN_10025d70(&DAT_10603bcc,(byte *)"CBaseAnimating",&DAT_10603be0);
  FUN_10025d70(&DAT_1060466c,(byte *)"CBaseAnimatingOverlay",&DAT_10604680);
  FUN_10025d70(&DAT_10604c08,(byte *)"CBaseCombatCharacter",&DAT_10604c1c);
  FUN_10025d70(&DAT_10605188,(byte *)"CBaseCombatWeapon",&DAT_106051e0);
  FUN_10025d70(&DAT_10605aa8,(byte *)"CBaseEntity",&DAT_10605abc);
  FUN_10025d70(&DAT_10607460,(byte *)"CBaseFlex",&DAT_10607474);
  FUN_10025d70(&DAT_10607da4,(byte *)"CBaseParticleEntity",&DAT_10607db8);
  FUN_10025d70(&DAT_10608288,(byte *)"CBasePlayer",&DAT_1060829c);
  FUN_10025d70(&DAT_10609d28,(byte *)"CBeam",&DAT_10609d54);
  FUN_10025d70(&DAT_1060a730,(byte *)"CBeamSpotlight",&DAT_1060a744);
  FUN_10025d70(&DAT_1060aadc,(byte *)"CFuncConveyor",&DAT_1060aaf0);
  FUN_10025d70(&DAT_1060ab0c,(byte *)"CFuncRotating",&DAT_1060ab20);
  FUN_10025d70(&DAT_1060b050,(byte *)"CBaseButton",&DAT_1060b064);
  FUN_10025d70(&DAT_1060be44,(byte *)"CColorCorrection",&DAT_1060be58);
  FUN_10025d70(&DAT_1060c7ec,(byte *)"CColorCorrectionVolume",&DAT_1060c800);
  FUN_10025d70(&DAT_1060cfa4,(byte *)"CBaseDoor",&DAT_1060cfb8);
  FUN_10025d70(&DAT_1060d138,(byte *)"CDynamicLight",&DAT_1060d14c);
  FUN_10025d70(&DAT_1060dcac,(byte *)"CPrecipitation",&DAT_1060dcc0);
  FUN_10025d70(&DAT_1060dcdc,(byte *)"CPrecipitationBlocker",&DAT_1060dcf0);
  FUN_10025d70(&DAT_1060dd24,(byte *)"CEnvWind",&DAT_1060dd38);
  FUN_10025d70(&DAT_1060dd54,(byte *)"CEmbers",&DAT_1060dd68);
  FUN_10025d70(&DAT_1060dd94,(byte *)"CEnvQuadraticBeam",&DAT_1060dda8);
  FUN_10025d70(&DAT_1060ec30,(byte *)"CEntityDissolve",&DAT_1060ec44);
  FUN_10025d70(&DAT_1060f078,(byte *)"CEntityFlame",&DAT_1060f08c);
  FUN_10025d70(&DAT_1060f240,(byte *)"CEntityFreezing",&DAT_1060f254);
  FUN_10025d70(&DAT_1063f528,(byte *)"CEntityParticleTrail",&DAT_1063f53c);
  FUN_10025d70(&DAT_1063f8b8,(byte *)"CEnvAmbientLight",&DAT_1063f8cc);
  FUN_10025d70(&DAT_1063fe4c,(byte *)"CEnvDetailController",&DAT_1063fe60);
  FUN_10025d70(&DAT_1063ff80,(byte *)"CEnvDOFController",&DAT_1063ff94);
  FUN_10025d70(&DAT_10640390,(byte *)"CEnvProjectedTexture",&DAT_106403a4);
  FUN_10025d70(&DAT_10640be8,(byte *)"CEnvScreenOverlay",&DAT_10640bfc);
  FUN_10025d70(&DAT_10640c18,(byte *)"CEnvScreenEffect",&DAT_10640c2c);
  FUN_10025d70(&DAT_106410fc,(byte *)"CEnvTonemapController",&DAT_10641110);
  FUN_10025d70(&DAT_106424d8,(byte *)"CFireSmoke",&DAT_106424ec);
  FUN_10025d70(&DAT_1064284c,(byte *)"CFish",&DAT_10642860);
  FUN_10025d70(&DAT_10642c04,(byte *)"CFogController",&DAT_10642c18);
  FUN_10025d70(&DAT_10643390,(byte *)"CFuncAreaPortalWindow",&DAT_106433a4);
  FUN_10025d70(&DAT_10643934,(byte *)"CBreakable",&DAT_10643948);
  FUN_10025d70(&DAT_10643a38,(byte *)"CBreakableSurface",&DAT_10643a4c);
  FUN_10025d70(&DAT_10643f58,(byte *)"CFunc_Dust",&DAT_10643f6c);
  FUN_10025d70(&DAT_10643f88,(byte *)"CTEDust",&DAT_10643f9c);
  FUN_10025d70(&DAT_10644678,(byte *)"CFuncElevator",&DAT_1064468c);
  FUN_10025d70(&DAT_10644b84,(byte *)"CFuncLadder",&DAT_10644b98);
  FUN_10025d70(&DAT_10644bb4,(byte *)"CInfoLadderDismount",&DAT_10644bc8);
  FUN_10025d70(&DAT_10644eac,(byte *)"CFunc_LOD",&DAT_10644ec0);
  FUN_10025d70(&DAT_10645058,(byte *)"CFuncMoveLinear",&DAT_1064506c);
  FUN_10025d70(&DAT_10645354,(byte *)"CFuncReflectiveGlass",&DAT_10645368);
  FUN_10025d70(&DAT_10645490,(byte *)"CFuncSmokeVolume",&DAT_106454a4);
  FUN_10025d70(&DAT_10646978,(byte *)"CGameRulesProxy",&DAT_1064698c);
  FUN_10025d70(&DAT_1064ba20,(byte *)"CInfoOverlayAccessor",&DAT_1064ba34);
  FUN_10025d70(&DAT_1064bce4,(byte *)"CLightGlow",&DAT_1064bcf8);
  FUN_10025d70(&DAT_1064c7dc,(byte *)"CMaterialModifyControl",&DAT_1064c7f0);
  FUN_10025d70(&DAT_1064cd18,(byte *)"CFuncBrush",&DAT_1064cd2c);
  FUN_10025d70(&DAT_1064e068,(byte *)"CParticleSystem",&DAT_1064e07c);
  FUN_10025d70(&DAT_1064eee4,(byte *)"CBoneFollower",&DAT_1064eef8);
  FUN_10025d70(&DAT_1064f768,(byte *)"CRagdollProp",&DAT_1064f77c);
  FUN_10025d70(&DAT_1064f798,(byte *)"CRagdollPropAttached",&DAT_1064f7ac);
  FUN_10025d70(&DAT_1065016c,(byte *)"CPhysBox",&DAT_10650180);
  FUN_10025d70(&DAT_106501b0,(byte *)"CPhysMagnet",&DAT_106501c4);
  FUN_10025d70(&DAT_1065218c,(byte *)"CPointCamera",&DAT_106521a0);
  FUN_10025d70(&DAT_10652950,(byte *)"CPostProcessController",&DAT_10652964);
  FUN_10025d70(&DAT_10652af4,(byte *)"CPredictedViewModel",&DAT_10652b08);
  FUN_10025d70(&DAT_10652f70,(byte *)"CBreakableProp",&DAT_10652f84);
  FUN_10025d70(&DAT_10652fa4,(byte *)"CDynamicProp",&DAT_10652fb8);
  FUN_10025d70(&DAT_10652fd8,(byte *)"CPhysicsProp",&DAT_10652fec);
  FUN_10025d70(&DAT_1065308c,(byte *)"CBasePropDoor",&DAT_106530a0);
  FUN_10025d70(&DAT_106530bc,(byte *)"CPropDoorRotating",&DAT_106530d0);
  FUN_10025d70(&DAT_106530ec,(byte *)"CPhysBoxMultiplayer",&DAT_10653100);
  FUN_10025d70(&DAT_1065311c,(byte *)"CPhysicsPropMultiplayer",&DAT_10653130);
  FUN_10025d70(&DAT_106705a0,(byte *)"CRagdollManager",&DAT_106705b4);
  FUN_10025d70(&DAT_10670a30,(byte *)"CRopeKeyframe",&DAT_10670a44);
  FUN_10025d70(&DAT_10672064,(byte *)"CSceneEntity",&DAT_10672078);
  FUN_10025d70(&DAT_1067287c,(byte *)"CShadowControl",&DAT_10672890);
  FUN_10025d70(&DAT_10672c64,(byte *)"CSlideshowDisplay",&DAT_10672c78);
  FUN_10025d70(&DAT_106738b4,(byte *)"CSpatialEntity",&DAT_106738c8);
  FUN_10025d70(&DAT_10673fac,(byte *)"CSpotlightEnd",&DAT_10673fc0);
  FUN_10025d70(&DAT_10674158,(byte *)"CSprite",&DAT_1067416c);
  FUN_10025d70(&DAT_10674184,(byte *)"CSpriteOriented",&DAT_10674198);
  FUN_10025d70(&DAT_10674ad8,(byte *)"CBaseToggle",&DAT_10674aec);
  FUN_10025d70(&DAT_10675424,(byte *)"CTeam",&DAT_10675438);
  FUN_10025d70(&DAT_10675740,(byte *)"CHandleTest",&DAT_10675754);
  FUN_10025d70(&DAT_10675a00,(byte *)"CFuncTrackTrain",&DAT_10675a14);
  FUN_10025d70(&DAT_10675d58,(byte *)"CBaseTrigger",&DAT_10675d6c);
  FUN_10025d70(&DAT_10675e0c,(byte *)"CTriggerPlayerMovement",&DAT_10675e20);
  FUN_10025d70(&DAT_10675e40,(byte *)"CBaseVPhysicsTrigger",&DAT_10675e54);
  FUN_10025d70(&DAT_1067d9ec,(byte *)"CVGuiScreen",&DAT_1067da00);
  FUN_10025d70(&DAT_1067e304,(byte *)"CWaterBullet",&DAT_1067e318);
  FUN_10025d70(&DAT_1067e4b8,(byte *)"CWaterLODControl",&DAT_1067e4cc);
  FUN_10025d70(&DAT_1067f0a0,(byte *)"CWorld",&DAT_1067f0b4);
  FUN_10025d70(&DAT_10683ae4,(byte *)"CSmoker",&DAT_10683af8);
  FUN_10025d70(&DAT_10683cdc,(byte *)"CSpiller",&DAT_10683cf0);
  FUN_10025d70(&DAT_10683f50,(byte *)"CTEFireBullets",&DAT_10683f64);
  FUN_10025d70(&DAT_10684468,(byte *)"CTI_PlayerResource",&DAT_1068447c);
  FUN_10025d70(&DAT_106849e8,(byte *)"CTEPlayerAnimEvent",&DAT_106849fc);
  FUN_10025d70(&DAT_10684a5c,(byte *)"CTIPlayer",&DAT_10684a70);
  FUN_10025d70(&DAT_10684a88,(byte *)"CTIPlayerRagdoll",&DAT_10684a9c);
  FUN_10025d70(&DAT_10688638,(byte *)"CPropBallisticBlockade",&DAT_1068864c);
  FUN_10025d70(&DAT_10688850,(byte *)"CPropBomb",&DAT_10688864);
  FUN_10025d70(&DAT_10688e94,(byte *)"CPropPropaneTank",&DAT_10688ea8);
  FUN_10025d70(&DAT_106894f4,(byte *)"CPropShield",&DAT_10689508);
  FUN_10025d70(&DAT_10689ac8,(byte *)"CTITeam",&DAT_10689adc);
  FUN_10025d70(&DAT_10689af4,(byte *)"CTITeam_Blue",&DAT_10689c10);
  FUN_10025d70(&DAT_10689c28,(byte *)"CTITeam_Red",&DAT_10689c3c);
  FUN_10025d70(&DAT_10689c54,(byte *)"CTITeam_Unassigned",&DAT_10689c68);
  FUN_10025d70(&DAT_1068a8b8,(byte *)"CVoteController",&DAT_1068a8cc);
  FUN_10025d70(&DAT_1068b0a4,(byte *)"CGameZone",&DAT_1068b0b8);
  FUN_10025d70(&DAT_1068b0d4,(byte *)"CFuncTeamClip",&DAT_1068b0e8);
  FUN_10025d70(&DAT_1068b75c,(byte *)"CFuncStageBlocker",&DAT_1068b770);
  FUN_10025d70(&DAT_1068b8e0,(byte *)"CInferno",&DAT_1068b8f4);
  FUN_10025d70(&DAT_1068c308,(byte *)"CInfoVIP_CaseGoal",&DAT_1068c31c);
  FUN_10025d70(&DAT_1068c3e4,(byte *)"CPropBreakdown",&DAT_1068c3f8);
  FUN_10025d70(&DAT_1068c53c,(byte *)"CPointPusher",&DAT_1068c550);
  FUN_10025d70(&DAT_1068c614,(byte *)"CPropAmmoBag",&DAT_1068c628);
  FUN_10025d70(&DAT_1068c79c,(byte *)"CPropAmmoBox",&DAT_1068c7b0);
  FUN_10025d70(&DAT_1068ca4c,(byte *)"CPropRappelPoint",&DAT_1068ca60);
  FUN_10025d70(&DAT_1068cf84,(byte *)"CNPCTrackPlane",&DAT_1068cf98);
  FUN_10025d70(&DAT_1068d008,(byte *)"CLargeMetalGib",&DAT_1068d01c);
  FUN_10025d70(&DAT_1068e02c,(byte *)"CNPCTrackVehicle",&DAT_1068e040);
  FUN_10025d70(&DAT_1068f134,(byte *)"CNPCVehicle",&DAT_1068f1f8);
  FUN_10025d70(&DAT_1068ff40,(byte *)"CTEDogAnimEvent",&DAT_1068ff54);
  FUN_10025d70(&DAT_10690a78,(byte *)"CTEHostageAnimEvent",&DAT_10690a8c);
  FUN_10025d70(&DAT_10690abc,(byte *)"CHostage",&DAT_10690ad0);
  FUN_10025d70(&DAT_10691c18,(byte *)"CTEHostageFireBullets",&DAT_10691c2c);
  FUN_10025d70(&DAT_10692800,(byte *)"CBaseCarriable",&DAT_10692814);
  FUN_10025d70(&DAT_106939d4,(byte *)"CTIViewModel",&DAT_106939e8);
  FUN_10025d70(&DAT_10693d00,(byte *)"CTIGameRulesProxy",&DAT_10693d14);
  FUN_10025d70(&DAT_10694e38,(byte *)"CTIStaticGlobals_Proxy",&DAT_10694e4c);
  FUN_10025d70(&DAT_10695058,(byte *)"CNPC_Vip",&DAT_1069506c);
  FUN_10025d70(&DAT_106951d8,(byte *)"CBaseBoatControllable",&DAT_106951ec);
  FUN_10025d70(&DAT_106958e8,(byte *)"CHelicopter_CT",&DAT_10695924);
  FUN_10025d70(&DAT_106958fc,(byte *)"CHelicopter_Ter",&DAT_1069593c);
  FUN_10025d70(&DAT_10695910,(byte *)"CHelicopter_Mafia",&DAT_10695954);
  FUN_10025d70(&DAT_1069596c,(byte *)"CBaseHelicopterControllable",&DAT_10695980);
  FUN_10025d70(&DAT_10695e44,(byte *)"CBasePlayerControllable",&DAT_10695e58);
  FUN_10025d70(&DAT_10696858,(byte *)"CBaseVPhysicsControllable",&DAT_1069686c);
  FUN_10025d70(&DAT_10697724,(byte *)"CBaseWheeledControllable",&DAT_10697738);
  FUN_10025d70(&DAT_106980d4,(byte *)"CRealWheeledControllable",&DAT_106980e8);
  FUN_10025d70(&DAT_10698214,(byte *)"CBaseGrenadeProjectile",&DAT_10698280);
  FUN_10025d70(&DAT_106988f4,(byte *)"CWeaponTIBase",&DAT_10698908);
  FUN_10025d70(&DAT_10699168,(byte *)"CWeaponSDKMelee",&DAT_10699194);
  FUN_10025d70(&DAT_106999a8,(byte *)"CWeaponKnife",&DAT_106999bc);
  FUN_10025d70(&DAT_10699a84,(byte *)"CWeaponGSR1911",&DAT_10699a98);
  FUN_10025d70(&DAT_10699b5c,(byte *)"CWeaponMR96",&DAT_10699b70);
  FUN_10025d70(&DAT_10699c34,(byte *)"CWeaponMTX",&DAT_10699c48);
  FUN_10025d70(&DAT_10699d0c,(byte *)"CWeaponP2000",&DAT_10699d20);
  FUN_10025d70(&DAT_10699de4,(byte *)"CWeaponP250",&DAT_10699df8);
  FUN_10025d70(&DAT_10699ebc,(byte *)"CWeaponSphinx",&DAT_10699ed0);
  FUN_10025d70(&DAT_10699f94,(byte *)"CWeaponVertec",&DAT_10699fa8);
  FUN_10025d70(&DAT_1069a06c,(byte *)"CWeaponXD45",&DAT_1069a080);
  FUN_10025d70(&DAT_1069a144,(byte *)"CPropBreachingCharge",&DAT_1069a158);
  FUN_10025d70(&DAT_1069a270,(byte *)"CPropC4Charge",&DAT_1069a284);
  FUN_10025d70(&DAT_1069a3a0,(byte *)"CWeaponC4Detonator",&DAT_1069a3b4);
  FUN_10025d70(&DAT_1069a47c,(byte *)"CWeaponM320",&DAT_1069a490);
  FUN_10025d70(&DAT_1069a4a8,(byte *)"C40MMGrenade",&DAT_1069a4bc);
  FUN_10025d70(&DAT_1069a730,(byte *)"CWeaponMG4",&DAT_1069a744);
  FUN_10025d70(&DAT_1069a80c,(byte *)"CWeaponRPG7",&DAT_1069a820);
  FUN_10025d70(&DAT_1069a838,(byte *)"CRocket",&DAT_1069a84c);
  FUN_10025d70(&DAT_1069aac0,(byte *)"CWeaponAK47",&DAT_1069aad4);
  FUN_10025d70(&DAT_1069ab9c,(byte *)"CWeaponAMD65",&DAT_1069abb0);
  FUN_10025d70(&DAT_1069ac74,(byte *)"CWeaponAUG",&DAT_1069ac88);
  FUN_10025d70(&DAT_1069ad4c,(byte *)"CWeaponDSA58",&DAT_1069ad60);
  FUN_10025d70(&DAT_1069ae24,(byte *)"CWeaponG36K",&DAT_1069ae38);
  FUN_10025d70(&DAT_1069aefc,(byte *)"CWeaponHK417",&DAT_1069af10);
  FUN_10025d70(&DAT_1069afd4,(byte *)"CWeaponK1A",&DAT_1069afe8);
  FUN_10025d70(&DAT_1069b0ac,(byte *)"CWeaponM1",&DAT_1069b0c0);
  FUN_10025d70(&DAT_1069b184,(byte *)"CWeaponM4",&DAT_1069b198);
  FUN_10025d70(&DAT_1069b25c,(byte *)"CWeaponSG551",&DAT_1069b270);
  FUN_10025d70(&DAT_1069b334,(byte *)"CWeaponBekas",&DAT_1069b348);
  FUN_10025d70(&DAT_1069b460,(byte *)"CWeaponFP6",&DAT_1069b474);
  FUN_10025d70(&DAT_1069b590,(byte *)"CWeaponM4STAR10",&DAT_1069b5a4);
  FUN_10025d70(&DAT_1069b6c0,(byte *)"CWeaponTGS12",&DAT_1069b6d4);
  FUN_10025d70(&DAT_1069b7f0,(byte *)"CWeaponMP5",&DAT_1069b804);
  FUN_10025d70(&DAT_1069b8cc,(byte *)"CWeaponMP7",&DAT_1069b8e0);
  FUN_10025d70(&DAT_1069b9a4,(byte *)"CWeaponP90",&DAT_1069b9b8);
  FUN_10025d70(&DAT_1069ba7c,(byte *)"CWeaponPDW",&DAT_1069ba90);
  FUN_10025d70(&DAT_1069bb54,(byte *)"CWeaponSkorpion",&DAT_1069bb68);
  FUN_10025d70(&DAT_1069bc2c,(byte *)"CWeaponSUPERV",&DAT_1069bc40);
  FUN_10025d70(&DAT_1069bd04,(byte *)"CWeaponUZI",&DAT_1069bd18);
  FUN_10025d70(&DAT_1069bddc,(byte *)"CWeaponAS50",&DAT_1069bdf0);
  FUN_10025d70(&DAT_1069beb4,(byte *)"CWeaponM14",&DAT_1069bec8);
  FUN_10025d70(&DAT_1069bf8c,(byte *)"CWeaponSPR",&DAT_1069bfa0);
  FUN_10025d70(&DAT_1069c064,(byte *)"CWeaponURatio",&DAT_1069c078);
  FUN_10025d70(&DAT_1069c140,(byte *)"CBaseTempEntity",&DAT_1069c154);
  FUN_10025d70(&DAT_1069c1c8,(byte *)"CParticleFire",&DAT_1069c1dc);
  FUN_10025d70(&DAT_1069c318,(byte *)"ParticleSmokeGrenade",&DAT_1069c32c);
  FUN_10025d70(&DAT_1069c5b8,(byte *)"CPlasma",&DAT_1069c5cc);
  FUN_10025d70(&DAT_1069c8ac,(byte *)"SmokeTrail",&DAT_1069c8c0);
  FUN_10025d70(&DAT_1069c8dc,(byte *)"RocketTrail",&DAT_1069c8f0);
  FUN_10025d70(&DAT_1069c90c,(byte *)"SporeTrail",&DAT_1069c920);
  FUN_10025d70(&DAT_1069c93c,(byte *)"SporeExplosion",&DAT_1069c950);
  FUN_10025d70(&DAT_1069c970,(byte *)"CFireTrail",&DAT_1069c984);
  FUN_10025d70(&DAT_1069c99c,(byte *)"DustTrail",&DAT_1069c9b0);
  FUN_10025d70(&DAT_1069e1f8,(byte *)"CSmokeStack",&DAT_1069e20c);
  FUN_10025d70(&DAT_1069e908,(byte *)"CSpriteTrail",&DAT_1069e91c);
  FUN_10025d70(&DAT_1069eca4,(byte *)"CSteamJet",&DAT_1069ecb8);
  FUN_10025d70(&DAT_1069f140,(byte *)"CTEMetalSparks",&DAT_1069f154);
  FUN_10025d70(&DAT_1069f190,(byte *)"CTEArmorRicochet",&DAT_1069f1a4);
  FUN_10025d70(&DAT_1069f38c,(byte *)"CTEBaseBeam",&DAT_1069f3a0);
  FUN_10025d70(&DAT_1069f900,(byte *)"CTEBeamEntPoint",&DAT_1069f914);
  FUN_10025d70(&DAT_1069fb98,(byte *)"CTEBeamEnts",&DAT_1069fbac);
  FUN_10025d70(&DAT_1069fd70,(byte *)"CTEBeamFollow",&DAT_1069fd84);
  FUN_10025d70(&DAT_1069fef0,(byte *)"CTEBeamLaser",&DAT_1069ff04);
  FUN_10025d70(&DAT_106a00c8,(byte *)"CTEBeamPoints",&DAT_106a00dc);
  FUN_10025d70(&DAT_106a02b0,(byte *)"CTEBeamRing",&DAT_106a02c4);
  FUN_10025d70(&DAT_106a0488,(byte *)"CTEBeamRingPoint",&DAT_106a049c);
  FUN_10025d70(&DAT_106a06c0,(byte *)"CTEBeamSpline",&DAT_106a06d4);
  FUN_10025d70(&DAT_106a0918,(byte *)"CTEBloodSprite",&DAT_106a092c);
  FUN_10025d70(&DAT_106a0cd4,(byte *)"CTEBloodStream",&DAT_106a0ce8);
  FUN_10025d70(&DAT_106a0fe0,(byte *)"CTEBreakModel",&DAT_106a0ff4);
  FUN_10025d70(&DAT_106a14a8,(byte *)"CTEBSPDecal",&DAT_106a14bc);
  FUN_10025d70(&DAT_106a16a0,(byte *)"CTEBubbles",&DAT_106a16b4);
  FUN_10025d70(&DAT_106a19a4,(byte *)"CTEBubbleTrail",&DAT_106a19b8);
  FUN_10025d70(&DAT_106a1cac,(byte *)"CTEClientProjectile",&DAT_106a1cc0);
  FUN_10025d70(&DAT_106a1f58,(byte *)"CTEDecal",&DAT_106a1f6c);
  FUN_10025d70(&DAT_106a2208,(byte *)"CTEDynamicLight",&DAT_106a221c);
  FUN_10025d70(&DAT_106a25b8,(byte *)"CTEEffectDispatch",&DAT_106a25cc);
  FUN_10025d70(&DAT_106a2760,(byte *)"CTEEnergySplash",&DAT_106a2774);
  FUN_10025d70(&DAT_106a2910,(byte *)"CTEExplosion",&DAT_106a2924);
  FUN_10025d70(&DAT_106a2ccc,(byte *)"CTEFizz",&DAT_106a2ce0);
  FUN_10025d70(&DAT_106a2f14,(byte *)"CTEFootprintDecal",&DAT_106a2f28);
  FUN_10025d70(&DAT_106a31c0,(byte *)"CTEGaussExplosion",&DAT_106a31d4);
  FUN_10025d70(&DAT_106a3370,(byte *)"CTEShatterSurface",&DAT_106a3384);
  FUN_10025d70(&DAT_106a393c,(byte *)"CTEGlowSprite",&DAT_106a3950);
  FUN_10025d70(&DAT_106a3be0,(byte *)"CTEImpact",&DAT_106a3bf4);
  FUN_10025d70(&DAT_106a3de0,(byte *)"CTEKillPlayerAttachments",&DAT_106a3df4);
  FUN_10025d70(&DAT_106a3f20,(byte *)"CTELargeFunnel",&DAT_106a3f34);
  FUN_10025d70(&DAT_106a40c4,(byte *)"CTEMuzzleFlash",&DAT_106a40d8);
  FUN_10025d70(&DAT_106a431c,(byte *)"CTEParticleSystem",&DAT_106a4330);
  FUN_10025d70(&DAT_106a44f0,(byte *)"CTEPhysicsProp",&DAT_106a4504);
  FUN_10025d70(&DAT_106a4900,(byte *)"CTEPlayerDecal",&DAT_106a4914);
  FUN_10025d70(&DAT_106a4af8,(byte *)"CTEProjectedDecal",&DAT_106a4b0c);
  FUN_10025d70(&DAT_106a4d4c,(byte *)"CTEShowLine",&DAT_106a4d60);
  FUN_10025d70(&DAT_106a4ea0,(byte *)"CTESmoke",&DAT_106a4eb4);
  FUN_10025d70(&DAT_106a50ec,(byte *)"CTESparks",&DAT_106a5100);
  FUN_10025d70(&DAT_106a52f0,(byte *)"CTESprite",&DAT_106a5304);
  FUN_10025d70(&DAT_106a553c,(byte *)"CTESpriteSpray",&DAT_106a5550);
  FUN_10025d70(&DAT_106a5844,(byte *)"CTEWorldDecal",&DAT_106a5858);
  FUN_10031640(&local_110,(byte *)"map %s\n");
  FUN_10031640(&local_114,(byte *)"tools/%s.dll");
  FUN_10031640(&local_1b4,(byte *)"occlusion_records.%s.%04d.ocr");
  FUN_10034d68("string too long");
  FUN_10034d68("vector<T> too long");
  FUN_10034d96("invalid string position");
  FUN_100391a0(&local_5,"CEngineClient::Sound_ExtraUpdate()",0,"Sound",false,4);
  FUN_1003ef70(&local_110,(byte *)"#valve_hint_alt_%s");
  FUN_1003ff90(*(void **)(param_1 + 4),(int)"Can\'t find assault point");
  FUN_1003ff90(param_1,(int)"Finished scripted sequence");
  FUN_1003ff90(param_1,(int)"Initializing NPC");
  FUN_1003ff90(param_1,(int)"Restoring NPC");
  FUN_1003ff90(this,(int)"Starting a forced interaction");
  FUN_100512d0(DAT_10448634,(int *)&DAT_10459614,iVar3,"water");
  FUN_100512d0(DAT_10448638,(int *)&DAT_10459618,iVar4,"player");
  FUN_100512d0(DAT_1044863c,(int *)&DAT_1045961c,local_8,"facingaway");
  FUN_100512d0(DAT_10448640,(int *)&DAT_10459620,iVar5,"speaker");
  FUN_100512d0(DAT_10448644,(int *)&DAT_10459624,local_c,"spatial");
  FUN_100512d0(DAT_10459630,(int *)&DAT_10459628,local_10,"automatic");
  FUN_100585f0(param_1 + 0xc79,"C_BaseAnimating::m_iv_flPoseParameter");
  FUN_100585f0(piVar2,"C_BaseAnimating::m_iv_flEncodedController");
  FUN_100585f0(this_00,"C_BaseFlex:m_iv_flexWeight");
  FUN_10058660(param_1 + 0xcb6,"C_BaseAnimating::m_iv_flCycle");
  FUN_1005f9f0(&DAT_10603634,"SQUAD_SLOT_ATTACK1",1000000000);
  FUN_1005f9f0(&DAT_10603634,"SQUAD_SLOT_ATTACK2",0x3b9aca01);
  FUN_1005f9f0(&DAT_10603634,"SQUAD_SLOT_EXCLUSIVE_HANDSIGN",0x3b9aca03);
  FUN_1005f9f0(&DAT_10603634,"SQUAD_SLOT_EXCLUSIVE_RELOAD",0x3b9aca04);
  FUN_1005f9f0(&DAT_10603634,"SQUAD_SLOT_INVESTIGATE_SOUND",0x3b9aca02);
  FUN_1005f9f0(&DAT_10603634,"SQUAD_SLOT_PICKUP_WEAPON1",0x3b9aca05);
  FUN_1005f9f0(&DAT_10603634,"SQUAD_SLOT_PICKUP_WEAPON2",0x3b9aca06);
  FUN_1005f9f0(&DAT_10603634,"SQUAD_SLOT_SPECIAL_ATTACK",0x3b9aca07);
  FUN_1005fa20(&DAT_105f9aec,"SCHED_FAIL",1,"schedule","CAI_Agent");
  FUN_1005fa20(&DAT_105f9aec,"SCHED_NONE",0,"schedule","CAI_Agent");
  FUN_1005fa20(&DAT_105f9b04,"TASK_INVALID",0,&DAT_10436788,"CAI_Agent");
  FUN_1005fa20(&DAT_105f9b04,"TASK_SET_SCHEDULE",1,&DAT_10436788,"CAI_Agent");
  FUN_1005fa20(&DAT_105f9b1c,"COND_NONE",0,"condition","CAI_Agent");
  FUN_1005fa20(&DAT_105f9b1c,"COND_NO_CUSTOM_INTERRUPTS",3,"condition","CAI_Agent");
  FUN_1005fa20(&DAT_105f9b1c,"COND_SCHEDULE_DONE",2,"condition","CAI_Agent");
  FUN_1005fa20(&DAT_105f9b1c,"COND_TASK_FAILED",1,"condition","CAI_Agent");
  FUN_1005fa20(&DAT_105facd4,"SCHED_AISCRIPT",0x39,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_ALERT_FACE",5,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_ALERT_FACE_BESTSOUND",6,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_ALERT_REACT_TO_COMBAT_SOUND",7,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_ALERT_SCAN",8,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_ALERT_STAND",9,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_ALERT_WALK",10,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_AMBUSH",0x35,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_ARM_WEAPON",0x31,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_BACK_AWAY_FROM_ENEMY",0x18,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_BACK_AWAY_FROM_SAVE_POSITION",0x1a,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_BIG_FLINCH",0x17,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_CHASE_ENEMY",0x11,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_CHASE_ENEMY_FAILED",0x12,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_COMBAT_FACE",0xc,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_COMBAT_PATROL",0x4c,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_COMBAT_STAND",0xf,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_COMBAT_SWEEP",0xd,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_COMBAT_WALK",0x10,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_COWER",0x29,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_DIE",0x36,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_DIE_RAGDOLL",0x37,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_DISARM_WEAPON",0x32,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_DROPSHIP_DUSTOFF",0x50,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_DUCK_DODGE",0x55,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_ESTABLISH_LINE_OF_FIRE",0x24,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_ESTABLISH_LINE_OF_FIRE_FALLBACK",0x25,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FAIL",0x52,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FAIL_ESTABLISH_LINE_OF_FIRE",0x27,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FAIL_NOSTOP",0x53,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FAIL_TAKE_COVER",0x1f,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FALL_TO_GROUND",0x4f,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FEAR_FACE",0xe,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FLEE_FROM_BEST_SOUND",0x1d,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FLINCH_PHYSICS",0x51,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FORCED_GO",0x48,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_FORCED_GO_RUN",0x49,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_GET_HEALTHKIT",0x43,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_HIDE_AND_RELOAD",0x33,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_IDLE_STAND",1,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_IDLE_WALK",2,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_IDLE_WANDER",3,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_INTERACTION_MOVE_TO_PARTNER",0x56,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_INTERACTION_WAIT_FOR_PARTNER",0x57,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_INVESTIGATE_SOUND",0xb,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_MELEE_ATTACK1",0x2a,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_MELEE_ATTACK2",0x2b,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_MOVE_AWAY",0x45,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_MOVE_AWAY_END",0x47,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_MOVE_AWAY_FAIL",0x46,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_MOVE_AWAY_FROM_ENEMY",0x19,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_MOVE_OFF_OF_NPC",0x23,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_MOVE_TO_WEAPON_RANGE",0x22,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_NEW_WEAPON",0x40,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_NEW_WEAPON_CHEAT",0x41,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_NONE",0,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_NPC_FREEZE",0x4a,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_PATROL_RUN",0x4d,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_PATROL_WALK",0x4b,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_PRE_FAIL_ESTABLISH_LINE_OF_FIRE",0x26,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_RANGE_ATTACK1",0x2c,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_RANGE_ATTACK2",0x2d,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_RELOAD",0x34,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_RUN_FROM_ENEMY",0x20,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_RUN_FROM_ENEMY_FALLBACK",0x21,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_RUN_FROM_ENEMY_MOB",0x54,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_RUN_RANDOM",0x4e,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SCENE_GENERIC",0x3f,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SCRIPTED_CUSTOM_MOVE",0x3c,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SCRIPTED_FACE",0x3e,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SCRIPTED_RUN",0x3b,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SCRIPTED_WAIT",0x3d,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SCRIPTED_WALK",0x3a,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SHOOT_ENEMY_COVER",0x28,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SLEEP",0x58,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SMALL_FLINCH",0x16,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SPECIAL_ATTACK1",0x2e,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SPECIAL_ATTACK2",0x2f,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_STANDOFF",0x30,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_SWITCH_TO_PENDING_WEAPON",0x42,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_TAKE_COVER_FROM_BEST_SOUND",0x1c,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_TAKE_COVER_FROM_ENEMY",0x1b,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_TAKE_COVER_FROM_ORIGIN",0x1e,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_TARGET_CHASE",0x15,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_TARGET_FACE",0x14,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_VICTORY_DANCE",0x13,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_WAIT_FOR_SCRIPT",0x38,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_WAIT_FOR_SPEAK_FINISH",0x44,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facd4,"SCHED_WAKE_ANGRY",4,"schedule","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_ADD_HEALTH",0x92,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_ANNOUNCE_ATTACK",3,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_BIG_FLINCH",0x3d,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_CLEAR_COMMAND_GOAL",0x2a,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_CLEAR_FAIL_SCHEDULE",100,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_CLEAR_HINTNODE",0x54,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_CLEAR_LASTPOSITION",0x22,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_CLEAR_MOVE_WAIT",0x3b,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_CREATE_PENDING_WEAPON",0x1f,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_DEBUG_BREAK",0x91,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_DEFER_DODGE",0x3e,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_DIE",0x72,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_ENABLE_SCRIPT",0x77,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_AWAY_FROM_SAVEPOSITION",0x49,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_ENEMY",0x43,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_HINTNODE",0x44,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_IDEAL",0x3f,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_LASTPOSITION",0x47,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_PATH",0x41,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_PLAYER",0x42,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_REASONABLE",0x40,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_SAVEPOSITION",0x48,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_SCRIPT",0x79,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FACE_TARGET",0x46,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FALL_TO_GROUND",0x8c,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_BACKAWAY_FROM_SAVEPOSITION",0x6d,&DAT_10436788,"CAI_BaseNPC"
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_COVER_FROM_BEST_SOUND",0x6a,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_COVER_FROM_ENEMY",0x6b,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_COVER_FROM_ORIGIN",0x71,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_FAR_NODE_COVER_FROM_ENEMY",0x70,&DAT_10436788,"CAI_BaseNPC")
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_HINTNODE",0x52,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_LATERAL_COVER_FROM_ENEMY",0x6c,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_LOCK_HINTNODE",0x53,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_NEAR_NODE_COVER_FROM_ENEMY",0x6f,&DAT_10436788,"CAI_BaseNPC"
  FUN_1005fa20(&DAT_105facec,"TASK_FIND_NODE_COVER_FROM_ENEMY",0x6e,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FORGET",0x81,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_FREEZE",0x8e,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GATHER_CONDITIONS",0x8f,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_CHASE_PATH_TO_ENEMY",0x14,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_FLANK_ARC_PATH_TO_ENEMY_LOS",0x1a,&DAT_10436788,"CAI_BaseNPC"
  FUN_1005fa20(&DAT_105facec,"TASK_GET_FLANK_RADIUS_PATH_TO_ENEMY_LOS",0x19,&DAT_10436788,
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_AWAY_FROM_BEST_SOUND",0xf,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_OFF_OF_NPC",0x1e,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_BESTSCENT",0x30,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_BESTSOUND",0x2f,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_COMMAND_GOAL",0x28,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_ENEMY",0x12,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_ENEMY_CORPSE",0x16,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_ENEMY_LKP",0x13,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_ENEMY_LKP_LOS",0x15,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_ENEMY_LOS",0x18,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_GOAL",0x11,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_HINTNODE",0x20,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_INTERACTION_PARTNER",0x95,&DAT_10436788,"CAI_BaseNPC"
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_LASTPOSITION",0x2b,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_PLAYER",0x17,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_RANDOM_NODE",0x2e,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_RANGE_ENEMY_LKP_LOS",0x1b,&DAT_10436788,"CAI_BaseNPC"
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_SAVEPOSITION",0x2c,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_SAVEPOSITION_LOS",0x2d,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_TARGET",0x1c,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_GET_PATH_TO_TARGET_WEAPON",0x1d,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_IGNORE_OLD_ENEMIES",0x90,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_INVALID",0,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_ITEM_PICKUP",0x89,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_ITEM_RUN_PATH",0x8a,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_LOCK_HINTNODE",0x55,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_MARK_COMMAND_GOAL_POS",0x29,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_MELEE_ATTACK1",0x4d,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_MELEE_ATTACK2",0x4e,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_MOVE_AWAY_PATH",0xe,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_MOVE_TO_GOAL_RANGE",0xd,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_MOVE_TO_TARGET_RANGE",0xc,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PLANT_ON_SCRIPT",0x78,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PLAY_HINT_ACTIVITY",0x45,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PLAY_PRIVATE_SEQUENCE",0x66,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PLAY_PRIVATE_SEQUENCE_FACE_ENEMY",0x67,&DAT_10436788,
  FUN_1005fa20(&DAT_105facec,"TASK_PLAY_SCENE",0x7a,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PLAY_SCRIPT",0x75,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PLAY_SCRIPT_POST_IDLE",0x76,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PLAY_SEQUENCE",0x65,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PLAY_SEQUENCE_FACE_ENEMY",0x68,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PLAY_SEQUENCE_FACE_TARGET",0x69,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PRE_SCRIPT",0x96,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_PUSH_SCRIPT_ARRIVAL_ACTIVITY",0x74,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RANDOMIZE_FRAMERATE",0x5f,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RANGE_ATTACK1",0x4b,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RANGE_ATTACK2",0x4c,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_REACT_TO_COMBAT_SOUND",0x26,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RELOAD",0x4f,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_REMEMBER",0x80,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RESET_ACTIVITY",1,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RUN_PATH",0x31,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RUN_PATH_FLEE",0x36,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RUN_PATH_FOR_UNITS",0x38,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RUN_PATH_TIMED",0x37,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_RUN_PATH_WITHIN_DIST",0x39,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SCRIPT_CUSTOM_MOVE_TO_TARGET",0xb,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SCRIPT_RUN_TO_TARGET",10,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SCRIPT_WALK_TO_TARGET",9,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SET_ACTIVITY",0x5e,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SET_FAIL_SCHEDULE",0x61,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SET_GOAL",0x10,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SET_IDEAL_YAW_TO_CURRENT",0x4a,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SET_ROUTE_SEARCH_TIME",99,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SET_SCHEDULE",0x60,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SET_TOLERANCE_DISTANCE",0x62,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SMALL_FLINCH",0x3c,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SOUND_ANGRY",0x56,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SOUND_DEATH",0x57,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SOUND_DIE",0x5b,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SOUND_IDLE",0x58,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SOUND_PAIN",0x5a,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SOUND_WAKE",0x59,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SPEAK_SENTENCE",0x5c,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SPECIAL_ATTACK1",0x50,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SPECIAL_ATTACK2",0x51,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_STOP_MOVING",0x7d,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_STORE_BESTSOUND_IN_SAVEPOSITION",0x24,&DAT_10436788,"CAI_BaseNPC"
  FUN_1005fa20(&DAT_105facec,"TASK_STORE_BESTSOUND_REACTORIGIN_IN_SAVEPOSITION",0x25,&DAT_10436788,
  FUN_1005fa20(&DAT_105facec,"TASK_STORE_ENEMY_POSITION_IN_SAVEPOSITION",0x27,&DAT_10436788,
  FUN_1005fa20(&DAT_105facec,"TASK_STORE_LASTPOSITION",0x21,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_STORE_POSITION_IN_SAVEPOSITION",0x23,&DAT_10436788,"CAI_BaseNPC")
  FUN_1005fa20(&DAT_105facec,"TASK_STRAFE_PATH",0x3a,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_SUGGEST_STATE",7,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_TARGET_PLAYER",8,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_TURN_LEFT",0x7e,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_TURN_RIGHT",0x7f,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_USE_SMALL_HULL",0x8b,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT",2,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_FACE_ENEMY",4,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_FACE_ENEMY_RANDOM",5,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_FOR_MOVEMENT",0x82,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_FOR_MOVEMENT_STEP",0x83,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_FOR_SCRIPT",0x73,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_FOR_SPEAK_FINISH",0x5d,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_INDEFINITE",0x7c,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_PVS",6,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_RANDOM",0x7b,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WAIT_UNTIL_NO_DANGER_SOUND",0x84,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WALK_PATH",0x32,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WALK_PATH_FOR_UNITS",0x35,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WALK_PATH_TIMED",0x33,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WALK_PATH_WITHIN_DIST",0x34,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WANDER",0x8d,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WEAPON_CREATE",0x88,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WEAPON_FIND",0x85,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WEAPON_PICKUP",0x86,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105facec,"TASK_WEAPON_RUN_PATH",0x87,&DAT_10436788,"CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_BEHAVIOR_PARAMETERS_CHANGED",0x47,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_BEHIND_ENEMY",0x1d,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_BETTER_WEAPON_AVAILABLE",0x2e,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_CAN_MELEE_ATTACK1",0x17,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_CAN_MELEE_ATTACK2",0x18,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_CAN_RANGE_ATTACK1",0x15,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_CAN_RANGE_ATTACK2",0x16,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_ENEMY_DEAD",0x1e,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_ENEMY_FACING_ME",0x1c,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_ENEMY_OCCLUDED",0xd,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_ENEMY_TOO_FAR",0x1b,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_ENEMY_UNREACHABLE",0x1f,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_ENEMY_WENT_NULL",0xc,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_FLOATING_OFF_GROUND",0x3d,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_GIVE_WAY",0x30,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HAVE_ENEMY_LOS",0xf,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HAVE_TARGET_LOS",0x10,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEALTH_ITEM_AVAILABLE",0x2f,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAR_BUGBAIT",0x34,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAR_BULLET_IMPACT",0x38,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAR_COMBAT",0x35,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAR_DANGER",0x32,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAR_MOVE_AWAY",0x3a,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAR_PHYSICS_DANGER",0x39,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAR_PLAYER",0x37,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAR_THUMPER",0x33,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAR_WORLD",0x36,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_HEAVY_DAMAGE",0x12,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_IDLE_INTERRUPT",2,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_IN_PVS",1,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_LIGHT_DAMAGE",0x11,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_LOST_ENEMY",0xb,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_LOST_PLAYER",0x21,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_LOW_PRIMARY_AMMO",3,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_MOBBED_BY_ENEMIES",0x3e,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NEW_ENEMY",0x1a,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NONE",0,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NOT_FACING_ATTACK",0x28,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NO_CUSTOM_INTERRUPTS",0x46,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NO_HEAR_DANGER",0x3c,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NO_PRIMARY_AMMO",4,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NO_SECONDARY_AMMO",5,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NO_WEAPON",6,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NPC_FREEZE",0x43,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_NPC_UNFREEZE",0x44,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_PHYSICS_DAMAGE",0x13,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_PLAYER_ADDED_TO_SQUAD",0x40,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_PLAYER_PUSHING",0x42,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_PLAYER_REMOVED_FROM_SQUAD",0x41,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_PROVOKED",0x19,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_RECEIVED_ORDERS",0x3f,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_REPEATED_DAMAGE",0x14,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_SCHEDULE_DONE",0x24,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_SEE_DISLIKE",9,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_SEE_ENEMY",10,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_SEE_FEAR",8,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_SEE_HATE",7,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_SEE_NEMESIS",0x22,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_SEE_PLAYER",0x20,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_SMELL",0x25,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_TALKER_RESPOND_TO_QUESTION",0x45,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_TARGET_OCCLUDED",0xe,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_TASK_FAILED",0x23,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_TOO_CLOSE_TO_ATTACK",0x26,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_TOO_FAR_TO_ATTACK",0x27,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_WAY_CLEAR",0x31,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_WEAPON_BLOCKED_BY_FRIEND",0x2a,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_WEAPON_HAS_LOS",0x29,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_WEAPON_PLAYER_IN_SPREAD",0x2b,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_WEAPON_PLAYER_NEAR_TARGET",0x2c,"condition","CAI_BaseNPC");
  FUN_1005fa20(&DAT_105fad04,"COND_WEAPON_SIGHT_OCCLUDED",0x2d,"condition","CAI_BaseNPC");
  FUN_10063ca0(1,0,(uint)"Controllable::OnNewModel");
  FUN_10063ca0(1,0,(uint)"SetNumWheels");
  FUN_10063ca0(1,0,(uint)"clientpropcreate");
  FUN_10063ca0(1,1,(uint)"OnRenderStart->CViewRender::SetUpView");
  FUN_1006c3e0("BigNet",4);
  FUN_1006cf00(param_1 + 0x108d,"C_TIPlayer::m_iv_angEyeAngles");
  FUN_1006cf00(param_1 + 0x1132,"C_TIPlayer::m_iv_zoomSway");
  FUN_1006cf00(param_1 + 0x25,"CPlayerLocalData::m_iv_vecPunchAngle");
  FUN_1006cf00(param_1 + 0x31,"CPlayerLocalData::m_iv_vecPunchAngleVel");
  FUN_1006cf00(param_1 + 0xd14,"CPredictedViewModel::m_LagAnglesHistory");
  FUN_1006cf00(this_00,"C_BaseEntity::m_iv_angRotation");
  FUN_1006cf70(this,"C_BaseEntity::m_iv_vecOrigin");
  FUN_1006cf70(this,"C_BaseFlex::m_iv_viewtarget");
  FUN_1006cf70(this,"C_BasePlayer::m_iv_vecViewOffset");
  FUN_10075520("models/weapons/rocket.mdl");
  FUN_10075520("models/weapons/rocket_deployed.mdl");
  FUN_10075520("models/weapons/rpg7_shrapnel_p1.mdl");
  FUN_10075520("models/weapons/rpg7_shrapnel_p2.mdl");
  FUN_10075520("models/weapons/rpg7_shrapnel_p3.mdl");
  FUN_10076d60(param_1,"addon");
  FUN_10077150(param_1,(int)"models/props_misc/riot_shield-1.mdl");
  FUN_10077150(param_1,(int)"models/vehicles/cars/van-1_npc.mdl");
  FUN_10077210(param_1,"models/animals/malinois.mdl");
  FUN_10077210(param_1,"models/characters/chris.mdl");
  FUN_10077210(param_1,"models/vehicles/cars/van-1_npc.mdl");
  FUN_1007b6d0(param_1,(void *)0x0,"phonemes",'\x01');
  FUN_1007b6d0(param_1,(void *)0x0,"phonemes_strong",'\x01');
  FUN_1007b6d0(param_1,(void *)0x0,"phonemes_weak",'\x01');
  FUN_10089c30(param_1,(byte *)"bbox_corner1",&local_20,local_44);
  FUN_10089c30(param_1,(byte *)"bbox_corner2",&local_14,local_44);
  FUN_10089c30(param_1,(byte *)"bbox_corner3",&local_2c,local_44);
  FUN_10089c30(param_1,(byte *)"bbox_corner4",&local_38,local_44);
  FUN_1008a120((byte *)"scripts/sentences.txt");
  FUN_1008ade0((void *)((int)this + 0x30),param_1,"public");
  FUN_1008ade0((void *)((int)this + 0x30),param_2,"private");
  FUN_100a2860(&local_380,(byte *)"[%4d] %7.2f %7.2f");
  FUN_100a2860(param_1,(byte *)"%s%sSourceBench_%s_%s.csv");
  FUN_100a2860(param_2,(byte *)"%04d_%02d_%02d__%02d_%02d_%02d");
  FUN_100a29b0(param_1 + 1,param_3,(byte *)"factory \"%s\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"a \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"a1 \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"a2 \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"b \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"b1 \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"b2 \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"commands \"%s\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"duration \"%.3f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"fadein \"%.3f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"fadeout \"%.3f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"finalfov \"%f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"font \"%s\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"fovhold \"%f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"fovratein \"%f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"fovrateout \"%f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"fxtime \"%.3f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"g \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"g1 \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"g2 \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"holdtime \"%.3f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"message \"%s\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"name \"%s\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"pausetime \"%f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"playbackrate \"%f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"r \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"r1 \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"r2 \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"sound \"%s\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"spline \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"stayout \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"track \"%i\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"x \"%f\"\n");
  FUN_100a29b0(param_1,param_2,(byte *)"y \"%f\"\n");
  FUN_100a29b0(param_1,param_3,(byte *)"\"%i\"\n");
  FUN_100a2f80(&DAT_10605c88,"modelsounds.cache",5,0,1,0,0,0);
  FUN_100a7bb0("tacint_gamerules",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
  FUN_100a7bb0("vote_controller",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
  FUN_100ae3e0("models/brokenglass_piece.mdl");
  FUN_100ae3e0("models/can.mdl");
  FUN_100ae3e0("models/player.mdl");
  FUN_100ae3e0("models/props_civic/crash_barrel-1.mdl");
  FUN_100ae3e0("models/props_containers/military_case-1.mdl");
  FUN_100ae3e0("models/props_misc/portable_ballistic_wall-1.mdl");
  FUN_100ae3e0("models/props_misc/portable_ballistic_wall_folded.mdl");
  FUN_100ae3e0("models/props_vehicles/cars/broken_parts/wheel-1.mdl");
  FUN_100ae3e0("models/vehicles/cars/truck-4_npc.mdl");
  FUN_100ae3e0("models/vehicles/helicopters/bell212/bell212.mdl");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/inner_piece-1");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/inner_piece-2");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/rotor_blade-1");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/rotor_blade-2");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/shell-1");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/shell-2");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/shell-3");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/shell-4");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/shell-5");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/shell-6");
  FUN_100ae3e0("models/vehicles/planes/777/engine_gibs/shell-7");
  FUN_100ae3e0("models/weapons/c4_charge-1.mdl");
  FUN_100ae3e0("models/weapons/door_charge-1.mdl");
  FUN_100ae3e0("models/weapons/flashbang.mdl");
  FUN_100ae3e0("models/weapons/frag.mdl");
  FUN_100ae3e0("models/weapons/grenade_40mm.mdl");
  FUN_100ae3e0("models/weapons/rocket.mdl");
  FUN_100ae3e0("models/weapons/rocket_deployed.mdl");
  FUN_100ae3e0("models/weapons/rpg7_shrapnel_p1.mdl");
  FUN_100ae3e0("models/weapons/rpg7_shrapnel_p2.mdl");
  FUN_100ae3e0("models/weapons/rpg7_shrapnel_p3.mdl");
  FUN_100ae3e0("models/weapons/smoke.mdl");
  FUN_100ae3e0("models/weapons/w_bullet.mdl");
  FUN_100ae3e0("sprites/bubble.vmt");
  FUN_100ae3e0("sprites/fire_floor.vmt");
  FUN_100ae3e0("sprites/glow_test02.vmt");
  FUN_100ae3e0("sprites/gunsmoke.vmt");
  FUN_100ae3e0("sprites/lgtning.vmt");
  FUN_100ae3e0("sprites/plasma1.vmt");
  FUN_100af5e0(this,pcVar1,"InputRunScript");
  FUN_100b1cb0(param_1,"dog_entity");
  FUN_100b1cb0(param_1,"player");
  FUN_100b2d70(this,"SetParentAttachment",pbVar1,'\0');
  FUN_100b2d70(this,"SetParentAttachmentMaintainOffset",pbVar1,'\x01');
  FUN_100b65f0("__DEMOMESSAGE__");
  FUN_100b6f00(param_1,(uint *)"Damagetype",&DAT_10436dec);
  FUN_100b6f00(param_1,(uint *)"ExplodeDamage",&DAT_10436dec);
  FUN_100b6f00(param_1,(uint *)"PerformanceMode",&DAT_10436dec);
  FUN_100b6f00(param_1,(uint *)"damagetoenablemotion",&DAT_10436dec);
  FUN_100b6f00(param_1,(uint *)"forcetoenablemotion",&DAT_10436dec);
  FUN_100b6f00(param_1,(uint *)"inertiaScale",&DAT_10436e38);
  FUN_100b6f00(param_1,(uint *)"massScale",&DAT_10436dec);
  FUN_100b6f00(param_1,(uint *)"minhealthdmg",&DAT_10436dec);
  FUN_100b6f00(param_1,(uint *)"nodamageforces",&DAT_10436dec);
  FUN_100b6f00(param_1,(uint *)"physdamagescale",&DAT_104388e4);
  FUN_100b6f00(param_1,(uint *)"physicsmode",&DAT_10436de8);
  FUN_100b6f00(param_1,(uint *)"pressuredelay",&DAT_10436dec);
  FUN_100b7ec0(param_1,*(float *)(DAT_10646018 + 0x10) + 0.075,"SDKPushawayThink");
  FUN_100b7ec0(param_1,*(float *)(DAT_10646018 + 0x10) + 1.0,"Context_SUB_Fadeout");
  FUN_100b7ec0(param_1,*(float *)(DAT_10646018 + 0x10),"AmmoBoxThink");
  FUN_100b7ec0(param_1,*(float *)(DAT_10646018 + 0x10),"CarriedContextThink");
  FUN_100b7ec0(param_1,*(float *)(DAT_10646018 + 0x10),"DelayedPushForceThink");
  FUN_100b7ec0(param_1,*(float *)(DAT_10646018 + 0x10),"GrabbedContextThink");
  FUN_100b8210(param_1,&LAB_100e1d80,*(float *)(DAT_10646018 + 0x10) + 0.5,"CloseAreaportalThink");
  FUN_100b8210(param_1,&LAB_1023fe00,*(float *)(DAT_10646018 + 0x10) + 0.75,"DelayedDeployContext");
  FUN_100b8210(param_1,&LAB_102bcba0,*(float *)(DAT_10646018 + 0x10) + 12.0,"Ctx_Vanish");
  FUN_100b8210(param_1,&LAB_103a4a15,*(float *)(DAT_10646018 + 0x10) + 0.05,"DoorSolidityContext");
  FUN_100b8210(param_1,0,*(float *)(DAT_10646018 + 0x10),"CarriedContextThink");
  FUN_100b8210(param_1,0,*(float *)(DAT_10646018 + 0x10),"CloseAreaportalThink");
  FUN_100b8210(param_1,0,*(float *)(DAT_10646018 + 0x10),"DelayedDeployContext");
  FUN_100b8210(param_1,0,*(float *)(DAT_10646018 + 0x10),"MovingSound");
  FUN_100b8210(param_1,0,*(float *)(DAT_10646018 + 0x10),"ShadowCastDistThink");
  FUN_100b8210(param_1,0,-1.0,"AccelerationContext");
  FUN_100b8210(param_1,0,-1.0,"RestoreVelocityContext");
  FUN_100b8210(param_1,0,0.0,"DoorSolidityContext");
  FUN_100b8210(param_1,0,0.0,"Refresh");
  FUN_100b8210(param_1,FUN_10052300,*(float *)(DAT_10646018 + 0x10) + 0.1,"Refresh");
  FUN_100b8210(param_1,FUN_100e1d80,*(float *)(DAT_10646018 + 0x10) + 0.5,"CloseAreaportalThink");
  FUN_100b8210(param_1,FUN_101ebbd0,*(float *)(DAT_10646018 + 0x10) + 5.0,"NavContext");
  FUN_100b8210(param_1,FUN_101efc00,*(float *)(DAT_10646018 + 0x10) + 0.1,"WindThinkContext");
  FUN_100b8210(param_1,FUN_101efc00,*(float *)(DAT_10646018 + 0x10),"WindThinkContext");
  FUN_100b8210(param_1,FUN_1023b010,*(float *)(DAT_10646018 + 0x10) + 0.1,"SpeedHackContext");
  FUN_100b8210(param_1,FUN_1023fe00,*(float *)(DAT_10646018 + 0x10) + 0.75,"DelayedDeployContext");
  FUN_100b8210(param_1,FUN_102a3650,*(float *)(DAT_10646018 + 0x10) + 0.1,"AmmoBoxThink");
  FUN_100b8210(param_1,FUN_102bcba0,*(float *)(DAT_10646018 + 0x10) + 12.0,"Ctx_Vanish");
  FUN_100b8210(param_1,FUN_103a4a15,*(float *)(DAT_10646018 + 0x10) + 0.05,"DoorSolidityContext");
  FUN_100b8210(this,&LAB_1033d120,*(float *)(DAT_10646018 + 0x10) + 0.01,"RestoreVelocityContext");
  FUN_100b8210(this,0,*(float *)(DAT_10646018 + 0x10),"CarriedContextThink");
  FUN_100b8210(this,0,*(float *)(DAT_10646018 + 0x10),"CloseAreaportalThink");
  FUN_100b8210(this,0,*(float *)(DAT_10646018 + 0x10),"DieContext");
  FUN_100b8210(this,0,*(float *)(DAT_10646018 + 0x10),"GrabbedContextThink");
  FUN_100b8210(this,0,0.0,"AreaPortal");
  FUN_100b8210(this,0,0.0,"BaseCombatWeapon_HideThink");
  FUN_100b8210(this,0,0.0,"PROP_CLEARFLAGS");
  FUN_100b8210(this,FUN_100afa70,param_1 + *(float *)(iVar2 + 0x10),"Context_SUB_Fadeout");
  FUN_100b8210(this,FUN_102ecce0,*(float *)(DAT_10646018 + 0x10),"CarriedContextThink");
  FUN_100b8210(this,FUN_1033d120,*(float *)(DAT_10646018 + 0x10) + 0.01,"RestoreVelocityContext");
  FUN_100ba9e0(param_1,(void *)0x0,"phonemes",'\x01');
  FUN_100ba9e0(param_1,(void *)0x0,"phonemes_strong",'\x01');
  FUN_100ba9e0(param_1,(void *)0x0,"phonemes_weak",'\x01');
  FUN_100c8400(&DAT_10769770,"CurrentTimescale",FUN_1010e320);
  FUN_100c8400(&DAT_1076977c,"DesiredTimescale",FUN_1010e4a0);
  FUN_100c8400(&DAT_1079b2e4,"ReloadEffect",FUN_1003ffb0);
  FUN_100c8400(&DAT_1079b4bc,"SetFOV",FUN_10274b90);
  FUN_100c8400(&DAT_1079e558,"AchNotify",FUN_1027bc80);
  FUN_100c8400(&DAT_1079e564,"IncUserStat",FUN_1003ffb0);
  FUN_100c8400(&DAT_1079e570,"IncUserStatW",FUN_1003ffb0);
  FUN_100c8400(&DAT_1079e57c,"Achieve",FUN_1003ffb0);
  FUN_100c8400(&DAT_1079ff70,"DogMarker",FUN_102899c0);
  FUN_100c8400(&DAT_107a94ac,"AddLocator",FUN_102f7d40);
  FUN_100c8670(this,param_1,"CSlideshowDisplayScreen",iVar2,iVar1);
  FUN_100caca0(this,param_1,"BalanceUIPanel",0);
  FUN_100caca0(this,param_1,"ColorCurvesUIPanel",0);
  FUN_100caca0(this,param_1,"LevelsUIPanel",0);
  FUN_100caca0(this,param_1,"LookupUIPanel",0);
  FUN_100caca0(this,param_1,"SelectedHSVUIPanel",0);
  FUN_100cb630(local_24,"d:\\projects\\ti\\release\\ti_rel\\src\\game\\client\\c_baseentity.cpp",
  FUN_100d0610(&DAT_105a0e40,(int *)this,"_DisableUpdateTarget",0.0,(int *)this,(int *)this,0.0);
  FUN_100d0610(&DAT_105a0e40,(int *)this,"_EnableUpdateTarget",0.5,(int *)this,(int *)this,0.0);
  FUN_100d0610(&DAT_105a0e40,*(int **)((int)param_1 + 0x7ec),"kill",5.0,(int *)0x0,(int *)0x0,0.0);
  FUN_100d0680(&DAT_105a0e40,(int *)this,"SetPosition",in_stack_ffffffbc,in_stack_ffffffc0,fVar6,
  FUN_100d5a00(&DAT_1060b988,"CDirtySpatialPartitionEntityList");
  FUN_100daf30(&local_1c,(byte *)"WARNING:  CL_FlushEntityPacket, %s");
  FUN_100daf30(&local_20,(byte *)"IO stats from the last %d frames.\n");
  FUN_100daf30(&local_48,(byte *)"Running min frametime: %f, running avg frametime: %f\n");
  FUN_100df8f0(&DAT_1060ced8,"CDecalEmitterSystem");
  FUN_100dfb10(param_3,0,0.0,1.0,0.8,0.8,1.0,(int)"This model has problems! See a programmer!");
  FUN_100e0400((void *)(param_1 + -4),(uint *)"scripts/decals_subrect.txt");
  FUN_100e33b0(&local_5,"WriteCmdInfo()\n");
  FUN_100e33b0(&local_5,"WriteFileBytes()\n");
  FUN_100e33b0((void *)((int)&param_1 + 3),"WriteCmdHeader()...");
  FUN_100e33b0((void *)((int)&uStack8 + 3),"WriteConsoleCommand()\n");
  FUN_100e33b0((void *)((int)&uStack8 + 3),"WriteCustomData()\n");
  FUN_100e33b0((void *)((int)&uStack8 + 3),"WriteDemoHeader()\n");
  FUN_100e33b0((void *)((int)&uStack8 + 3),"WriteNetworkDataTables()\n");
  FUN_100e33b0((void *)((int)&uStack8 + 3),"WriteRawData()\n");
  FUN_100e33b0((void *)((int)&uStack8 + 3),"WriteSequenceInfo()\n");
  FUN_100e33b0((void *)((int)&uStack8 + 3),"WriteStringTables()\n");
  FUN_100e33b0((void *)((int)&uStack8 + 3),"WriteUserCmd()\n");
  FUN_100e59e0("session_end",param_1);
  FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"npc_helicopter_circle");
  FUN_100eefd0(&DAT_107670e0,"CDirtySpatialPartitionEntityList");
  FUN_100f7330(&DAT_10767828,"CDecalEmitterSystem");
  FUN_100f7dd0((void *)(param_1 + -4),(uint *)"scripts/decals_subrect.txt");
  FUN_100fec60("AE_ALLOW_MOVEMENT",0x3b,0x11);
  FUN_100fec60("AE_AMMOCRATE_PICKUP_AMMO",0x18,1);
  FUN_100fec60("AE_ASW_FOOTSTEP",0x2e,0x10);
  FUN_100fec60("AE_CLIENT_EFFECT_ATTACH",0x14,0x10);
  FUN_100fec60("AE_CL_ADD_PARTICLE_EFFECT_CP",0x22,0x10);
  FUN_100fec60("AE_CL_BODYGROUP_SET_VALUE",0x27,0x10);
  FUN_100fec60("AE_CL_BODYGROUP_SET_VALUE_CMODEL_WPN",0x28,0x10);
  FUN_100fec60("AE_CL_CREATE_PARTICLE_BRASS",0x23,0x10);
  FUN_100fec60("AE_CL_CREATE_PARTICLE_EFFECT",0x20,0x10);
  FUN_100fec60("AE_CL_DISABLE_BODYGROUP",0x26,0x10);
  FUN_100fec60("AE_CL_ENABLE_BODYGROUP",0x25,0x10);
  FUN_100fec60("AE_CL_PLAYSOUND",0xf,0x10);
  FUN_100fec60("AE_CL_STOPSOUND",0x11,0x10);
  FUN_100fec60("AE_CL_STOP_PARTICLE_EFFECT",0x21,0x10);
  FUN_100fec60("AE_COMBO_TRANSITION",0x3a,0x11);
  FUN_100fec60("AE_EMPTY",0,1);
  FUN_100fec60("AE_MARINE_FOOTSTEP",0x2f,0x10);
  FUN_100fec60("AE_MARINE_RELOAD_SOUND_A",0x30,0x10);
  FUN_100fec60("AE_MARINE_RELOAD_SOUND_B",0x31,0x10);
  FUN_100fec60("AE_MARINE_RELOAD_SOUND_C",0x32,0x10);
  FUN_100fec60("AE_MELEE_DAMAGE",0x34,0x11);
  FUN_100fec60("AE_MELEE_START_COLLISION_DAMAGE",0x35,0x11);
  FUN_100fec60("AE_MELEE_STOP_COLLISION_DAMAGE",0x36,0x11);
  FUN_100fec60("AE_MUZZLEFLASH",0x15,0x10);
  FUN_100fec60("AE_NPC_180TURN",6,1);
  FUN_100fec60("AE_NPC_ADDGESTURE",0x1a,1);
  FUN_100fec60("AE_NPC_ATTACK_BROADCAST",0x1c,1);
  FUN_100fec60("AE_NPC_BODYDROP_HEAVY",4,1);
  FUN_100fec60("AE_NPC_BODYDROP_LIGHT",3,1);
  FUN_100fec60("AE_NPC_DRAW",0xd,1);
  FUN_100fec60("AE_NPC_HOLSTER",0xc,1);
  FUN_100fec60("AE_NPC_HURT_INTERACTION_PARTNER",0x1d,1);
  FUN_100fec60("AE_NPC_ITEM_PICKUP",7,1);
  FUN_100fec60("AE_NPC_LEFTFOOT",1,1);
  FUN_100fec60("AE_NPC_MUZZLEFLASH",0x16,0x10);
  FUN_100fec60("AE_NPC_RAGDOLL",0x19,1);
  FUN_100fec60("AE_NPC_RESTARTGESTURE",0x1b,1);
  FUN_100fec60("AE_NPC_RIGHTFOOT",2,1);
  FUN_100fec60("AE_NPC_SET_INTERACTION_CANTDIE",0x1e,1);
  FUN_100fec60("AE_NPC_SWISHSOUND",5,1);
  FUN_100fec60("AE_NPC_WEAPON_DROP",8,1);
  FUN_100fec60("AE_NPC_WEAPON_FIRE",0xe,9);
  FUN_100fec60("AE_NPC_WEAPON_SET_ACTIVITY",0xb,1);
  FUN_100fec60("AE_NPC_WEAPON_SET_SEQUENCE_NAME",9,1);
  FUN_100fec60("AE_NPC_WEAPON_SET_SEQUENCE_NUMBER",10,1);
  FUN_100fec60("AE_RAGDOLL",0x24,1);
  FUN_100fec60("AE_REMOVE_CLIENT_AIM",0x33,0x10);
  FUN_100fec60("AE_SCREEN_SHAKE",0x37,0x10);
  FUN_100fec60("AE_SKILL_EVENT",0x3c,0x11);
  FUN_100fec60("AE_START_DETECTING_COMBO",0x38,0x11);
  FUN_100fec60("AE_START_SCRIPTED_EFFECT",0x12,1);
  FUN_100fec60("AE_STOP_DETECTING_COMBO",0x39,0x11);
  FUN_100fec60("AE_STOP_SCRIPTED_EFFECT",0x13,1);
  FUN_100fec60("AE_SV_DUSTTRAIL",0x1f,1);
  FUN_100fec60("AE_SV_PLAYSOUND",0x10,1);
  FUN_100fec60("AE_THUMPER_THUMP",0x17,1);
  FUN_100fec60("AE_TUG_INCAP",0x3d,1);
  FUN_100fec60("AE_WPN_HIDE",0x2b,0x11);
  FUN_100fec60("AE_WPN_INCREMENTAMMO",0x2a,0x11);
  FUN_100fec60("AE_WPN_PLAYWPNSOUND",0x2d,0x11);
  FUN_100fec60("AE_WPN_PRIMARYATTACK",0x29,0x11);
  FUN_100fec60("AE_WPN_UNHIDE",0x2c,0x11);
  FUN_100ff6e0(&DAT_10713344,&DAT_107133ec,4,"DT_LocalActiveWeaponData");
  FUN_100ff6e0(&DAT_1071335c,&DAT_1071351c,4,"DT_LocalWeaponData");
  FUN_100ff6e0(&DAT_10713374,&DAT_1071364c,7,"DT_BaseCombatWeapon");
  FUN_100ff6e0(&DAT_10713fc0,&DAT_1071401c,7,"DT_BaseGrenade");
  FUN_100ff6e0(&DAT_107141c4,&DAT_1071421c,1,"DT_BaseParticleEntity");
  FUN_100ff6e0(&DAT_10714710,&DAT_107147b4,1,"DT_PlayerState");
  FUN_100ff6e0(&DAT_10714728,&DAT_10714834,0x16,"DT_LocalPlayerExclusive");
  FUN_100ff6e0(&DAT_10714740,&DAT_10714d9c,0x20,"DT_BasePlayer");
  FUN_100ff6e0(&DAT_1071562c,&DAT_10715684,0xb,"DT_BaseViewModel");
  FUN_100ff6e0(&DAT_10715920,&DAT_107159ac,2,"DT_BeamPredictableId");
  FUN_100ff6e0(&DAT_10715938,&DAT_10715a64,0x19,"DT_Beam");
  FUN_100ff6e0(&DAT_10716094,&DAT_107160ec,0xc,"DT_AI_BaseNPC");
  FUN_100ff6e0(&DAT_107167b8,&DAT_107186cc,1,"DT_ServerAnimationData");
  FUN_100ff6e0(&DAT_107167d0,&DAT_1071874c,0x17,"DT_BaseAnimating");
  FUN_100ff6e0(&DAT_10716a70,&DAT_10718d2c,3,"DT_BoneFollower");
  FUN_100ff6e0(&DAT_10719278,&DAT_107192fc,5,"DT_Animationlayer");
  FUN_100ff6e0(&DAT_10719290,&DAT_1071946c,1,"DT_OverlayVars");
  FUN_100ff6e0(&DAT_107192a8,&DAT_107194ec,2,"DT_BaseAnimatingOverlay");
  FUN_100ff6e0(&DAT_107195a4,&DAT_1071962c,1,"DT_BCCLocalPlayerExclusive");
  FUN_100ff6e0(&DAT_107195bc,&DAT_107196a8,0,"DT_BCCNonLocalPlayerExclusive");
  FUN_100ff6e0(&DAT_107195d4,&DAT_107196ec,5,"DT_BaseCombatCharacter");
  FUN_100ff6e0(&DAT_1071981c,&DAT_10719874,2,"DT_BaseDoor");
  FUN_100ff6e0(&DAT_10719c38,&DAT_10719ffc,1,"DT_AnimTimeMustBeFirst");
  FUN_100ff6e0(&DAT_10719c84,&DAT_1071a07c,2,"DT_PredictableId");
  FUN_100ff6e0(&DAT_10719c9c,&DAT_1071a134,0x26,"DT_BaseEntity");
  FUN_100ff6e0(&DAT_1071b950,&DAT_1071ba2c,1,"DT_BaseFlex");
  FUN_100ff6e0(&DAT_1071c328,&DAT_1071c3a4,0x21,"DT_Local");
  FUN_100ff6e0(&DAT_1071cb98,&DAT_1071cc5c,4,"DT_BaseToggle");
  FUN_100ff6e0(&DAT_1071cc08,&DAT_1071cdcc,2,"DT_BaseButton");
  FUN_100ff6e0(&DAT_1071cef8,&DAT_1071cf54,9,"DT_BeamSpotlight");
  FUN_100ff6e0(&DAT_1071d174,&DAT_1071d1cc,2,"DT_BreakableProp");
  FUN_100ff6e0(&DAT_1071d2f8,&DAT_1071d34c,0xd,"DT_ColorCorrection");
  FUN_100ff6e0(&DAT_1071d65c,&DAT_1071d6b4,6,"DT_ColorCorrectionVolume");
  FUN_100ff6e0(&DAT_1071d820,&DAT_1071d874,8,"DT_DynamicLight");
  FUN_100ff6e0(&DAT_1071dab8,&DAT_1071db0c,0xb,"DT_EntityDissolve");
  FUN_100ff6e0(&DAT_1071dda4,&DAT_1071ddfc,3,"DT_EntityFlame");
  FUN_100ff6e0(&DAT_1071df10,&DAT_1071df64,5,"DT_EntityFreezing");
  FUN_100ff6e0(&DAT_1071e094,&DAT_1071e0ec,4,"DT_EntityParticleTrail");
  FUN_100ff6e0(&DAT_1071e278,&DAT_1071e2cc,2,"DT_EnvAmbientLight");
  FUN_100ff6e0(&DAT_107262d0,&DAT_1072644c,8,"DT_CascadeLight");
  FUN_100ff6e0(&DAT_10726630,&DAT_10726684,8,"DT_EnvDOFController");
  FUN_100ff6e0(&DAT_10726868,&DAT_107268bc,0x12,"DT_FogController");
  FUN_100ff6e0(&DAT_10726cfc,&DAT_10726d54,2,"DT_EnvParticleScript");
  FUN_100ff6e0(&DAT_10726dd0,&DAT_10726e7c,0x17,"DT_EnvProjectedTexture");
  FUN_100ff6e0(&DAT_107273e4,&DAT_10727454,8,"DT_EnvScreenOverlay");
  FUN_100ff6e0(&DAT_107273fc,&DAT_10727674,3,"DT_EnvScreenEffect");
  FUN_100ff6e0(&DAT_1072772c,&DAT_10727784,0xe,"DT_EnvTonemapController");
  FUN_100ff6e0(&DAT_10727ad0,&DAT_10727b24,7,"DT_FireSmoke");
  FUN_100ff6e0(&DAT_10727d28,&DAT_10727d7c,8,"DT_CFish");
  FUN_100ff6e0(&DAT_10727f60,&DAT_10727fb4,5,"DT_FuncAreaPortalWindow");
  FUN_100ff6e0(&DAT_107280e8,&DAT_10728164,10,"DT_BreakableSurface");
  FUN_100ff6e0(&DAT_107283c0,&DAT_10728414,1,"DT_FuncBrush");
  FUN_100ff6e0(&DAT_10728454,&DAT_107284ac,2,"DT_FuncConveyor");
  FUN_100ff6e0(&DAT_10728528,&DAT_107285c4,0xc,"DT_Func_Dust");
  FUN_100ff6e0(&DAT_10728570,&DAT_107288d4,4,"DT_TEDust");
  FUN_100ff6e0(&DAT_10728a20,&DAT_10728a74,10,"DT_FuncElevator");
  FUN_100ff6e0(&DAT_10728cd0,&DAT_10728d24,3,"DT_Func_LOD");
  FUN_100ff6e0(&DAT_10728ddc,&DAT_10728e34,1,"DT_FuncMonitor");
  FUN_100ff6e0(&DAT_10728e74,&DAT_10728ecc,3,"DT_FuncMoveLinear");
  FUN_100ff6e0(&DAT_10728f84,&DAT_10728fdc,3,"DT_FuncOccluder");
  FUN_100ff6e0(&DAT_10729098,&DAT_107290f4,1,"DT_FuncReflectiveGlass");
  FUN_100ff6e0(&DAT_10729134,&DAT_1072918c,6,"DT_FuncRotating");
  FUN_100ff6e0(&DAT_107292f8,&DAT_1072934c,0xd,"DT_FuncSmokeVolume");
  FUN_100ff6e0(&DAT_1072965c,&DAT_107296b4,1,"DT_FuncTrackTrain");
  FUN_100ff6e0(&DAT_10729aec,&DAT_10729b64,2,"DT_InfoOverlayAccessor");
  FUN_100ff6e0(&DAT_10729c68,&DAT_10729cbc,0xc,"DT_LightGlow");
  FUN_100ff6e0(&DAT_10729fe8,&DAT_1072a044,0xe,"DT_MaterialModifyControl");
  FUN_100ff6e0(&DAT_1072a394,&DAT_1072a404,0xf,"DT_ParticleSystem");
  FUN_100ff6e0(&DAT_1072a790,&DAT_1072a7fc,2,"DT_PhysBox");
  FUN_100ff6e0(&DAT_1072a7a8,&DAT_1072a8b4,1,"DT_Breakable");
  FUN_100ff6e0(&DAT_1072a8f4,&DAT_1072a94c,6,"DT_StatueProp");
  FUN_100ff6e0(&DAT_1072aab8,&DAT_1072abbc,3,"DT_PhysicsProp");
  FUN_100ff6e0(&DAT_1072ac74,&DAT_1072accc,1,"DT_PhysMagnet");
  FUN_100ff6e0(&DAT_1072af18,&DAT_1072af6c,8,"DT_Plasma");
  FUN_100ff6e0(&DAT_1072b154,&DAT_1072b204,7,"DT_PlayerResource");
  FUN_100ff6e0(&DAT_1072b3b8,&DAT_1072b414,10,"DT_PointCamera");
  FUN_100ff6e0(&DAT_1072b690,&DAT_1072b6e4,3,"DT_PostProcessController");
  FUN_100ff6e0(&DAT_1072b7a0,&DAT_1072b7f4,4,"DT_Prop_Hallucination");
  FUN_100ff6e0(&DAT_1072b8e8,&DAT_1072b99c,3,"DT_DynamicProp");
  FUN_100ff6e0(&DAT_1072b900,&DAT_1072ba94,3,"DT_BasePropDoor");
  FUN_100ff6e0(&DAT_1072b918,&DAT_1072bb8c,1,"DT_PropDoorRotating");
  FUN_100ff6e0(&DAT_1072b930,&DAT_1072bc0c,3,"DT_PhysBoxMultiplayer");
  FUN_100ff6e0(&DAT_1072b948,&DAT_1072bd04,7,"DT_PhysicsPropMultiplayer");
  FUN_100ff6e0(&DAT_1072beac,&DAT_1072bf04,1,"DT_RagdollManager");
  FUN_100ff6e0(&DAT_1072bf48,&DAT_1072c74c,0x17,"DT_RopeKeyframe");
  FUN_100ff6e0(&DAT_1072e878,&DAT_1072e97c,7,"DT_SceneEntity");
  FUN_100ff6e0(&DAT_1072eb24,&DAT_1072eb7c,6,"DT_ShadowControl");
  FUN_100ff6e0(&DAT_1072ecfc,&DAT_1072ed54,9,"DT_SlideshowDisplay");
  FUN_100ff6e0(&DAT_1072f214,&DAT_1072f26c,6,"DT_SpatialEntity");
  FUN_100ff6e0(&DAT_1072f3d8,&DAT_1072f42c,3,"DT_SpotlightEnd");
  FUN_100ff6e0(&DAT_1072f570,&DAT_1072f5c4,3,"DT_ParticlePerformanceMonitor");
  FUN_100ff6e0(&DAT_1072f680,&DAT_1072f6dc,0xf,"DT_Sun");
  FUN_100ff6e0(&DAT_1072fa64,&DAT_1072facc,6,"DT_Team");
  FUN_100ff6e0(&DAT_1072fc38,&DAT_1072fc8c,3,"DT_Tesla");
  FUN_100ff6e0(&DAT_1072fd48,&DAT_1072fddc,1,"DT_ProxyToggle_ProxiedData");
  FUN_100ff6e0(&DAT_1072fd60,&DAT_1072fe5c,2,"DT_ProxyToggle");
  FUN_100ff6e0(&DAT_1072fedc,&DAT_1072ff6c,3,"DT_BaseTrigger");
  FUN_100ff6e0(&DAT_1072fef4,&DAT_10730064,1,"DT_TriggerPlayerMovement");
  FUN_100ff6e0(&DAT_1072ff14,&DAT_107300e4,1,"DT_BaseVPhysicsTrigger");
  FUN_100ff6e0(&DAT_1073014c,&DAT_107301a4,8,"DT_VGuiScreen");
  FUN_100ff6e0(&DAT_10730388,&DAT_107303dc,1,"DT_WaterBullet");
  FUN_100ff6e0(&DAT_1073041c,&DAT_10730474,3,"DT_WaterLODControl");
  FUN_100ff6e0(&DAT_10730550,&DAT_107305ac,0x15,"DT_World");
  FUN_100ff6e0(&DAT_10767190,&DAT_1076723c,8,"DT_CollisionProperty");
  FUN_100ff6e0(&DAT_10767e64,&DAT_10767ebc,0x17,"DT_EffectData");
  FUN_100ff6e0(&DAT_10768494,&DAT_107684ec,3,"DT_EntityParticleTrailInfo");
  FUN_100ff6e0(&DAT_107685a8,&DAT_107685fc,2,"DT_DetailController");
  FUN_100ff6e0(&DAT_10769008,&DAT_1076907c,5,"DT_FuncLadder");
  FUN_100ff6e0(&DAT_10769028,&DAT_1076920c,1,"DT_InfoLadderDismount");
  FUN_100ff6e0(&DAT_107699b0,&DAT_10769a5c,0,"DT_GameRulesProxy");
  FUN_100ff6e0(&DAT_1076df88,&DAT_1076dffc,6,"DT_GlowProperty");
  FUN_100ff6e0(&DAT_10777f6c,&DAT_107780b4,0,"DT_ParticleProperty");
  FUN_100ff6e0(&DAT_1077b5a8,&DAT_1077b5fc,0xc,"DT_PoseController");
  FUN_100ff6e0(&DAT_1077bad0,&DAT_1077bbd4,1,"DT_PredictedViewModel");
  FUN_100ff6e0(&DAT_1077c3cc,&DAT_1077c524,8,"DT_Ragdoll");
  FUN_100ff6e0(&DAT_1077c494,&DAT_1077c744,5,"DT_Ragdoll_Attached");
  FUN_100ff6e0(&DAT_1077e97c,&DAT_1077e9ec,0xc,"DT_Sprite");
  FUN_100ff6e0(&DAT_1077e998,&DAT_1077ed0c,1,"DT_SpriteOriented");
  FUN_100ff6e0(&DAT_1077ed60,&DAT_1077edfc,9,"DT_SpriteTrail");
  FUN_100ff6e0(&DAT_1077f398,&DAT_1077f3ec,3,"DT_HandleTest");
  FUN_100ff6e0(&DAT_1077fc24,&DAT_1077fd0c,1,"DT_IntervalTimer");
  FUN_100ff6e0(&DAT_1077fc3c,&DAT_1077fd8c,2,"DT_CountdownTimer");
  FUN_100ff6e0(&DAT_1077fc58,&DAT_1077fe64,7,"DT_Timeline");
  FUN_100ff6e0(&DAT_10793e08,&DAT_10793e6c,4,"DT_Smoker");
  FUN_100ff6e0(&DAT_10793f60,&DAT_10793fc4,5,"DT_Spiller");
  FUN_100ff6e0(&DAT_10794144,&DAT_1079419c,0xc,"DT_TEFireBullets");
  FUN_100ff6e0(&DAT_1079afac,&DAT_1079b004,4,"DT_TIPlayerResource");
  FUN_100ff6e0(&DAT_1079b0fc,&DAT_1079b9bc,2,"DT_TEPlayerAnimEvent");
  FUN_100ff6e0(&DAT_1079b2f0,&DAT_1079ba74,0x21,"DT_TILocalPlayerExclusive");
  FUN_100ff6e0(&DAT_1079b308,&DAT_1079c274,7,"DT_TIRemotePlayerExclusive");
  FUN_100ff6e0(&DAT_1079b320,&DAT_1079c45c,0x35,"DT_TIPlayer");
  FUN_100ff6e0(&DAT_1079d388,&DAT_1079d3dc,9,"DT_TIPlayerRagdoll");
  FUN_100ff6e0(&DAT_1079d658,&DAT_1079d704,3,"DT_PropBomb");
  FUN_100ff6e0(&DAT_1079d7bc,&DAT_1079d814,5,"DT_PropFireExtinguisher");
  FUN_100ff6e0(&DAT_1079d944,&DAT_1079d99c,4,"DT_PropPropaneTank");
  FUN_100ff6e0(&DAT_1079da90,&DAT_1079dafc,2,"DT_PropRetrieval");
  FUN_100ff6e0(&DAT_1079daa8,&DAT_1079dbb4,1,"DT_AmmoBag");
  FUN_100ff6e0(&DAT_1079dbf8,&DAT_1079dcfc,3,"DT_PropShield");
  FUN_100ff6e0(&DAT_1079ddb4,&DAT_1079de0c,1,"DT_PropSpareTire");
  FUN_100ff6e0(&DAT_1079de4c,&DAT_1079deec,0xd,"DT_TITeam");
  FUN_100ff6e0(&DAT_1079de64,&DAT_1079e23c,1,"DT_TITeam_Unassigned");
  FUN_100ff6e0(&DAT_1079de7c,&DAT_1079e2bc,1,"DT_TITeam_Blue");
  FUN_100ff6e0(&DAT_1079de94,&DAT_1079e33c,1,"DT_TITeam_Red");
  FUN_100ff6e0(&DAT_1079e37c,&DAT_1079e3d4,6,"DT_VoteController");
  FUN_100ff6e0(&DAT_1079e5f8,&DAT_1079e66c,5,"DT_GameZone");
  FUN_100ff6e0(&DAT_1079e610,&DAT_1079e7dc,1,"DT_FuncTeamClip");
  FUN_100ff6e0(&DAT_1079e81c,&DAT_1079e874,1,"DT_FuncStageBlocker");
  FUN_100ff6e0(&DAT_1079e8b4,&DAT_1079e90c,1,"DT_InfoVIP_CaseGoal");
  FUN_100ff6e0(&DAT_1079e94c,&DAT_1079e9bc,0x10,"DT_NPCTrackPlane");
  FUN_100ff6e0(&DAT_1079e964,&DAT_1079edbc,1,"DT_LargeMetalGib");
  FUN_100ff6e0(&DAT_1079edfc,&DAT_1079ee54,5,"DT_NPCTrackVehicle");
  FUN_100ff6e0(&DAT_1079f038,&DAT_1079f244,0xb,"DT_NPCVehicle");
  FUN_100ff6e0(&DAT_1079f4dc,&DAT_1079f534,1,"DT_PropBreakdown");
  FUN_100ff6e0(&DAT_1079f798,&DAT_1079f7ec,1,"DT_PointPusher");
  FUN_100ff6e0(&DAT_1079f82c,&DAT_1079f884,3,"DT_PropAmmoBox");
  FUN_100ff6e0(&DAT_1079f93c,&DAT_1079f994,2,"DT_PropBallisticBlockade");
  FUN_100ff6e0(&DAT_1079fb30,&DAT_1079fb84,3,"DT_PropRappelPoint");
  FUN_100ff6e0(&DAT_1079fd48,&DAT_1079fd9c,5,"DT_Inferno");
  FUN_100ff6e0(&DAT_1079fee8,&DAT_1079ffbc,2,"DT_TEDogAnimEvent");
  FUN_100ff6e0(&DAT_1079ff00,&DAT_107a0074,8,"DT_Dog");
  FUN_100ff6e0(&DAT_107a0270,&DAT_107a0814,2,"DT_TEHostageAnimEvent");
  FUN_100ff6e0(&DAT_107a0288,&DAT_107a08cc,0x17,"DT_Hostage");
  FUN_100ff6e0(&DAT_107a0e70,&DAT_107a0ec4,8,"DT_TEHostageFireBullets");
  FUN_100ff6e0(&DAT_107a1900,&DAT_107a1954,2,"DT_BaseCarriable");
  FUN_100ff6e0(&DAT_107a1db8,&DAT_107a1e24,8,"DT_SDKSharedLocalPlayerExclusive");
  FUN_100ff6e0(&DAT_107a1dd0,&DAT_107a2044,0x17,"DT_TIPlayerShared");
  FUN_100ff6e0(&DAT_107a271c,&DAT_107a2774,1,"DT_TIViewModel");
  FUN_100ff6e0(&DAT_107a29a4,&DAT_107a2adc,0x1d,"DT_TIGameRules");
  FUN_100ff6e0(&DAT_107a29c0,&DAT_107a31ec,2,"DT_TIGameRulesProxy");
  FUN_100ff6e0(&DAT_107a36d8,&DAT_107a377c,1,"DT_TIStaticGlobals");
  FUN_100ff6e0(&DAT_107a36f4,&DAT_107a37fc,1,"DT_TIStaticGlobalsProxy");
  FUN_100ff6e0(&DAT_107a38a0,&DAT_107a38fc,1,"DT_NPC_Vip");
  FUN_100ff6e0(&DAT_107a3940,&DAT_107a3cb4,1,"DT_BaseBoatControllable");
  FUN_100ff6e0(&DAT_107a4068,&DAT_107a4164,1,"DT_Helicopter_CT");
  FUN_100ff6e0(&DAT_107a4080,&DAT_107a41e4,1,"DT_Helicopter_Ter");
  FUN_100ff6e0(&DAT_107a4098,&DAT_107a4264,1,"DT_Helicopter_Mafia");
  FUN_100ff6e0(&DAT_107a40b0,&DAT_107a42e4,2,"DT_BaseHelicopterControllable");
  FUN_100ff6e0(&DAT_107a43bc,&DAT_107a451c,0x10,"DT_BasePlayerControllable");
  FUN_100ff6e0(&DAT_107a48f4,&DAT_107a4b7c,0xe,"DT_BaseVPhysicsControllable");
  FUN_100ff6e0(&DAT_107a5174,&DAT_107a529c,0x11,"DT_BaseWheeledControllable");
  FUN_100ff6e0(&DAT_107a56dc,&DAT_107a5734,1,"DT_RealWheeledControllable");
  FUN_100ff6e0(&DAT_107a57d0,&DAT_107a5824,5,"DT_BaseGrenadeProjectile");
  FUN_100ff6e0(&DAT_107a59d0,&DAT_107a5bfc,9,"DT_WeaponTIBaseLocal");
  FUN_100ff6e0(&DAT_107a59e8,&DAT_107a5e5c,4,"DT_WeaponTIBase");
  FUN_100ff6e0(&DAT_107a6060,&DAT_107a60cc,0xd,"DT_LocalActiveMeleeData");
  FUN_100ff6e0(&DAT_107a6078,&DAT_107a641c,2,"DT_WeaponSDKMelee");
  FUN_100ff6e0(&DAT_107a6498,&DAT_107a64f4,1,"DT_WeaponKnife");
  FUN_100ff6e0(&DAT_107a6570,&DAT_107a65cc,1,"DT_WeaponGSR1911");
  FUN_100ff6e0(&DAT_107a6648,&DAT_107a66a4,1,"DT_WeaponMR96");
  FUN_100ff6e0(&DAT_107a6720,&DAT_107a677c,1,"DT_WeaponMTX");
  FUN_100ff6e0(&DAT_107a67f8,&DAT_107a6854,1,"DT_WeaponP2000");
  FUN_100ff6e0(&DAT_107a68d0,&DAT_107a692c,1,"DT_WeaponP250");
  FUN_100ff6e0(&DAT_107a69a8,&DAT_107a6a04,1,"DT_WeaponSphinx");
  FUN_100ff6e0(&DAT_107a6a80,&DAT_107a6adc,1,"DT_WeaponVertec");
  FUN_100ff6e0(&DAT_107a6b58,&DAT_107a6bb4,1,"DT_WeaponXD45");
  FUN_100ff6e0(&DAT_107a6c34,&DAT_107a6c8c,2,"DT_PropBreachingCharge");
  FUN_100ff6e0(&DAT_107a6d0c,&DAT_107a6d64,2,"DT_PropC4Charge");
  FUN_100ff6e0(&DAT_107a6de0,&DAT_107a6e3c,1,"DT_WeaponC4Detonator");
  FUN_100ff6e0(&DAT_107a6eb8,&DAT_107a6f2c,3,"DT_WeaponM320");
  FUN_100ff6e0(&DAT_107a6ed4,&DAT_107a705c,2,"DT_40MMGrenade");
  FUN_100ff6e0(&DAT_107a70d8,&DAT_107a7134,1,"DT_WeaponMG4");
  FUN_100ff6e0(&DAT_107a71b0,&DAT_107a7224,3,"DT_WeaponRPG7");
  FUN_100ff6e0(&DAT_107a71cc,&DAT_107a7354,2,"DT_Rocket");
  FUN_100ff6e0(&DAT_107a73d0,&DAT_107a742c,1,"DT_WeaponAK47");
  FUN_100ff6e0(&DAT_107a74a8,&DAT_107a7504,1,"DT_WeaponAMD65");
  FUN_100ff6e0(&DAT_107a7580,&DAT_107a75dc,1,"DT_WeaponAUG");
  FUN_100ff6e0(&DAT_107a7658,&DAT_107a76b4,1,"DT_WeaponDSA58");
  FUN_100ff6e0(&DAT_107a7730,&DAT_107a778c,1,"DT_WeaponG36K");
  FUN_100ff6e0(&DAT_107a7808,&DAT_107a7864,1,"DT_WeaponHK417");
  FUN_100ff6e0(&DAT_107a78e0,&DAT_107a793c,1,"DT_WeaponK1A");
  FUN_100ff6e0(&DAT_107a79b8,&DAT_107a7a14,1,"DT_WeaponM1");
  FUN_100ff6e0(&DAT_107a7a90,&DAT_107a7aec,1,"DT_WeaponM4");
  FUN_100ff6e0(&DAT_107a7b68,&DAT_107a7bc4,1,"DT_WeaponSG551");
  FUN_100ff6e0(&DAT_107a7c40,&DAT_107a7c9c,2,"DT_WeaponBekas");
  FUN_100ff6e0(&DAT_107a7d18,&DAT_107a7d74,2,"DT_WeaponFP6");
  FUN_100ff6e0(&DAT_107a7df0,&DAT_107a7e4c,2,"DT_WeaponM4STAR10");
  FUN_100ff6e0(&DAT_107a7ec8,&DAT_107a7f24,2,"DT_WeaponTGS12");
  FUN_100ff6e0(&DAT_107a7fa0,&DAT_107a7ffc,1,"DT_WeaponMP5");
  FUN_100ff6e0(&DAT_107a8078,&DAT_107a80d4,1,"DT_WeaponMP7");
  FUN_100ff6e0(&DAT_107a8150,&DAT_107a81ac,1,"DT_WeaponP90");
  FUN_100ff6e0(&DAT_107a8228,&DAT_107a8284,1,"DT_WeaponPDW");
  FUN_100ff6e0(&DAT_107a8300,&DAT_107a835c,1,"DT_WeaponSkorpion");
  FUN_100ff6e0(&DAT_107a83d8,&DAT_107a8434,1,"DT_WeaponSUPERV");
  FUN_100ff6e0(&DAT_107a84b0,&DAT_107a850c,1,"DT_WeaponUZI");
  FUN_100ff6e0(&DAT_107a8588,&DAT_107a85e4,1,"DT_WeaponAS50");
  FUN_100ff6e0(&DAT_107a8660,&DAT_107a86bc,1,"DT_WeaponM14");
  FUN_100ff6e0(&DAT_107a8738,&DAT_107a8794,1,"DT_WeaponSPR");
  FUN_100ff6e0(&DAT_107a8810,&DAT_107a886c,1,"DT_WeaponURatio");
  FUN_100ff6e0(&DAT_107a89b0,&DAT_107a8fec,1,"DT_WeaponCycler");
  FUN_100ff6e0(&DAT_107a89cc,&DAT_107a90a4,1,"DT_WeaponCubemap");
  FUN_100ff6e0(&DAT_107ac430,&DAT_107ac484,0,"DT_BaseTempEntity");
  FUN_100ff6e0(&DAT_107ac928,&DAT_107ad26c,1,"DT_PrecipitationBlocker");
  FUN_100ff6e0(&DAT_107ac954,&DAT_107ad2ec,2,"DT_Precipitation");
  FUN_100ff6e0(&DAT_107ad1c8,&DAT_107ad3a4,0xc,"DT_EnvWindShared");
  FUN_100ff6e0(&DAT_107ad1e0,&DAT_107ad6b4,2,"DT_EnvWind");
  FUN_100ff6e0(&DAT_107ad1f8,&DAT_107ad76c,5,"DT_Embers");
  FUN_100ff6e0(&DAT_107ad210,&DAT_107ad8dc,5,"DT_QuadraticBeam");
  FUN_100ff6e0(&DAT_107adb3c,&DAT_107adb94,3,"DT_TEGaussExplosion");
  FUN_100ff6e0(&DAT_107adc4c,&DAT_107adca4,2,"DT_ParticleFire");
  FUN_100ff6e0(&DAT_107aded8,&DAT_107adf2c,6,"DT_ParticleSmokeGrenade");
  FUN_100ff6e0(&DAT_107ae098,&DAT_107ae1cc,0x10,"DT_SmokeTrail");
  FUN_100ff6e0(&DAT_107ae0b0,&DAT_107ae5cc,0x10,"DT_RocketTrail");
  FUN_100ff6e0(&DAT_107ae0c8,&DAT_107ae9cc,8,"DT_SporeExplosion");
  FUN_100ff6e0(&DAT_107ae144,&DAT_107aebec,8,"DT_SporeTrail");
  FUN_100ff6e0(&DAT_107ae15c,&DAT_107aee0c,3,"DT_FireTrail");
  FUN_100ff6e0(&DAT_107ae174,&DAT_107aef04,0xe,"DT_DustTrail");
  FUN_100ff6e0(&DAT_107af250,&DAT_107af2a4,0x13,"DT_SmokeStack");
  FUN_100ff6e0(&DAT_107af71c,&DAT_107af774,0xc,"DT_SteamJet");
  FUN_100ff6e0(&DAT_107afa80,&DAT_107afb1c,2,"DT_TEMetalSparks");
  FUN_100ff6e0(&DAT_107afac4,&DAT_107afbd4,1,"DT_TEArmorRicochet");
  FUN_100ff6e0(&DAT_107afc14,&DAT_107afc6c,0xf,"DT_BaseBeam");
  FUN_100ff6e0(&DAT_107b0064,&DAT_107b00bc,5,"DT_TEBeamEntPoint");
  FUN_100ff6e0(&DAT_107b0244,&DAT_107b029c,3,"DT_TEBeamEnts");
  FUN_100ff6e0(&DAT_107b03a8,&DAT_107b03fc,2,"DT_TEBeamFollow");
  FUN_100ff6e0(&DAT_107b04cc,&DAT_107b0524,3,"DT_TEBeamLaser");
  FUN_100ff6e0(&DAT_107b0644,&DAT_107b069c,3,"DT_TEBeamPoints");
  FUN_100ff6e0(&DAT_107b07ac,&DAT_107b0804,3,"DT_TEBeamRing");
  FUN_100ff6e0(&DAT_107b0920,&DAT_107b0974,4,"DT_TEBeamRingPoint");
  FUN_100ff6e0(&DAT_107b0b3c,&DAT_107b0b94,3,"DT_TEBeamSpline");
  FUN_100ff6e0(&DAT_107b0c94,&DAT_107b0cec,9,"DT_TEBloodSprite");
  FUN_100ff6e0(&DAT_107b0f48,&DAT_107b0f9c,7,"DT_TEBloodStream");
  FUN_100ff6e0(&DAT_107b119c,&DAT_107b11f4,0xc,"DT_TEBreakModel");
  FUN_100ff6e0(&DAT_107b14ec,&DAT_107b1544,4,"DT_TEBSPDecal");
  FUN_100ff6e0(&DAT_107b1670,&DAT_107b16c4,7,"DT_TEBubbles");
  FUN_100ff6e0(&DAT_107b18a4,&DAT_107b18fc,7,"DT_TEBubbleTrail");
  FUN_100ff6e0(&DAT_107b1ad8,&DAT_107b1b2c,6,"DT_TEClientProjectile");
  FUN_100ff6e0(&DAT_107b1ccc,&DAT_107b1d24,6,"DT_TEDecal");
  FUN_100ff6e0(&DAT_107b1ec8,&DAT_107b1f1c,9,"DT_TEDynamicLight");
  FUN_100ff6e0(&DAT_107b2210,&DAT_107b2264,2,"DT_TEEffectDispatch");
  FUN_100ff6e0(&DAT_107b2310,&DAT_107b2364,3,"DT_TEEnergySplash");
  FUN_100ff6e0(&DAT_107b2470,&DAT_107b24c4,9,"DT_TEExplosion");
  FUN_100ff6e0(&DAT_107b2704,&DAT_107b275c,5,"DT_TEFizz");
  FUN_100ff6e0(&DAT_107b28d0,&DAT_107b2924,6,"DT_TEFootprintDecal");
  FUN_100ff6e0(&DAT_107b2b44,&DAT_107b2b9c,0xf,"DT_TEShatterSurface");
  FUN_100ff6e0(&DAT_107b2f50,&DAT_107b2fa4,6,"DT_TEGlowSprite");
  FUN_100ff6e0(&DAT_107b3140,&DAT_107b3194,5,"DT_TEImpact");
  FUN_100ff6e0(&DAT_107b32d8,&DAT_107b332c,2,"DT_TEKillPlayerAttachments");
  FUN_100ff6e0(&DAT_107b33cc,&DAT_107b3424,3,"DT_TELargeFunnel");
  FUN_100ff6e0(&DAT_107b3678,&DAT_107b36cc,5,"DT_TEMuzzleFlash");
  FUN_100ff6e0(&DAT_107b37fc,&DAT_107b3854,4,"DT_TEParticleSystem");
  FUN_100ff6e0(&DAT_107b399c,&DAT_107b39f4,10,"DT_TEPhysicsProp");
  FUN_100ff6e0(&DAT_107b3ccc,&DAT_107b3d24,4,"DT_TEPlayerDecal");
  FUN_100ff6e0(&DAT_107b3e48,&DAT_107b3e9c,5,"DT_TEProjectedDecal");
  FUN_100ff6e0(&DAT_107b3ff4,&DAT_107b404c,2,"DT_TEShowLine");
  FUN_100ff6e0(&DAT_107b40f0,&DAT_107b4144,5,"DT_TESmoke");
  FUN_100ff6e0(&DAT_107b42a4,&DAT_107b42fc,4,"DT_TESparks");
  FUN_100ff6e0(&DAT_107b4418,&DAT_107b446c,5,"DT_TESprite");
  FUN_100ff6e0(&DAT_107b45d4,&DAT_107b462c,7,"DT_TESpriteSpray");
  FUN_100ff6e0(&DAT_107b47f4,&DAT_107b484c,3,"DT_TEWorldDecal");
  FUN_100ff6e0(&DAT_107b4904,&DAT_107b495c,6,"DT_TestTraceline");
  FUN_10101f30("AE_ALLOW_MOVEMENT",0x3b,0x11);
  FUN_10101f30("AE_AMMOCRATE_PICKUP_AMMO",0x18,1);
  FUN_10101f30("AE_ASW_FOOTSTEP",0x2e,0x10);
  FUN_10101f30("AE_CLIENT_EFFECT_ATTACH",0x14,0x10);
  FUN_10101f30("AE_CL_ADD_PARTICLE_EFFECT_CP",0x22,0x10);
  FUN_10101f30("AE_CL_BODYGROUP_SET_VALUE",0x27,0x10);
  FUN_10101f30("AE_CL_BODYGROUP_SET_VALUE_CMODEL_WPN",0x28,0x10);
  FUN_10101f30("AE_CL_CREATE_PARTICLE_BRASS",0x23,0x10);
  FUN_10101f30("AE_CL_CREATE_PARTICLE_EFFECT",0x20,0x10);
  FUN_10101f30("AE_CL_DISABLE_BODYGROUP",0x26,0x10);
  FUN_10101f30("AE_CL_ENABLE_BODYGROUP",0x25,0x10);
  FUN_10101f30("AE_CL_PLAYSOUND",0xf,0x10);
  FUN_10101f30("AE_CL_STOPSOUND",0x11,0x10);
  FUN_10101f30("AE_CL_STOP_PARTICLE_EFFECT",0x21,0x10);
  FUN_10101f30("AE_COMBO_TRANSITION",0x3a,0x11);
  FUN_10101f30("AE_EMPTY",0,1);
  FUN_10101f30("AE_MARINE_FOOTSTEP",0x2f,0x10);
  FUN_10101f30("AE_MARINE_RELOAD_SOUND_A",0x30,0x10);
  FUN_10101f30("AE_MARINE_RELOAD_SOUND_B",0x31,0x10);
  FUN_10101f30("AE_MARINE_RELOAD_SOUND_C",0x32,0x10);
  FUN_10101f30("AE_MELEE_DAMAGE",0x34,0x11);
  FUN_10101f30("AE_MELEE_START_COLLISION_DAMAGE",0x35,0x11);
  FUN_10101f30("AE_MELEE_STOP_COLLISION_DAMAGE",0x36,0x11);
  FUN_10101f30("AE_MUZZLEFLASH",0x15,0x10);
  FUN_10101f30("AE_NPC_180TURN",6,1);
  FUN_10101f30("AE_NPC_ADDGESTURE",0x1a,1);
  FUN_10101f30("AE_NPC_ATTACK_BROADCAST",0x1c,1);
  FUN_10101f30("AE_NPC_BODYDROP_HEAVY",4,1);
  FUN_10101f30("AE_NPC_BODYDROP_LIGHT",3,1);
  FUN_10101f30("AE_NPC_DRAW",0xd,1);
  FUN_10101f30("AE_NPC_HOLSTER",0xc,1);
  FUN_10101f30("AE_NPC_HURT_INTERACTION_PARTNER",0x1d,1);
  FUN_10101f30("AE_NPC_ITEM_PICKUP",7,1);
  FUN_10101f30("AE_NPC_LEFTFOOT",1,1);
  FUN_10101f30("AE_NPC_MUZZLEFLASH",0x16,0x10);
  FUN_10101f30("AE_NPC_RAGDOLL",0x19,1);
  FUN_10101f30("AE_NPC_RESTARTGESTURE",0x1b,1);
  FUN_10101f30("AE_NPC_RIGHTFOOT",2,1);
  FUN_10101f30("AE_NPC_SET_INTERACTION_CANTDIE",0x1e,1);
  FUN_10101f30("AE_NPC_SWISHSOUND",5,1);
  FUN_10101f30("AE_NPC_WEAPON_DROP",8,1);
  FUN_10101f30("AE_NPC_WEAPON_FIRE",0xe,9);
  FUN_10101f30("AE_NPC_WEAPON_SET_ACTIVITY",0xb,1);
  FUN_10101f30("AE_NPC_WEAPON_SET_SEQUENCE_NAME",9,1);
  FUN_10101f30("AE_NPC_WEAPON_SET_SEQUENCE_NUMBER",10,1);
  FUN_10101f30("AE_RAGDOLL",0x24,1);
  FUN_10101f30("AE_REMOVE_CLIENT_AIM",0x33,0x10);
  FUN_10101f30("AE_SCREEN_SHAKE",0x37,0x10);
  FUN_10101f30("AE_SKILL_EVENT",0x3c,0x11);
  FUN_10101f30("AE_START_DETECTING_COMBO",0x38,0x11);
  FUN_10101f30("AE_START_SCRIPTED_EFFECT",0x12,1);
  FUN_10101f30("AE_STOP_DETECTING_COMBO",0x39,0x11);
  FUN_10101f30("AE_STOP_SCRIPTED_EFFECT",0x13,1);
  FUN_10101f30("AE_SV_DUSTTRAIL",0x1f,1);
  FUN_10101f30("AE_SV_PLAYSOUND",0x10,1);
  FUN_10101f30("AE_THUMPER_THUMP",0x17,1);
  FUN_10101f30("AE_TUG_INCAP",0x3d,1);
  FUN_10101f30("AE_WPN_HIDE",0x2b,0x11);
  FUN_10101f30("AE_WPN_INCREMENTAMMO",0x2a,0x11);
  FUN_10101f30("AE_WPN_PLAYWPNSOUND",0x2d,0x11);
  FUN_10101f30("AE_WPN_PRIMARYATTACK",0x29,0x11);
  FUN_10101f30("AE_WPN_UNHIDE",0x2c,0x11);
  FUN_10104e40((void *)((int)this + 0x14),param_1,pbVar1,(uint *)"textureScrollAngle",(byte *)0x0);
  FUN_10104e40((void *)((int)this + 8),param_1,pbVar1,(uint *)"textureScrollRate",(byte *)0x3f800000
  FUN_1010ac10(&param_2,(byte *)"FX_DebrisFlecks",(float *)param_1,&local_34);
  FUN_1010e9d0("fix_client_log.txt",(byte *)"[%s] %s\n");
  FUN_1010efb0(&DAT_10777ac8,"CMultiplayRules",FUN_10142d50);
  FUN_1010efb0(&DAT_107a2998,"CTIGameRules",FUN_102c1f20);
  FUN_101110f0(param_1,(byte *)"CBaseGameStats::Event_MapChange to [%s]\n");
  FUN_101110f0(param_1,(byte *)"CBaseGameStats::Event_SaveGame [%s]\n");
  FUN_10119890(&local_40,"scripts/game_textures",0);
  FUN_10119890(&local_40,"scripts/game_textures2",0);
  FUN_10119890(&local_40,"scripts/hud_textures",0);
  FUN_10119890(&local_40,"scripts/instructor_textures",0);
  FUN_10119890(&local_40,"scripts/mod_textures",0);
  FUN_10119ff0((void *)((int)this + 0x1d8),"hide_for_scoreboard");
  FUN_10119ff0(this,"global");
  FUN_1011e340("BloodImpact");
  FUN_1011e340("BodyLandOnSurface");
  FUN_1011e340("BreachingChargeExplosion");
  FUN_1011e340("CR_HRagdollOnClient");
  FUN_1011e340("CarBreakWindows");
  FUN_1011e340("CarExplosion");
  FUN_1011e340("CardboardImpact");
  FUN_1011e340("CommandPointer");
  FUN_1011e340("DropMagazine");
  FUN_1011e340("EmitEngineSmoke");
  FUN_1011e340("ExplodeFX");
  FUN_1011e340("Explode_40MM");
  FUN_1011e340("Explosion");
  FUN_1011e340("ExplosionBomb");
  FUN_1011e340("ExplosionFireball");
  FUN_1011e340("FX_Refract");
  FUN_1011e340("FireExtinguisherExplosion");
  FUN_1011e340("FlashBangExplosion");
  FUN_1011e340("FoliageImpact");
  FUN_1011e340("GaussTracer");
  FUN_1011e340("GlassImpact");
  FUN_1011e340("GrassImpact");
  FUN_1011e340("GunshipImpact");
  FUN_1011e340("Headshot");
  FUN_1011e340("HeavyTracer");
  FUN_1011e340("HeliExplosion");
  FUN_1011e340("HelicopterMegaBomb");
  FUN_1011e340("Impact");
  FUN_1011e340("LightTracer");
  FUN_1011e340("ManhackSparks");
  FUN_1011e340("MuzzleFlash");
  FUN_1011e340("PaperImpact");
  FUN_1011e340("ParticleEffect");
  FUN_1011e340("ParticleEffectStop");
  FUN_1011e340("ParticleTracer");
  FUN_1011e340("PlaneExplosion");
  FUN_1011e340("PropaneTankExplosion");
  FUN_1011e340("RPG7Explode");
  FUN_1011e340("RPGShotDown");
  FUN_1011e340("RagdollImpact");
  FUN_1011e340("RifleShellEject");
  FUN_1011e340("ServerPhysPropToClientPhysPropCallBack");
  FUN_1011e340("ShakeRopes");
  FUN_1011e340("ShellEject");
  FUN_1011e340("ShotgunShellEject");
  FUN_1011e340("Smoke");
  FUN_1011e340("SmokeGrenadeSparkler");
  FUN_1011e340("SmokeOld");
  FUN_1011e340("Sparkle");
  FUN_1011e340("Spill");
  FUN_1011e340("SpillLiquid");
  FUN_1011e340("TI_MuzzleFlash");
  FUN_1011e340("TI_MuzzleFlash2");
  FUN_1011e340("TI_MuzzleFlash_Left");
  FUN_1011e340("TI_MuzzleFlash_Right");
  FUN_1011e340("TI_MuzzleFlash_V");
  FUN_1011e340("TI_MuzzleFlash_X");
  FUN_1011e340("TI_MuzzleFlash_Y");
  FUN_1011e340("TI_Silenced");
  FUN_1011e340("TeslaHitboxes");
  FUN_1011e340("TeslaZap");
  FUN_1011e340("TireExplode");
  FUN_1011e340("Tracer");
  FUN_1011e340("TracerSound");
  FUN_1011e340("VehicleCollision");
  FUN_1011e340("Vomit");
  FUN_1011e340("WaterBigSplash");
  FUN_1011e340("WaterSurfaceExplosion");
  FUN_1011e340("bloodimpact");
  FUN_1011e340("bloodspray");
  FUN_1011e340("gunshotsplash");
  FUN_1011e340("waterripple");
  FUN_1011e340("watersplash");
  FUN_1011e360("cable/rope_shadowdepth");
  FUN_1011e360("effects/ember_swirling001");
  FUN_1011e360("effects/fleck_ash1");
  FUN_1011e360("effects/fleck_ash2");
  FUN_1011e360("effects/fleck_ash3");
  FUN_1011e360("effects/introblur");
  FUN_1011e360("effects/stun");
  FUN_1011e360("particle/particle_noisesphere");
  FUN_1011e360("particle/particle_smokegrenade");
  FUN_1011e360("particle/sparkles");
  FUN_1011e360("sprites/flamelet1");
  FUN_1011e360("sprites/flamelet2");
  FUN_1011e360("sprites/flamelet3");
  FUN_1011e360("sprites/flamelet4");
  FUN_1011e360("sprites/flamelet5");
  FUN_1011e360("sprites/heatwave");
  FUN_1011e380("burning_character");
  FUN_1011e380("burning_gib_01");
  FUN_1011e380("env_sparks_omni");
  FUN_1011e380("slime_splash_01");
  FUN_1011e380("slime_splash_02");
  FUN_1011e380("slime_splash_03");
  FUN_10120720(&DAT_1064d8d8,"CMultiplayRules",FUN_10141880);
  FUN_10120720(&DAT_10693b24,"CTIGameRules",FUN_103159b0);
  FUN_10120750((byte *)"CTIGameRules");
  FUN_10121370(param_1,(byte *)"CBaseGameStats::Event_MapChange to [%s]\n");
  FUN_10121370(param_1,(byte *)"CBaseGameStats::Event_SaveGame [%s]\n");
  FUN_101214f0((char **)&param_1,"!self");
  FUN_10122600(this,"models/gibs/hgibs.mdl",0x41c80000);
  FUN_10124100((int *)"is_console",piVar5,0);
  FUN_10124100((int *)"is_pc",piVar5,1);
  FUN_10124100((int *)"skill.cfg",piVar3,1);
  FUN_101273e0((void *)((int)this + 0x224),0,"HudAmmo",0);
  FUN_10128450(&DAT_1071331c,"CWeaponList");
  FUN_10128450(&DAT_1071b968,"CFlexSceneFileManager");
  FUN_10128450(&DAT_10766fa8,"CBulletWhizTimer");
  FUN_10128450(&DAT_1076de48,"CGlowOverlaySystem");
  FUN_10128450(&DAT_107786f8,"CEZParticleInit");
  FUN_10128450(&DAT_107a89e4,"VoxManager");
  FUN_10128450(param_1,"CPixelVisibilitySystem");
  FUN_10128450(param_1,"CPropData");
  FUN_10128490(&DAT_10729be0,"C_KeyValueSaver");
  FUN_10128490(&DAT_10769748,"CGameTimescale");
  FUN_10128490(&DAT_10778d28,"CPhysicsSystem");
  FUN_10128490(&DAT_1077b2d0,"SoftbodyProcess");
  FUN_10128490(&DAT_1079a858,"IngameMusicMgr");
  FUN_10128490(&DAT_107a948c,"CSignifierSystem");
  FUN_10128490(&DAT_107ad1b8,"CPrecipHack");
  FUN_10128490(param_1 + 1,"CSoundControllerImp");
  FUN_10128490(param_1,"CGameRules");
  FUN_10128490(param_1,"CGameStats");
  FUN_10128490(param_1,"CTIStaticGlobals");
  FUN_10128490(param_1,"C_GameInstructor");
  FUN_10129200(&DAT_10604bbc,"CCleanupDefaultRelationShips");
  FUN_10129200(&DAT_10605160,"CWeaponList");
  FUN_10129200(&DAT_10605d18,"CModelSoundsCacheSaver");
  FUN_10129200(&DAT_10605d24,"CModelPrecacheSystem");
  FUN_10129200(&DAT_106074c4,"CFlexSceneFileManager");
  FUN_10129200(&DAT_1060be70,"ColorCorrectionSystem");
  FUN_10129200(&DAT_1064112c,"TonemapSystem");
  FUN_10129200(&DAT_10642be4,"FogSystem");
  FUN_10129200(&DAT_1064af10,"CGlobalState");
  FUN_10129200(&DAT_1064bb70,"CRemarkableEntityList");
  FUN_10129200(&DAT_1064e7b0,"CAnchorList");
  FUN_10129200(&DAT_1065278c,"CPointTemplatePrecacher");
  FUN_10129200(&DAT_10652930,"PostProcessSystem");
  FUN_10129200(&DAT_10653060,"CBreakModelsPrecached");
  FUN_10129200(&DAT_10672148,"CScenePrecacheSystem");
  FUN_10129200(&DAT_10675714,"CTemplatesHook");
  FUN_10129200(&DAT_10676c70,"CPrecacheOtherList");
  FUN_10129200(&DAT_10676cd8,"CCheckClient");
  FUN_10129200(param_1 + 0xf7b,"CDefaultResponseSystem");
  FUN_10129200(param_1,"CPropData");
  FUN_10129240(&DAT_106035c8,"CResponseQueueManager");
  FUN_10129240(&DAT_1060cea0,"CVisibilityMonitor");
  FUN_10129240(&DAT_1063f50c,"CEntityListSystem");
  FUN_10129240(&DAT_10645fb8,"CGameTimescale");
  FUN_10129240(&DAT_10652580,"CDevShotSystem");
  FUN_10129240(&DAT_1068acf8,"CVoteControllerSystem");
  FUN_10129240(param_1 + 1,"CSoundControllerImp");
  FUN_10129240(param_1,"CGameRules");
  FUN_10129240(param_1,"CGameStats");
  FUN_10129240(param_1,"CTIStaticGlobals");
  FUN_10133b30((void *)((int)this + 0x104),"CMultiPlayerAnimState::m_iv_flMaxGroundSpeed");
  FUN_10133b30(param_1 + 0x118a,"C_TIPlayer::m_iv_CurrentLeanValue");
  FUN_10133b30(param_1 + 0x1197,"C_TIPlayer::m_iv_CurrentDuckFraction");
  FUN_1013aba0(&local_10,(byte *)"origin",(char *)local_858);
  FUN_101428a0((int)"molotov_explosion",*param_1,*(undefined4 *)(param_1 + 1),local_20,local_18,0,
  FUN_101428a0((int)"rpg7_backblast",local_98,local_90,local_a4,local_9c,0,'\x01',0xffffffff,0);
  FUN_10146100((int)"bodyland_generic",local_90,local_88,local_28,local_20,(int *)0x0,'\x01',-1);
  FUN_10146100((int)"bomb_light",*(undefined8 *)((int)param_1 + 0x33e8),
  FUN_10146100((int)"dust_vertical_explode",*param_1,*(undefined4 *)(param_1 + 1),param_2,param_3,
  FUN_10146100((int)"explode_tire",*param_1,*(undefined4 *)(param_1 + 1),param_2,param_3,(int *)0x0,
  FUN_10146100((int)"explosion(100)",*param_1,*(undefined4 *)(param_1 + 1),local_1c,local_14,
  FUN_10146100((int)"explosion_bomb",*param_1,*(undefined4 *)(param_1 + 1),param_2,param_3,
  FUN_10146100((int)"explosion_fireball",*param_1,*(undefined4 *)(param_1 + 1),
  FUN_10146100((int)"fire_extinguisher_explode",*param_1,local_3c,param_2,param_3,(int *)0x0,'\x01',
  FUN_10146100((int)"flashbomb",*param_1,*(undefined4 *)(param_1 + 1),param_2,param_3,(int *)0x0,
  FUN_10146100((int)"grenade_explode",*param_1,*(undefined4 *)(param_1 + 1),param_2,param_3,
  FUN_10146100((int)"impact_fx_cardboard",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
  FUN_10146100((int)"impact_fx_glass",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
  FUN_10146100((int)"impact_fx_grass",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
  FUN_10146100((int)"impact_fx_leaf",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
  FUN_10146100((int)"playerland_dirt",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
  FUN_10146100((int)"playerland_water",*param_1,*(undefined4 *)(param_1 + 1),local_1c,local_14,
  FUN_10146100((int)"propane_explode",*param_1,local_14,param_2,param_3,(int *)0x0,'\x01',-1);
  FUN_10146100((int)"rpg7_backblast",local_30,local_28,local_24,local_1c,(int *)0x0,'\x01',-1);
  FUN_10146100((int)"rpg7_explode",*param_1,*(undefined4 *)(param_1 + 1),param_2,param_3,(int *)0x0,
  FUN_10146100((int)"water_bullettrace",*param_1,*(undefined4 *)(param_1 + 1),local_10,local_8,
  FUN_10146100((int)"water_explosion2",CONCAT44(uStack312,local_13c),local_134,local_cc,local_c4,
  FUN_10146160((int)"777_all_lights",5,piVar1,uVar5,cVar12,iVar3,uVar16,cVar18);
  FUN_10146160((int)"777_left_engine_air_vortex",5,piVar1,uVar5,cVar12,iVar3,uVar16,cVar18);
  FUN_10146160((int)"777_left_engine_heatwave",5,piVar1,uVar5,cVar12,iVar3,uVar16,cVar18);
  FUN_10146160((int)"777_right_engine_air_vortex",5,piVar1,uVar5,cVar12,iVar3,uVar16,cVar18);
  FUN_10146160((int)"777_right_engine_heatwave",5,piVar1,uVar5,cVar12,iVar3,uVar16,cVar18);
  FUN_10146160((int)"bomb_truck_light",5,param_1,uVar2,'\0',-1,0,'\0');
  FUN_10146160((int)"bomb_truck_light",5,param_1,uVar3,'\0',-1,0,'\0');
  FUN_10147290(param_1 + 300,(undefined4 *)"blood_incapacitated",1,-1);
  FUN_10147b30((int *)&local_1c,"C_TEShatterSurface 1");
  FUN_10147b30((int *)&local_8,"HunterDamage");
  FUN_10147b30((int *)&local_c,"FX_PaperImpact");
  FUN_1014a8a0(&DAT_10640550,(byte *)"Loading map \"%s\"\n");
  FUN_1014d240(&local_14,"MuzzleFlash",param_2,param_3,0);
  FUN_1014d240(&local_14,"MuzzleFlash_Combine_NPC",param_1,param_2,0);
  FUN_1014d240(&local_c,"MuzzleFlash",param_1,param_2,1);
  FUN_1014d240(&local_c,"MuzzleFlash_SMG1_Player",param_1,param_2,1);
  FUN_1014f6b0(param_1 + 0x51a,"C_Func_Dust");
  FUN_1014fa10((undefined4 *)&stack0xffffffec,"Ember Particle Singleton [sky]");
  FUN_1014fa10((undefined4 *)&stack0xffffffec,"Ember Particle Singleton");
  FUN_1014fa70((undefined4 *)&stack0xffffffec,"Fire Particle Singleton [sky]");
  FUN_1014fa70((undefined4 *)&stack0xffffffec,"Fire Particle Singleton");
  FUN_1014fad0((undefined4 *)&stack0xffffffec,"Fire Smoke Particle Singleton [sky]");
  FUN_1014fad0((undefined4 *)&stack0xffffffec,"Fire Smoke Particle Singleton");
  FUN_1014fb30(&local_10,"MuzzleFlash");
  FUN_1014fb30(&local_10,"smokepuff");
  FUN_1014fb30(&local_8,"Smoker");
  FUN_1014fb30(&local_8,"Spiller");
  FUN_1014fb30(&local_c,"FX_Blood");
  FUN_1014fb30(&local_c,"FX_Smoke");
  FUN_1014fb30(&local_c,"MuzzleFlash");
  FUN_1014fb30(&local_c,"MuzzleFlash_357_Player");
  FUN_1014fb30(&local_c,"MuzzleFlash_Pistol_Player");
  FUN_1014fb30(&local_c,"MuzzleFlash_Shotgun_Player");
  FUN_1014fb30(&local_c,"TELargeFunnel");
  FUN_1014fb30((undefined4 *)&stack0xffffffec,"Simple Particle Singleton [sky]");
  FUN_1014fb30((undefined4 *)&stack0xffffffec,"Simple Particle Singleton");
  FUN_10150520(this,"",0);
  FUN_10150730(this,"",0);
  FUN_10154490((uint *)"UpdatePlayers");
  FUN_10155b90((int)this,(byte *)"Creating initial report.");
  FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Closing connection to server.");
  FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Closing socket, upload succeeded.");
  FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Commencing game stats upload connection.");
  FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Connecting to game stats harvesting server.");
  FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Creating game stats upload socket.");
  FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Receiving harvesting protocol acknowledgement.");
  FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Sending game stats harvester protocol info.");
  FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Sending harvesting protocol upload request.");
  FUN_10155b90(*(int *)((int)this + 0x2c),(byte *)"Uploading game stats data.");
  FUN_10159870((byte *)"*grp:",&local_5c);
  FUN_1015ed00(&DAT_10641138,param_1,param_2,(byte *)"netsupport");
  FUN_10160230((undefined4 *)&DAT_1066a960,(byte *)"[%02d:%02d:%02.3f]: %s");
  FUN_10169ff0((int)local_10,iVar9,local_c,iVar5,(byte *)"float (%f) net (%f)\n");
  FUN_10169ff0((int)local_10,local_14,local_c,iVar9,(byte *)"quaternion (%f %f %f %f)\n");
  FUN_10169ff0((int)local_10,local_14,local_c,iVar9,(byte *)"vector (%f %f %f)\n");
  FUN_10169ff0((int)local_8,param_1,local_10,iVar8,(byte *)"quaternion (%f %f %f %f)\n");
  FUN_10169ff0((int)local_8,param_1,local_10,iVar8,(byte *)"vector (%f %f %f)\n");
  FUN_10169ff0((int)pcVar5,param_1,local_10,iVar8,(byte *)"float (%f) net (%f)\n");
  FUN_1016a150(local_10,local_14,(int)local_c,(byte *)"float differs (net %f pred %f) diff(%f)\n");
  FUN_1016a150(local_8,param_1,(int)local_10,(byte *)"float differs (net %f pred %f) diff(%f)\n");
  FUN_1016a2a0(local_44,"C_BaseEntity::RestoreData",iVar3,piVar2);
  FUN_1016a2a0(local_44,"C_BaseEntity::SaveData",iVar2,piVar1);
  FUN_1016a2a0(local_44,"C_BaseEntity::SaveData",iVar3,piVar2);
  FUN_1016a2a0(local_48,"C_BaseEntity::SaveData",iVar2,piVar1);
  FUN_1016c890(param_1,"",0);
  FUN_1016cae0("_cl_classmenuopen");
  FUN_1016cae0("cancelselect");
  FUN_1016cae0("cc_lookup_crc");
  FUN_1016cae0("cl_buy_favorite");
  FUN_1016cae0("menuselect");
  FUN_1016cae0("overview_alpha");
  FUN_1016cae0("overview_health");
  FUN_1016cae0("overview_locked");
  FUN_1016cae0("overview_mode");
  FUN_1016cae0("overview_names");
  FUN_1016cae0("overview_tracks");
  FUN_1016cae0("overview_zoom");
  FUN_1016cae0("playgamesound");
  FUN_1016cae0("spec_autodirector");
  FUN_1016cae0("spec_menu");
  FUN_1016cae0("spec_mode");
  FUN_1016cae0("spec_next");
  FUN_1016cae0("spec_prev");
  FUN_1016cae0("togglescores");
  FUN_1016cae0("voice_modenable");
  FUN_101713e0(this_00,"C_ServerRagdoll::m_iv_ragAngles");
  FUN_10171450(this,"C_ServerRagdoll::m_iv_ragPos");
  FUN_10175290(&DAT_1077c930,"CRagdollLRURetirement");
  FUN_1017df40((byte *)"%s : %8.2f:  start %s\n");
  FUN_1017e020(&DAT_10795698,"filmgrain",&DAT_10795640);
  FUN_1017f620(*(void **)((int)this + 0x290),"Weapon.Thrust",0,0);
  FUN_1017f620(param_1,"Bomb.Beep",0,0);
  FUN_1017f620(this_00,"Vote.Failed",0,0);
  FUN_1017f8a0(local_168,0.0,"fx.water_explode",&param_1,0,0);
  FUN_1017f8a0(local_24,0.0,"BreachingCharge.Explode",param_1,0,0);
  FUN_1017f8a0(local_24,0.0,"Missile.ShotDown",param_1,0,0);
  FUN_1017f8a0(local_24,0.0,"fx.bomb_explode",param_1,0,0);
  FUN_1017f8a0(local_28,-NAN,"HudChat.Message",0,0,0);
  FUN_1017f8a0(local_30,0.0,"FX_RicochetSound.Ricochet",&local_10,0,0);
  FUN_1017f8a0(local_3c,0.0,"Water.PlayerLand",param_1,0,0);
  FUN_1017f8a0(local_60,0.0,"Windows_Break",&local_10,0,0);
  FUN_1017f8a0(local_88,0.0,"fx.metalshards_explode",param_1,0,0);
  FUN_1017f8a0(local_8c,0.0,"fx.cups_explode",param_1,0,0);
  FUN_1017f8a0(local_90,0.0,"40mmGrenade.Explode",param_1,0,0);
  FUN_1017f8a0(local_94,0.0,"Weapon_RPG7.Explode",param_1,0,0);
  FUN_1017f8a0(local_b0,0.0,"Tire_Explode",param_1,0,0);
  FUN_1017f8a0(local_b8,-NAN,"Hud.ButtonPress1",0,0,0);
  FUN_1017f8a0(local_d4,0.0,"fx.plane_explosion_mini",param_1,0,0);
  FUN_10180360("Weapon_RPG7.Explode");
  FUN_10180360("Weapon_RPG7.Fire");
  FUN_10180360("Weapon_RPG7.Heli_Fire");
  FUN_10180360("Weapon_RPG7.MidAir");
  FUN_10182670(&DAT_10650f78,"CLagCompensationManager");
  FUN_1018c3e0(param_1,"viewangles[0]",*(float *)(param_3 + 0xc),*(float *)(param_2 + 0xc));
  FUN_1018c3e0(param_1,"viewangles[1]",*(float *)(param_3 + 0x10),*(float *)(param_2 + 0x10));
  FUN_1018c3e0(param_1,"viewangles[2]",*(float *)(param_3 + 0x14),*(float *)(param_2 + 0x14));
  FUN_1018c630(param_1,"buttons",*(uint *)(param_3 + 0x24),*(uint *)(param_2 + 0x24),0x20);
  FUN_1018c630(param_1,"command_number",*(int *)(param_3 + 4) + 1,*(uint *)(param_2 + 4),0x20);
  FUN_1018c630(param_1,"impulse",(uint)*(byte *)(param_3 + 0x28),(uint)*(byte *)(param_2 + 0x28),8);
  FUN_1018c630(param_1,"tick_count",*(int *)(param_3 + 8) + 1,*(uint *)(param_2 + 8),0x20);
  FUN_1018c630(param_1,"weaponselect",*(uint *)(param_3 + 0x2c),*(uint *)(param_2 + 0x2c),0xb);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"AdviseGrenade",FUN_10254e80);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"AlwaysMiniMap",FUN_10301fa0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"CallVoteFailed",FUN_10267510);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"CancelCrosshair",FUN_10254eb0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"Damage",FUN_10255a50);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"DenyBlockade",FUN_10254ee0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"DisplayObjectiveText",FUN_1024c4d0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"EnemyHit",FUN_10254f10);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"GameTitle",FUN_1013de80);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"HR_RemindPlayerOfObjective",FUN_1024c500);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"HudMsg",FUN_1013deb0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"HudText",FUN_1013dee0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"KilledBy",FUN_1025d740);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"MDRecord",FUN_1024dbd0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"MDStop",&LAB_1024dc00);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"MDStop",FUN_1024dc00);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"MatchCounts",FUN_1025d770);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"MeleeClubSplatter",FUN_102443f0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"MeleeSlashSplatter",FUN_10244420);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"MissionIntro",FUN_1024c530);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"MudSplatter",FUN_10244450);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"ProgressBar",FUN_10244480);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"RequestState",&LAB_101be920);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"RequestState",FUN_101be920);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"ResetHUD",FUN_10119b00);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"Rumble",FUN_100df4c0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"Shake",FUN_101a56b0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"ShowHostages",FUN_1024c560);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"ShowMenu",FUN_1013b3f0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"Splatter",FUN_102444b0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"SplatterClear",&LAB_102444e0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"SplatterClear",FUN_102444e0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"TDMKillStreakBonus",FUN_1025a700);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"UpdateBonuses",FUN_1025a730);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"UpdateObjective",FUN_1024c590);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"VGUIMenu",FUN_100df7a0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"VoiceMask",FUN_101be970);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"VoteFailed",FUN_10267540);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"VotePass",FUN_10267570);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"VoteSetup",FUN_102675a0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"VoteStart",FUN_102675d0);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"WP_Reload",&LAB_102c1f60);
  FUN_1018d250(PTR_PTR_FUN_106b44ac,(int)"WP_Reload",FUN_102c1f60);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"AchNotify",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Achieve",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"AddLocator",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"AdviseGrenade",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"AlwaysMiniMap",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"AmmoDenied",2);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Announcer",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"BarTime",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"CallVoteFailed",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"CancelCrosshair",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"ChangePaintColor",5);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"CloseCaption",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"CloseCaptionDirect",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"CurrentTimescale",4);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Damage",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"DenyBlockade",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"DesiredTimescale",0xd);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"DisplayObjectiveText",2);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"DogAnimEvent",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"DogMarker",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"EndOfMatch",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"EnemyHit",0);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Friend",4);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"GameMessage",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"GameTitle",0);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Geiger",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"GetRequisitionItem",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"GetSuitcaseZone",0xc);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"HR_RemindPlayerOfObjective",0xd);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"HintText",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"HostageAnimEvent",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"HudMsg",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"HudPingIndicator",0xc);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"HudText",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"IncUserStat",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"IncUserStatW",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"ItemPickup",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"KeyHintText",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"KillCam",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"KilledBy",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"MDRecord",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"MDStop",0);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"MatchCounts",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"MeleeClubSplatter",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"MeleeSlashSplatter",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"MissionIntro",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"MudSplatter",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"OpenRadialMenu",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"PaintAllSurfaces",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"PaintBombExplode",0xf);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"PaintEntity",0x11);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"PaintWorld",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"PlayerAnimEvent",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"ProgressBar",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Radio",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"RadioText",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"ReloadEffect",2);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"RemoveAllPaint",0);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"RemovePaint",4);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"RequestState",0);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"ResetHUD",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"ResetRoundTimer",2);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Rumble",3);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"SayText",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"SayText2",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"SendAudio",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"SetFOV",2);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Shake",0xd);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"ShowHostages",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"ShowMenu",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Splatter",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"SplatterClear",0);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"SquadSel",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"TDMKillStreakBonus",3);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"TextMsg",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"Train",1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"TutorClose",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"TutorLine",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"TutorState",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"TutorText",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"UpdateBonuses",6);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"UpdateObjective",0xd);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"VGUIMenu",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"VoiceMask",9);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"VoteFailed",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"VotePass",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"VoteSetup",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"VoteStart",-1);
  FUN_1018d360(PTR_PTR_FUN_106b44ac,(undefined4 *)"WP_Reload",0);
  FUN_1018d410((int)"friend");
  FUN_1018e6b0((int)local_148,"Scorch",'\x01');
  FUN_1018eeb0(param_2,param_3,param_4,param_5,0,param_6,(byte *)"ParticleTracer",iVar1);
  FUN_101a5ad0(0,(byte *)"Moving to next demo...");
  FUN_101a5ad0(1,(byte *)"CL_ParseClassInfo: can\'t allocate %d C_ServerClassInfos.\n");
  FUN_101a5c10((byte *)"CL_ParseDelta: invalid recv table for ent %d.\n");
  FUN_101a7370(&DAT_10670758,"CRagdollLRURetirement");
  FUN_101a78e0(-1,"config.cfg",'\0');
  FUN_101a8bd0("config.cfg");
  FUN_101adc90(param_1,param_2,(undefined (*) [16])"changelevel ",param_3,param_4);
  FUN_101bdfa0((byte *)"%s : %8.2f:  finished\n");
  FUN_101bdfa0((byte *)"%s : %8.2f:  start %s\n");
  FUN_101bdfa0((byte *)"%s : cancelled via input\n");
  FUN_101bdfa0((byte *)"CBaseFlex::AddSceneEvent:  event failed\n");
  FUN_101c67d0(&PTR_vftable_105d4f48,"resource/closecaption_english.dat");
  FUN_101c67d0(&PTR_vftable_105d4f48,"resource/subtitles_english.dat");
  FUN_101c67d0(param_1,"resource/closecaption_english.dat");
  FUN_101c7240(local_c,"EDIT_END_AREA.Creating",0,0);
  FUN_101c7240(param_1,"747.Flaps",0,0);
  FUN_101c7240(param_1,"AmmoBox.GrabAmmo",0,0);
  FUN_101c7240(param_1,"BaseCombatCharacter.CorpseGib",0,0);
  FUN_101c7240(param_1,"Flashbang.Bounce",0,0);
  FUN_101c7240(param_1,"Flashbang.Explode",0,0);
  FUN_101c7240(param_1,"Frag.Explode",0,0);
  FUN_101c7240(param_1,"FuncTrackChange.Blocking",0,0);
  FUN_101c7240(param_1,"ItemSoda.Bounce",0,0);
  FUN_101c7240(param_1,"Malinois.Breathe",0,0);
  FUN_101c7240(param_1,"Player.JacketMovement",0,0);
  FUN_101c7240(param_1,"Smoke.Bounce",0,0);
  FUN_101c7240(param_1,"Smoke.Emit",0,0);
  FUN_101c7240(param_1,"Smoke.Explode",0,0);
  FUN_101c7240(param_1,"Weapon_M320.Fire",0,0);
  FUN_101c7240(param_1,"Weapon_RPG7.Fire",0,0);
  FUN_101c7240(param_1,"fx.liquid_leaking",0,0);
  FUN_101c7240(param_1,"fx.propane_explode",0,0);
  FUN_101c7240(param_1,"fx.steam_strong",0,0);
  FUN_101c7240(this,"AmmoBox.Close",0,0);
  FUN_101c7240(this,"AmmoBox.Open",0,0);
  FUN_101c7240(this,"BaseCombatCharacter.StopWeaponSounds",0,0);
  FUN_101c7240(this,"CarDoor_Close",0,0);
  FUN_101c7240(this,"EDIT_WARP_TO_MARK",0,0);
  FUN_101c7240(this,"Player.Car_Hit",0,0);
  FUN_101c7240(this,"Player.Death",0,0);
  FUN_101c7240(this,"Replace_Tire",0,0);
  FUN_101c7240(this,"Shield.Throw",0,0);
  FUN_101c7240(this,"SprayCan.Paint",0,0);
  FUN_101c7240(this,"Tire_Explode",0,0);
  FUN_101c7240(this,"Weapon_C4_Detonator.Relay_Switch",0,0);
  FUN_101c7240(this,"fx.propane_explode",0,0);
  FUN_101c7360(puVar4,(uint *)"resource/ingame/spectatormenu.res");
  FUN_101c7360(puVar4,(uint *)"resource/ingame/spectatormodes.res");
  FUN_101c73c0((int *)local_30,fVar4,"Default.ClipEmpty_Rifle",0,0,0);
  FUN_101c8690((undefined (*) [16])"40mmGrenade.Explode");
  FUN_101c8690((undefined (*) [16])"747.Engine_Flameout");
  FUN_101c8690((undefined (*) [16])"747.Flaps");
  FUN_101c8690((undefined (*) [16])"BaseCombatCharacter.AmmoPickup");
  FUN_101c8690((undefined (*) [16])"BaseCombatCharacter.CorpseGib");
  FUN_101c8690((undefined (*) [16])"BaseCombatCharacter.StopWeaponSounds");
  FUN_101c8690((undefined (*) [16])"Blockade.Setup");
  FUN_101c8690((undefined (*) [16])"Bomb.AdjustTimer");
  FUN_101c8690((undefined (*) [16])"Bomb.Plant");
  FUN_101c8690((undefined (*) [16])"BreachingCharge.Explode");
  FUN_101c8690((undefined (*) [16])"Breakable.Ceiling");
  FUN_101c8690((undefined (*) [16])"Breakable.Computer");
  FUN_101c8690((undefined (*) [16])"Breakable.Concrete");
  FUN_101c8690((undefined (*) [16])"Breakable.Crate");
  FUN_101c8690((undefined (*) [16])"Breakable.Flesh");
  FUN_101c8690((undefined (*) [16])"Breakable.Glass");
  FUN_101c8690((undefined (*) [16])"Breakable.MatConcrete");
  FUN_101c8690((undefined (*) [16])"Breakable.MatFlesh");
  FUN_101c8690((undefined (*) [16])"Breakable.MatGlass");
  FUN_101c8690((undefined (*) [16])"Breakable.MatMetal");
  FUN_101c8690((undefined (*) [16])"Breakable.MatWood");
  FUN_101c8690((undefined (*) [16])"Breakable.Metal");
  FUN_101c8690((undefined (*) [16])"Fire.Plasma");
  FUN_101c8690((undefined (*) [16])"Flashbang.Bounce");
  FUN_101c8690((undefined (*) [16])"Flashbang.Explode");
  FUN_101c8690((undefined (*) [16])"Frag.Explode");
  FUN_101c8690((undefined (*) [16])"FuncTrackChange.Blocking");
  FUN_101c8690((undefined (*) [16])"General.BurningFlesh");
  FUN_101c8690((undefined (*) [16])"General.BurningObject");
  FUN_101c8690((undefined (*) [16])"General.StopBurning");
  FUN_101c8690((undefined (*) [16])"ItemSoda.Bounce");
  FUN_101c8690((undefined (*) [16])"LargeMetalGib.ImpactHard");
  FUN_101c8690((undefined (*) [16])"Metal.SawbladeStick");
  FUN_101c8690((undefined (*) [16])"Player.AmbientUnderWater");
  FUN_101c8690((undefined (*) [16])"Player.Death");
  FUN_101c8690((undefined (*) [16])"Player.FallGib");
  FUN_101c8690((undefined (*) [16])"Player.PlasmaDamage");
  FUN_101c8690((undefined (*) [16])"Player.Wade");
  FUN_101c8690((undefined (*) [16])"PropaneTank.Burst");
  FUN_101c8690((undefined (*) [16])"Shield.Throw");
  FUN_101c8690((undefined (*) [16])"Smoke.Bounce");
  FUN_101c8690((undefined (*) [16])"Smoke.Emit");
  FUN_101c8690((undefined (*) [16])"Smoke.Explode");
  FUN_101c8690((undefined (*) [16])"SprayCan.Paint");
  FUN_101c8690((undefined (*) [16])"Weapon_C4_Detonator.Relay_Switch");
  FUN_101c8690((undefined (*) [16])"Weapon_RPG7.Explode");
  FUN_101c8690((undefined (*) [16])"Weapon_RPG7.Fire");
  FUN_101c8690((undefined (*) [16])"Weapon_RPG7.Heli_Fire");
  FUN_101c8690((undefined (*) [16])"Weapon_RPG7.MidAir");
  FUN_101c8690((undefined (*) [16])"explode_3");
  FUN_101c8690((undefined (*) [16])"fx.liquid_leaking");
  FUN_101c8690((undefined (*) [16])"fx.plane_explosion_mini");
  FUN_101c8690((undefined (*) [16])"fx.steam_light");
  FUN_101c8690((undefined (*) [16])"fx.steam_strong");
  FUN_101c91a0(param_1,"Fire.Plasma");
  FUN_101c91a0(param_1,"Inferno.Loop");
  FUN_101c91a0(param_1,"Malinois.Breathe");
  FUN_101c91a0(param_1,"Rocket.Ignite");
  FUN_101c91a0(param_1,"Smoke.Explode");
  FUN_101c91a0(param_1,"Weapon_RPG7.MidAir");
  FUN_101c91a0(param_1,"fx.liquid_leaking");
  FUN_101c91a0(param_1,"fx.steam_strong");
  FUN_101c91a0(this,"Heli.WarningSound");
  FUN_101c91a0(this,"Hostage.Strain");
  FUN_101c91a0(this,"Malinois.Breathe");
  FUN_101c91a0(this,"Malinois.BreatheGrowl");
  FUN_101ca660(param_1,"NetChannel removed.");
  FUN_101ce7c0(&DAT_10673848,"CSoundscapeSystem");
  FUN_101cf7e0((void **)0x1,param_1,(byte *)"%cBanned by server\n");
  FUN_101d1b90((int)"67.132.200.140:27013",pvVar4);
  FUN_101d1d00(1,iVar1,0x6987,"server",0x11,0);
  FUN_101d2640(DAT_1064c53c,"func_wall");
  FUN_101d2640(DAT_1064c53c,"info_mass_center");
  FUN_101d2640(DAT_1064c53c,"phys_ballsocket");
  FUN_101d2640(DAT_1064c53c,"phys_constraint");
  FUN_101d2640(DAT_1064c53c,"phys_hinge");
  FUN_101d2640(DAT_1064c53c,"phys_lengthconstraint");
  FUN_101d2640(DAT_1064c53c,"phys_pulleyconstraint");
  FUN_101d2640(DAT_1064c53c,"phys_ragdollconstraint");
  FUN_101d2640(DAT_1064c53c,"phys_slideconstraint");
  FUN_101d2640(DAT_1064c53c,"prop_physics");
  FUN_101d2640(DAT_1064c53c,"prop_ragdoll");
  FUN_101d2640(DAT_1064c53c,"scripted_sequence");
  FUN_101d2640(DAT_1064c53c,"trigger_vphysics_motion");
  FUN_101d5ee0("game_playerdie",(int)param_1,(int)param_1,3,0);
  FUN_101d5ee0("game_playerdie",(int)piVar7,(int)piVar7,3,0);
  FUN_101ed3f0(param_1,(byte *)"hostname","Half-Life");
  FUN_101ed3f0(param_1,(byte *)"sv_password",&DAT_104eefb3);
  FUN_101f1360(&local_14,(int)"gameui_xbox");
  FUN_101f1360(&local_14,(int)"joy_cfg_preset");
  FUN_101f1360(&local_14,(int)"joy_movement_stick");
  FUN_101f1360(&local_18,(int)"joy_legacy");
  FUN_101f1360(&local_24,(int)"joy_cfg_custom_bindingsB");
  FUN_101f1360(&local_28,(int)"joy_movement_stick");
  FUN_101f1360(&local_34,(int)"joy_cfg_custom_bindingsA");
  FUN_101f1360(&local_38,(int)"joy_legacy");
  FUN_101f1360(&local_3c,(int)"joy_cfg_custom_bindingsA");
  FUN_101f1360(aiStack56 + 3,(int)"joy_cfg_custom_bindingsB");
  FUN_101f1360(local_14,(int)"Snd_Surround_Speakers");
  FUN_101f1360(local_14,(int)"dsp_enhance_stereo");
  FUN_101f1360(local_14,(int)"force_audio_english");
  FUN_101f1360(local_14,(int)"gameui_ingame_menu_active");
  FUN_101f1360(local_14,(int)"mat_monitorgamma");
  FUN_101f1360(local_14,(int)"mat_vsync");
  FUN_101f1360(local_14,(int)"sv_alltalk");
  FUN_101f1360(local_18,(int)"joy_cfg_preset");
  FUN_101f1360(local_20,(int)"developer");
  FUN_101f1360(local_24,(int)"dsp_slow_cpu");
  FUN_101f1360(local_24,(int)"gpu_mem_level");
  FUN_101f1360(local_24,(int)"ti_low_violence");
  FUN_101f1360(local_34,(int)"Snd_PitchQuality");
  FUN_101f1360(local_34,(int)"mat_triplebuffered");
  FUN_101f1360(local_34,(int)"ti_bloodsplatter");
  FUN_101f1360(local_44,(int)"Snd_Surround_Speakers");
  FUN_101f1360(local_44,(int)"joy_cfg_preset");
  FUN_101f1360(local_44,(int)"mat_antialias");
  FUN_101f1360(local_54,(int)"mat_queue_mode");
  FUN_101f1360(local_64,(int)"mat_forceaniso");
  FUN_101f1360(local_74,(int)"gpu_level");
  FUN_101f1360(local_84,(int)"mat_aaquality");
  FUN_101f1360(local_94,(int)"cpu_level");
  FUN_101f1360(local_a4,(int)"mem_level");
  FUN_101f1360(local_b4,(int)"csm_quality_level");
  FUN_101f3700((int)param_1,2,"noclip OFF\n",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
  FUN_101f3700((int)param_1,2,"noclip ON\n",(char *)0x0,(char *)0x0,(char *)0x0,(char *)0x0);
  FUN_101f3700((int)param_1,3,"Burninating you for 10 seconds!!\n",(char *)0x0,(char *)0x0,
  FUN_101f3700(param_1,2,"callvote %s1\n",param_2,(char *)0x0,(char *)0x0,(char *)0x0);
  FUN_101f4560(*(void **)((int)this + 0x1e4),"cfg/settings.scr");
  FUN_101f4560(puVar2,"cfg/settings_default.scr");
  FUN_101f45d0(1,"#Game_connected",pcVar3,(char *)0x0,(char *)0x0,(char *)0x0);
  FUN_101f4630(local_24,3,"TacticalTV camera switched to auto-director mode.",(char *)0x0,
  FUN_101f5020(iVar2,"");
  FUN_101f5020(iVar2,"valve_hint_reload");
  FUN_101f54b0((byte *)"%s entered NOCLIP mode\n");
  FUN_101f54b0((byte *)"%s left NOCLIP mode\n");
  FUN_101f54b0((byte *)"*** ENTERING ROUNDSTATE_PREGAME\n");
  FUN_101f54b0((byte *)"CTIPlayer::OnFullyConnected(%s) - SteamID: %llu - [DEVELOPER:%s]\n");
  FUN_101f54b0((byte *)"RequestTeamChange:: Assigning %s to TEAM: %s (CURRENT IS: %s)\n");
  FUN_101f54b0((byte *)"[RULES] EndRound: Current State: %s Played Rounds: %i\n");
  FUN_101f54b0((byte *)"[RULES] STARTING PLANNING PHASE\n ");
  FUN_101f54b0((byte *)"[RULES]CleanMap\n");
  FUN_101f54b0((byte *)"[RULES]DetermineMaxPlans\n");
  FUN_101f54b0((byte *)"[RULES]DetermineMaxSquadSpawns\n");
  FUN_101f54b0((byte *)"[RULES]DetermineNextPlan\n");
  FUN_101f54b0((byte *)"[RULES]PutPlayersInCars\n");
  FUN_101f54b0((byte *)"[RULES]RankPlayersOnTeam[%s]\n");
  FUN_101f54b0((byte *)"[RULES]RankPlayers\n");
  FUN_101f54b0((byte *)"[RULES]RespawnPlayers\n");
  FUN_101f54b0((byte *)"[RULES]ServerActivate\n");
  FUN_101f59d0((int *)"entityflame",(char *)0x0);
  FUN_101f59d0((int *)"window_pane",(char *)0x0);
  FUN_101f67b0((byte **)(param_1 + 0x10b),"Plat.DefaultMoving");
  FUN_101f67b0((byte **)(param_1 + 0x10c),"Plat.DefaultArrive");
  FUN_101f67b0((byte **)(param_1 + 0x111),"DoorSound.Null");
  FUN_101f67b0((byte **)(undefined (**) [16])(param_1 + 0x42c),"Plat.DefaultMoving");
  FUN_101f67b0((byte **)(undefined (**) [16])(param_1 + 0x430),"Plat.DefaultArrive");
  FUN_101f67b0((byte **)local_18,"DoorSound.Null");
  FUN_101f67b0((byte **)local_8,"DoorSound.Null");
  FUN_101f67b0((byte **)local_c,"DoorSound.Null");
  FUN_101f67b0((byte **)pauVar9,"DoorSound.Null");
  FUN_101f67b0((byte **)ppauVar4,"DoorSound.Null");
  FUN_101f7e20((int)local_c0,"Scorch",'\x01');
  FUN_101f7e20((int)piVar3,"Scorch",'\x01');
  FUN_101f8630(param_2,param_3,param_4,param_5,0,param_6,(int)"ParticleTracer",iVar1);
  FUN_101f9060("slideshow_display_screen");
  FUN_101f98c0(this,(uint *)"resource/UI/basemodui/Achievements.res",0,(uint *)0x0,0);
  FUN_101fa7a0(this,(int)"#GameUI_Audio",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"#GameUI_GameOptions",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"#GameUI_Video",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"#GameUI_VideoAdvanced_Title",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"#L4D360UI_AudioVideo",0,0,7,4,0);
  FUN_101fa7a0(this,(int)"#L4D360UI_Controller_Buttons_Title",0,1,0,0,0);
  FUN_101fa7a0(this,(int)"#L4D360UI_Controller_Sticks_Title",0,1,0,0,0);
  FUN_101fa7a0(this,(int)"#L4D360UI_Controller_Title",0,1,0,0,0);
  FUN_101fa7a0(this,(int)"#L4D360UI_KeyboardMouse",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"#L4D360UI_MainMenu_Extras",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"#L4D360UI_VoteOptions",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"#PORTAL2_MainMenu_Options",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"#PORTAL2_SoundTest_Title",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"#Portal2UI_PlayOnline",0,0,0,0,0);
  FUN_101fa7a0(this,(int)"L4D360UI_Controller_Edit_Keys_Buttons",0,0,0,0,0);
  FUN_101fbfb0((byte *)"CBaseDemoAction::AddEditorFactory: Bogus factory type %i\n");
  FUN_101fbfb0((byte *)"CBaseDemoAction::AddFactory: Bogus factory type %i\n");
  FUN_101fbfb0((byte *)"CM_Vis: error");
  FUN_101fbfb0((byte *)"COM_LoadFile: not enough space for %s");
  FUN_101fc2d0("Software\\FixKorea\\TIRELBASE","Rate",local_84,0x80,(BYTE *)"80000");
  FUN_101fc2d0("Software\\Valve\\Steam","Skin",local_84,0x80,"");
  FUN_101fca20("Software\\FixKorea\\TIRELBASE","Rate",local_8c);
  FUN_10204a40("COM_Init()","COM_Shutdown()",0);
  FUN_10204a40("COM_InitFilesystem( info.m_pInitialMod )","COM_ShutdownFileSystem()",0);
  FUN_10204a40("COM_InitFilesystem( m_StartupInfo.m_pInitialMod )","COM_ShutdownFileSystem()",0);
  FUN_10204a40("Cbuf_Init()","Cbuf_Shutdown()",0);
  FUN_10204a40("Cmd_Init()","Cmd_Shutdown()",0);
  FUN_10204a40("Con_Init()","Con_Shutdown()",0);
  FUN_10204a40("DevShotGenerator_Init()","DevShotGenerator_Shutdown()",0);
  FUN_10204a40("Filter_Init()","Filter_Shutdown()",0);
  FUN_10204a40("HLTV_Init()","HLTV_Shutdown()",0);
  FUN_10204a40("Host_Init( s_bIsDedicated )","Host_Shutdown()",0);
  FUN_10204a40("Key_Init()","Key_Shutdown()",0);
  FUN_10204a40("MapReslistGenerator_Init()","MapReslistGenerator_Shutdown()",0);
  FUN_10204a40("Memory_Init()","Memory_Shutdown()",0);
  FUN_10204a40("NET_Init( bDedicated )","NET_Shutdown()",0);
  FUN_10204a40("S_Init()","S_Shutdown()",0);
  FUN_10204a40("Steam3Client().Activate()","Steam3Client().Shutdown()",0);
  FUN_10204a40("Sys_Init()","Sys_Shutdown()",0);
  FUN_10204a40("Sys_InitAuthentication()","Sys_ShutdownAuthentication()",0);
  FUN_10204a40("Sys_InitMemory()","Sys_ShutdownMemory()",0);
  FUN_10204a40("VOX_Init()","VOX_Shutdown()",0);
  FUN_10204a40("V_Init()","V_Shutdown()",0);
  FUN_10204a40("audiosourcecache->Init( host_parms.memsize >> 2 )","audiosourcecache->Shutdown()",0)
  FUN_10204a40("g_GameEventManager.Init()","g_GameEventManager.Shutdown()",0);
  FUN_10204a40("g_Log.Init()","g_Log.Shutdown()",0);
  FUN_10204a40("g_pCVar->Init()","g_pCVar->Shutdown()",0);
  FUN_10204a40("g_pMaster->Init()","g_pMaster->Shutdown()",0);
  FUN_10204a40("g_pSteamSocketMgr->Init()","g_pSteamSocketMgr->Shutdown()",0);
  FUN_10204a40("sv.Init( bDedicated )","sv.Shutdown()",0);
  FUN_10204a70((byte *)"COM_Shutdown()",0);
  FUN_10204a70((byte *)"COM_ShutdownFileSystem()",0);
  FUN_10204a70((byte *)"Cbuf_Shutdown()",0);
  FUN_10204a70((byte *)"Cmd_Shutdown()",0);
  FUN_10204a70((byte *)"Con_Shutdown()",0);
  FUN_10204a70((byte *)"DevShotGenerator_Shutdown()",0);
  FUN_10204a70((byte *)"Filter_Shutdown()",0);
  FUN_10204a70((byte *)"HLTV_Shutdown()",0);
  FUN_10204a70((byte *)"Host_Shutdown()",0);
  FUN_10204a70((byte *)"Key_Shutdown()",0);
  FUN_10204a70((byte *)"MapReslistGenerator_Shutdown()",0);
  FUN_10204a70((byte *)"Memory_Shutdown()",0);
  FUN_10204a70((byte *)"NET_Shutdown()",0);
  FUN_10204a70((byte *)"ShutdownMixerControls()",0);
  FUN_10204a70((byte *)"Sys_Shutdown()",0);
  FUN_10204a70((byte *)"Sys_ShutdownAuthentication()",0);
  FUN_10204a70((byte *)"Sys_ShutdownMemory()",0);
  FUN_10204a70((byte *)"VOX_Shutdown()",0);
  FUN_10204a70((byte *)"V_Shutdown()",0);
  FUN_10204a70((byte *)"audiosourcecache->Shutdown()",0);
  FUN_10204a70((byte *)"g_GameEventManager.Shutdown()",0);
  FUN_10204a70((byte *)"g_Log.Shutdown()",0);
  FUN_10204a70((byte *)"g_pCVar->Shutdown()",0);
  FUN_10204a70((byte *)"g_pMaster->Shutdown()",0);
  FUN_10204a70((byte *)"g_pSteamSocketMgr->Shutdown()",0);
  FUN_10204a70((byte *)"saverestore->Shutdown()",0);
  FUN_10204a70((byte *)"sv.Shutdown()",0);
  FUN_1020acf0(piVar2,"screenshot.jpg",'\x01',&local_8,local_33c);
  FUN_10212cf0(0,"-HOST_HUNKLEVEL-",'\x01');
  FUN_10212cf0(param_1,"AllocLevelStaticData",'\0');
  FUN_102154d0((undefined (*) [16])"tools/ifm.dll");
  FUN_10216840(this,param_1,"AreaPortalUIPanel",0);
  FUN_10216840(this,param_1,"PropFadeUIPanel",0);
  FUN_10219620(this,param_1,"CConPanel",0);
  FUN_10219620(this,param_1,"CEntityReportPanel",0);
  FUN_10221d40((void *)((int)this + 0x260),0,(int)"showbudget_texture_global_dumpstats",0x10222070,0
  FUN_10227380(&local_898,(byte *)"%-30.30s %-30.30s %-45.45s %-10.10s");
  FUN_102289b0("nav_progress",'\0',(int)puVar1);
  FUN_102289b0("nav_progress",'\x01',(int)this_00);
  FUN_1023bfe0(this,param_1,"PlayerListContext",0);
  FUN_10242cf0(puVar8,"lightprobe");
  FUN_102604e0(this,param_1,"LookupViewPanel",0);
  FUN_102612f0("BaseUI",(int)&DAT_106abaa8,1);
  FUN_10263950(&DAT_10426e14,FUN_10030e30,"IEngineSoundClient003");
  FUN_10263950(&DAT_10426e20,FUN_10031610,"IEngineSoundServer003");
  FUN_10263950(&DAT_104e3334,FUN_1009e0c0,"VEngineClient015");
  FUN_10263950(&DAT_104f3e38,FUN_100e13a0,"VDebugOverlay004");
  FUN_10263950(&DAT_104f3e44,FUN_100e13b0,"VPhysicsDebugOverlay001");
  FUN_10263950(&DAT_105f8f3c,FUN_1010f910,"VEngineModel016");
  FUN_10263950(&DAT_1062589c,FUN_101304b0,"VEngineEffects001");
  FUN_10263950(&DAT_10639fe4,FUN_1013c970,"VEngineShadowMgr002");
  FUN_10263950(&DAT_1063b748,FUN_1013e440,"VEngineRenderView013");
  FUN_10263950(&DAT_10665134,FUN_10154480,"GameServerData001");
  FUN_10263950(&DAT_10665294,FUN_10156140,"ServerUploadGameStats001");
  FUN_10263950(&DAT_10665ca8,FUN_10159150,"VEngineServer022");
  FUN_10263950(&DAT_1066a884,FUN_10160140,"BlackBoxVersion001");
  FUN_10263950(&DAT_1066ade8,FUN_101675f0,"BugReporterUserName001");
  FUN_10263950(&DAT_106767dc,FUN_1017d6f0,"VCvarQuery001");
  FUN_10263950(&DAT_10681638,FUN_10198ac0,"EngineTraceServer004");
  FUN_10263950(&DAT_10681718,FUN_10198ab0,"EngineTraceClient004");
  FUN_10263950(&DAT_10681cf4,FUN_1019c6b0,"GAMEEVENTSMANAGER002");
  FUN_10263950(&DAT_10681d00,FUN_1019c940,"GAMEEVENTSMANAGER001");
  FUN_10263950(&DAT_106a4708,FUN_101c4170,"VModelInfoClient004");
  FUN_10263950(&DAT_106a4718,FUN_101c4180,"VModelInfoServer002");
  FUN_10263950(&DAT_106a4ff0,FUN_101cd220,"INETSUPPORT_001");
  FUN_10263950(&DAT_106a62d4,FUN_101dfb20,"VEngineClientStringTable001");
  FUN_10263950(&DAT_106a62f0,FUN_101dff30,"VEngineServerStringTable001");
  FUN_10263950(&DAT_106a882c,FUN_101e53c0,"VEngineRandom001");
  FUN_10263950(&DAT_106a91b0,FUN_101f5210,"SpatialPartition001");
  FUN_10263950(&DAT_106a940c,FUN_101f8830,"StaticPropMgrServer002");
  FUN_10263950(&DAT_106a9520,FUN_101f8820,"StaticPropMgrClient005");
  FUN_10263950(&DAT_106ac464,FUN_101fccd0,"FileLoggingListener001");
  FUN_10263950(&DAT_106ac844,FUN_101ff0e0,"VENGINE_GAMEUIFUNCS_VERSION005");
  FUN_10263950(&DAT_106ac850,FUN_101ff0d0,"VENGINE_LAUNCHER_API_VERSION004");
  FUN_10263950(&DAT_106ac85c,FUN_101ff0c0,"VENGINE_HLDS_API_VERSION002");
  FUN_10263950(&DAT_106ad1a8,FUN_10204c00,"VoiceServer002");
  FUN_10263950(&DAT_106ad378,FUN_10206200,"VProfExport001");
  FUN_10263950(&DAT_106af7dc,FUN_1020aad0,"XboxSystemInterface002");
  FUN_10263950(&DAT_106af8e0,FUN_10214210,"VENGINETOOL003");
  FUN_10263950(&DAT_106af8ec,FUN_10214210,"VENGINETOOLFRAMEWORK003");
  FUN_10263950(&DAT_106af8fc,FUN_10216480,"VCLIENTENGINETOOLS001");
  FUN_10263950(&DAT_106af958,FUN_10216490,"VSERVERENGINETOOLS001");
  FUN_10263950(&DAT_106af964,FUN_102164a0,"VTOOLFRAMEWORKVERSION002");
  FUN_10263950(&DAT_106afc54,FUN_1021ccc0,"VEngineVGui001");
  FUN_10264260((char *)((int)this + 1),".txt",0x100);
  FUN_10264260((char *)local_208,".vdm",0x200);
  FUN_10264260(local_104,".wav",0x100);
  FUN_10264260(local_108,".WAV",0x104);
  FUN_10264260(local_108,".dem",0x104);
  FUN_10264260(local_110,".WAV",0x104);
  FUN_10264260(local_208,".vdm",0x200);
  FUN_102646b0(this_00,"Voting disabled on this Server");
  FUN_10264910((char *)local_16c,".prb",0x104);
  FUN_10264910(local_108,".raw",0x104);
  FUN_10264910(local_204,".manifest",0x200);
  FUN_10264910(local_210,".txt",0x104);
  FUN_10264910(local_264,".manifest",0x200);
  FUN_10265920(&DAT_104f3af8,0x80,(byte *)"%02i/%02i/%04i - %02i:%02i:%02i");
  FUN_10265920(&DAT_10676728,0x40,(byte *)"%02i:%02i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s(%s): bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: %i bytes");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: %i cvars, \"%s\"=\"%s\"");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: %i userinfo vars");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: %s %.1f %.1f %.1f ");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: %s slot %d [%d]");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: %s");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: (%.1f %.1f %.1f)");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: LoadingProgress %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: SendTableCRC %lu");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: \"%s\"");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: backup %i, new %i, bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: client %i, bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: codec \"%s\", qualitty %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: cvar: %s, cookie: %d");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: delta %i, max %i, changed %i,%s bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: entity %i, class %i, bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: game \"%s\", map \"%s\", max %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: needs Decoder %s,bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: num %i, %s");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: number %i, bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: number %i,%s bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: path: %s, file: %s");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: registered events %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: slot %d");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: state %i, count %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: status: %d, value: %s, cookie: %d");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: table %i, changed %i, bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: tex %i, ent %i, mod %i lowpriority %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: tick %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: type %i index %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: type %i, bytes %i");
  FUN_10265920(&DAT_106a59f0,0x400,(byte *)"%s: view entity %i");
  FUN_10265920(&DAT_106f39d8,0x400,(byte *)"%s, string command, int default");
  FUN_10265920(&DAT_106f3e58,0x200,(byte *)"%s, string title");
  FUN_10265920(&DAT_106f5ad8,0x400,(byte *)"%s, string leftText, string rightText");
  FUN_10265920(&DAT_106f5fe0,0x400,(byte *)"%s, int SubTabPosition");
  FUN_10265920(&DAT_106f6888,0x400,(byte *)"%s, string image");
  FUN_10265920(&DAT_106f72b8,0x400,(byte *)"%s, string text, bool scrollbar");
  FUN_10265920(&local_104,0xff,(byte *)"materials/%s.vmt");
  FUN_10265920(&local_108,0x104,(byte *)"//%s/%sautosave%s.tga");
  FUN_10265920(&local_20c,0x104,(byte *)"//%s/%sautosavedangerous%s.tga");
  FUN_10265920(&local_3ac,0xff,(byte *)"materials/%s.vtf");
  FUN_10265920((char *)((int)this + 0x144),0x140,(byte *)"timestamp_%s");
  FUN_10265920((char *)((int)this + 0x75659),0x40,(byte *)"group%d");
  FUN_10265920((char *)((int)this + 4),0x140,(byte *)"cachefile_%s");
  FUN_10265920((char *)(param_1 + 0x60),0x40,(byte *)"%s:  ");
  FUN_10265920((char *)local_204,0x200,(byte *)"%s/c%d_%d_%d%s.vtf");
  FUN_10265920((char *)local_204,0x200,(byte *)"sound/%s");
  FUN_10265920((char *)local_20c,0x104,(byte *)"maps/%s.res");
  FUN_10265920((char *)local_308,0x200,(byte *)"sound/%s");
  FUN_10265920((char *)local_390,0xff,(byte *)"\\TacticalIntervention\\%s");
  FUN_10265920((char *)piVar10,0x104,(byte *)"%s/maps");
  FUN_10265920(local_104,0x100,(byte *)"ss_disconnect %d\n");
  FUN_10265920(local_104,0xff,(byte *)"\\TacticalIntervention\\%s");
  FUN_10265920(local_104,0xff,(byte *)"cmd %s");
  FUN_10265920(local_108,0x100,(byte *)"%s\\%s");
  FUN_10265920(local_108,0x104,(byte *)"%s/simpleworldmodel%s.qc");
  FUN_10265920(local_108,0x104,(byte *)"%s\\%s");
  FUN_10265920(local_108,0x104,(byte *)"%s_%s");
  FUN_10265920(local_108,0x104,(byte *)"map %s");
  FUN_10265920(local_108,0x104,(byte *)"maps/%s.bsp");
  FUN_10265920(local_108,0x104,(byte *)"maps\\%s.bsp");
  FUN_10265920(local_108,0x104,(byte *)"maps\\%s.nav");
  FUN_10265920(local_108,0x104,(byte *)"materials/models/maps/%s");
  FUN_10265920(local_108,0x104,(byte *)"materialsrc/models/maps/%s");
  FUN_10265920(local_108,0x104,(byte *)"models/maps/%s");
  FUN_10265920(local_108,0x104,(byte *)"server_mapkit.dll");
  FUN_10265920(local_108,0x104,(byte *)"sound\\%s");
  FUN_10265920(local_110,0x103,(byte *)"resource/%s_%%language%%.txt");
  FUN_10265920(local_114,0x104,(byte *)"%s/simpleworldmodel%s.smd");
  FUN_10265920(local_118,0x104,(byte *)"%s/%s.tga");
  FUN_10265920(local_118,0x104,(byte *)"scripts/soundmixers.txt");
  FUN_10265920(local_138,0x104,(byte *)"materials/%s.vtf");
  FUN_10265920(local_140,0x104,(byte *)"cfg/%s");
  FUN_10265920(local_140,0x104,(byte *)"maps/%s.bsp");
  FUN_10265920(local_140,0x104,(byte *)"tv-%04i%02i%02i-%02i-%02i_%s_%s.dem");
  FUN_10265920(local_144,0x104,(byte *)"maps/%s.lin");
  FUN_10265920(local_14c,0x104,(byte *)"modellist_%s.csv");
  FUN_10265920(local_164,0x104,(byte *)"scripts/dsp_presets.txt");
  FUN_10265920(local_170,0x104,(byte *)"maps/%s.bsp");
  FUN_10265920(local_17c,0x104,(byte *)"%s\\%s_%s");
  FUN_10265920(local_1a0,0x100,(byte *)"%s (Build %d) version %d.%d (LimitedUser: %s)");
  FUN_10265920(local_1b0,0x40,(byte *)"%ld.%ld.%ld.%ld");
  FUN_10265920(local_204,0x200,(byte *)";%s %c %d;");
  FUN_10265920(local_208,0x200,(byte *)"%s.dll");
  FUN_10265920(local_20c,0x104,(byte *)"%skb_def.lst");
  FUN_10265920(local_20c,0x200,(byte *)"%-30.30s %-30.30s %-45.45s %-10.10s");
  FUN_10265920(local_20c,0x200,(byte *)"%s: \'%s\'");
  FUN_10265920(local_21c,0x104,(byte *)"%s/%s.txt");
  FUN_10265920(local_228,0x200,(byte *)"%s/%s%s.cache");
  FUN_10265920(local_234,0x200,(byte *)"%s.manifest");
  FUN_10265920(local_244,0x104,(byte *)"cfg/%s");
  FUN_10265920(local_25c,0x200,(byte *)"sound/%s");
  FUN_10265920(local_25d4,0x1000,(byte *)"%sPP PAGES: used: %d, free %d\n");
  FUN_10265920(local_268,0x104,(byte *)"%s/bugconsole.txt");
  FUN_10265920(local_30,0x20,(byte *)"%s:%s");
  FUN_10265920(local_304,0x200,(byte *)"%s/%s.vmf");
  FUN_10265920(local_304,0xff,(byte *)"/E,/SELECT,%s");
  FUN_10265920(local_30c,0x308,(byte *)"studiomdl.exe -nop4 %s");
  FUN_10265920(local_404,0x400,(byte *)"demo_play %s");
  FUN_10265920(local_418,0x200,(byte *)"%s/*.*");
  FUN_10265920(local_524,0x308,(byte *)"vtex.exe -nop4 %s");
  FUN_10265920(local_5d4,0x100,(byte *)"skill:%i rate %i update %i cmd %i latency %i msec");
  FUN_10265920(local_6488,0x2000,(byte *)"Blackbox dumped at %02d:%02d:%02.3f\n");
  FUN_10265920(local_dc,0x60,(byte *)"maps/*.%sbsp");
  FUN_10265920(param_1,param_2,(byte *)"console/background_%d%s");
  FUN_10265920(param_2,param_3,(byte *)"%i_%02i_%02i_%s");
  FUN_10265920(param_2,param_3,(byte *)"%s_l_%d.lmp");
  FUN_10265920(pcVar3,0xff,(byte *)"[U:%u:%u]");
  FUN_102659a0((byte *)"TextMessageDefault",(byte *)((int)this + 0x298));
  FUN_10265b40(acStack269 + 1," ",0x100,0xffffffff);
  FUN_10265b40(local_104,"_fixed",0x100,0xffffffff);
  FUN_10265b40(local_108,"*.HL?",0x104,0xffffffff);
  FUN_10265b40(local_108,"/simpleworldmodel.vmt",0x104,0xffffffff);
  FUN_10265b40(local_110,"gameinfo.txt",0x104,0xffffffff);
  FUN_10265b40(local_114,"vconfig.exe",0x104,0xffffffff);
  FUN_10265b40(local_204,"#",0x200,0xffffffff);
  FUN_10265b40(local_20c,".dem",0x104,0xffffffff);
  FUN_10265b40(local_64,"_captions.txt",0x60,0xffffffff);
  FUN_10265b40(local_a0,",",0x80,0xffffffff);
  FUN_10265b40(param_1,"bin",param_2,0xffffffff);
  FUN_10265bf0((char *)((int)this + 0x21c),(int)"TacticalTV Demo",0x104);
  FUN_10265bf0((char *)(uint *)((int)this + 0x108),(int)"HL2DEMO",8);
  FUN_10265bf0((char *)local_24,(int)"VLV_INTERNAL                    ",0x20);
  FUN_10265bf0((char *)local_44,(int)"english",0x40);
  FUN_10265bf0((char *)local_84,(int)"english",0x80);
  FUN_10265bf0((char *)param_1,(int)"unknown",uVar1);
  FUN_10265bf0(local_10c,(int)"cfg/banned_ip.cfg",0x104);
  FUN_10265bf0(local_10c,(int)"cfg/banned_user.cfg",0x104);
  FUN_10265bf0(local_204,(int)"sound",0x200);
  FUN_10265bf0(local_84,(int)"Connection rejected by game\n",0x80);
  FUN_10265bf0(local_dc,(int)"hl2.exe",0x40);
  FUN_10265bf0(param_1,(int)"?VoiceSfx",param_2);
  FUN_10265bf0(param_1,(int)"Tick Number,",param_2);
  FUN_10265bf0(pcVar1,(int)"unknown",0x40);
  FUN_10265f30((int)&local_14,"V_NUMBERS");
  FUN_10265f30((int)&local_1c,"V_NUMBERS");
  FUN_10265f30((int)(param_1 + 0x10a),"Curves");
  FUN_10265f30((int)(param_1 + 1),"");
  FUN_10265f30((int)local_120,"_rt_FullFrameFB");
  FUN_10265f30((int)param_1 + 0x115,"Lookup");
  FUN_10265f30((int)param_1 + 0x1b31,"Balance");
  FUN_10265f30((int)this + 0x421,"Levels");
  FUN_10265f30((int)this + 0x51,"HSV");
  FUN_102662e0(&DAT_10426e68,(int)"snd_front_headphone_position",(int)FUN_10034fb0,
  FUN_102662e0(&DAT_10426e8c,(int)"snd_rear_headphone_position",(int)FUN_10035280,
  FUN_102662e0(&DAT_10426eb0,(int)"snd_front_stereo_speaker_position",(int)FUN_10035040,
  FUN_102662e0(&DAT_10426ed4,(int)"snd_rear_stereo_speaker_position",(int)FUN_10035310,
  FUN_102662e0(&DAT_10426ef8,(int)"snd_front_surround_speaker_position",(int)FUN_100350d0,
  FUN_102662e0(&DAT_10426f1c,(int)"snd_rear_surround_speaker_position",(int)FUN_100353a0,
  FUN_102662e0(&DAT_10426f40,(int)"snd_headphone_pan_exponent",(int)FUN_10035160,
  FUN_102662e0(&DAT_10426f64,(int)"snd_stereo_speaker_pan_exponent",(int)FUN_10035430,
  FUN_102662e0(&DAT_10426f88,(int)"snd_surround_speaker_pan_exponent",(int)FUN_10035550,
  FUN_102662e0(&DAT_10426fac,(int)"snd_headphone_pan_radial_weight",(int)FUN_100351f0,
  FUN_102662e0(&DAT_10426fd0,(int)"snd_stereo_speaker_pan_radial_weight",(int)FUN_100354c0,
  FUN_102662e0(&DAT_10426ff4,(int)"snd_surround_speaker_pan_radial_weight",(int)FUN_100355e0,
  FUN_102662e0(&DAT_10427148,(int)"dsound_devices",(int)FUN_10038690,&DAT_103236cf,0,
  FUN_102662e0(&DAT_1042716c,(int)"dsound_set",(int)FUN_100386f0,&DAT_103236cf,0,(undefined *)0x0);
  FUN_102662e0(&DAT_1043cc68,(int)&DAT_10325cf8,(int)FUN_100437c0,"Play a sound.",0x10000000,
  FUN_102662e0(&DAT_1043cc8c,(int)"playflush",(int)FUN_100437c0,
  FUN_102662e0(&DAT_1043ccb0,(int)"playvol",(int)FUN_10043a50,"Play a sound at a specified volume.",
  FUN_102662e0(&DAT_1043ccd4,(int)"speak",(int)FUN_100440c0,"Play a constructed sentence.",0,
  FUN_102662e0(&DAT_10446034,(int)"snd_dump_filepaths",(int)FUN_10042280,(undefined *)0x0,0,
  FUN_102662e0(&DAT_104466a8,(int)"snd_dumpclientsounds",(int)thunk_FUN_100420a0,
  FUN_102662e0(&DAT_104466cc,(int)"dsp_reload",(int)FUN_10041f60,(undefined *)0x0,0,(undefined *)0x0
  FUN_102662e0(&DAT_104467a0,(int)"sndplaydelay",(int)FUN_10043920,(undefined *)0x0,0,
  FUN_102662e0(&DAT_104467c4,(int)"snd_print_channel_by_index",(int)FUN_10047f30,
  FUN_102662e0(&DAT_104467e8,(int)"snd_print_channel_by_guid",(int)FUN_10047e00,
  FUN_102662e0(&DAT_1044680c,(int)"snd_print_channels",(int)FUN_10047fc0,
  FUN_102662e0(&DAT_10446830,(int)"snd_set_master_volume",(int)FUN_10048060,
  FUN_102662e0(&DAT_10462910,(int)"snd_print_dsp_effect",(int)FUN_100558d0,
  FUN_102662e0(&DAT_104b0240,(int)"snd_setmixer",(int)FUN_100600d0,
  FUN_102662e0(&DAT_104b0264,(int)"snd_setmixlayer",(int)FUN_1005fe90,
  FUN_102662e0(&DAT_104b0288,(int)"snd_setmixlayer_amount",(int)FUN_1005ff50,
  FUN_102662e0(&DAT_104b02ac,(int)"snd_soundmixer_set_trigger_factor",(int)FUN_10060000,
  FUN_102662e0(&DAT_104b0328,(int)"snd_soundmixer_flush",(int)thunk_FUN_1005ed60,
  FUN_102662e0(&DAT_104b034c,(int)"snd_soundmixer_list_mixers",(int)FUN_1005ebb0,
  FUN_102662e0(&DAT_104b03c8,(int)"snd_soundmixer_list_mix_layers",(int)FUN_1005e9c0,
  FUN_102662e0(&DAT_104b03ec,(int)"snd_soundmixer_list_mix_groups",(int)FUN_1005e9a0,
  FUN_102662e0(&DAT_104b0410,(int)"snd_getmixer",(int)FUN_1005e660,
  FUN_102662e0(&DAT_104c29bc,(int)"snd_async_flush",(int)FUN_10066270,
  FUN_102662e0(&DAT_104c29e0,(int)"snd_async_showmem",(int)FUN_10066290,"Show async memory stats",0,
  FUN_102662e0(&DAT_104c2a04,(int)"snd_async_showmem_summary",(int)FUN_100662b0,
  FUN_102662e0(&DAT_104c2a28,(int)"snd_async_showmem_music",(int)FUN_100662a0,
  FUN_102662e0(&DAT_104c2d70,(int)"snd_rebuildaudiocache",(int)FUN_1006ce20,
  FUN_102662e0(&DAT_104c2d94,(int)"snd_writemanifest",(int)FUN_1006ce40,
  FUN_102662e0(&DAT_104c2db8,(int)"snd_updateaudiocache",(int)FUN_1006ce30,
  FUN_102662e0(&DAT_104c2e1c,(int)"movie_fixwave",(int)FUN_1006d000,
  FUN_102662e0(&DAT_104c46f8,(int)"snd_sos_set_opvar",(int)FUN_10081200,&DAT_103236cf,0x4000,
  FUN_102662e0(&DAT_104c471c,(int)"snd_sos_get_opvar",(int)FUN_100811a0,&DAT_103236cf,0x4000,
  FUN_102662e0(&DAT_104e2640,(int)"envmap",(int)FUN_10097910,&DAT_103236cf,0,(undefined *)0x0);
  FUN_102662e0(&DAT_104e2664,(int)"lightprobe",(int)FUN_10097a50,
  FUN_102662e0(&DAT_104e2688,(int)"buildcubemaps",(int)FUN_10097890,"Rebuild cubemaps.",0,
  FUN_102662e0(&DAT_104e2728,(int)"buildmodelforworld",(int)FUN_1009a6f0,"buildmodelforworld",0,
  FUN_102662e0(&DAT_104e285c,(int)"bench_start",(int)FUN_1009ad20,
  FUN_102662e0(&DAT_104e2880,(int)"bench_end",(int)FUN_1009ad10,"Ends gathering of info.",0x4000,
  FUN_102662e0(&DAT_104e28a4,(int)"bench_upload",(int)FUN_1009ad40,
  FUN_102662e0(&DAT_104e3e34,(int)"demo_stop",(int)FUN_100a2680,"Finish recording demo.",0,
  FUN_102662e0(&DAT_104e40c0,(int)"demo_record",(int)FUN_100a25b0,"Record a demo.",0x20000,
  FUN_102662e0(&DAT_104e40e4,(int)"demo_record_inc",(int)FUN_100a2620,"Record a demo incrementally."
  FUN_102662e0(&DAT_104e4108,(int)"demo_play",(int)FUN_1009e4a0,"Play a recorded demo file (.dem )."
  FUN_102662e0(&DAT_104e412c,(int)"timedemo",(int)FUN_1009e680,
  FUN_102662e0(&DAT_104e4150,(int)"timedemoquit",(int)FUN_1009e570,
  FUN_102662e0(&DAT_104e4174,(int)"demo_pause",(int)FUN_100a2570,"Pauses demo playback.",0,
  FUN_102662e0(&DAT_104e4198,(int)"demo_resume",(int)FUN_100a2670,"Resumes demo playback.",0,
  FUN_102662e0(&DAT_104e41bc,(int)"demo_togglepause",(int)FUN_100a2730,"Toggles demo playback.",0,
  FUN_102662e0(&DAT_104e41e0,(int)"demo_gototick",(int)FUN_100a24c0,"Skips to a tick in demo.",0,
  FUN_102662e0(&DAT_104e4204,(int)"demo_timescale",(int)FUN_100a26d0,"Sets demo replay speed.",0,
  FUN_102662e0(&DAT_104f1f30,(int)"connect",(int)FUN_100b94a0,"Connect to specified server.",0x20000
  FUN_102662e0(&DAT_104f1f54,(int)"connect_splitscreen",(int)FUN_100b9660,
  FUN_102662e0(&DAT_104f1fd0,(int)"screenshot",(int)FUN_100b9a40,"Take a screenshot.",0x40000000,
  FUN_102662e0(&DAT_104f1ff4,(int)"devshots_screenshot",(int)FUN_100b9800,
  FUN_102662e0(&DAT_104f203c,(int)&DAT_1033d6f8,(int)FUN_100b9940,"Issue an rcon command.",0x20000,
  FUN_102662e0(&DAT_104f2168,(int)&DAT_1033d71c,(int)FUN_100b91a0,"Draw a debug box.",0x4000,
  FUN_102662e0(&DAT_104f218c,(int)"cl_view",(int)FUN_100b93d0,"Set the view entity index.",0x4000,
  FUN_102662e0(&DAT_104f21b0,(int)"cl_showents",(int)FUN_100b9300,"Dump entity list to console.",
  FUN_102662e0(&DAT_104f21d4,(int)"startupmenu",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_104f22a8,(int)"cl_fullupdate",(int)FUN_100b9270,
  FUN_102662e0(&DAT_104f22cc,(int)"setinfo",(int)FUN_100b9a90,"Adds a new user info value",
  FUN_102662e0(&DAT_104f22f0,(int)"cl_precacheinfo",(int)FUN_100b9290,"Show precache info (client)."
  FUN_102662e0(&DAT_104f2314,(int)"con_min_severity",(int)FUN_100b9470,
  FUN_102662e0(&DAT_104f25c8,(int)"vprof_remote_stop",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_104f2648,(int)"rpt_screenshot",(int)FUN_100bbd00,&DAT_103236cf,0x20010,
  FUN_102662e0(&DAT_104f266c,(int)"rpt_download_log",(int)FUN_100bbcf0,&DAT_103236cf,0x20010,
  FUN_102662e0(&DAT_104f2794,(int)"vprof_remote_start",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_104f28b4,(int)"remote_bug",(int)FUN_100bbce0,
  FUN_102662e0(&DAT_104f2e50,(int)"mat_texture_list_txlod",(int)FUN_100c62a0,
  FUN_102662e0(&DAT_104f3150,(int)"asw_engine_finished_building_map",(int)FUN_100c9f50,
  FUN_102662e0(&DAT_104f3a80,(int)"log_level",(int)FUN_100dae20,
  FUN_102662e0(&DAT_104f3aa4,(int)"log_color",(int)FUN_100da750,
  FUN_102662e0(&DAT_104f3ac8,(int)"log_flags",(int)FUN_100daab0,
  FUN_102662e0(&DAT_105f7688,(int)"mat_edit",(int)FUN_100f2f30,
  FUN_102662e0(&DAT_105f76ac,(int)"mat_crosshair",(int)FUN_100f2c90,
  FUN_102662e0(&DAT_105f76d0,(int)"mat_crosshair_edit",(int)FUN_100f2cc0,
  FUN_102662e0(&DAT_105f76f4,(int)"mat_crosshair_explorer",(int)FUN_100f2dc0,
  FUN_102662e0(&DAT_105f7718,(int)"mat_crosshair_reloadmaterial",(int)FUN_100f2ef0,
  FUN_102662e0(&DAT_105f773c,(int)"mat_crosshair_printmaterial",(int)FUN_100f2eb0,
  FUN_102662e0(&DAT_105f804c,(int)"r_cleardecals",(int)FUN_100f7a10,
  FUN_102662e0(&DAT_105fa90c,(int)"mat_configcurrent",(int)FUN_10112830,
  FUN_102662e0(&DAT_105fb2d0,(int)"mat_setvideomode",(int)FUN_10112a50,
  FUN_102662e0(&DAT_105fb2f4,(int)"mat_enable_vrmode",(int)FUN_10112890,
  FUN_102662e0(&DAT_105fb318,(int)"mat_savechanges",(int)FUN_10112a20,
  FUN_102662e0(&DAT_105fb33c,(int)"mat_updateconvars",(int)FUN_10112b50,
  FUN_102662e0(&DAT_105fb360,(int)"mat_debug",(int)FUN_10112850,
  FUN_102662e0(&DAT_105fb384,(int)"mat_suppress",(int)FUN_10112b10,
  FUN_102662e0(&DAT_105fb3a8,(int)"mat_reset_rendertargets",(int)FUN_101129c0,
  FUN_102662e0(&DAT_105fb3cc,(int)"mat_info",(int)FUN_101129b0,"Shows material system info",0,
  FUN_102662e0(&DAT_105fba54,(int)"mem_vcollide",(int)FUN_1011cbd0,
  FUN_102662e0(&DAT_105fbce8,(int)"vx_model_list",(int)FUN_1011cc00,"Dump models to VXConsole",0,
  FUN_102662e0(&DAT_105fbd0c,(int)"mod_dynamicmodeldebug",(int)FUN_1011cbf0,
  FUN_102662e0(&DAT_105fbd30,(int)"mod_combiner_info",(int)FUN_1011cbe0,
  FUN_102662e0(&DAT_1063bed0,(int)"addip",(int)FUN_10146480,"Add an IP address to the ban list.",0,
  FUN_102662e0(&DAT_1063bef4,(int)"banip",(int)FUN_10146480,"Add an IP address to the ban list.",0,
  FUN_102662e0(&DAT_1063bf18,(int)"removeip",(int)FUN_10147600,
  FUN_102662e0(&DAT_1063bf3c,(int)"listip",(int)FUN_101471e0,"List IP addresses on the ban list.",0,
  FUN_102662e0(&DAT_1063bf60,(int)"writeip",(int)FUN_101479c0,"Save the ban list to banned_ip.cfg.",
  FUN_102662e0(&DAT_1063bf84,(int)"writeid",(int)FUN_101478c0,
  FUN_102662e0(&DAT_1063bfa8,(int)"removeallids",(int)FUN_101472d0,
  FUN_102662e0(&DAT_1063bfcc,(int)"removeid",(int)FUN_101472f0,"Remove a user ID from the ban list."
  FUN_102662e0(&DAT_1063bff0,(int)"listid",(int)FUN_10147130,"Lists banned users.",0,
  FUN_102662e0(&DAT_1063c014,(int)"banid",(int)FUN_10146c30,"Add a user ID to the ban list.",0,
  FUN_102662e0(&DAT_106405bc,(int)"logaddress_add",(int)FUN_1014ace0,
  FUN_102662e0(&DAT_106405e0,(int)"logaddress_delall",(int)FUN_1014afc0,
  FUN_102662e0(&DAT_10640604,(int)"logaddress_del",(int)FUN_1014ae50,
  FUN_102662e0(&DAT_10640628,(int)"logaddress_list",(int)FUN_1014aff0,
  FUN_102662e0(&DAT_10640eac,(int)"sv_pure",(int)FUN_1014d7a0,"Show user data.",0,(undefined *)0x0);
  FUN_102662e0(&DAT_10663ab0,(int)&DAT_10354214,(int)FUN_1014edf0,"Show user data.",0,
  FUN_102662e0(&DAT_10663ad4,(int)"users",(int)FUN_1014eed0,"Show user info for players on server.",
  FUN_102662e0(&DAT_10663af8,(int)"maxplayers",(int)FUN_1014ecd0,
  FUN_102662e0(&DAT_10663e68,(int)"sv_precacheinfo",(int)FUN_101509d0,"Show precache info.",0,
  FUN_102662e0(&DAT_10666254,(int)"sv_showtags",(int)FUN_1015fbc0,"Describe current gametags.",0,
  FUN_102662e0(&DAT_1066a858,(int)"blackbox_dump",(int)FUN_10160150,
  FUN_102662e0(&DAT_1066a8e8,(int)"blackbox_record",(int)FUN_101601d0,
  FUN_102662e0(&DAT_1066aea8,(int)"_bugreporter_restart",(int)FUN_10167600,
  FUN_102662e0(&DAT_1066af28,(int)&DAT_1035aba8,(int)FUN_10167920,"Show the bug reporting UI.",
  FUN_102662e0(&DAT_1066b6bc,(int)&DAT_1035b730,(int)FUN_1016d720,"Forward command to server.",0,
  FUN_102662e0(&DAT_106726e4,(int)"execifexists",(int)FUN_1016cb40,
  FUN_102662e0(&DAT_10672724,(int)"stuffcmds",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_10672748,(int)&DAT_1035b70c,(int)FUN_1016d740,"Echo text to console.",0x10000000
  FUN_102662e0(&DAT_1067276c,(int)"BindToggle",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_10672790,(int)&DAT_1035b738,(int)FUN_1016cb60,"Execute script file.",0,
  FUN_102662e0(&DAT_10672b80,(int)"occlusion_test_record",(int)FUN_10173e40,
  FUN_102662e0(&DAT_10672c14,(int)"occlusion_test_run",(int)FUN_10173fb0,"run occlusion test",0x4000
  FUN_102662e0(&DAT_1067676c,(int)"reset_gameconvars",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_10681644,(int)"occlusion_stats",(int)FUN_10198c40,
  FUN_102662e0(&DAT_10681724,(int)"disp_list_all_collideable",(int)FUN_10198ad0,
  FUN_102662e0(&DAT_10681760,(int)"fs_warning_level",(int)FUN_10198dc0,
  FUN_102662e0(&DAT_10681784,(int)"fs_printopenfiles",(int)FUN_10198d80,
  FUN_102662e0(&DAT_106817a8,(int)"fs_syncdvddevcache",(int)FUN_10198da0,
  FUN_102662e0(&DAT_106817cc,(int)&DAT_1035f1b8,(int)FUN_10198eb0,"Show the engine filesystem path."
  FUN_102662e0(&DAT_10681cd0,(int)"net_dumpeventstats",(int)FUN_1019c6c0,
  FUN_102662e0(&DAT_10681d28,(int)"TransmitEvents",(int)FUN_1019c950,
  FUN_102662e0(&DAT_10682038,(int)"tv_stoprecord",(int)FUN_101a3c40,
  FUN_102662e0(&DAT_1068205c,(int)"tv_msg",(int)FUN_101a3520,"Send a screen message to all clients."
  FUN_102662e0(&DAT_106821e0,(int)"tv_stop",(int)FUN_101a3be0,"Stops the TacticalTV broadcast.",0,
  FUN_102662e0(&DAT_10682204,(int)"tv_clients",(int)FUN_101a33b0,
  FUN_102662e0(&DAT_10682228,(int)"tv_relay",(int)FUN_101a3720,
  FUN_102662e0(&DAT_106822ac,(int)"tv_status",(int)FUN_101a38c0,"Show TacticalTV server status.",0,
  FUN_102662e0(&DAT_10682328,(int)"tv_retry",(int)FUN_101a3800,
  FUN_102662e0(&DAT_106824b0,(int)"tv_record",(int)FUN_101a35c0,"Starts TacticalTV demo recording.",
  FUN_102662e0(&DAT_106824d4,(int)"editdemo",(int)FUN_101a1500,"Edit a recorded demo file (.dem ).",
  FUN_102662e0(&DAT_106825c4,(int)"threadpool_cycle_reserve",(int)FUN_101aa720,
  FUN_102662e0(&DAT_106825e8,(int)"mem_dump",(int)FUN_101aa590,"Dump memory stats to text file.",0,
  FUN_102662e0(&DAT_1068260c,(int)"host_runofftime",(int)FUN_101aa290,
  FUN_102662e0(&DAT_10682630,(int)"mem_compact",(int)FUN_101aa580,&DAT_103236cf,0,(undefined *)0x0);
  FUN_102662e0(&DAT_10682814,(int)"host_writeconfig",(int)FUN_101aa3a0,
  FUN_102662e0(&DAT_106828e8,(int)"host_writeconfig_ss",(int)FUN_101aa4a0,
  FUN_102662e0(&DAT_1068290c,(int)"mem_incremental_compact",(int)FUN_101aa600,&DAT_103236cf,0,
  FUN_102662e0(&DAT_10682930,(int)"mem_test",(int)thunk_FUN_101a7fc0,&DAT_103236cf,0,
  FUN_102662e0(&DAT_106829c4,(int)"thread_test_tslist",(int)FUN_101aa630,&DAT_103236cf,0,
  FUN_102662e0(&DAT_10682af8,(int)"write_config_to_cloud",(int)FUN_101aa7b0,
  FUN_102662e0(&DAT_10683280,(int)"mem_verify",(int)FUN_101aa620,"Verify the validity of the heap",0
  FUN_102662e0(&DAT_10683320,(int)"threadpool_run_tests",(int)FUN_101aa770,&DAT_103236cf,0,
  FUN_102662e0(&DAT_10683344,(int)"host_writeconfig_forced",(int)FUN_101aa420,
  FUN_102662e0(&DAT_1068343c,(int)"mem_eat",(int)FUN_101aa5e0,&DAT_103236cf,0,(undefined *)0x0);
  FUN_102662e0(&DAT_106834b8,(int)"host_timer_report",(int)FUN_101aa350,
  FUN_102662e0(&DAT_106834dc,(int)"display_elapsedtime",(int)FUN_101aa270,
  FUN_102662e0(&DAT_106835b0,(int)"thread_test_tsqueue",(int)FUN_101aa6a0,&DAT_103236cf,0,
  FUN_102662e0(&DAT_10684930,(int)"restart",(int)FUN_101ac620,
  FUN_102662e0(&DAT_10684954,(int)"stringtabledictionary",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_10684978,(int)"dec_sensitivity",(int)FUN_101ab800,
  FUN_102662e0(&DAT_1068499c,(int)"killserver",(int)FUN_101abfa0,"Shutdown the server.",0,
  FUN_102662e0(&DAT_106849c0,(int)"flush",(int)FUN_101abaa0,"Flush unlocked cache memory.",0x4000,
  FUN_102662e0(&DAT_10684a08,(int)"pause",(int)FUN_101ac270,"Toggle the server pause state.",0,
  FUN_102662e0(&DAT_10684aac,(int)"demos",(int)FUN_101ab8e0,"Demo demo file sequence.",0,
  FUN_102662e0(&DAT_10684ad0,(int)"demolist",(int)thunk_FUN_101aaf10,"Print demo sequence list.",0,
  FUN_102662e0(&DAT_10684af4,(int)"listmodels",(int)FUN_101ac040,"List loaded models.",0,
  FUN_102662e0(&DAT_10684b1c,(int)"map_edit",(int)FUN_101ac050,&DAT_103236cf,0,(undefined *)0x0);
  FUN_102662e0(&DAT_10684b40,(int)"memory",(int)FUN_101ac070,"Print memory stats.",0,
  FUN_102662e0(&DAT_10684b64,(int)"ss_disconnect",(int)FUN_101ac9f0,
  FUN_102662e0(&DAT_10684b88,(int)"incrementvar",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_10684bac,(int)"kickid",(int)FUN_101abd50,
  FUN_102662e0(&DAT_10684bd0,(int)"version",(int)FUN_101ad0d0,"Print version info string.",0,
  FUN_102662e0(&DAT_10684bf4,(int)"cache_print_summary",(int)FUN_101ab7d0,
  FUN_102662e0(&DAT_10684c18,(int)"kickid_ex",(int)FUN_101abe30,
  FUN_102662e0(&DAT_10684c3c,(int)"disconnect",(int)FUN_101ab9d0,"Disconnect game from server.",
  FUN_102662e0(&DAT_10684c60,(int)"ss_connect",(int)FUN_101ac8f0,
  FUN_102662e0(&DAT_10684c84,(int)"stopdemo",(int)FUN_101acfc0,"Stop playing back a demo.",0x20000,
  FUN_102662e0(&DAT_10684ccc,(int)"reload",(int)FUN_101ac440,
  FUN_102662e0(&DAT_10684cf0,(int)"flush_locked",(int)FUN_101abae0,
  FUN_102662e0(&DAT_10684d14,(int)"status",(int)FUN_101acbe0,"Display map and connection status.",0,
  FUN_102662e0(&DAT_10684d90,(int)"nextdemo",(int)FUN_101ac1c0,"Play next demo in sequence.",0,
  FUN_102662e0(&DAT_10684e10,(int)"startdemos",(int)FUN_101acae0,"Play demos in demo sequence.",0,
  FUN_102662e0(&DAT_10684e34,(int)"_restart",(int)thunk_FUN_101b5820,
  FUN_102662e0(&DAT_10684e58,(int)"unpause",(int)FUN_101ad060,"Unpause the game.",0,(undefined *)0x0
  FUN_102662e0(&DAT_10684ed8,(int)"multvar",(int)FUN_1021ff70,"Multiply specified convar value.",
  FUN_102662e0(&DAT_10684f78,(int)"cache_print_lru",(int)FUN_101ab7a0,
  FUN_102662e0(&DAT_10684f9c,(int)"soundfade",(int)FUN_101ac750,"Fade client volume.",0x10000000,
  FUN_102662e0(&DAT_10684fc0,(int)"dumpstringtables",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_10684fe4,(int)"setpause",(int)FUN_101ac6d0,"Set the pause state of the server.",
  FUN_102662e0(&DAT_1068502c,(int)&DAT_103525a4,(int)FUN_101abbf0,"Kick a player by name.",0,
  FUN_102662e0(&DAT_106850a8,(int)"voicerecord_toggle",(int)FUN_101ab400,(undefined *)0x0,0,
  FUN_102662e0(&DAT_106850cc,(int)"cache_print",(int)FUN_101ab770,
  FUN_102662e0(&DAT_106850f0,(int)"inc_sensitivity",(int)FUN_101abb20,
  FUN_102662e0(&DAT_10685114,(int)&DAT_10351540,(int)FUN_101ac300,"Display ping to server.",0,
  FUN_102662e0(&DAT_10685238,(int)"changelevel",(int)FUN_101aa8e0,
  FUN_102662e0(&DAT_10685264,(int)&DAT_103322f8,(int)FUN_101aaef0,"Start playing on specified map.",
  FUN_102662e0(&DAT_10685288,(int)&DAT_1034df20,(int)FUN_101ad3e0,"Displays list of maps.",0,
  FUN_102662e0(&DAT_10685378,(int)"_autosave",(int)FUN_101b4ea0,"Autosave",0,(undefined *)0x0);
  FUN_102662e0(&DAT_10685414,(int)&DAT_10339090,(int)FUN_101b5180,"Saves current game.",0x20000,
  FUN_102662e0(&DAT_10685490,(int)"autosavedangerousissafe",(int)FUN_101b4fd0,&DAT_103236cf,0,
  FUN_102662e0(&DAT_106854b4,(int)"xsave",(int)FUN_101b5350,
  FUN_102662e0(&DAT_106855e0,(int)"xload",(int)FUN_101b52b0,
  FUN_102662e0(&DAT_10685604,(int)"autosave",(int)FUN_101b4ed0,"Autosave",0,(undefined *)0x0);
  FUN_102662e0(&DAT_10685628,(int)"save_finish_async",(int)thunk_FUN_101b06f0,&DAT_103236cf,0,
  FUN_102662e0(&DAT_1068564c,(int)"autosavedangerous",(int)FUN_101b4f40,"AutoSaveDangerous",0,
  FUN_102662e0(&DAT_10685670,(int)"minisave",(int)FUN_101b5030,
  FUN_102662e0(&DAT_10685694,(int)&DAT_1033b634,(int)FUN_101b08d0,"Load a saved game.",0,
  FUN_102662e0(&DAT_10685710,(int)"_autosavedangerous",(int)FUN_101b4eb0,"AutoSaveDangerous",0,
  FUN_102662e0(&DAT_106861a8,(int)&DAT_103665b0,(int)thunk_FUN_101b6530,"Bind a key.",0,
  FUN_102662e0(&DAT_106861cc,(int)"bind_osx",(int)FUN_1021ff70,"Bind a key for OSX only.",0,
  FUN_102662e0(&DAT_106861f8,(int)"unbind",(int)FUN_101b7b30,"Unbind a key.",0,(undefined *)0x0);
  FUN_102662e0(&DAT_1068621c,(int)"key_findbinding",(int)FUN_101b79a0,
  FUN_102662e0(&DAT_10686240,(int)"key_listboundkeys",(int)FUN_101b7a90,
  FUN_102662e0(&DAT_106877e0,(int)"unbindall",(int)FUN_101b7bb0,"Unbind all keys.",0,
  FUN_102662e0(&DAT_10687804,(int)"forcebind",(int)FUN_101b7320,
  FUN_102662e0(&DAT_10687828,(int)"escape",(int)FUN_101b7990,"Escape key pressed.",0x40000000,
  FUN_102662e0(&DAT_1068a048,(int)"r_lightcache_invalidate",(int)thunk_FUN_101bc870,&DAT_103236cf,
  FUN_102662e0(&DAT_106a4e38,(int)"net_steamcnx_status",(int)FUN_101ccad0,
  FUN_102662e0(&DAT_106a5244,(int)"net_start",(int)FUN_101d2210,"Inits multiplayer network sockets",
  FUN_102662e0(&DAT_106a55ec,(int)"net_status",(int)FUN_101d2220,"Shows current network status",0,
  FUN_102662e0(&DAT_106a5754,(int)"net_channels",(int)FUN_101d2180,"Shows net channel info",0,
  FUN_102662e0(&DAT_106a8aa8,(int)"audit_save_in_memory",(int)FUN_1021ff70,
  FUN_102662e0(&DAT_106ab120,(int)"pingserver",(int)FUN_101fb2d0,"Ping a server for info",0,
  FUN_102662e0(&DAT_106abffc,(int)"star_memory",(int)FUN_101fcd50,"Dump memory stats",0,
  FUN_102662e0(&DAT_106ac78c,(int)"render_blanks",(int)FUN_101ff150,"render N blank frames",0,
  FUN_102662e0(&DAT_106ac868,(int)"reload_vjobs",(int)FUN_101ff0f0,"reload vjobs module",0,
  FUN_102662e0(&DAT_106acce0,(int)"host_filtered_time_report",(int)FUN_101ff950,
  FUN_102662e0(&DAT_106ad1b8,(int)"vprof_dump_counters",(int)FUN_10206510,
  FUN_102662e0(&DAT_106ad1dc,(int)"vprof_cachemiss_on",(int)FUN_10206480,
  FUN_102662e0(&DAT_106ad2b0,(int)"spike",(int)FUN_10206260,"generates a fake spike",0x4000,
  FUN_102662e0(&DAT_106ad2d8,(int)"vprof",(int)FUN_10206270,"Toggle VProf profiler",0,
  FUN_102662e0(&DAT_106ad2fc,(int)"vprof_generate_report",(int)FUN_10206570,
  FUN_102662e0(&DAT_106ad388,(int)"vprof_vtune_group",(int)FUN_10206e40,
  FUN_102662e0(&DAT_106ad3ac,(int)"vprof_generate_report_map_load",(int)FUN_10206aa0,
  FUN_102662e0(&DAT_106ad3e4,(int)"vprof_dump_groupnames",(int)FUN_10206520,
  FUN_102662e0(&DAT_106ad408,(int)"vprof_generate_report_AI_only",(int)FUN_102066a0,
  FUN_102662e0(&DAT_106ad42c,(int)"vprof_reset",(int)FUN_10206d10,
  FUN_102662e0(&DAT_106ad500,(int)"budget_toggle_group",(int)FUN_10206210,
  FUN_102662e0(&DAT_106ad524,(int)"vprof_generate_report_hierarchy_per_frame_and_count_only",
  FUN_102662e0(&DAT_106ad5a0,(int)"vprof_off",(int)FUN_10206b70,"Turn off VProf profiler",0,
  FUN_102662e0(&DAT_106ad5c8,(int)"vprof_reset_peaks",(int)FUN_10206dc0,
  FUN_102662e0(&DAT_106ad5ec,(int)"vprof_generate_report_budget",(int)FUN_10206800,
  FUN_102662e0(&DAT_106ad6c0,(int)"vprof_generate_report_AI",(int)FUN_102065d0,
  FUN_102662e0(&DAT_106ad6e4,(int)"vprof_cachemiss_off",(int)FUN_102063f0,
  FUN_102662e0(&DAT_106ad760,(int)"vprof_cachemiss",(int)FUN_10206340,
  FUN_102662e0(&DAT_106ad784,(int)"vprof_on",(int)FUN_10206c70,"Turn on VProf profiler",0,
  FUN_102662e0(&DAT_106ad7a8,(int)"vprof_generate_report_hierarchy",(int)FUN_102068f0,
  FUN_102662e0(&DAT_106adb48,(int)"vprof_record_start",(int)FUN_102095c0,
  FUN_102662e0(&DAT_106adb6c,(int)"vprof_to_csv",(int)FUN_10209610,
  FUN_102662e0(&DAT_106adb90,(int)"vprof_playback_average",(int)FUN_102094b0,
  FUN_102662e0(&DAT_106adbb8,(int)"vprof_playback_start",(int)FUN_10209510,
  FUN_102662e0(&DAT_106adbdc,(int)"vprof_playback_stepback",(int)FUN_102092c0,
  FUN_102662e0(&DAT_106af630,(int)"vprof_playback_stop",(int)FUN_102095a0,
  FUN_102662e0(&DAT_106af654,(int)"vprof_playback_step",(int)FUN_102092b0,
  FUN_102662e0(&DAT_106af67c,(int)"vprof_record_stop",(int)FUN_102095f0,"Stop recording vprof data",
  FUN_102662e0(&DAT_106af824,(int)"hunk_print_allocations",(int)FUN_10212fa0,&DAT_103236cf,
  FUN_102662e0(&DAT_106af910,(int)"toolload",(int)FUN_10215f10,"Load a tool.",0,FUN_102164b0);
  FUN_102662e0(&DAT_106af934,(int)"toolunload",(int)FUN_10215fd0,"Unload a tool.",0,FUN_10216500);
  FUN_102662e0(&DAT_106afb58,(int)"gameui_hide",(int)FUN_1021cd20,"Hides the game UI",0,
  FUN_102662e0(&DAT_106afb7c,(int)"gameui_activate",(int)FUN_1021ccd0,"Shows the game UI",0,
  FUN_102662e0(&DAT_106afba0,(int)"gameui_preventescape",(int)FUN_1021cd30,
  FUN_102662e0(&DAT_106afbc4,(int)"gameui_allowescapetoshow",(int)FUN_1021cd00,
  FUN_102662e0(&DAT_106afbe8,(int)"gameui_preventescapetoshow",(int)FUN_1021cd50,
  FUN_102662e0(&DAT_106afc0c,(int)"gameui_allowescape",(int)FUN_1021cce0,
  FUN_102662e0(&DAT_106afd9c,(int)"vgui_togglepanel",(int)FUN_1021cdc0,
  FUN_102662e0(&DAT_106afe70,(int)"vgui_dump_panels",(int)FUN_1021cd70,"vgui_dump_panels [visible]",
  FUN_102662e0(&DAT_106b013c,(int)"vprof_adddebuggroup1",(int)FUN_1021e5f0,
  FUN_102662e0(&DAT_106b10d0,(int)"vprof_expand_all",(int)FUN_10227420,"Expand the whole vprof tree"
  FUN_102662e0(&DAT_106b10f4,(int)"vprof_collapse_all",(int)FUN_10227400,
  FUN_102662e0(&DAT_106b1118,(int)"vprof_expand_group",(int)FUN_10227440,
  FUN_10266380(&DAT_1043ccf8,(int)"stopsound",(int)FUN_10214050,(undefined *)0x0,0x4000,
  FUN_10266380(&DAT_1043cd1c,(int)"soundlist",(int)FUN_10044b20,"List all known sounds.",0,
  FUN_10266380(&DAT_1043cd40,(int)"soundinfo",(int)FUN_10044a20,"Describe the current sound device."
  FUN_10266380(&DAT_1043cd64,(int)"adsp_reset_nodes",(int)FUN_1003b4d0,(undefined *)0x0,0,
  FUN_10266380(&DAT_104c4740,(int)"snd_sos_print_operators",(int)FUN_100806f0,
  FUN_10266380(&DAT_104c4764,(int)"snd_sos_flush_operators",(int)FUN_10080760,
  FUN_10266380(&DAT_104e1f2c,(int)"vox_reload",(int)FUN_10088b90,"Reload sentences.txt file",0x4000,
  FUN_10266380(&DAT_104e4384,(int)"demoui2",(int)FUN_100b00d0,
  FUN_10266380(&DAT_104e43a8,(int)"+demoui2",(int)FUN_100b0120,
  FUN_10266380(&DAT_104e43cc,(int)"-demoui2",(int)FUN_100b0100,
  FUN_10266380(&DAT_104e4630,(int)"fogui",(int)FUN_100b3fd0,"Show/hide fog control UI.",0x20000,
  FUN_10266380(&DAT_104f28f8,(int)"skyui",(int)FUN_100bc8e0,"Show/hide sky control UI.",0x20000,
  FUN_10266380(&DAT_104f2c50,(int)"+mat_texture_list",(int)FUN_100c6230,(undefined *)0x0,0,
  FUN_10266380(&DAT_104f2c74,(int)"-mat_texture_list",(int)FUN_100bedc0,(undefined *)0x0,0,
  FUN_10266380(&DAT_104f3358,(int)"colorcorrectionui",(int)FUN_100d8d80,
  FUN_10266380(&DAT_104f337c,(int)"print_colorcorrection",(int)FUN_100d6050,
  FUN_10266380(&DAT_104f3a38,(int)"clear",(int)FUN_100da0c0,"Clear all console output.",0x20000,
  FUN_10266380(&DAT_104f3a5c,(int)"log_dumpchannels",(int)FUN_100da770,
  FUN_10266380(&DAT_104f4f30,(int)"devshots_nextmap",(int)FUN_100e4220,
  FUN_10266380(&DAT_105f8004,(int)"timerefresh",(int)FUN_100f7840,"Profile the renderer.",0x4000,
  FUN_10266380(&DAT_105f8028,(int)"linefile",(int)FUN_10130510,"Parses map leak data from .lin file"
  FUN_10266380(&DAT_105f8f18,(int)"r_flushlod",(int)FUN_1010af20,"Flush and reload LODs.",0,
  FUN_10266380(&DAT_106257c0,(int)"r_printdecalinfo",(int)FUN_101301c0,(undefined *)0x0,0,
  FUN_10266380(&DAT_10663b44,(int)"sv_shutdown",(int)FUN_1014edc0,
  FUN_10266380(&DAT_10663ce0,(int)"heartbeat",(int)FUN_1014ef80,"Force heartbeat of master servers",
  FUN_10266380(&DAT_10665198,(int)"stats",(int)FUN_10152f00,"Prints server performance variables",0,
  FUN_10266380(&DAT_10682b1c,(int)"recompute_speed",(int)FUN_101a6ef0,
  FUN_10266380(&DAT_106832a4,(int)"dti_flush",(int)FUN_101a46b0,
  FUN_10266380(&DAT_10683418,(int)"snd_restart",(int)FUN_101a88e0,"Restart sound system.",0,
  FUN_10266380(&DAT_106849e4,(int)"light_crosshair",(int)FUN_101aaa90,
  FUN_10266380(&DAT_10684a2c,(int)&DAT_10364c88,(int)FUN_101ab110,"Exit the engine.",0,
  FUN_10266380(&DAT_10684ca8,(int)"+voicerecord",(int)FUN_101ab310,(undefined *)0x0,0,
  FUN_10266380(&DAT_10684efc,(int)&DAT_1035470c,(int)FUN_101ab110,"Exit the engine.",0,
  FUN_10266380(&DAT_10685008,(int)"-voicerecord",(int)FUN_101ab3a0,(undefined *)0x0,0,
  FUN_10266380(&DAT_106a92d0,(int)"prop_crosshair",(int)FUN_101f5700,
  FUN_10266380(&DAT_106ac88c,(int)"editor_toggle",(int)FUN_101fde90,
  FUN_10266380(&DAT_106afa08,(int)"perfui",(int)FUN_10217e90,
  FUN_10266380(&DAT_106afc30,(int)"progress_enable",(int)FUN_10219d80,(undefined *)0x0,0,
  FUN_10266380(&DAT_106b0160,(int)"+showbudget",(int)FUN_1021e260,&DAT_103236cf,0,(undefined *)0x0);
  FUN_10266380(&DAT_106b0184,(int)"-showbudget",(int)FUN_1021e2a0,&DAT_103236cf,0,(undefined *)0x0);
  FUN_10266380(&DAT_106b09b8,(int)"+vgui_drawtree",(int)FUN_10221780,(undefined *)0x0,0,
  FUN_10266380(&DAT_106b09dc,(int)"-vgui_drawtree",(int)FUN_10221770,(undefined *)0x0,0,
  FUN_10266380(&DAT_106b0a00,(int)"vgui_drawtree_clear",(int)FUN_10221750,(undefined *)0x0,0,
  FUN_10266380(&DAT_106b0b50,(int)"+showbudget_texture",(int)FUN_10222b50,&DAT_103236cf,0x4000,
  FUN_10266380(&DAT_106b0b74,(int)"-showbudget_texture",(int)FUN_10222b40,&DAT_103236cf,0x4000,
  FUN_10266380(&DAT_106b0b98,(int)"+showbudget_texture_global",(int)FUN_10222b20,&DAT_103236cf,
  FUN_10266380(&DAT_106b0bbc,(int)"-showbudget_texture_global",(int)FUN_10222b40,&DAT_103236cf,
  FUN_10266380(&DAT_106b0f00,(int)"vprof_prevsibling",(int)FUN_10223020,(undefined *)0x0,0,
  FUN_10266380(&DAT_106b0f24,(int)"vprof_nextsibling",(int)FUN_10222fe0,(undefined *)0x0,0,
  FUN_10266380(&DAT_106b0f48,(int)"vprof_parent",(int)FUN_10223000,(undefined *)0x0,0,
  FUN_10266380(&DAT_106b0f6c,(int)"vprof_child",(int)FUN_10222f70,(undefined *)0x0,0,
  FUN_10266380(&DAT_106b113c,(int)"+showvprof",(int)FUN_10225470,(undefined *)0x0,0,(undefined *)0x0
  FUN_10266380(&DAT_106b1160,(int)"-showvprof",(int)FUN_102254c0,(undefined *)0x0,0,(undefined *)0x0
  FUN_10266410(param_1,(int)"debugsystemui",(int)puVar1,"Show/hide the debug system UI.",0x4000,0);
  FUN_102664a0(&DAT_10427018,(int)"snd_rear_speaker_scale",&DAT_103242e4,0x80,
  FUN_102664a0(&DAT_10427568,(int)"snd_mergemethod",&DAT_10324480,0,
  FUN_102664a0(&DAT_104275c0,(int)"snd_report_start_sound",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_10427618,(int)"snd_report_stop_sound",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_10427670,(int)"snd_report_loop_sound",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_104276c8,(int)"snd_report_format_sound",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_10427720,(int)"snd_report_verbose_error",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_1043c8a0,(int)"snd_show",&DAT_103256a0,0x4000,"Show sounds info");
  FUN_102664a0(&DAT_1043c8f8,(int)"snd_find_channel",&DAT_103236cf,0,
  FUN_102664a0(&DAT_1043cb60,(int)"snd_delay_for_choreo_enabled",&DAT_10324480,0,
  FUN_102664a0(&DAT_1043cbb8,(int)"snd_delay_for_choreo_reset_after_N_milliseconds",&DAT_10325be0,0,
  FUN_102664a0(&DAT_1043cff0,(int)"snd_dvar_dist_min",&DAT_103260a4,0,
  FUN_102664a0(&DAT_1043d048,(int)"snd_dvar_dist_max",&DAT_103260e4,0,
  FUN_102664a0(&DAT_10445fd8,(int)"das_max_z_trace_length",&DAT_10326244,0,
  FUN_102664a0(&DAT_10446160,(int)"snd_vol_xfade_time","0.070",0,
  FUN_102664a0(&DAT_104461b8,(int)"snd_vol_xfade_incr_max",&DAT_103265bc,0,
  FUN_102664a0(&DAT_10446210,(int)"snd_vol_no_xfade",&DAT_10326618,0,
  FUN_102664a0(&DAT_10446268,(int)"snd_vol_xfade_speed_multiplier_for_doppler",&DAT_10324480,0,
  FUN_102664a0(&DAT_10446338,(int)"snd_sos_show_block_debug",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_10446548,(int)"snd_spatialize_roundrobin",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104465a0,(int)"snd_debug_gaincurve",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104465f8,(int)"snd_debug_gaincurvevol",&DAT_103242e4,0,
  FUN_102664a0(&DAT_10446650,(int)"snd_debug_panlaw",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_104466f0,(int)"snd_show_channel_count",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10461db8,(int)"snd_dsp_optimization",&DAT_10324480,0,
  FUN_102664a0(&DAT_10461e10,(int)"snd_dsp_spew_changes",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10461e68,(int)"snd_dsp_cancel_old_preset_after_N_milliseconds",&DAT_10327c20,0,
  FUN_102664a0(&DAT_10461ec0,(int)"snd_spew_dsp_process",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104829a0,(int)"snd_mix_optimization",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104829f8,(int)"snd_mix_soundchar_enabled",&DAT_10324480,0,
  FUN_102664a0(&DAT_10482a50,(int)"snd_pause_all",&DAT_10324480,0x4000,
  FUN_102664a0(&DAT_10482aa8,(int)"snd_cull_duplicates",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10482c30,(int)"snd_moviefix",&DAT_10324480,0,
  FUN_102664a0(&DAT_104c2508,(int)"snd_async_spew_blocking",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104c2560,(int)"snd_async_fullyasync",&DAT_10324480,0,
  FUN_102664a0(&DAT_104c25b8,(int)"snd_async_stream_spew",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104c2610,(int)"snd_async_stream_fail",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104c2668,(int)"snd_async_stream_purges",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104c26c0,(int)"snd_async_stream_static_alloc",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104c2718,(int)"snd_async_stream_recover_from_exhausted_stream",&DAT_10324480,0,
  FUN_102664a0(&DAT_104c2770,(int)"snd_async_stream_spew_exhausted_buffer",&DAT_10324480,0,
  FUN_102664a0(&DAT_104c27c8,(int)"snd_async_stream_spew_exhausted_buffer_time",&DAT_10327c20,0,
  FUN_102664a0(&DAT_104c2820,(int)"snd_async_stream_spew_delayed_start_time",&DAT_10325be0,0,
  FUN_102664a0(&DAT_104c2878,(int)"snd_async_stream_spew_delayed_start_filter",&DAT_1032a86c,0,
  FUN_102664a0(&DAT_104c2cc0,(int)"snd_prefetch_common",&DAT_10324480,0x80000,
  FUN_102664a0(&DAT_104c2d18,(int)"force_audio_english",&DAT_103256a0,0x1000080,
  FUN_102664a0(&DAT_104e01f0,(int)"voice_writevoices",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104e20d0,(int)"snd_vox_captiontrace",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104e2348,(int)"password",&DAT_103236cf,0x20020080,
  FUN_102664a0(&DAT_104e23a0,(int)"cl_interpolate",&DAT_103242e4,0x202,
  FUN_102664a0(&DAT_104e23f8,(int)"cl_failremoteconnections",&DAT_103256a0,2,
  FUN_102664a0(&DAT_104e2590,(int)"r_DrawBeams",&DAT_10324480,0x4000,"0=Off, 1=Normal, 2=Wireframe")
  FUN_102664a0(&DAT_104e3478,(int)"demo_recordcommands",&DAT_10324480,0x4000,
  FUN_102664a0(&DAT_104e34d0,(int)"demo_quitafterplayback",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104e3528,(int)"demo_debug",&DAT_103256a0,0,"Demo debug info.");
  FUN_102664a0(&DAT_104e3580,(int)"demo_interpolateview",&DAT_10324480,0,
  FUN_102664a0(&DAT_104e35d8,(int)"demo_pauseatservertick",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104e3630,(int)"demo_enabledemos",&DAT_10324480,0,
  FUN_102664a0(&DAT_104e3e58,(int)"demo_interplimit",&DAT_10332e00,0,
  FUN_102664a0(&DAT_104e3eb0,(int)"demo_avellimit",&DAT_1032e834,0,
  FUN_102664a0(&DAT_104e3f08,(int)"demo_fastforwardstartspeed",&DAT_10325f28,0,
  FUN_102664a0(&DAT_104e3f60,(int)"demo_fastforwardfinalspeed",&DAT_10332ec8,0,
  FUN_102664a0(&DAT_104e3fb8,(int)"demo_fastforwardramptime",&DAT_10332f1c,0,
  FUN_102664a0(&DAT_104e4010,(int)"cl_showdemooverlay",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104e4068,(int)"demo_legacy_rollback",&DAT_10324480,0,
  FUN_102664a0(&DAT_104e4400,(int)"cl_entityreport",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_104e45b8,(int)"cl_flushentitypacket",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_104efb18,(int)"sv_unlockedchapters",&DAT_10324480,0x80,
  FUN_102664a0(&DAT_104efb70,(int)"tv_nochat",&DAT_103256a0,0x280,
  FUN_102664a0(&DAT_104efbc8,(int)"cl_localnetworkbackdoor",&DAT_10324480,0,
  FUN_102664a0(&DAT_104efc20,(int)"cl_ignorepackets",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_104efc78,(int)"cl_playback_screenshots",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104efcd0,(int)"cl_connection_trouble_timeout",&DAT_10324484,0x10,
  FUN_102664a0(&DAT_104f1e28,(int)"jpeg_quality",&DAT_1033cb28,0,"jpeg screenshot quality.");
  FUN_102664a0(&DAT_104f1e80,(int)"cl_retire_low_priority_lights",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104f1f78,(int)"cl_screenshotname",&DAT_103236cf,0,"Custom Screenshot name");
  FUN_102664a0(&DAT_104f2060,(int)"host_syncfps",&DAT_103256a0,2,
  FUN_102664a0(&DAT_104f20b8,(int)"fps_screenshot_threshold",&DAT_10324484,0x4000,
  FUN_102664a0(&DAT_104f2110,(int)"fps_screenshot_frequency",&DAT_1032e794,0x4000,
  FUN_102664a0(&DAT_104f21f8,(int)"cl_language","english",0x200,"Language (from Steam API)");
  FUN_102664a0(&DAT_104f2570,(int)"cl_showevents",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_104f2bf8,(int)"mat_texture_list",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104f2c98,(int)"mat_texture_list_all",&DAT_103256a0,0x1000,
  FUN_102664a0(&DAT_104f2cf0,(int)"mat_texture_list_all_frames",&DAT_10325f28,0,
  FUN_102664a0(&DAT_104f2d48,(int)"mat_texture_list_view",&DAT_10324480,0x1000,
  FUN_102664a0(&DAT_104f2da0,(int)"mat_show_texture_memory_usage",&DAT_103256a0,0x5000,
  FUN_102664a0(&DAT_104f2f40,(int)"cl_timeout",&DAT_10341688,0x80,
  FUN_102664a0(&DAT_104f2f98,(int)"cl_logofile","materials/vgui/logos/spray_bullseye.vtf",0x80,
  FUN_102664a0(&DAT_104f2ff0,(int)"cl_soundfile",&DAT_103236cf,0x80,"Jingle sound file.");
  FUN_102664a0(&DAT_104f3048,(int)"cl_forcepreload",&DAT_103256a0,0x80,
  FUN_102664a0(&DAT_104f30a0,(int)"cl_allowdownload",&DAT_10324480,0x80,
  FUN_102664a0(&DAT_104f30f8,(int)"cl_downloadfilter",&DAT_103417c8,0x80,
  FUN_102664a0(&DAT_104f3618,(int)"con_timestamp",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104f36c8,(int)"con_trace",&DAT_103256a0,0x800000,
  FUN_102664a0(&DAT_104f3720,(int)"con_notifytime",&DAT_10348218,0x800000,
  FUN_102664a0(&DAT_104f3778,(int)"contimes",&DAT_10348218,0x800000,
  FUN_102664a0(&DAT_104f37d0,(int)"con_drawnotify",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104f3828,(int)"con_enable",&DAT_10324480,0x80,
  FUN_102664a0(&DAT_104f3880,(int)"con_filter_enable",&DAT_103256a0,0x800000,
  FUN_102664a0(&DAT_104f38d8,(int)"con_filter_text",&DAT_103236cf,0x800000,
  FUN_102664a0(&DAT_104f3930,(int)"con_filter_text_out",&DAT_103236cf,0x800000,
  FUN_102664a0(&DAT_104f3988,(int)"con_nprint_bgalpha",&DAT_10328720,0,
  FUN_102664a0(&DAT_104f39e0,(int)"con_nprint_bgborder",&DAT_10332f1c,0,"Con_NPrint border size.");
  FUN_102664a0(&DAT_104f3c10,(int)"mat_leafvis_update_every_frame",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104f3c68,(int)"r_visambient",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104f3cc0,(int)"mat_leafvis_draw_mask",&DAT_10325994,0,
  FUN_102664a0(&DAT_104f3d18,(int)"mat_leafvis_freeze",&DAT_103256a0,0,
  FUN_102664a0(&DAT_104f3dd8,(int)"enable_debug_overlays",&DAT_10324480,0x4004,
  FUN_102664a0(&DAT_105f6488,(int)"mat_defaultlightmap",&DAT_10324480,0,
  FUN_102664a0(&DAT_105f8198,(int)"r_hidepaintedsurfaces",&DAT_103256a0,0,
  FUN_102664a0(&DAT_105f83e0,(int)"r_drawleaf",&DAT_10324484,0x4000,"Draw the specified leaf.");
  FUN_102664a0(&DAT_105f8438,(int)"r_drawworld",&DAT_10324480,0x4000,"Render the world.");
  FUN_102664a0(&DAT_105f8490,(int)"r_drawfuncdetail",&DAT_10324480,0x4000,"Render func_detail");
  FUN_102664a0(&DAT_105f8540,(int)"r_fastzreject",&DAT_103256a0,0,
  FUN_102664a0(&DAT_105f8598,(int)"r_fastzrejectdisp",&DAT_103256a0,0,
  FUN_102664a0(&DAT_105f85f0,(int)"r_skybox_draw_last",&DAT_103256a0,0,
  FUN_102664a0(&DAT_105f8648,(int)"r_csm_static_vb",&DAT_10324480,0,
  FUN_102664a0(&DAT_105f86a0,(int)"r_csm_fast_path",&DAT_10324480,2,
  FUN_102664a0(&DAT_105f8a50,(int)"sv_ubersky",&DAT_103256a0,0x2000,
  FUN_102664a0(&DAT_105f8d60,(int)"r_lightaverage",&DAT_10324480,0,
  FUN_102664a0(&DAT_105f8db8,(int)"r_lightinterp",&DAT_10332f1c,0x4000,
  FUN_102664a0(&DAT_105f8e10,(int)"r_eyeglintlodpixels",&DAT_103265bc,0,
  FUN_102664a0(&DAT_105f8ec0,(int)"r_decalstaticprops",&DAT_10324480,0,"Decal static props test");
  FUN_102664a0(&DAT_105f8f48,(int)"r_debugrandomstaticlighting",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_105f8fa0,(int)"r_proplightingfromdisk",&DAT_10324480,0,
  FUN_102664a0(&DAT_105f90a8,(int)"r_proplightingpooling",&DAT_1034b88c,0x4000,
  FUN_102664a0(&DAT_105f96d8,(int)"r_ignoreStaticColorChecksum",&DAT_10324480,0x4002,
  FUN_102664a0(&DAT_105f9850,(int)"r_ambientboost",&DAT_10324480,0,
  FUN_102664a0(&DAT_105f98a8,(int)"r_ambientmin",&DAT_1034bc44,0,
  FUN_102664a0(&DAT_105f9900,(int)"r_ambientfraction",&DAT_1032603c,0x4000,
  FUN_102664a0(&DAT_105f9958,(int)"r_ambientfactor",&DAT_10332f1c,0,
  FUN_102664a0(&DAT_105f99b0,(int)"r_lightcachemodel",&DAT_10324484,0x4000,&DAT_103236cf);
  FUN_102664a0(&DAT_105f9a08,(int)"r_drawlightcache",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_105f9a60,(int)"r_modelAmbientMin",&DAT_10326010,0x4000,
  FUN_102664a0(&DAT_105f9ab8,(int)"r_drawmodelstatsoverlaymin",&DAT_10325b0c,0x80,
  FUN_102664a0(&DAT_105f9b10,(int)"r_drawmodelstatsoverlaymax",&DAT_1034bfb4,0x80,
  FUN_102664a0(&DAT_105fada8,(int)"mat_fastspecular",&DAT_10324480,0,
  FUN_102664a0(&DAT_105fafb8,(int)"mat_monitorgamma_tv_enabled",&DAT_103256a0,0x1000080,
  FUN_102664a0(&DAT_105fb010,(int)"r_drawbrushmodels",&DAT_10324480,0x4000,
  FUN_102664a0(&DAT_105fb618,(int)"mod_touchalldata",&DAT_10324480,0,
  FUN_102664a0(&DAT_105fb670,(int)"mod_forcetouchdata",&DAT_10324480,0,
  FUN_102664a0(&DAT_105fcd00,(int)"r_occludermincount",&DAT_103256a0,0,
  FUN_102664a0(&DAT_105fcd58,(int)"r_occludeemaxarea",&DAT_103256a0,0,
  FUN_102664a0(&DAT_105fda60,(int)"r_occlusion",&DAT_10324480,0,
  FUN_102664a0(&DAT_105fdad0,(int)"r_occluderminarea",&DAT_103256a0,0,
  FUN_102664a0(&DAT_105fdb28,(int)"r_occlusionspew",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_105fdb80,(int)"r_visocclusion",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_105ffa58,(int)"r_portalsopenall",&DAT_103256a0,0x4000,"Open all portals");
  FUN_102664a0(&DAT_10625710,(int)"r_drawdecals",&DAT_10324480,0x4000,"Render decals.");
  FUN_102664a0(&DAT_10625768,(int)"r_drawbatchdecals",&DAT_10324480,0,"Render decals batched.");
  FUN_102664a0(&DAT_1063b8d0,(int)"sv_timeout",&DAT_10351260,0,
  FUN_102664a0(&DAT_1063b9d8,(int)"sv_maxupdaterate",&DAT_10351338,0x2000,
  FUN_102664a0(&DAT_1063ba30,(int)"sv_minupdaterate",&DAT_1032e794,0x2000,
  FUN_102664a0(&DAT_1063ba88,(int)"sv_stressbots",&DAT_103256a0,2,
  FUN_102664a0(&DAT_1063bae0,(int)"sv_allowdownload",&DAT_10324480,0,
  FUN_102664a0(&DAT_1063bb38,(int)"sv_allowupload",&DAT_10324480,0,
  FUN_102664a0(&DAT_1063bb90,(int)"sv_sendtables",&DAT_103256a0,2,
  FUN_102664a0(&DAT_1063bbe8,(int)"ss_voice_hearpartner",&DAT_103256a0,0,
  FUN_102664a0(&DAT_1063bcf0,(int)"sv_extra_client_connect_time",&DAT_1035187c,0,
  FUN_102664a0(&DAT_1063bda0,(int)"sv_deltatime",&DAT_103256a0,0,
  FUN_102664a0(&DAT_1063bdf8,(int)"sv_deltaprint",&DAT_103256a0,0,
  FUN_102664a0(&DAT_1063be50,(int)"sv_filterban",&DAT_10324480,0,"Set packet filtering by IP mode");
  FUN_102664a0(&DAT_1063c070,(int)"sv_creationtickcheck",&DAT_10324480,0x4002,
  FUN_102664a0(&DAT_10640188,(int)"sv_max_queries_sec",&DAT_103527b4,0,
  FUN_102664a0(&DAT_106401e0,(int)"sv_max_queries_sec_global",&DAT_1032fce4,0,
  FUN_102664a0(&DAT_10640238,(int)"sv_max_queries_window",&DAT_10341688,0,
  FUN_102664a0(&DAT_10640290,(int)"sv_logblocks",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106402e8,(int)"sv_logsdir",&DAT_1035295c,0x80,
  FUN_102664a0(&DAT_10640340,(int)"sv_logfile",&DAT_10324480,0x80,
  FUN_102664a0(&DAT_10640398,(int)"sv_logflush",&DAT_103256a0,0x80,
  FUN_102664a0(&DAT_106403f0,(int)"sv_logecho",&DAT_103256a0,0x80,
  FUN_102664a0(&DAT_10640448,(int)"sv_log_onefile",&DAT_103256a0,0x80,
  FUN_102664a0(&DAT_106404a0,(int)"sv_logbans",&DAT_103256a0,0x80,
  FUN_102664a0(&DAT_106404f8,(int)"sv_logfilecompress",&DAT_10324480,0x80,
  FUN_102664a0(&DAT_10640f28,(int)"sv_hibernate_ms",&DAT_10332ec8,0x80000,
  FUN_102664a0(&DAT_10640f80,(int)"sv_hibernate_ms_vgui",&DAT_10332ec8,0x80000,
  FUN_102664a0(&DAT_10640fd8,(int)"sv_hibernate_postgame_delay",&DAT_1032e794,0x80000,
  FUN_102664a0(&DAT_10641030,(int)"host_flush_threshold",&DAT_103536e4,0x80000,
  FUN_102664a0(&DAT_10641088,(int)"sv_pausable_dev",&DAT_10324480,2,
  FUN_102664a0(&DAT_106410e0,(int)"sv_pausable_dev_ds",&DAT_103256a0,2,
  FUN_102664a0(&DAT_10663428,(int)"sv_pure_kick_clients",&DAT_10324480,0x80000,
  FUN_102664a0(&DAT_10663480,(int)"sv_pure_trace",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_10663530,(int)"sv_lan",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_10663588,(int)"sv_pausable",&DAT_103256a0,0x80000,"Is the server pausable.");
  FUN_102664a0(&DAT_106635e0,(int)"sv_contact",&DAT_103236cf,0x80100,
  FUN_102664a0(&DAT_10663638,(int)"sv_cacheencodedents",&DAT_10324480,0,
  FUN_102664a0(&DAT_10663690,(int)"sv_voicecodec","vaudio_speex",0,
  FUN_102664a0(&DAT_10663740,(int)"sv_downloadurl",&DAT_103236cf,0x82000,
  FUN_102664a0(&DAT_10663798,(int)"sv_consistency",&DAT_103256a0,0x82000,
  FUN_102664a0(&DAT_10663848,(int)"sv_mincmdrate",&DAT_1032e794,0x82000,
  FUN_102664a0(&DAT_106638a0,(int)"sv_maxcmdrate",&DAT_10351338,0x82000,
  FUN_102664a0(&DAT_106638f8,(int)"sv_client_cmdrate_difference",&DAT_10332ec8,0x2000,
  FUN_102664a0(&DAT_10663950,(int)"sv_client_min_interp_ratio",&DAT_10324480,0x2000,
  FUN_102664a0(&DAT_106639a8,(int)"sv_client_max_interp_ratio",&DAT_10332f1c,0x2000,
  FUN_102664a0(&DAT_10663a00,(int)"sv_client_predict",&DAT_10324480,0x2000,
  FUN_102664a0(&DAT_10663b68,(int)"sv_memlimit",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_10663d08,(int)"sv_validate_edict_change_infos",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10663d60,(int)"sv_debugmanualmode",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10663e10,(int)"sv_forcepreload",&DAT_103256a0,0x80,
  FUN_102664a0(&DAT_10665140,(int)"sv_rcon_log",&DAT_10324480,0,"Enable/disable rcon logging.");
  FUN_102664a0(&DAT_106651e8,(int)"sv_master_share_game_socket",&DAT_10324480,0,
  FUN_102664a0(&DAT_106660f0,(int)"sv_debugtempentities",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10666148,(int)"sv_allow_wait_command",&DAT_10324480,0x82000,
  FUN_102664a0(&DAT_106661a0,(int)"sv_enableoldqueries",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106661f8,(int)"sv_steamgroup_exclusive",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_10666280,(int)"sv_allow_lobby_connect_only",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_10666330,(int)"sv_region",&DAT_10324484,0x80000,
  FUN_102664a0(&DAT_10666388,(int)"sv_visiblemaxplayers",&DAT_10324484,0x80000,
  FUN_102664a0(&DAT_10666440,(int)"sv_stats",&DAT_10324480,0,"Collect CPU usage stats");
  FUN_102664a0(&DAT_106664f0,(int)"sv_instancebaselines",&DAT_10324480,2,
  FUN_102664a0(&DAT_10666548,(int)"sv_alternateticks",&DAT_10324480,0x80040,
  FUN_102664a0(&DAT_1066ad90,(int)"bugreporter_snapshot_delay",&DAT_103585fc,0,
  FUN_102664a0(&DAT_1066adf8,(int)"bugreporter_includebsp",&DAT_10324480,0,
  FUN_102664a0(&DAT_1066ae50,(int)"bugreporter_username",&DAT_103236cf,0x80,
  FUN_102664a0(&DAT_1066aed0,(int)"bugreporter_uploadasync",&DAT_103256a0,0x80,
  FUN_102664a0(&DAT_1066af50,(int)"bugreporter_console_bytes","15000",0,
  FUN_102664a0(&DAT_1066b288,(int)"debug_map_crc",&DAT_103256a0,2,
  FUN_102664a0(&DAT_1066b398,(int)"cl_updaterate",&DAT_10351338,0x400280,
  FUN_102664a0(&DAT_1066b3f0,(int)"cl_clock_correction_adjustment_min_offset",&DAT_1032e794,0x4000,
  FUN_102664a0(&DAT_1066b448,(int)"cl_clock_correction_force_server_tick",&DAT_1035b10c,0x4000,
  FUN_102664a0(&DAT_1066b4a0,(int)"cl_clock_correction",&DAT_10324480,0x4000,
  FUN_102664a0(&DAT_1066b500,(int)"cl_clockdrift_max_ms",&DAT_1035b038,0x4000,
  FUN_102664a0(&DAT_1066b558,(int)"cl_clock_showdebuginfo",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_1066b5b0,(int)"cl_clock_correction_adjustment_max_offset",&DAT_1033cb28,0x4000,
  FUN_102664a0(&DAT_1066b608,(int)"cl_clock_correction_adjustment_max_amount",&DAT_1035b234,0x4000,
  FUN_102664a0(&DAT_1066b660,(int)"cl_clockdrift_max_ms_threadmode",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_10672c38,(int)"map_noareas",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10676918,(int)"r_DrawDisp",&DAT_10324480,0x4000,
  FUN_102664a0(&DAT_10680f48,(int)"dtwatchent",&DAT_10324484,0,
  FUN_102664a0(&DAT_10680fa0,(int)"dtwatchvar",&DAT_103236cf,0,"Watch the named variable.");
  FUN_102664a0(&DAT_10681000,(int)"dtwatchencode",&DAT_10324480,0,"When watching show encode.");
  FUN_102664a0(&DAT_10681058,(int)"dtwatchdecode",&DAT_10324480,0,"When watching show decode.");
  FUN_102664a0(&DAT_106810b0,(int)"dtwatchclass",&DAT_103236cf,0,
  FUN_102664a0(&DAT_10681168,(int)"dtwarning",&DAT_103256a0,0,"Print data table warnings?");
  FUN_102664a0(&DAT_10681210,(int)"dt_ShowPartialChangeEnts",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10681268,(int)"dt_UsePartialChangeEnts",&DAT_10324480,0,
  FUN_102664a0(&DAT_10681438,(int)"occlusion_test_jump_margin",&DAT_103536e4,0x80000,
  FUN_102664a0(&DAT_10681578,(int)"occlusion_test_margins",&DAT_1035eedc,0x80000,
  FUN_102664a0(&DAT_106816c0,(int)"occlusion_test_shadow_max_distance",&DAT_1035f040,0x80000,
  FUN_102664a0(&DAT_10681b18,(int)"net_showeventlisteners",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10681c78,(int)"net_showevents",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10681d60,(int)"tv_chattimelimit",&DAT_10348218,0x80000,
  FUN_102664a0(&DAT_10681db8,(int)"tv_relaypassword",&DAT_103236cf,0xa0120,
  FUN_102664a0(&DAT_10681e10,(int)"tv_maxrate","20000",0x80000,
  FUN_102664a0(&DAT_10681e68,(int)"tv_chatgroupsize",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_10681ec0,(int)"tv_autoretry",&DAT_10324480,0x80000,
  FUN_102664a0(&DAT_10681f20,(int)"tv_snapshotrate",&DAT_1034c778,0x80000,
  FUN_102664a0(&DAT_10681f78,(int)"tv_timeout",&DAT_10341688,0x80000,
  FUN_102664a0(&DAT_10681fe0,(int)"tv_relayvoice",&DAT_10324480,0x80000,
  FUN_102664a0(&DAT_10682080,(int)"tv_transmitall",&DAT_10324480,0x82000,
  FUN_102664a0(&DAT_106820d8,(int)"tv_overridemaster",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_10682130,(int)"tv_autorecord",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_10682250,(int)"tv_password",&DAT_103236cf,0x20120,
  FUN_102664a0(&DAT_106822d0,(int)"tv_debug",&DAT_103256a0,0x80000,"TacticalTV debug info.");
  FUN_102664a0(&DAT_10682350,(int)"tv_deltacache",&DAT_10325f28,0x80000,
  FUN_102664a0(&DAT_10682400,(int)"tv_dispatchmode",&DAT_10324480,0x80000,
  FUN_102664a0(&DAT_10682708,(int)"host_threaded_sound",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10682760,(int)"developer",&DAT_103256a0,0x80000,"Set developer message level");
  FUN_102664a0(&DAT_10682838,(int)"cl_configversion",&DAT_10324480,2,"Configuration layout version."
  FUN_102664a0(&DAT_10682890,(int)"host_showcachemiss",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10682958,(int)"violence_hblood",&DAT_10324480,0,"Draw human blood");
  FUN_102664a0(&DAT_10682a40,(int)"mem_test_every_n_seconds",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10682b40,(int)"ti_low_violence",&DAT_10325f28,0x80,"Low Violence");
  FUN_102664a0(&DAT_10682b98,(int)"singlestep",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_10682bf0,(int)"mem_incremental_compact_rate",&DAT_10361dfc,0x4000,
  FUN_102664a0(&DAT_10682c48,(int)"mem_periodicdumps",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10682ca0,(int)"host_framerate",&DAT_103256a0,0x6000,
  FUN_102664a0(&DAT_10682d50,(int)"host_ShowIPCCallCount",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10682e00,(int)&DAT_103623f0,&DAT_103256a0,0x100,"Cooperative play.");
  FUN_102664a0(&DAT_10682e58,(int)"mem_test_each_frame",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10682eb0,(int)"mem_dumpstats",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10682f08,(int)"host_speeds",&DAT_103256a0,0,"Show general system running times."
  FUN_102664a0(&DAT_10682f60,(int)"mem_test_quiet",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10682fb8,(int)"host_limitlocal",&DAT_10324480,0,
  FUN_102664a0(&DAT_10683068,(int)"host_thread_mode",&DAT_103256a0,2,
  FUN_102664a0(&DAT_106830c0,(int)"deathmatch",&DAT_103256a0,0x100,"Running a deathmatch server.");
  FUN_102664a0(&DAT_10683118,(int)"host_sleep",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_10683170,(int)"violence_ablood",&DAT_10324480,0,"Draw alien blood");
  FUN_102664a0(&DAT_10683228,(int)"cl_configversion_dummy",&DAT_103256a0,2,
  FUN_102664a0(&DAT_106832c8,(int)"host_timescale",&DAT_103242e4,0x6000,
  FUN_102664a0(&DAT_106833c0,(int)"violence_hgibs",&DAT_10324480,0,"Show human gib entities");
  FUN_102664a0(&DAT_10683460,(int)"closecaption",&DAT_103256a0,0x1000280,"Enable close captioning.")
  FUN_102664a0(&DAT_10683558,(int)"violence_agibs",&DAT_10324480,0,"Show alien gib entities");
  FUN_102664a0(&DAT_10684e80,(int)"sv_use_steam_voice",&DAT_10324480,0x2000,
  FUN_102664a0(&DAT_10684f20,(int)"voice_recordtofile",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10685050,(int)"host_map",&DAT_103236cf,0x80000,"Current map name.");
  FUN_102664a0(&DAT_106852c8,(int)"sv_autosave",&DAT_10324480,0,
  FUN_102664a0(&DAT_106853b0,(int)"save_asyncdelay",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106856b8,(int)"save_screenshot",&DAT_10324480,0,
  FUN_102664a0(&DAT_10685768,(int)"save_huddelayframes",&DAT_10324480,0,
  FUN_102664a0(&DAT_10685818,(int)"save_history_count",&DAT_10324480,0,
  FUN_102664a0(&DAT_10685d80,(int)"save_console",&DAT_103256a0,0,
  FUN_102664a0(&DAT_10687788,(int)"in_forceuser",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_10689dd8,(int)"r_radiosity",&DAT_1032597c,0x4000,
  FUN_102664a0(&DAT_10689e30,(int)"r_lightcache_radiusfactor",&DAT_10327c20,0x4000,
  FUN_102664a0(&DAT_10689ff0,(int)"r_oldlightselection",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_1068a070,(int)"r_drawlightcache",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_1068a0c8,(int)"r_worldlights",&DAT_10325994,0,
  FUN_102664a0(&DAT_106a1c90,(int)"r_ambientlightingonly",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106a2348,(int)"r_lockpvs",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106a4630,(int)"r_novis",&DAT_103256a0,0x4000,"Turn off the PVS.");
  FUN_102664a0(&DAT_106a4788,(int)"net_maxpacketdrop",&DAT_103512ec,0,
  FUN_102664a0(&DAT_106a47e0,(int)"net_showpeaks",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106a4838,(int)"net_blockmsg",&DAT_1032c9b4,0x4000,
  FUN_102664a0(&DAT_106a48e8,(int)"net_showfragments",&DAT_103256a0,0,"Show netchannel fragments");
  FUN_102664a0(&DAT_106a4960,(int)"net_compresspackets",&DAT_10324480,0,
  FUN_102664a0(&DAT_106a49c0,(int)"net_compresspackets_minsize",&DAT_10367c90,0,
  FUN_102664a0(&DAT_106a4a18,(int)"net_minroutable",&DAT_1034c778,2,"Forces larger payloads.");
  FUN_102664a0(&DAT_106a4a70,(int)"net_showtcp",&DAT_103256a0,0,"Dump TCP stream summary to console"
  FUN_102664a0(&DAT_106a4ac8,(int)"net_showdrop",&DAT_103256a0,2,"Show dropped packets in console");
  FUN_102664a0(&DAT_106a4b78,(int)"net_showudp_remoteonly",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_106a4bd0,(int)"net_showudp",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_106a4cd8,(int)"net_maxcleartime",&DAT_10367d18,0,
  FUN_102664a0(&DAT_106a4d30,(int)"net_showudp_oob",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_106a4d88,(int)"net_showmsg",&DAT_103256a0,2,"Show incoming message: <0|1|name>")
  FUN_102664a0(&DAT_106a4de0,(int)"net_chokeloop",&DAT_103256a0,2,
  FUN_102664a0(&DAT_106a4e68,(int)"net_steamcnx_allowrelay",&DAT_10324480,0x80080,
  FUN_102664a0(&DAT_106a4ec0,(int)"net_steamcnx_enabled",&DAT_10324480,0x80000,
  FUN_102664a0(&DAT_106a4f98,(int)"net_steamcnx_debug",&DAT_10324480,0,
  FUN_102664a0(&DAT_106a5018,(int)"net_droppackets",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106a5070,(int)"net_usesocketsforloopback",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106a50c8,(int)&DAT_10351f90,"localhost",0x80000,
  FUN_102664a0(&DAT_106a5120,(int)"clientport","27005",0x80000,"Host game client port");
  FUN_102664a0(&DAT_106a5268,(int)"net_showsplits",&DAT_103256a0,0x80000,
  FUN_102664a0(&DAT_106a52c0,(int)"net_showudp_wire",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106a5330,(int)"net_compressvoice",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106a5388,(int)"hostip",&DAT_103236cf,0x80000,"Host game server ip");
  FUN_102664a0(&DAT_106a5468,(int)"net_public_adr",&DAT_103236cf,0x80000,
  FUN_102664a0(&DAT_106a54c0,(int)"net_fakeloss",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106a5518,(int)"net_fakejitter",&DAT_103256a0,0x4000,"Jitter fakelag packet time"
  FUN_102664a0(&DAT_106a5588,(int)"voice_verbose",&DAT_103256a0,2,
  FUN_102664a0(&DAT_106a5610,(int)"tv_port","27020",0x80000,"Host TacticalTV port");
  FUN_102664a0(&DAT_106a56e0,(int)"net_fakelag",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106a5778,(int)"net_splitrate",&DAT_10325994,0x80000,
  FUN_102664a0(&DAT_106a57d8,(int)"hostport","27015",0x80000,"Host game server port");
  FUN_102664a0(&DAT_106a5878,(int)"net_queued_packet_thread",&DAT_10324480,0,
  FUN_102664a0(&DAT_106a5df0,(int)"stringtable_usedictionaries",&DAT_10324480,0,
  FUN_102664a0(&DAT_106a5e50,(int)"stringtable_showsizes",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106a5ea8,(int)"sv_compressstringtablebaselines_threshold",&DAT_1034c5f0,0,
  FUN_102664a0(&DAT_106a5f98,(int)"stringtable_compress",&DAT_10324480,0,
  FUN_102664a0(&DAT_106a5ff0,(int)"stringtable_alwaysrebuilddictionaries",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106a63e8,(int)"paintsplat_max_alpha_noise",&DAT_1036bb34,0x6000,
  FUN_102664a0(&DAT_106a64f0,(int)"paintsplat_bias",&DAT_1036bb34,0x6000,
  FUN_102664a0(&DAT_106a65b0,(int)"sv_useexplicitdelete",&DAT_10324480,2,
  FUN_102664a0(&DAT_106a8b48,(int)"cl_voice_filter",&DAT_103236cf,0,"Filter voice by name substring"
  FUN_102664a0(&DAT_106a8ba8,(int)"cl_allowupload",&DAT_10324480,0x80,
  FUN_102664a0(&DAT_106a8c00,(int)"cl_debugtempentities",&DAT_103256a0,0,&DAT_103236cf);
  FUN_102664a0(&DAT_106a8c90,(int)"snd_foliage_db_loss",&DAT_1032597c,0x4000,
  FUN_102664a0(&DAT_106a8d98,(int)"snd_refdist",&DAT_1035eedc,0x4000,
  FUN_102664a0(&DAT_106a90f8,(int)"r_partition_level",&DAT_10324484,0x4000,
  FUN_102664a0(&DAT_106a9158,(int)"think_trace_limit",&DAT_103256a0,0x4002,
  FUN_102664a0(&DAT_106a9220,(int)"disable_static_prop_loading",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106a9278,(int)"r_shadow_deferred",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106a92f8,(int)"cl_skipslowpath",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106a9418,(int)"r_drawstaticprops",&DAT_10324480,0x4000,
  FUN_102664a0(&DAT_106a9f50,(int)"mod_load_showstall",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106a9fa8,(int)"mod_load_preload",&DAT_103242e4,0,
  FUN_102664a0(&DAT_106aa078,(int)"sv_master_legacy_mode",&DAT_10324480,0,
  FUN_102664a0(&DAT_106ab148,(int)"xlsp_force_dc_name",&DAT_103236cf,0,
  FUN_102664a0(&DAT_106abf48,(int)"mem_max_heapsize",&DAT_1035dde0,0,
  FUN_102664a0(&DAT_106ac4c8,(int)"sys_minidumpspewlines",&DAT_10325be0,0x80000,
  FUN_102664a0(&DAT_106ac520,(int)"mem_max_heapsize_dedicated",&DAT_10351338,0,
  FUN_102664a0(&DAT_106ac580,(int)"mem_min_heapsize",&DAT_10351338,0,
  FUN_102664a0(&DAT_106acd60,(int)"sleep_when_meeting_framerate",&DAT_10324480,0,
  FUN_102664a0(&DAT_106ace70,(int)"async_serialize",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106acec8,(int)"vx_do_not_throttle_events",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106acf20,(int)"fps_max_splitscreen",&DAT_1035ddd8,0,
  FUN_102664a0(&DAT_106ad000,(int)"cl_savescreenshotstosteam",&DAT_10324480,0x10,
  FUN_102664a0(&DAT_106ad058,(int)"cl_screenshotlocation",&DAT_103236cf,0x10,
  FUN_102664a0(&DAT_106ad0b0,(int)"cl_screenshotusertag",&DAT_103236cf,0x10,
  FUN_102664a0(&DAT_106ad258,(int)"vprof_dump_oninterval",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106ad320,(int)"vprof_dump_spikes_terse",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106ad4a8,(int)"vprof_dump_spikes_node",&DAT_103236cf,0,
  FUN_102664a0(&DAT_106ad548,(int)"vprof_dump_spikes_hiearchy",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106ad610,(int)"vprof_dump_spikes_budget_group",&DAT_103236cf,0,
  FUN_102664a0(&DAT_106ad668,(int)"vprof_dump_spikes",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106ad708,(int)"rpt_vprof_time",&DAT_10326fbc,0x20010,&DAT_103236cf);
  FUN_102664a0(&DAT_106afaa8,(int)"r_drawvgui",&DAT_10324480,0x4000,
  FUN_102664a0(&DAT_106afd30,(int)"mat_drawTitleSafe",&DAT_103256a0,0,"Enable title safe overlay");
  FUN_102664a0(&DAT_106afdc0,(int)"vgui_drawfocus",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106afe18,(int)"vgui_drawkeyfocus",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106afea0,(int)"budget_peaks_window",&DAT_10341688,0x80,
  FUN_102664a0(&DAT_106afef8,(int)"budget_averages_window",&DAT_10341688,0x80,
  FUN_102664a0(&DAT_106aff50,(int)"budget_show_averages",&DAT_103256a0,0x80,
  FUN_102664a0(&DAT_106affa8,(int)"budget_show_peaks",&DAT_10324480,0x80,
  FUN_102664a0(&DAT_106b0000,(int)"budget_bargraph_background_alpha",&DAT_103261e0,0x80,
  FUN_102664a0(&DAT_106b0060,(int)"budget_show_history",&DAT_10324480,0x80,
  FUN_102664a0(&DAT_106b00b8,(int)"budget_history_numsamplesvisible",&DAT_1033b8d8,0x80,
  FUN_102664a0(&DAT_106b02d0,(int)"budget_background_alpha",&DAT_103261e0,0x80,
  FUN_102664a0(&DAT_106b0598,(int)"vgui_drawtree",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106b0a48,(int)"texture_budget_panel_global",&DAT_103256a0,0,
  FUN_102664a0(&DAT_106b0aa0,(int)"showbudget_texture",&DAT_103256a0,0x4000,
  FUN_102664a0(&DAT_106b0d98,(int)"texture_budget_background_alpha",&DAT_103261e0,0x80,
  FUN_102664a0(&DAT_106b0df8,(int)"vprof_graph",&DAT_103256a0,0,"Draw the vprof graph.");
  FUN_102664a0(&DAT_106b0fc8,(int)"vprof_verbose",&DAT_10324480,0x80,
  FUN_102664a0(&DAT_106b1020,(int)"vprof_unaccounted_limit",&DAT_1034bc44,0x80,
  FUN_102664a0(&DAT_106b1078,(int)"vprof_warningmsec",&DAT_1032e794,0x80,
  FUN_102664a0(&DAT_106f1c68,(int)"panel_test_title_safe",&DAT_103256a0,0x4000,
  FUN_10266530(&DAT_104c5018,(int)"voice_enable",&DAT_10324480,0x80,
  FUN_10266530(&DAT_104e22f0,(int)&DAT_1032e50c,"unnamed",0x10008680,"Current user name",
  FUN_10266530(&DAT_104f2250,(int)"cl_cloud_settings",&DAT_10324484,0x10,
  FUN_10266530(&DAT_104f25f0,(int)"rcon_address",&DAT_103236cf,0x20020000,
  FUN_10266530(&DAT_104f3bb8,(int)"mat_leafvis",&DAT_103256a0,0x4000,
  FUN_10266530(&DAT_104f3d70,(int)"r_drawclipbrushes",&DAT_103256a0,0x4000,
  FUN_10266530(&DAT_105f8cb0,(int)"r_lod",&DAT_10324484,0,&DAT_103236cf,(int)FUN_10105900);
  FUN_10266530(&DAT_105fb220,(int)"mat_resolveFullFrameDepth",&DAT_103256a0,0x4000,
  FUN_10266530(&DAT_105fb278,(int)"mat_hdr_level",&DAT_10325f28,0x12,
  FUN_10266530(&DAT_10640ed0,(int)"sv_hibernate_when_empty",&DAT_10324480,0x80000,
  FUN_10266530(&DAT_106634d8,(int)"sv_cheats",&DAT_103256a0,0x82100,"Allow cheats on server",
  FUN_10266530(&DAT_10663a58,(int)"tv_enable",&DAT_103256a0,0x100,"Activates TacticalTV on server.",
  FUN_10266530(&DAT_10663ef8,(int)"rcon_password",&DAT_103236cf,0x200a0000,
  FUN_10266530(&DAT_106662d8,(int)"sv_tags",&DAT_103236cf,0x80100,
  FUN_10266530(&DAT_106663e0,(int)"sv_steamgroup",&DAT_103236cf,0x80100,
  FUN_10266530(&DAT_106665f8,(int)"sv_password",&DAT_103236cf,0xa0120,
  FUN_10266530(&DAT_1066b340,(int)&DAT_10350ea8,"80000",0x200,
  FUN_10266530(&DAT_106815e0,(int)"occlusion_test_async",&DAT_103256a0,0x80000,
  FUN_10266530(&DAT_106823a8,(int)"tv_name","TacticalTV",0x80000,"TacticalTV host name",
  FUN_10266530(&DAT_10682458,(int)"tv_title","TacticalTV",0x80000,
  FUN_10266530(&DAT_10684a50,(int)"sv_allow_voice_from_file",&DAT_103256a0,0x2000,
  FUN_10266530(&DAT_10684d38,(int)"voice_inputfromfile",&DAT_103256a0,0,
  FUN_10266530(&DAT_10686150,(int)"enable_fast_math",&DAT_10324480,0x80000,
  FUN_10266530(&DAT_106a8a48,(int)"save_in_memory",&DAT_103256a0,0,
  FUN_10266530(&DAT_106a8df0,(int)"snd_refdb",&DAT_1032fce4,0x4000,"Reference dB at snd_refdist",
  FUN_10266530(&DAT_106aa130,(int)"sv_search_key",&DAT_103236cf,0x80000,
  FUN_10266530(&DAT_106abee8,(int)"warningcallstacks_length",&DAT_10332f1c,2,
  FUN_10266530(&DAT_106abfa0,(int)"errorcallstacks_enable",&DAT_103256a0,2,
  FUN_10266530(&DAT_106ac470,(int)"warningcallstacks_enable",&DAT_103256a0,2,
  FUN_10266530(&DAT_106ac5d8,(int)"errorcallstacks_length",&DAT_10332ec8,2,
  FUN_10266530(&DAT_106acdb8,(int)"mat_powersavingsmode",&DAT_103256a0,0x80,"Power Savings Mode",
  FUN_10266530(&DAT_106ace18,(int)"fps_max",&DAT_1035ddd8,0x80000,"Frame rate limiter",
  FUN_10266530(&DAT_106b01c0,(int)"budget_panel_bottom_of_history_fraction",&DAT_10378f00,0x80,
  FUN_10266530(&DAT_106b0218,(int)"budget_history_range_ms","66.666666667",0x80,
  FUN_10266530(&DAT_106b0278,(int)"budget_panel_x",&DAT_103256a0,0x80,
  FUN_10266530(&DAT_106b0328,(int)"budget_panel_y",&DAT_10332ec8,0x80,
  FUN_10266530(&DAT_106b0380,(int)"budget_bargraph_range_ms","16.6666666667",0x80,
  FUN_10266530(&DAT_106b03d8,(int)"budget_panel_height",&DAT_1035dde4,0x80,
  FUN_10266530(&DAT_106b0430,(int)"budget_panel_width",&DAT_1035dde0,0x80,
  FUN_10266530(&DAT_106b05f0,(int)"vgui_drawtree_visible",&DAT_10324480,0,"Draw the visible panels."
  FUN_10266530(&DAT_106b0648,(int)"vgui_drawtree_hidden",&DAT_103256a0,0,"Draw the hidden panels.",
  FUN_10266530(&DAT_106b06a0,(int)"vgui_drawtree_popupsonly",&DAT_103256a0,0,
  FUN_10266530(&DAT_106b06f8,(int)"vgui_drawtree_freeze",&DAT_103256a0,0,
  FUN_10266530(&DAT_106b0750,(int)"vgui_drawtree_panelptr",&DAT_103256a0,0,
  FUN_10266530(&DAT_106b07a8,(int)"vgui_drawtree_panelalpha",&DAT_103256a0,0,
  FUN_10266530(&DAT_106b0800,(int)"vgui_drawtree_panelfgcolor",&DAT_103256a0,0,
  FUN_10266530(&DAT_106b0858,(int)"vgui_drawtree_render_order",&DAT_103256a0,0,
  FUN_10266530(&DAT_106b08b0,(int)"vgui_drawtree_bounds",&DAT_103256a0,0,"Show panel bounds.",
  FUN_10266530(&DAT_106b0908,(int)"vgui_drawtree_draw_selected",&DAT_103256a0,0,
  FUN_10266530(&DAT_106b0960,(int)"vgui_drawtree_scheme",&DAT_103256a0,0,
  FUN_10266530(&DAT_106b0be0,(int)"texture_budget_panel_x",&DAT_103256a0,0x80,
  FUN_10266530(&DAT_106b0c38,(int)"texture_budget_panel_y",&DAT_1035dddc,0x80,
  FUN_10266530(&DAT_106b0c90,(int)"texture_budget_panel_width",&DAT_1035dde0,0x80,
  FUN_10266530(&DAT_106b0ce8,(int)"texture_budget_panel_height",&DAT_1035ddd4,0x80,
  FUN_10266530(&DAT_106b0d40,(int)"texture_budget_panel_bottom_of_history_fraction",&DAT_10378f00,
  FUN_102665c0(&DAT_1043c9a8,(int)"volume",&DAT_103242e4,0x1000080,"Sound volume",1,0,1,0x3f800000);
  FUN_102665c0(&DAT_1043cab0,(int)"snd_musicvolume",&DAT_10325af8,0x1000280,"Music volume",1,0,1,
  FUN_102665c0(&DAT_104e2240,(int)"cl_resend",&DAT_1032fc90,0x80000,
  FUN_102665c0(&DAT_104e2298,(int)"cl_resend_timeout",&DAT_1032fce4,0x80000,
  FUN_102665c0(&DAT_105fae58,(int)"mat_monitorgamma",&DAT_1034c760,0x1000080,
  FUN_102665c0(&DAT_105faf60,(int)"mat_monitorgamma_tv_exp",&DAT_10326e6c,0,&DAT_103236cf,1,
  FUN_102665c0(&DAT_1063b928,(int)"sv_maxrate",&DAT_103256a0,0x82000,
  FUN_102665c0(&DAT_1063b980,(int)"sv_minrate",&DAT_103512ec,0x82000,
  FUN_102665c0(&DAT_106637f0,(int)"sv_maxreplay",&DAT_103256a0,0,"Maximum replay time in seconds",1,
  FUN_102665c0(&DAT_10663f50,(int)"sv_rcon_maxfailures",&DAT_1032e794,0,
  FUN_102665c0(&DAT_10663fa8,(int)"sv_rcon_minfailures",&DAT_10332f1c,0,
  FUN_102665c0(&DAT_10664000,(int)"sv_rcon_banpenalty",&DAT_103256a0,0,
  FUN_102665c0(&DAT_10664058,(int)"sv_rcon_minfailuretime",&DAT_10341688,0,
  FUN_102665c0(&DAT_106665a0,(int)"sv_reservation_grace",&DAT_10332f1c,0,
  FUN_102665c0(&DAT_10666650,(int)"sv_reservation_timeout",&DAT_103571f4,0x80000,
  FUN_102665c0(&DAT_1066b2e0,(int)"cl_cmdrate",&DAT_10351338,0x280,
  FUN_102665c0(&DAT_10682188,(int)"tv_maxclients",&DAT_103261e0,0x80000,
  FUN_102665c0(&DAT_10682658,(int)"skill",&DAT_10324480,0x80,"Game skill level (1-3).",1,0x3f800000,
  FUN_102665c0(&DAT_106a1e20,(int)"r_lightcache_numambientsamples",&DAT_1035ddcc,0x4000,
  FUN_102665c0(&DAT_106a4c28,(int)"net_maxfilesize",&DAT_1034c778,0,
  FUN_102665c0(&DAT_106a4c80,(int)"net_maxfragments",&DAT_10367a84,0,"Max fragment bytes per packet"
  FUN_102665c0(&DAT_106a5178,(int)"net_maxroutable",&DAT_10367a84,0x280,
  FUN_102665c0(&DAT_106a53f8,(int)"sv_maxroutable",&DAT_10367a84,0,
  FUN_10266660(&DAT_104e2450,(int)"cl_steam_overlay_position",&DAT_10325994,0x80080,
  FUN_10266660(&DAT_104f3670,(int)"con_logfile",&DAT_103236cf,0x80000,
  FUN_10266660(&DAT_105f8e68,(int)"r_rootlod",&DAT_103256a0,0x804002,"Root LOD",1,0,1,0x40e00000,
  FUN_10266660(&DAT_106831c8,(int)"threadpool_reserve",&DAT_103256a0,0,
  FUN_10266660(&DAT_10683368,(int)"threadpool_affinity",&DAT_10324480,0,"Enable setting affinity",0,
  FUN_10266660(&DAT_10684db8,(int)"hostname",&DAT_103236cf,0x80000,"Hostname for server.",0,0,0,0,
  FUN_10266660(&DAT_106acf78,(int)"cpu_frequency_monitoring",&DAT_103256a0,0x80000,
  FUN_10266660(&DAT_106b1188,(int)"vprof_scope",&DAT_103236cf,0,
  FUN_10266700(&DAT_10427098,(int)"windows_speaker_config",&DAT_10324484,0x80080);
  FUN_10266700(&DAT_104270f0,(int)"snd_mute_losefocus",&DAT_10324480,0x80);
  FUN_10266700(&DAT_10427190,(int)"snd_lockpartial",&DAT_10324480,0);
  FUN_10266700(&DAT_104274b0,(int)"snd_sos_show_client_rcv",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_10427508,(int)"snd_sos_allow_dynamic_chantype",&DAT_10324480,0);
  FUN_10266700(&DAT_10427778,(int)"snd_store_filepaths",&DAT_103236cf,0);
  FUN_10266700(&DAT_104277d0,(int)"snd_max_same_sounds",&DAT_1032597c,0x4000);
  FUN_10266700(&DAT_10427828,(int)"snd_max_same_weapon_sounds",&DAT_10325994,0x4000);
  FUN_10266700(&DAT_1043c708,(int)"snd_delay_sound_shift",&DAT_103259b4,0);
  FUN_10266700(&DAT_1043c798,(int)"snd_surround_speakers",&DAT_10324484,0);
  FUN_10266700(&DAT_1043c7f0,(int)"snd_legacy_surround",&DAT_103256a0,0x80);
  FUN_10266700(&DAT_1043c848,(int)"snd_noextraupdate",&DAT_103256a0,0);
  FUN_10266700(&DAT_1043c950,(int)"snd_pitchquality",&DAT_10324480,0x80);
  FUN_10266700(&DAT_1043ca00,(int)"ui_volume_scale",&DAT_103242e4,0);
  FUN_10266700(&DAT_1043ca58,(int)"movie_volume_scale",&DAT_103242e4,0);
  FUN_10266700(&DAT_1043cb08,(int)"snd_mixahead",&DAT_10325b0c,0x80);
  FUN_10266700(&DAT_1043cc10,(int)"snd_mix_async",&DAT_103256a0,0);
  FUN_10266700(&DAT_1043cd88,(int)"voice_steal",&DAT_10325f28,0);
  FUN_10266700(&DAT_1043cde0,(int)"dsp_dist_min",&DAT_10326010,0x14000);
  FUN_10266700(&DAT_1043ce38,(int)"dsp_dist_max","1440.0",0x14000);
  FUN_10266700(&DAT_1043ce90,(int)"dsp_mix_min",&DAT_1032603c,0x14000);
  FUN_10266700(&DAT_1043cee8,(int)"dsp_mix_max",&DAT_1032604c,0x14000);
  FUN_10266700(&DAT_1043cf40,(int)"dsp_db_min",&DAT_1032605c,0x14000);
  FUN_10266700(&DAT_1043cf98,(int)"dsp_db_mixdrop",&DAT_10325ac0,0x14000);
  FUN_10266700(&DAT_1043d0a0,(int)"snd_showstart",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_1043d0f8,(int)"snd_pre_gain_dist_falloff",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_1043d150,(int)"snd_obscured_gain_dB","-2.70",0x4000);
  FUN_10266700(&DAT_1043d1a8,(int)"adsp_debug",&DAT_103256a0,0x80);
  FUN_10266700(&DAT_10445e78,(int)"das_process_overhang_spaces",&DAT_103256a0,0);
  FUN_10266700(&DAT_10445ed0,(int)"adsp_door_height",&DAT_103261c8,0);
  FUN_10266700(&DAT_10445f28,(int)"adsp_wall_height",&DAT_103261e0,0);
  FUN_10266700(&DAT_10445f80,(int)"adsp_low_ceiling",&DAT_103261f8,0);
  FUN_10266700(&DAT_10446058,(int)"voice_minimum_gain",&DAT_10325ac0,0);
  FUN_10266700(&DAT_104460b0,(int)"snd_sos_exec_when_paused",&DAT_10324480,0);
  FUN_10266700(&DAT_10446108,(int)"snd_defer_trace",&DAT_10324480,0);
  FUN_10266700(&DAT_104462c0,(int)"snd_filter",&DAT_103236cf,0x4000);
  FUN_10266700(&DAT_10446390,(int)"snd_ducktovolume",&DAT_10326e38,0x80);
  FUN_10266700(&DAT_104463e8,(int)"snd_duckerattacktime",&DAT_10325ac0,0x80);
  FUN_10266700(&DAT_10446440,(int)"snd_duckerreleasetime",&DAT_10326e6c,0x80);
  FUN_10266700(&DAT_10446498,(int)"snd_duckerthreshold",&DAT_10326e88,0x80);
  FUN_10266700(&DAT_104464f0,(int)"snd_ducking_off",&DAT_10324480,0x80);
  FUN_10266700(&DAT_10446748,(int)"snd_ShowThreadFrameTime",&DAT_103256a0,0);
  FUN_10266700(&DAT_10461f18,(int)"dsp_room",&DAT_10324480,0x10000);
  FUN_10266700(&DAT_10461f70,(int)"dsp_water",&DAT_103286f4,0x10000);
  FUN_10266700(&DAT_10461fc8,(int)"dsp_player",&DAT_103256a0,0x10090000);
  FUN_10266700(&DAT_10462020,(int)"dsp_facingaway",&DAT_103256a0,0x10000);
  FUN_10266700(&DAT_10462078,(int)"dsp_speaker",&DAT_10328720,0x10000);
  FUN_10266700(&DAT_104620d0,(int)"dsp_spatial",&DAT_10328730,0x10000);
  FUN_10266700(&DAT_10462128,(int)"dsp_automatic",&DAT_103256a0,0x10000);
  FUN_10266700(&DAT_10462180,(int)"room_type",&DAT_103256a0,0x10000);
  FUN_10266700(&DAT_104621d8,(int)"dsp_off",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_10462230,(int)"dsp_slow_cpu",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_10462288,(int)"snd_profile",&DAT_103256a0,0x10000);
  FUN_10266700(&DAT_104622e0,(int)"dsp_volume",&DAT_1032604c,0x4000);
  FUN_10266700(&DAT_10462338,(int)"dsp_vol_5ch",&DAT_10325ac0,0x10000);
  FUN_10266700(&DAT_10462390,(int)"dsp_vol_4ch",&DAT_10325ac0,0x10000);
  FUN_10266700(&DAT_104623e8,(int)"dsp_vol_2ch",&DAT_103242e4,0x10000);
  FUN_10266700(&DAT_10462440,(int)"dsp_enhance_stereo",&DAT_103256a0,0x80);
  FUN_10266700(&DAT_10462498,(int)"adsp_scale_delay_gain",&DAT_1032603c,0);
  FUN_10266700(&DAT_104624f0,(int)"adsp_scale_delay_feedback",&DAT_1032603c,0);
  FUN_10266700(&DAT_10462548,(int)"adsp_room_min",&DAT_10328aa4,0);
  FUN_10266700(&DAT_104625a0,(int)"adsp_duct_min",&DAT_10328ab8,0);
  FUN_10266700(&DAT_104625f8,(int)"adsp_hall_min",&DAT_10328acc,0);
  FUN_10266700(&DAT_10462650,(int)"adsp_tunnel_min",&DAT_10328ae0,0);
  FUN_10266700(&DAT_104626a8,(int)"adsp_street_min",&DAT_10328af4,0);
  FUN_10266700(&DAT_10462700,(int)"adsp_alley_min",&DAT_10328b08,0);
  FUN_10266700(&DAT_10462758,(int)"adsp_courtyard_min",&DAT_10328b1c,0);
  FUN_10266700(&DAT_104627b0,(int)"adsp_openspace_min",&DAT_10328b34,0);
  FUN_10266700(&DAT_10462808,(int)"adsp_openwall_min",&DAT_10328b34,0);
  FUN_10266700(&DAT_10462860,(int)"adsp_openstreet_min",&DAT_10328af4,0);
  FUN_10266700(&DAT_104628b8,(int)"adsp_opencourtyard_min",&DAT_10328b1c,0);
  FUN_10266700(&DAT_10482b00,(int)"snd_mix_dry_volume",&DAT_103242e4,0);
  FUN_10266700(&DAT_10482b58,(int)"snd_mix_test1",&DAT_103242e4,0);
  FUN_10266700(&DAT_10482bb0,(int)"snd_mix_test2",&DAT_103242e4,0);
  FUN_10266700(&DAT_104aff80,(int)"snd_mixer_master_level",&DAT_103242e4,0x4000);
  FUN_10266700(&DAT_104affd8,(int)"snd_mixer_master_dsp",&DAT_103242e4,0x4000);
  FUN_10266700(&DAT_104b0030,(int)"snd_showclassname",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104b0088,(int)"snd_list",&DAT_103236cf,0x4000);
  FUN_10266700(&DAT_104b00e0,(int)"snd_showmixer",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104b0138,(int)"snd_disable_mixer_solo",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104b0190,(int)"snd_soundmixer","Default_Mix",0);
  FUN_10266700(&DAT_104b01e8,(int)"snd_disable_mixer_duck",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104b02d0,(int)"snd_soundmixer_version",&DAT_10325f28,0);
  FUN_10266700(&DAT_104b0370,(int)"snd_soundmixer_parse_debug",&DAT_103256a0,0);
  FUN_10266700(&DAT_104b0458,(int)"snd_voice_echo",&DAT_103256a0,2);
  FUN_10266700(&DAT_104c2c68,(int)"snd_async_minsize","262144",0);
  FUN_10266700(&DAT_104c2e48,(int)"snd_sos_show_entry_match_free",&DAT_103256a0,0);
  FUN_10266700(&DAT_104c2f28,(int)"snd_op_test_convar",&DAT_103242e4,0x4000);
  FUN_10266700(&DAT_104c3e80,(int)"snd_sos_show_source_info",&DAT_103256a0,0);
  FUN_10266700(&DAT_104c4040,(int)"snd_sos_show_operator_stop_entry",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c4200,(int)"snd_sos_show_queuetotrack",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c4438,(int)"snd_sos_show_operator_init",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c4490,(int)"snd_sos_show_operator_start",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c44e8,(int)"snd_sos_show_operator_prestart",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c4540,(int)"snd_sos_show_operator_updates",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c4598,(int)"snd_sos_show_operator_shutdown",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c45f0,(int)"snd_sos_show_operator_parse",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c4648,(int)"snd_sos_list_operator_updates",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c46a0,(int)"snd_sos_show_operator_entry_filter",&DAT_103236cf,0x4000);
  FUN_10266700(&DAT_104c4788,(int)"snd_sos_show_startqueue",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104c47e0,(int)"snd_sos_show_track_list",&DAT_103256a0,0);
  FUN_10266700(&DAT_104c4838,(int)"snd_sos_show_opvar_list",&DAT_103256a0,0);
  FUN_10266700(&DAT_104c4d58,(int)"voice_avggain",&DAT_10325ac0,0);
  FUN_10266700(&DAT_104c4db0,(int)"voice_maxgain",&DAT_1032e794,0);
  FUN_10266700(&DAT_104c4e08,(int)"voice_scale",&DAT_10324480,0x80);
  FUN_10266700(&DAT_104c4e60,(int)"voice_loopback",&DAT_103256a0,0x200);
  FUN_10266700(&DAT_104c4eb8,(int)"voice_fadeouttime",&DAT_10325b0c,0);
  FUN_10266700(&DAT_104c4f10,(int)"voice_profile",&DAT_103256a0,0);
  FUN_10266700(&DAT_104c4f68,(int)"voice_showchannels",&DAT_103256a0,0);
  FUN_10266700(&DAT_104c4fc0,(int)"voice_showincoming",&DAT_103256a0,0);
  FUN_10266700(&DAT_104c5070,(int)"voice_threshold",&DAT_1032e834,0x80);
  FUN_10266700(&DAT_104c50c8,(int)"voice_forcemicrecord",&DAT_10324480,0x80);
  FUN_10266700(&DAT_104e02c8,(int)"voice_mixer_mute",&DAT_103256a0,0x80);
  FUN_10266700(&DAT_104e0320,(int)"voice_mixer_boost",&DAT_103256a0,0x80);
  FUN_10266700(&DAT_104e0378,(int)"voice_mixer_volume",&DAT_103242e4,0x80);
  FUN_10266700(&DAT_104e0460,(int)"voice_overdrive",&DAT_10325f28,0);
  FUN_10266700(&DAT_104e04b8,(int)"voice_overdrivefadetime",&DAT_1032ecd0,0);
  FUN_10266700(&DAT_104e1fc8,(int)"snd_vox_globaltimeout",&DAT_103260a4,0);
  FUN_10266700(&DAT_104e2020,(int)"snd_vox_seqtimetout",&DAT_103260a4,0);
  FUN_10266700(&DAT_104e2078,(int)"snd_vox_sectimetout",&DAT_103260a4,0);
  FUN_10266700(&DAT_104e24e0,(int)"mat_dynamic_tonemapping",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_104e2538,(int)"reload_materials",&DAT_103256a0,0);
  FUN_10266700(&DAT_104e25e8,(int)"mat_force_tonemap_scale",&DAT_10326010,0x4000);
  FUN_10266700(&DAT_104e26d0,(int)"r_buildingmapforworld",&DAT_103256a0,0);
  FUN_10266700(&DAT_104e4458,(int)"er_colwidth",&DAT_1033b8d8,0);
  FUN_10266700(&DAT_104e44b0,(int)"er_maxname",&DAT_103286f4,0);
  FUN_10266700(&DAT_104e4508,(int)"er_graphwidthfrac",&DAT_1032603c,0);
  FUN_10266700(&DAT_104f1ed8,(int)"net_earliertempents",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104f2df8,(int)"mat_texture_list_exclude_editing",&DAT_103256a0,0);
  FUN_10266700(&DAT_104f3250,(int)"mat_colorcorrection",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_104f32a8,(int)"mat_colcorrection_disableentities",&DAT_103256a0,0);
  FUN_10266700(&DAT_104f3300,(int)"mat_colcorrection_editor",&DAT_103256a0,0);
  FUN_10266700(&DAT_104f4a98,(int)"dbg_demofile",&DAT_103256a0,0);
  FUN_10266700(&DAT_104f6188,(int)"disp_dynamic",&DAT_103256a0,0);
  FUN_10266700(&DAT_104f6278,(int)"r_drawlights",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_104f62d0,(int)"r_drawlightinfo",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f6380,(int)"r_avglightmap",&DAT_103256a0,0x804000);
  FUN_10266700(&DAT_105f63d8,(int)"r_maxdlights",&DAT_1034a2f0,0);
  FUN_10266700(&DAT_105f6430,(int)"r_dlightsenable",&DAT_10324480,0x804000);
  FUN_10266700(&DAT_105f7798,(int)"r_visualizetraces",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f77f0,(int)"r_visualizelighttraces",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f7848,(int)"r_visualizelighttracesshowfulltrace",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f7cb8,(int)"r_dynamiclighting",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_105f7fa0,(int)"r_redownloadallpaintmaps",&DAT_103256a0,2);
  FUN_10266700(&DAT_105f8330,(int)"r_drawtranslucentworld",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_105f8388,(int)"mat_forcedynamic",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f84e8,(int)"fog_enable_water_fog",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_105f8700,(int)"mat_surfaceid",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f8758,(int)"mat_surfacemat",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f87b0,(int)"r_flashlightrendermodels",&DAT_10324480,0);
  FUN_10266700(&DAT_105f8808,(int)"r_frustumcullworld",&DAT_10324480,0);
  FUN_10266700(&DAT_105f8860,(int)"fast_fogvolume",&DAT_103256a0,0);
  FUN_10266700(&DAT_105f8920,(int)"miniprofiler_dump",&DAT_103256a0,0);
  FUN_10266700(&DAT_105f89f8,(int)"r_drawskybox",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_105f8aa8,(int)"mat_force_singlepass_ubersky",&DAT_103256a0,0);
  FUN_10266700(&DAT_105f8b50,(int)"r_drawmodelstatsoverlay",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f8ba8,(int)"r_drawmodelstatsoverlaydistance",&DAT_10325be0,0x4000);
  FUN_10266700(&DAT_105f8c00,(int)"r_drawmodelstatsoverlayfilter",&DAT_10324484,0x4000);
  FUN_10266700(&DAT_105f8c58,(int)"r_DrawModelLightOrigin",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f8d08,(int)"r_entity",&DAT_10324484,0x4002);
  FUN_10266700(&DAT_105f8ff8,(int)"r_itemblinkmax",&DAT_1034b7e0,0x4000);
  FUN_10266700(&DAT_105f9050,(int)"r_itemblinkrate",&DAT_1034b7f4,0x4000);
  FUN_10266700(&DAT_105f9100,(int)"r_showenvcubemap",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f9158,(int)"r_eyemove",&DAT_10324480,0x80);
  FUN_10266700(&DAT_105f91b0,(int)"r_eyeshift_x",&DAT_103256a0,0x80);
  FUN_10266700(&DAT_105f9208,(int)"r_eyeshift_y",&DAT_103256a0,0x80);
  FUN_10266700(&DAT_105f9260,(int)"r_eyeshift_z",&DAT_103256a0,0x80);
  FUN_10266700(&DAT_105f92b8,(int)"r_eyesize",&DAT_103256a0,0x80);
  FUN_10266700(&DAT_105f9310,(int)"mat_softwareskin",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f9368,(int)"r_nohw",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f93c0,(int)"r_nosw",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f9418,(int)"r_teeth",&DAT_10324480,0);
  FUN_10266700(&DAT_105f9470,(int)"r_drawentities",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_105f94c8,(int)"r_flex",&DAT_10324480,0);
  FUN_10266700(&DAT_105f9520,(int)"r_eyes",&DAT_10324480,0);
  FUN_10266700(&DAT_105f9578,(int)"r_skin",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f95d0,(int)"r_modelwireframedecal",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f9628,(int)"r_maxmodeldecal",&DAT_10328720,0);
  FUN_10266700(&DAT_105f9680,(int)"r_slowpathwireframe",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105f9b68,(int)"r_staticprop_lod",&DAT_10324484,2);
  FUN_10266700(&DAT_105fa7a0,(int)"mat_shadowstate",&DAT_10324480,0);
  FUN_10266700(&DAT_105fa7f8,(int)"mat_maxframelatency",&DAT_10324480,0);
  FUN_10266700(&DAT_105fa850,(int)"mat_debugalttab",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105fa930,(int)"r_norefresh",&DAT_103256a0,0);
  FUN_10266700(&DAT_105fa988,(int)"r_decals",&DAT_1034c5f0,0);
  FUN_10266700(&DAT_105fa9e0,(int)"r_lightmap",&DAT_10324484,0x804000);
  FUN_10266700(&DAT_105faa38,(int)"r_lightstyle",&DAT_10324484,0x804000);
  FUN_10266700(&DAT_105faa90,(int)"r_dynamic",&DAT_10324480,0x80000);
  FUN_10266700(&DAT_105faae8,(int)"mat_norendering",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105fab40,(int)"mat_wireframe",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105fab98,(int)"mat_luxels",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105fabf0,(int)"mat_normals",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105fac48,(int)"mat_bumpbasis",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105faca0,(int)"mat_envmapsize",&DAT_103261e0,0);
  FUN_10266700(&DAT_105facf8,(int)"mat_envmaptgasize",&DAT_1034c674,0);
  FUN_10266700(&DAT_105fad50,(int)"mat_levelflush",&DAT_10324480,0);
  FUN_10266700(&DAT_105fae00,(int)"mat_fullbright",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105faeb0,(int)"mat_monitorgamma_tv_range_min",&DAT_1034c778,0);
  FUN_10266700(&DAT_105faf08,(int)"mat_monitorgamma_tv_range_max",&DAT_1034c79c,0);
  FUN_10266700(&DAT_105fb068,(int)"r_shadowrendertotexture",&DAT_103256a0,0);
  FUN_10266700(&DAT_105fb0c0,(int)"r_flashlightdepthtexture",&DAT_10324480,0);
  FUN_10266700(&DAT_105fb118,(int)"mat_motion_blur_enabled",&DAT_103256a0,0);
  FUN_10266700(&DAT_105fb170,(int)"mat_vrmode_adapter",&DAT_10324484,0);
  FUN_10266700(&DAT_105fb1c8,(int)"mat_depthbias_normal",&DAT_1034c850,0x4000);
  FUN_10266700(&DAT_105fb408,(int)"mat_max_worldmesh_vertices","65536",0);
  FUN_10266700(&DAT_105fb5c0,(int)"mat_loadtextures",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_105fb6c8,(int)"mat_excludetextures",&DAT_103256a0,0);
  FUN_10266700(&DAT_105fb720,(int)"mat_glidnarb",&DAT_103256a0,0);
  FUN_10266700(&DAT_105fb778,(int)"r_unloadlightmaps",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105fb7d0,(int)"r_hunkalloclightmaps",&DAT_10324480,0);
  FUN_10266700(&DAT_105fb828,(int)"r_keepstyledlightmapsonly",&DAT_103256a0,0);
  FUN_10266700(&DAT_105fb880,(int)"mod_dynamicunloadtime",&DAT_1034d7d4,0x20010);
  FUN_10266700(&DAT_105fb8d8,(int)"mod_dynamicunloadtex",&DAT_10324480,0x20010);
  FUN_10266700(&DAT_105fb930,(int)"mod_dynamicloadpause",&DAT_103256a0,0x24010);
  FUN_10266700(&DAT_105fb988,(int)"mod_dynamicloadthrottle",&DAT_103256a0,0x24010);
  FUN_10266700(&DAT_105fb9e0,(int)"mod_dynamicloadspew",&DAT_103256a0,0x20010);
  FUN_10266700(&DAT_105ff580,(int)"r_renderoverlaybatch",&DAT_10324480,2);
  FUN_10266700(&DAT_105ff5d8,(int)"r_renderoverlayfragment",&DAT_10324480,0);
  FUN_10266700(&DAT_105ff630,(int)"r_overlaywireframe",&DAT_103256a0,0);
  FUN_10266700(&DAT_105ff688,(int)"r_overlayfadeenable",&DAT_103256a0,0);
  FUN_10266700(&DAT_105ff6e0,(int)"r_overlayfademin",&DAT_1034f188,0);
  FUN_10266700(&DAT_105ff738,(int)"r_overlayfademax",&DAT_1032e834,0);
  FUN_10266700(&DAT_105ff878,(int)"r_ClipAreaPortals",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_105ff8d0,(int)"r_DrawPortals",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_105ff928,(int)"r_ClipAreaFrustums",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_105ff9a8,(int)"r_snapportal",&DAT_10324484,0);
  FUN_10266700(&DAT_105ffa00,(int)"r_portalscloseall",&DAT_103256a0,0);
  FUN_10266700(&DAT_105ffab0,(int)"r_ShowViewerArea",&DAT_103256a0,0);
  FUN_10266700(&DAT_10605350,(int)"r_decal_overlap_count",&DAT_10325994,0);
  FUN_10266700(&DAT_106053a8,(int)"r_decal_overlap_area",&DAT_1032ecd0,0);
  FUN_10266700(&DAT_10605400,(int)"r_decal_cover_count",&DAT_1032597c,0);
  FUN_10266700(&DAT_10605488,(int)"r_dscale_nearscale",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_10625500,(int)"r_dscale_neardist",&DAT_1033b8d8,0x4000);
  FUN_10266700(&DAT_10625558,(int)"r_dscale_farscale",&DAT_1032597c,0x4000);
  FUN_10266700(&DAT_106255b0,(int)"r_dscale_fardist",&DAT_1032e834,0x4000);
  FUN_10266700(&DAT_10625608,(int)"r_dscale_basefov",&DAT_1033cb28,0x4000);
  FUN_10266700(&DAT_10625900,(int)"r_shadows",&DAT_10324480,0);
  FUN_10266700(&DAT_10625958,(int)"r_shadows_gamecontrol",&DAT_10324484,0x4000);
  FUN_10266700(&DAT_106259b0,(int)"r_shadowids",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_10625a08,(int)"r_flashlightdrawsweptbbox",&DAT_103256a0,0);
  FUN_10266700(&DAT_10625a60,(int)"r_flashlightnodraw",&DAT_103256a0,0);
  FUN_10266700(&DAT_10625ab8,(int)"r_flashlightupdatedepth",&DAT_10324480,0);
  FUN_10266700(&DAT_10625b10,(int)"r_flashlightdrawdepth",&DAT_103256a0,0);
  FUN_10266700(&DAT_10625b68,(int)"r_flashlightdrawdepthres",&DAT_1034f87c,0);
  FUN_10266700(&DAT_10625bc0,(int)"r_flashlightrenderworld",&DAT_10324480,0);
  FUN_10266700(&DAT_10625c18,(int)"r_flashlightrendermodels",&DAT_10324480,0);
  FUN_10266700(&DAT_10625c70,(int)"r_flashlightrender",&DAT_10324480,0);
  FUN_10266700(&DAT_10625cc8,(int)"r_flashlightculldepth",&DAT_10324480,0);
  FUN_10266700(&DAT_10625d20,(int)"r_threaded_shadow_clip",&DAT_103256a0,0);
  FUN_10266700(&DAT_10625d78,(int)"r_flashlight_always_cull_for_single_pass",&DAT_103256a0,0);
  FUN_10266700(&DAT_10639ff0,(int)"r_flashlightclip",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_1063a048,(int)"r_flashlightdrawclip",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_1063a0a0,(int)"r_flashlightscissor",&DAT_103256a0,0x800000);
  FUN_10266700(&DAT_1063b6f0,(int)"r_brush_queue_mode",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_1063b778,(int)"net_megasnapshot",&DAT_10324480,0);
  FUN_10266700(&DAT_1063b7d0,(int)"sv_multiplayer_maxtempentities",&DAT_1034a2f0,0);
  FUN_10266700(&DAT_1063b828,(int)"sv_multiplayer_sounds",&DAT_10332ec8,0);
  FUN_10266700(&DAT_1063bc40,(int)"net_showreliablesounds",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_1063bc98,(int)"sv_maxclientframes",&DAT_103261e0,0);
  FUN_10266700(&DAT_1063bd48,(int)"sv_sound_discardextraunreliable",&DAT_10324480,0);
  FUN_10266700(&DAT_106633d0,(int)"sv_cheats_flagged",&DAT_103256a0,0x2012);
  FUN_10266700(&DAT_106636e8,(int)"sv_voiceenable",&DAT_10324480,0x80180);
  FUN_10266700(&DAT_10663bc0,(int)"sv_parallel_sendsnapshot",&DAT_103256a0,0);
  FUN_10266700(&DAT_10663c18,(int)"voice_debugfeedbackfrom",&DAT_103256a0,0);
  FUN_10266700(&DAT_10663db8,(int)"sv_parallel_packentities",&DAT_10324480,0);
  FUN_10266700(&DAT_10666498,(int)"sv_hosting_lobby",&DAT_103256a0,0x2002);
  FUN_10266700(&DAT_1066a890,(int)"blackbox",&DAT_10324480,0);
  FUN_10266700(&DAT_10672ba8,(int)"occlusion_test_rays",&DAT_103256a0,2);
  FUN_10266700(&DAT_10676838,(int)"r_DispBuildable",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_106768c0,(int)"r_DispWalkable",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_10680d60,(int)"sv_logdownloadlist",&DAT_103256a0,0);
  FUN_10266700(&DAT_10681110,(int)"sv_new_delta_bits",&DAT_10324480,0);
  FUN_10266700(&DAT_10681520,(int)"occlusion_test_async_jitter",&DAT_10325f28,0x4000);
  FUN_10266700(&DAT_10681668,(int)"occlusion_test_async_move_tolerance",&DAT_1035f12c,0x4000);
  FUN_10266700(&DAT_10681c20,(int)"display_game_events",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_106826b0,(int)"host_profile",&DAT_103256a0,0);
  FUN_10266700(&DAT_106827b8,(int)"host_runframe_input_parcelremainder",&DAT_10324480,0);
  FUN_10266700(&DAT_106829e8,(int)"fs_enable_stats",&DAT_103256a0,0);
  FUN_10266700(&DAT_10682cf8,(int)"r_ForceRestore",&DAT_103256a0,0);
  FUN_10266700(&DAT_10682da8,(int)"host_print_frame_times",&DAT_103256a0,0);
  FUN_10266700(&DAT_10683010,(int)"vprof_server_thread",&DAT_103256a0,0);
  FUN_10266700(&DAT_10683500,(int)"vprof_server_spike_threshold","999.0",0);
  FUN_10266700(&DAT_10685320,(int)"save_disable",&DAT_103256a0,0);
  FUN_10266700(&DAT_10685438,(int)"save_noxsave",&DAT_103256a0,0);
  FUN_10266700(&DAT_106854d8,(int)"map_wants_save_disable",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_10685530,(int)"save_async",&DAT_10324480,0);
  FUN_10266700(&DAT_10685588,(int)"save_multiplayer_override",&DAT_103256a0,0x12);
  FUN_10266700(&DAT_106857c0,(int)"save_spew",&DAT_103256a0,0);
  FUN_10266700(&DAT_10689e90,(int)"mat_ambient_light_g",&DAT_10326010,0);
  FUN_10266700(&DAT_10689ee8,(int)"mat_ambient_light_r",&DAT_10326010,0);
  FUN_10266700(&DAT_10689f40,(int)"lightcache_maxmiss",&DAT_10325f28,0x4000);
  FUN_10266700(&DAT_10689f98,(int)"r_worldlightmin","0.0002",0);
  FUN_10266700(&DAT_106a1be0,(int)"r_lightcachecenter",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_106a1c38,(int)"r_maxsampledist",&DAT_103261e0,0);
  FUN_10266700(&DAT_106a1d18,(int)"r_maxnewsamples",&DAT_1032fc90,0);
  FUN_10266700(&DAT_106a1d70,(int)"r_avglight",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_106a1dc8,(int)"r_minnewsamples",&DAT_10325994,0);
  FUN_10266700(&DAT_106a1e78,(int)"mat_ambient_light_b",&DAT_10326010,0);
  FUN_10266700(&DAT_106a1ed0,(int)"r_lightcache_zbuffercache",&DAT_103256a0,0);
  FUN_10266700(&DAT_106a4890,(int)"net_dumptest",&DAT_103256a0,0);
  FUN_10266700(&DAT_106a4b20,(int)"net_paranoid",&DAT_10324480,0);
  FUN_10266700(&DAT_106a5668,(int)"voice_xsend_debug",&DAT_103256a0,0);
  FUN_10266700(&DAT_106a5980,(int)"net_queue_trace",&DAT_103256a0,0x2000000);
  FUN_10266700(&DAT_106a6048,(int)"sv_dumpstringtables",&DAT_103256a0,0x4000);
  FUN_10266700(&DAT_106a6338,(int)"paintsplat_noise_enabled",&DAT_10324480,0x6000);
  FUN_10266700(&DAT_106a6390,(int)"paint_min_valid_alpha_value",&DAT_1036bac0,0x2002);
  FUN_10266700(&DAT_106a6440,(int)"debug_paint_alpha",&DAT_103256a0,2);
  FUN_10266700(&DAT_106a6498,(int)"paint_alpha_offset_enabled",&DAT_10324480,0x2002);
  FUN_10266700(&DAT_106a6548,(int)"paint_max_surface_border_alpha",&DAT_1036bac0,0x2002);
  FUN_10266700(&DAT_106a8af0,(int)"voice_debugfeedback",&DAT_103256a0,0);
  FUN_10266700(&DAT_106a8ce8,(int)"snd_gain",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_106a8d40,(int)"snd_gain_max",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_106a8e48,(int)"snd_gain_min",&DAT_1036d098,0x4000);
  FUN_10266700(&DAT_106a91c0,(int)"r_staticpropinfo",&DAT_103256a0,0);
  FUN_10266700(&DAT_106a9350,(int)"pipeline_static_props",&DAT_10324480,0);
  FUN_10266700(&DAT_106a9470,(int)"r_DrawSpecificStaticProp",&DAT_10324484,0);
  FUN_10266700(&DAT_106a94c8,(int)"r_drawmodeldecals",&DAT_10324480,0);
  FUN_10266700(&DAT_106aa0d0,(int)"mm_heartbeat_timeout",&DAT_1032e794,0);
  FUN_10266700(&DAT_106ab018,(int)"mm_heartbeat_seconds_xlsp",&DAT_1032fce4,0);
  FUN_10266700(&DAT_106ab070,(int)"mm_heartbeat_timeout_legacy",&DAT_103585fc,0);
  FUN_10266700(&DAT_106ab0c8,(int)"mm_heartbeat_seconds",&DAT_103260a4,0);
  FUN_10266700(&DAT_106ac7d8,(int)"sys_minidumpexpandedspew",&DAT_10324480,0);
  FUN_10266700(&DAT_106acd08,(int)"engine_no_focus_sleep",&DAT_1032605c,0x80);
  FUN_10266700(&DAT_106ad200,(int)"vprof_counters",&DAT_103256a0,0);
  FUN_10266700(&DAT_106ad450,(int)"vprof_counters_show_minmax",&DAT_103256a0,0);
  FUN_10266700(&DAT_106af880,(int)"hunk_track_allocation_types",&DAT_10324480,0x4000);
  FUN_10266700(&DAT_106afb00,(int)"gameui_xbox",&DAT_103256a0,0);
  FUN_10266700(&DAT_106b0af8,(int)"showbudget_texture_global_sum",&DAT_1034c850,0);
  FUN_10266700(&DAT_106b0e50,(int)"vprof_graphwidth",&DAT_1035dde0,0x80);
  FUN_10266700(&DAT_106b0ea8,(int)"vprof_graphheight",&DAT_1034f87c,0x80);
  FUN_102667c0(&local_10,"sv_skyname");
  FUN_102667c0(&local_24,"sv_skyname");
  FUN_102667c0(&local_c,"mapcyclefile");
  FUN_102667c0(&local_c,"mat_supportflashlight");
  FUN_102667c0(&local_c,"sv_pausable");
  FUN_102667c0(&local_c,"voice_vox");
  FUN_102667c0(local_14,"defaultresheight_restart");
  FUN_102667c0(local_14,"mat_aaquality");
  FUN_102667c0(local_14,"r_shadows");
  FUN_102667c0(local_1c,"mat_drawwater");
  FUN_102667c0(local_1c,"mat_forceaniso");
  FUN_102667c0(local_20,"voice_verbose");
  FUN_102667c0(local_24,"mat_triplebuffered");
  FUN_102667c0(local_24,"r_lightstyle");
  FUN_102667c0(local_2c,"mat_picmip");
  FUN_102667c0(local_2c,"r_portalsopenall");
  FUN_102667c0(local_34,"mat_motion_blur_enabled");
  FUN_102667c0(local_34,"r_occlusion");
  FUN_102667c0(local_3c,"mat_disable_bloom");
  FUN_102667c0(local_3c,"mat_vsync");
  FUN_102667c0(local_44,"r_drawothermodels");
  FUN_102667c0(local_44,"r_waterforceexpensive");
  FUN_102667c0(local_4c,"csm_quality_level");
  FUN_102667c0(local_54,"r_shadowrendertotexture");
  FUN_102667c0(local_5c,"mat_antialias");
  FUN_102667c0(local_64,"r_flashlightdepthtexture");
  FUN_102667c0(local_6c,"mat_queue_mode");
  FUN_102667c0(local_74,"r_rootlod");
  FUN_102667c0(local_7c,"r_waterforcereflectentities");
  FUN_102667c0(local_c,"cl_mouseenable");
  FUN_102667c0(local_c,"defaultres_restart");
  FUN_102667c0(local_c,"sv_cheats");
  FUN_102667c0(local_c,"sv_skyname");
  FUN_102667c0(local_c,"voice_verbose");
  FUN_10266840(&local_10,"cl_hud_minmode",'\x01');
  FUN_102687d0(param_1,(uint *)"FADEINOUT",0);
  FUN_1026b250(param_1,(uint *)"progress",*(uint *)((int)this + 0x1b0));
  FUN_1026b250(param_1,(uint *)"scaleAmount",*(uint *)((int)this + 0x1f0));
  FUN_1026b250(this_00,(uint *)"framerate",(uint)local_8);
  FUN_1026b280(*param_2,(uint *)"SupportsDX8",0);
  FUN_1026b280(*param_2,(uint *)"SupportsXbox360",0);
  FUN_1026b280(*param_2,(uint *)"gamelogo",1);
  FUN_1026b280(*param_3,(uint *)"SteamAppId",0xc79c);
  FUN_1026b280(*param_3,(uint *)"ToolsAppId",0xc79c);
  FUN_1026b280(local_8,(uint *)"VPanel",uVar2);
  FUN_1026b280(param_1,(uint *)"AAQuality",DAT_105f9f90[0x16]);
  FUN_1026b280(param_1,(uint *)"AASamples",DAT_105f9f90[9]);
  FUN_1026b280(param_1,(uint *)"AnisoLevel",DAT_105f9f90[10]);
  FUN_1026b280(param_1,(uint *)"AutoResize",(uint)(*(byte *)((int)this + 0xae) >> 4));
  FUN_1026b280(param_1,(uint *)"DXLevel",DAT_105f9f90[0xc]);
  FUN_1026b280(param_1,(uint *)"DisableBumpmapping",DAT_105f9f90[0xd] >> 8 & 1);
  FUN_1026b280(param_1,(uint *)"DisableSelectionColor",(uint)(*(char *)((int)this + 0x29c) == '\0'))
  FUN_1026b280(param_1,(uint *)"DisableSpecular",DAT_105f9f90[0xd] >> 7 & 1);
  FUN_1026b280(param_1,(uint *)"EnableParallaxMapping",DAT_105f9f90[0xd] >> 9 & 1);
  FUN_1026b280(param_1,(uint *)"FlashlightDepthTexture",(uint)(iVar3 != 0));
  FUN_1026b280(param_1,(uint *)"Height",uVar1);
  FUN_1026b280(param_1,(uint *)"MotionBlur",(uint)(*(char *)((int)DAT_105f9f90 + 0x5d) != '\0'));
  FUN_1026b280(param_1,(uint *)"NoWaitForVSync",DAT_105f9f90[0xd] >> 3 & 1);
  FUN_1026b280(param_1,(uint *)"NumericInputOnly",(uint)(*(char *)((int)this + 0x2aa) != '\0'));
  FUN_1026b280(param_1,(uint *)"PinCorner",*(byte *)((int)this + 0xae) & 0xf);
  FUN_1026b280(param_1,(uint *)"RenderToTextureShadows",(uint)(iVar3 != 0));
  FUN_1026b280(param_1,(uint *)"RoundedCorners",(uint)*(byte *)((int)this + 0x150));
  FUN_1026b280(param_1,(uint *)"ShadowDepthTexture",(uint)(*(char *)(DAT_105f9f90 + 0x17) != '\0'));
  FUN_1026b280(param_1,(uint *)"SkipMipLevels",DAT_105f9f90[0xb]);
  FUN_1026b280(param_1,(uint *)"SubTabPosition",*(uint *)((int)this + 700));
  FUN_1026b280(param_1,(uint *)"TabPosition",uVar1);
  FUN_1026b280(param_1,(uint *)"TripleBuffered",(uint)(*(char *)((int)DAT_105f9f90 + 0x21) != '\0'))
  FUN_1026b280(param_1,(uint *)"Width",uVar1);
  FUN_1026b280(param_1,(uint *)"Windowed",*(byte *)(DAT_105f9f90 + 0xd) & 1);
  FUN_1026b280(param_1,(uint *)"ZPrefill",DAT_105f9f90[0xd] >> 10 & 1);
  FUN_1026b280(param_1,(uint *)"allowMouseWheel",(uint)(*(char *)((int)this + 0x234) != '\0'));
  FUN_1026b280(param_1,(uint *)"auto_shrink_contents",(uint)(*(char *)((int)this + 0x246) != '\0'));
  FUN_1026b280(param_1,(uint *)"auto_tall_tocontents",(uint)(*(char *)((int)this + 0x243) != '\0'));
  FUN_1026b280(param_1,(uint *)"auto_wide_minimum",*(uint *)((int)this + 0x24c));
  FUN_1026b280(param_1,(uint *)"auto_wide_tocontents",(uint)(*(char *)((int)this + 0x241) != '\0'));
  FUN_1026b280(param_1,(uint *)"autocolor_enable",(uint)(*(char *)((int)this + 0x249) != '\0'));
  FUN_1026b280(param_1,(uint *)"brighttext",(uint)(*(int *)((int)this + 0x22c) == 2));
  FUN_1026b280(param_1,(uint *)"catchEnter",(uint)*(byte *)((int)this + 0x28d));
  FUN_1026b280(param_1,(uint *)"centerwrap",(uint)(*(char *)((int)this + 0x23f) != '\0'));
  FUN_1026b280(param_1,(uint *)"cpu_speed",(int)(in_XMM0_Qa * 1e-06));
  FUN_1026b280(param_1,(uint *)"default",*(ushort *)((int)this + 0x25c) >> 6 & 1);
  FUN_1026b280(param_1,(uint *)"deviceID",local_24);
  FUN_1026b280(param_1,(uint *)"directory",(uint)(*(char *)((int)this + 0x118) != '\0'));
  FUN_1026b280(param_1,(uint *)"draw_corner_height",*(uint *)((int)this + 0x1b0));
  FUN_1026b280(param_1,(uint *)"draw_corner_width",*(uint *)((int)this + 0x1b4));
  FUN_1026b280(param_1,(uint *)"dulltext",(uint)(*(int *)((int)this + 0x22c) == 1));
  FUN_1026b280(param_1,(uint *)"editable",(uint)(cVar1 != '\0'));
  FUN_1026b280(param_1,(uint *)"enabled",(uint)(cVar2 != '\0'));
  FUN_1026b280(param_1,(uint *)"filtered",(uint)*(byte *)((int)this + 0x1a9));
  FUN_1026b280(param_1,(uint *)"height",DAT_105f9f90[1]);
  FUN_1026b280(param_1,(uint *)"image",(*(char *)((int)this + 0x118) != '\0') + 1);
  FUN_1026b280(param_1,(uint *)"imageSelected",(uint)(*(char *)((int)this + 0x118) != '\0') * 2 + 1)
  FUN_1026b280(param_1,(uint *)"lastBarWidth",*(uint *)((int)this + 500));
  FUN_1026b280(param_1,(uint *)"maxchars",*(uint *)((int)this + 0x214));
  FUN_1026b280(param_1,(uint *)"maxchars",uVar2);
  FUN_1026b280(param_1,(uint *)"multiline",(uint)*(byte *)((int)this + 0x261));
  FUN_1026b280(param_1,(uint *)"noellipses",(uint)(*(char *)((int)this + 0x250) != '\0'));
  FUN_1026b280(param_1,(uint *)"noshortcutsyntax",(uint)(*(char *)((int)this + 0x245) != '\0'));
  FUN_1026b280(param_1,(uint *)"overrideChildPanelWidth",
  FUN_1026b280(param_1,(uint *)"pin_corner_to_sibling",(uint)*(byte *)((int)this + 0xbd));
  FUN_1026b280(param_1,(uint *)"pin_to_sibling_corner",(uint)*(byte *)((int)this + 0xbc));
  FUN_1026b280(param_1,(uint *)"preserveAspectRatio",(uint)*(byte *)((int)this + 0x1a8));
  FUN_1026b280(param_1,(uint *)"scaleImage",(uint)(*(char *)((int)this + 0x1ec) != '\0'));
  FUN_1026b280(param_1,(uint *)"scrollbar",(uint)(cVar1 != '\0'));
  FUN_1026b280(param_1,(uint *)"settitlebarvisible",*(byte *)((int)this + 0x25c) >> 5 & 1);
  FUN_1026b280(param_1,(uint *)"showScrollBar",(uint)(*(char *)((int)this + 0x234) != '\0'));
  FUN_1026b280(param_1,(uint *)"src_corner_height",*(uint *)((int)this + 0x1a8));
  FUN_1026b280(param_1,(uint *)"src_corner_width",*(uint *)((int)this + 0x1ac));
  FUN_1026b280(param_1,(uint *)"tabPosition",uVar6);
  FUN_1026b280(param_1,(uint *)"textHidden",(uint)(*(char *)((int)this + 0x231) != '\0'));
  FUN_1026b280(param_1,(uint *)"textinsetx",uVar4);
  FUN_1026b280(param_1,(uint *)"textinsety",*(uint *)((int)this + 0x218));
  FUN_1026b280(param_1,(uint *)"tileHorizontalOverride",*(uint *)((int)this + 0x208));
  FUN_1026b280(param_1,(uint *)"tileHorizontally",(uint)(*(char *)((int)this + 0x1ee) != '\0'));
  FUN_1026b280(param_1,(uint *)"tileImage",(uint)(*(char *)((int)this + 0x1ed) != '\0'));
  FUN_1026b280(param_1,(uint *)"tileVerticalOverride",*(uint *)((int)this + 0x20c));
  FUN_1026b280(param_1,(uint *)"tileVertically",(uint)(*(char *)((int)this + 0x1ef) != '\0'));
  FUN_1026b280(param_1,(uint *)"unicode",(uint)(*(char *)((int)this + 0x2ab) != '\0'));
  FUN_1026b280(param_1,(uint *)"use_proportional_insets",
  FUN_1026b280(param_1,(uint *)"vendorID",local_28);
  FUN_1026b280(param_1,(uint *)"visible",(uint)(cVar2 != '\0'));
  FUN_1026b280(param_1,(uint *)"visible",0xffffffff);
  FUN_1026b280(param_1,(uint *)"width",*DAT_105f9f90);
  FUN_1026b280(param_2,(uint *)"frames",local_114);
  FUN_1026b280(param_2,(uint *)"ticks",local_118);
  FUN_1026b280(puVar3,(uint *)"$alphatest",0);
  FUN_1026b280(puVar3,(uint *)"$alphatest",1);
  FUN_1026b280(puVar3,(uint *)"$color_depth",0);
  FUN_1026b280(puVar3,(uint *)"$color_depth",1);
  FUN_1026b280(puVar3,(uint *)"$no_fullbright",1);
  FUN_1026b280(puVar3,(uint *)"$nocull",0);
  FUN_1026b280(puVar3,(uint *)"$nocull",1);
  FUN_1026b280(this_00,(uint *)"VPanel",uVar2);
  FUN_1026b280(this_00,(uint *)"build",uVar1);
  FUN_1026b280(this_00,(uint *)"bysave",0);
  FUN_1026b280(this_00,(uint *)"state",uVar3 & 0xff);
  FUN_1026b280(this_01,(uint *)"$nocull",1);
  FUN_1026b280(this_01,(uint *)"$nodebug",1);
  FUN_1026b280(this_01,(uint *)"splitscreenplayer",0);
  FUN_1026b2f0(param_1,(uint *)"iconImage",0);
  FUN_1026b2f0(param_1,(uint *)"propertypage",*(uint *)((int)this + 0x2c0));
  FUN_1026b2f0(param_1,(uint *)"propertysheet",*(uint *)((int)this + 700));
  FUN_1026b2f0(this_00,(uint *)"BuildGroupPtr",param_1);
  FUN_1026b2f0(this_00,(uint *)"PanelPtr",uVar2);
  FUN_1026b2f0(this_00,(uint *)"panel",(uint)param_1);
  FUN_1026b2f0(this_01,(uint *)"PanelPtr",uVar3);
  FUN_1026b310(*(void **)(*(int *)((int)this + 0x224) + 0x168),(uint *)"cl_interp_ratio","1.0");
  FUN_1026b310(*(void **)(*(int *)((int)this + 0x224) + 0x168),(uint *)"cl_predict","0");
  FUN_1026b310(*(void **)(*(int *)((int)this + 0x224) + 0x168),(uint *)"cl_team","1");
  FUN_1026b310(*(void **)(*(int *)((int)this + 0x224) + 0x168),(uint *)"cl_updaterate","22");
  FUN_1026b310(*(void **)(*(int *)((int)this + 0x224) + 0x168),(uint *)&DAT_10350ea8,"80000");
  FUN_1026b310(*param_2,(uint *)"title","Tactical Intervention");
  FUN_1026b310(DAT_10684924,(uint *)&DAT_10365f70,"load");
  FUN_1026b310(DAT_10684924,(uint *)&DAT_10365f84,"reserved");
  FUN_1026b310(param_1,(uint *)"ControlName",pcVar3);
  FUN_1026b310(param_1,(uint *)"Format",pcVar8);
  FUN_1026b310(param_1,(uint *)"TexGroup",pcVar8);
  FUN_1026b310(param_1,(uint *)"attributes",pcVar2);
  FUN_1026b310(param_1,(uint *)"created",pcVar2);
  FUN_1026b310(param_1,(uint *)"fieldName",pcVar3);
  FUN_1026b310(param_1,(uint *)"imageAlignment",pcVar1);
  FUN_1026b310(param_1,(uint *)"labelText",pcVar2);
  FUN_1026b310(param_1,(uint *)"modified",pcVar2);
  FUN_1026b310(param_1,(uint *)"pin_to_sibling",*(char **)((int)this + 0xb8));
  FUN_1026b310(param_1,(uint *)"tabname",local_104);
  FUN_1026b310(param_1,(uint *)"textAlignment",pcVar2);
  FUN_1026b310(param_2,(uint *)"player",local_428);
  FUN_1026b310(param_2,*param_3,"");
  FUN_1026b310(puVar2,(uint *)&DAT_10330898,"Tactical Intervention");
  FUN_1026b310(pvVar11,(uint *)"frame",(char *)((int)&local_894 + 1));
  FUN_1026b310(pvVar11,(uint *)"group",pcVar3);
  FUN_1026b310(this_01,(uint *)"$basetexture",local_204);
  FUN_1026b310(this_01,(uint *)"filter",param_1);
  FUN_1026b310(this_01,(uint *)"filterinfo",param_4);
  FUN_1026b310(this_01,(uint *)"map/mapname",param_1);
  FUN_1026b310(this_01,(uint *)"operation",param_1);
  FUN_1026b380(puVar2,"tacint");
  FUN_1026b380(this,"mapkit");
  FUN_1026b380(this_00,"tacint");
  FUN_1026b3e0(param_1,(uint *)"createdint",*(undefined4 *)((int)this + 0x20),
  FUN_1026b3e0(param_1,(uint *)"modifiedint",*(undefined4 *)((int)this + 0x48),
  FUN_1026b3e0(this_00,(uint *)"elapsed",iVar4,iVar4 >> 0x1f);
  FUN_1026bf90(&DAT_106ef510,0x5c,"\"",0xb,(int)&DAT_1041bd08);
  FUN_1026bf90(&DAT_106eff30,0x7f,"\"",1,(int)&DAT_1041bd60);
  FUN_1026d290(&local_c0,(byte *)"Console:\n\n");
  FUN_1026d290(local_38,(byte *)"unbindall\n");
  FUN_1026d290(local_50,(byte *)"BuildNumber:  %s\n");
  FUN_1026d290(local_50,(byte *)"CPU:  %i\n");
  FUN_1026d290(local_50,(byte *)"DXLevel:  %d\n");
  FUN_1026d290(local_50,(byte *)"Description:  %s\n\n");
  FUN_1026d290(local_50,(byte *)"DriverInfo:  %s\n");
  FUN_1026d290(local_50,(byte *)"Exe:  %s\n");
  FUN_1026d290(local_50,(byte *)"GameDirectory:  %s\n");
  FUN_1026d290(local_50,(byte *)"Level:  %s\n");
  FUN_1026d290(local_50,(byte *)"Misc:  %s\n");
  FUN_1026d290(local_50,(byte *)"OSVersion:  %s\n");
  FUN_1026d290(local_50,(byte *)"Orientation:  %s\n");
  FUN_1026d290(local_50,(byte *)"Position:  %s\n");
  FUN_1026d290(local_50,(byte *)"Processor:  %s\n");
  FUN_1026d290(local_50,(byte *)"Ram:  %i\n");
  FUN_1026d290(local_50,(byte *)"Title:  %s\n");
  FUN_1026d290(local_90,(byte *)"gamedir:  %s\n");
  FUN_1026d290(param_1,(byte *)"%s encoding %s %d format %s %d %s\n");
  FUN_1026d290(param_1,(byte *)"\"%s\" \"");
  FUN_1026d290(param_1,(byte *)"demoactions\n");
  FUN_1026d5a0(local_40,(uint *)"TacticalInterventionQuery");
  FUN_1026d5a0(param_1,(uint *)"\"id\" \"elementid\" ");
  FUN_1026db50(&DAT_105f97b0,0xec,100,2,"CModelRender::ModelInstanceLightingState_t pool",0);
  FUN_1026db50(&DAT_1063c040,0x40,0x40,0x40,"CFrameSnapshot pool",0);
  FUN_1026db50(&DAT_10665cb4,0x80,0x2000,2,"pvsinfopool",0x80);
  FUN_1026db50(&DAT_106a5214,0x808,2,2,"loopback_t pool",0);
  FUN_1026db50(param_1 + 8,0x154,0x400,1,"CModelLoader::m_ModelPool",0);
  FUN_1026db50(param_1 + 9,0x20,0x20,1,"CPanelMessageMapDictionary::m_PanelMessageMapPool",0);
  FUN_1026db50(param_1 + 9,0x48,0x20,1,"CPanelKeyBindingMapDictionary::m_PanelKeyBindingMapPool",0);
  FUN_1026e000(this,(byte *)"CUtlMemoryStack",0x3bffc4,0xf000,0,4);
  FUN_1026e1c0(this,(byte *)"CSpatialPartition::m_aHandles");
  FUN_1026e280((void *)((int)&param_1 + 2),(undefined4 *)"group");
  FUN_1026eb40(local_14,"client_mapkit.dll");
  FUN_1026ebe0(&DAT_106ac7c4,"1.0.1.0");
  FUN_1026ebe0(&DAT_106ac830,"tacint");
  FUN_1026ebe0((void *)((int)this + 0x54),"");
  FUN_1026ebe0(param_1 + 0x1b4,"reslists");
  FUN_1026ebe0(param_1 + 0x65,"");
  FUN_1026ebe0(param_1 + 0x69,"");
  FUN_1026ebe0(param_1 + 4,"");
  FUN_1026ebe0(param_1,"");
  FUN_1026ed50(&local_30,"\\bugconsole.txt");
  FUN_1026ed50(local_14," ");
  FUN_1026ed50(local_1c,"\\bug.txt");
  FUN_1026ee20(local_14,(byte *)"%d(%f):  %s");
  FUN_102705c0(&local_104," ,.({");
  FUN_102705c0(&local_204,"., ");
  FUN_102705c0(&local_20c,"vpset)");
  FUN_102705c0((uint *)&DAT_1063b5a8," \r\n\t");
  FUN_102705c0((uint *)&DAT_10675308,"{}()\'");
  FUN_102705c0((uint *)&DAT_10675408,"{}()\':");
  FUN_102705c0((uint *)((int)this + 0x1a8),"aeiou");
  FUN_102705c0(local_10c,"()");
  FUN_102705c0(local_10c,"\n\r\t ");
  FUN_102705c0(local_114," ");
  FUN_10270a90(&local_20,"CNetChan_TransmitBits->send",auStack96276,0x17710,-1);
  FUN_10270a90(local_1c,"CHLTVDemo::RecordFrame",auStack96060,96000,-1);
  FUN_10270a90(local_1c,"CHLTVDemoRecorder::WriteServerInfo",auStack97808,96000,-1);
  FUN_10270a90(local_1c,"outAcknHeader",local_3c,0x20,-1);
  FUN_10270a90(local_1c,"outDataHeader",local_3c,0x20,-1);
  FUN_10270a90(local_20,"CBaseClient::SendSnapshot",iVar5,(-(uint)(iVar4 != 0) & 160000) + 160000,
  FUN_10270a90(local_20,"CHLTVDemo::WriteSignonData",auStack96232,96000,-1);
  FUN_10270a90(local_20,"PlaybackTempEntity",local_e0,0xc0,-1);
  FUN_10270a90(local_20,"UncompressPackedEntity3",piVar2 + 3,0x4000,-1);
  FUN_10270a90(local_24,"CHLTVClient::SendSnapshot",auStack96068,96000,-1);
  FUN_10270a90(local_24,"CompressPackedEntity",&DAT_106667c8,0x4000,-1);
  FUN_10270a90(local_28,"SV_SendServerinfo->msg",uVar3,96000,-1);
  FUN_10270a90(local_2c,"HLTV_ReadEnterPVS2",local_8050,0x4000,-1);
  FUN_10270a90(local_38,"SV_PackEntity->writeBuf",local_8138,0x4000,-1);
  FUN_10270a90(local_54,"HLTV_ReadEnterPVS2",local_4054,0x4000,-1);
  FUN_10270a90(param_1 + 0x137,"SVC_Info",param_1 + 0xb,0x4b0,-1);
  FUN_10270a90(param_1 + 0x26a,"SVC_Rules",param_1 + 0x13e,0x4b0,-1);
  FUN_10270a90(param_1 + 0x39d,"SVC_Players",param_1 + 0x271,0x4b0,-1);
  FUN_10270b20((void *)((int)this + 0x24c),"m_FullSendTables");
  FUN_10270b20((void *)((int)this + 0xe0),"m_Signon");
  FUN_10270b20((void *)(param_1 + 0x854),"s_ClientMsgData.userMsg.m_DataOut");
  FUN_10270b20((void *)(param_1 + 0x95c),"s_MsgData.entityMsg.m_DataOut");
  FUN_10270b20((void *)(param_1 + 0x9b0),"s_MsgData.userMsg.m_DataOut");
  FUN_10270b20(local_34,"DemoFileWriteSplitScreenPlayers");
  FUN_10270b20(local_54,"DemoFileWriteBSPDecals");
  FUN_10270b20(param_1 + 0x11,"netchan_t::unreliabledata");
  FUN_10270b20(param_1 + 0x194,"DemoHeaderWriteBuffer");
  FUN_10270b20(param_1 + 0x38,"m_Signon");
  FUN_10270b20(param_1 + 8,"netchan_t::reliabledata");
  FUN_10271920(local_1c,"");
  FUN_1027ac10("materialsrc/correction",local_108,0x104);
  FUN_1027fb80((void *)((int)this + 0x1a8),"vgui/white","Other textures",1);
  FUN_10281690(this,0,"CVProfGraphPanel",0);
  FUN_10281690(this,0,"DragDropHelper",0);
  FUN_10281690(this,param_1,"FileOpenStateMachine",0);
  FUN_10281690(this,param_1,"SubtitlePanel",0);
  FUN_10281690(this,param_1,"TreeNode",0);
  FUN_10281690(this,param_1,"TreeNodeDropPanel",0);
  FUN_10286860((byte *)"AdjustTeamScore: Team: %s [%i]\n");
  FUN_10286860((byte *)"CalcPlayerRoundStats\n");
  FUN_10286860((byte *)"CalcTeamPlayPoints\n");
  FUN_10286860((byte *)"CheckLevelInitialized\n");
  FUN_10286860((byte *)"ClearAllScores: [%s]\n");
  FUN_10286860((byte *)"ClientConnected\n");
  FUN_10286860((byte *)"ClientDisconnected");
  FUN_10286860((byte *)"DetermineStageType\n");
  FUN_10286860((byte *)"EndPlanning\n");
  FUN_10286860((byte *)"GameType Changed To: %s (%i)\n");
  FUN_10286860((byte *)"RandomizePlayerSquads\n");
  FUN_10286860((byte *)"RoundClearScores: %s\n");
  FUN_10286860((byte *)"Score_TeamRoundLoss: %s\n");
  FUN_10286860((byte *)"ShowWinPanel(%s)\n");
  FUN_10286860((byte *)"SpawnAmmoCache\n");
  FUN_102868b0((int)param_1,"player_securecase",pcVar2,0);
  FUN_10290a70((int *)"AnimatingImagePanel");
  FUN_10290a70((int *)"BaseInputDialog");
  FUN_10290a70((int *)"BuildModeDialog");
  FUN_10290a70((int *)"Button");
  FUN_10290a70((int *)"CAreaPortalsUIPanel");
  FUN_10290a70((int *)"CBaseActionEditDialog");
  FUN_10290a70((int *)"CBaseActionPlaySoundStartDialog");
  FUN_10290a70((int *)"CBugUIPanel");
  FUN_10290a70((int *)"CBuildModeNavCombo");
  FUN_10290a70((int *)"CColorBalanceUIPanel");
  FUN_10290a70((int *)"CColorCorrectionUIChildPanel");
  FUN_10290a70((int *)"CColorCorrectionUIPanel");
  FUN_10290a70((int *)"CColorCurvesEditPanel");
  FUN_10290a70((int *)"CColorCurvesUIPanel");
  FUN_10290a70((int *)"CColorHistogramPanel");
  FUN_10290a70((int *)"CColorLevelsUIPanel");
  FUN_10290a70((int *)"CColorLookupUIPanel");
  FUN_10290a70((int *)"CColorOperationListPanel");
  FUN_10290a70((int *)"CColorSlider");
  FUN_10290a70((int *)"CCurveEditorPanel");
  FUN_10290a70((int *)"CDemoEditorPanel");
  FUN_10290a70((int *)"CDemoSmootherPanel");
  FUN_10290a70((int *)"CDemoUIPanel");
  FUN_10290a70((int *)"CDemoUIPanel2");
  FUN_10290a70((int *)"CDragDropHelperPanel");
  FUN_10290a70((int *)"CDrawTreeFrame");
  FUN_10290a70((int *)"CFogUIPanel");
  FUN_10290a70((int *)"CFullScreenSelectionPanel");
  FUN_10290a70((int *)"CLookupViewPanel");
  FUN_10290a70((int *)"CLookupViewWindow");
  FUN_10290a70((int *)"CNewOperationDialog");
  FUN_10290a70((int *)"COcclusionUIPanel");
  FUN_10290a70((int *)"COperationFileListFrame");
  FUN_10290a70((int *)"COperationListPanel");
  FUN_10290a70((int *)"CPerfUIChildPanel");
  FUN_10290a70((int *)"CPerfUIPanel");
  FUN_10290a70((int *)"CPerforceFileListFrame");
  FUN_10290a70((int *)"CPrecisionSlider");
  FUN_10290a70((int *)"CProceduralTexturePanel");
  FUN_10290a70((int *)"CProfileHierarchyPanel");
  FUN_10290a70((int *)"CProfileTree");
  FUN_10290a70((int *)"CPropFadeUIPanel");
  FUN_10290a70((int *)"CRenderTextureEditor");
  FUN_10290a70((int *)"CRenderTexturesListViewPanel");
  FUN_10290a70((int *)"CSaveDocumentQuery");
  FUN_10290a70((int *)"CSelectedHSVUIPanel");
  FUN_10290a70((int *)"CSkyUIPanel");
  FUN_10290a70((int *)"CSmallTextEntry");
  FUN_10290a70((int *)"CTextureListPanel");
  FUN_10290a70((int *)"CTreeViewListControl");
  FUN_10290a70((int *)"CUncorrectedImagePanel");
  FUN_10290a70((int *)"CVProfLabel");
  FUN_10290a70((int *)"CVProfPanel");
  FUN_10290a70((int *)"CVmtTextEntry");
  FUN_10290a70((int *)"CheckButton");
  FUN_10290a70((int *)"CircularProgressBar");
  FUN_10290a70((int *)"ClickPanel");
  FUN_10290a70((int *)"ComboBox");
  FUN_10290a70((int *)"ContextLabel");
  FUN_10290a70((int *)"ContinuousProgressBar");
  FUN_10290a70((int *)"CountdownLabel");
  FUN_10290a70((int *)"CreateDirectoryDialog");
  FUN_10290a70((int *)"CvarToggleCheckButton");
  FUN_10290a70((int *)"DirectorySelectDialog");
  FUN_10290a70((int *)"Divider");
  FUN_10290a70((int *)"EditablePanel");
  FUN_10290a70((int *)"ExpandButton");
  FUN_10290a70((int *)"FileNameComboBox");
  FUN_10290a70((int *)"FileOpenDialog");
  FUN_10290a70((int *)"FileOpenStateMachine");
  FUN_10290a70((int *)"Frame");
  FUN_10290a70((int *)"FrameSystemButton");
  FUN_10290a70((int *)"GraphPanel");
  FUN_10290a70((int *)"ImagePanel");
  FUN_10290a70((int *)"ImageProgressBar");
  FUN_10290a70((int *)"InputDialog");
  FUN_10290a70((int *)"ListPanel");
  FUN_10290a70((int *)"ListViewItem");
  FUN_10290a70((int *)"ListViewPanel");
  FUN_10290a70((int *)"MenuBar");
  FUN_10290a70((int *)"MenuButton");
  FUN_10290a70((int *)"MenuItem");
  FUN_10290a70((int *)"MenuSeparator");
  FUN_10290a70((int *)"MessageBox");
  FUN_10290a70((int *)"MessagingPanel");
  FUN_10290a70((int *)"PageTab");
  FUN_10290a70((int *)"Panel");
  FUN_10290a70((int *)"PanelListPanel");
  FUN_10290a70((int *)"PercentageCroppedImageLabel");
  FUN_10290a70((int *)"ProgressBar");
  FUN_10290a70((int *)"PropertyDialog");
  FUN_10290a70((int *)"PropertyPage");
  FUN_10290a70((int *)"PropertySheet");
  FUN_10290a70((int *)"RadioButton");
  FUN_10290a70((int *)"RichText");
  FUN_10290a70((int *)"RichTextInterior");
  FUN_10290a70((int *)"ScalableImagePanel");
  FUN_10290a70((int *)"ScrollBar");
  FUN_10290a70((int *)"ScrollBarSlider");
  FUN_10290a70((int *)"Slider");
  FUN_10290a70((int *)"Splitter");
  FUN_10290a70((int *)"SplitterChildPanel");
  FUN_10290a70((int *)"SplitterHandle");
  FUN_10290a70((int *)"TextEntry");
  FUN_10290a70((int *)"TileViewPanelEx");
  FUN_10290a70((int *)"ToggleButton");
  FUN_10290a70((int *)"TreeNode");
  FUN_10290a70((int *)"TreeNodeDropPanel");
  FUN_10290a70((int *)"TreeNodeText");
  FUN_10290a70((int *)"TreeView");
  FUN_10290a70((int *)"TxViewPanel");
  FUN_10290a70((int *)"URLLabel");
  FUN_10290ab0(&DAT_106f1e98,(int *)"AnimationController");
  FUN_10293ae0(this,param_1,"ColorOperationListPanel",0);
  FUN_10293dd0("ACT_BARK1",0x327);
  FUN_10293dd0("ACT_BARK2",0x328);
  FUN_10293dd0("ACT_BASH_SHIELD",0x1eb);
  FUN_10293dd0("ACT_BITE1",800);
  FUN_10293dd0("ACT_BITE2",0x321);
  FUN_10293dd0("ACT_BLINDED_OVERLAY_LONG",0x2ab);
  FUN_10293dd0("ACT_BLINDED_OVERLAY_MEDIUM",0x2aa);
  FUN_10293dd0("ACT_BLINDED_OVERLAY_SHORT",0x2a9);
  FUN_10293dd0("ACT_CLIMB",0x1cd);
  FUN_10293dd0("ACT_CROUCH",0x14);
  FUN_10293dd0("ACT_CROUCHIDLE",0x15);
  FUN_10293dd0("ACT_CROUCHING_DRIVER",0x30c);
  FUN_10293dd0("ACT_CROUCHING_FORKLIFT_REAR",0x312);
  FUN_10293dd0("ACT_CROUCHING_PASSENGER_MP5",0x30e);
  FUN_10293dd0("ACT_CROUCHING_PASSENGER_PISTOL",0x30d);
  FUN_10293dd0("ACT_CROUCHWALK",0x15f);
  FUN_10293dd0("ACT_CROUCHWALK2",0x160);
  FUN_10293dd0("ACT_CROUCHWALK_AUG",0xf8);
  FUN_10293dd0("ACT_CROUCHWALK_BLINDSHOOT_1HAND",0x31c);
  FUN_10293dd0("ACT_CROUCHWALK_BLINDSHOOT_2HAND",0x318);
  FUN_10293dd0("ACT_CROUCHWALK_CARRY_1HAND",0x175);
  FUN_10293dd0("ACT_CROUCHWALK_CARRY_2HAND",0x16d);
  FUN_10293dd0("ACT_CROUCHWALK_CARRY_BLOCKADE",0x171);
  FUN_10293dd0("ACT_CROUCHWALK_DSA58",0xff);
  FUN_10293dd0("ACT_CROUCHWALK_DUAL_PISTOL",0x142);
  FUN_10293dd0("ACT_CROUCHWALK_FIRE_EXTINGUISHER",0x17c);
  FUN_10293dd0("ACT_CROUCHWALK_FP6",0x106);
  FUN_10293dd0("ACT_CROUCHWALK_GRENADE",0x10c);
  FUN_10293dd0("ACT_CROUCHWALK_KNIFE",0x112);
  FUN_10293dd0("ACT_CROUCHWALK_KNIFE_DEFEND",0x118);
  FUN_10293dd0("ACT_CROUCHWALK_M14",0x11f);
  FUN_10293dd0("ACT_CROUCHWALK_MP5",0x126);
  FUN_10293dd0("ACT_CROUCHWALK_MP7",0x12d);
  FUN_10293dd0("ACT_CROUCHWALK_ONFIRE",0x183);
  FUN_10293dd0("ACT_CROUCHWALK_P90",0x134);
  FUN_10293dd0("ACT_CROUCHWALK_PISTOL",0x13b);
  FUN_10293dd0("ACT_CROUCHWALK_RPG7",0x150);
  FUN_10293dd0("ACT_CROUCHWALK_SG551",0x149);
  FUN_10293dd0("ACT_CROUCHWALK_SHIELD",0x169);
  FUN_10293dd0("ACT_CROUCHWALK_SUITCASE",0x164);
  FUN_10293dd0("ACT_CROUCHWALK_URATIO",0x157);
  FUN_10293dd0("ACT_CROUCHWALK_UZI",0x15e);
  FUN_10293dd0("ACT_CROUCH_AIM_AUG",0xf4);
  FUN_10293dd0("ACT_CROUCH_AIM_BLINDSHOOT_1HAND",0x31a);
  FUN_10293dd0("ACT_CROUCH_AIM_BLINDSHOOT_2HAND",0x316);
  FUN_10293dd0("ACT_CROUCH_AIM_CARRY_1HAND",0x172);
  FUN_10293dd0("ACT_CROUCH_AIM_CARRY_2HAND",0x16a);
  FUN_10293dd0("ACT_CROUCH_AIM_CARRY_BLOCKADE",0x16e);
  FUN_10293dd0("ACT_CROUCH_AIM_DSA58",0xfb);
  FUN_10293dd0("ACT_CROUCH_AIM_DUAL_PISTOL",0x13e);
  FUN_10293dd0("ACT_CROUCH_AIM_FIRE_EXTINGUISHER",0x179);
  FUN_10293dd0("ACT_CROUCH_AIM_FP6",0x102);
  FUN_10293dd0("ACT_CROUCH_AIM_GRENADE",0x109);
  FUN_10293dd0("ACT_CROUCH_AIM_KNIFE",0x10f);
  FUN_10293dd0("ACT_CROUCH_AIM_M14",0x11b);
  FUN_10293dd0("ACT_CROUCH_AIM_MP5",0x122);
  FUN_10293dd0("ACT_CROUCH_AIM_MP7",0x129);
  FUN_10293dd0("ACT_CROUCH_AIM_P90",0x130);
  FUN_10293dd0("ACT_CROUCH_AIM_PISTOL",0x137);
  FUN_10293dd0("ACT_CROUCH_AIM_RPG7",0x14c);
  FUN_10293dd0("ACT_CROUCH_AIM_SG551",0x145);
  FUN_10293dd0("ACT_CROUCH_AIM_SHIELD",0x166);
  FUN_10293dd0("ACT_CROUCH_AIM_SUITCASE",0x162);
  FUN_10293dd0("ACT_CROUCH_AIM_URATIO",0x153);
  FUN_10293dd0("ACT_CROUCH_AIM_UZI",0x15a);
  FUN_10293dd0("ACT_CROUCH_DEFEND_KNIFE",0x115);
  FUN_10293dd0("ACT_CROUCH_ONFIRE",0x180);
  FUN_10293dd0("ACT_DANCING1",0x347);
  FUN_10293dd0("ACT_DANCING2",0x348);
  FUN_10293dd0("ACT_DANCING3",0x349);
  FUN_10293dd0("ACT_DANCING4",0x34a);
  FUN_10293dd0("ACT_DANCING5",0x34b);
  FUN_10293dd0("ACT_DEATH_CROUCH_HEAD",0x2ac);
  FUN_10293dd0("ACT_DEATH_CROUCH_LEFTARM",0x2ad);
  FUN_10293dd0("ACT_DEATH_CROUCH_LEFTLEG",0x2ae);
  FUN_10293dd0("ACT_DEATH_CROUCH_REAR_TORSO",0x2b1);
  FUN_10293dd0("ACT_DEATH_CROUCH_TORSO",0x2af);
  FUN_10293dd0("ACT_DEATH_CROUCH_TORSO2",0x2b0);
  FUN_10293dd0("ACT_DEATH_ONFIRE",0x2dd);
  FUN_10293dd0("ACT_DEATH_ONFIRE2",0x2de);
  FUN_10293dd0("ACT_DEATH_RUNNING_HEAD",0x2d2);
  FUN_10293dd0("ACT_DEATH_RUNNING_TORSO",0x2ce);
  FUN_10293dd0("ACT_DEATH_RUNNING_TORSO2",0x2f6);
  FUN_10293dd0("ACT_DEATH_RUNNING_UPPERTORSO",0x2cf);
  FUN_10293dd0("ACT_DEATH_RUNNING_UPPERTORSO2",0x2d0);
  FUN_10293dd0("ACT_DEATH_RUNNING_UPPERTORSO3",0x2d1);
  FUN_10293dd0("ACT_DEATH_RUNNING_UPPERTORSO4",0x2f7);
  FUN_10293dd0("ACT_DEATH_STANDING_GROIN",0x2b2);
  FUN_10293dd0("ACT_DEATH_STANDING_HEAD",0x2b3);
  FUN_10293dd0("ACT_DEATH_STANDING_HEAD2",0x2b4);
  FUN_10293dd0("ACT_DEATH_STANDING_HEAD3",0x2b5);
  FUN_10293dd0("ACT_DEATH_STANDING_HEAD4",0x2df);
  FUN_10293dd0("ACT_DEATH_STANDING_HEAD5",0x2e0);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFTARM",0x2b6);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFTARM2",0x2b7);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFTLEG",0x2b8);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFTLEG2",0x2b9);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFT_LOWERTORSO",0x2d4);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFT_LOWERTORSO2",0x2ee);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFT_LOWERTORSO3",0x2ef);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFT_UPPERTORSO",0x2d3);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFT_UPPERTORSO2",0x2ec);
  FUN_10293dd0("ACT_DEATH_STANDING_LEFT_UPPERTORSO3",0x2ed);
  FUN_10293dd0("ACT_DEATH_STANDING_LEG_FRONT",0x2f3);
  FUN_10293dd0("ACT_DEATH_STANDING_LEG_FRONT2",0x2f4);
  FUN_10293dd0("ACT_DEATH_STANDING_LEG_REAR",0x2f5);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO",0x2ba);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO10",0x2e3);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO2",699);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO3",700);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO4",0x2bd);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO5",0x2d7);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO6",0x2d8);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO7",0x2d9);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO8",0x2e1);
  FUN_10293dd0("ACT_DEATH_STANDING_LOWERTORSO9",0x2e2);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO",0x2be);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO10",0x2e7);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO2",0x2bf);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO3",0x2c0);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO4",0x2da);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO5",0x2db);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO6",0x2dc);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO7",0x2e4);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO8",0x2e5);
  FUN_10293dd0("ACT_DEATH_STANDING_REAR_TORSO9",0x2e6);
  FUN_10293dd0("ACT_DEATH_STANDING_RIGHTARM",0x2c1);
  FUN_10293dd0("ACT_DEATH_STANDING_RIGHTARM2",0x2c2);
  FUN_10293dd0("ACT_DEATH_STANDING_RIGHTLEG",0x2c3);
  FUN_10293dd0("ACT_DEATH_STANDING_RIGHTLEG2",0x2c4);
  FUN_10293dd0("ACT_DEATH_STANDING_RIGHT_LOWERTORSO",0x2d6);
  FUN_10293dd0("ACT_DEATH_STANDING_RIGHT_LOWERTORSO2",0x2f1);
  FUN_10293dd0("ACT_DEATH_STANDING_RIGHT_LOWERTORSO3",0x2f2);
  FUN_10293dd0("ACT_DEATH_STANDING_RIGHT_UPPERTORSO",0x2d5);
  FUN_10293dd0("ACT_DEATH_STANDING_RIGHT_UPPERTORSO2",0x2f0);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO",0x2c5);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO10",0x2e8);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO11",0x2e9);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO12",0x2ea);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO13",0x2eb);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO2",0x2c6);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO3",0x2c7);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO4",0x2c8);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO5",0x2c9);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO6",0x2ca);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO7",0x2cb);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO8",0x2cc);
  FUN_10293dd0("ACT_DEATH_STANDING_UPPERTORSO9",0x2cd);
  FUN_10293dd0("ACT_DEATH_VEHICLE_LEAN_LEFT",0x2fd);
  FUN_10293dd0("ACT_DEATH_VEHICLE_LEAN_LEFT2",0x2fe);
  FUN_10293dd0("ACT_DEATH_VEHICLE_LEAN_RIGHT",0x2ff);
  FUN_10293dd0("ACT_DEATH_VEHICLE_LEAN_RIGHT2",0x300);
  FUN_10293dd0("ACT_DEATH_VEHICLE_SITTING",0x2f8);
  FUN_10293dd0("ACT_DEATH_VEHICLE_SITTING2",0x2f9);
  FUN_10293dd0("ACT_DEATH_VEHICLE_SITTING3",0x2fa);
  FUN_10293dd0("ACT_DEATH_VEHICLE_SITTING4",0x2fb);
  FUN_10293dd0("ACT_DEATH_VEHICLE_SITTING5",0x2fc);
  FUN_10293dd0("ACT_DEPLOY_AUG",0x1b9);
  FUN_10293dd0("ACT_DEPLOY_DSA58",0x1b8);
  FUN_10293dd0("ACT_DEPLOY_DUAL_PISTOL",0x1c4);
  FUN_10293dd0("ACT_DEPLOY_FP6",0x1ba);
  FUN_10293dd0("ACT_DEPLOY_GRENADE",0x1cc);
  FUN_10293dd0("ACT_DEPLOY_KNIFE",0x1cb);
  FUN_10293dd0("ACT_DEPLOY_M14",0x1bb);
  FUN_10293dd0("ACT_DEPLOY_MG4",0x1bd);
  FUN_10293dd0("ACT_DEPLOY_MP5",0x1bc);
  FUN_10293dd0("ACT_DEPLOY_MP7",0x1be);
  FUN_10293dd0("ACT_DEPLOY_P90",0x1bf);
  FUN_10293dd0("ACT_DEPLOY_PISTOL",0x1c1);
  FUN_10293dd0("ACT_DEPLOY_PISTOL_BACK",0x1c3);
  FUN_10293dd0("ACT_DEPLOY_PISTOL_TORSO",0x1c2);
  FUN_10293dd0("ACT_DEPLOY_REVOLVER",0x1c5);
  FUN_10293dd0("ACT_DEPLOY_REVOLVER_BACK",0x1c7);
  FUN_10293dd0("ACT_DEPLOY_REVOLVER_TORSO",0x1c6);
  FUN_10293dd0("ACT_DEPLOY_RPG7",0x1c0);
  FUN_10293dd0("ACT_DEPLOY_SG551",0x1c8);
  FUN_10293dd0("ACT_DEPLOY_URATIO",0x1c9);
  FUN_10293dd0("ACT_DEPLOY_UZI",0x1ca);
  FUN_10293dd0("ACT_DIERAGDOLL",0xf);
  FUN_10293dd0("ACT_DO_NOT_DISTURB",0x22);
  FUN_10293dd0("ACT_EXPLODEBACK_E",0x238);
  FUN_10293dd0("ACT_EXPLODEBACK_FLOAT_E",0x240);
  FUN_10293dd0("ACT_EXPLODEBACK_FLOAT_N",0x23f);
  FUN_10293dd0("ACT_EXPLODEBACK_FLOAT_S",0x241);
  FUN_10293dd0("ACT_EXPLODEBACK_FLOAT_W",0x242);
  FUN_10293dd0("ACT_EXPLODEBACK_LAND_E",0x23c);
  FUN_10293dd0("ACT_EXPLODEBACK_LAND_N",0x23b);
  FUN_10293dd0("ACT_EXPLODEBACK_LAND_S",0x23d);
  FUN_10293dd0("ACT_EXPLODEBACK_LAND_W",0x23e);
  FUN_10293dd0("ACT_EXPLODEBACK_N",0x237);
  FUN_10293dd0("ACT_EXPLODEBACK_S",0x239);
  FUN_10293dd0("ACT_EXPLODEBACK_W",0x23a);
  FUN_10293dd0("ACT_FASTROPE",0x20e);
  FUN_10293dd0("ACT_FASTROPE_CLIMB",0x20f);
  FUN_10293dd0("ACT_FASTROPE_DESCEND",0x210);
  FUN_10293dd0("ACT_FIRSTPERSON_ROLL",0x211);
  FUN_10293dd0("ACT_FLINCH_CROUCH_HEAD",0x212);
  FUN_10293dd0("ACT_FLINCH_CROUCH_HEAD2",0x213);
  FUN_10293dd0("ACT_FLINCH_CROUCH_LEFTARM",0x214);
  FUN_10293dd0("ACT_FLINCH_CROUCH_LEFTLEG",0x215);
  FUN_10293dd0("ACT_FLINCH_CROUCH_LEFT_HEAD",0x21f);
  FUN_10293dd0("ACT_FLINCH_CROUCH_LEFT_LOWERTORSO",0x21d);
  FUN_10293dd0("ACT_FLINCH_CROUCH_LEFT_UPPERTORSO",0x21e);
  FUN_10293dd0("ACT_FLINCH_CROUCH_LOWERTORSO",0x216);
  FUN_10293dd0("ACT_FLINCH_CROUCH_REAR_HEAD",0x217);
  FUN_10293dd0("ACT_FLINCH_CROUCH_REAR_HEAD2",0x218);
  FUN_10293dd0("ACT_FLINCH_CROUCH_REAR_LOWERTORSO",0x219);
  FUN_10293dd0("ACT_FLINCH_CROUCH_REAR_LOWERTORSO2",0x21a);
  FUN_10293dd0("ACT_FLINCH_CROUCH_REAR_UPPERTORSO",0x21b);
  FUN_10293dd0("ACT_FLINCH_CROUCH_REAR_UPPERTORSO2",0x21c);
  FUN_10293dd0("ACT_FLINCH_CROUCH_RIGHTARM",0x223);
  FUN_10293dd0("ACT_FLINCH_CROUCH_RIGHTLEG",0x224);
  FUN_10293dd0("ACT_FLINCH_CROUCH_RIGHT_HEAD",0x222);
  FUN_10293dd0("ACT_FLINCH_CROUCH_RIGHT_LOWERTORSO",0x220);
  FUN_10293dd0("ACT_FLINCH_CROUCH_RIGHT_UPPERTORSO",0x221);
  FUN_10293dd0("ACT_FLINCH_CROUCH_UPPERTORSO",0x225);
  FUN_10293dd0("ACT_FLINCH_CROUCH_UPPERTORSO2",0x226);
  FUN_10293dd0("ACT_FLINCH_DOG1",0x32b);
  FUN_10293dd0("ACT_FLINCH_DOG2",0x32c);
  FUN_10293dd0("ACT_FLINCH_DOG3",0x32d);
  FUN_10293dd0("ACT_FLINCH_DOG4",0x32e);
  FUN_10293dd0("ACT_FLINCH_DOG5",0x32f);
  FUN_10293dd0("ACT_FLINCH_GROIN",0x24c);
  FUN_10293dd0("ACT_FLINCH_HEAD",0x24d);
  FUN_10293dd0("ACT_FLINCH_HEAD2",0x24e);
  FUN_10293dd0("ACT_FLINCH_HEAD3",0x256);
  FUN_10293dd0("ACT_FLINCH_HOSTAGEGRAB_HEAD",0x272);
  FUN_10293dd0("ACT_FLINCH_HOSTAGEGRAB_LEFTLEG",0x26e);
  FUN_10293dd0("ACT_FLINCH_HOSTAGEGRAB_LOWERTORSO",0x273);
  FUN_10293dd0("ACT_FLINCH_HOSTAGEGRAB_LOWERTORSO2",0x274);
  FUN_10293dd0("ACT_FLINCH_HOSTAGEGRAB_REAR_LOWERTORSO",0x270);
  FUN_10293dd0("ACT_FLINCH_HOSTAGEGRAB_REAR_UPPERTORSO",0x271);
  FUN_10293dd0("ACT_FLINCH_HOSTAGEGRAB_RIGHTLEG",0x26f);
  FUN_10293dd0("ACT_FLINCH_HOSTAGEGRAB_UPPERTORSO",0x275);
  FUN_10293dd0("ACT_FLINCH_HOSTAGEGRAB_UPPERTORSO2",0x276);
  FUN_10293dd0("ACT_FLINCH_LEFTARM",0x24f);
  FUN_10293dd0("ACT_FLINCH_LEFTLEG",0x250);
  FUN_10293dd0("ACT_FLINCH_LEFTLEG2",0x251);
  FUN_10293dd0("ACT_FLINCH_LEFT_HEAD",0x262);
  FUN_10293dd0("ACT_FLINCH_LEFT_LOWERTORSO",0x25e);
  FUN_10293dd0("ACT_FLINCH_LEFT_LOWERTORSO2",0x25f);
  FUN_10293dd0("ACT_FLINCH_LEFT_UPPERTORSO",0x260);
  FUN_10293dd0("ACT_FLINCH_LEFT_UPPERTORSO2",0x261);
  FUN_10293dd0("ACT_FLINCH_LOWERTORSO",0x252);
  FUN_10293dd0("ACT_FLINCH_LOWERTORSO2",0x253);
  FUN_10293dd0("ACT_FLINCH_LOWERTORSO3",0x254);
  FUN_10293dd0("ACT_FLINCH_LOWERTORSO4",0x255);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_CAR_SITTING_BACK",0x2a0);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_CAR_SITTING_FRONT",0x29f);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_CAR_SITTING_LEFT",0x2a1);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_CAR_SITTING_RIGHT",0x2a2);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_DOG1",0x330);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_DOG2",0x331);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_DOG3",0x332);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_DOG4",0x333);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_DOG5",0x334);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_HEAD",0x27c);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_HEAD2",0x27d);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_HEAD3",0x27e);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_HEAD",0x279);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_LOWERTORSO",0x27a);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_REAR_LOWERTORSO",0x277);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_REAR_UPPERTORSO",0x278);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_UPPERTORSO",0x27b);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_LEFTARM",0x27f);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_LEFT_HEAD",0x290);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_LEFT_UPPERTORSO",0x28e);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_LEFT_UPPERTORSO2",0x28f);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_LOWERTORSO",0x280);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_LOWERTORSO2",0x281);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_MOVINGOBJECT_HEAD",0x2a7);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_MOVINGOBJECT_LEFT_TORSO",0x2a5);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_MOVINGOBJECT_LOWERTORSO",0x2a4);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_MOVINGOBJECT_RIGHT_TORSO",0x2a6);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_MOVINGOBJECT_UPPERTORSO",0x2a3);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_REAR_HEAD",0x282);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_REAR_HEAD2",0x283);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_REAR_LOWERTORSO",0x284);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_REAR_LOWERTORSO2",0x285);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_REAR_UPPERTORSO",0x286);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_REAR_UPPERTORSO2",0x287);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_RIGHTARM",0x288);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_RIGHT_HEAD",0x28d);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_RIGHT_UPPERTORSO",0x28b);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_RIGHT_UPPERTORSO2",0x28c);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SHIELD_BACK",0x299);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SHIELD_BACK2",0x29a);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SHIELD_FRONT",0x296);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SHIELD_FRONT2",0x297);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SHIELD_FRONT3",0x298);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SHIELD_LEFT",0x29b);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SHIELD_LEFT2",0x29c);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SHIELD_RIGHT",0x29d);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SHIELD_RIGHT2",0x29e);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SUITCASE_HEAD",0x291);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SUITCASE_LOWERTORSO",0x294);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SUITCASE_LOWERTORSO2",0x295);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SUITCASE_UPPERTORSO",0x292);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_SUITCASE_UPPERTORSO2",0x293);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_UPPERTORSO",0x289);
  FUN_10293dd0("ACT_FLINCH_OVERLAY_UPPERTORSO2",0x28a);
  FUN_10293dd0("ACT_FLINCH_REAR_HEAD",599);
  FUN_10293dd0("ACT_FLINCH_REAR_HEAD2",600);
  FUN_10293dd0("ACT_FLINCH_REAR_LOWERTORSO",0x259);
  FUN_10293dd0("ACT_FLINCH_REAR_LOWERTORSO2",0x25a);
  FUN_10293dd0("ACT_FLINCH_REAR_LOWERTORSO3",0x25b);
  FUN_10293dd0("ACT_FLINCH_REAR_UPPERTORSO",0x25c);
  FUN_10293dd0("ACT_FLINCH_REAR_UPPERTORSO2",0x25d);
  FUN_10293dd0("ACT_FLINCH_RIGHTARM",0x268);
  FUN_10293dd0("ACT_FLINCH_RIGHTLEG",0x269);
  FUN_10293dd0("ACT_FLINCH_RIGHTLEG2",0x26a);
  FUN_10293dd0("ACT_FLINCH_RIGHT_HEAD",0x267);
  FUN_10293dd0("ACT_FLINCH_RIGHT_LOWERTORSO",0x263);
  FUN_10293dd0("ACT_FLINCH_RIGHT_LOWERTORSO2",0x264);
  FUN_10293dd0("ACT_FLINCH_RIGHT_UPPERTORSO",0x265);
  FUN_10293dd0("ACT_FLINCH_RIGHT_UPPERTORSO2",0x266);
  FUN_10293dd0("ACT_FLINCH_SHIELD_BACK",0x246);
  FUN_10293dd0("ACT_FLINCH_SHIELD_BACK2",0x247);
  FUN_10293dd0("ACT_FLINCH_SHIELD_FRONT",0x243);
  FUN_10293dd0("ACT_FLINCH_SHIELD_FRONT2",0x244);
  FUN_10293dd0("ACT_FLINCH_SHIELD_FRONT3",0x245);
  FUN_10293dd0("ACT_FLINCH_SHIELD_LEFT",0x24a);
  FUN_10293dd0("ACT_FLINCH_SHIELD_LEFT2",0x24b);
  FUN_10293dd0("ACT_FLINCH_SHIELD_RIGHT",0x248);
  FUN_10293dd0("ACT_FLINCH_SHIELD_RIGHT2",0x249);
  FUN_10293dd0("ACT_FLINCH_UPPERTORSO",0x26b);
  FUN_10293dd0("ACT_FLINCH_UPPERTORSO2",0x26c);
  FUN_10293dd0("ACT_FLINCH_UPPERTORSO3",0x26d);
  FUN_10293dd0("ACT_FLY",0x10);
  FUN_10293dd0("ACT_FREEFALL",0x1ce);
  FUN_10293dd0("ACT_GESTURE_DOG1",0x31d);
  FUN_10293dd0("ACT_GESTURE_DOG2",0x31e);
  FUN_10293dd0("ACT_GESTURE_DOG3",799);
  FUN_10293dd0("ACT_GESTURE_NPC_CALM1",0x335);
  FUN_10293dd0("ACT_GESTURE_NPC_CALM2",0x336);
  FUN_10293dd0("ACT_GESTURE_NPC_CALM3",0x337);
  FUN_10293dd0("ACT_GESTURE_NPC_CALM4",0x338);
  FUN_10293dd0("ACT_GESTURE_NPC_CALM5",0x339);
  FUN_10293dd0("ACT_GESTURE_NPC_CRY",0x360);
  FUN_10293dd0("ACT_GESTURE_NPC_HOLDCASE_WAVE",0x363);
  FUN_10293dd0("ACT_GESTURE_NPC_LOOKAROUND",0x35e);
  FUN_10293dd0("ACT_GESTURE_NPC_LOOKAROUND2",0x35f);
  FUN_10293dd0("ACT_GESTURE_NPC_SCARED1",0x33a);
  FUN_10293dd0("ACT_GESTURE_NPC_SCARED2",0x33b);
  FUN_10293dd0("ACT_GESTURE_NPC_SCARED3",0x33c);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM1",0x34c);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM10",0x355);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM11",0x356);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM12",0x357);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM2",0x34d);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM3",0x34e);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM4",0x34f);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM5",0x350);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM6",0x351);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM7",0x352);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM8",0x353);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_CALM9",0x354);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_SCARED1",0x358);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_SCARED2",0x359);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_SCARED3",0x35a);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_STARTLED1",0x35b);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_STARTLED2",0x35c);
  FUN_10293dd0("ACT_GESTURE_NPC_SITTING_STARTLED3",0x35d);
  FUN_10293dd0("ACT_GESTURE_NPC_STARTLED1",0x33e);
  FUN_10293dd0("ACT_GESTURE_NPC_STARTLED2",0x33f);
  FUN_10293dd0("ACT_GESTURE_NPC_STARTLED3",0x340);
  FUN_10293dd0("ACT_GESTURE_NPC_VOMIT",0x33d);
  FUN_10293dd0("ACT_GESTURE_NPC_WAVEHANDS_SCARED",0x361);
  FUN_10293dd0("ACT_GESTURE_NPC_WAVEHANDS_SCARED2",0x362);
  FUN_10293dd0("ACT_GRABBEDIDLE",0x206);
  FUN_10293dd0("ACT_GRABBEDWALK",0x205);
  FUN_10293dd0("ACT_HALT_PISTOL",0x381);
  FUN_10293dd0("ACT_HALT_RIFLE",0x380);
  FUN_10293dd0("ACT_HOSTAGEGRAB_IDLE",0x201);
  FUN_10293dd0("ACT_HOSTAGEGRAB_KICKAWAY",0x203);
  FUN_10293dd0("ACT_HOSTAGEGRAB_KICKAWAY_FIRSTPERSON",0x204);
  FUN_10293dd0("ACT_HOSTAGEGRAB_RELEASETHROW",0x202);
  FUN_10293dd0("ACT_HOSTAGEGRAB_WALK",0x200);
  FUN_10293dd0("ACT_HURTIDLE",0x344);
  FUN_10293dd0("ACT_HURTWALK",0x343);
  FUN_10293dd0("ACT_IDLE",1);
  FUN_10293dd0("ACT_IDLE_AGITATED",0x1b);
  FUN_10293dd0("ACT_IDLE_ANGRY",0x18);
  FUN_10293dd0("ACT_IDLE_HURT",0x1d);
  FUN_10293dd0("ACT_IDLE_RELAXED",0x19);
  FUN_10293dd0("ACT_IDLE_STEALTH",0x1c);
  FUN_10293dd0("ACT_IDLE_STIMULATED",0x1a);
  FUN_10293dd0("ACT_JUMP",0x12);
  FUN_10293dd0("ACT_JUMP_BITE1",0x322);
  FUN_10293dd0("ACT_JUMP_BITE2",0x323);
  FUN_10293dd0("ACT_JUMP_CASE_INPLACE",0x1db);
  FUN_10293dd0("ACT_JUMP_CASE_LANDING",0x1dc);
  FUN_10293dd0("ACT_JUMP_CASE_RUNNING_EAST",0x1df);
  FUN_10293dd0("ACT_JUMP_CASE_RUNNING_NORTH",0x1dd);
  FUN_10293dd0("ACT_JUMP_CASE_RUNNING_SOUTH",0x1de);
  FUN_10293dd0("ACT_JUMP_CASE_RUNNING_WEST",0x1e0);
  FUN_10293dd0("ACT_JUMP_INPLACE",0x1e1);
  FUN_10293dd0("ACT_JUMP_LANDING",0x1e2);
  FUN_10293dd0("ACT_JUMP_PISTOL_INPLACE",0x1d5);
  FUN_10293dd0("ACT_JUMP_PISTOL_LANDING",0x1d6);
  FUN_10293dd0("ACT_JUMP_PISTOL_RUNNING_EAST",0x1d9);
  FUN_10293dd0("ACT_JUMP_PISTOL_RUNNING_NORTH",0x1d7);
  FUN_10293dd0("ACT_JUMP_PISTOL_RUNNING_SOUTH",0x1d8);
  FUN_10293dd0("ACT_JUMP_PISTOL_RUNNING_WEST",0x1da);
  FUN_10293dd0("ACT_JUMP_RIFLE_INPLACE",0x1cf);
  FUN_10293dd0("ACT_JUMP_RIFLE_LANDING",0x1d0);
  FUN_10293dd0("ACT_JUMP_RIFLE_RUNNING_EAST",0x1d3);
  FUN_10293dd0("ACT_JUMP_RIFLE_RUNNING_NORTH",0x1d1);
  FUN_10293dd0("ACT_JUMP_RIFLE_RUNNING_SOUTH",0x1d2);
  FUN_10293dd0("ACT_JUMP_RIFLE_RUNNING_WEST",0x1d4);
  FUN_10293dd0("ACT_JUMP_RUNNING_EAST",0x1e5);
  FUN_10293dd0("ACT_JUMP_RUNNING_NORTH",0x1e3);
  FUN_10293dd0("ACT_JUMP_RUNNING_SOUTH",0x1e4);
  FUN_10293dd0("ACT_JUMP_RUNNING_WEST",0x1e6);
  FUN_10293dd0("ACT_KICK_LOW",0x1e9);
  FUN_10293dd0("ACT_KICK_MID",0x1e7);
  FUN_10293dd0("ACT_KICK_MID_FIRSTPERSON",0x1e8);
  FUN_10293dd0("ACT_KNOCKBACK",0x1ff);
  FUN_10293dd0("ACT_KNOCKBACK2_E",0x22c);
  FUN_10293dd0("ACT_KNOCKBACK2_N",0x22e);
  FUN_10293dd0("ACT_KNOCKBACK2_S",0x22b);
  FUN_10293dd0("ACT_KNOCKBACK2_W",0x22d);
  FUN_10293dd0("ACT_KNOCKBACK3_E",0x230);
  FUN_10293dd0("ACT_KNOCKBACK3_N",0x232);
  FUN_10293dd0("ACT_KNOCKBACK3_S",0x22f);
  FUN_10293dd0("ACT_KNOCKBACK3_W",0x231);
  FUN_10293dd0("ACT_KNOCKBACK4_E",0x234);
  FUN_10293dd0("ACT_KNOCKBACK4_N",0x236);
  FUN_10293dd0("ACT_KNOCKBACK4_S",0x233);
  FUN_10293dd0("ACT_KNOCKBACK4_W",0x235);
  FUN_10293dd0("ACT_KNOCKBACK_E",0x228);
  FUN_10293dd0("ACT_KNOCKBACK_N",0x22a);
  FUN_10293dd0("ACT_KNOCKBACK_S",0x227);
  FUN_10293dd0("ACT_KNOCKBACK_W",0x229);
  FUN_10293dd0("ACT_LAND",0x13);
  FUN_10293dd0("ACT_LIMP_LEFTLEG",0x1fc);
  FUN_10293dd0("ACT_LIMP_RIGHTLEG",0x1fd);
  FUN_10293dd0("ACT_MELEE_PISTOL",0x37d);
  FUN_10293dd0("ACT_MELEE_RIFLE",0x37c);
  FUN_10293dd0("ACT_MIDAIR",0x324);
  FUN_10293dd0("ACT_MP_ATTACK_STAND_PRIMARYFIRE",0x47);
  FUN_10293dd0("ACT_MP_ATTACK_STAND_SECONDARYFIRE",0x48);
  FUN_10293dd0("ACT_MP_ATTACK_SWIM_PRIMARYFIRE",0x49);
  FUN_10293dd0("ACT_MP_ATTACK_SWIM_SECONDARYFIRE",0x4a);
  FUN_10293dd0("ACT_MP_CROUCHWALK",0x44);
  FUN_10293dd0("ACT_MP_CROUCH_IDLE",0x3d);
  FUN_10293dd0("ACT_MP_DEPLOYED",0x46);
  FUN_10293dd0("ACT_MP_RELOAD_CROUCH",0x4e);
  FUN_10293dd0("ACT_MP_RELOAD_CROUCH_END",0x50);
  FUN_10293dd0("ACT_MP_RELOAD_CROUCH_LOOP",0x4f);
  FUN_10293dd0("ACT_MP_RELOAD_STAND",0x4b);
  FUN_10293dd0("ACT_MP_RELOAD_STAND_END",0x4d);
  FUN_10293dd0("ACT_MP_RELOAD_STAND_LOOP",0x4c);
  FUN_10293dd0("ACT_MP_RELOAD_SWIM",0x51);
  FUN_10293dd0("ACT_MP_RELOAD_SWIM_END",0x53);
  FUN_10293dd0("ACT_MP_RELOAD_SWIM_LOOP",0x52);
  FUN_10293dd0("ACT_MP_RUN",0x3e);
  FUN_10293dd0("ACT_MP_RUN_GUNUP",0x40);
  FUN_10293dd0("ACT_MP_RUN_UNAIMED",0x3f);
  FUN_10293dd0("ACT_MP_STAND_IDLE",0x3c);
  FUN_10293dd0("ACT_MP_SWIM",0x45);
  FUN_10293dd0("ACT_MP_WALK",0x43);
  FUN_10293dd0("ACT_ONFIRE_OVERLAY",0x2a8);
  FUN_10293dd0("ACT_OVERLAY_DROP_1HAND_OBJECT",0x382);
  FUN_10293dd0("ACT_OVERLAY_DROP_2HAND_OBJECT",899);
  FUN_10293dd0("ACT_PULLPIN_GRENADE",0x19d);
  FUN_10293dd0("ACT_RANGE_ATTACK1",0xd);
  FUN_10293dd0("ACT_RANGE_ATTACK2",0xe);
  FUN_10293dd0("ACT_RAPPEL",0x209);
  FUN_10293dd0("ACT_RAPPEL_JUMP",0x20a);
  FUN_10293dd0("ACT_RAPPEL_JUMP_FIRSTPERSON",0x20c);
  FUN_10293dd0("ACT_RAPPEL_LAND",0x20b);
  FUN_10293dd0("ACT_RAPPEL_LAND_FIRSTPERSON",0x20d);
  FUN_10293dd0("ACT_RELOAD_AUG",0x1a9);
  FUN_10293dd0("ACT_RELOAD_DSA58",0x1a8);
  FUN_10293dd0("ACT_RELOAD_DUAL_PISTOL",0x1b2);
  FUN_10293dd0("ACT_RELOAD_FP6",0x1aa);
  FUN_10293dd0("ACT_RELOAD_M14",0x1ab);
  FUN_10293dd0("ACT_RELOAD_MG4",0x1ad);
  FUN_10293dd0("ACT_RELOAD_MP5",0x1ac);
  FUN_10293dd0("ACT_RELOAD_MP7",0x1ae);
  FUN_10293dd0("ACT_RELOAD_P90",0x1af);
  FUN_10293dd0("ACT_RELOAD_PISTOL",0x1b1);
  FUN_10293dd0("ACT_RELOAD_PISTOL_1HAND",0x1b7);
  FUN_10293dd0("ACT_RELOAD_REVOLVER",0x1b3);
  FUN_10293dd0("ACT_RELOAD_RPG7",0x1b0);
  FUN_10293dd0("ACT_RELOAD_SG551",0x1b4);
  FUN_10293dd0("ACT_RELOAD_URATIO",0x1b5);
  FUN_10293dd0("ACT_RELOAD_UZI",0x1b6);
  FUN_10293dd0("ACT_RESET",0);
  FUN_10293dd0("ACT_ROLL_CROUCH_EAST",0x1f7);
  FUN_10293dd0("ACT_ROLL_CROUCH_NORTH",500);
  FUN_10293dd0("ACT_ROLL_CROUCH_NORTHEAST",0x1f5);
  FUN_10293dd0("ACT_ROLL_CROUCH_NORTHWEST",0x1f6);
  FUN_10293dd0("ACT_ROLL_CROUCH_SOUTH",0x1f8);
  FUN_10293dd0("ACT_ROLL_CROUCH_SOUTHEAST",0x1f9);
  FUN_10293dd0("ACT_ROLL_CROUCH_SOUTHWEST",0x1fa);
  FUN_10293dd0("ACT_ROLL_CROUCH_WEST",0x1fb);
  FUN_10293dd0("ACT_ROLL_EAST",0x1ef);
  FUN_10293dd0("ACT_ROLL_NORTH",0x1ec);
  FUN_10293dd0("ACT_ROLL_NORTHEAST",0x1ee);
  FUN_10293dd0("ACT_ROLL_NORTHWEST",0x1ed);
  FUN_10293dd0("ACT_ROLL_SOUTH",0x1f0);
  FUN_10293dd0("ACT_ROLL_SOUTHEAST",0x1f2);
  FUN_10293dd0("ACT_ROLL_SOUTHWEST",0x1f1);
  FUN_10293dd0("ACT_ROLL_WEST",499);
  FUN_10293dd0("ACT_RUN",8);
  FUN_10293dd0("ACT_RUN_AIM",9);
  FUN_10293dd0("ACT_RUN_AUG",0xf5);
  FUN_10293dd0("ACT_RUN_CARRY_1HAND",0x176);
  FUN_10293dd0("ACT_RUN_CROUCH",10);
  FUN_10293dd0("ACT_RUN_CROUCH_AIM",0xb);
  FUN_10293dd0("ACT_RUN_DSA58",0xfc);
  FUN_10293dd0("ACT_RUN_DUAL_PISTOL",0x13f);
  FUN_10293dd0("ACT_RUN_FIRE_EXTINGUISHER",0x17a);
  FUN_10293dd0("ACT_RUN_FP6",0x103);
  FUN_10293dd0("ACT_RUN_GRENADE",0x10a);
  FUN_10293dd0("ACT_RUN_GUNUP_PISTOL",0x41);
  FUN_10293dd0("ACT_RUN_GUNUP_RIFLE",0x42);
  FUN_10293dd0("ACT_RUN_KNIFE",0x110);
  FUN_10293dd0("ACT_RUN_KNIFE_DEFEND",0x116);
  FUN_10293dd0("ACT_RUN_M14",0x11c);
  FUN_10293dd0("ACT_RUN_MP5",0x123);
  FUN_10293dd0("ACT_RUN_MP7",0x12a);
  FUN_10293dd0("ACT_RUN_ONFIRE",0x181);
  FUN_10293dd0("ACT_RUN_P90",0x131);
  FUN_10293dd0("ACT_RUN_PISTOL",0x138);
  FUN_10293dd0("ACT_RUN_PROTECTED",0xc);
  FUN_10293dd0("ACT_RUN_RPG7",0x14d);
  FUN_10293dd0("ACT_RUN_SG551",0x146);
  FUN_10293dd0("ACT_RUN_SUITCASE",99);
  FUN_10293dd0("ACT_RUN_UNAIMED_AUG",0xf6);
  FUN_10293dd0("ACT_RUN_UNAIMED_CARRY_1HAND",0x177);
  FUN_10293dd0("ACT_RUN_UNAIMED_DSA58",0xfd);
  FUN_10293dd0("ACT_RUN_UNAIMED_DUAL_PISTOL",0x141);
  FUN_10293dd0("ACT_RUN_UNAIMED_FP6",0x104);
  FUN_10293dd0("ACT_RUN_UNAIMED_M14",0x11d);
  FUN_10293dd0("ACT_RUN_UNAIMED_MP5",0x124);
  FUN_10293dd0("ACT_RUN_UNAIMED_MP7",299);
  FUN_10293dd0("ACT_RUN_UNAIMED_P90",0x132);
  FUN_10293dd0("ACT_RUN_UNAIMED_PISTOL",0x13a);
  FUN_10293dd0("ACT_RUN_UNAIMED_RPG7",0x14e);
  FUN_10293dd0("ACT_RUN_UNAIMED_SG551",0x147);
  FUN_10293dd0("ACT_RUN_UNAIMED_SHIELD",0x167);
  FUN_10293dd0("ACT_RUN_UNAIMED_URATIO",0x155);
  FUN_10293dd0("ACT_RUN_UNAIMED_UZI",0x15c);
  FUN_10293dd0("ACT_RUN_URATIO",0x154);
  FUN_10293dd0("ACT_RUN_UZI",0x15b);
  FUN_10293dd0("ACT_SCAREDIDLE",0x207);
  FUN_10293dd0("ACT_SCAREDWALK",0x17d);
  FUN_10293dd0("ACT_SCAREDWALK2",0x17e);
  FUN_10293dd0("ACT_SCRIPT_CUSTOM_MOVE",3);
  FUN_10293dd0("ACT_SHOOT_AUG",0x187);
  FUN_10293dd0("ACT_SHOOT_BEKAS",0x189);
  FUN_10293dd0("ACT_SHOOT_BLIND_1HAND",0x199);
  FUN_10293dd0("ACT_SHOOT_BLIND_2HAND",0x198);
  FUN_10293dd0("ACT_SHOOT_DSA58",0x186);
  FUN_10293dd0("ACT_SHOOT_DUAL_PISTOL_LEFT",0x192);
  FUN_10293dd0("ACT_SHOOT_DUAL_PISTOL_RIGHT",0x193);
  FUN_10293dd0("ACT_SHOOT_FP6",0x188);
  FUN_10293dd0("ACT_SHOOT_GRENADE",0x18a);
  FUN_10293dd0("ACT_SHOOT_GRENADE_UNDERHAND",0x18b);
  FUN_10293dd0("ACT_SHOOT_M14",0x18c);
  FUN_10293dd0("ACT_SHOOT_MP5",0x18d);
  FUN_10293dd0("ACT_SHOOT_MP7",0x18e);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_AUG",0x19b);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_DSA58",0x19a);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_FP6",0x19c);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_M14",0x19e);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_MP5",0x19f);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_MP7",0x1a0);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_P90",0x1a1);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_PISTOL",0x1a3);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_REVOLVER",0x1a4);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_RPG7",0x1a2);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_SG551",0x1a5);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_URATIO",0x1a6);
  FUN_10293dd0("ACT_SHOOT_ONEHANDED_UZI",0x1a7);
  FUN_10293dd0("ACT_SHOOT_P90",399);
  FUN_10293dd0("ACT_SHOOT_PISTOL",0x191);
  FUN_10293dd0("ACT_SHOOT_REVOLVER",0x194);
  FUN_10293dd0("ACT_SHOOT_RPG7",400);
  FUN_10293dd0("ACT_SHOOT_SG551",0x195);
  FUN_10293dd0("ACT_SHOOT_URATIO",0x196);
  FUN_10293dd0("ACT_SHOOT_UZI",0x197);
  FUN_10293dd0("ACT_SHOTGUN_PUMP",0x31);
  FUN_10293dd0("ACT_SHOTGUN_RELOAD_FINISH",0x30);
  FUN_10293dd0("ACT_SHOTGUN_RELOAD_START",0x2f);
  FUN_10293dd0("ACT_SITDOWN",0x341);
  FUN_10293dd0("ACT_SITTINGIDLE",0x345);
  FUN_10293dd0("ACT_SITTINGSCARED",0x346);
  FUN_10293dd0("ACT_SITTING_DRIVER",0x301);
  FUN_10293dd0("ACT_SITTING_HELIPASSENGER_LEANLEFT_ALLGUNS",0x314);
  FUN_10293dd0("ACT_SITTING_HELIPASSENGER_LEANRIGHT_ALLGUNS",0x313);
  FUN_10293dd0("ACT_SITTING_HELIPASSENGER_MP5",0x304);
  FUN_10293dd0("ACT_SITTING_HELIPASSENGER_PISTOL",0x303);
  FUN_10293dd0("ACT_SITTING_HELIPILOT",0x302);
  FUN_10293dd0("ACT_SITTING_PASSENGER",0x305);
  FUN_10293dd0("ACT_SITTING_PASSENGER_LEAN_WINDOW_LEFT_MP5",0x30b);
  FUN_10293dd0("ACT_SITTING_PASSENGER_LEAN_WINDOW_LEFT_PISTOL",0x309);
  FUN_10293dd0("ACT_SITTING_PASSENGER_LEAN_WINDOW_RIGHT_MP5",0x30a);
  FUN_10293dd0("ACT_SITTING_PASSENGER_LEAN_WINDOW_RIGHT_PISTOL",0x308);
  FUN_10293dd0("ACT_SITTING_PASSENGER_MP5",0x307);
  FUN_10293dd0("ACT_SITTING_PASSENGER_PISTOL",0x306);
  FUN_10293dd0("ACT_SLASH_BACKWARD1",0x36c);
  FUN_10293dd0("ACT_SLASH_BACKWARD2",0x36d);
  FUN_10293dd0("ACT_SLASH_CROUCHING1",0x36e);
  FUN_10293dd0("ACT_SLASH_CROUCHING2",0x36f);
  FUN_10293dd0("ACT_SLASH_FORWARD1",0x36a);
  FUN_10293dd0("ACT_SLASH_FORWARD2",0x36b);
  FUN_10293dd0("ACT_SLASH_LEFTHI",0x366);
  FUN_10293dd0("ACT_SLASH_LEFTLO",0x364);
  FUN_10293dd0("ACT_SLASH_LEFTMID",0x365);
  FUN_10293dd0("ACT_SLASH_OVERLAY_BACKWARD1",0x378);
  FUN_10293dd0("ACT_SLASH_OVERLAY_BACKWARD2",0x379);
  FUN_10293dd0("ACT_SLASH_OVERLAY_CROUCHING1",0x37a);
  FUN_10293dd0("ACT_SLASH_OVERLAY_CROUCHING2",0x37b);
  FUN_10293dd0("ACT_SLASH_OVERLAY_FORWARD1",0x376);
  FUN_10293dd0("ACT_SLASH_OVERLAY_FORWARD2",0x377);
  FUN_10293dd0("ACT_SLASH_OVERLAY_LEFTHI",0x372);
  FUN_10293dd0("ACT_SLASH_OVERLAY_LEFTLO",0x370);
  FUN_10293dd0("ACT_SLASH_OVERLAY_LEFTMID",0x371);
  FUN_10293dd0("ACT_SLASH_OVERLAY_RIGHTHI",0x375);
  FUN_10293dd0("ACT_SLASH_OVERLAY_RIGHTLO",0x373);
  FUN_10293dd0("ACT_SLASH_OVERLAY_RIGHTMID",0x374);
  FUN_10293dd0("ACT_SLASH_RIGHTHI",0x369);
  FUN_10293dd0("ACT_SLASH_RIGHTLO",0x367);
  FUN_10293dd0("ACT_SLASH_RIGHTMID",0x368);
  FUN_10293dd0("ACT_SNIFF",0x326);
  FUN_10293dd0("ACT_SNIFF_SCRATCH",0x325);
  FUN_10293dd0("ACT_STAND",0x16);
  FUN_10293dd0("ACT_STANDING_FORKLIFT_LEFTSIDE",0x310);
  FUN_10293dd0("ACT_STANDING_FORKLIFT_REAR_ALLGUNS",0x311);
  FUN_10293dd0("ACT_STANDING_FORKLIFT_RIGHTSIDE",0x30f);
  FUN_10293dd0("ACT_STANDLOW_AIM_AUG",0xf3);
  FUN_10293dd0("ACT_STANDLOW_AIM_CARRY_1HAND",0x173);
  FUN_10293dd0("ACT_STANDLOW_AIM_CARRY_2HAND",0x16b);
  FUN_10293dd0("ACT_STANDLOW_AIM_CARRY_BLOCKADE",0x16f);
  FUN_10293dd0("ACT_STANDLOW_AIM_DSA58",0xfa);
  FUN_10293dd0("ACT_STANDLOW_AIM_DUAL_PISTOL",0x13d);
  FUN_10293dd0("ACT_STANDLOW_AIM_FIRE_EXTINGUISHER",0x178);
  FUN_10293dd0("ACT_STANDLOW_AIM_FP6",0x101);
  FUN_10293dd0("ACT_STANDLOW_AIM_GRENADE",0x108);
  FUN_10293dd0("ACT_STANDLOW_AIM_KNIFE",0x10e);
  FUN_10293dd0("ACT_STANDLOW_AIM_M14",0x11a);
  FUN_10293dd0("ACT_STANDLOW_AIM_MP5",0x121);
  FUN_10293dd0("ACT_STANDLOW_AIM_MP7",0x128);
  FUN_10293dd0("ACT_STANDLOW_AIM_P90",0x12f);
  FUN_10293dd0("ACT_STANDLOW_AIM_PISTOL",0x136);
  FUN_10293dd0("ACT_STANDLOW_AIM_RPG7",0x14b);
  FUN_10293dd0("ACT_STANDLOW_AIM_SG551",0x144);
  FUN_10293dd0("ACT_STANDLOW_AIM_SHIELD",0x165);
  FUN_10293dd0("ACT_STANDLOW_AIM_SUITCASE",0x161);
  FUN_10293dd0("ACT_STANDLOW_AIM_URATIO",0x152);
  FUN_10293dd0("ACT_STANDLOW_AIM_UZI",0x159);
  FUN_10293dd0("ACT_STANDLOW_DEFEND_KNIFE",0x114);
  FUN_10293dd0("ACT_STANDUP",0x342);
  FUN_10293dd0("ACT_STAND_AIM_AUG",0xf2);
  FUN_10293dd0("ACT_STAND_AIM_BLINDSHOOT_1HAND",0x319);
  FUN_10293dd0("ACT_STAND_AIM_BLINDSHOOT_2HAND",0x315);
  FUN_10293dd0("ACT_STAND_AIM_DSA58",0xf9);
  FUN_10293dd0("ACT_STAND_AIM_DUAL_PISTOL",0x13c);
  FUN_10293dd0("ACT_STAND_AIM_FP6",0x100);
  FUN_10293dd0("ACT_STAND_AIM_GRENADE",0x107);
  FUN_10293dd0("ACT_STAND_AIM_KNIFE",0x10d);
  FUN_10293dd0("ACT_STAND_AIM_M14",0x119);
  FUN_10293dd0("ACT_STAND_AIM_MP5",0x120);
  FUN_10293dd0("ACT_STAND_AIM_MP7",0x127);
  FUN_10293dd0("ACT_STAND_AIM_P90",0x12e);
  FUN_10293dd0("ACT_STAND_AIM_PISTOL",0x135);
  FUN_10293dd0("ACT_STAND_AIM_RPG7",0x14a);
  FUN_10293dd0("ACT_STAND_AIM_SG551",0x143);
  FUN_10293dd0("ACT_STAND_AIM_URATIO",0x151);
  FUN_10293dd0("ACT_STAND_AIM_UZI",0x158);
  FUN_10293dd0("ACT_STAND_DEFEND_KNIFE",0x113);
  FUN_10293dd0("ACT_STAND_MOVING_OBJECT",0x185);
  FUN_10293dd0("ACT_STAND_ONFIRE",0x17f);
  FUN_10293dd0("ACT_STUMBLE",0x1fe);
  FUN_10293dd0("ACT_SWIM",0x11);
  FUN_10293dd0("ACT_THROW_SHIELD",0x1ea);
  FUN_10293dd0("ACT_TRANSITION",2);
  FUN_10293dd0("ACT_USE",0x17);
  FUN_10293dd0("ACT_VM_BLINDATTACK_1",0x67);
  FUN_10293dd0("ACT_VM_BLINDATTACK_1_SD",0x6b);
  FUN_10293dd0("ACT_VM_BLINDSILENCEDATTACK_1",0x6c);
  FUN_10293dd0("ACT_VM_BLINDSILENCEDATTACK_1_SD",0x6d);
  FUN_10293dd0("ACT_VM_BLIND_DRYFIRE",0x69);
  FUN_10293dd0("ACT_VM_BLIND_DRYFIRE_SD",0x6a);
  FUN_10293dd0("ACT_VM_BLIND_LASTSHOT",0x68);
  FUN_10293dd0("ACT_VM_DRAW",0x23);
  FUN_10293dd0("ACT_VM_DRAW_SD",0x57);
  FUN_10293dd0("ACT_VM_DRYFIRE",0x2e);
  FUN_10293dd0("ACT_VM_DRYFIRE_SD",0x84);
  FUN_10293dd0("ACT_VM_HALT",0x2c);
  FUN_10293dd0("ACT_VM_HALT2",0x2d);
  FUN_10293dd0("ACT_VM_HALT_SD",0x5f);
  FUN_10293dd0("ACT_VM_HALT_SD2",0x60);
  FUN_10293dd0("ACT_VM_HOLSTER",0x24);
  FUN_10293dd0("ACT_VM_HOLSTER_SD",0x58);
  FUN_10293dd0("ACT_VM_IDLE",0x25);
  FUN_10293dd0("ACT_VM_IDLE_1",0x33);
  FUN_10293dd0("ACT_VM_IDLE_2",0x32);
  FUN_10293dd0("ACT_VM_IDLE_BLIND",0x65);
  FUN_10293dd0("ACT_VM_IDLE_BLIND_SD",0x66);
  FUN_10293dd0("ACT_VM_IDLE_SD",0x5b);
  FUN_10293dd0("ACT_VM_LASTSHOT",100);
  FUN_10293dd0("ACT_VM_MIDRELOAD",0x61);
  FUN_10293dd0("ACT_VM_MIDRELOAD_SD",0x62);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK",0x26);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_1",0x3b);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_1_L",0x92);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_1_M",0x91);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_1_R",0x93);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_1_SD",0x83);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_1_SD_L",0x7d);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_1_SD_M",0x7c);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_1_SD_R",0x7e);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_2",0x3a);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_2_L",0x8f);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_2_M",0x8e);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_2_R",0x90);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_2_SD",0x82);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_2_SD_L",0x7a);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_2_SD_M",0x79);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_2_SD_R",0x7b);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_3",0x39);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_3_L",0x8c);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_3_M",0x8b);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_3_R",0x8d);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_3_SD",0x81);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_3_SD_L",0x77);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_3_SD_M",0x76);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_3_SD_R",0x78);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_4",0x38);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_4_L",0x89);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_4_M",0x88);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_4_R",0x8a);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_4_SD",0x80);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_4_SD_L",0x74);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_4_SD_M",0x73);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_4_SD_R",0x75);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_5",0x37);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_5_L",0x86);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_5_M",0x85);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_5_R",0x87);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_5_SD",0x7f);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_5_SD_L",0x71);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_5_SD_M",0x70);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_5_SD_R",0x72);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_6",0x36);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_7",0x35);
  FUN_10293dd0("ACT_VM_PRIMARYATTACK_8",0x34);
  FUN_10293dd0("ACT_VM_PRIME_GRENADE",0x54);
  FUN_10293dd0("ACT_VM_RELOAD",0x29);
  FUN_10293dd0("ACT_VM_RELOAD_SD",0x5c);
  FUN_10293dd0("ACT_VM_SECONDARYATTACK",0x27);
  FUN_10293dd0("ACT_VM_SECONDARYATTACK2",0x28);
  FUN_10293dd0("ACT_VM_SECONDARYATTACK_SD",0x6e);
  FUN_10293dd0("ACT_VM_SECONDARYATTACK_SD2",0x6f);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_1",0x98);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_1_L",0xa6);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_1_M",0xa5);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_1_R",0xa7);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_1_SD",0xbb);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_1_SD_L",0xb5);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_1_SD_M",0xb4);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_1_SD_R",0xb6);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_2",0x97);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_2_L",0xa3);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_2_M",0xa2);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_2_R",0xa4);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_2_SD",0xba);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_2_SD_L",0xb2);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_2_SD_M",0xb1);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_2_SD_R",0xb3);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_3",0x96);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_3_L",0xa0);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_3_M",0x9f);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_3_R",0xa1);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_3_SD",0xb9);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_3_SD_L",0xaf);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_3_SD_M",0xae);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_3_SD_R",0xb0);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_4",0x95);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_4_L",0x9d);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_4_M",0x9c);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_4_R",0x9e);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_4_SD",0xb8);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_4_SD_L",0xac);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_4_SD_M",0xab);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_4_SD_R",0xad);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_5",0x94);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_5_L",0x9a);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_5_M",0x99);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_5_R",0x9b);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_5_SD",0xb7);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_5_SD_L",0xa9);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_5_SD_M",0xa8);
  FUN_10293dd0("ACT_VM_SILENCEDATTACK_5_SD_R",0xaa);
  FUN_10293dd0("ACT_VM_SINGLEHAND_DRAW",199);
  FUN_10293dd0("ACT_VM_SINGLEHAND_DRYFIRE",0xc2);
  FUN_10293dd0("ACT_VM_SINGLEHAND_HOLSTER",200);
  FUN_10293dd0("ACT_VM_SINGLEHAND_IDLE",0xc4);
  FUN_10293dd0("ACT_VM_SINGLEHAND_LASTSHOT",0xc3);
  FUN_10293dd0("ACT_VM_SINGLEHAND_MIDRELOAD",0xc6);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_1",0xd9);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_1_L",0xcb);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_1_M",0xca);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_1_R",0xcc);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_2",0xda);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_2_L",0xce);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_2_M",0xcd);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_2_R",0xcf);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_3",0xdb);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_3_L",0xd1);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_3_M",0xd0);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_3_R",0xd2);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_4",0xdc);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_4_L",0xd4);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_4_M",0xd3);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_4_R",0xd5);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_5",0xdd);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_5_L",0xd7);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_5_M",0xd6);
  FUN_10293dd0("ACT_VM_SINGLEHAND_PRIMARYATTACK_5_R",0xd8);
  FUN_10293dd0("ACT_VM_SINGLEHAND_RELOAD",0xc5);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_1",0xed);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_1_L",0xdf);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_1_M",0xde);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_1_R",0xe0);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_2",0xee);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_2_L",0xe2);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_2_M",0xe1);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_2_R",0xe3);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_3",0xef);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_3_L",0xe5);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_3_M",0xe4);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_3_R",0xe6);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_4",0xf0);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_4_L",0xe8);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_4_M",0xe7);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_4_R",0xe9);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_5",0xf1);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_5_L",0xeb);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_5_M",0xea);
  FUN_10293dd0("ACT_VM_SINGLEHAND_SILENCEDATTACK_5_R",0xec);
  FUN_10293dd0("ACT_VM_SINGLEHAND_UNHOLSTER",0xc9);
  FUN_10293dd0("ACT_VM_SLASHFORWARD1",0xc0);
  FUN_10293dd0("ACT_VM_SLASHFORWARD2",0xc1);
  FUN_10293dd0("ACT_VM_SLASHLEFT1",0xbc);
  FUN_10293dd0("ACT_VM_SLASHLEFT2",0xbd);
  FUN_10293dd0("ACT_VM_SLASHRIGHT1",0xbe);
  FUN_10293dd0("ACT_VM_SLASHRIGHT2",0xbf);
  FUN_10293dd0("ACT_VM_THROW_GRENADE",0x55);
  FUN_10293dd0("ACT_VM_THROW_GRENADE_UNDERHAND",0x56);
  FUN_10293dd0("ACT_VM_UNHOLSTER",0x59);
  FUN_10293dd0("ACT_VM_UNHOLSTER_SD",0x5a);
  FUN_10293dd0("ACT_VM_WAVEOVER",0x2a);
  FUN_10293dd0("ACT_VM_WAVEOVER2",0x2b);
  FUN_10293dd0("ACT_VM_WAVEOVER_SD",0x5d);
  FUN_10293dd0("ACT_VM_WAVEOVER_SD2",0x5e);
  FUN_10293dd0("ACT_WALK",4);
  FUN_10293dd0("ACT_WALKBITE",0x329);
  FUN_10293dd0("ACT_WALKSNIFF",0x32a);
  FUN_10293dd0("ACT_WALKSUITCASE",0x163);
  FUN_10293dd0("ACT_WALK_AGITATED",0x20);
  FUN_10293dd0("ACT_WALK_AIM",5);
  FUN_10293dd0("ACT_WALK_AUG",0xf7);
  FUN_10293dd0("ACT_WALK_BLINDSHOOT_1HAND",0x31b);
  FUN_10293dd0("ACT_WALK_BLINDSHOOT_2HAND",0x317);
  FUN_10293dd0("ACT_WALK_CARRY_1HAND",0x174);
  FUN_10293dd0("ACT_WALK_CARRY_2HAND",0x16c);
  FUN_10293dd0("ACT_WALK_CARRY_BLOCKADE",0x170);
  FUN_10293dd0("ACT_WALK_CROUCH",6);
  FUN_10293dd0("ACT_WALK_CROUCH_AIM",7);
  FUN_10293dd0("ACT_WALK_DSA58",0xfe);
  FUN_10293dd0("ACT_WALK_DUAL_PISTOL",0x140);
  FUN_10293dd0("ACT_WALK_FIRE_EXTINGUISHER",0x17b);
  FUN_10293dd0("ACT_WALK_FP6",0x105);
  FUN_10293dd0("ACT_WALK_GRAB_VIP",0x208);
  FUN_10293dd0("ACT_WALK_GRENADE",0x10b);
  FUN_10293dd0("ACT_WALK_KNIFE",0x111);
  FUN_10293dd0("ACT_WALK_KNIFE_DEFEND",0x117);
  FUN_10293dd0("ACT_WALK_M14",0x11e);
  FUN_10293dd0("ACT_WALK_MOVING_OBJECT",0x184);
  FUN_10293dd0("ACT_WALK_MP5",0x125);
  FUN_10293dd0("ACT_WALK_MP7",300);
  FUN_10293dd0("ACT_WALK_ONFIRE",0x182);
  FUN_10293dd0("ACT_WALK_P90",0x133);
  FUN_10293dd0("ACT_WALK_PISTOL",0x139);
  FUN_10293dd0("ACT_WALK_RELAXED",0x1e);
  FUN_10293dd0("ACT_WALK_RPG7",0x14f);
  FUN_10293dd0("ACT_WALK_SG551",0x148);
  FUN_10293dd0("ACT_WALK_SHIELD",0x168);
  FUN_10293dd0("ACT_WALK_STEALTH",0x21);
  FUN_10293dd0("ACT_WALK_STIMULATED",0x1f);
  FUN_10293dd0("ACT_WALK_URATIO",0x156);
  FUN_10293dd0("ACT_WALK_UZI",0x15d);
  FUN_10293dd0("ACT_WAVEOVER_PISTOL",0x37f);
  FUN_10293dd0("ACT_WAVEOVER_RIFLE",0x37e);
  FUN_102944b0(this,"resource/ColorOperationListPanel.res",0,0,0);
  FUN_102944b0(this,"resource/PerfOcclusionUIPanel.res",0,0,0);
  FUN_102944b0(this,"resource/PerfPropFadeUIPanel.res",0,0,0);
  FUN_10294520(this,"BuildModeDialog",0);
  FUN_10294da0(this,(byte *)"InfoLabel",param_4);
  FUN_1029a690(this_01,param_2,(uint *)"force_dir",param_1 + 7);
  FUN_1029a690(this_02,this_00,(uint *)"MassCenterOverride",(undefined4 *)((int)this + 0x9c28));
  FUN_1029b750((byte *)"----------------- frame %d -----------------\n");
  FUN_1029b7f0(iVar5 + 1,(byte *)"Main: %s, Cycle: %.2f\n");
  FUN_1029b7f0(iVar5 + 2,(byte *)"main: %s(%d), cycle: %.2f cyclerate: %.2f playbackrate: %.2f\n");
  FUN_1029b7f0(iVar5 + 3,(byte *)"--------------------------------------------\n\n");
  FUN_1029b7f0(iVar5,(byte *)"-------------%s: frame %d -----------------\n");
  FUN_1029b7f0(local_18,(byte *)"Time: %.2f, Speed: %.2f, MaxSpeed: %.2f");
  FUN_1029b7f0(param_1,(byte *)"main: %s, cycle: %.2f\n");
  FUN_1029dc80(this,"increment");
  FUN_1029e620("PLAYERANIMEVENT_ATTACK_GRENADE",3);
  FUN_1029e620("PLAYERANIMEVENT_ATTACK_POST",0x11);
  FUN_1029e620("PLAYERANIMEVENT_ATTACK_PRE",0x10);
  FUN_1029e620("PLAYERANIMEVENT_ATTACK_PRIMARY",1);
  FUN_1029e620("PLAYERANIMEVENT_ATTACK_SECONDARY",2);
  FUN_1029e620("PLAYERANIMEVENT_BASH_SHIELD",0x29);
  FUN_1029e620("PLAYERANIMEVENT_BLINDED_OVERLAY_LONG",0xd4);
  FUN_1029e620("PLAYERANIMEVENT_BLINDED_OVERLAY_MEDIUM",0xd3);
  FUN_1029e620("PLAYERANIMEVENT_BLINDED_OVERLAY_SHORT",0xd2);
  FUN_1029e620("PLAYERANIMEVENT_CANCEL",9);
  FUN_1029e620("PLAYERANIMEVENT_CROUCH_TO_PRONE",0x18);
  FUN_1029e620("PLAYERANIMEVENT_CUSTOM",0xc);
  FUN_1029e620("PLAYERANIMEVENT_CUSTOM_GESTURE",0xd);
  FUN_1029e620("PLAYERANIMEVENT_CUSTOM_GESTURE_SEQUENCE",0xf);
  FUN_1029e620("PLAYERANIMEVENT_CUSTOM_SEQUENCE",0xe);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_CROUCH_HEAD",0xd5);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_CROUCH_LEFTARM",0xd6);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_CROUCH_LEFTLEG",0xd7);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_CROUCH_REAR_TORSO",0xda);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_CROUCH_TORSO",0xd8);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_CROUCH_TORSO2",0xd9);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_ONFIRE",0x106);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_ONFIRE2",0x107);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_RUNNING_HEAD",0xfb);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_RUNNING_TORSO",0xf7);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_RUNNING_TORSO2",0x11f);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_RUNNING_UPPERTORSO",0xf8);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_RUNNING_UPPERTORSO2",0xf9);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_RUNNING_UPPERTORSO3",0xfa);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_RUNNING_UPPERTORSO4",0x120);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_GROIN",0xdb);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_HEAD",0xdc);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_HEAD2",0xdd);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_HEAD3",0xde);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_HEAD4",0x108);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_HEAD5",0x109);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFTARM",0xdf);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFTARM2",0xe0);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFTLEG",0xe1);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFTLEG2",0xe2);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFT_LOWERTORSO",0xfc);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFT_LOWERTORSO2",0x117);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFT_LOWERTORSO3",0x118);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFT_UPPERTORSO",0xfd);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFT_UPPERTORSO2",0x115);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEFT_UPPERTORSO3",0x116);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEG_FRONT",0x11c);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEG_FRONT2",0x11d);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LEG_REAR",0x11e);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO",0xe3);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO10",0x10c);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO2",0xe4);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO3",0xe5);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO4",0xe6);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO5",0x100);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO6",0x101);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO7",0x102);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO8",0x10a);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO9",0x10b);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO",0xe7);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO10",0x110);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO2",0xe8);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO3",0xe9);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO4",0x103);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO5",0x104);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO6",0x105);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO7",0x10d);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO8",0x10e);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO9",0x10f);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_RIGHTARM",0xea);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_RIGHTARM2",0xeb);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_RIGHTLEG",0xec);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_RIGHTLEG2",0xed);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_LOWERTORSO",0xfe);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_LOWERTORSO2",0x11a);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_LOWERTORSO3",0x11b);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_UPPERTORSO",0xff);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_UPPERTORSO2",0x119);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO",0xee);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO10",0x111);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO11",0x112);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO12",0x113);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO13",0x114);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO2",0xef);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO3",0xf0);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO4",0xf1);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO5",0xf2);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO6",0xf3);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO7",0xf4);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO8",0xf5);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO9",0xf6);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_VEHICLE_LEAN_LEFT",0x126);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_VEHICLE_LEAN_LEFT2",0x127);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_VEHICLE_LEAN_RIGHT",0x128);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_VEHICLE_LEAN_RIGHT2",0x129);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING",0x121);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING2",0x122);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING3",0x123);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING4",0x124);
  FUN_1029e620("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING5",0x125);
  FUN_1029e620("PLAYERANIMEVENT_DEPLOY",0x2c);
  FUN_1029e620("PLAYERANIMEVENT_DIE",7);
  FUN_1029e620("PLAYERANIMEVENT_DOUBLEJUMP",8);
  FUN_1029e620("PLAYERANIMEVENT_DROP_1HAND_OBJECT",0x170);
  FUN_1029e620("PLAYERANIMEVENT_DROP_2HAND_OBJECT",0x171);
  FUN_1029e620("PLAYERANIMEVENT_EXPLODEBACK_E",0xca);
  FUN_1029e620("PLAYERANIMEVENT_EXPLODEBACK_FLOAT_E",0xcf);
  FUN_1029e620("PLAYERANIMEVENT_EXPLODEBACK_FLOAT_N",0xce);
  FUN_1029e620("PLAYERANIMEVENT_EXPLODEBACK_FLOAT_S",0xd0);
  FUN_1029e620("PLAYERANIMEVENT_EXPLODEBACK_FLOAT_W",0xd1);
  FUN_1029e620("PLAYERANIMEVENT_EXPLODEBACK_LAND",0xcd);
  FUN_1029e620("PLAYERANIMEVENT_EXPLODEBACK_N",0xc9);
  FUN_1029e620("PLAYERANIMEVENT_EXPLODEBACK_S",0xcb);
  FUN_1029e620("PLAYERANIMEVENT_EXPLODEBACK_W",0xcc);
  FUN_1029e620("PLAYERANIMEVENT_FIRE_GUN_PRIMARY",0x1b);
  FUN_1029e620("PLAYERANIMEVENT_FIRE_GUN_SECONDARY",0x1c);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CHEST",0x66);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_HEAD",0x3d);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_HEAD2",0x3e);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_LEFTARM",0x3f);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_LEFTLEG",0x40);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_LEFT_HEAD",0x48);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_LEFT_LOWERTORSO",0x49);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_LEFT_UPPERTORSO",0x4a);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_LOWERTORSO",0x41);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_HEAD",0x42);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_HEAD2",0x43);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_LOWERTORSO",0x44);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_LOWERTORSO2",0x45);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_UPPERTORSO",0x46);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_UPPERTORSO2",0x47);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHTARM",0x4e);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHTLEG",0x4f);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHT_HEAD",0x4b);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHT_LOWERTORSO",0x4c);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHT_UPPERTORSO",0x4d);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_UPPERTORSO",0x50);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_CROUCH_UPPERTORSO2",0x51);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_GROIN",0x62);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HEAD",99);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HEAD2",100);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HEAD3",0x65);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_HEAD",0x92);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_LEFTLEG",0x8e);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_LOWERTORSO",0x93);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_LOWERTORSO2",0x94);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_REAR_LOWERTORSO",0x90);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_REAR_UPPERTORSO",0x91);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_RIGHTLEG",0x8f);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_UPPERTORSO",0x95);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_UPPERTORSO2",0x96);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LEFTARM",0x67);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LEFTLEG",0x68);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LEFTLEG2",0x69);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LEFT_HEAD",0x75);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LEFT_LOWERTORSO",0x76);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LEFT_LOWERTORSO2",0x77);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LEFT_UPPERTORSO",0x78);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LEFT_UPPERTORSO2",0x79);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LOWERTORSO",0x6a);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LOWERTORSO2",0x6b);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LOWERTORSO3",0x6c);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_LOWERTORSO4",0x6d);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_CAR_SITTING_BACK",0xc0);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_CAR_SITTING_FRONT",0xbf);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_CAR_SITTING_LEFT",0xc1);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_CAR_SITTING_RIGHT",0xc2);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_HEAD",0x9c);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_HEAD2",0x9d);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_HEAD3",0x9e);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_HEAD",0x99);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_LOWERTORSO",0x9a);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_REAR_LOWERTORSO",0x97);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_REAR_UPPERTORSO",0x98);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_UPPERTORSO",0x9b);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_LEFTARM",0x9f);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_LEFT_HEAD",0xb0);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_LEFT_UPPERTORSO",0xae);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_LEFT_UPPERTORSO2",0xaf);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_LOWERTORSO",0xa0);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_LOWERTORSO2",0xa1);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_HEAD",199);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_LEFT_TORSO",0xc5);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_LOWERTORSO",0xc4);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_RIGHT_TORSO",0xc6);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_UPPERTORSO",0xc3);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_HEAD",0xa2);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_HEAD2",0xa3);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_LOWERTORSO",0xa4);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_LOWERTORSO2",0xa5);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_UPPERTORSO",0xa6);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_UPPERTORSO2",0xa7);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_RIGHTARM",0xa8);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_RIGHT_HEAD",0xad);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_RIGHT_UPPERTORSO",0xab);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_RIGHT_UPPERTORSO2",0xac);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_BACK",0xb9);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_BACK2",0xba);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_FRONT",0xb6);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_FRONT2",0xb7);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_FRONT3",0xb8);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_LEFT",0xbb);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_LEFT2",0xbc);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_RIGHT",0xbd);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_RIGHT2",0xbe);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_HEAD",0xb1);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_LOWERTORSO",0xb4);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_LOWERTORSO2",0xb5);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_UPPERTORSO",0xb2);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_UPPERTORSO2",0xb3);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_UPPERTORSO",0xa9);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_OVERLAY_UPPERTORSO2",0xaa);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_REAR_HEAD",0x6e);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_REAR_HEAD2",0x6f);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_REAR_LOWERTORSO",0x70);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_REAR_LOWERTORSO2",0x71);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_REAR_LOWERTORSO3",0x72);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_REAR_UPPERTORSO",0x73);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_REAR_UPPERTORSO2",0x74);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_RIGHTARM",0x7f);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_RIGHTLEG",0x80);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_RIGHTLEG2",0x81);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_RIGHT_HEAD",0x7a);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_RIGHT_LOWERTORSO",0x7b);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_RIGHT_LOWERTORSO2",0x7c);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_RIGHT_UPPERTORSO",0x7d);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_RIGHT_UPPERTORSO2",0x7e);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_SHIELD_BACK",0x88);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_SHIELD_BACK2",0x89);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_SHIELD_FRONT",0x85);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_SHIELD_FRONT2",0x86);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_SHIELD_FRONT3",0x87);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_SHIELD_LEFT",0x8c);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_SHIELD_LEFT2",0x8d);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_SHIELD_RIGHT",0x8a);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_SHIELD_RIGHT2",0x8b);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_UPPERTORSO",0x82);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_UPPERTORSO2",0x83);
  FUN_1029e620("PLAYERANIMEVENT_FLINCH_UPPERTORSO3",0x84);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_ARMED_PISTOL1",0x14e);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_ARMED_RIFLE1",0x14f);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_CALM1",0x12a);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_CALM2",299);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_CALM3",300);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_CALM4",0x12d);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_CALM5",0x12e);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_CRY",0x138);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_HOLDCASE_WAVE",0x13b);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_LOOKAROUND",0x136);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_LOOKAROUND2",0x137);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM1",0x13f);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM10",0x148);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM11",0x149);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM12",0x14a);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM2",0x140);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM3",0x141);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM4",0x142);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM5",0x143);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM6",0x144);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM7",0x145);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM8",0x146);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM9",0x147);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_SCARED1",0x14b);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_SCARED2",0x14c);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_SITTING_SCARED3",0x14d);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_WAVEHANDS_SCARED",0x139);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_NPC_WAVEHANDS_SCARED2",0x13a);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_SCARED1",0x12f);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_SCARED2",0x130);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_SCARED3",0x131);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_STARTLED1",0x133);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_STARTLED2",0x134);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_STARTLED3",0x135);
  FUN_1029e620("PLAYERANIMEVENT_GESTURE_VOMIT",0x132);
  FUN_1029e620("PLAYERANIMEVENT_GRENADE1_DRAW",0x12);
  FUN_1029e620("PLAYERANIMEVENT_GRENADE1_THROW",0x14);
  FUN_1029e620("PLAYERANIMEVENT_GRENADE2_DRAW",0x13);
  FUN_1029e620("PLAYERANIMEVENT_GRENADE2_THROW",0x15);
  FUN_1029e620("PLAYERANIMEVENT_HALT_PISTOL",0x16f);
  FUN_1029e620("PLAYERANIMEVENT_HALT_RIFLE",0x16e);
  FUN_1029e620("PLAYERANIMEVENT_HOSTAGEGRAB_KICKAWAY",0x2a);
  FUN_1029e620("PLAYERANIMEVENT_HOSTAGEGRAB_RELEASETHROW",0x13c);
  FUN_1029e620("PLAYERANIMEVENT_JUMP",0x20);
  FUN_1029e620("PLAYERANIMEVENT_KICK_LOW",0x26);
  FUN_1029e620("PLAYERANIMEVENT_KICK_MID",0x27);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK2_E",0x59);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK2_N",0x57);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK2_S",0x56);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK2_W",0x58);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK3_E",0x5d);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK3_N",0x5b);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK3_S",0x5a);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK3_W",0x5c);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK4_E",0x61);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK4_N",0x5f);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK4_S",0x5e);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK4_W",0x60);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK_E",0x55);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK_N",0x53);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK_S",0x52);
  FUN_1029e620("PLAYERANIMEVENT_KNOCKBACK_W",0x54);
  FUN_1029e620("PLAYERANIMEVENT_LANDING",0x25);
  FUN_1029e620("PLAYERANIMEVENT_MELEE_PISTOL",0x16b);
  FUN_1029e620("PLAYERANIMEVENT_MELEE_RIFLE",0x16a);
  FUN_1029e620("PLAYERANIMEVENT_NONE",0);
  FUN_1029e620("PLAYERANIMEVENT_ONFIRE_OVERLAY",200);
  FUN_1029e620("PLAYERANIMEVENT_PRONE_TO_CROUCH",0x1a);
  FUN_1029e620("PLAYERANIMEVENT_PRONE_TO_STAND",0x19);
  FUN_1029e620("PLAYERANIMEVENT_PULLPIN_GRENADE",0x1d);
  FUN_1029e620("PLAYERANIMEVENT_RAPPEL_JUMP",0x150);
  FUN_1029e620("PLAYERANIMEVENT_RAPPEL_LAND",0x151);
  FUN_1029e620("PLAYERANIMEVENT_RELOAD",0x2b);
  FUN_1029e620("PLAYERANIMEVENT_RELOAD_END",5);
  FUN_1029e620("PLAYERANIMEVENT_RELOAD_LOOP",4);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_CROUCH_EAST",0x38);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_CROUCH_NORTH",0x35);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_CROUCH_NORTHEAST",0x36);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_CROUCH_NORTHWEST",0x37);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_CROUCH_SOUTH",0x39);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_CROUCH_SOUTHEAST",0x3a);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_CROUCH_SOUTHWEST",0x3b);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_CROUCH_WEST",0x3c);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_EAST",0x30);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_NORTH",0x2d);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_NORTHEAST",0x2f);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_NORTHWEST",0x2e);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_SOUTH",0x31);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_SOUTHEAST",0x33);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_SOUTHWEST",0x32);
  FUN_1029e620("PLAYERANIMEVENT_ROLL_WEST",0x34);
  FUN_1029e620("PLAYERANIMEVENT_RUNNING_JUMP_EAST",0x22);
  FUN_1029e620("PLAYERANIMEVENT_RUNNING_JUMP_NORTH",0x21);
  FUN_1029e620("PLAYERANIMEVENT_RUNNING_JUMP_SOUTH",0x23);
  FUN_1029e620("PLAYERANIMEVENT_RUNNING_JUMP_WEST",0x24);
  FUN_1029e620("PLAYERANIMEVENT_SITDOWN",0x13d);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_BACKWARD1",0x15a);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_BACKWARD2",0x15b);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_CROUCHING1",0x15c);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_CROUCHING2",0x15d);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_FORWARD1",0x158);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_FORWARD2",0x159);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_LEFTHI",0x154);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_LEFTLO",0x152);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_LEFTMID",0x153);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_BACKWARD1",0x166);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_BACKWARD2",0x167);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_CROUCHING1",0x168);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_CROUCHING2",0x169);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_FORWARD1",0x164);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_FORWARD2",0x165);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_LEFTHI",0x160);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_LEFTLO",0x15e);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_LEFTMID",0x15f);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_RIGHTHI",0x163);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_RIGHTLO",0x161);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_OVERLAY_RIGHTMID",0x162);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_RIGHTHI",0x157);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_RIGHTLO",0x155);
  FUN_1029e620("PLAYERANIMEVENT_SLASH_RIGHTMID",0x156);
  FUN_1029e620("PLAYERANIMEVENT_SNAP_YAW",0xb);
  FUN_1029e620("PLAYERANIMEVENT_SPAWN",10);
  FUN_1029e620("PLAYERANIMEVENT_STANDUP",0x13e);
  FUN_1029e620("PLAYERANIMEVENT_STAND_TO_PRONE",0x17);
  FUN_1029e620("PLAYERANIMEVENT_SWIM",6);
  FUN_1029e620("PLAYERANIMEVENT_THROW_GRENADE",0x1e);
  FUN_1029e620("PLAYERANIMEVENT_THROW_GRENADE_UNDERHAND",0x1f);
  FUN_1029e620("PLAYERANIMEVENT_THROW_SHIELD",0x28);
  FUN_1029e620("PLAYERANIMEVENT_VOICE_COMMAND_GESTURE",0x16);
  FUN_1029e620("PLAYERANIMEVENT_WAVEOVER_PISTOL",0x16d);
  FUN_1029e620("PLAYERANIMEVENT_WAVEOVER_RIFLE",0x16c);
  FUN_102a01a0(this,(int)param_1,"DemoEditorPanel",1,'\x01',0);
  FUN_102a01a0(this,iVar1,"DemoUIPanel2",1,'\x01',0);
  FUN_102a01a0(this,param_1,"CTextureListPanel",1,'\x01',0);
  FUN_102a01a0(this,param_1,"ColorCorrectionUIPanel",1,'\x01',0);
  FUN_102a01a0(this,param_1,"DemoSmootherPanel",1,'\x01',0);
  FUN_102a01a0(this,param_1,"DemoUIPanel",1,'\x01',0);
  FUN_102a01a0(this,param_1,"FileOpenDialog",1,'\x01',0);
  FUN_102a01a0(this,param_1,"FogUIPanel",1,'\x01',0);
  FUN_102a01a0(this,param_1,"LookupViewWindow",1,'\x01',0);
  FUN_102a01a0(this,param_1,"NewOperation",1,'\x01',0);
  FUN_102a01a0(this,param_1,"PerfUIPanel",1,'\x01',0);
  FUN_102a01a0(this,param_1,"PerforceFileList",1,'\x01',0);
  FUN_102a01a0(this,param_1,"SaveDocumentQuery",1,'\x01',0);
  FUN_102a01a0(this,param_1,"SkyUIPanel",1,'\x01',0);
  FUN_102a01a0(this,param_1,"TxViewPanel",1,'\x01',0);
  FUN_102a01a0(this,param_2,"BugUIPanel",1,'\x01',0);
  FUN_102a01a0(this,param_3,"MessageBox",0,'\x01',0);
  FUN_102a2a40(this,"resource/BugReporterUploadFinished.res",0,0,0);
  FUN_102a2a40(this,"resource/BugReporterUploadProgress.res",0,0,0);
  FUN_102a2a40(this,"resource/ColorBalanceUIPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/ColorCurvesUIPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/ColorLevelsUIPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/ColorLookupUIPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/DemoEditorPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/DemoSmootherPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/DemoUIPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/DemoUIPanel2.res",0,0,0);
  FUN_102a2a40(this,"resource/FogUIPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/LookupViewWindow.res",0,0,0);
  FUN_102a2a40(this,"resource/NewOperationDialog.res",0,0,0);
  FUN_102a2a40(this,"resource/PerfUIPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/SelectedHSVUIPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/SkyUIPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/ToolSaveDocumentQuery.res",0,0,0);
  FUN_102a2a40(this,"resource/TxViewPanel.res",0,0,0);
  FUN_102a2a40(this,"resource/VProfPanel.res",0,0,0);
  FUN_102a2a40(this,"resource\\DebugOptionsPanel.res",0,0,0);
  FUN_102a4390(this,"#Frame_Untitled",param_1 == 0);
  FUN_102a4390(this,"Bug Reporter",'\x01');
  FUN_102a4390(this,"Choose directory name",'\0');
  FUN_102a4390(this,"Debug Options",'\x01');
  FUN_102a4390(this,"Demo Editor",'\x01');
  FUN_102a4390(this,"Demo Playback - ",'\x01');
  FUN_102a4390(this,"Demo Playback",'\x01');
  FUN_102a4390(this,"Demo Smoother",'\x01');
  FUN_102a4390(this,"FogUI",'\x01');
  FUN_102a4390(this,"Level Performance Tools",'\x01');
  FUN_102a4390(this,"Save Changes",'\x01');
  FUN_102a4390(this,"SkyUI",'\x01');
  FUN_102a4390(this,"Texture list",'\0');
  FUN_102a4390(this,"VGUI Build Mode Editor",'\x01');
  FUN_102a4390(this,"VGUI Hierarchy",'\0');
  FUN_102a4390(this,"VProf",'\0');
  FUN_102a5400(param_1,"*.vcc","Valve Color Correction File (*.vcc)",'\x01',(char *)0x0);
  FUN_102a7d60(param_1,param_2,param_3,(uint *)"filesizeint");
  FUN_102a7d60(param_1,param_3,param_2,(uint *)"modifiedint");
  FUN_102a7e10(param_1,param_2,param_3,(uint *)"attributes");
  FUN_102a9790(param_1,"vcc_session",local_108);
  FUN_102a99e0(this,param_1,(char *)0x0,"",0);
  FUN_102a99e0(this,param_1,param_2,"",0);
  FUN_102aa6d0("models/vehicles/planes/777/engine_gibs/inner_piece-1.mdl",param_1,param_2,
  FUN_102aa6d0("models/vehicles/planes/777/engine_gibs/inner_piece-2.mdl",param_1,param_2,
  FUN_102aa6d0("models/vehicles/planes/777/engine_gibs/rotor_blade-1.mdl",param_1,param_2,
  FUN_102aa6d0("models/vehicles/planes/777/engine_gibs/rotor_blade-2.mdl",param_1,param_2,
  FUN_102b6ea0(this,param_1,param_2,"",0);
  FUN_102b7830(this,param_1,param_2,"",0);
  FUN_102c2be0(&DAT_107a370c,"CTIStaticGlobals",FUN_102c2bb0);
  FUN_102d4790(&DAT_106f1d00,(int *)"Panel",(int *)FUN_10285240);
  FUN_102d4790(&DAT_106f3304,(int *)"EditablePanel",(int *)FUN_10293e00);
  FUN_102d4790(&DAT_106f3534,(int *)"TextEntry",(int *)FUN_102962e0);
  FUN_102d4790(&DAT_106f3984,(int *)"Button",(int *)FUN_1029c670);
  FUN_102d4790(&DAT_106f3de4,(int *)"ComboBox",(int *)FUN_1029e480);
  FUN_102d4790(&DAT_106f3e14,(int *)"CheckButton",(int *)FUN_1029fc10);
  FUN_102d4790(&DAT_106f40ac,(int *)"PercentageCroppedImageLabel",(int *)FUN_102aaf00);
  FUN_102d4790(&DAT_106f5524,(int *)"ListPanel",(int *)FUN_102adfb0);
  FUN_102d4790(&DAT_106f55d0,(int *)"MenuButton",(int *)FUN_102b7110);
  FUN_102d4790(&DAT_106f55f8,(int *)"ToggleButton",(int *)FUN_102b7980);
  FUN_102d4790(&DAT_106f5628,(int *)"ImageProgressBar",(int *)FUN_102b8310);
  FUN_102d4790(&DAT_106f563c,(int *)"ProgressBar",(int *)FUN_102b8340);
  FUN_102d4790(&DAT_106f564c,(int *)"ContinuousProgressBar",(int *)FUN_102b82e0);
  FUN_102d4790(&DAT_106f5ab0,(int *)"Slider",(int *)FUN_102b9440);
  FUN_102d4790(&DAT_106f5eec,(int *)"ScrollBar",(int *)FUN_102bb6f0);
  FUN_102d4790(&DAT_106f5efc,(int *)"ScrollBar_Vertical",(int *)FUN_102bb720);
  FUN_102d4790(&DAT_106f5f0c,(int *)"ScrollBar_Horizontal",(int *)FUN_102bb6f0);
  FUN_102d4790(&DAT_106f5f40,(int *)"ListViewPanel",(int *)FUN_102bc690);
  FUN_102d4790(&DAT_106f5fb0,(int *)"RadioButton",(int *)FUN_102bf900);
  FUN_102d4790(&DAT_106f6428,(int *)"ImagePanel",(int *)FUN_102c22c0);
  FUN_102d4790(&DAT_106f685c,(int *)"AnimatingImagePanel",(int *)FUN_102c2c00);
  FUN_102d4790(&DAT_106f6c94,(int *)"CBitmapImagePanel",(int *)FUN_102c3520);
  FUN_102d4790(&DAT_106f70b4,(int *)"CvarToggleCheckButton",(int *)FUN_102c3a80);
  FUN_102d4790(&DAT_106f70e0,(int *)"Divider",(int *)FUN_102c4080);
  FUN_102d4790(&DAT_106f7110,(int *)"ExpandButton",(int *)FUN_102c4310);
  FUN_102d4790(&DAT_106f714c,(int *)"GraphPanel",(int *)FUN_102c4880);
  FUN_102d4790(&DAT_106f717c,(int *)"MenuBar",(int *)FUN_102c4f10);
  FUN_102d4790(&DAT_106f71ac,(int *)"MenuItem",(int *)FUN_102c5d40);
  FUN_102d4790(&DAT_106f71e8,(int *)"MessageBox",(int *)FUN_102c6df0);
  FUN_102d4790(&DAT_106f7220,(int *)"CircularProgressBar",(int *)FUN_102c77d0);
  FUN_102d4790(&DAT_106f7254,(int *)"RichText",(int *)FUN_102c8c80);
  FUN_102d4790(&DAT_106f76c4,(int *)"ScalableImagePanel",(int *)FUN_102cc600);
  FUN_102d4790(&DAT_106f7afc,(int *)"TreeView",(int *)FUN_102ce020);
  FUN_102d4790(&DAT_106f7b60,(int *)"CTreeViewListControl",(int *)FUN_102d2130);
  FUN_102d4790(&DAT_106f7b94,(int *)"URLLabel",(int *)FUN_102d2eb0);
  FUN_102d4790(&DAT_106f7fcc,(int *)"CountdownLabel",(int *)FUN_102d3050);
  FUN_102d4790(&DAT_106f7ff8,(int *)"MessagingPanel",(int *)FUN_102d35d0);
  FUN_102dcae0(this,"g");
  FUN_102e7c10("ACT_BARK1",0x327);
  FUN_102e7c10("ACT_BARK2",0x328);
  FUN_102e7c10("ACT_BASH_SHIELD",0x1eb);
  FUN_102e7c10("ACT_BITE1",800);
  FUN_102e7c10("ACT_BITE2",0x321);
  FUN_102e7c10("ACT_BLINDED_OVERLAY_LONG",0x2ab);
  FUN_102e7c10("ACT_BLINDED_OVERLAY_MEDIUM",0x2aa);
  FUN_102e7c10("ACT_BLINDED_OVERLAY_SHORT",0x2a9);
  FUN_102e7c10("ACT_CLIMB",0x1cd);
  FUN_102e7c10("ACT_CROUCH",0x14);
  FUN_102e7c10("ACT_CROUCHIDLE",0x15);
  FUN_102e7c10("ACT_CROUCHING_DRIVER",0x30c);
  FUN_102e7c10("ACT_CROUCHING_FORKLIFT_REAR",0x312);
  FUN_102e7c10("ACT_CROUCHING_PASSENGER_MP5",0x30e);
  FUN_102e7c10("ACT_CROUCHING_PASSENGER_PISTOL",0x30d);
  FUN_102e7c10("ACT_CROUCHWALK",0x15f);
  FUN_102e7c10("ACT_CROUCHWALK2",0x160);
  FUN_102e7c10("ACT_CROUCHWALK_AUG",0xf8);
  FUN_102e7c10("ACT_CROUCHWALK_BLINDSHOOT_1HAND",0x31c);
  FUN_102e7c10("ACT_CROUCHWALK_BLINDSHOOT_2HAND",0x318);
  FUN_102e7c10("ACT_CROUCHWALK_CARRY_1HAND",0x175);
  FUN_102e7c10("ACT_CROUCHWALK_CARRY_2HAND",0x16d);
  FUN_102e7c10("ACT_CROUCHWALK_CARRY_BLOCKADE",0x171);
  FUN_102e7c10("ACT_CROUCHWALK_DSA58",0xff);
  FUN_102e7c10("ACT_CROUCHWALK_DUAL_PISTOL",0x142);
  FUN_102e7c10("ACT_CROUCHWALK_FIRE_EXTINGUISHER",0x17c);
  FUN_102e7c10("ACT_CROUCHWALK_FP6",0x106);
  FUN_102e7c10("ACT_CROUCHWALK_GRENADE",0x10c);
  FUN_102e7c10("ACT_CROUCHWALK_KNIFE",0x112);
  FUN_102e7c10("ACT_CROUCHWALK_KNIFE_DEFEND",0x118);
  FUN_102e7c10("ACT_CROUCHWALK_M14",0x11f);
  FUN_102e7c10("ACT_CROUCHWALK_MP5",0x126);
  FUN_102e7c10("ACT_CROUCHWALK_MP7",0x12d);
  FUN_102e7c10("ACT_CROUCHWALK_ONFIRE",0x183);
  FUN_102e7c10("ACT_CROUCHWALK_P90",0x134);
  FUN_102e7c10("ACT_CROUCHWALK_PISTOL",0x13b);
  FUN_102e7c10("ACT_CROUCHWALK_RPG7",0x150);
  FUN_102e7c10("ACT_CROUCHWALK_SG551",0x149);
  FUN_102e7c10("ACT_CROUCHWALK_SHIELD",0x169);
  FUN_102e7c10("ACT_CROUCHWALK_SUITCASE",0x164);
  FUN_102e7c10("ACT_CROUCHWALK_URATIO",0x157);
  FUN_102e7c10("ACT_CROUCHWALK_UZI",0x15e);
  FUN_102e7c10("ACT_CROUCH_AIM_AUG",0xf4);
  FUN_102e7c10("ACT_CROUCH_AIM_BLINDSHOOT_1HAND",0x31a);
  FUN_102e7c10("ACT_CROUCH_AIM_BLINDSHOOT_2HAND",0x316);
  FUN_102e7c10("ACT_CROUCH_AIM_CARRY_1HAND",0x172);
  FUN_102e7c10("ACT_CROUCH_AIM_CARRY_2HAND",0x16a);
  FUN_102e7c10("ACT_CROUCH_AIM_CARRY_BLOCKADE",0x16e);
  FUN_102e7c10("ACT_CROUCH_AIM_DSA58",0xfb);
  FUN_102e7c10("ACT_CROUCH_AIM_DUAL_PISTOL",0x13e);
  FUN_102e7c10("ACT_CROUCH_AIM_FIRE_EXTINGUISHER",0x179);
  FUN_102e7c10("ACT_CROUCH_AIM_FP6",0x102);
  FUN_102e7c10("ACT_CROUCH_AIM_GRENADE",0x109);
  FUN_102e7c10("ACT_CROUCH_AIM_KNIFE",0x10f);
  FUN_102e7c10("ACT_CROUCH_AIM_M14",0x11b);
  FUN_102e7c10("ACT_CROUCH_AIM_MP5",0x122);
  FUN_102e7c10("ACT_CROUCH_AIM_MP7",0x129);
  FUN_102e7c10("ACT_CROUCH_AIM_P90",0x130);
  FUN_102e7c10("ACT_CROUCH_AIM_PISTOL",0x137);
  FUN_102e7c10("ACT_CROUCH_AIM_RPG7",0x14c);
  FUN_102e7c10("ACT_CROUCH_AIM_SG551",0x145);
  FUN_102e7c10("ACT_CROUCH_AIM_SHIELD",0x166);
  FUN_102e7c10("ACT_CROUCH_AIM_SUITCASE",0x162);
  FUN_102e7c10("ACT_CROUCH_AIM_URATIO",0x153);
  FUN_102e7c10("ACT_CROUCH_AIM_UZI",0x15a);
  FUN_102e7c10("ACT_CROUCH_DEFEND_KNIFE",0x115);
  FUN_102e7c10("ACT_CROUCH_ONFIRE",0x180);
  FUN_102e7c10("ACT_DANCING1",0x347);
  FUN_102e7c10("ACT_DANCING2",0x348);
  FUN_102e7c10("ACT_DANCING3",0x349);
  FUN_102e7c10("ACT_DANCING4",0x34a);
  FUN_102e7c10("ACT_DANCING5",0x34b);
  FUN_102e7c10("ACT_DEATH_CROUCH_HEAD",0x2ac);
  FUN_102e7c10("ACT_DEATH_CROUCH_LEFTARM",0x2ad);
  FUN_102e7c10("ACT_DEATH_CROUCH_LEFTLEG",0x2ae);
  FUN_102e7c10("ACT_DEATH_CROUCH_REAR_TORSO",0x2b1);
  FUN_102e7c10("ACT_DEATH_CROUCH_TORSO",0x2af);
  FUN_102e7c10("ACT_DEATH_CROUCH_TORSO2",0x2b0);
  FUN_102e7c10("ACT_DEATH_ONFIRE",0x2dd);
  FUN_102e7c10("ACT_DEATH_ONFIRE2",0x2de);
  FUN_102e7c10("ACT_DEATH_RUNNING_HEAD",0x2d2);
  FUN_102e7c10("ACT_DEATH_RUNNING_TORSO",0x2ce);
  FUN_102e7c10("ACT_DEATH_RUNNING_TORSO2",0x2f6);
  FUN_102e7c10("ACT_DEATH_RUNNING_UPPERTORSO",0x2cf);
  FUN_102e7c10("ACT_DEATH_RUNNING_UPPERTORSO2",0x2d0);
  FUN_102e7c10("ACT_DEATH_RUNNING_UPPERTORSO3",0x2d1);
  FUN_102e7c10("ACT_DEATH_RUNNING_UPPERTORSO4",0x2f7);
  FUN_102e7c10("ACT_DEATH_STANDING_GROIN",0x2b2);
  FUN_102e7c10("ACT_DEATH_STANDING_HEAD",0x2b3);
  FUN_102e7c10("ACT_DEATH_STANDING_HEAD2",0x2b4);
  FUN_102e7c10("ACT_DEATH_STANDING_HEAD3",0x2b5);
  FUN_102e7c10("ACT_DEATH_STANDING_HEAD4",0x2df);
  FUN_102e7c10("ACT_DEATH_STANDING_HEAD5",0x2e0);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFTARM",0x2b6);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFTARM2",0x2b7);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFTLEG",0x2b8);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFTLEG2",0x2b9);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFT_LOWERTORSO",0x2d4);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFT_LOWERTORSO2",0x2ee);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFT_LOWERTORSO3",0x2ef);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFT_UPPERTORSO",0x2d3);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFT_UPPERTORSO2",0x2ec);
  FUN_102e7c10("ACT_DEATH_STANDING_LEFT_UPPERTORSO3",0x2ed);
  FUN_102e7c10("ACT_DEATH_STANDING_LEG_FRONT",0x2f3);
  FUN_102e7c10("ACT_DEATH_STANDING_LEG_FRONT2",0x2f4);
  FUN_102e7c10("ACT_DEATH_STANDING_LEG_REAR",0x2f5);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO",0x2ba);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO10",0x2e3);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO2",699);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO3",700);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO4",0x2bd);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO5",0x2d7);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO6",0x2d8);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO7",0x2d9);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO8",0x2e1);
  FUN_102e7c10("ACT_DEATH_STANDING_LOWERTORSO9",0x2e2);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO",0x2be);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO10",0x2e7);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO2",0x2bf);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO3",0x2c0);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO4",0x2da);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO5",0x2db);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO6",0x2dc);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO7",0x2e4);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO8",0x2e5);
  FUN_102e7c10("ACT_DEATH_STANDING_REAR_TORSO9",0x2e6);
  FUN_102e7c10("ACT_DEATH_STANDING_RIGHTARM",0x2c1);
  FUN_102e7c10("ACT_DEATH_STANDING_RIGHTARM2",0x2c2);
  FUN_102e7c10("ACT_DEATH_STANDING_RIGHTLEG",0x2c3);
  FUN_102e7c10("ACT_DEATH_STANDING_RIGHTLEG2",0x2c4);
  FUN_102e7c10("ACT_DEATH_STANDING_RIGHT_LOWERTORSO",0x2d6);
  FUN_102e7c10("ACT_DEATH_STANDING_RIGHT_LOWERTORSO2",0x2f1);
  FUN_102e7c10("ACT_DEATH_STANDING_RIGHT_LOWERTORSO3",0x2f2);
  FUN_102e7c10("ACT_DEATH_STANDING_RIGHT_UPPERTORSO",0x2d5);
  FUN_102e7c10("ACT_DEATH_STANDING_RIGHT_UPPERTORSO2",0x2f0);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO",0x2c5);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO10",0x2e8);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO11",0x2e9);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO12",0x2ea);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO13",0x2eb);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO2",0x2c6);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO3",0x2c7);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO4",0x2c8);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO5",0x2c9);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO6",0x2ca);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO7",0x2cb);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO8",0x2cc);
  FUN_102e7c10("ACT_DEATH_STANDING_UPPERTORSO9",0x2cd);
  FUN_102e7c10("ACT_DEATH_VEHICLE_LEAN_LEFT",0x2fd);
  FUN_102e7c10("ACT_DEATH_VEHICLE_LEAN_LEFT2",0x2fe);
  FUN_102e7c10("ACT_DEATH_VEHICLE_LEAN_RIGHT",0x2ff);
  FUN_102e7c10("ACT_DEATH_VEHICLE_LEAN_RIGHT2",0x300);
  FUN_102e7c10("ACT_DEATH_VEHICLE_SITTING",0x2f8);
  FUN_102e7c10("ACT_DEATH_VEHICLE_SITTING2",0x2f9);
  FUN_102e7c10("ACT_DEATH_VEHICLE_SITTING3",0x2fa);
  FUN_102e7c10("ACT_DEATH_VEHICLE_SITTING4",0x2fb);
  FUN_102e7c10("ACT_DEATH_VEHICLE_SITTING5",0x2fc);
  FUN_102e7c10("ACT_DEPLOY_AUG",0x1b9);
  FUN_102e7c10("ACT_DEPLOY_DSA58",0x1b8);
  FUN_102e7c10("ACT_DEPLOY_DUAL_PISTOL",0x1c4);
  FUN_102e7c10("ACT_DEPLOY_FP6",0x1ba);
  FUN_102e7c10("ACT_DEPLOY_GRENADE",0x1cc);
  FUN_102e7c10("ACT_DEPLOY_KNIFE",0x1cb);
  FUN_102e7c10("ACT_DEPLOY_M14",0x1bb);
  FUN_102e7c10("ACT_DEPLOY_MG4",0x1bd);
  FUN_102e7c10("ACT_DEPLOY_MP5",0x1bc);
  FUN_102e7c10("ACT_DEPLOY_MP7",0x1be);
  FUN_102e7c10("ACT_DEPLOY_P90",0x1bf);
  FUN_102e7c10("ACT_DEPLOY_PISTOL",0x1c1);
  FUN_102e7c10("ACT_DEPLOY_PISTOL_BACK",0x1c3);
  FUN_102e7c10("ACT_DEPLOY_PISTOL_TORSO",0x1c2);
  FUN_102e7c10("ACT_DEPLOY_REVOLVER",0x1c5);
  FUN_102e7c10("ACT_DEPLOY_REVOLVER_BACK",0x1c7);
  FUN_102e7c10("ACT_DEPLOY_REVOLVER_TORSO",0x1c6);
  FUN_102e7c10("ACT_DEPLOY_RPG7",0x1c0);
  FUN_102e7c10("ACT_DEPLOY_SG551",0x1c8);
  FUN_102e7c10("ACT_DEPLOY_URATIO",0x1c9);
  FUN_102e7c10("ACT_DEPLOY_UZI",0x1ca);
  FUN_102e7c10("ACT_DIERAGDOLL",0xf);
  FUN_102e7c10("ACT_DO_NOT_DISTURB",0x22);
  FUN_102e7c10("ACT_EXPLODEBACK_E",0x238);
  FUN_102e7c10("ACT_EXPLODEBACK_FLOAT_E",0x240);
  FUN_102e7c10("ACT_EXPLODEBACK_FLOAT_N",0x23f);
  FUN_102e7c10("ACT_EXPLODEBACK_FLOAT_S",0x241);
  FUN_102e7c10("ACT_EXPLODEBACK_FLOAT_W",0x242);
  FUN_102e7c10("ACT_EXPLODEBACK_LAND_E",0x23c);
  FUN_102e7c10("ACT_EXPLODEBACK_LAND_N",0x23b);
  FUN_102e7c10("ACT_EXPLODEBACK_LAND_S",0x23d);
  FUN_102e7c10("ACT_EXPLODEBACK_LAND_W",0x23e);
  FUN_102e7c10("ACT_EXPLODEBACK_N",0x237);
  FUN_102e7c10("ACT_EXPLODEBACK_S",0x239);
  FUN_102e7c10("ACT_EXPLODEBACK_W",0x23a);
  FUN_102e7c10("ACT_FASTROPE",0x20e);
  FUN_102e7c10("ACT_FASTROPE_CLIMB",0x20f);
  FUN_102e7c10("ACT_FASTROPE_DESCEND",0x210);
  FUN_102e7c10("ACT_FIRSTPERSON_ROLL",0x211);
  FUN_102e7c10("ACT_FLINCH_CROUCH_HEAD",0x212);
  FUN_102e7c10("ACT_FLINCH_CROUCH_HEAD2",0x213);
  FUN_102e7c10("ACT_FLINCH_CROUCH_LEFTARM",0x214);
  FUN_102e7c10("ACT_FLINCH_CROUCH_LEFTLEG",0x215);
  FUN_102e7c10("ACT_FLINCH_CROUCH_LEFT_HEAD",0x21f);
  FUN_102e7c10("ACT_FLINCH_CROUCH_LEFT_LOWERTORSO",0x21d);
  FUN_102e7c10("ACT_FLINCH_CROUCH_LEFT_UPPERTORSO",0x21e);
  FUN_102e7c10("ACT_FLINCH_CROUCH_LOWERTORSO",0x216);
  FUN_102e7c10("ACT_FLINCH_CROUCH_REAR_HEAD",0x217);
  FUN_102e7c10("ACT_FLINCH_CROUCH_REAR_HEAD2",0x218);
  FUN_102e7c10("ACT_FLINCH_CROUCH_REAR_LOWERTORSO",0x219);
  FUN_102e7c10("ACT_FLINCH_CROUCH_REAR_LOWERTORSO2",0x21a);
  FUN_102e7c10("ACT_FLINCH_CROUCH_REAR_UPPERTORSO",0x21b);
  FUN_102e7c10("ACT_FLINCH_CROUCH_REAR_UPPERTORSO2",0x21c);
  FUN_102e7c10("ACT_FLINCH_CROUCH_RIGHTARM",0x223);
  FUN_102e7c10("ACT_FLINCH_CROUCH_RIGHTLEG",0x224);
  FUN_102e7c10("ACT_FLINCH_CROUCH_RIGHT_HEAD",0x222);
  FUN_102e7c10("ACT_FLINCH_CROUCH_RIGHT_LOWERTORSO",0x220);
  FUN_102e7c10("ACT_FLINCH_CROUCH_RIGHT_UPPERTORSO",0x221);
  FUN_102e7c10("ACT_FLINCH_CROUCH_UPPERTORSO",0x225);
  FUN_102e7c10("ACT_FLINCH_CROUCH_UPPERTORSO2",0x226);
  FUN_102e7c10("ACT_FLINCH_DOG1",0x32b);
  FUN_102e7c10("ACT_FLINCH_DOG2",0x32c);
  FUN_102e7c10("ACT_FLINCH_DOG3",0x32d);
  FUN_102e7c10("ACT_FLINCH_DOG4",0x32e);
  FUN_102e7c10("ACT_FLINCH_DOG5",0x32f);
  FUN_102e7c10("ACT_FLINCH_GROIN",0x24c);
  FUN_102e7c10("ACT_FLINCH_HEAD",0x24d);
  FUN_102e7c10("ACT_FLINCH_HEAD2",0x24e);
  FUN_102e7c10("ACT_FLINCH_HEAD3",0x256);
  FUN_102e7c10("ACT_FLINCH_HOSTAGEGRAB_HEAD",0x272);
  FUN_102e7c10("ACT_FLINCH_HOSTAGEGRAB_LEFTLEG",0x26e);
  FUN_102e7c10("ACT_FLINCH_HOSTAGEGRAB_LOWERTORSO",0x273);
  FUN_102e7c10("ACT_FLINCH_HOSTAGEGRAB_LOWERTORSO2",0x274);
  FUN_102e7c10("ACT_FLINCH_HOSTAGEGRAB_REAR_LOWERTORSO",0x270);
  FUN_102e7c10("ACT_FLINCH_HOSTAGEGRAB_REAR_UPPERTORSO",0x271);
  FUN_102e7c10("ACT_FLINCH_HOSTAGEGRAB_RIGHTLEG",0x26f);
  FUN_102e7c10("ACT_FLINCH_HOSTAGEGRAB_UPPERTORSO",0x275);
  FUN_102e7c10("ACT_FLINCH_HOSTAGEGRAB_UPPERTORSO2",0x276);
  FUN_102e7c10("ACT_FLINCH_LEFTARM",0x24f);
  FUN_102e7c10("ACT_FLINCH_LEFTLEG",0x250);
  FUN_102e7c10("ACT_FLINCH_LEFTLEG2",0x251);
  FUN_102e7c10("ACT_FLINCH_LEFT_HEAD",0x262);
  FUN_102e7c10("ACT_FLINCH_LEFT_LOWERTORSO",0x25e);
  FUN_102e7c10("ACT_FLINCH_LEFT_LOWERTORSO2",0x25f);
  FUN_102e7c10("ACT_FLINCH_LEFT_UPPERTORSO",0x260);
  FUN_102e7c10("ACT_FLINCH_LEFT_UPPERTORSO2",0x261);
  FUN_102e7c10("ACT_FLINCH_LOWERTORSO",0x252);
  FUN_102e7c10("ACT_FLINCH_LOWERTORSO2",0x253);
  FUN_102e7c10("ACT_FLINCH_LOWERTORSO3",0x254);
  FUN_102e7c10("ACT_FLINCH_LOWERTORSO4",0x255);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_CAR_SITTING_BACK",0x2a0);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_CAR_SITTING_FRONT",0x29f);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_CAR_SITTING_LEFT",0x2a1);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_CAR_SITTING_RIGHT",0x2a2);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_DOG1",0x330);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_DOG2",0x331);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_DOG3",0x332);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_DOG4",0x333);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_DOG5",0x334);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_HEAD",0x27c);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_HEAD2",0x27d);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_HEAD3",0x27e);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_HEAD",0x279);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_LOWERTORSO",0x27a);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_REAR_LOWERTORSO",0x277);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_REAR_UPPERTORSO",0x278);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_HOSTAGEGRAB_UPPERTORSO",0x27b);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_LEFTARM",0x27f);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_LEFT_HEAD",0x290);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_LEFT_UPPERTORSO",0x28e);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_LEFT_UPPERTORSO2",0x28f);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_LOWERTORSO",0x280);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_LOWERTORSO2",0x281);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_MOVINGOBJECT_HEAD",0x2a7);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_MOVINGOBJECT_LEFT_TORSO",0x2a5);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_MOVINGOBJECT_LOWERTORSO",0x2a4);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_MOVINGOBJECT_RIGHT_TORSO",0x2a6);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_MOVINGOBJECT_UPPERTORSO",0x2a3);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_REAR_HEAD",0x282);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_REAR_HEAD2",0x283);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_REAR_LOWERTORSO",0x284);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_REAR_LOWERTORSO2",0x285);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_REAR_UPPERTORSO",0x286);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_REAR_UPPERTORSO2",0x287);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_RIGHTARM",0x288);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_RIGHT_HEAD",0x28d);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_RIGHT_UPPERTORSO",0x28b);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_RIGHT_UPPERTORSO2",0x28c);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SHIELD_BACK",0x299);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SHIELD_BACK2",0x29a);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SHIELD_FRONT",0x296);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SHIELD_FRONT2",0x297);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SHIELD_FRONT3",0x298);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SHIELD_LEFT",0x29b);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SHIELD_LEFT2",0x29c);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SHIELD_RIGHT",0x29d);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SHIELD_RIGHT2",0x29e);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SUITCASE_HEAD",0x291);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SUITCASE_LOWERTORSO",0x294);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SUITCASE_LOWERTORSO2",0x295);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SUITCASE_UPPERTORSO",0x292);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_SUITCASE_UPPERTORSO2",0x293);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_UPPERTORSO",0x289);
  FUN_102e7c10("ACT_FLINCH_OVERLAY_UPPERTORSO2",0x28a);
  FUN_102e7c10("ACT_FLINCH_REAR_HEAD",599);
  FUN_102e7c10("ACT_FLINCH_REAR_HEAD2",600);
  FUN_102e7c10("ACT_FLINCH_REAR_LOWERTORSO",0x259);
  FUN_102e7c10("ACT_FLINCH_REAR_LOWERTORSO2",0x25a);
  FUN_102e7c10("ACT_FLINCH_REAR_LOWERTORSO3",0x25b);
  FUN_102e7c10("ACT_FLINCH_REAR_UPPERTORSO",0x25c);
  FUN_102e7c10("ACT_FLINCH_REAR_UPPERTORSO2",0x25d);
  FUN_102e7c10("ACT_FLINCH_RIGHTARM",0x268);
  FUN_102e7c10("ACT_FLINCH_RIGHTLEG",0x269);
  FUN_102e7c10("ACT_FLINCH_RIGHTLEG2",0x26a);
  FUN_102e7c10("ACT_FLINCH_RIGHT_HEAD",0x267);
  FUN_102e7c10("ACT_FLINCH_RIGHT_LOWERTORSO",0x263);
  FUN_102e7c10("ACT_FLINCH_RIGHT_LOWERTORSO2",0x264);
  FUN_102e7c10("ACT_FLINCH_RIGHT_UPPERTORSO",0x265);
  FUN_102e7c10("ACT_FLINCH_RIGHT_UPPERTORSO2",0x266);
  FUN_102e7c10("ACT_FLINCH_SHIELD_BACK",0x246);
  FUN_102e7c10("ACT_FLINCH_SHIELD_BACK2",0x247);
  FUN_102e7c10("ACT_FLINCH_SHIELD_FRONT",0x243);
  FUN_102e7c10("ACT_FLINCH_SHIELD_FRONT2",0x244);
  FUN_102e7c10("ACT_FLINCH_SHIELD_FRONT3",0x245);
  FUN_102e7c10("ACT_FLINCH_SHIELD_LEFT",0x24a);
  FUN_102e7c10("ACT_FLINCH_SHIELD_LEFT2",0x24b);
  FUN_102e7c10("ACT_FLINCH_SHIELD_RIGHT",0x248);
  FUN_102e7c10("ACT_FLINCH_SHIELD_RIGHT2",0x249);
  FUN_102e7c10("ACT_FLINCH_UPPERTORSO",0x26b);
  FUN_102e7c10("ACT_FLINCH_UPPERTORSO2",0x26c);
  FUN_102e7c10("ACT_FLINCH_UPPERTORSO3",0x26d);
  FUN_102e7c10("ACT_FLY",0x10);
  FUN_102e7c10("ACT_FREEFALL",0x1ce);
  FUN_102e7c10("ACT_GESTURE_DOG1",0x31d);
  FUN_102e7c10("ACT_GESTURE_DOG2",0x31e);
  FUN_102e7c10("ACT_GESTURE_DOG3",799);
  FUN_102e7c10("ACT_GESTURE_NPC_CALM1",0x335);
  FUN_102e7c10("ACT_GESTURE_NPC_CALM2",0x336);
  FUN_102e7c10("ACT_GESTURE_NPC_CALM3",0x337);
  FUN_102e7c10("ACT_GESTURE_NPC_CALM4",0x338);
  FUN_102e7c10("ACT_GESTURE_NPC_CALM5",0x339);
  FUN_102e7c10("ACT_GESTURE_NPC_CRY",0x360);
  FUN_102e7c10("ACT_GESTURE_NPC_HOLDCASE_WAVE",0x363);
  FUN_102e7c10("ACT_GESTURE_NPC_LOOKAROUND",0x35e);
  FUN_102e7c10("ACT_GESTURE_NPC_LOOKAROUND2",0x35f);
  FUN_102e7c10("ACT_GESTURE_NPC_SCARED1",0x33a);
  FUN_102e7c10("ACT_GESTURE_NPC_SCARED2",0x33b);
  FUN_102e7c10("ACT_GESTURE_NPC_SCARED3",0x33c);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM1",0x34c);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM10",0x355);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM11",0x356);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM12",0x357);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM2",0x34d);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM3",0x34e);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM4",0x34f);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM5",0x350);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM6",0x351);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM7",0x352);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM8",0x353);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_CALM9",0x354);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_SCARED1",0x358);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_SCARED2",0x359);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_SCARED3",0x35a);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_STARTLED1",0x35b);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_STARTLED2",0x35c);
  FUN_102e7c10("ACT_GESTURE_NPC_SITTING_STARTLED3",0x35d);
  FUN_102e7c10("ACT_GESTURE_NPC_STARTLED1",0x33e);
  FUN_102e7c10("ACT_GESTURE_NPC_STARTLED2",0x33f);
  FUN_102e7c10("ACT_GESTURE_NPC_STARTLED3",0x340);
  FUN_102e7c10("ACT_GESTURE_NPC_VOMIT",0x33d);
  FUN_102e7c10("ACT_GESTURE_NPC_WAVEHANDS_SCARED",0x361);
  FUN_102e7c10("ACT_GESTURE_NPC_WAVEHANDS_SCARED2",0x362);
  FUN_102e7c10("ACT_GRABBEDIDLE",0x206);
  FUN_102e7c10("ACT_GRABBEDWALK",0x205);
  FUN_102e7c10("ACT_HALT_PISTOL",0x381);
  FUN_102e7c10("ACT_HALT_RIFLE",0x380);
  FUN_102e7c10("ACT_HOSTAGEGRAB_IDLE",0x201);
  FUN_102e7c10("ACT_HOSTAGEGRAB_KICKAWAY",0x203);
  FUN_102e7c10("ACT_HOSTAGEGRAB_KICKAWAY_FIRSTPERSON",0x204);
  FUN_102e7c10("ACT_HOSTAGEGRAB_RELEASETHROW",0x202);
  FUN_102e7c10("ACT_HOSTAGEGRAB_WALK",0x200);
  FUN_102e7c10("ACT_HURTIDLE",0x344);
  FUN_102e7c10("ACT_HURTWALK",0x343);
  FUN_102e7c10("ACT_IDLE",1);
  FUN_102e7c10("ACT_IDLE_AGITATED",0x1b);
  FUN_102e7c10("ACT_IDLE_ANGRY",0x18);
  FUN_102e7c10("ACT_IDLE_HURT",0x1d);
  FUN_102e7c10("ACT_IDLE_RELAXED",0x19);
  FUN_102e7c10("ACT_IDLE_STEALTH",0x1c);
  FUN_102e7c10("ACT_IDLE_STIMULATED",0x1a);
  FUN_102e7c10("ACT_JUMP",0x12);
  FUN_102e7c10("ACT_JUMP_BITE1",0x322);
  FUN_102e7c10("ACT_JUMP_BITE2",0x323);
  FUN_102e7c10("ACT_JUMP_CASE_INPLACE",0x1db);
  FUN_102e7c10("ACT_JUMP_CASE_LANDING",0x1dc);
  FUN_102e7c10("ACT_JUMP_CASE_RUNNING_EAST",0x1df);
  FUN_102e7c10("ACT_JUMP_CASE_RUNNING_NORTH",0x1dd);
  FUN_102e7c10("ACT_JUMP_CASE_RUNNING_SOUTH",0x1de);
  FUN_102e7c10("ACT_JUMP_CASE_RUNNING_WEST",0x1e0);
  FUN_102e7c10("ACT_JUMP_INPLACE",0x1e1);
  FUN_102e7c10("ACT_JUMP_LANDING",0x1e2);
  FUN_102e7c10("ACT_JUMP_PISTOL_INPLACE",0x1d5);
  FUN_102e7c10("ACT_JUMP_PISTOL_LANDING",0x1d6);
  FUN_102e7c10("ACT_JUMP_PISTOL_RUNNING_EAST",0x1d9);
  FUN_102e7c10("ACT_JUMP_PISTOL_RUNNING_NORTH",0x1d7);
  FUN_102e7c10("ACT_JUMP_PISTOL_RUNNING_SOUTH",0x1d8);
  FUN_102e7c10("ACT_JUMP_PISTOL_RUNNING_WEST",0x1da);
  FUN_102e7c10("ACT_JUMP_RIFLE_INPLACE",0x1cf);
  FUN_102e7c10("ACT_JUMP_RIFLE_LANDING",0x1d0);
  FUN_102e7c10("ACT_JUMP_RIFLE_RUNNING_EAST",0x1d3);
  FUN_102e7c10("ACT_JUMP_RIFLE_RUNNING_NORTH",0x1d1);
  FUN_102e7c10("ACT_JUMP_RIFLE_RUNNING_SOUTH",0x1d2);
  FUN_102e7c10("ACT_JUMP_RIFLE_RUNNING_WEST",0x1d4);
  FUN_102e7c10("ACT_JUMP_RUNNING_EAST",0x1e5);
  FUN_102e7c10("ACT_JUMP_RUNNING_NORTH",0x1e3);
  FUN_102e7c10("ACT_JUMP_RUNNING_SOUTH",0x1e4);
  FUN_102e7c10("ACT_JUMP_RUNNING_WEST",0x1e6);
  FUN_102e7c10("ACT_KICK_LOW",0x1e9);
  FUN_102e7c10("ACT_KICK_MID",0x1e7);
  FUN_102e7c10("ACT_KICK_MID_FIRSTPERSON",0x1e8);
  FUN_102e7c10("ACT_KNOCKBACK",0x1ff);
  FUN_102e7c10("ACT_KNOCKBACK2_E",0x22c);
  FUN_102e7c10("ACT_KNOCKBACK2_N",0x22e);
  FUN_102e7c10("ACT_KNOCKBACK2_S",0x22b);
  FUN_102e7c10("ACT_KNOCKBACK2_W",0x22d);
  FUN_102e7c10("ACT_KNOCKBACK3_E",0x230);
  FUN_102e7c10("ACT_KNOCKBACK3_N",0x232);
  FUN_102e7c10("ACT_KNOCKBACK3_S",0x22f);
  FUN_102e7c10("ACT_KNOCKBACK3_W",0x231);
  FUN_102e7c10("ACT_KNOCKBACK4_E",0x234);
  FUN_102e7c10("ACT_KNOCKBACK4_N",0x236);
  FUN_102e7c10("ACT_KNOCKBACK4_S",0x233);
  FUN_102e7c10("ACT_KNOCKBACK4_W",0x235);
  FUN_102e7c10("ACT_KNOCKBACK_E",0x228);
  FUN_102e7c10("ACT_KNOCKBACK_N",0x22a);
  FUN_102e7c10("ACT_KNOCKBACK_S",0x227);
  FUN_102e7c10("ACT_KNOCKBACK_W",0x229);
  FUN_102e7c10("ACT_LAND",0x13);
  FUN_102e7c10("ACT_LIMP_LEFTLEG",0x1fc);
  FUN_102e7c10("ACT_LIMP_RIGHTLEG",0x1fd);
  FUN_102e7c10("ACT_MELEE_PISTOL",0x37d);
  FUN_102e7c10("ACT_MELEE_RIFLE",0x37c);
  FUN_102e7c10("ACT_MIDAIR",0x324);
  FUN_102e7c10("ACT_MP_ATTACK_STAND_PRIMARYFIRE",0x47);
  FUN_102e7c10("ACT_MP_ATTACK_STAND_SECONDARYFIRE",0x48);
  FUN_102e7c10("ACT_MP_ATTACK_SWIM_PRIMARYFIRE",0x49);
  FUN_102e7c10("ACT_MP_ATTACK_SWIM_SECONDARYFIRE",0x4a);
  FUN_102e7c10("ACT_MP_CROUCHWALK",0x44);
  FUN_102e7c10("ACT_MP_CROUCH_IDLE",0x3d);
  FUN_102e7c10("ACT_MP_DEPLOYED",0x46);
  FUN_102e7c10("ACT_MP_RELOAD_CROUCH",0x4e);
  FUN_102e7c10("ACT_MP_RELOAD_CROUCH_END",0x50);
  FUN_102e7c10("ACT_MP_RELOAD_CROUCH_LOOP",0x4f);
  FUN_102e7c10("ACT_MP_RELOAD_STAND",0x4b);
  FUN_102e7c10("ACT_MP_RELOAD_STAND_END",0x4d);
  FUN_102e7c10("ACT_MP_RELOAD_STAND_LOOP",0x4c);
  FUN_102e7c10("ACT_MP_RELOAD_SWIM",0x51);
  FUN_102e7c10("ACT_MP_RELOAD_SWIM_END",0x53);
  FUN_102e7c10("ACT_MP_RELOAD_SWIM_LOOP",0x52);
  FUN_102e7c10("ACT_MP_RUN",0x3e);
  FUN_102e7c10("ACT_MP_RUN_GUNUP",0x40);
  FUN_102e7c10("ACT_MP_RUN_UNAIMED",0x3f);
  FUN_102e7c10("ACT_MP_STAND_IDLE",0x3c);
  FUN_102e7c10("ACT_MP_SWIM",0x45);
  FUN_102e7c10("ACT_MP_WALK",0x43);
  FUN_102e7c10("ACT_ONFIRE_OVERLAY",0x2a8);
  FUN_102e7c10("ACT_OVERLAY_DROP_1HAND_OBJECT",0x382);
  FUN_102e7c10("ACT_OVERLAY_DROP_2HAND_OBJECT",899);
  FUN_102e7c10("ACT_PULLPIN_GRENADE",0x19d);
  FUN_102e7c10("ACT_RANGE_ATTACK1",0xd);
  FUN_102e7c10("ACT_RANGE_ATTACK2",0xe);
  FUN_102e7c10("ACT_RAPPEL",0x209);
  FUN_102e7c10("ACT_RAPPEL_JUMP",0x20a);
  FUN_102e7c10("ACT_RAPPEL_JUMP_FIRSTPERSON",0x20c);
  FUN_102e7c10("ACT_RAPPEL_LAND",0x20b);
  FUN_102e7c10("ACT_RAPPEL_LAND_FIRSTPERSON",0x20d);
  FUN_102e7c10("ACT_RELOAD_AUG",0x1a9);
  FUN_102e7c10("ACT_RELOAD_DSA58",0x1a8);
  FUN_102e7c10("ACT_RELOAD_DUAL_PISTOL",0x1b2);
  FUN_102e7c10("ACT_RELOAD_FP6",0x1aa);
  FUN_102e7c10("ACT_RELOAD_M14",0x1ab);
  FUN_102e7c10("ACT_RELOAD_MG4",0x1ad);
  FUN_102e7c10("ACT_RELOAD_MP5",0x1ac);
  FUN_102e7c10("ACT_RELOAD_MP7",0x1ae);
  FUN_102e7c10("ACT_RELOAD_P90",0x1af);
  FUN_102e7c10("ACT_RELOAD_PISTOL",0x1b1);
  FUN_102e7c10("ACT_RELOAD_PISTOL_1HAND",0x1b7);
  FUN_102e7c10("ACT_RELOAD_REVOLVER",0x1b3);
  FUN_102e7c10("ACT_RELOAD_RPG7",0x1b0);
  FUN_102e7c10("ACT_RELOAD_SG551",0x1b4);
  FUN_102e7c10("ACT_RELOAD_URATIO",0x1b5);
  FUN_102e7c10("ACT_RELOAD_UZI",0x1b6);
  FUN_102e7c10("ACT_RESET",0);
  FUN_102e7c10("ACT_ROLL_CROUCH_EAST",0x1f7);
  FUN_102e7c10("ACT_ROLL_CROUCH_NORTH",500);
  FUN_102e7c10("ACT_ROLL_CROUCH_NORTHEAST",0x1f5);
  FUN_102e7c10("ACT_ROLL_CROUCH_NORTHWEST",0x1f6);
  FUN_102e7c10("ACT_ROLL_CROUCH_SOUTH",0x1f8);
  FUN_102e7c10("ACT_ROLL_CROUCH_SOUTHEAST",0x1f9);
  FUN_102e7c10("ACT_ROLL_CROUCH_SOUTHWEST",0x1fa);
  FUN_102e7c10("ACT_ROLL_CROUCH_WEST",0x1fb);
  FUN_102e7c10("ACT_ROLL_EAST",0x1ef);
  FUN_102e7c10("ACT_ROLL_NORTH",0x1ec);
  FUN_102e7c10("ACT_ROLL_NORTHEAST",0x1ee);
  FUN_102e7c10("ACT_ROLL_NORTHWEST",0x1ed);
  FUN_102e7c10("ACT_ROLL_SOUTH",0x1f0);
  FUN_102e7c10("ACT_ROLL_SOUTHEAST",0x1f2);
  FUN_102e7c10("ACT_ROLL_SOUTHWEST",0x1f1);
  FUN_102e7c10("ACT_ROLL_WEST",499);
  FUN_102e7c10("ACT_RUN",8);
  FUN_102e7c10("ACT_RUN_AIM",9);
  FUN_102e7c10("ACT_RUN_AUG",0xf5);
  FUN_102e7c10("ACT_RUN_CARRY_1HAND",0x176);
  FUN_102e7c10("ACT_RUN_CROUCH",10);
  FUN_102e7c10("ACT_RUN_CROUCH_AIM",0xb);
  FUN_102e7c10("ACT_RUN_DSA58",0xfc);
  FUN_102e7c10("ACT_RUN_DUAL_PISTOL",0x13f);
  FUN_102e7c10("ACT_RUN_FIRE_EXTINGUISHER",0x17a);
  FUN_102e7c10("ACT_RUN_FP6",0x103);
  FUN_102e7c10("ACT_RUN_GRENADE",0x10a);
  FUN_102e7c10("ACT_RUN_GUNUP_PISTOL",0x41);
  FUN_102e7c10("ACT_RUN_GUNUP_RIFLE",0x42);
  FUN_102e7c10("ACT_RUN_KNIFE",0x110);
  FUN_102e7c10("ACT_RUN_KNIFE_DEFEND",0x116);
  FUN_102e7c10("ACT_RUN_M14",0x11c);
  FUN_102e7c10("ACT_RUN_MP5",0x123);
  FUN_102e7c10("ACT_RUN_MP7",0x12a);
  FUN_102e7c10("ACT_RUN_ONFIRE",0x181);
  FUN_102e7c10("ACT_RUN_P90",0x131);
  FUN_102e7c10("ACT_RUN_PISTOL",0x138);
  FUN_102e7c10("ACT_RUN_PROTECTED",0xc);
  FUN_102e7c10("ACT_RUN_RPG7",0x14d);
  FUN_102e7c10("ACT_RUN_SG551",0x146);
  FUN_102e7c10("ACT_RUN_SUITCASE",99);
  FUN_102e7c10("ACT_RUN_UNAIMED_AUG",0xf6);
  FUN_102e7c10("ACT_RUN_UNAIMED_CARRY_1HAND",0x177);
  FUN_102e7c10("ACT_RUN_UNAIMED_DSA58",0xfd);
  FUN_102e7c10("ACT_RUN_UNAIMED_DUAL_PISTOL",0x141);
  FUN_102e7c10("ACT_RUN_UNAIMED_FP6",0x104);
  FUN_102e7c10("ACT_RUN_UNAIMED_M14",0x11d);
  FUN_102e7c10("ACT_RUN_UNAIMED_MP5",0x124);
  FUN_102e7c10("ACT_RUN_UNAIMED_MP7",299);
  FUN_102e7c10("ACT_RUN_UNAIMED_P90",0x132);
  FUN_102e7c10("ACT_RUN_UNAIMED_PISTOL",0x13a);
  FUN_102e7c10("ACT_RUN_UNAIMED_RPG7",0x14e);
  FUN_102e7c10("ACT_RUN_UNAIMED_SG551",0x147);
  FUN_102e7c10("ACT_RUN_UNAIMED_SHIELD",0x167);
  FUN_102e7c10("ACT_RUN_UNAIMED_URATIO",0x155);
  FUN_102e7c10("ACT_RUN_UNAIMED_UZI",0x15c);
  FUN_102e7c10("ACT_RUN_URATIO",0x154);
  FUN_102e7c10("ACT_RUN_UZI",0x15b);
  FUN_102e7c10("ACT_SCAREDIDLE",0x207);
  FUN_102e7c10("ACT_SCAREDWALK",0x17d);
  FUN_102e7c10("ACT_SCAREDWALK2",0x17e);
  FUN_102e7c10("ACT_SCRIPT_CUSTOM_MOVE",3);
  FUN_102e7c10("ACT_SHOOT_AUG",0x187);
  FUN_102e7c10("ACT_SHOOT_BEKAS",0x189);
  FUN_102e7c10("ACT_SHOOT_BLIND_1HAND",0x199);
  FUN_102e7c10("ACT_SHOOT_BLIND_2HAND",0x198);
  FUN_102e7c10("ACT_SHOOT_DSA58",0x186);
  FUN_102e7c10("ACT_SHOOT_DUAL_PISTOL_LEFT",0x192);
  FUN_102e7c10("ACT_SHOOT_DUAL_PISTOL_RIGHT",0x193);
  FUN_102e7c10("ACT_SHOOT_FP6",0x188);
  FUN_102e7c10("ACT_SHOOT_GRENADE",0x18a);
  FUN_102e7c10("ACT_SHOOT_GRENADE_UNDERHAND",0x18b);
  FUN_102e7c10("ACT_SHOOT_M14",0x18c);
  FUN_102e7c10("ACT_SHOOT_MP5",0x18d);
  FUN_102e7c10("ACT_SHOOT_MP7",0x18e);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_AUG",0x19b);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_DSA58",0x19a);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_FP6",0x19c);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_M14",0x19e);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_MP5",0x19f);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_MP7",0x1a0);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_P90",0x1a1);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_PISTOL",0x1a3);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_REVOLVER",0x1a4);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_RPG7",0x1a2);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_SG551",0x1a5);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_URATIO",0x1a6);
  FUN_102e7c10("ACT_SHOOT_ONEHANDED_UZI",0x1a7);
  FUN_102e7c10("ACT_SHOOT_P90",399);
  FUN_102e7c10("ACT_SHOOT_PISTOL",0x191);
  FUN_102e7c10("ACT_SHOOT_REVOLVER",0x194);
  FUN_102e7c10("ACT_SHOOT_RPG7",400);
  FUN_102e7c10("ACT_SHOOT_SG551",0x195);
  FUN_102e7c10("ACT_SHOOT_URATIO",0x196);
  FUN_102e7c10("ACT_SHOOT_UZI",0x197);
  FUN_102e7c10("ACT_SHOTGUN_PUMP",0x31);
  FUN_102e7c10("ACT_SHOTGUN_RELOAD_FINISH",0x30);
  FUN_102e7c10("ACT_SHOTGUN_RELOAD_START",0x2f);
  FUN_102e7c10("ACT_SITDOWN",0x341);
  FUN_102e7c10("ACT_SITTINGIDLE",0x345);
  FUN_102e7c10("ACT_SITTINGSCARED",0x346);
  FUN_102e7c10("ACT_SITTING_DRIVER",0x301);
  FUN_102e7c10("ACT_SITTING_HELIPASSENGER_LEANLEFT_ALLGUNS",0x314);
  FUN_102e7c10("ACT_SITTING_HELIPASSENGER_LEANRIGHT_ALLGUNS",0x313);
  FUN_102e7c10("ACT_SITTING_HELIPASSENGER_MP5",0x304);
  FUN_102e7c10("ACT_SITTING_HELIPASSENGER_PISTOL",0x303);
  FUN_102e7c10("ACT_SITTING_HELIPILOT",0x302);
  FUN_102e7c10("ACT_SITTING_PASSENGER",0x305);
  FUN_102e7c10("ACT_SITTING_PASSENGER_LEAN_WINDOW_LEFT_MP5",0x30b);
  FUN_102e7c10("ACT_SITTING_PASSENGER_LEAN_WINDOW_LEFT_PISTOL",0x309);
  FUN_102e7c10("ACT_SITTING_PASSENGER_LEAN_WINDOW_RIGHT_MP5",0x30a);
  FUN_102e7c10("ACT_SITTING_PASSENGER_LEAN_WINDOW_RIGHT_PISTOL",0x308);
  FUN_102e7c10("ACT_SITTING_PASSENGER_MP5",0x307);
  FUN_102e7c10("ACT_SITTING_PASSENGER_PISTOL",0x306);
  FUN_102e7c10("ACT_SLASH_BACKWARD1",0x36c);
  FUN_102e7c10("ACT_SLASH_BACKWARD2",0x36d);
  FUN_102e7c10("ACT_SLASH_CROUCHING1",0x36e);
  FUN_102e7c10("ACT_SLASH_CROUCHING2",0x36f);
  FUN_102e7c10("ACT_SLASH_FORWARD1",0x36a);
  FUN_102e7c10("ACT_SLASH_FORWARD2",0x36b);
  FUN_102e7c10("ACT_SLASH_LEFTHI",0x366);
  FUN_102e7c10("ACT_SLASH_LEFTLO",0x364);
  FUN_102e7c10("ACT_SLASH_LEFTMID",0x365);
  FUN_102e7c10("ACT_SLASH_OVERLAY_BACKWARD1",0x378);
  FUN_102e7c10("ACT_SLASH_OVERLAY_BACKWARD2",0x379);
  FUN_102e7c10("ACT_SLASH_OVERLAY_CROUCHING1",0x37a);
  FUN_102e7c10("ACT_SLASH_OVERLAY_CROUCHING2",0x37b);
  FUN_102e7c10("ACT_SLASH_OVERLAY_FORWARD1",0x376);
  FUN_102e7c10("ACT_SLASH_OVERLAY_FORWARD2",0x377);
  FUN_102e7c10("ACT_SLASH_OVERLAY_LEFTHI",0x372);
  FUN_102e7c10("ACT_SLASH_OVERLAY_LEFTLO",0x370);
  FUN_102e7c10("ACT_SLASH_OVERLAY_LEFTMID",0x371);
  FUN_102e7c10("ACT_SLASH_OVERLAY_RIGHTHI",0x375);
  FUN_102e7c10("ACT_SLASH_OVERLAY_RIGHTLO",0x373);
  FUN_102e7c10("ACT_SLASH_OVERLAY_RIGHTMID",0x374);
  FUN_102e7c10("ACT_SLASH_RIGHTHI",0x369);
  FUN_102e7c10("ACT_SLASH_RIGHTLO",0x367);
  FUN_102e7c10("ACT_SLASH_RIGHTMID",0x368);
  FUN_102e7c10("ACT_SNIFF",0x326);
  FUN_102e7c10("ACT_SNIFF_SCRATCH",0x325);
  FUN_102e7c10("ACT_STAND",0x16);
  FUN_102e7c10("ACT_STANDING_FORKLIFT_LEFTSIDE",0x310);
  FUN_102e7c10("ACT_STANDING_FORKLIFT_REAR_ALLGUNS",0x311);
  FUN_102e7c10("ACT_STANDING_FORKLIFT_RIGHTSIDE",0x30f);
  FUN_102e7c10("ACT_STANDLOW_AIM_AUG",0xf3);
  FUN_102e7c10("ACT_STANDLOW_AIM_CARRY_1HAND",0x173);
  FUN_102e7c10("ACT_STANDLOW_AIM_CARRY_2HAND",0x16b);
  FUN_102e7c10("ACT_STANDLOW_AIM_CARRY_BLOCKADE",0x16f);
  FUN_102e7c10("ACT_STANDLOW_AIM_DSA58",0xfa);
  FUN_102e7c10("ACT_STANDLOW_AIM_DUAL_PISTOL",0x13d);
  FUN_102e7c10("ACT_STANDLOW_AIM_FIRE_EXTINGUISHER",0x178);
  FUN_102e7c10("ACT_STANDLOW_AIM_FP6",0x101);
  FUN_102e7c10("ACT_STANDLOW_AIM_GRENADE",0x108);
  FUN_102e7c10("ACT_STANDLOW_AIM_KNIFE",0x10e);
  FUN_102e7c10("ACT_STANDLOW_AIM_M14",0x11a);
  FUN_102e7c10("ACT_STANDLOW_AIM_MP5",0x121);
  FUN_102e7c10("ACT_STANDLOW_AIM_MP7",0x128);
  FUN_102e7c10("ACT_STANDLOW_AIM_P90",0x12f);
  FUN_102e7c10("ACT_STANDLOW_AIM_PISTOL",0x136);
  FUN_102e7c10("ACT_STANDLOW_AIM_RPG7",0x14b);
  FUN_102e7c10("ACT_STANDLOW_AIM_SG551",0x144);
  FUN_102e7c10("ACT_STANDLOW_AIM_SHIELD",0x165);
  FUN_102e7c10("ACT_STANDLOW_AIM_SUITCASE",0x161);
  FUN_102e7c10("ACT_STANDLOW_AIM_URATIO",0x152);
  FUN_102e7c10("ACT_STANDLOW_AIM_UZI",0x159);
  FUN_102e7c10("ACT_STANDLOW_DEFEND_KNIFE",0x114);
  FUN_102e7c10("ACT_STANDUP",0x342);
  FUN_102e7c10("ACT_STAND_AIM_AUG",0xf2);
  FUN_102e7c10("ACT_STAND_AIM_BLINDSHOOT_1HAND",0x319);
  FUN_102e7c10("ACT_STAND_AIM_BLINDSHOOT_2HAND",0x315);
  FUN_102e7c10("ACT_STAND_AIM_DSA58",0xf9);
  FUN_102e7c10("ACT_STAND_AIM_DUAL_PISTOL",0x13c);
  FUN_102e7c10("ACT_STAND_AIM_FP6",0x100);
  FUN_102e7c10("ACT_STAND_AIM_GRENADE",0x107);
  FUN_102e7c10("ACT_STAND_AIM_KNIFE",0x10d);
  FUN_102e7c10("ACT_STAND_AIM_M14",0x119);
  FUN_102e7c10("ACT_STAND_AIM_MP5",0x120);
  FUN_102e7c10("ACT_STAND_AIM_MP7",0x127);
  FUN_102e7c10("ACT_STAND_AIM_P90",0x12e);
  FUN_102e7c10("ACT_STAND_AIM_PISTOL",0x135);
  FUN_102e7c10("ACT_STAND_AIM_RPG7",0x14a);
  FUN_102e7c10("ACT_STAND_AIM_SG551",0x143);
  FUN_102e7c10("ACT_STAND_AIM_URATIO",0x151);
  FUN_102e7c10("ACT_STAND_AIM_UZI",0x158);
  FUN_102e7c10("ACT_STAND_DEFEND_KNIFE",0x113);
  FUN_102e7c10("ACT_STAND_MOVING_OBJECT",0x185);
  FUN_102e7c10("ACT_STAND_ONFIRE",0x17f);
  FUN_102e7c10("ACT_STUMBLE",0x1fe);
  FUN_102e7c10("ACT_SWIM",0x11);
  FUN_102e7c10("ACT_THROW_SHIELD",0x1ea);
  FUN_102e7c10("ACT_TRANSITION",2);
  FUN_102e7c10("ACT_USE",0x17);
  FUN_102e7c10("ACT_VM_BLINDATTACK_1",0x67);
  FUN_102e7c10("ACT_VM_BLINDATTACK_1_SD",0x6b);
  FUN_102e7c10("ACT_VM_BLINDSILENCEDATTACK_1",0x6c);
  FUN_102e7c10("ACT_VM_BLINDSILENCEDATTACK_1_SD",0x6d);
  FUN_102e7c10("ACT_VM_BLIND_DRYFIRE",0x69);
  FUN_102e7c10("ACT_VM_BLIND_DRYFIRE_SD",0x6a);
  FUN_102e7c10("ACT_VM_BLIND_LASTSHOT",0x68);
  FUN_102e7c10("ACT_VM_DRAW",0x23);
  FUN_102e7c10("ACT_VM_DRAW_SD",0x57);
  FUN_102e7c10("ACT_VM_DRYFIRE",0x2e);
  FUN_102e7c10("ACT_VM_DRYFIRE_SD",0x84);
  FUN_102e7c10("ACT_VM_HALT",0x2c);
  FUN_102e7c10("ACT_VM_HALT2",0x2d);
  FUN_102e7c10("ACT_VM_HALT_SD",0x5f);
  FUN_102e7c10("ACT_VM_HALT_SD2",0x60);
  FUN_102e7c10("ACT_VM_HOLSTER",0x24);
  FUN_102e7c10("ACT_VM_HOLSTER_SD",0x58);
  FUN_102e7c10("ACT_VM_IDLE",0x25);
  FUN_102e7c10("ACT_VM_IDLE_1",0x33);
  FUN_102e7c10("ACT_VM_IDLE_2",0x32);
  FUN_102e7c10("ACT_VM_IDLE_BLIND",0x65);
  FUN_102e7c10("ACT_VM_IDLE_BLIND_SD",0x66);
  FUN_102e7c10("ACT_VM_IDLE_SD",0x5b);
  FUN_102e7c10("ACT_VM_LASTSHOT",100);
  FUN_102e7c10("ACT_VM_MIDRELOAD",0x61);
  FUN_102e7c10("ACT_VM_MIDRELOAD_SD",0x62);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK",0x26);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_1",0x3b);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_1_L",0x92);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_1_M",0x91);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_1_R",0x93);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_1_SD",0x83);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_1_SD_L",0x7d);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_1_SD_M",0x7c);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_1_SD_R",0x7e);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_2",0x3a);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_2_L",0x8f);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_2_M",0x8e);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_2_R",0x90);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_2_SD",0x82);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_2_SD_L",0x7a);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_2_SD_M",0x79);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_2_SD_R",0x7b);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_3",0x39);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_3_L",0x8c);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_3_M",0x8b);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_3_R",0x8d);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_3_SD",0x81);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_3_SD_L",0x77);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_3_SD_M",0x76);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_3_SD_R",0x78);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_4",0x38);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_4_L",0x89);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_4_M",0x88);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_4_R",0x8a);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_4_SD",0x80);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_4_SD_L",0x74);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_4_SD_M",0x73);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_4_SD_R",0x75);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_5",0x37);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_5_L",0x86);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_5_M",0x85);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_5_R",0x87);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_5_SD",0x7f);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_5_SD_L",0x71);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_5_SD_M",0x70);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_5_SD_R",0x72);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_6",0x36);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_7",0x35);
  FUN_102e7c10("ACT_VM_PRIMARYATTACK_8",0x34);
  FUN_102e7c10("ACT_VM_PRIME_GRENADE",0x54);
  FUN_102e7c10("ACT_VM_RELOAD",0x29);
  FUN_102e7c10("ACT_VM_RELOAD_SD",0x5c);
  FUN_102e7c10("ACT_VM_SECONDARYATTACK",0x27);
  FUN_102e7c10("ACT_VM_SECONDARYATTACK2",0x28);
  FUN_102e7c10("ACT_VM_SECONDARYATTACK_SD",0x6e);
  FUN_102e7c10("ACT_VM_SECONDARYATTACK_SD2",0x6f);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_1",0x98);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_1_L",0xa6);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_1_M",0xa5);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_1_R",0xa7);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_1_SD",0xbb);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_1_SD_L",0xb5);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_1_SD_M",0xb4);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_1_SD_R",0xb6);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_2",0x97);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_2_L",0xa3);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_2_M",0xa2);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_2_R",0xa4);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_2_SD",0xba);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_2_SD_L",0xb2);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_2_SD_M",0xb1);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_2_SD_R",0xb3);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_3",0x96);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_3_L",0xa0);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_3_M",0x9f);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_3_R",0xa1);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_3_SD",0xb9);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_3_SD_L",0xaf);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_3_SD_M",0xae);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_3_SD_R",0xb0);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_4",0x95);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_4_L",0x9d);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_4_M",0x9c);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_4_R",0x9e);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_4_SD",0xb8);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_4_SD_L",0xac);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_4_SD_M",0xab);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_4_SD_R",0xad);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_5",0x94);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_5_L",0x9a);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_5_M",0x99);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_5_R",0x9b);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_5_SD",0xb7);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_5_SD_L",0xa9);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_5_SD_M",0xa8);
  FUN_102e7c10("ACT_VM_SILENCEDATTACK_5_SD_R",0xaa);
  FUN_102e7c10("ACT_VM_SINGLEHAND_DRAW",199);
  FUN_102e7c10("ACT_VM_SINGLEHAND_DRYFIRE",0xc2);
  FUN_102e7c10("ACT_VM_SINGLEHAND_HOLSTER",200);
  FUN_102e7c10("ACT_VM_SINGLEHAND_IDLE",0xc4);
  FUN_102e7c10("ACT_VM_SINGLEHAND_LASTSHOT",0xc3);
  FUN_102e7c10("ACT_VM_SINGLEHAND_MIDRELOAD",0xc6);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_1",0xd9);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_1_L",0xcb);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_1_M",0xca);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_1_R",0xcc);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_2",0xda);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_2_L",0xce);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_2_M",0xcd);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_2_R",0xcf);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_3",0xdb);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_3_L",0xd1);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_3_M",0xd0);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_3_R",0xd2);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_4",0xdc);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_4_L",0xd4);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_4_M",0xd3);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_4_R",0xd5);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_5",0xdd);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_5_L",0xd7);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_5_M",0xd6);
  FUN_102e7c10("ACT_VM_SINGLEHAND_PRIMARYATTACK_5_R",0xd8);
  FUN_102e7c10("ACT_VM_SINGLEHAND_RELOAD",0xc5);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_1",0xed);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_1_L",0xdf);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_1_M",0xde);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_1_R",0xe0);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_2",0xee);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_2_L",0xe2);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_2_M",0xe1);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_2_R",0xe3);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_3",0xef);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_3_L",0xe5);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_3_M",0xe4);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_3_R",0xe6);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_4",0xf0);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_4_L",0xe8);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_4_M",0xe7);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_4_R",0xe9);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_5",0xf1);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_5_L",0xeb);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_5_M",0xea);
  FUN_102e7c10("ACT_VM_SINGLEHAND_SILENCEDATTACK_5_R",0xec);
  FUN_102e7c10("ACT_VM_SINGLEHAND_UNHOLSTER",0xc9);
  FUN_102e7c10("ACT_VM_SLASHFORWARD1",0xc0);
  FUN_102e7c10("ACT_VM_SLASHFORWARD2",0xc1);
  FUN_102e7c10("ACT_VM_SLASHLEFT1",0xbc);
  FUN_102e7c10("ACT_VM_SLASHLEFT2",0xbd);
  FUN_102e7c10("ACT_VM_SLASHRIGHT1",0xbe);
  FUN_102e7c10("ACT_VM_SLASHRIGHT2",0xbf);
  FUN_102e7c10("ACT_VM_THROW_GRENADE",0x55);
  FUN_102e7c10("ACT_VM_THROW_GRENADE_UNDERHAND",0x56);
  FUN_102e7c10("ACT_VM_UNHOLSTER",0x59);
  FUN_102e7c10("ACT_VM_UNHOLSTER_SD",0x5a);
  FUN_102e7c10("ACT_VM_WAVEOVER",0x2a);
  FUN_102e7c10("ACT_VM_WAVEOVER2",0x2b);
  FUN_102e7c10("ACT_VM_WAVEOVER_SD",0x5d);
  FUN_102e7c10("ACT_VM_WAVEOVER_SD2",0x5e);
  FUN_102e7c10("ACT_WALK",4);
  FUN_102e7c10("ACT_WALKBITE",0x329);
  FUN_102e7c10("ACT_WALKSNIFF",0x32a);
  FUN_102e7c10("ACT_WALKSUITCASE",0x163);
  FUN_102e7c10("ACT_WALK_AGITATED",0x20);
  FUN_102e7c10("ACT_WALK_AIM",5);
  FUN_102e7c10("ACT_WALK_AUG",0xf7);
  FUN_102e7c10("ACT_WALK_BLINDSHOOT_1HAND",0x31b);
  FUN_102e7c10("ACT_WALK_BLINDSHOOT_2HAND",0x317);
  FUN_102e7c10("ACT_WALK_CARRY_1HAND",0x174);
  FUN_102e7c10("ACT_WALK_CARRY_2HAND",0x16c);
  FUN_102e7c10("ACT_WALK_CARRY_BLOCKADE",0x170);
  FUN_102e7c10("ACT_WALK_CROUCH",6);
  FUN_102e7c10("ACT_WALK_CROUCH_AIM",7);
  FUN_102e7c10("ACT_WALK_DSA58",0xfe);
  FUN_102e7c10("ACT_WALK_DUAL_PISTOL",0x140);
  FUN_102e7c10("ACT_WALK_FIRE_EXTINGUISHER",0x17b);
  FUN_102e7c10("ACT_WALK_FP6",0x105);
  FUN_102e7c10("ACT_WALK_GRAB_VIP",0x208);
  FUN_102e7c10("ACT_WALK_GRENADE",0x10b);
  FUN_102e7c10("ACT_WALK_KNIFE",0x111);
  FUN_102e7c10("ACT_WALK_KNIFE_DEFEND",0x117);
  FUN_102e7c10("ACT_WALK_M14",0x11e);
  FUN_102e7c10("ACT_WALK_MOVING_OBJECT",0x184);
  FUN_102e7c10("ACT_WALK_MP5",0x125);
  FUN_102e7c10("ACT_WALK_MP7",300);
  FUN_102e7c10("ACT_WALK_ONFIRE",0x182);
  FUN_102e7c10("ACT_WALK_P90",0x133);
  FUN_102e7c10("ACT_WALK_PISTOL",0x139);
  FUN_102e7c10("ACT_WALK_RELAXED",0x1e);
  FUN_102e7c10("ACT_WALK_RPG7",0x14f);
  FUN_102e7c10("ACT_WALK_SG551",0x148);
  FUN_102e7c10("ACT_WALK_SHIELD",0x168);
  FUN_102e7c10("ACT_WALK_STEALTH",0x21);
  FUN_102e7c10("ACT_WALK_STIMULATED",0x1f);
  FUN_102e7c10("ACT_WALK_URATIO",0x156);
  FUN_102e7c10("ACT_WALK_UZI",0x15d);
  FUN_102e7c10("ACT_WAVEOVER_PISTOL",0x37f);
  FUN_102e7c10("ACT_WAVEOVER_RIFLE",0x37e);
  FUN_102ec485("string too long");
  FUN_102ec4b3("invalid string position");
  FUN_102ec4f0(this_01,param_2,(uint *)"force_dir",param_1 + 7);
  FUN_102ec4f0(this_01,this_00,(uint *)"MassCenterOverride",(undefined4 *)((int)this + 0x1628));
  FUN_102ece79(local_120,(byte *)"_rt_FullFrameFB%d");
  FUN_102ece79(local_18,(byte *)"_rt_TeenyFB%d");
  FUN_102ece79(local_194,(byte *)"%s Kb  %dx%d  %.*s%s  %s");
  FUN_102ece79(local_20,(byte *)"_rt_SmallFB%d");
  FUN_102ece79(local_208,(byte *)"%s*.*");
  FUN_102ece79(local_308,(byte *)"%s%s\\*.*");
  FUN_102ece79(local_44,(byte *)"%i ft");
  FUN_102ee000((byte *)"----------------- frame %d -----------------\n");
  FUN_102ee000((byte *)"--------------------------------------------\n\n");
  FUN_102ee0a0(iVar3,(byte *)"main: %s(%d), cycle: %.2f cyclerate: %.2f playbackrate: %.2f\n");
  FUN_102ee0a0(iVar7 + 1,(byte *)"Main: %s, Cycle: %.2f\n");
  FUN_102ee0a0(iVar7 + 3,(byte *)"--------------------------------------------\n\n");
  FUN_102ee0a0(iVar7,(byte *)"-------------%s: frame %d -----------------\n");
  FUN_102ee0a0(local_18,(byte *)"Time: %.2f, Speed: %.2f, MaxSpeed: %.2f");
  FUN_102ee0a0(param_1 + 1,(byte *)"vel: %.2f, time: %.2f, max: %.2f");
  FUN_102ee0a0(param_1,(byte *)"main: %s, cycle: %.2f\n");
  FUN_102f0e10("PLAYERANIMEVENT_ATTACK_GRENADE",3);
  FUN_102f0e10("PLAYERANIMEVENT_ATTACK_POST",0x11);
  FUN_102f0e10("PLAYERANIMEVENT_ATTACK_PRE",0x10);
  FUN_102f0e10("PLAYERANIMEVENT_ATTACK_PRIMARY",1);
  FUN_102f0e10("PLAYERANIMEVENT_ATTACK_SECONDARY",2);
  FUN_102f0e10("PLAYERANIMEVENT_BASH_SHIELD",0x29);
  FUN_102f0e10("PLAYERANIMEVENT_BLINDED_OVERLAY_LONG",0xd4);
  FUN_102f0e10("PLAYERANIMEVENT_BLINDED_OVERLAY_MEDIUM",0xd3);
  FUN_102f0e10("PLAYERANIMEVENT_BLINDED_OVERLAY_SHORT",0xd2);
  FUN_102f0e10("PLAYERANIMEVENT_CANCEL",9);
  FUN_102f0e10("PLAYERANIMEVENT_CROUCH_TO_PRONE",0x18);
  FUN_102f0e10("PLAYERANIMEVENT_CUSTOM",0xc);
  FUN_102f0e10("PLAYERANIMEVENT_CUSTOM_GESTURE",0xd);
  FUN_102f0e10("PLAYERANIMEVENT_CUSTOM_GESTURE_SEQUENCE",0xf);
  FUN_102f0e10("PLAYERANIMEVENT_CUSTOM_SEQUENCE",0xe);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_CROUCH_HEAD",0xd5);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_CROUCH_LEFTARM",0xd6);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_CROUCH_LEFTLEG",0xd7);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_CROUCH_REAR_TORSO",0xda);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_CROUCH_TORSO",0xd8);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_CROUCH_TORSO2",0xd9);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_ONFIRE",0x106);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_ONFIRE2",0x107);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_RUNNING_HEAD",0xfb);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_RUNNING_TORSO",0xf7);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_RUNNING_TORSO2",0x11f);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_RUNNING_UPPERTORSO",0xf8);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_RUNNING_UPPERTORSO2",0xf9);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_RUNNING_UPPERTORSO3",0xfa);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_RUNNING_UPPERTORSO4",0x120);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_GROIN",0xdb);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_HEAD",0xdc);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_HEAD2",0xdd);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_HEAD3",0xde);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_HEAD4",0x108);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_HEAD5",0x109);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFTARM",0xdf);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFTARM2",0xe0);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFTLEG",0xe1);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFTLEG2",0xe2);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFT_LOWERTORSO",0xfc);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFT_LOWERTORSO2",0x117);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFT_LOWERTORSO3",0x118);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFT_UPPERTORSO",0xfd);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFT_UPPERTORSO2",0x115);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEFT_UPPERTORSO3",0x116);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEG_FRONT",0x11c);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEG_FRONT2",0x11d);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LEG_REAR",0x11e);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO",0xe3);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO10",0x10c);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO2",0xe4);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO3",0xe5);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO4",0xe6);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO5",0x100);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO6",0x101);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO7",0x102);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO8",0x10a);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_LOWERTORSO9",0x10b);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO",0xe7);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO10",0x110);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO2",0xe8);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO3",0xe9);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO4",0x103);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO5",0x104);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO6",0x105);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO7",0x10d);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO8",0x10e);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_REAR_TORSO9",0x10f);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_RIGHTARM",0xea);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_RIGHTARM2",0xeb);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_RIGHTLEG",0xec);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_RIGHTLEG2",0xed);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_LOWERTORSO",0xfe);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_LOWERTORSO2",0x11a);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_LOWERTORSO3",0x11b);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_UPPERTORSO",0xff);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_RIGHT_UPPERTORSO2",0x119);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO",0xee);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO10",0x111);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO11",0x112);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO12",0x113);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO13",0x114);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO2",0xef);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO3",0xf0);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO4",0xf1);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO5",0xf2);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO6",0xf3);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO7",0xf4);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO8",0xf5);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_STANDING_UPPERTORSO9",0xf6);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_VEHICLE_LEAN_LEFT",0x126);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_VEHICLE_LEAN_LEFT2",0x127);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_VEHICLE_LEAN_RIGHT",0x128);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_VEHICLE_LEAN_RIGHT2",0x129);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING",0x121);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING2",0x122);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING3",0x123);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING4",0x124);
  FUN_102f0e10("PLAYERANIMEVENT_DEATH_VEHICLE_SITTING5",0x125);
  FUN_102f0e10("PLAYERANIMEVENT_DEPLOY",0x2c);
  FUN_102f0e10("PLAYERANIMEVENT_DIE",7);
  FUN_102f0e10("PLAYERANIMEVENT_DOUBLEJUMP",8);
  FUN_102f0e10("PLAYERANIMEVENT_DROP_1HAND_OBJECT",0x170);
  FUN_102f0e10("PLAYERANIMEVENT_DROP_2HAND_OBJECT",0x171);
  FUN_102f0e10("PLAYERANIMEVENT_EXPLODEBACK_E",0xca);
  FUN_102f0e10("PLAYERANIMEVENT_EXPLODEBACK_FLOAT_E",0xcf);
  FUN_102f0e10("PLAYERANIMEVENT_EXPLODEBACK_FLOAT_N",0xce);
  FUN_102f0e10("PLAYERANIMEVENT_EXPLODEBACK_FLOAT_S",0xd0);
  FUN_102f0e10("PLAYERANIMEVENT_EXPLODEBACK_FLOAT_W",0xd1);
  FUN_102f0e10("PLAYERANIMEVENT_EXPLODEBACK_LAND",0xcd);
  FUN_102f0e10("PLAYERANIMEVENT_EXPLODEBACK_N",0xc9);
  FUN_102f0e10("PLAYERANIMEVENT_EXPLODEBACK_S",0xcb);
  FUN_102f0e10("PLAYERANIMEVENT_EXPLODEBACK_W",0xcc);
  FUN_102f0e10("PLAYERANIMEVENT_FIRE_GUN_PRIMARY",0x1b);
  FUN_102f0e10("PLAYERANIMEVENT_FIRE_GUN_SECONDARY",0x1c);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CHEST",0x66);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_HEAD",0x3d);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_HEAD2",0x3e);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_LEFTARM",0x3f);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_LEFTLEG",0x40);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_LEFT_HEAD",0x48);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_LEFT_LOWERTORSO",0x49);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_LEFT_UPPERTORSO",0x4a);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_LOWERTORSO",0x41);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_HEAD",0x42);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_HEAD2",0x43);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_LOWERTORSO",0x44);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_LOWERTORSO2",0x45);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_UPPERTORSO",0x46);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_REAR_UPPERTORSO2",0x47);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHTARM",0x4e);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHTLEG",0x4f);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHT_HEAD",0x4b);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHT_LOWERTORSO",0x4c);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_RIGHT_UPPERTORSO",0x4d);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_UPPERTORSO",0x50);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_CROUCH_UPPERTORSO2",0x51);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_GROIN",0x62);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HEAD",99);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HEAD2",100);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HEAD3",0x65);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_HEAD",0x92);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_LEFTLEG",0x8e);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_LOWERTORSO",0x93);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_LOWERTORSO2",0x94);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_REAR_LOWERTORSO",0x90);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_REAR_UPPERTORSO",0x91);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_RIGHTLEG",0x8f);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_UPPERTORSO",0x95);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_HOSTAGEGRAB_UPPERTORSO2",0x96);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LEFTARM",0x67);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LEFTLEG",0x68);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LEFTLEG2",0x69);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LEFT_HEAD",0x75);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LEFT_LOWERTORSO",0x76);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LEFT_LOWERTORSO2",0x77);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LEFT_UPPERTORSO",0x78);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LEFT_UPPERTORSO2",0x79);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LOWERTORSO",0x6a);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LOWERTORSO2",0x6b);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LOWERTORSO3",0x6c);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_LOWERTORSO4",0x6d);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_CAR_SITTING_BACK",0xc0);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_CAR_SITTING_FRONT",0xbf);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_CAR_SITTING_LEFT",0xc1);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_CAR_SITTING_RIGHT",0xc2);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_HEAD",0x9c);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_HEAD2",0x9d);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_HEAD3",0x9e);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_HEAD",0x99);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_LOWERTORSO",0x9a);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_REAR_LOWERTORSO",0x97);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_REAR_UPPERTORSO",0x98);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_HOSTAGEGRAB_UPPERTORSO",0x9b);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_LEFTARM",0x9f);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_LEFT_HEAD",0xb0);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_LEFT_UPPERTORSO",0xae);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_LEFT_UPPERTORSO2",0xaf);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_LOWERTORSO",0xa0);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_LOWERTORSO2",0xa1);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_HEAD",199);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_LEFT_TORSO",0xc5);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_LOWERTORSO",0xc4);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_RIGHT_TORSO",0xc6);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_MOVINGOBJECT_UPPERTORSO",0xc3);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_HEAD",0xa2);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_HEAD2",0xa3);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_LOWERTORSO",0xa4);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_LOWERTORSO2",0xa5);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_UPPERTORSO",0xa6);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_REAR_UPPERTORSO2",0xa7);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_RIGHTARM",0xa8);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_RIGHT_HEAD",0xad);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_RIGHT_UPPERTORSO",0xab);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_RIGHT_UPPERTORSO2",0xac);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_BACK",0xb9);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_BACK2",0xba);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_FRONT",0xb6);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_FRONT2",0xb7);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_FRONT3",0xb8);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_LEFT",0xbb);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_LEFT2",0xbc);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_RIGHT",0xbd);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SHIELD_RIGHT2",0xbe);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_HEAD",0xb1);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_LOWERTORSO",0xb4);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_LOWERTORSO2",0xb5);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_UPPERTORSO",0xb2);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_SUITCASE_UPPERTORSO2",0xb3);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_UPPERTORSO",0xa9);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_OVERLAY_UPPERTORSO2",0xaa);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_REAR_HEAD",0x6e);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_REAR_HEAD2",0x6f);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_REAR_LOWERTORSO",0x70);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_REAR_LOWERTORSO2",0x71);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_REAR_LOWERTORSO3",0x72);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_REAR_UPPERTORSO",0x73);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_REAR_UPPERTORSO2",0x74);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_RIGHTARM",0x7f);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_RIGHTLEG",0x80);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_RIGHTLEG2",0x81);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_RIGHT_HEAD",0x7a);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_RIGHT_LOWERTORSO",0x7b);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_RIGHT_LOWERTORSO2",0x7c);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_RIGHT_UPPERTORSO",0x7d);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_RIGHT_UPPERTORSO2",0x7e);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_SHIELD_BACK",0x88);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_SHIELD_BACK2",0x89);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_SHIELD_FRONT",0x85);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_SHIELD_FRONT2",0x86);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_SHIELD_FRONT3",0x87);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_SHIELD_LEFT",0x8c);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_SHIELD_LEFT2",0x8d);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_SHIELD_RIGHT",0x8a);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_SHIELD_RIGHT2",0x8b);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_UPPERTORSO",0x82);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_UPPERTORSO2",0x83);
  FUN_102f0e10("PLAYERANIMEVENT_FLINCH_UPPERTORSO3",0x84);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_ARMED_PISTOL1",0x14e);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_ARMED_RIFLE1",0x14f);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_CALM1",0x12a);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_CALM2",299);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_CALM3",300);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_CALM4",0x12d);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_CALM5",0x12e);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_CRY",0x138);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_HOLDCASE_WAVE",0x13b);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_LOOKAROUND",0x136);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_LOOKAROUND2",0x137);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM1",0x13f);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM10",0x148);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM11",0x149);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM12",0x14a);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM2",0x140);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM3",0x141);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM4",0x142);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM5",0x143);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM6",0x144);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM7",0x145);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM8",0x146);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_CALM9",0x147);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_SCARED1",0x14b);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_SCARED2",0x14c);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_SITTING_SCARED3",0x14d);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_WAVEHANDS_SCARED",0x139);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_NPC_WAVEHANDS_SCARED2",0x13a);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_SCARED1",0x12f);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_SCARED2",0x130);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_SCARED3",0x131);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_STARTLED1",0x133);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_STARTLED2",0x134);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_STARTLED3",0x135);
  FUN_102f0e10("PLAYERANIMEVENT_GESTURE_VOMIT",0x132);
  FUN_102f0e10("PLAYERANIMEVENT_GRENADE1_DRAW",0x12);
  FUN_102f0e10("PLAYERANIMEVENT_GRENADE1_THROW",0x14);
  FUN_102f0e10("PLAYERANIMEVENT_GRENADE2_DRAW",0x13);
  FUN_102f0e10("PLAYERANIMEVENT_GRENADE2_THROW",0x15);
  FUN_102f0e10("PLAYERANIMEVENT_HALT_PISTOL",0x16f);
  FUN_102f0e10("PLAYERANIMEVENT_HALT_RIFLE",0x16e);
  FUN_102f0e10("PLAYERANIMEVENT_HOSTAGEGRAB_KICKAWAY",0x2a);
  FUN_102f0e10("PLAYERANIMEVENT_HOSTAGEGRAB_RELEASETHROW",0x13c);
  FUN_102f0e10("PLAYERANIMEVENT_JUMP",0x20);
  FUN_102f0e10("PLAYERANIMEVENT_KICK_LOW",0x26);
  FUN_102f0e10("PLAYERANIMEVENT_KICK_MID",0x27);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK2_E",0x59);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK2_N",0x57);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK2_S",0x56);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK2_W",0x58);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK3_E",0x5d);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK3_N",0x5b);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK3_S",0x5a);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK3_W",0x5c);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK4_E",0x61);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK4_N",0x5f);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK4_S",0x5e);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK4_W",0x60);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK_E",0x55);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK_N",0x53);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK_S",0x52);
  FUN_102f0e10("PLAYERANIMEVENT_KNOCKBACK_W",0x54);
  FUN_102f0e10("PLAYERANIMEVENT_LANDING",0x25);
  FUN_102f0e10("PLAYERANIMEVENT_MELEE_PISTOL",0x16b);
  FUN_102f0e10("PLAYERANIMEVENT_MELEE_RIFLE",0x16a);
  FUN_102f0e10("PLAYERANIMEVENT_NONE",0);
  FUN_102f0e10("PLAYERANIMEVENT_ONFIRE_OVERLAY",200);
  FUN_102f0e10("PLAYERANIMEVENT_PRONE_TO_CROUCH",0x1a);
  FUN_102f0e10("PLAYERANIMEVENT_PRONE_TO_STAND",0x19);
  FUN_102f0e10("PLAYERANIMEVENT_PULLPIN_GRENADE",0x1d);
  FUN_102f0e10("PLAYERANIMEVENT_RAPPEL_JUMP",0x150);
  FUN_102f0e10("PLAYERANIMEVENT_RAPPEL_LAND",0x151);
  FUN_102f0e10("PLAYERANIMEVENT_RELOAD",0x2b);
  FUN_102f0e10("PLAYERANIMEVENT_RELOAD_END",5);
  FUN_102f0e10("PLAYERANIMEVENT_RELOAD_LOOP",4);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_CROUCH_EAST",0x38);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_CROUCH_NORTH",0x35);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_CROUCH_NORTHEAST",0x36);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_CROUCH_NORTHWEST",0x37);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_CROUCH_SOUTH",0x39);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_CROUCH_SOUTHEAST",0x3a);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_CROUCH_SOUTHWEST",0x3b);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_CROUCH_WEST",0x3c);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_EAST",0x30);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_NORTH",0x2d);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_NORTHEAST",0x2f);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_NORTHWEST",0x2e);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_SOUTH",0x31);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_SOUTHEAST",0x33);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_SOUTHWEST",0x32);
  FUN_102f0e10("PLAYERANIMEVENT_ROLL_WEST",0x34);
  FUN_102f0e10("PLAYERANIMEVENT_RUNNING_JUMP_EAST",0x22);
  FUN_102f0e10("PLAYERANIMEVENT_RUNNING_JUMP_NORTH",0x21);
  FUN_102f0e10("PLAYERANIMEVENT_RUNNING_JUMP_SOUTH",0x23);
  FUN_102f0e10("PLAYERANIMEVENT_RUNNING_JUMP_WEST",0x24);
  FUN_102f0e10("PLAYERANIMEVENT_SITDOWN",0x13d);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_BACKWARD1",0x15a);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_BACKWARD2",0x15b);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_CROUCHING1",0x15c);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_CROUCHING2",0x15d);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_FORWARD1",0x158);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_FORWARD2",0x159);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_LEFTHI",0x154);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_LEFTLO",0x152);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_LEFTMID",0x153);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_BACKWARD1",0x166);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_BACKWARD2",0x167);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_CROUCHING1",0x168);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_CROUCHING2",0x169);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_FORWARD1",0x164);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_FORWARD2",0x165);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_LEFTHI",0x160);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_LEFTLO",0x15e);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_LEFTMID",0x15f);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_RIGHTHI",0x163);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_RIGHTLO",0x161);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_OVERLAY_RIGHTMID",0x162);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_RIGHTHI",0x157);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_RIGHTLO",0x155);
  FUN_102f0e10("PLAYERANIMEVENT_SLASH_RIGHTMID",0x156);
  FUN_102f0e10("PLAYERANIMEVENT_SNAP_YAW",0xb);
  FUN_102f0e10("PLAYERANIMEVENT_SPAWN",10);
  FUN_102f0e10("PLAYERANIMEVENT_STANDUP",0x13e);
  FUN_102f0e10("PLAYERANIMEVENT_STAND_TO_PRONE",0x17);
  FUN_102f0e10("PLAYERANIMEVENT_SWIM",6);
  FUN_102f0e10("PLAYERANIMEVENT_THROW_GRENADE",0x1e);
  FUN_102f0e10("PLAYERANIMEVENT_THROW_GRENADE_UNDERHAND",0x1f);
  FUN_102f0e10("PLAYERANIMEVENT_THROW_SHIELD",0x28);
  FUN_102f0e10("PLAYERANIMEVENT_VOICE_COMMAND_GESTURE",0x16);
  FUN_102f0e10("PLAYERANIMEVENT_WAVEOVER_PISTOL",0x16d);
  FUN_102f0e10("PLAYERANIMEVENT_WAVEOVER_RIFLE",0x16c);
  FUN_102f18b8(L"䥒䙆",4,1,pFVar1);
  FUN_102f18b8(L"䅗䕖",4,1,pFVar1);
  FUN_102f18b8(L"浦⁴",4,1,pFVar1);
  FUN_102f18b8(L"慤慴",4,1,pFVar1);
  FUN_102f2eda(&DAT_106f56a8,0x400,(byte *)"%s, string progress, string variable");
  FUN_102f2eda(&DAT_106f7bc0,0x400,(byte *)"%s, string URLText");
  FUN_102f2eda(param_1,param_2 - 1,(byte *)"%5.2f %5.2f %5.2f %7i %5i %7.2f %7i");
  FUN_102f3d80(&PTR_vftable_106c6bd8,(uint *)"scripts/RadialMenu.txt");
  FUN_102f3d80(param_1,(uint *)"scripts/RadialMenu.txt");
  FUN_102f3d80(param_1,(uint *)"scripts/RadialMenuRadio.txt");
  FUN_10308060(this,param_1,"HudChatHistory",0);
  FUN_1030c050((uint *)"resource/avatars.res",(int *)(param_1 + 4),(int *)(param_1 + 0x2c));
  FUN_1030c050((uint *)"resource/avatars_a.res",(int *)(param_1 + 0x18),(int *)(param_1 + 0x2c));
  FUN_103173f0(&DAT_10694e64,"CTIStaticGlobals",FUN_103173c0);
  FUN_10317440((byte *)"CTIStaticGlobals");
  FUN_10344080(&DAT_1072a3ac,"ParticleEffect",FUN_100b1640);
  FUN_10344080(&DAT_1072a3b8,"ParticleEffectStop",FUN_100b1660);
  FUN_10344080(&DAT_1072c700,"ShakeRopes",FUN_100bd430);
  FUN_10344080(&DAT_10769254,"bloodspray",FUN_101052b0);
  FUN_10344080(&DAT_10769260,"BloodImpact",FUN_101051d0);
  FUN_10344080(&DAT_1076926c,"HunterDamage",FUN_10106510);
  FUN_10344080(&DAT_10769280,"Explosion",FUN_1010a230);
  FUN_10344080(&DAT_1076928c,"WaterSurfaceExplosion",FUN_1010ab70);
  FUN_10344080(&DAT_10769298,"HelicopterMegaBomb",FUN_1010a570);
  FUN_10344080(&DAT_10769488,"RagdollImpact",FUN_1010b920);
  FUN_10344080(&DAT_107695b8,"ShellEject",FUN_1010c610);
  FUN_10344080(&DAT_107695c4,"RifleShellEject",FUN_1010c5f0);
  FUN_10344080(&DAT_107695d0,"ShotgunShellEject",FUN_1010c630);
  FUN_10344080(&DAT_10769690,"Tracer",FUN_1010d0c0);
  FUN_10344080(&DAT_1076969c,"ParticleTracer",FUN_1010cdf0);
  FUN_10344080(&DAT_107696a8,"TracerSound",FUN_1010d240);
  FUN_10344080(&DAT_10769710,"watersplash",FUN_1010dcc0);
  FUN_10344080(&DAT_1076971c,"watersplashquiet",FUN_1010dd20);
  FUN_10344080(&DAT_10769728,"gunshotsplash",FUN_1010da30);
  FUN_10344080(&DAT_10769734,"waterripple",FUN_1010da80);
  FUN_10344080(&DAT_10793e20,"Smoke",FUN_101d3c60);
  FUN_10344080(&DAT_10793f78,"Spill",FUN_101d4560);
  FUN_10344080(&DAT_10795700,"FX_Refract",FUN_101d95e0);
  FUN_10344080(&DAT_10795734,"Impact",FUN_101e9ca0);
  FUN_10344080(&DAT_10795798,"GlassImpact",FUN_101e9bb0);
  FUN_10344080(&DAT_107957a4,"GrassImpact",FUN_101e9bd0);
  FUN_10344080(&DAT_107957b0,"FoliageImpact",FUN_101e99a0);
  FUN_10344080(&DAT_107957bc,"WaterBigSplash",thunk_FUN_101e9830);
  FUN_10344080(&DAT_107957c8,"BodyLandOnSurface",FUN_101d9820);
  FUN_10344080(&DAT_107957d4,"CardboardImpact",FUN_101d9b30);
  FUN_10344080(&DAT_107957e0,"PaperImpact",FUN_101e9e10);
  FUN_10344080(&DAT_107957ec,"Headshot",FUN_101e9c20);
  FUN_10344080(&DAT_107957f8,"BodyGib",FUN_101d97d0);
  FUN_10344080(&DAT_10795804,"DropMagazine",FUN_101d9fd0);
  FUN_10344080(&DAT_10795810,"CarExplosion",FUN_101d9ae0);
  FUN_10344080(&DAT_1079581c,"PlaneExplosion",FUN_101ea230);
  FUN_10344080(&DAT_10795828,"ExplosionFireball",FUN_101da0b0);
  FUN_10344080(&DAT_10795834,"ExplosionBomb",FUN_101da070);
  FUN_10344080(&DAT_10795840,"FlashBangExplosion",FUN_101e9960);
  FUN_10344080(&DAT_1079584c,"PropaneTankExplosion",FUN_101ea280);
  FUN_10344080(&DAT_10795858,"FireExtinguisherExplosion",FUN_101e9930);
  FUN_10344080(&DAT_10795864,"SmokeGrenadeSparkler",FUN_101ea370);
  FUN_10344080(&DAT_10795870,"HeliExplosion",FUN_101e9c50);
  FUN_10344080(&DAT_1079587c,"ExplodeFX",FUN_101da040);
  FUN_10344080(&DAT_10795888,"Vomit",FUN_101eaff0);
  FUN_10344080(&DAT_10795894,"EmitEngineSmoke",FUN_101d9ff0);
  FUN_10344080(&DAT_107958a0,"BreachingChargeExplosion",FUN_101d9840);
  FUN_10344080(&DAT_107958ac,"CarBreakWindows",FUN_101d9aa0);
  FUN_10344080(&DAT_107958b8,"VehicleCollision",FUN_101eafa0);
  FUN_10344080(&DAT_107958c4,"TireExplode",FUN_101eaf60);
  FUN_10344080(&DAT_107958d0,"RPG7Explode",FUN_101ea2b0);
  FUN_10344080(&DAT_107958dc,"Explode_40MM",FUN_101e9bf0);
  FUN_10344080(&DAT_107958e8,"ServerPhysPropToClientPhysPropCallBack",FUN_101ea2e0);
  FUN_10344080(&DAT_107958f4,"GaussTracer",FUN_101eb250);
  FUN_10344080(&DAT_10795900,"LightTracer",FUN_101eb2a0);
  FUN_10344080(&DAT_1079590c,"HeavyTracer",FUN_101eb280);
  FUN_10344080(&DAT_10795970,"TI_MuzzleFlash",FUN_1003ffb0);
  FUN_10344080(&DAT_1079597c,"TI_MuzzleFlash2",FUN_1003ffb0);
  FUN_10344080(&DAT_10795988,"TI_MuzzleFlash_V",FUN_1003ffb0);
  FUN_10344080(&DAT_10795994,"TI_MuzzleFlash_Y",FUN_1003ffb0);
  FUN_10344080(&DAT_107959a0,"TI_MuzzleFlash_X",FUN_1003ffb0);
  FUN_10344080(&DAT_107959ac,"TI_Silenced",FUN_1003ffb0);
  FUN_10344080(&DAT_107959b8,"TI_MuzzleFlash_Left",FUN_1003ffb0);
  FUN_10344080(&DAT_107959c4,"TI_MuzzleFlash_Right",FUN_1003ffb0);
  FUN_10344080(&DAT_107a02a0,"CR_HRagdollOnClient",FUN_1028b460);
  FUN_10344080(&DAT_107ae138,"RPGShotDown",FUN_103386a0);
  FUN_10344080(&DAT_107afa48,"BoltImpact",FUN_1033e820);
  FUN_10344080(&DAT_107b4b20,"MuzzleFlash",FUN_10355ab0);
  FUN_10344080(&DAT_107b4b2c,"SmokeOld",FUN_10355bf0);
  FUN_10344080(&DAT_107b4b38,"GunshipImpact",FUN_10355a40);
  FUN_10344080(&DAT_107b4b44,"CommandPointer",FUN_103534a0);
  FUN_10344080(&DAT_107b4b50,"TeslaHitboxes",FUN_10353ab0);
  FUN_10344080(&DAT_107b4b5c,"TeslaZap",FUN_10354130);
  FUN_10344080(&DAT_107b4c20,"ManhackSparks",FUN_10358bf0);
  FUN_103444b0((byte *)"Impact",&local_6c);
  FUN_103444b0((byte *)"ParticleEffectStop",local_6c);
  FUN_1034f610((int *)&local_8,"TEShowLine",pfVar1);
  FUN_10356d70(&DAT_10683f80,"Bullet");
  FUN_10356d70(&DAT_10684a14,"PlayerAnimEvent");
  FUN_10356d70(&DAT_1068ff6c,"DogAnimEvent");
  FUN_10356d70(&DAT_10690aa4,"HostageAnimEvent");
  FUN_10356d70(&DAT_10691c44,"Shotgun Shot");
  FUN_10356d70(&DAT_1069f16c,"Metal Sparks");
  FUN_10356d70(&DAT_1069f1bc,"Armor Ricochet");
  FUN_10356d70(&DAT_106a06f0,"BeamSpline");
  FUN_10356d70(&DAT_106a14d4,"BSP Decal");
  FUN_10356d70(&DAT_106a1f84,"Entity Decal");
  FUN_10356d70(&DAT_106a25e8,"EffectDispatch");
  FUN_10356d70(&DAT_106a2f40,"Footprint Decal");
  FUN_10356d70(&DAT_106a31ec,"GaussExplosion");
  FUN_10356d70(&DAT_106a3c0c,"Impact");
  FUN_10356d70(&DAT_106a3e0c,"KillPlayerAttachments");
  FUN_10356d70(&DAT_106a3f4c,"Large Funnel");
  FUN_10356d70(&DAT_106a492c,"Player Decal");
  FUN_10356d70(&DAT_106a4d78,"Show Line");
  FUN_10356d70(&DAT_106a5118,"Sparks");
  FUN_10356d70(&DAT_106a5870,"World Decal");
  FUN_10359990(&DAT_10715950,"C_Beam");
  FUN_10359990(&DAT_10729b04,"C_InfoOverlayAccessor");
  FUN_1035d6e0(&DAT_1069fbc8,"BeamEnts");
  FUN_1035d6e0(&DAT_1069fda0,"BeamFollow");
  FUN_1035d6e0(&DAT_1069ff20,"BeamLaser");
  FUN_1035d6e0(&DAT_106a00f8,"BeamPoints");
  FUN_1035d6e0(&DAT_106a02e0,"BeamRing");
  FUN_1035d990(&DAT_1069f930,"BeamEntPoint");
  FUN_1035f300(&DAT_106a04b8,"BeamRingPoint");
  FUN_1035fd40(&DAT_106a0948,"Blood Sprite");
  FUN_10360260(&DAT_106a0d00,"Blood Stream");
  FUN_103608c0(&DAT_106a1010,"breakmodel");
  FUN_10361190(&DAT_106a16cc,"Bubbles");
  FUN_10361750(&DAT_106a19d0,"Bubble Trail");
  FUN_10361cc0(&DAT_106a1cd8,"Client Projectile");
  FUN_103626a0(&DAT_106a2234,"Dynamic Light");
  FUN_10362c20(param_7,0,(int)"ParticleEffect",&local_6c);
  FUN_10362c70((int)"FireExtinguisherExplosion",&local_6c);
  FUN_10362c70((int)"FlashBangExplosion",&local_84);
  FUN_10362c70((int)"GlassImpact",&local_cc);
  FUN_10362c70((int)"ParticleEffect",&local_6c);
  FUN_10362c70((int)"PropaneTankExplosion",&local_d8);
  FUN_10362c70((int)"RPGShotDown",&local_6c);
  FUN_10362c70((int)"ShakeRopes",&local_6c);
  FUN_10362c70((int)"TireExplode",&local_78);
  FUN_10362c70((int)"TireExplode",&local_a8);
  FUN_10362c70((int)"Tracer",&local_6c);
  FUN_10362c70((int)"bloodimpact",&local_6c);
  FUN_10362c70((int)"watersplash",&local_7c);
  FUN_10362d00((int)"ExplosionBomb",&local_8c);
  FUN_10362f10(&DAT_106a278c,"Energy Splash");
  FUN_103633b0(&DAT_106a2940,"Explosion");
  FUN_10364120(&DAT_106a33a0,"Surface Shatter");
  FUN_10364930(&DAT_106a3968,"GlowSprite");
  FUN_103653e0(&DAT_106a40f0,"MuzzleFlash");
  FUN_10365910(&DAT_106a4520,"physicsprop");
  FUN_103660a0(&DAT_106a4b24,"Projected Decal");
  FUN_10366920(&DAT_106a4ecc,"Smoke");
  FUN_10367140(&DAT_106a531c,"Sprite");
  FUN_10367610(&DAT_106a5568,"Sprite Spray");
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"AchNotify",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Achieve",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"AddLocator",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"AdviseGrenade",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"AlwaysMiniMap",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"AmmoDenied",2);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Announcer",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"BarTime",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"CallVoteFailed",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"CancelCrosshair",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"ChangePaintColor",5);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"CloseCaption",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"CloseCaptionDirect",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"CurrentTimescale",4);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Damage",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"DenyBlockade",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"DesiredTimescale",0xd);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"DisplayObjectiveText",2);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"DogAnimEvent",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"DogMarker",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"EndOfMatch",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"EnemyHit",0);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Friend",4);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"GameMessage",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"GameTitle",0);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Geiger",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"GetRequisitionItem",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"GetSuitcaseZone",0xc);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"HR_RemindPlayerOfObjective",0xd);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"HintText",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"HostageAnimEvent",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"HudMsg",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"HudPingIndicator",0xc);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"HudText",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"IncUserStat",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"IncUserStatW",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"ItemPickup",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"KeyHintText",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"KillCam",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"KilledBy",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"MDRecord",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"MDStop",0);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"MatchCounts",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"MeleeClubSplatter",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"MeleeSlashSplatter",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"MissionIntro",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"MudSplatter",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"OpenRadialMenu",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"PaintAllSurfaces",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"PaintBombExplode",0xf);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"PaintEntity",0x11);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"PaintWorld",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"PlayerAnimEvent",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"ProgressBar",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Radio",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"RadioText",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"ReloadEffect",2);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"RemoveAllPaint",0);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"RemovePaint",4);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"RequestState",0);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"ResetHUD",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"ResetRoundTimer",2);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Rumble",3);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"SayText",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"SayText2",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"SendAudio",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"SetFOV",2);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Shake",0xd);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"ShowHostages",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"ShowMenu",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Splatter",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"SplatterClear",0);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"SquadSel",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"TDMKillStreakBonus",3);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"TextMsg",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"Train",1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"TutorClose",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"TutorLine",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"TutorState",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"TutorText",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"UpdateBonuses",6);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"UpdateObjective",0xd);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"VGUIMenu",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"VoiceMask",9);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"VoteFailed",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"VotePass",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"VoteSetup",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"VoteStart",-1);
  FUN_10368480(PTR_PTR_FUN_105e5b28,(undefined4 *)"WP_Reload",0);
  FUN_10368530(PTR_PTR_FUN_105e5b28,(int)"friend");
  FUN_10368590(local_24,(int)"AlwaysMiniMap");
  FUN_10368590(local_24,(int)"CreditsMsg");
  FUN_10368590(local_24,(int)"HudMsg");
  FUN_10368590(local_24,(int)"HudText");
  FUN_10368590(local_24,(int)"MDRecord");
  FUN_10368590(local_24,(int)"MatchCounts");
  FUN_10368590(local_24,(int)"Shake");
  FUN_10368590(local_24,(int)"StatsCrawlMsg");
  FUN_10368590(local_24,(int)"VGUIMenu");
  FUN_10368590(local_24,(int)"creditsMsg");
  FUN_10368590(local_2c,(int)"MatchCounts");
  FUN_10368590(local_2c,(int)"ResetHUD");
  FUN_10368590(local_3c,(int)"MatchCounts");
  FUN_10368590(local_3c,(int)"UpdateBonuses");
  FUN_10368590(local_40,(int)"TDMKillStreakBonus");
  FUN_10368590(local_48,(int)"SplatterClear");
  FUN_10368590(local_48,(int)"WP_Reload");
  FUN_10368590(local_54,(int)"DenyBlockade");
  FUN_10368590(local_5c,(int)"MissionIntro");
  FUN_10368590(param_1,(int)"SayText");
  FUN_10368590(param_1,(int)"SayText2");
  FUN_10368590(param_1,(int)"TextMsg");
  FUN_10387000(param_1,(byte *)"C_BaseFlex::AddSceneEvent:  event failed\n");
  FUN_1038bd90(param_1,(uint *)"particles/particles_manifest.txt");
  FUN_1038c4b0(this,(uint *)"constraints",6,param_1,(int *)((int)this + 0x1a8));
  FUN_1038c4b0(this,(uint *)"emitters",3,param_1,(int *)((int)this + 0x180));
  FUN_1038c4b0(this,(uint *)"forces",5,param_1,(int *)((int)this + 0x194));
  FUN_1038c4b0(this,(uint *)"initializers",2,param_1,(int *)((int)this + 0x16c));
  FUN_1038c4b0(this,(uint *)"operators",1,param_1,(int *)((int)this + 0x144));
  FUN_1038c4b0(this,(uint *)"renderers",0,param_1,(int *)((int)this + 0x158));
  FUN_1038d930(&DAT_105fdbd0,(int *)"TLK_ANSWER");
  FUN_1038d930(&DAT_105fdbf8,(int *)"TLK_ANSWER_HELLO");
  FUN_1038d930(&DAT_105fdc20,(int *)"TLK_QUESTION");
  FUN_1038d930(&DAT_105fdc48,(int *)"TLK_IDLE");
  FUN_1038d930(&DAT_105fdc70,(int *)"TLK_STARE");
  FUN_1038d930(&DAT_105fdc98,(int *)"TLK_LOOK");
  FUN_1038d930(&DAT_105fdcc0,(int *)"TLK_HELLO");
  FUN_1038d930(&DAT_105fdce8,(int *)"TLK_PHELLO");
  FUN_1038d930(&DAT_105fdd10,(int *)"TLK_HELLO_NPC");
  FUN_1038d930(&DAT_105fdd38,(int *)"TLK_PIDLE");
  FUN_1038d930(&DAT_105fdd60,(int *)"TLK_PQUESTION");
  FUN_1038d930(&DAT_105fdd88,(int *)"TLK_SMELL");
  FUN_1038d930(&DAT_105fddb0,(int *)"TLK_USE");
  FUN_1038d930(&DAT_105fddd8,(int *)"TLK_STARTFOLLOW");
  FUN_1038d930(&DAT_105fde00,(int *)"TLK_STOPFOLLOW");
  FUN_1038d930(&DAT_105fde28,(int *)"TLK_JOINPLAYER");
  FUN_1038d930(&DAT_105fde50,(int *)"TLK_STOP");
  FUN_1038d930(&DAT_105fde78,(int *)"TLK_NOSHOOT");
  FUN_1038d930(&DAT_105fdea0,(int *)"TLK_PLHURT1");
  FUN_1038d930(&DAT_105fdec8,(int *)"TLK_PLHURT2");
  FUN_1038d930(&DAT_105fdef0,(int *)"TLK_PLHURT3");
  FUN_1038d930(&DAT_105fdf18,(int *)"TLK_PLHURT");
  FUN_1038d930(&DAT_105fdf40,(int *)"TLK_PLPUSH");
  FUN_1038d930(&DAT_105fdf68,(int *)"TLK_PLRELOAD");
  FUN_1038d930(&DAT_105fdf90,(int *)"TLK_SHOT");
  FUN_1038d930(&DAT_105fdfb8,(int *)"TLK_WOUND");
  FUN_1038d930(&DAT_105fdfe0,(int *)"TLK_MORTAL");
  FUN_1038d930(&DAT_105fe008,(int *)"TLK_SEE_COMBINE");
  FUN_1038d930(&DAT_105fe030,(int *)"TLK_ENEMY_DEAD");
  FUN_1038d930(&DAT_105fe058,(int *)"TLK_ALYX_ENEMY_DEAD");
  FUN_1038d930(&DAT_105fe080,(int *)"TLK_SELECTED");
  FUN_1038d930(&DAT_105fe0a8,(int *)"TLK_COMMANDED");
  FUN_1038d930(&DAT_105fe0d0,(int *)"TLK_COMMAND_FAILED");
  FUN_1038d930(&DAT_105fe0f8,(int *)"TLK_DENY_COMMAND");
  FUN_1038d930(&DAT_105fe120,(int *)"TLK_BETRAYED");
  FUN_1038d930(&DAT_105fe148,(int *)"TLK_ALLY_KILLED");
  FUN_1038d930(&DAT_105fe170,(int *)"TLK_ATTACKING");
  FUN_1038d930(&DAT_105fe198,(int *)"TLK_HEAL");
  FUN_1038d930(&DAT_105fe1c0,(int *)"TLK_GIVEAMMO");
  FUN_1038d930(&DAT_105fe1e8,(int *)"TLK_HELP_ME");
  FUN_1038d930(&DAT_105fe210,(int *)"TLK_PLYR_PHYSATK");
  FUN_1038d930(&DAT_105fe238,(int *)"TLK_NEWWEAPON");
  FUN_1038d930(&DAT_105fe260,(int *)"TLK_STARTCOMBAT");
  FUN_1038d930(&DAT_105fe288,(int *)"TLK_WATCHOUT");
  FUN_1038d930(&DAT_105fe2b0,(int *)"TLK_MOBBED");
  FUN_1038d930(&DAT_105fe2d8,(int *)"TLK_MANY_ENEMIES");
  FUN_1038d930(&DAT_105fe300,(int *)"TLK_DANGER");
  FUN_1038d930(&DAT_105fe328,(int *)"TLK_PLDEAD");
  FUN_1038d930(&DAT_105fe350,(int *)"TLK_HIDEANDRELOAD");
  FUN_1038d930(&DAT_105fe378,(int *)"TLK_FLASHLIGHT_ILLUM");
  FUN_1038d930(&DAT_105fe3a0,(int *)"TLK_FLASHLIGHT_ON");
  FUN_1038d930(&DAT_105fe3c8,(int *)"TLK_FLASHLIGHT_OFF");
  FUN_1038d930(&DAT_105fe3f0,(int *)"TLK_FOUNDPLAYER");
  FUN_1038d930(&DAT_105fe418,(int *)"TLK_PLAYER_KILLED_NPC");
  FUN_1038d930(&DAT_105fe440,(int *)"TLK_ENEMY_BURNING");
  FUN_1038d930(&DAT_105fe468,(int *)"TLK_SPOTTED_ZOMBIE_WAKEUP");
  FUN_1038d930(&DAT_105fe490,(int *)"TLK_SPOTTED_HEADCRAB_LEAVING_ZOMBIE");
  FUN_1038d930(&DAT_105fe4b8,(int *)"TLK_DANGER_ZOMBINE_GRENADE");
  FUN_1038d930(&DAT_105fe4e0,(int *)"TLK_BALLSOCKETED");
  FUN_1038d930(&DAT_105fe508,(int *)"TLK_DARKNESS_LOSTPLAYER");
  FUN_1038d930(&DAT_105fe530,(int *)"TLK_DARKNESS_FOUNDPLAYER");
  FUN_1038d930(&DAT_105fe558,(int *)"TLK_DARKNESS_UNKNOWN_WOUND");
  FUN_1038d930(&DAT_105fe580,(int *)"TLK_DARKNESS_HEARDSOUND");
  FUN_1038d930(&DAT_105fe5a8,(int *)"TLK_DARKNESS_LOSTENEMY_BY_FLASHLIGHT");
  FUN_1038d930(&DAT_105fe5d0,(int *)"TLK_DARKNESS_LOSTENEMY_BY_FLASHLIGHT_EXPIRED");
  FUN_1038d930(&DAT_105fe5f8,(int *)"TLK_DARKNESS_FOUNDENEMY_BY_FLASHLIGHT");
  FUN_1038d930(&DAT_105fe620,(int *)"TLK_DARKNESS_FLASHLIGHT_EXPIRED");
  FUN_1038d930(&DAT_105fe648,(int *)"TLK_SPOTTED_INCOMING_HEADCRAB");
  FUN_1038d930(&DAT_105fe670,(int *)"TLK_LEAD_START");
  FUN_1038d930(&DAT_105fe698,(int *)"TLK_LEAD_ARRIVAL");
  FUN_1038d930(&DAT_105fe6c0,(int *)"TLK_LEAD_SUCCESS");
  FUN_1038d930(&DAT_105fe6e8,(int *)"lead_fail");
  FUN_1038d930(&DAT_105fe710,(int *)"TLK_LEAD_COMINGBACK");
  FUN_1038d930(&DAT_105fe738,(int *)"TLK_LEAD_CATCHUP");
  FUN_1038d930(&DAT_105fe760,(int *)"TLK_LEAD_RETRIEVE");
  FUN_1038d930(&DAT_105fe788,(int *)"TLK_LEAD_ATTRACTPLAYER");
  FUN_1038d930(&DAT_105fe7b0,(int *)"TLK_LEAD_WAITOVER");
  FUN_1038d930(&DAT_105fe7d8,(int *)"TLK_LEAD_MISSING_WEAPON");
  FUN_1038d930(&DAT_105fe800,(int *)"TLK_LEAD_IDLE");
  FUN_1038d930(&DAT_105fe828,(int *)"TLK_PASSENGER_NEW_RADAR_CONTACT");
  FUN_1038d930(&stack0xffffffdc,(int *)"TLK_ANSWER");
  FUN_1038daa0(param_1,(int *)"classname",(int)puVar5,0x3f800000);
  FUN_1038daa0(param_1,(int *)"concept",(int)puVar3,uVar5);
  FUN_1038daa0(param_1,(int *)"distancetoenemy",(int)&DAT_1043b6a0,0x3f800000);
  FUN_1038daa0(param_1,(int *)"health",(int)puVar2,uVar8);
  FUN_1038daa0(param_1,(int *)"healthfrac",(int)puVar2,uVar8);
  FUN_1038daa0(param_1,(int *)"playeractivity",(int)pcVar3,uVar5);
  FUN_1038daa0(param_1,(int *)"playerhealth",(int)puVar1,uVar5);
  FUN_1038daa0(param_1,(int *)"playerhealthfrac",(int)puVar1,uVar5);
  FUN_1038daa0(param_1,(int *)"playerspeed",(int)puVar1,uVar5);
  FUN_1038daa0(param_1,(int *)"playerweapon",(int)puVar4,0x3f800000);
  FUN_1038daa0(param_1,(int *)"randomnum",(int)puVar2,uVar8);
  FUN_1038daa0(param_1,(int *)"timesinceseenplayer",(int)puVar2,uVar4);
  FUN_1038daa0(param_2,(int *)"distancetoplayer",(int)puVar3,uVar8);
  FUN_1038daa0(param_2,(int *)"seenbyplayer",(int)&DAT_10436dec,0x3f800000);
  FUN_1038daa0(param_2,(int *)"seeplayer",(int)puVar3,0x3f800000);
  FUN_1038daa0(param_2,(int *)"speed",(int)puVar3,uVar8);
  FUN_1038daa0(param_2,(int *)"timesincecombat",(int)pcVar2,uVar8);
  FUN_1038daa0(param_2,(int *)"weapon",(int)puVar7,0x3f800000);
  FUN_103963c0((int)param_1,(byte *)"Expecting more tokens in rule \'%s\'\n");
  FUN_103963c0((int)this,(byte *)"FIRE token in response needs exactly three parameters.");
  FUN_103963c0((int)this,(byte *)"No such enumeration \'%s\'\n");
  FUN_103963c0((int)this,(byte *)"response entry \'%s\' with unknown response type \'%s\'\n");
  FUN_103987a0((char *)local_138,".vcd",0x104);
  FUN_10399150(&DAT_10682308,0x100,(byte *)"maps\\%s.bsp");
  FUN_10399150(&DAT_10682408,0x100,(byte *)"%s\\maps\\%s.nav");
  FUN_10399150(&DAT_106a5ce0,0x100,(byte *)"%s : %s : %s -- %s \"%s\"");
  FUN_10399150(&DAT_106ccaa8,0x400,(byte *)"%s, string command, int default");
  FUN_10399150(&DAT_106d0000,0x400,(byte *)"%s, string image");
  FUN_10399150(&DAT_106d1018,0x400,(byte *)"%s, int SubTabPosition");
  FUN_10399150(&DAT_106d1488,0x400,(byte *)"%s, string text, bool scrollbar");
  FUN_10399150(&DAT_106d3a18,0x200,(byte *)"%s, string title");
  FUN_10399150((char *)(unaff_EBP + -0x210),0x100,(byte *)"maps\\%s.nav");
  FUN_10399150((char *)(unaff_EBP + -0x310),0x100,(byte *)"maps\\%s.bsp");
  FUN_10399150((char *)local_148,0x104,(byte *)"scripts/plans/%s.res");
  FUN_10399150((char *)local_1ac,0x104,(byte *)"maps/%s_particles.txt");
  FUN_10399150((char *)local_1cc,0x104,(byte *)"maps/%s.txt");
  FUN_10399150((char *)local_20c,0x200,(byte *)"%s.txt");
  FUN_10399150((char *)local_5c,0x40,(byte *)"vehicle_feet_passenger%d");
  FUN_10399150((char *)local_d8,0x7f,(byte *)"maps/%s.res");
  FUN_10399150(_Src,_Size + 1,(byte *)"%c%.4d");
  FUN_10399150(local_104,0x100,(byte *)"%f %f %f");
  FUN_10399150(local_104,0xff,(byte *)"kickid FKID_%i User Left Room\n");
  FUN_10399150(local_10c,0x100,(byte *)"exec skill%d.cfg\n");
  FUN_10399150(local_134,0x100,(byte *)"scripts/%s");
  FUN_10399150(local_148,0x100,(byte *)"%s (RAGDOLL)");
  FUN_10399150(local_148,0x104,(byte *)"scripts/plans/%s.res");
  FUN_10399150(local_158,0x7f,(byte *)"maps/%s.bsp");
  FUN_10399150(local_170,0x100,(byte *)"maps\\%s.nav");
  FUN_10399150(local_1c8,0xff,(byte *)"Displaying:\n%s\n\n");
  FUN_10399150(local_204,0x200,(byte *)"%s%d.vmt");
  FUN_10399150(local_204,0x200,(byte *)"Active: %s");
  FUN_10399150(local_204,0x200,(byte *)"Avelocity: %.2f %.2f %.2f");
  FUN_10399150(local_204,0x200,(byte *)"Cancel Other Sequences: %s");
  FUN_10399150(local_204,0x200,(byte *)"Sequence has started: %s");
  FUN_10399150(local_204,0x200,(byte *)"Start Time: %f");
  FUN_10399150(local_204,0x200,(byte *)"State: %s");
  FUN_10399150(local_204,0x200,(byte *)"Target: %s");
  FUN_10399150(local_204,0x200,(byte *)"Thinking: %s");
  FUN_10399150(local_204,0x200,(byte *)"Will synch post idles");
  FUN_10399150(local_20c,0x104,(byte *)"%s/*.*");
  FUN_10399150(local_20c,0x200,(byte *)"%s: \'%s\'");
  FUN_10399150(local_214,0x100,(byte *)"maps\\%s.nav");
  FUN_10399150(local_21c,0x200,(byte *)"Health: %i  (DACC:%1.2f)");
  FUN_10399150(local_268,0x200,(byte *)"default");
  FUN_10399150(local_30c,0x200,(byte *)"%sjunk");
  FUN_10399150(local_314,0x100,(byte *)"maps\\%s.bsp");
  FUN_10399150(local_428,0x104,(byte *)"materials/vgui/%s/*.vmt");
  FUN_10399150(local_44,0x40,(byte *)"callvote %s <userID>\n");
  FUN_10399150(local_44,0x40,(byte *)"callvote %s\n");
  FUN_10399150(local_50c,0x200,(byte *)"scenes/%s%s*.*");
  FUN_10399150(local_804,0x800,(byte *)"entity_rotate_incremental %s %f %f %f %f %f %f");
  FUN_10399150(local_804,0x800,(byte *)"entity_set_keyvalue %s %f %f %f \"%s\" \"%s\"");
  FUN_10399150(local_804,0x800,(byte *)"map_check_version %s %d");
  FUN_10399150(local_804,0x800,(byte *)"node_create %s %d %g %g %g");
  FUN_10399150(local_804,0x800,(byte *)"node_delete %d");
  FUN_10399150(local_804,0x800,(byte *)"nodelink_create %d %d");
  FUN_10399150(local_804,0x800,(byte *)"nodelink_delete %d %d");
  FUN_10399150(local_84,0x80,(byte *)"gamestats_");
  FUN_10399150(local_84,0x80,(byte *)"scripts/%s");
  FUN_10399150(param_1,param_2,(byte *)"%-64.64s %03d:%02d");
  FUN_10399370(&DAT_10646ad0,"_gamestats.dat",0x100,0xffffffff);
  FUN_10399370(local_134,"\n",0x100,0xffffffff);
  FUN_10399370(param_1,".mdl",param_2,0xffffffff);
  FUN_10399450(&DAT_1060b2b8,(int)"<<null entity>>",0x200);
  FUN_10399450(&DAT_10646bd0,(int)"GameStatsUpload_",0x100);
  FUN_10399450((char *)(param_1 + 0x400),(int)"default",0x200);
  FUN_10399450(local_248,(int)"player",0x200);
  FUN_103996f0((int)(param_1 + 0xf6),"effects/flashlight001");
  FUN_103996f0((int)(param_1 + 0xf6),"effects/flashlight_border");
  FUN_103996f0((int)param_1,"");
  FUN_10399bc0(&DAT_105fd550,(int)"ai_set_move_height_epsilon",(int)FUN_1005ee40,
  FUN_10399bc0(&DAT_105fd880,(int)"ai_debug_node_connect",(int)FUN_1006c700,
  FUN_10399bc0(&DAT_105fe994,(int)"rr_reloadresponsesystems",(int)FUN_10075a10,
  FUN_10399bc0(&DAT_10603490,(int)"npc_speakall",(int)FUN_1007e470,
  FUN_10399bc0(&DAT_10605d4c,(int)"ent_name",(int)FUN_100a5370,(undefined *)0x0,0x4000,
  FUN_10399bc0(&DAT_10605d70,(int)"ent_text",(int)FUN_100a5bf0,
  FUN_10399bc0(&DAT_10605d94,(int)"ent_script_dump",(int)FUN_100a5810,
  FUN_10399bc0(&DAT_10605db8,(int)"ent_bbox",(int)FUN_100a4e60,
  FUN_10399bc0(&DAT_10605ddc,(int)"ent_absbox",(int)FUN_100a4dc0,
  FUN_10399bc0(&DAT_10605e00,(int)"ent_rbox",(int)FUN_100a5530,
  FUN_10399bc0(&DAT_10605e24,(int)"ent_attachments",(int)FUN_100a4e00,
  FUN_10399bc0(&DAT_10605e48,(int)"ent_viewoffset",(int)FUN_100a5c30,
  FUN_10399bc0(&DAT_10605e6c,(int)"ent_remove",(int)FUN_100a5570,
  FUN_10399bc0(&DAT_10605e90,(int)"ent_remove_all",(int)FUN_100a56d0,
  FUN_10399bc0(&DAT_10605eb4,(int)"ent_setname",(int)FUN_100a5850,
  FUN_10399bc0(&DAT_10605ed8,(int)"find_ent",(int)FUN_100a5c60,
  FUN_10399bc0(&DAT_10605efc,(int)"find_ent_index",(int)FUN_100a5d80,
  FUN_10399bc0(&DAT_10605f20,(int)"ent_dump",(int)FUN_100a50a0,"Usage:\n   ent_dump <entity name>\n"
  FUN_10399bc0(&DAT_10605f44,(int)"firetarget",(int)FUN_100a5150,(undefined *)0x0,0x4000,
  FUN_10399bc0(&DAT_10605f8c,(int)"ent_cancelpendingentfires",(int)FUN_100a4ea0,
  FUN_10399bc0(&DAT_10605fb0,(int)"ent_info",(int)FUN_100a5190,"Usage:\n   ent_info <class name>\n",
  FUN_10399bc0(&DAT_10605fd4,(int)"ent_messages",(int)FUN_100a5330,
  FUN_10399bc0(&DAT_10606040,(int)"ent_pivot",(int)FUN_100a54f0,
  FUN_10399bc0(&DAT_10606064,(int)"ent_step",(int)FUN_100a5b60,
  FUN_10399bc0(&DAT_10606088,(int)"ent_show_response_criteria",(int)FUN_100a59f0,
  FUN_10399bc0(&DAT_106060ac,(int)"ent_autoaim",(int)FUN_100a4e30,
  FUN_10399bc0(&DAT_10606128,(int)"ent_create",(int)FUN_100a4ee0,
  FUN_10399bc0(&DAT_1060614c,(int)"ent_teleport",(int)FUN_100a5ba0,
  FUN_10399bc0(&DAT_10606170,(int)"ent_orient",(int)FUN_100a53b0,
  FUN_10399bc0(&DAT_1060b4f4,(int)"drawline",(int)FUN_100d2d10,
  FUN_10399bc0(&DAT_1060b518,(int)"drawcross",(int)FUN_100d2ba0,
  FUN_10399bc0(&DAT_1060b53c,(int)&DAT_1046407c,(int)FUN_100d4ea0,"Display player message",0,
  FUN_10399bc0(&DAT_1060b560,(int)"say_team",(int)FUN_100d4f30,"Display player message to team",0,
  FUN_10399bc0(&DAT_1060b584,(int)"setmodel",(int)FUN_100d30f0,"Changes\'s player\'s model",0x4000,
  FUN_10399bc0(&DAT_1060b5a8,(int)"test_dispatcheffect",(int)FUN_100d3180,
  FUN_10399bc0(&DAT_1060b614,(int)"noclip",(int)FUN_100d4e00,
  FUN_10399bc0(&DAT_1060b6b4,(int)"ent_setpos",(int)FUN_100d4cb0,"Move entity to position",0x4000,
  FUN_10399bc0(&DAT_1060b6d8,(int)"ent_setang",(int)FUN_100d4b60,"Set entity angles",0x4000,
  FUN_10399bc0(&DAT_1060b6fc,(int)"setpos",(int)FUN_100d50f0,
  FUN_10399bc0(&DAT_1060b720,(int)"setpos_player",(int)FUN_100d5410,
  FUN_10399bc0(&DAT_1060b744,(int)"setang",(int)FUN_100d3510,
  FUN_10399bc0(&DAT_1060b768,(int)"setpos_exact",(int)FUN_100d52a0,
  FUN_10399bc0(&DAT_1060b78c,(int)"setang_exact",(int)FUN_100d4fa0,
  FUN_10399bc0(&DAT_1060b7d4,(int)"hurtme",(int)FUN_100d2ee0,
  FUN_10399bc0(&DAT_1060b7f8,(int)"groundlist",(int)FUN_100d2e60,
  FUN_10399bc0(&DAT_1063fabc,(int)"cl_csm_server_status",(int)FUN_100f1b40,
  FUN_10399bc0(&DAT_1063fda8,(int)"dbghist_addline",(int)FUN_100f2350,
  FUN_10399bc0(&DAT_1063fdcc,(int)"dbghist_dump",(int)FUN_100f2390,
  FUN_10399bc0(&DAT_106403bc,(int)"create_flashlight",(int)FUN_100f4cd0,(undefined *)0x0,0x4000,
  FUN_10399bc0(&DAT_1064169c,(int)"fadeout",(int)FUN_100fa4e0,
  FUN_10399bc0(&DAT_106416c0,(int)"fadein",(int)FUN_100fa490,
  FUN_10399bc0(&DAT_1064177c,(int)"test_outtro_stats",(int)FUN_100fb990,(undefined *)0x0,0x4000,
  FUN_10399bc0(&DAT_1064af6c,(int)"dump_globals",(int)FUN_101247f0,"Dump all global entities/states"
  FUN_10399bc0(&DAT_1064af98,(int)"server_game_time",(int)FUN_10124810,
  FUN_10399bc0(&DAT_1064c2c4,(int)"global_set",(int)FUN_10131370,
  FUN_10399bc0(&DAT_1064dcb8,(int)"clear_debug_overlays",(int)FUN_10142030,"clears debug overlays",0
  FUN_10399bc0(&DAT_1064e020,(int)"particle_test_start",(int)FUN_101426c0,
  FUN_10399bc0(&DAT_1064e044,(int)"particle_test_stop",(int)FUN_10142700,
  FUN_10399bc0(&DAT_1064ec54,(int)"physics_highlight_active",(int)FUN_10151950,
  FUN_10399bc0(&DAT_1064ecd0,(int)"physics_report_active",(int)FUN_10151970,
  FUN_10399bc0(&DAT_1064ecf4,(int)"surfaceprop",(int)FUN_101519b0,
  FUN_10399bc0(&DAT_1064ed18,(int)"physics_constraints",(int)FUN_10151910,
  FUN_10399bc0(&DAT_1064ed3c,(int)"physics_debug_entity",(int)FUN_10151930,
  FUN_10399bc0(&DAT_1064ed60,(int)"physics_select",(int)FUN_10151990,
  FUN_10399bc0(&DAT_1064ed84,(int)"physics_budget",(int)FUN_101514d0,
  FUN_10399bc0(&DAT_1064eeb0,(int)"air_density",(int)FUN_1014c3a0,
  FUN_10399bc0(&DAT_10650b8c,(int)"mp_disable_autokick",(int)FUN_10181aa0,
  FUN_10399bc0(&DAT_1065314c,(int)"prop_dynamic_create",(int)FUN_101975b0,
  FUN_10399bc0(&DAT_10653170,(int)"prop_physics_create",(int)FUN_10197ac0,
  FUN_10399bc0(&DAT_10653194,(int)"ent_rotate",(int)FUN_10197470,
  FUN_10399bc0(&DAT_1066e514,(int)"sv_querycache_stats",(int)FUN_101a7000,
  FUN_10399bc0(&DAT_10672124,(int)"scene_playvcd",(int)FUN_101bddf0,
  FUN_10399bc0(&DAT_10672198,(int)"scene_flush",(int)FUN_101bddc0,
  FUN_10399bc0(&DAT_10672824,(int)"sv_benchmark_force_start",(int)FUN_101c3640,
  FUN_10399bc0(&DAT_10673218,(int)"sv_soundemitter_flush",(int)FUN_101c9940,
  FUN_10399bc0(&DAT_1067323c,(int)"sv_soundemitter_filecheck",(int)FUN_101c9910,
  FUN_10399bc0(&DAT_10673260,(int)"sv_soundemitter_reload",(int)FUN_101c9990,
  FUN_10399bc0(&DAT_10673284,(int)"sv_findsoundname",(int)FUN_101c9800,
  FUN_10399bc0(&DAT_106732a8,(int)"sv_soundemitter_spew",(int)FUN_101c9a00,
  FUN_10399bc0(&DAT_10673440,(int)"report_soundpatch",(int)FUN_101ccf10,"reports sound patch count",
  FUN_10399bc0(&DAT_10673800,(int)"soundscape_flush",(int)FUN_101cf5a0,
  FUN_10399bc0(&DAT_10673824,(int)"sv_soundscape_printdebuginfo",(int)FUN_101cf680,
  FUN_10399bc0(&DAT_10675d30,(int)"showtriggers_toggle",(int)FUN_101e6580,"Toggle show triggers",
  FUN_10399bc0(&DAT_10676c4c,(int)"dump_entity_sizes",(int)FUN_101f6af0,"Print sizeof(entclass)",0,
  FUN_10399bc0(&DAT_10676cb4,(int)"kdtree_test",(int)&DAT_101f27d0,
  FUN_10399bc0(&DAT_1067ad94,(int)"voxeltree_box",(int)FUN_101f2ea0,
  FUN_10399bc0(&DAT_1067adb8,(int)"voxeltree_sphere",(int)FUN_101f3370,
  FUN_10399bc0(&DAT_1067addc,(int)"collision_test",(int)FUN_101f20f0,"Tests collision system",0x4000
  FUN_10399bc0(&DAT_1067e1c0,(int)"script_reload_code",(int)FUN_101fbae0,
  FUN_10399bc0(&DAT_1067e1e4,(int)"script_reload_entity_code",(int)FUN_101fbb70,
  FUN_10399bc0(&DAT_1067e208,(int)"script_reload_think",(int)FUN_101fbd10,
  FUN_10399bc0(&DAT_1067e24c,(int)"script",(int)FUN_101fbfc0,"Run the text as a script",0,
  FUN_10399bc0(&DAT_1067e270,(int)"script_execute",(int)FUN_101fc130,"Run a vscript file",0,
  FUN_10399bc0(&DAT_1067e294,(int)"script_debug",(int)FUN_101fc0b0,
  FUN_10399bc0(&DAT_1067e2b8,(int)"script_help",(int)FUN_101fc1b0,
  FUN_10399bc0(&DAT_1067e2dc,(int)"script_dump_all",(int)FUN_101fc0f0,
  FUN_10399bc0(&DAT_1067e714,(int)"hammer_update_entity",(int)FUN_101fdcc0,
  FUN_10399bc0(&DAT_1067e738,(int)"hammer_update_safe_entities",(int)FUN_101fde30,
  FUN_10399bc0(&DAT_1067f85c,(int)"nav_update_lighting",(int)FUN_1020f4e0,
  FUN_10399bc0(&DAT_1067fdc8,(int)"nav_mark_playerclips",(int)FUN_1020ba00,
  FUN_10399bc0(&DAT_106821e8,(int)"nav_shift",(int)FUN_10218870,
  FUN_10399bc0(&DAT_10682230,(int)"nav_select_radius",(int)FUN_10218780,
  FUN_10399bc0(&DAT_10682844,(int)"nav_test_stairs",(int)FUN_1022ade0,
  FUN_10399bc0(&DAT_10682868,(int)"nav_subdivide",(int)FUN_1022ada0,"Subdivides all selected areas."
  FUN_10399bc0(&DAT_1068288c,(int)"nav_gen_cliffs_approx",(int)FUN_1022ad80,
  FUN_10399bc0(&DAT_106828fc,(int)"nav_save_selected",(int)FUN_1022e000,
  FUN_10399bc0(&DAT_10682920,(int)"nav_merge_mesh",(int)FUN_1022dfe0,
  FUN_10399bc0(&DAT_10682bd4,(int)"nav_flood_select",(int)FUN_10233280,
  FUN_10399bc0(&DAT_10682c88,(int)"nav_add_to_selected_set_by_id",(int)FUN_102331c0,
  FUN_10399bc0(&DAT_10682f10,(int)"nav_select_half_space",(int)FUN_10233310,
  FUN_10399bc0(&DAT_10682fa0,(int)"nav_select_blocked_areas",(int)FUN_102332b0,
  FUN_10399bc0(&DAT_10682fc4,(int)"nav_select_obstructed_areas",(int)FUN_10233340,
  FUN_10399bc0(&DAT_10682fe8,(int)"nav_select_damaging_areas",(int)FUN_102332e0,
  FUN_10399bc0(&DAT_1068300c,(int)"nav_select_stairs",(int)FUN_10233370,
  FUN_10399bc0(&DAT_1068309c,(int)"nav_mark",(int)FUN_1022f6e0,
  FUN_10399bc0(&DAT_106833d8,(int)"nav_use_place",(int)FUN_102300a0,
  FUN_10399bc0(&DAT_106833fc,(int)"nav_place_replace",(int)FUN_1022fa90,
  FUN_10399bc0(&DAT_10683468,(int)"nav_set_place_mode",(int)FUN_1022fd80,
  FUN_10399bc0(&DAT_10683564,(int)"nav_corner_raise",(int)FUN_10233250,
  FUN_10399bc0(&DAT_10683588,(int)"nav_corner_lower",(int)FUN_102331f0,
  FUN_10399bc0(&DAT_106835ac,(int)"nav_corner_place_on_ground",(int)FUN_10233220,
  FUN_10399bc0(&DAT_10683684,(int)"nav_analyze_scripted",(int)FUN_1022f070,
  FUN_10399bc0(&DAT_1068375c,(int)"nav_clear_attribute",(int)FUN_10231f70,
  FUN_10399bc0(&DAT_10683780,(int)"nav_mark_attribute",(int)FUN_10232000,
  FUN_10399bc0(&DAT_10683a68,(int)"nav_chop_selected",(int)FUN_10234f10,
  FUN_10399bc0(&DAT_10683a8c,(int)"nav_simplify_selected",(int)FUN_10234fe0,
  FUN_10399bc0(&DAT_10684d00,(int)"burninate",(int)FUN_1025cb50,"burninate target under crosshair",4
  FUN_10399bc0(&DAT_10684d24,(int)"plr_list_attributes",(int)FUN_1025ce20,
  FUN_10399bc0(&DAT_10684e50,(int)"md_record",(int)FUN_1025cca0,"movie director: record",0,
  FUN_10399bc0(&DAT_10684e74,(int)"md_stop",(int)FUN_1025cd90,"movie director: stop recording demo",
  FUN_10399bc0(&DAT_10687bc4,(int)"load_point_values",(int)thunk_FUN_1025e260,
  FUN_10399bc0(&DAT_10688310,(int)"bot_add",(int)FUN_10036410,"Add a bot.",0,(undefined *)0x0);
  FUN_10399bc0(&DAT_10688358,(int)"bot_killall",(int)FUN_10268770,"Make all bots suicide.",0,
  FUN_10399bc0(&DAT_1068837c,(int)"bot_teleport",(int)FUN_10268a20,
  FUN_10399bc0(&DAT_10688558,(int)"npc_fadeout",(int)FUN_10268cd0,
  FUN_10399bc0(&DAT_1068857c,(int)"bot_target",(int)FUN_102687d0,
  FUN_10399bc0(&DAT_1068a500,(int)"repeatround",(int)FUN_102945e0,"Repeat the current round",0,
  FUN_10399bc0(&DAT_1068a524,(int)"advanceround",(int)FUN_102944d0,"Advance to the next round",0,
  FUN_10399bc0(&DAT_1068a548,(int)"restartmatch",(int)FUN_10294630,"Restart the whole match",0,
  FUN_10399bc0(&DAT_1068a56c,(int)"endgame",(int)FUN_10294520,"End the whole game",0,
  FUN_10399bc0(&DAT_1068ac7c,(int)"callvote",(int)FUN_102979d0,"Start a vote on an issue.",0,
  FUN_10399bc0(&DAT_10690c5c,(int)"ch_hostage_dance",(int)FUN_102dced0,&DAT_1043677a,0,
  FUN_10399bc0(&DAT_10694d9c,(int)"wp_setdata",(int)FUN_10316400,
  FUN_10399bc0(&DAT_10694e70,(int)"l_gameents_sv",(int)FUN_103173e0,"List game entities",0,
  FUN_10399bc0(&DAT_10695f78,(int)"vehicle_reload",(int)FUN_1032d890,"Reload vehicle script",0x4000,
  FUN_10399bc0(&DAT_10695f9c,(int)"vehicle_rc",(int)FUN_10036410,
  FUN_10399bc0(&DAT_10695fc0,(int)"rc_vehicle_turn",(int)FUN_1032d850,&DAT_1043677a,0x4000,
  FUN_10399bc0(&DAT_10695fe4,(int)"rc_vehicle_go",(int)FUN_1032d7f0,&DAT_1043677a,0x4000,
  FUN_10399bc0(&DAT_10696008,(int)"rc_vehicle_stop",(int)FUN_1032d830,&DAT_1043677a,0x4000,
  FUN_10399bc0(&DAT_106977a8,(int)"ch_create_car",(int)FUN_10332f00,&DAT_1043677a,0x4000,
  FUN_10399bc0(&DAT_106a59f4,(int)"ent_keyvalue",(int)FUN_10368750,
  FUN_10399bc0(&DAT_106b9638,(int)"rr_debugresponseconcept_exclude",(int)FUN_103912f0,
  FUN_10399c60(&DAT_106051f8,(int)"reload_weapondata_server",(int)FUN_1009dc40,
  FUN_10399c60(&DAT_10605ff8,(int)"ent_pause",(int)FUN_100a5490,
  FUN_10399c60(&DAT_1060601c,(int)"picker",(int)FUN_100a54d0,
  FUN_10399c60(&DAT_1060b1d8,(int)"dumpeventqueue",(int)FUN_100d0950,
  FUN_10399c60(&DAT_1060b5cc,(int)"bug_swap",(int)FUN_100d3060,
  FUN_10399c60(&DAT_1060b7b0,(int)"notarget",(int)FUN_100d2fe0,
  FUN_10399c60(&DAT_1060ec08,(int)"test_entity_blocker",(int)FUN_100ebca0,
  FUN_10399c60(&DAT_10641754,(int)"creditsdone",(int)FUN_100fba60,(undefined *)0x0,0,
  FUN_10399c60(&DAT_10641840,(int)"shake",(int)FUN_100fd950,"Shake the screen.",0x4000,
  FUN_10399c60(&DAT_1064ab28,(int)"dumpgamestringtable",(int)FUN_10121530,
  FUN_10399c60(&DAT_1064b29c,(int)"sv_clearhinthistory",(int)FUN_10126140,
  FUN_10399c60(&DAT_10650968,(int)"givecurrentammo",(int)FUN_10176630,
  FUN_10399c60(&DAT_10652f48,(int)"prop_debug",(int)FUN_10197540,
  FUN_10399c60(&DAT_10672174,(int)"listRecentNPCSpeech",(int)FUN_101ba290,
  FUN_10399c60(&DAT_1067576c,(int)"Test_EHandle",(int)FUN_101da570,(undefined *)0x0,0x4000,
  FUN_10399c60(&DAT_10676c28,(int)"dumpentityfactories",(int)FUN_101f3970,
  FUN_10399c60(&DAT_1067acf4,(int)"voxeltree_view",(int)FUN_101f36e0,
  FUN_10399c60(&DAT_1067ad70,(int)"voxeltree_playerview",(int)FUN_101f3240,
  FUN_10399c60(&DAT_1067e614,(int)"wc_create",(int)FUN_101fccd0,
  FUN_10399c60(&DAT_1067e638,(int)"wc_destroy",(int)FUN_101fcd10,
  FUN_10399c60(&DAT_1067e65c,(int)"wc_destroy_undo",(int)FUN_101fcd50,
  FUN_10399c60(&DAT_1067e680,(int)"wc_air_node_edit",(int)FUN_101fcc30,
  FUN_10399c60(&DAT_1067e6a4,(int)"wc_air_edit_further",(int)FUN_101fcc50,
  FUN_10399c60(&DAT_1067e6c8,(int)"wc_air_edit_nearer",(int)FUN_101fcc90,
  FUN_10399c60(&DAT_1067e6ec,(int)"wc_link_edit",(int)FUN_101fcd70,(undefined *)0x0,0x4000,
  FUN_10399c60(&DAT_1067fd80,(int)"nav_update_blocked",(int)FUN_10203930,
  FUN_10399c60(&DAT_1067fda4,(int)"nav_check_floor",(int)FUN_10203740,
  FUN_10399c60(&DAT_1067fdec,(int)"nav_select_overlapping",(int)FUN_102038e0,
  FUN_10399c60(&DAT_1068220c,(int)"nav_world_center",(int)FUN_102126c0,
  FUN_10399c60(&DAT_106822e0,(int)"nav_check_file_consistency",(int)FUN_10219af0,
  FUN_10399c60(&DAT_10682820,(int)"nav_check_stairs",(int)FUN_10220c30,
  FUN_10399c60(&DAT_10682b68,(int)"nav_remove_jump_areas",(int)FUN_1022fc80,
  FUN_10399c60(&DAT_10682b8c,(int)"nav_delete",(int)FUN_1022f3b0,
  FUN_10399c60(&DAT_10682bb0,(int)"nav_delete_marked",(int)FUN_1022f3e0,
  FUN_10399c60(&DAT_10682bf8,(int)"nav_toggle_selected_set",(int)FUN_1022ffe0,
  FUN_10399c60(&DAT_10682c1c,(int)"nav_store_selected_set",(int)FUN_1022fea0,
  FUN_10399c60(&DAT_10682c40,(int)"nav_recall_selected_set",(int)FUN_1022fc20,
  FUN_10399c60(&DAT_10682c64,(int)"nav_add_to_selected_set",(int)FUN_1022f000,
  FUN_10399c60(&DAT_10682cac,(int)"nav_remove_from_selected_set",(int)FUN_1022fc50,
  FUN_10399c60(&DAT_10682cd0,(int)"nav_toggle_in_selected_set",(int)FUN_1022ff50,
  FUN_10399c60(&DAT_10682cf4,(int)"nav_clear_selected_set",(int)FUN_1022f290,
  FUN_10399c60(&DAT_10682d18,(int)"nav_begin_selecting",(int)FUN_1022f200,
  FUN_10399c60(&DAT_10682d3c,(int)"nav_end_selecting",(int)FUN_1022f4a0,
  FUN_10399c60(&DAT_10682d60,(int)"nav_begin_drag_selecting",(int)FUN_1022f1d0,
  FUN_10399c60(&DAT_10682d84,(int)"nav_end_drag_selecting",(int)FUN_1022f500,
  FUN_10399c60(&DAT_10682da8,(int)"nav_begin_drag_deselecting",(int)FUN_1022f1a0,
  FUN_10399c60(&DAT_10682dcc,(int)"nav_end_drag_deselecting",(int)FUN_1022f4d0,
  FUN_10399c60(&DAT_10682df0,(int)"nav_raise_drag_volume_max",(int)FUN_1022fbc0,
  FUN_10399c60(&DAT_10682e14,(int)"nav_lower_drag_volume_max",(int)FUN_1022f650,
  FUN_10399c60(&DAT_10682e38,(int)"nav_raise_drag_volume_min",(int)FUN_1022fbf0,
  FUN_10399c60(&DAT_10682e5c,(int)"nav_lower_drag_volume_min",(int)FUN_1022f680,
  FUN_10399c60(&DAT_10682e80,(int)"nav_toggle_selecting",(int)FUN_10230010,
  FUN_10399c60(&DAT_10682ea4,(int)"nav_begin_deselecting",(int)FUN_1022f170,
  FUN_10399c60(&DAT_10682ec8,(int)"nav_end_deselecting",(int)FUN_1022f4a0,
  FUN_10399c60(&DAT_10682eec,(int)"nav_toggle_deselecting",(int)FUN_1022ff20,
  FUN_10399c60(&DAT_10682f34,(int)"nav_begin_shift_xy",(int)FUN_1022f230,
  FUN_10399c60(&DAT_10682f58,(int)"nav_end_shift_xy",(int)FUN_1022f530,
  FUN_10399c60(&DAT_10682f7c,(int)"nav_select_invalid_areas",(int)FUN_1022fd50,
  FUN_10399c60(&DAT_10683030,(int)"nav_split",(int)FUN_1022fe10,
  FUN_10399c60(&DAT_10683054,(int)"nav_make_sniper_spots",(int)FUN_1022f6b0,
  FUN_10399c60(&DAT_10683078,(int)"nav_merge",(int)FUN_1022f890,
  FUN_10399c60(&DAT_106830c0,(int)"nav_unmark",(int)FUN_10230070,"Clears the marked Area or Ladder."
  FUN_10399c60(&DAT_106830e4,(int)"nav_begin_area",(int)FUN_1022f140,
  FUN_10399c60(&DAT_10683108,(int)"nav_end_area",(int)FUN_1022f470,
  FUN_10399c60(&DAT_1068312c,(int)"nav_connect",(int)FUN_1022f320,
  FUN_10399c60(&DAT_10683150,(int)"nav_disconnect",(int)FUN_1022f410,
  FUN_10399c60(&DAT_10683174,(int)"nav_splice",(int)FUN_1022fde0,
  FUN_10399c60(&DAT_10683198,(int)"nav_crouch",(int)FUN_1022f380,
  FUN_10399c60(&DAT_106831bc,(int)"nav_precise",(int)FUN_1022fb90,
  FUN_10399c60(&DAT_106831e0,(int)"nav_jump",(int)FUN_1022f5c0,
  FUN_10399c60(&DAT_10683204,(int)"nav_no_jump",(int)FUN_1022f8f0,
  FUN_10399c60(&DAT_10683228,(int)"nav_stop",(int)FUN_1022fe70,
  FUN_10399c60(&DAT_1068324c,(int)"nav_walk",(int)FUN_10230130,
  FUN_10399c60(&DAT_10683270,(int)"nav_run",(int)FUN_1022fcb0,
  FUN_10399c60(&DAT_10683294,(int)"nav_avoid",(int)FUN_1022f110,
  FUN_10399c60(&DAT_106832b8,(int)"nav_transient",(int)FUN_10230040,
  FUN_10399c60(&DAT_106832dc,(int)"nav_dont_hide",(int)FUN_1022f440,
  FUN_10399c60(&DAT_10683300,(int)"nav_stand",(int)FUN_1022fe40,
  FUN_10399c60(&DAT_10683324,(int)"nav_no_hostages",(int)FUN_1022f8c0,
  FUN_10399c60(&DAT_10683348,(int)"nav_no_dogs",(int)FUN_1022f8c0,
  FUN_10399c60(&DAT_1068336c,(int)"nav_strip",(int)FUN_1022fed0,
  FUN_10399c60(&DAT_10683390,(int)"nav_save",(int)FUN_1022fce0,
  FUN_10399c60(&DAT_106833b4,(int)"nav_load",(int)FUN_1022f620,
  FUN_10399c60(&DAT_10683420,(int)"nav_place_list",(int)FUN_1022f950,
  FUN_10399c60(&DAT_10683444,(int)"nav_toggle_place_mode",(int)FUN_1022ff80,
  FUN_10399c60(&DAT_1068348c,(int)"nav_place_floodfill",(int)FUN_1022f920,
  FUN_10399c60(&DAT_106834b0,(int)"nav_place_set",(int)FUN_1022fb60,
  FUN_10399c60(&DAT_106834d4,(int)"nav_place_pick",(int)FUN_1022fa60,
  FUN_10399c60(&DAT_106834f8,(int)"nav_toggle_place_painting",(int)FUN_1022ffb0,
  FUN_10399c60(&DAT_1068351c,(int)"nav_mark_unnamed",(int)FUN_1022f710,
  FUN_10399c60(&DAT_10683540,(int)"nav_corner_select",(int)FUN_1022f350,
  FUN_10399c60(&DAT_106835d0,(int)"nav_warp_to_mark",(int)FUN_10230160,
  FUN_10399c60(&DAT_106835f4,(int)"nav_ladder_flip",(int)FUN_1022f5f0,
  FUN_10399c60(&DAT_10683618,(int)"nav_generate",(int)FUN_1022f560,
  FUN_10399c60(&DAT_1068363c,(int)"nav_generate_incremental",(int)FUN_1022f590,
  FUN_10399c60(&DAT_10683660,(int)"nav_analyze",(int)FUN_1022f030,
  FUN_10399c60(&DAT_106836a8,(int)"nav_mark_walkable",(int)FUN_1022f740,
  FUN_10399c60(&DAT_106836cc,(int)"nav_clear_walkable_marks",(int)FUN_1022f2c0,
  FUN_10399c60(&DAT_106836f0,(int)"nav_compress_id",(int)FUN_1022f2f0,
  FUN_10399c60(&DAT_10683714,(int)"nav_build_ladder",(int)FUN_1022f260,
  FUN_10399c60(&DAT_10683738,(int)"wipe_nav_attributes",(int)FUN_10231f40,
  FUN_10399c60(&DAT_10684ab4,(int)"CreatePredictionError",(int)FUN_1025cc00,
  FUN_10399c60(&DAT_10688334,(int)"bot_kickall",(int)FUN_102611f0,"Kick all Bots",0x20000,
  FUN_10399c60(&DAT_10688664,(int)"ch_create_blockade",(int)FUN_1026c020,
  FUN_10399c60(&DAT_10688b54,(int)"ch_create_fireextinguisher",(int)FUN_1026f530,
  FUN_10399c60(&DAT_10688f70,(int)"ch_create_propanetank",(int)FUN_10270e50,
  FUN_10399c60(&DAT_1068ac58,(int)"listissues",(int)FUN_10295800,
  FUN_10399c60(&DAT_1068cc10,(int)"ch_create_supplycrate",(int)FUN_102a4fe0,"Spawn a supply crate.",
  FUN_10399c60(&DAT_1068cdf4,(int)"hr_stepforward",(int)FUN_102a5fc0,
  FUN_10399c60(&DAT_1068ce18,(int)"hr_stepbackward",(int)FUN_102a5f80,
  FUN_10399c60(&DAT_1068ce3c,(int)"hr_forward",(int)FUN_102a5ef0,
  FUN_10399c60(&DAT_1068ce60,(int)"hr_backward",(int)FUN_102a5ed0,
  FUN_10399c60(&DAT_1068ce84,(int)"hr_stop_start_record",(int)FUN_102a6030,
  FUN_10399c60(&DAT_1068cea8,(int)"hr_stop_start_playback",(int)FUN_102a6000,
  FUN_10399c60(&DAT_1068cecc,(int)"hr_toggle_waypoint",(int)FUN_102a60a0,&DAT_1043677a,0x4000,
  FUN_10399c60(&DAT_1068cef0,(int)"hr_jump_forward",(int)FUN_102a5f30,&DAT_1043677a,0x4000,
  FUN_10399c60(&DAT_1068cf14,(int)"hr_jump_backward",(int)FUN_102a5f10,&DAT_1043677a,0x4000,
  FUN_10399c60(&DAT_1068cf38,(int)"hr_readfile",(int)FUN_102a5f50,
  FUN_10399c60(&DAT_1068cf5c,(int)"hr_reset_playback",(int)FUN_102a5f70,
  FUN_10399c60(&DAT_1068f420,(int)"ch_create_npcvehicle",(int)FUN_102af700,
  FUN_10399c60(&DAT_1068f444,(int)"ch_check_surface_normal",(int)FUN_102af530,
  FUN_10399c60(&DAT_1068f468,(int)"ch_analyze_vehicle",(int)FUN_102af820,
  FUN_10399c60(&DAT_1068f48c,(int)"ch_remove_vehicle",(int)FUN_102af720,"DIE Vehicle!",0x4000,
  FUN_10399c60(&DAT_1068f4b0,(int)"ch_control_npcvehicle_steerleft",(int)FUN_102af920,
  FUN_10399c60(&DAT_1068f4d4,(int)"ch_control_npcvehicle_steerright",(int)FUN_102af990,
  FUN_10399c60(&DAT_10690bf0,(int)"ch_create_hostage",(int)FUN_102c9a00,
  FUN_10399c60(&DAT_10690c14,(int)"ch_create_hostage_vip",(int)FUN_102c9c20,
  FUN_10399c60(&DAT_10690c38,(int)"ch_create_hostage_rag",(int)FUN_102c9a30,&DAT_1043677a,0,
  FUN_10399c60(&DAT_10692340,(int)"dump_mapids_server",(int)FUN_102e8720,&DAT_1043677a,0x4000,
  FUN_10399c60(&DAT_10695aac,(int)"ch_create_new_helicopter",(int)FUN_10321c80,
  FUN_10399cf0(&DAT_10605f68,(int)"ent_fire",(int)&PTR_vftable_1059d300,
  FUN_10399d80(&DAT_105fd810,(int)"ai_nav_debug_experimental_pathing",&DAT_10436dec,0,
  FUN_10399d80(&DAT_105fd900,(int)"g_ai_threadedgraphbuild",&DAT_10436dec,0,
  FUN_10399d80(&DAT_105fda70,(int)"sk_ally_regen_time","0.3003",0,
  FUN_10399d80(&DAT_105fdac8,(int)"sv_npc_talker_maxdist",&DAT_1044f208,0,
  FUN_10399d80(&DAT_105fdb78,(int)"rr_debug_qa",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10603518,(int)"rr_followup_maxdist",&DAT_10451bd8,0x4000,
  FUN_10399d80(&DAT_10603570,(int)"rr_thenany_score_slop",&DAT_1043880c,0x4000,
  FUN_10399d80(&DAT_10603940,(int)"sv_showanimstate",&DAT_1043b6a0,0x4002,
  FUN_10399d80(&DAT_10603998,(int)"sv_showanimstate_log",&DAT_10436dec,0x4002,
  FUN_10399d80(&DAT_106039f0,(int)"sv_showanimstate_activities",&DAT_10436de8,0x4002,
  FUN_10399d80(&DAT_10603a48,(int)"mp_feetyawrate",&DAT_1043da4c,0x2002,
  FUN_10399d80(&DAT_10603aa0,(int)"mp_facefronttime",&DAT_1045424c,0x2002,
  FUN_10399d80(&DAT_10603af8,(int)"mp_ik",&DAT_10436de8,0x2002,"Use IK on in-place turns.");
  FUN_10399d80(&DAT_10603c30,(int)"npc_height_adjust",&DAT_10436de8,0x80,
  FUN_10399d80(&DAT_10603c88,(int)"sv_pvsskipanimation",&DAT_10436de8,0x80,
  FUN_10399d80(&DAT_10603ce0,(int)"ai_setupbones_debug",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10605960,(int)"sv_netvisdist","10000",0x4002,
  FUN_10399d80(&DAT_106059b8,(int)"ent_show_contexts",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10605c30,(int)"ent_messages_draw",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_10607350,(int)"scene_showlook",&DAT_10436dec,0x80,
  FUN_10399d80(&DAT_106073a8,(int)"scene_showmoveto",&DAT_10436dec,0x80,
  FUN_10399d80(&DAT_10607400,(int)"scene_showunlock",&DAT_10436dec,0x80,
  FUN_10399d80(&DAT_106074e8,(int)"ai_expression_optimization",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10607540,(int)"ai_expression_frametime",&DAT_1045ce04,0,
  FUN_10399d80(&DAT_10607cf0,(int)"sv_allchat",&DAT_10436de8,0x100,
  FUN_10399d80(&DAT_10607d48,(int)"tf_escort_score_rate",&DAT_10436de8,0x4000,
  FUN_10399d80(&DAT_10607e80,(int)"player_can_use_painted_power",&DAT_10436dec,0x2002,
  FUN_10399d80(&DAT_10607ed8,(int)"player_loses_painted_power_over_time",&DAT_10436de8,0x2002,
  FUN_10399d80(&DAT_10607f30,(int)"player_paint_effects_duration",&DAT_1045e7ac,0x2002,
  FUN_10399d80(&DAT_10607f88,(int)"player_paint_effects_enabled",&DAT_10436de8,0x2002,
  FUN_10399d80(&DAT_10607fe0,(int)"player_paint_screen_effect_restart_delay",&DAT_1045e898,0x2002,
  FUN_10399d80(&DAT_10608038,(int)"sv_footstep_sound_frequency",&DAT_1045e938,0x6000,
  FUN_10399d80(&DAT_10608140,(int)"sv_debug_player_use",&DAT_10436dec,0x2000,
  FUN_10399d80(&DAT_106081f0,(int)"smoothstairs",&DAT_10436de8,0x2000,
  FUN_10399d80(&DAT_1063fa20,(int)"cl_csm_auto_entity",&DAT_10436de8,0,&DAT_1043677a);
  FUN_10399d80(&DAT_106418c8,(int)"fx_new_sparks",&DAT_10436de8,0x4000,"Use new style sparks.\n");
  FUN_10399d80(&DAT_106427f0,(int)"fish_dormant",&DAT_10436dec,0x6000,
  FUN_10399d80(&DAT_106432d0,(int)"fog_volume_debug",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10644618,(int)"elevator_movedelay",&DAT_10485cb8,2,
  FUN_10399d80(&DAT_10644b18,(int)"sv_showladders",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10646028,(int)"occlusion_test_shadow_length",&DAT_104691d8,0x80000,
  FUN_10399d80(&DAT_10646080,(int)"occlusion_test_camera_margins",&DAT_10467504,0x80000,
  FUN_10399d80(&DAT_106460d8,(int)"occlusion_test_jump_margin",&DAT_10467504,0x80000,
  FUN_10399d80(&DAT_10646130,(int)"pvs_min_player_distance",&DAT_1048ad00,0x80000,
  FUN_10399d80(&DAT_106461f8,(int)"sv_force_transmit_ents",&DAT_10436dec,0x4002,
  FUN_10399d80(&DAT_10646250,(int)"sv_autosave",&DAT_10436de8,0,
  FUN_10399d80(&DAT_10646300,(int)"sv_showhitboxes",&DAT_1043b6a0,0x4000,
  FUN_10399d80(&DAT_1064aa90,(int)"gamestats_file_output_directory",&DAT_1043677a,0,
  FUN_10399d80(&DAT_1064aba8,(int)"mp_allowspectators",&DAT_10436e38,0x2000,
  FUN_10399d80(&DAT_1064ac00,(int)"mp_friendlyfire",&DAT_10436dec,0x2100,
  FUN_10399d80(&DAT_1064ac58,(int)"mp_fadetoblack",&DAT_10436dec,0x2100,
  FUN_10399d80(&DAT_1064aea0,(int)"global_event_log_enabled",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_1064b318,(int)"tv_allow_static_shots",&DAT_10436de8,0,
  FUN_10399d80(&DAT_1064b370,(int)"tv_allow_camera_man",&DAT_10436de8,0,
  FUN_10399d80(&DAT_1064ce80,(int)"sv_gravity",&DAT_10468bc0,0x6100,"World gravity.");
  FUN_10399d80(&DAT_1064ced8,(int)"sv_gravity_alt",&DAT_104688a4,0x6100,"Sets alternate-gravity.");
  FUN_10399d80(&DAT_1064cf30,(int)"sv_stopspeed",&DAT_10469128,0x2102,
  FUN_10399d80(&DAT_1064d2f8,(int)"sv_footsteps",&DAT_10436de8,0x2102,
  FUN_10399d80(&DAT_1064d3a8,(int)"sv_rollangle",&DAT_10436dec,0x2102,"Max view roll angle");
  FUN_10399d80(&DAT_1064d400,(int)"sv_friction",&DAT_1049bd98,0x2102,"World friction.");
  FUN_10399d80(&DAT_1064d458,(int)"sv_bounce",&DAT_10436dec,0x2102,
  FUN_10399d80(&DAT_1064d4b0,(int)"sv_maxvelocity",&DAT_1049be58,0x2002,
  FUN_10399d80(&DAT_1064d560,(int)"sv_skyname","sky_ti_09_hdr",0x2080,
  FUN_10399d80(&DAT_1064d5b8,(int)"sv_backspeed",&DAT_10438884,0x2002,
  FUN_10399d80(&DAT_1064d610,(int)"sv_waterdist",&DAT_10467504,0x2002,
  FUN_10399d80(&DAT_1064d9a8,(int)"tv_delaymapchange",&DAT_10436dec,0,
  FUN_10399d80(&DAT_1064da00,(int)"mp_restartgame",&DAT_10436dec,4,
  FUN_10399d80(&DAT_1064da58,(int)"mp_waitingforplayers_time",&DAT_10436dec,4,
  FUN_10399d80(&DAT_1064dab0,(int)"mp_waitingforplayers_restart",&DAT_10436dec,4,
  FUN_10399d80(&DAT_1064db08,(int)"mp_waitingforplayers_cancel",&DAT_10436dec,4,
  FUN_10399d80(&DAT_1064db60,(int)"mp_clan_readyrestart",&DAT_10436dec,4,
  FUN_10399d80(&DAT_1064dbb8,(int)"mp_clan_ready_signal","ready",4,
  FUN_10399d80(&DAT_1064dc10,(int)"nextlevel",&DAT_1043677a,0x104,
  FUN_10399d80(&DAT_1064dce0,(int)"sv_pushaway_force","30000",0x2002,
  FUN_10399d80(&DAT_1064dd38,(int)"sv_pushaway_min_player_speed",&DAT_1049cdec,0x2002,
  FUN_10399d80(&DAT_1064dd90,(int)"sv_pushaway_max_force",&DAT_10438830,0x2002,
  FUN_10399d80(&DAT_1064dde8,(int)"sv_pushaway_clientside",&DAT_10436dec,0x2002,
  FUN_10399d80(&DAT_1064de40,(int)"sv_pushaway_player_force","200000",0x6002,
  FUN_10399d80(&DAT_1064de98,(int)"sv_pushaway_max_player_force","10000",0x6002,
  FUN_10399d80(&DAT_1064df18,(int)"particle_test_file",&DAT_1043677a,0x4000,
  FUN_10399d80(&DAT_1064df70,(int)"particle_test_attach_mode","follow_attachment",0x4000,
  FUN_10399d80(&DAT_1064dfc8,(int)"particle_test_attach_attachment",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_1064e758,(int)"g_debug_constraint_sounds",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_1064ec78,(int)"phys_penetration_error_time",&DAT_104897f0,0,
  FUN_10399d80(&DAT_1064f4d0,(int)"think_limit",&DAT_104897f0,0x82000,
  FUN_10399d80(&DAT_1064f528,(int)"debug_touchlinks",&DAT_10436dec,0,"Spew touch link activity");
  FUN_10399d80(&DAT_1064f6b8,(int)"sv_thinktimecheck",&DAT_10436dec,0,
  FUN_10399d80(&DAT_106504f0,(int)"spec_freeze_time",&DAT_104abf54,0x6000,
  FUN_10399d80(&DAT_106505a0,(int)"sv_bonus_challenge",&DAT_10436dec,0x2012,
  FUN_10399d80(&DAT_10650650,(int)"sv_maxusrcmdprocessticks",&DAT_104ac0c0,0x100,
  FUN_10399d80(&DAT_10650700,(int)"sv_noclipduringpause",&DAT_10436dec,0x6000,
  FUN_10399d80(&DAT_10650910,(int)"player_debug_print_damage",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_10650a20,(int)"sv_clockcorrection_msecs",&DAT_10469198,0,
  FUN_10399d80(&DAT_10650ad0,(int)"sv_usercmd_custom_random_seed",&DAT_10436de8,0x80000,
  FUN_10399d80(&DAT_10650c58,(int)"sv_maxusrcmdprocessticks_warning",&DAT_1043b6a0,0,
  FUN_10399d80(&DAT_10650cb0,(int)"sv_maxusrcmdprocessticks_holdaim",&DAT_10436de8,0x4000,
  FUN_10399d80(&DAT_10650d10,(int)"sv_unlag",&DAT_10436de8,2,"Enables player lag compensation");
  FUN_10399d80(&DAT_10650dc0,(int)"sv_lagflushbonecache",&DAT_10436de8,2,
  FUN_10399d80(&DAT_10650e18,(int)"sv_showlagcompensation",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_10650e70,(int)"sv_lagcompensationforcerestore",&DAT_10436de8,0x4000,
  FUN_10399d80(&DAT_10650ec8,(int)"sv_unlag_fixstuck",&DAT_10436dec,2,
  FUN_10399d80(&DAT_10650f20,(int)"sv_lagpushticks",&DAT_10436dec,2,
  FUN_10399d80(&DAT_10652e98,(int)"sv_turbophysics",&DAT_10436dec,0x2000,"Turns on turbo physics");
  FUN_10399d80(&DAT_10654358,(int)"sv_pushaway_clientside_size",&DAT_104788a0,0x2002,
  FUN_10399d80(&DAT_106543b0,(int)"props_break_max_pieces",&DAT_1043b6a0,0x2000,
  FUN_10399d80(&DAT_10654408,(int)"props_break_max_pieces_perframe",&DAT_1043b6a0,0x2000,
  FUN_10399d80(&DAT_10670538,(int)"sv_disable_querycache",&DAT_10436dec,0x6002,
  FUN_10399d80(&DAT_10671f58,(int)"scene_forcecombined",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10671fb0,(int)"scene_maxcaptionradius",&DAT_104375f4,0,
  FUN_10399d80(&DAT_10672008,(int)"scene_clientplayback",&DAT_10436de8,0,
  FUN_10399d80(&DAT_106720c8,(int)"scene_async_prefetch_spew",&DAT_10436dec,0,
  FUN_10399d80(&DAT_106724f0,(int)"scene_print",&DAT_10436dec,0x2000,
  FUN_10399d80(&DAT_10672548,(int)"scene_clientflex",&DAT_10436de8,0x2000,
  FUN_10399d80(&DAT_10672688,(int)"sv_benchmark_numticks",&DAT_104c03c4,0,
  FUN_10399d80(&DAT_106726e0,(int)"sv_benchmark_autovprofrecord",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10673008,(int)"sv_soundemitter_version",&DAT_10438794,0x6002,
  FUN_10399d80(&DAT_10673060,(int)"snd_prevent_ss_duplicates",&DAT_10436dec,0x6002,
  FUN_10399d80(&DAT_10673110,(int)"sv_soundemitter_trace",&DAT_1043b6a0,0x2000,
  FUN_10399d80(&DAT_10673168,(int)"cc_showmissing",&DAT_10436dec,0x2000,
  FUN_10399d80(&DAT_106731c0,(int)"cc_norepeat",&DAT_10436df0,0,
  FUN_10399d80(&DAT_106733e0,(int)"soundpatch_captionlength",&DAT_104c3308,0x2000,
  FUN_10399d80(&DAT_106735a0,(int)"soundscape_debug",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_106748c8,(int)"mod_load_showstall",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10674920,(int)"mod_load_preload",&DAT_10436e38,0,
  FUN_10399d80(&DAT_10675c80,(int)"g_debug_transitions",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10675cd8,(int)"showtriggers",&DAT_10436dec,0x4000,"Shows trigger brushes");
  FUN_10399d80(&DAT_1067ad18,(int)"sv_strict_notarget",&DAT_10436dec,0,
  FUN_10399d80(&DAT_1067d278,(int)"developer",&DAT_10436dec,0x80000,"Set developer message level");
  FUN_10399d80(&DAT_1067d2d0,(int)"violence_hblood",&DAT_10436de8,0,"Draw human blood");
  FUN_10399d80(&DAT_1067d328,(int)"violence_hgibs",&DAT_10436de8,0,"Show human gib entities");
  FUN_10399d80(&DAT_1067d380,(int)"violence_ablood",&DAT_10436de8,0,"Draw alien blood");
  FUN_10399d80(&DAT_1067d3d8,(int)"violence_agibs",&DAT_10436de8,0,"Show alien gib entities");
  FUN_10399d80(&DAT_1067e0a0,(int)"sv_alltalk",&DAT_10436dec,0x82100,
  FUN_10399d80(&DAT_1067f930,(int)"nav_split_place_on_ground",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_1067f988,(int)"nav_area_bgcolor","0 0 0 30",0x4000,
  FUN_10399d80(&DAT_1067f9e0,(int)"nav_corner_adjust_adjacent",&DAT_1049be70,0x4000,
  FUN_10399d80(&DAT_1067fae8,(int)"nav_show_continguous",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_1067fb40,(int)"nav_max_view_distance",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_1067fb98,(int)"nav_update_visibility_on_edit",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_1067fc48,(int)"nav_show_potentially_visible",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_10681e78,(int)"nav_show_area_info",&DAT_10436e20,0x4000,
  FUN_10399d80(&DAT_10681ed0,(int)"nav_edit_grid",&DAT_10436de8,4,
  FUN_10399d80(&DAT_10681f28,(int)"nav_snap_to_grid",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_10681f80,(int)"nav_create_place_on_ground",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_10681fd8,(int)"nav_draw_limit",&DAT_10468718,0x4000,
  FUN_10399d80(&DAT_10682030,(int)"nav_solid_props",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_10682088,(int)"nav_create_area_at_feet",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_106820e0,(int)"nav_drag_selection_volume_zmax_offset",&DAT_104da02c,0x2000,
  FUN_10399d80(&DAT_10682138,(int)"nav_drag_selection_volume_zmin_offset",&DAT_104da02c,0x2000,
  FUN_10399d80(&DAT_10682560,(int)"nav_slope_limit",&DAT_104d9518,0x4000,
  FUN_10399d80(&DAT_106825b8,(int)"nav_slope_tolerance",&DAT_104388e4,0x4000,
  FUN_10399d80(&DAT_10682610,(int)"nav_displacement_test","10000",0x4000,
  FUN_10399d80(&DAT_10682668,(int)"nav_generate_fencetops",&DAT_10436de8,0x4000,
  FUN_10399d80(&DAT_106826c0,(int)"nav_generate_fixup_jump_areas",&DAT_10436de8,0x4000,
  FUN_10399d80(&DAT_10682770,(int)"nav_generate_incremental_tolerance",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_106827c8,(int)"nav_area_max_size",&DAT_10438740,0x4000,
  FUN_10399d80(&DAT_10682958,(int)"nav_edit",&DAT_10436dec,0x4004,
  FUN_10399d80(&DAT_106829b0,(int)"nav_quicksave",&DAT_10436de8,0x4004,
  FUN_10399d80(&DAT_10682a08,(int)"nav_show_approach_points",&DAT_10436dec,0x4004,
  FUN_10399d80(&DAT_10682a60,(int)"nav_show_danger",&DAT_10436dec,0x4004,
  FUN_10399d80(&DAT_10682ab8,(int)"nav_show_player_counts",&DAT_10436dec,0x4004,
  FUN_10399d80(&DAT_10683fc8,(int)"ti_reliable_bullets",&DAT_10436dec,0x80000,
  FUN_10399d80(&DAT_10684728,(int)"sv_autokick_gracetime",&DAT_104e2070,0x80004,
  FUN_10399d80(&DAT_10684780,(int)"sv_autokick_finaltime",&DAT_104897f0,0x80004,
  FUN_10399d80(&DAT_106847d8,(int)"ti_showplayerstatetransitions",&DAT_104e2148,0x4000,
  FUN_10399d80(&DAT_10684830,(int)"sv_disablefreezecam",&DAT_10436dec,0x2000,
  FUN_10399d80(&DAT_10684ad8,(int)"mp_enemy_spotting_distance",&DAT_10469594,0x80004,
  FUN_10399d80(&DAT_10684b30,(int)"mp_enemy_visible_time",&DAT_104e2b48,0x80004,
  FUN_10399d80(&DAT_10684bf8,(int)"sv_player_flinch_delay",&DAT_104e4080,6,
  FUN_10399d80(&DAT_10684da0,(int)"debug_disable_dogs",&DAT_10436dec,2,"GTFO! I\'m testing shit");
  FUN_10399d80(&DAT_10684df8,(int)"debug_spawndog",&DAT_10436dec,2,
  FUN_10399d80(&DAT_10687c30,(int)"bot_forcefireweapon",&DAT_1043677a,0,
  FUN_10399d80(&DAT_10687c88,(int)"bot_forceattack2",&DAT_10436dec,0,"When firing, use attack2.");
  FUN_10399d80(&DAT_10687ce0,(int)"bot_forceattackon",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10687d38,(int)"bot_accuracy",&DAT_1049cdec,0,
  FUN_10399d80(&DAT_10687d90,(int)"bot_flipout",&DAT_10436dec,0,"When on, all bots fire their guns."
  FUN_10399d80(&DAT_10687de8,(int)"bot_changeclass",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10687e40,(int)"bot_mimic",&DAT_10436dec,0,"Bot uses usercmd of player by index."
  FUN_10399d80(&DAT_10687e98,(int)"bot_mimic_yaw_offset",&DAT_10436dec,0,"Offsets the bot yaw.");
  FUN_10399d80(&DAT_10687ef0,(int)"bot_frozen",&DAT_10436dec,0,"Don\'t do anything.");
  FUN_10399d80(&DAT_10687f48,(int)"bot_pacifist",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10687fa0,(int)"bot_standstill",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10687ff8,(int)"bot_ignore_enemy",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10688050,(int)"bot_ai_speed",&DAT_104388e4,0,
  FUN_10399d80(&DAT_106880a8,(int)"bot_sendcmd",&DAT_1043677a,0,
  FUN_10399d80(&DAT_10688100,(int)"bot_crouch",&DAT_10436dec,0,"Bot crouches");
  FUN_10399d80(&DAT_10688158,(int)"bot_debug",&DAT_10436dec,0x4000,"Show bot AI debug information");
  FUN_10399d80(&DAT_106881b0,(int)"bot_health",&DAT_10469128,0,"Starting Health");
  FUN_10399d80(&DAT_10688208,(int)"bot_giveshield",&DAT_10436dec,0,"all bots have shields, huzzah!")
  FUN_10399d80(&DAT_106883a0,(int)"sv_threaded_botthink",&DAT_10436dec,0,
  FUN_10399d80(&DAT_10689a08,(int)"mp_hold_score_interval",&DAT_104e9a5c,0x80004,
  FUN_10399d80(&DAT_10689a60,(int)"mp_civkill_lose",&DAT_10436dec,0x80004,
  FUN_10399d80(&DAT_10689b08,(int)"mp_equipment_assign_dog",&DAT_1043b6a0,2,"Dog Count");
  FUN_10399d80(&DAT_10689b60,(int)"mp_equipment_assign_shields",&DAT_10436dec,2,"Shield Count");
  FUN_10399d80(&DAT_10689bb8,(int)"mp_equipment_assign_sniper",&DAT_1043b6a0,2,"Sniper Count");
  FUN_10399d80(&DAT_1068a2f0,(int)"mp_roundtime",&DAT_10469178,0x80004,"Duration of each round");
  FUN_10399d80(&DAT_1068a348,(int)"mp_intelroundtime",&DAT_10469358,0x80004,
  FUN_10399d80(&DAT_1068a3a0,(int)"mp_plantime",&DAT_104897f0,0x80004,
  FUN_10399d80(&DAT_1068a3f8,(int)"mp_maxhostages",&DAT_10467504,0x82000,
  FUN_10399d80(&DAT_1068a450,(int)"mp_roadblock_spacing",&DAT_104ed65c,4,
  FUN_10399d80(&DAT_1068a4a8,(int)"time_of_day_rate",&DAT_104ed6b8,0x6000,
  FUN_10399d80(&DAT_1068a7a8,(int)"sv_vote_issue_restart_game_allowed",&DAT_10436de8,0,
  FUN_10399d80(&DAT_1068a800,(int)"sv_vote_issue_kick_allowed",&DAT_10436de8,0,
  FUN_10399d80(&DAT_1068a858,(int)"sv_vote_kick_ban_duration",&DAT_1045424c,0,
  FUN_10399d80(&DAT_1068a8e8,(int)"sv_vote_timer_duration",&DAT_104788a0,2,
  FUN_10399d80(&DAT_1068a998,(int)"sv_allow_votes",&DAT_10436de8,0,
  FUN_10399d80(&DAT_1068a9f0,(int)"sv_vote_failure_timer",&DAT_10469448,2,
  FUN_10399d80(&DAT_1068aa48,(int)"sv_vote_creation_timer",&DAT_10469178,0x6000,
  FUN_10399d80(&DAT_1068aaf8,(int)"sv_vote_show_caller",&DAT_10436de8,0x6000,
  FUN_10399d80(&DAT_1068ab50,(int)"sv_vote_allow_spectators",&DAT_10436dec,0,
  FUN_10399d80(&DAT_1068aba8,(int)"sv_vote_ui_hide_disabled_issues",&DAT_10436de8,0,
  FUN_10399d80(&DAT_1068ac00,(int)"sv_vote_plr_map_limit",&DAT_1045424c,0x6000,
  FUN_10399d80(&DAT_1068aff0,(int)"sv_vote_issue_change_map_now_allowed",&DAT_10436de8,0,
  FUN_10399d80(&DAT_1068b048,(int)"sv_vote_issue_change_map_later_allowed",&DAT_10436de8,0,
  FUN_10399d80(&DAT_1068b910,(int)"inferno_per_flame_spawn_duration",&DAT_10436df0,0x4000,
  FUN_10399d80(&DAT_1068b968,(int)"inferno_initial_spawn_interval",&DAT_1045ce04,0x4000,
  FUN_10399d80(&DAT_1068b9c0,(int)"inferno_child_spawn_interval_multiplier",&DAT_10436de8,0x4000,
  FUN_10399d80(&DAT_1068ba18,(int)"inferno_max_child_spawn_interval",&DAT_10436de8,0x4000,
  FUN_10399d80(&DAT_1068ba70,(int)"inferno_spawn_angle",&DAT_104e8160,0x4000,
  FUN_10399d80(&DAT_1068bac8,(int)"inferno_max_flames",&DAT_104da02c,0x4000,
  FUN_10399d80(&DAT_1068bb20,(int)"inferno_flame_spacing",&DAT_104acb50,0x4000,
  FUN_10399d80(&DAT_1068bb78,(int)"inferno_flame_lifetime",&DAT_104f2680,0x4000,
  FUN_10399d80(&DAT_1068bc28,(int)"inferno_damage",&DAT_10469128,0x4000,"Damage per second");
  FUN_10399d80(&DAT_1068bc80,(int)"inferno_max_range",&DAT_10469380,0x4000,
  FUN_10399d80(&DAT_1068c258,(int)"debug_disable_dynamic_roadblock",&DAT_10436de8,4,
  FUN_10399d80(&DAT_1068c7c8,(int)"mp_ammobox_timer",&DAT_104f6e80,4,
  FUN_10399d80(&DAT_1068fee8,(int)"dog_debug",&DAT_10436dec,0x4000,"Show dog AI debug information");
  FUN_10399d80(&DAT_106908c0,(int)"hostage_debug",&DAT_10436dec,0x4000,
  FUN_10399d80(&DAT_106909c8,(int)"sv_pushaway_hostage_force","20000",0x6000,
  FUN_10399d80(&DAT_10690a20,(int)"sv_pushaway_max_hostage_force",&DAT_10438830,0x6000,
  FUN_10399d80(&DAT_10691a08,(int)"ti_npc_vehicle_percent",&DAT_10436e38,0x80004,
  FUN_10399d80(&DAT_10691a60,(int)"ti_armed_vehicle_count",&DAT_10436dec,0x80004,"Cars to spawn");
  FUN_10399d80(&DAT_10691ab8,(int)"ti_loaded_truck_count",&DAT_10436de8,0x80004,
  FUN_10399d80(&DAT_10691b10,(int)"ti_cargo_truck_count",&DAT_10436de8,0x80004,
  FUN_10399d80(&DAT_10691b68,(int)"mp_vehicle_spacing_modifier",&DAT_1043885c,0x80004,
  FUN_10399d80(&DAT_10692208,(int)"ti_holiday",&DAT_10436dec,0x2000,
  FUN_10399d80(&DAT_10692a08,(int)"anim_showstate",&DAT_1043b6a0,0x6002,
  FUN_10399d80(&DAT_10692a60,(int)"anim_showstatelog",&DAT_10436dec,0x6002,
  FUN_10399d80(&DAT_10692ab8,(int)"mp_showgestureslots",&DAT_1043b6a0,0x6002,
  FUN_10399d80(&DAT_10692b10,(int)"mp_slammoveyaw",&DAT_10436dec,0x2002,
  FUN_10399d80(&DAT_10692ca8,(int)"sv_showimpacts",&DAT_10436dec,0x2000,
  FUN_10399d80(&DAT_10692d00,(int)"sv_showplayerhitboxes",&DAT_10436dec,0x2000,
  FUN_10399d80(&DAT_10692d58,(int)"sv_showdamage",&DAT_10436dec,0x2000,"Shows damage done by bullet"
  FUN_10399d80(&DAT_10693b30,(int)"wp_drawplans",&DAT_10436dec,0x6002,
  FUN_10399d80(&DAT_10693b88,(int)"mp_playermodelname",&DAT_10436dec,0x6002,
  FUN_10399d80(&DAT_10693be0,(int)"mp_maxpetsperteam",&DAT_1043b6a0,0x82000,
  FUN_10399d80(&DAT_10693c38,(int)"mp_maxsnipersperteam",&DAT_1043b6a0,0x82000,
  FUN_10399d80(&DAT_10693c90,(int)"ti_tournament",&DAT_10436dec,0x2000,"Tournament Mode");
  FUN_10399d80(&DAT_10693e48,(int)"ti_tdm_fraglimit",&DAT_104695d4,0x2000,
  FUN_10399d80(&DAT_10694dc0,(int)"wp_use_eyes",&DAT_10436dec,0x6000,
  FUN_10399d80(&DAT_10695310,(int)"boat_steering_sensitivity",&DAT_10510418,0x80008,
  FUN_10399d80(&DAT_106955d0,(int)"sv_helicopter_skill_cap",&DAT_10438794,0x2080,
  FUN_10399d80(&DAT_10695a48,(int)"cl_heli_disable_controls",&DAT_10436dec,0x80,
  FUN_10399d80(&DAT_106966a0,(int)"car_collision_delay",&DAT_104388a4,4,&DAT_1043677a);
  FUN_10399d80(&DAT_106966f8,(int)"car_collision_self",&DAT_104e2b48,4,&DAT_1043677a);
  FUN_10399d80(&DAT_10696750,(int)"car_collision_other",&DAT_104e4080,4,&DAT_1043677a);
  FUN_10399d80(&DAT_106967a8,(int)"car_dontpush_friends",&DAT_10436de8,4,&DAT_1043677a);
  FUN_10399d80(&DAT_10696888,(int)"car_lookahead_buffer_time",&DAT_104a4250,4,&DAT_1043677a);
  FUN_10399d80(&DAT_10699110,(int)"melee_return_to_idle_time",&DAT_10516298,0x6000,
  FUN_10399d80(&DAT_106a5a98,(int)"cl_simdbones",&DAT_10436dec,0x2000,"Use SIMD bone setup.");
  FUN_10399d80(&DAT_106a5b60,(int)"cl_use_simd_bones",&DAT_10436de8,0x2000,
  FUN_10399d80(&DAT_106a5bc0,(int)"anim_3wayblend",&DAT_10436de8,0x2000,
  FUN_10399d80(&DAT_106a5c18,(int)"anim_twistbones_enabled",&DAT_10436de8,0x6000,
  FUN_10399d80(&DAT_106a5e08,(int)"choreo_spew_filter",&DAT_1043677a,0x2000,
  FUN_10399d80(&DAT_106b9d60,(int)"rr_dumpresponses",&DAT_10436dec,0,
  FUN_10399d80(&DAT_106b9dc0,(int)"rr_debugresponseconcept",&DAT_1043677a,0,
  FUN_10399d80(&DAT_106b9e18,(int)"rr_debugresponses",&DAT_10436dec,0,
  FUN_10399d80(&DAT_106b9e70,(int)"rr_debugrule",&DAT_1043677a,0,
  FUN_10399d80(&DAT_106cfdb8,(int)"panel_test_title_safe",&DAT_10436dec,0x4000,
  FUN_10399e10(&DAT_10605bd8,(int)"ai_debug_los",&DAT_10436dec,0x4000,
  FUN_10399e10(&DAT_10645988,(int)"mapcyclefile","mapcycle.txt",0,
  FUN_10399e10(&DAT_10646480,(int)"motdfile","motd.txt",0x80000,"The MOTD file to load.",
  FUN_10399e10(&DAT_106464d8,(int)"hostfile","host.txt",0x80000,"The HOST file to load.",
  FUN_10399e10(&DAT_1064ab50,(int)"mp_forcecamera",&DAT_10436de8,0x2000,
  FUN_10399e10(&DAT_1064d950,(int)"mp_timelimit",&DAT_10436dec,0x2100,"game time per map in minutes"
  FUN_10399e10(&DAT_1064ea30,(int)"phys_timescale",&DAT_10436de8,0,"Scale time for physics",
  FUN_10399e10(&DAT_10672ba8,(int)"sv_regeneration_force_on",&DAT_10436dec,0x4000,
  FUN_10399e10(&DAT_10695138,(int)"mp_planoverride",&DAT_1043b6a0,0x4000,&DAT_1043677a,
  FUN_10399ea0(&DAT_1064b2c0,(int)"tv_delay",&DAT_104788a0,0,"TacticalTV broadcast delay in seconds"
  FUN_10399ea0(&DAT_1064d8f8,(int)"mp_chattime",&DAT_104897f0,0x2000,
  FUN_10399ea0(&DAT_10650548,(int)"spec_freeze_traveltime",&DAT_104abfb0,0x6000,
  FUN_10399ea0(&DAT_10650a78,(int)"sv_playerperfhistorycount",&DAT_104acb50,0,
  FUN_10399ea0(&DAT_10650d68,(int)"sv_maxunlag",&DAT_10436e38,2,
  FUN_10399ea0(&DAT_1068a940,(int)"sv_vote_command_delay",&DAT_10438794,2,
  FUN_10399ea0(&DAT_1068aaa0,(int)"sv_vote_quorum_ratio",&DAT_10438884,1,
  FUN_10399ea0(&DAT_10692be0,(int)"ti_feetyawboost",&DAT_104c3308,2,"feet yaw boost",1,0x3f800000,1,
  FUN_10399ea0(&DAT_10693d98,(int)"mp_limitteams",&DAT_10436de8,0x82100,
  FUN_10399ea0(&DAT_10693df0,(int)"ti_gamemode_override",&DAT_1043b6a0,0x2000,
  FUN_10399f40(&DAT_1067fca0,(int)"nav_selected_set_color","255 255 200 96",0x4000,
  FUN_10399f40(&DAT_1067fcf8,(int)"nav_selected_set_border_color","100 100 0 255",0x4000,
  FUN_10399fe0(&DAT_105fd248,(int)"ai_debug_directnavprobe",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd2a8,(int)"ai_no_steer",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd3f0,(int)"ai_moveprobe_debug",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd448,(int)"ai_moveprobe_jump_debug",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd4a0,(int)"ai_moveprobe_usetracelist",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd4f8,(int)"ai_strong_optimizations_no_checkstand",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd5c8,(int)"ai_vehicle_avoidance",&DAT_10436de8,0x4000);
  FUN_10399fe0(&DAT_105fd620,(int)"ai_debug_nav",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd678,(int)"ai_navigator_generate_spikes",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd6d0,(int)"ai_navigator_generate_spikes_strength",&DAT_1044d638,0);
  FUN_10399fe0(&DAT_105fd728,(int)"ai_use_clipped_paths",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_105fd7b8,(int)"ai_no_node_cache",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd8a8,(int)"ai_norebuildgraph",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fd9b8,(int)"ai_no_local_paths",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fdb20,(int)"ai_no_talk_delay",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_105fe878,(int)"npc_ally_deathmessage",&DAT_10436de8,0x4000);
  FUN_10399fe0(&DAT_10602990,(int)"ai_debugscriptconditions",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106033b0,(int)"npc_sentences",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10603430,(int)"ai_debug_speech",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10603640,(int)"ai_find_lateral_cover",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_10603698,(int)"ai_find_lateral_los",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_10603718,(int)"g_debug_trackpather",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_106037a8,(int)"free_pass_peek_debug",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10603b58,(int)"ai_sequence_debug",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10604a98,(int)"ai_show_hull_attacks",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10604af0,(int)"ai_force_serverside_ragdoll",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10604b48,(int)"ai_use_visibility_cache",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_10604c38,(int)"phys_stressbodyweights",&DAT_10456018,0);
  FUN_10399fe0(&DAT_10604c90,(int)"phys_impactforcescale",&DAT_10436e38,0);
  FUN_10399fe0(&DAT_10604ce8,(int)"phys_upimpactforcescale","0.375",0);
  FUN_10399fe0(&DAT_106050f8,(int)"weapon_showproficiency",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10605a10,(int)"sv_script_think_interval",&DAT_104388e4,0);
  FUN_10399fe0(&DAT_10605ad8,(int)"autoaim_viewing_client",&DAT_10436de8,2);
  FUN_10399fe0(&DAT_10605b30,(int)"debug_overlay_fullposition",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106060d0,(int)"step_spline",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10607138,(int)"hl2_episodic",&DAT_10436dec,0x2000);
  FUN_10399fe0(&DAT_10607190,(int)"ent_debugkeys",&DAT_1043677a,0);
  FUN_10399fe0(&DAT_106071e8,(int)"ai_shot_bias_min",&DAT_1045b3b8,0x2000);
  FUN_10399fe0(&DAT_10607240,(int)"ai_shot_bias_max",&DAT_10436e38,0x2000);
  FUN_10399fe0(&DAT_10607298,(int)"ai_debug_shoot_positions",&DAT_10436dec,0x6000);
  FUN_10399fe0(&DAT_10607598,(int)"flex_expression",&DAT_1045cf6c,0);
  FUN_10399fe0(&DAT_106075f0,(int)"flex_talk",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10608090,(int)"physicsshadowupdate_render",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106080e8,(int)"physicsshadowupdate_render_time",&DAT_10436e38,0);
  FUN_10399fe0(&DAT_10608198,(int)"sv_suppress_viewpunch",&DAT_10436dec,0x6002);
  FUN_10399fe0(&DAT_1060b638,(int)"noclip_fixup",&DAT_10436de8,0x4000);
  FUN_10399fe0(&DAT_1060cd18,(int)"ai_debug_ragdoll_magnets",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1060cd98,(int)"debug_visibility_monitor",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_1060cdf0,(int)"vismon_poll_frequency",&DAT_104674e8,0x4000);
  FUN_10399fe0(&DAT_1060ce48,(int)"vismon_trace_limit",&DAT_10467504,0x4000);
  FUN_10399fe0(&DAT_106420f8,(int)"fire_maxabsorb",&DAT_10438740,0);
  FUN_10399fe0(&DAT_10642150,(int)"fire_absorbrate",&DAT_1045424c,0);
  FUN_10399fe0(&DAT_106421a8,(int)"fire_extscale",&DAT_10467504,0);
  FUN_10399fe0(&DAT_10642200,(int)"fire_extabsorb",&DAT_10436df0,0);
  FUN_10399fe0(&DAT_10642258,(int)"fire_heatscale",&DAT_10436e38,0);
  FUN_10399fe0(&DAT_106422b0,(int)"fire_incomingheatscale",&DAT_104388e4,0);
  FUN_10399fe0(&DAT_10642308,(int)"fire_dmgscale",&DAT_104388e4,0);
  FUN_10399fe0(&DAT_10642360,(int)"fire_dmgbase",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_106423b8,(int)"fire_growthrate",&DAT_10436e38,0);
  FUN_10399fe0(&DAT_10642410,(int)"fire_dmginterval",&DAT_10436e38,0);
  FUN_10399fe0(&DAT_10643880,(int)"func_break_max_pieces",&DAT_104788a0,0x2080);
  FUN_10399fe0(&DAT_106438d8,(int)"func_break_reduction_factor",&DAT_104674e8,0);
  FUN_10399fe0(&DAT_10643a68,(int)"debug_smash_force",&DAT_1048467c,0);
  FUN_10399fe0(&DAT_10645930,(int)"displaysoundlist",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106459e0,(int)"loopsingleplayermaps",&DAT_10436dec,0x6000);
  FUN_10399fe0(&DAT_10645a38,(int)"servercfgfile","server.cfg",0);
  FUN_10399fe0(&DAT_10645a90,(int)"lservercfgfile","listenserver.cfg",0);
  FUN_10399fe0(&DAT_10645ae8,(int)"mp_teamplay",&DAT_10436dec,0x100);
  FUN_10399fe0(&DAT_10645b40,(int)"mp_fraglimit",&DAT_10436dec,0x100);
  FUN_10399fe0(&DAT_10645b98,(int)"mp_falldamage",&DAT_10436dec,0x100);
  FUN_10399fe0(&DAT_10645bf0,(int)"mp_weaponstay",&DAT_10436dec,0x100);
  FUN_10399fe0(&DAT_10645c48,(int)"mp_forcerespawn",&DAT_10436de8,0x100);
  FUN_10399fe0(&DAT_10645ca0,(int)"mp_footsteps",&DAT_10436de8,0x100);
  FUN_10399fe0(&DAT_10645cf8,(int)"mp_flashlight",&DAT_10436dec,0x100);
  FUN_10399fe0(&DAT_10645d50,(int)"mp_autocrosshair",&DAT_10436de8,0x100);
  FUN_10399fe0(&DAT_10645da8,(int)"decalfrequency",&DAT_104897f0,0x100);
  FUN_10399fe0(&DAT_10645e00,(int)"mp_teamlist","hgrunt;scientist",0x100);
  FUN_10399fe0(&DAT_10645e58,(int)"mp_teamoverride",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_10645eb0,(int)"mp_defaultteam",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10645f08,(int)"mp_allowNPCs",&DAT_10436de8,0x100);
  FUN_10399fe0(&DAT_10645f60,(int)"suitvolume",&DAT_10489854,0x80);
  FUN_10399fe0(&DAT_106461a0,(int)"sv_massreport",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106462a8,(int)"mp_dev_gamemode",&DAT_1043677a,2);
  FUN_10399fe0(&DAT_10646358,(int)"ai_post_frame_navigation",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106463b0,(int)"sv_threaded_init",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10646428,(int)"trace_report",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10646530,(int)"sv_unlockedchapters",&DAT_10436de8,0x80);
  FUN_10399fe0(&DAT_106465a0,(int)"sv_occlude_players",&DAT_10436de8,0x80000);
  FUN_10399fe0(&DAT_10646750,(int)"dispcoll_drawplane",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10646848,(int)"sv_optimizedmovement",&DAT_10436de8,0x2002);
  FUN_10399fe0(&DAT_106468c8,(int)"g_Language",&DAT_10436dec,0x2000);
  FUN_10399fe0(&DAT_10646920,(int)"sk_autoaim_mode",&DAT_10436de8,0x2080);
  FUN_10399fe0(&DAT_106469a8,(int)"old_radiusdamage",&DAT_1043880c,0x2000);
  FUN_10399fe0(&DAT_10646a00,(int)"skill",&DAT_10436de8,0x80);
  FUN_10399fe0(&DAT_1064c780,(int)"debug_materialmodifycontrol",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1064cf88,(int)"sv_noclipaccelerate",&DAT_10436df0,0x2180);
  FUN_10399fe0(&DAT_1064cfe0,(int)"sv_noclipspeed",&DAT_10436df0,0x2180);
  FUN_10399fe0(&DAT_1064d038,(int)"sv_specaccelerate",&DAT_10436df0,0x2180);
  FUN_10399fe0(&DAT_1064d090,(int)"sv_specspeed",&DAT_1045424c,0x2180);
  FUN_10399fe0(&DAT_1064d0e8,(int)"sv_specnoclip",&DAT_10436de8,0x2180);
  FUN_10399fe0(&DAT_1064d140,(int)"sv_maxspeed",&DAT_10469420,0x2102);
  FUN_10399fe0(&DAT_1064d198,(int)"sv_accelerate",&DAT_104897f0,0x2102);
  FUN_10399fe0(&DAT_1064d1f0,(int)"sv_airaccelerate",&DAT_104897f0,0x2102);
  FUN_10399fe0(&DAT_1064d248,(int)"sv_wateraccelerate",&DAT_104897f0,0x2102);
  FUN_10399fe0(&DAT_1064d2a0,(int)"sv_waterfriction",&DAT_10436de8,0x2102);
  FUN_10399fe0(&DAT_1064d350,(int)"sv_rollspeed",&DAT_104692b8,0x2102);
  FUN_10399fe0(&DAT_1064d508,(int)"sv_stepsize",&DAT_1049be70,0x2102);
  FUN_10399fe0(&DAT_1064d668,(int)"r_VehicleViewDampen",&DAT_10436de8,0x6100);
  FUN_10399fe0(&DAT_1064d6c0,(int)"r_JeepViewDampenFreq",&DAT_1049bf50,0x6100);
  FUN_10399fe0(&DAT_1064d718,(int)"r_JeepViewDampenDamp",&DAT_10436e38,0x6100);
  FUN_10399fe0(&DAT_1064d770,(int)"r_JeepViewZHeight",&DAT_1049bf84,0x6100);
  FUN_10399fe0(&DAT_1064d7c8,(int)"r_AirboatViewDampenFreq",&DAT_1049bf50,0x6100);
  FUN_10399fe0(&DAT_1064d820,(int)"r_AirboatViewDampenDamp",&DAT_10436e38,0x6100);
  FUN_10399fe0(&DAT_1064d878,(int)"r_AirboatViewZHeight",&DAT_1043880c,0x6100);
  FUN_10399fe0(&DAT_1064e8f8,(int)"phys_speeds",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1064e950,(int)"phys_show_active",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_1064e9a8,(int)"phys_debug_check_contacts",&DAT_10436dec,0x6000);
  FUN_10399fe0(&DAT_1064eda8,(int)"collision_shake_amp",&DAT_104a4250,0);
  FUN_10399fe0(&DAT_1064ee00,(int)"collision_shake_freq",&DAT_10436e20,0);
  FUN_10399fe0(&DAT_1064ee58,(int)"collision_shake_time",&DAT_10436e20,0);
  FUN_10399fe0(&DAT_1064f118,(int)"vprof_think_limit",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1064f170,(int)"vprof_scope_entity_thinks",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1064f1c8,(int)"vprof_scope_entity_gamephys",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1064f220,(int)"npc_vphysics",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1064f2f8,(int)"sv_teststepsimulation",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_1064f368,(int)"PhysicsSimulateTicks",&DAT_104a5410,0x6000);
  FUN_10399fe0(&DAT_1064f3c0,(int)"PhysicsSmoothingFactor",&DAT_1043880c,0x6000);
  FUN_10399fe0(&DAT_1064f418,(int)"PhysicsInitialAverageFrameTime","0.01667",0x6000);
  FUN_10399fe0(&DAT_10650110,(int)"debug_physimpact",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10650440,(int)"autoaim_max_dist",&DAT_104abef0,0);
  FUN_10399fe0(&DAT_10650498,(int)"autoaim_max_deflect",&DAT_104abf0c,0);
  FUN_10399fe0(&DAT_106505f8,(int)"sv_regeneration_wait_time",&DAT_10436e38,0x2000);
  FUN_10399fe0(&DAT_106506a8,(int)"player_old_armor",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10650758,(int)"sk_player_head",&DAT_10438794,0);
  FUN_10399fe0(&DAT_106507b0,(int)"sk_player_chest",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_10650808,(int)"sk_player_stomach",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_10650860,(int)"sk_player_arm",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_106508b8,(int)"sk_player_leg",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_106509c8,(int)"vis_force",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_10650b28,(int)"xc_crouch_debounce",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10650ff0,(int)"sv_unlag_debug",&DAT_10436dec,6);
  FUN_10399fe0(&DAT_106513c0,(int)"voice_player_speaking_delay_threshold",&DAT_1045e898,0x4000);
  FUN_10399fe0(&DAT_10652848,(int)"g_debug_angularsensor",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_10652bd8,(int)"g_debug_doors",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10652c30,(int)"breakable_disable_gib_limit",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10652c88,(int)"breakable_multiplayer",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_10652ce0,(int)"prop_active_gib_limit",&DAT_104a5410,0);
  FUN_10399fe0(&DAT_10652d38,(int)"prop_active_gib_max_fade_time",&DAT_10467504,0);
  FUN_10399fe0(&DAT_10652d90,(int)"func_breakdmg_bullet",&DAT_10436e20,0);
  FUN_10399fe0(&DAT_10652de8,(int)"func_breakdmg_club",&DAT_104b6724,0);
  FUN_10399fe0(&DAT_10652e40,(int)"func_breakdmg_explosive",&DAT_104b673c,0);
  FUN_10399fe0(&DAT_10652ef0,(int)"prop_break_disable_float",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10653008,(int)"debug_prop_force",&DAT_104b7ecc,0);
  FUN_10399fe0(&DAT_106706a8,(int)"g_ragdoll_maxcount",&DAT_1044d638,0x2000);
  FUN_10399fe0(&DAT_10670700,(int)"g_debug_ragdoll_removal",&DAT_10436dec,0x6000);
  FUN_10399fe0(&DAT_106707a8,(int)"g_ragdoll_important_maxcount",&DAT_10438794,0x2000);
  FUN_10399fe0(&DAT_106725b0,(int)"ai_task_pre_script",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106730b8,(int)"snd_sos_show_server_xmit",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_10675288,(int)"phys_pushscale",&DAT_10436de8,0x2000);
  FUN_10399fe0(&DAT_106756a8,(int)"template_debug",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1067d220,(int)"r_visualizetraces",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_1067e048,(int)"voice_serverdebug",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1067e100,(int)"script_connect_debugger_on_mapspawn",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1067f880,(int)"nav_coplanar_slope_limit",&DAT_104abf0c,0x4000);
  FUN_10399fe0(&DAT_1067f8d8,(int)"nav_coplanar_slope_limit_displacement",&DAT_104d9518,0x4000);
  FUN_10399fe0(&DAT_1067fa38,(int)"nav_show_light_intensity",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_1067fa90,(int)"nav_debug_blocked",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_1067fbf0,(int)"nav_potentially_visible_dot_tolerance",&DAT_104d97bc,0x4000);
  FUN_10399fe0(&DAT_10682190,(int)"nav_show_compass",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_10682508,(int)"nav_generation_stepsize",&DAT_104db88c,0);
  FUN_10399fe0(&DAT_10682718,(int)"nav_generate_incremental_range",&DAT_104dbaa4,0x4000);
  FUN_10399fe0(&DAT_10682b10,(int)"nav_max_vis_delta_list_length",&DAT_104a5410,0x4000);
  FUN_10399fe0(&DAT_106837b8,(int)"nav_show_nodes",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_10683810,(int)"nav_show_node_id",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_10683868,(int)"nav_test_node",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_106838c0,(int)"nav_test_node_crouch",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_10683918,(int)"nav_test_node_crouch_dir",&DAT_1049bd98,0x4000);
  FUN_10399fe0(&DAT_10683970,(int)"nav_show_node_grid",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_106846d0,(int)"z_splatterdistance",&DAT_104691d8,0x82000);
  FUN_10399fe0(&DAT_10684888,(int)"ti_sr_prim",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106848e0,(int)"ti_sr_prim_skin",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10684938,(int)"ti_sr_sec",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10684990,(int)"ti_sr_sec_skin",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10684b88,(int)"sv_debugenemyLook",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10684c50,(int)"debug_force_ready",&DAT_10436dec,4);
  FUN_10399fe0(&DAT_10684ca8,(int)"mp_allow_defenders_to_pickup_dropped_shields",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_10684d48,(int)"sv_disable_afk",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10688260,(int)"bot_opposite_team",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106882b8,(int)"bot_drivers",&DAT_10436dec,0x4002);
  FUN_10399fe0(&DAT_106883f8,(int)"bot_max_separation_force",&DAT_10469398,0x4010);
  FUN_10399fe0(&DAT_10688450,(int)"bot_forwardspeed",&DAT_10468650,0x4010);
  FUN_10399fe0(&DAT_106884a8,(int)"bot_backspeed",&DAT_10468650,0x4010);
  FUN_10399fe0(&DAT_10688500,(int)"bot_sidespeed",&DAT_10468650,0x4010);
  FUN_10399fe0(&DAT_106887f8,(int)"sv_bomb_radius",&DAT_1044a708,0x2000);
  FUN_10399fe0(&DAT_10688ec0,(int)"sv_propane_tank_speed",&DAT_10438830,0);
  FUN_10399fe0(&DAT_10688f18,(int)"sv_propane_tank_torque",&DAT_104e8160,0);
  FUN_10399fe0(&DAT_10689520,(int)"soffs_forward",&DAT_10436df0,0x2000);
  FUN_10399fe0(&DAT_10689578,(int)"soffs_right",&DAT_10436dec,0x2000);
  FUN_10399fe0(&DAT_106895d0,(int)"soffs_up",&DAT_10436dec,0x2000);
  FUN_10399fe0(&DAT_10689958,(int)"bomb_realtime",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106899b0,(int)"bomb_dramatime",&DAT_104e96f0,0);
  FUN_10399fe0(&DAT_1068a590,(int)"ti_debug_vis_spawn",&DAT_10436dec,0x4002);
  FUN_10399fe0(&DAT_1068a5e8,(int)"debug_ignore_no_drivers",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068a640,(int)"debug_bots_can_drive",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068a698,(int)"mp_scale_time_with_players",&DAT_10436dec,2);
  FUN_10399fe0(&DAT_1068a6f0,(int)"ti_showRoundStateTransitions",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_1068aca0,(int)"vote_debug",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068bbd0,(int)"inferno_debug",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_1068bcd8,(int)"inferno_velocity_factor","0.003",0x4000);
  FUN_10399fe0(&DAT_1068bd30,(int)"inferno_velocity_decay_factor",&DAT_104a4250,0x4000);
  FUN_10399fe0(&DAT_1068bd88,(int)"inferno_velocity_normal_factor",&DAT_10436dec,0x4000);
  FUN_10399fe0(&DAT_1068bde0,(int)"inferno_surface_offset",&DAT_104f278c,0x4000);
  FUN_10399fe0(&DAT_1068be38,(int)"inferno_child_spawn_max_depth",&DAT_1049bd98,0x4000);
  FUN_10399fe0(&DAT_1068be90,(int)"inferno_scorch_decals",&DAT_10436de8,0x4000);
  FUN_10399fe0(&DAT_1068bee8,(int)"inferno_max_trace_per_tick",&DAT_104f27e0,0);
  FUN_10399fe0(&DAT_1068bf40,(int)"inferno_forward_reduction_factor",&DAT_104f2800,0x4000);
  FUN_10399fe0(&DAT_1068c2b0,(int)"debug_disable_auto_cars",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068cc60,(int)"hr_cv_fileindex",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_1068ccb8,(int)"hr_cv_hostageindex",&DAT_1043b6a0,0);
  FUN_10399fe0(&DAT_1068cd10,(int)"hr_cv_speed",&DAT_10438740,0);
  FUN_10399fe0(&DAT_1068cd68,(int)"hr_cv_stepsize",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_1068cfb0,(int)"npc_plane_torque_test",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068e058,(int)"npc_torque_test",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068ec58,(int)"vip_turnspeed",&DAT_104fa03c,0);
  FUN_10399fe0(&DAT_1068ecb0,(int)"npc_turnspeed","16000",0);
  FUN_10399fe0(&DAT_1068ed08,(int)"npc_car_speed","3150000",0);
  FUN_10399fe0(&DAT_1068ed60,(int)"npc_car_speed_modifier",&DAT_104fa084,0);
  FUN_10399fe0(&DAT_1068edb8,(int)"npc_truck_turnspeed","30000",0);
  FUN_10399fe0(&DAT_1068ee10,(int)"npc_truck_speed","5150000",0);
  FUN_10399fe0(&DAT_1068ee68,(int)"npc_truck_speed_modifier",&DAT_104fa0d0,0);
  FUN_10399fe0(&DAT_1068eec0,(int)"npc_loadedtruck_turnspeed","18000",0);
  FUN_10399fe0(&DAT_1068ef18,(int)"npc_loadedtruck_speed","4400000",0);
  FUN_10399fe0(&DAT_1068ef70,(int)"npc_loadedtruck_speed_modifier",&DAT_104fa138,0);
  FUN_10399fe0(&DAT_1068efc8,(int)"debug_npcvehicle_showobstacle_avoidance",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068f020,(int)"debug_npcvehicle",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068f078,(int)"debug_npc_allvehicles_speed_modifier",&DAT_104d9518,0);
  FUN_10399fe0(&DAT_1068f0d0,(int)"npc_physics_tick",&DAT_104fa1c0,0);
  FUN_10399fe0(&DAT_1068f148,(int)"npc_car_damping",&DAT_104e9a5c,0);
  FUN_10399fe0(&DAT_1068f1a0,(int)"npc_car_damping_angular",&DAT_104fa1ec,0);
  FUN_10399fe0(&DAT_1068f210,(int)"debug_car_model",&DAT_1043b6a0,0);
  FUN_10399fe0(&DAT_1068f268,(int)"debug_car_type",&DAT_1043b6a0,0);
  FUN_10399fe0(&DAT_1068f2c0,(int)"debug_overstress_npccars",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068f318,(int)"npcvehicle_adjust_z",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_1068f370,(int)"npcvehicle_thrust_modifier",&DAT_104f2680,0);
  FUN_10399fe0(&DAT_1068f3c8,(int)"npcvehicle_torque_modifier",&DAT_104f2680,0);
  FUN_10399fe0(&DAT_1068ffb0,(int)"sv_dog_force_multiplier",&DAT_104fb418,0);
  FUN_10399fe0(&DAT_10690008,(int)"sv_dog_damping",&DAT_104fb438,0);
  FUN_10399fe0(&DAT_10690060,(int)"sv_dog_gravity",&DAT_10469448,0);
  FUN_10399fe0(&DAT_10690918,(int)"sv_hostage_gravity",&DAT_104691c8,0);
  FUN_10399fe0(&DAT_10690970,(int)"ti_harlem_shake",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10690ae8,(int)"sv_hostage_speed",&DAT_10436e38,0);
  FUN_10399fe0(&DAT_10690b40,(int)"debug_hostage_speed",&DAT_104693f8,0);
  FUN_10399fe0(&DAT_10690b98,(int)"debug_hostage_damping",&DAT_10436e38,0);
  FUN_10399fe0(&DAT_10691bc0,(int)"ti_npc_vehicle",&DAT_10436de8,0);
  FUN_10399fe0(&DAT_10692148,(int)"ti_user_stat_spew",&DAT_10436dec,0x2002);
  FUN_10399fe0(&DAT_106927a8,(int)"mp_tournament",&DAT_10436dec,0x2100);
  FUN_10399fe0(&DAT_10692b68,(int)"movement_anim_playback_minrate",&DAT_10489854,0);
  FUN_10399fe0(&DAT_10692c38,(int)"debug_show_player_shoot_angles",&DAT_10436dec,0x2002);
  FUN_10399fe0(&DAT_10692de0,(int)"ti_debug_drama_cam",&DAT_10436dec,2);
  FUN_10399fe0(&DAT_10693d40,(int)"sk_plr_dmg_grenade",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10695000,(int)"cl_dog_yawspeed",&DAT_104b6724,0);
  FUN_10399fe0(&DAT_10695208,(int)"boat_force",&DAT_1043b6a0,0x2000);
  FUN_10399fe0(&DAT_10695260,(int)"boat_brake_speed",&DAT_104388a4,0x2000);
  FUN_10399fe0(&DAT_106952b8,(int)"boat_idle_speed",&DAT_104388e4,0x2000);
  FUN_10399fe0(&DAT_10695368,(int)"boat_spring_force",&DAT_1043880c,0x2002);
  FUN_10399fe0(&DAT_106953c0,(int)"boat_spring_damp",&DAT_1043880c,0x2002);
  FUN_10399fe0(&DAT_10695418,(int)"boat_spring_length",&DAT_1043880c,0x2002);
  FUN_10399fe0(&DAT_10695470,(int)"boat_turnoverride",&DAT_1043880c,0x2002);
  FUN_10399fe0(&DAT_106954c8,(int)"boat_ray_debug_server",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10695628,(int)"nullify_roll",&DAT_10469394,0x2000);
  FUN_10399fe0(&DAT_10695680,(int)"nullify_yaw",&DAT_104687f0,0x2000);
  FUN_10399fe0(&DAT_106956d8,(int)"nullify_pitch",&DAT_1046931c,0x2000);
  FUN_10399fe0(&DAT_10695730,(int)"nullify_forward",&DAT_1043885c,0x2000);
  FUN_10399fe0(&DAT_10695788,(int)"nullify_lateral",&DAT_10456018,0x2000);
  FUN_10399fe0(&DAT_106957e0,(int)"nullify_collective",&DAT_10456018,0x2000);
  FUN_10399fe0(&DAT_10695838,(int)"heli_damping_rot",&DAT_10511bf4,0x2000);
  FUN_10399fe0(&DAT_10695890,(int)"heli_damping",&DAT_10511c0c,0x2000);
  FUN_10399fe0(&DAT_10695998,(int)"debug_heli_yaw_speed",&DAT_104691f0,0);
  FUN_10399fe0(&DAT_106959f0,(int)"debug_heli_forward_speed",&DAT_10511e20,0);
  FUN_10399fe0(&DAT_10695de8,(int)"ti_vehicle_authmode",&DAT_10438794,0x2000);
  FUN_10399fe0(&DAT_10695e70,(int)"car_passenger_dmg_radius",&DAT_10436e38,0);
  FUN_10399fe0(&DAT_10695ec8,(int)"car_passenger_dmg_magnitude",&DAT_10436e20,0);
  FUN_10399fe0(&DAT_10695f20,(int)"debug_allow_enemy_passenger",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_10696800,(int)"sv_debug_vehicle_update",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106968e0,(int)"impactTorqueModifier",&DAT_1045ce04,0x80000);
  FUN_10399fe0(&DAT_106974b8,(int)"car_friction",&DAT_1043885c,0);
  FUN_10399fe0(&DAT_10697510,(int)"car_force",&DAT_1043b6a0,0x2000);
  FUN_10399fe0(&DAT_10697568,(int)"car_gearmod",&DAT_1043b6a0,0x2000);
  FUN_10399fe0(&DAT_106975c0,(int)"car_turnoverride",&DAT_1043880c,0x2002);
  FUN_10399fe0(&DAT_10697618,(int)"carbump_torque_value",&DAT_1051410c,0x2000);
  FUN_10399fe0(&DAT_10697670,(int)"vehicle_wheel_debug_server",&DAT_10436dec,0);
  FUN_10399fe0(&DAT_106976c8,(int)"car_use_grip_nullify",&DAT_10436dec,0x2000);
  FUN_10399fe0(&DAT_10697750,(int)"sv_vehicle_serverside_reduced_force",&DAT_104abf0c,0);
  FUN_10399fe0(&DAT_10698228,(int)"sv_grenade_size",&DAT_10438794,0);
  FUN_10399fe0(&DAT_10698928,(int)"sv_infiniteammo",&DAT_10436dec,0x6100);
  FUN_10399fe0(&DAT_10699060,(int)"melee_show_swing",&DAT_10436dec,0x6000);
  FUN_10399fe0(&DAT_106990b8,(int)"melee_range",&DAT_10516258,0x6000);
  FUN_10399fe0(&DAT_106991b0,(int)"melee_force_scalar",&DAT_104f278c,0x6000);
  FUN_10399fe0(&DAT_10699208,(int)"melee_force_scalar_combat_character",&DAT_10436df0,0x6000);
  FUN_10399fe0(&DAT_10699260,(int)"melee_collateral_shove_count",&DAT_104f27e0,0x4000);
  FUN_10399fe0(&DAT_106a5af8,(int)"BlendBonesMode",&DAT_10438794,0x2000);
  FUN_1039a0a0(&local_10,"violence_hgibs");
  FUN_1039a0a0(&local_18,"ti_holiday");
  FUN_1039a0a0(&local_c,"skill");
  FUN_1039a0a0(&local_c,"sv_skyname");
  FUN_1039a0a0(&local_c,"ti_tournament");
  FUN_1039a0a0(local_10,"developer");
  FUN_1039a0a0(local_10,"sv_infiniteammo");
  FUN_1039a0a0(local_14,"mp_plantime");
  FUN_1039a0a0(local_14,"sv_infiniteammo");
  FUN_1039a0a0(local_14,"sv_stepsize");
  FUN_1039a0a0(local_18,"debug_disable_rounds");
  FUN_1039a0a0(local_18,"sv_alltalk");
  FUN_1039a0a0(local_18,"sv_client_predict");
  FUN_1039a0a0(local_18,"sv_maxspeed");
  FUN_1039a0a0(local_18,"tv_delaymapchange");
  FUN_1039a0a0(local_1c,"room_type");
  FUN_1039a0a0(local_1c,"sv_maxspeed");
  FUN_1039a0a0(local_20,"tv_enable");
  FUN_1039a0a0(local_24,"vote_debug");
  FUN_1039a0a0(local_60,"debug_disable_rounds");
  FUN_1039a0a0(local_70,"sv_infiniteammo");
  FUN_1039a0a0(local_ac,"sv_infiniteammo");
  FUN_1039a0a0(local_c,"debug_disable_rounds");
  FUN_1039a0a0(local_c,"mp_roundtime");
  FUN_1039a0a0(local_c8,"sv_debug_player_use");
  FUN_1039a0a0(local_d0,"sv_maxspeed");
  FUN_1039a120(&local_10,"cl_hud_minmode",'\x01');
  FUN_1039b5c0(&DAT_106ba078,0x5c,"\"",0xb,(int)&DAT_105e6890);
  FUN_1039b5c0(&DAT_106baa98,0x7f,"\"",1,(int)&DAT_105e68e8);
  FUN_1039c860(param_1,(byte *)"\tTime\t%g\n");
  FUN_1039c860(param_1,(byte *)"event %u\n");
  FUN_1039fcb0(param_1,(uint *)"progress",*(uint *)((int)this + 0x1b0));
  FUN_1039fcb0(param_1,(uint *)"scaleAmount",*(uint *)((int)this + 0x1f0));
  FUN_1039fce0(local_8,(uint *)"VPanel",uVar2);
  FUN_1039fce0(local_c,(uint *)"winner",*(uint *)(*(int *)((int)this + 4) + 0xac));
  FUN_1039fce0(param_1,(uint *)"Attributes",*(uint *)((int)this + 0x58));
  FUN_1039fce0(param_1,(uint *)"AutoResize",(uint)(*(byte *)((int)this + 0xae) >> 4));
  FUN_1039fce0(param_1,(uint *)"DisableSelectionColor",(uint)(*(char *)((int)this + 0x29c) == '\0'))
  FUN_1039fce0(param_1,(uint *)"NumericInputOnly",(uint)(*(char *)((int)this + 0x2aa) != '\0'));
  FUN_1039fce0(param_1,(uint *)"PinCorner",*(byte *)((int)this + 0xae) & 0xf);
  FUN_1039fce0(param_1,(uint *)"RoundedCorners",(uint)*(byte *)((int)this + 0x150));
  FUN_1039fce0(param_1,(uint *)"SubTabPosition",*(uint *)((int)this + 700));
  FUN_1039fce0(param_1,(uint *)"TabPosition",uVar1);
  FUN_1039fce0(param_1,(uint *)"allowMouseWheel",(uint)(*(char *)((int)this + 0x234) != '\0'));
  FUN_1039fce0(param_1,(uint *)"auto_shrink_contents",(uint)(*(char *)((int)this + 0x246) != '\0'));
  FUN_1039fce0(param_1,(uint *)"auto_tall_tocontents",(uint)(*(char *)((int)this + 0x243) != '\0'));
  FUN_1039fce0(param_1,(uint *)"auto_wide_minimum",*(uint *)((int)this + 0x24c));
  FUN_1039fce0(param_1,(uint *)"auto_wide_tocontents",(uint)(*(char *)((int)this + 0x241) != '\0'));
  FUN_1039fce0(param_1,(uint *)"autocolor_enable",(uint)(*(char *)((int)this + 0x249) != '\0'));
  FUN_1039fce0(param_1,(uint *)"brighttext",(uint)(*(int *)((int)this + 0x22c) == 2));
  FUN_1039fce0(param_1,(uint *)"catchEnter",(uint)*(byte *)((int)this + 0x28d));
  FUN_1039fce0(param_1,(uint *)"centerwrap",(uint)(*(char *)((int)this + 0x23f) != '\0'));
  FUN_1039fce0(param_1,(uint *)"default",*(ushort *)((int)this + 0x25c) >> 6 & 1);
  FUN_1039fce0(param_1,(uint *)"draw_corner_height",*(uint *)((int)this + 0x1b0));
  FUN_1039fce0(param_1,(uint *)"draw_corner_width",*(uint *)((int)this + 0x1b4));
  FUN_1039fce0(param_1,(uint *)"dulltext",(uint)(*(int *)((int)this + 0x22c) == 1));
  FUN_1039fce0(param_1,(uint *)"editable",(uint)(cVar1 != '\0'));
  FUN_1039fce0(param_1,(uint *)"enabled",(uint)(cVar2 != '\0'));
  FUN_1039fce0(param_1,(uint *)"filtered",(uint)*(byte *)((int)this + 0x1a9));
  FUN_1039fce0(param_1,(uint *)"lastBarWidth",*(uint *)((int)this + 500));
  FUN_1039fce0(param_1,(uint *)"maxchars",*(uint *)((int)this + 0x214));
  FUN_1039fce0(param_1,(uint *)"maxchars",uVar2);
  FUN_1039fce0(param_1,(uint *)"multiline",(uint)*(byte *)((int)this + 0x261));
  FUN_1039fce0(param_1,(uint *)"noellipses",(uint)(*(char *)((int)this + 0x250) != '\0'));
  FUN_1039fce0(param_1,(uint *)"noshortcutsyntax",(uint)(*(char *)((int)this + 0x245) != '\0'));
  FUN_1039fce0(param_1,(uint *)"overrideChildPanelWidth",
  FUN_1039fce0(param_1,(uint *)"pin_corner_to_sibling",(uint)*(byte *)((int)this + 0xbd));
  FUN_1039fce0(param_1,(uint *)"pin_to_sibling_corner",(uint)*(byte *)((int)this + 0xbc));
  FUN_1039fce0(param_1,(uint *)"preserveAspectRatio",(uint)*(byte *)((int)this + 0x1a8));
  FUN_1039fce0(param_1,(uint *)"scaleImage",(uint)(*(char *)((int)this + 0x1ec) != '\0'));
  FUN_1039fce0(param_1,(uint *)"scrollbar",(uint)(cVar1 != '\0'));
  FUN_1039fce0(param_1,(uint *)"settitlebarvisible",*(byte *)((int)this + 0x25c) >> 5 & 1);
  FUN_1039fce0(param_1,(uint *)"showScrollBar",(uint)(*(char *)((int)this + 0x234) != '\0'));
  FUN_1039fce0(param_1,(uint *)"src_corner_height",*(uint *)((int)this + 0x1a8));
  FUN_1039fce0(param_1,(uint *)"src_corner_width",*(uint *)((int)this + 0x1ac));
  FUN_1039fce0(param_1,(uint *)"tabPosition",uVar6);
  FUN_1039fce0(param_1,(uint *)"textHidden",(uint)(*(char *)((int)this + 0x231) != '\0'));
  FUN_1039fce0(param_1,(uint *)"textinsetx",uVar4);
  FUN_1039fce0(param_1,(uint *)"textinsety",*(uint *)((int)this + 0x218));
  FUN_1039fce0(param_1,(uint *)"tileHorizontalOverride",*(uint *)((int)this + 0x208));
  FUN_1039fce0(param_1,(uint *)"tileHorizontally",(uint)(*(char *)((int)this + 0x1ee) != '\0'));
  FUN_1039fce0(param_1,(uint *)"tileImage",(uint)(*(char *)((int)this + 0x1ed) != '\0'));
  FUN_1039fce0(param_1,(uint *)"tileVerticalOverride",*(uint *)((int)this + 0x20c));
  FUN_1039fce0(param_1,(uint *)"tileVertically",(uint)(*(char *)((int)this + 0x1ef) != '\0'));
  FUN_1039fce0(param_1,(uint *)"unicode",(uint)(*(char *)((int)this + 0x2ab) != '\0'));
  FUN_1039fce0(param_1,(uint *)"use_proportional_insets",
  FUN_1039fce0(param_1,(uint *)"visible",(uint)(cVar2 != '\0'));
  FUN_1039fce0(param_1,(uint *)"visible",0xffffffff);
  FUN_1039fce0(puVar4,(uint *)"winner",0);
  FUN_1039fce0(puVar4,(uint *)"winner",uVar6);
  FUN_1039fce0(puVar6,(uint *)"winner",0);
  FUN_1039fce0(this,(uint *)"forcerepeatround",1);
  FUN_1039fce0(this,(uint *)"winner",3);
  FUN_1039fce0(this_00,(uint *)"VPanel",uVar2);
  FUN_1039fce0(this_00,(uint *)"current",param_3);
  FUN_1039fce0(this_00,(uint *)"forcerepeatround",1);
  FUN_1039fce0(this_00,(uint *)"state",uVar3 & 0xff);
  FUN_1039fce0(this_00,(uint *)"total",param_2);
  FUN_1039fce0(this_00,(uint *)"version",1);
  FUN_1039fce0(this_00,(uint *)"winner",*(uint *)(*(int *)((int)this + 4) + 0xac));
  FUN_1039fce0(this_00,(uint *)"winner",0);
  FUN_1039fce0(this_00,(uint *)"winner",uVar2);
  FUN_1039fce0(this_01,(uint *)"winner",*(uint *)(*(int *)((int)this + 4) + 0xac));
  FUN_1039fd00(this_00,(uint *)"BuildGroupPtr",param_1);
  FUN_1039fd00(this_00,(uint *)"PanelPtr",uVar2);
  FUN_1039fd00(this_01,(uint *)"PanelPtr",uVar3);
  FUN_1039fd20(param_1,(uint *)"ControlName",pcVar3);
  FUN_1039fd20(param_1,(uint *)"Place",pcVar2);
  FUN_1039fd20(param_1,(uint *)"fieldName",pcVar3);
  FUN_1039fd20(param_1,(uint *)"imageAlignment",pcVar1);
  FUN_1039fd20(param_1,(uint *)"labelText",pcVar2);
  FUN_1039fd20(param_1,(uint *)"pin_to_sibling",*(char **)((int)this + 0xb8));
  FUN_1039fd20(param_1,(uint *)"textAlignment",pcVar2);
  FUN_1039fd20(param_2,*param_3,"");
  FUN_1039fd20(puVar3,(uint *)"primtext",local_208);
  FUN_1039fd20(puVar4,(uint *)"prim_0",pcVar5);
  FUN_1039fd20(puVar4,(uint *)"primtext","#TI_Score_TimeWinExpire");
  FUN_1039fd20(puVar4,(uint *)"primtext",pcVar5);
  FUN_1039fd20(puVar4,(uint *)"sec_0",pcVar5);
  FUN_1039fd20(puVar4,(uint *)"secondarytext",pcVar5);
  FUN_1039fd20(puVar6,(uint *)"primtext","TI_Score_RoundDraw");
  FUN_1039fd20(puVar6,(uint *)"secondarytext","TI_Score_HR_ElimDraw");
  FUN_1039fd20(this,(uint *)"prim_0",pcVar7);
  FUN_1039fd20(this,(uint *)"primtext","#TI_Score_TeamWin");
  FUN_1039fd20(this,(uint *)"sec_0",pcVar7);
  FUN_1039fd20(this,(uint *)"secondarytext","#TI_Score_TeamElim");
  FUN_1039fd20(this,(uint *)"secondarytext",pcVar7);
  FUN_1039fd20(this_00,(uint *)"convar","sv_gravity");
  FUN_1039fd20(this_00,(uint *)"prim_0",pcVar3);
  FUN_1039fd20(this_00,(uint *)"prim_0",pcVar6);
  FUN_1039fd20(this_00,(uint *)"primtext","#TI_Score_TDM_TimeOut_Draw");
  FUN_1039fd20(this_00,(uint *)"primtext","#TI_Score_TeamWin");
  FUN_1039fd20(this_00,(uint *)"primtext","#TI_Score_TimeWinExpire");
  FUN_1039fd20(this_00,(uint *)"secondarytext",local_208);
  FUN_1039fd20(this_00,(uint *)&DAT_1049ccc8,"gravity");
  FUN_1039fd20(this_01,(uint *)"prim_0",pcVar5);
  FUN_1039fd20(this_01,(uint *)"prim_0",pcVar7);
  FUN_1039fd20(this_01,(uint *)"primtext","#TI_Score_TeamWin");
  FUN_103a0220(&DAT_106038a4,0x30,0x200,1,"AI_Waypoint_t pool",0);
  FUN_103a0220(&DAT_1060b174,0x1c,0x200,1,"g_EntityListPool",0);
  FUN_103a0220(&DAT_1060b1a8,0x38,0x80,2,"EventQueuePrioritizedEvent_t pool",0);
  FUN_103a0220(&DAT_1060b204,8,0x100,0,"g_EntListMemPool",0);
  FUN_103a0220(&DAT_1064f470,0x14,0x800,0,"g_EdictTouchLinks",0);
  FUN_103a0220(&DAT_1064f4a0,0xc,0x800,0,"g_EntityGroundLinks",0);
  FUN_103a0220(&DAT_10673464,0x84,0x40,1,"CSoundPatch pool",0);
  FUN_103a0220(&DAT_10673498,0x18,0x20,1,"SoundCommand_t pool",0);
  FUN_103a0220(param_1 + 9,0x20,0x20,1,"CPanelMessageMapDictionary::m_PanelMessageMapPool",0);
  FUN_103a0220(param_1 + 9,0x48,0x20,1,"CPanelKeyBindingMapDictionary::m_PanelKeyBindingMapPool",0);
  FUN_103a0430(&DAT_105fda64,FUN_10074c50,"ServerGameTags001");
  FUN_103a0430(&DAT_10607cb0,FUN_100c12d0,"ServerGameTags001");
  FUN_103a0430(&DAT_1060ebfc,FUN_100ebc90,"IEffects001");
  FUN_103a0430(&DAT_1064601c,FUN_1011eec0,"ServerGameTags001");
  FUN_103a0430(&DAT_10646408,FUN_1011eea0,"ServerGameDLL005");
  FUN_103a0430(&DAT_10646588,FUN_1011eeb0,"ServerGameEnts001");
  FUN_103a0430(&DAT_10646594,FUN_1011ee90,"ServerGameClients004");
  FUN_103a0430(&DAT_1064669c,FUN_1011ee80,"VServerDllSharedAppSystems001");
  FUN_103a0430(&DAT_1064b5b4,FUN_101291f0,"HLTVDirector001");
  FUN_103a0430(&DAT_1064c2a0,FUN_10134aa0,"ServerGameTags001");
  FUN_103a0430(&DAT_10650434,FUN_10181a90,"ServerGameTags001");
  FUN_103a0430(&DAT_10651560,FUN_10186f90,"PlayerInfoManager001");
  FUN_103a0430(&DAT_1065156c,FUN_10186f80,"PlayerInfoManager002");
  FUN_103a0430(&DAT_10651578,FUN_10186fa0,"BotManager001");
  FUN_103a0430(&DAT_10672848,FUN_101c3cb0,"ServerGameTags001");
  FUN_103a0430(&DAT_10675c60,FUN_101efe30,"ServerGameTags001");
  FUN_103a0430(&DAT_10683abc,FUN_10235240,"ServerGameTags001");
  FUN_103a0430(&DAT_10683f24,FUN_10236060,"ServerGameTags001");
  FUN_103a0430(&DAT_10683f40,FUN_102360a0,"ServerGameTags001");
  FUN_103a0430(&DAT_106846b8,FUN_1025cb40,"ServerGameTags001");
  FUN_103a0430(&DAT_10687bb8,FUN_1025e4c0,"ServerGameTags001");
  FUN_103a0430(&DAT_10687bf0,FUN_10268760,"ServerGameTags001");
  FUN_103a0430(&DAT_106885e8,FUN_10269dc0,"ServerGameTags001");
  FUN_103a0430(&DAT_10688600,FUN_1026a970,"ServerGameTags001");
  FUN_103a0430(&DAT_10688618,FUN_1026bf30,"ServerGameTags001");
  FUN_103a0430(&DAT_10689ab8,FUN_1027be40,"ServerGameTags001");
  FUN_103a0430(&DAT_1068a2e4,FUN_102944c0,"ServerGameTags001");
  FUN_103a0430(&DAT_1068a790,FUN_102946a0,"ServerGameTags001");
  FUN_103a0430(&DAT_10692328,FUN_102eb770,"ServerGameTags001");
  FUN_103a0430(&DAT_10692c9c,FUN_103012a0,"ServerGameTags001");
  FUN_103a0430(&DAT_10693b10,FUN_103159a0,"ServerGameTags001");
  FUN_103a0430(&DAT_10694d90,FUN_103163f0,"ServerGameTags001");
  FUN_103a0430(&DAT_106988d0,FUN_103474d0,"ServerGameTags001");
  FUN_103a0430(&DAT_106a59e8,FUN_10368f10,"VSERVERTOOLS001");
  FUN_103a04e0((uint *)&DAT_106027d8,"{}()\':");
  FUN_103a08e0(&local_24,"");
  FUN_103a08e0(&local_2c,"");
  FUN_103a08e0((void *)((int)this + 0x54),"");
  FUN_103a09f0((void *)((int)this + 0x13c),"");
  FUN_103a09f0((void *)((int)this + 0x18),"");
  FUN_103a09f0((void *)((int)this + 0x28),"");
  FUN_103a09f0((void *)((int)this + 0x38),"");
  FUN_103a09f0((void *)((int)this + 0x94),"");
  FUN_103a09f0((void *)((int)this + 0xa4),"");
  FUN_103a09f0((void *)((int)this + 8),"");
  FUN_103a7480("ClientDLL",(int)&param_1,1);
  FUN_103a7480("GameUI",(int)&param_1,1);
  FUN_103a7560(this,"BuildModeDialog",0);
  FUN_103a8fb0(this,param_1,(char *)0x0,"",0);
  FUN_103ad8a0(this,0,"DragDropHelper",0);
  FUN_103ad8a0(this,param_1,"TreeNode",0);
  FUN_103ad8a0(this,param_1,"TreeNodeDropPanel",0);
  FUN_103b0530(param_1,(uint *)"particles/particles_manifest.txt");
  FUN_103b2410(this,(uint *)"constraints",6,param_1,(int *)((int)this + 0x1a8));
  FUN_103b2410(this,(uint *)"emitters",3,param_1,(int *)((int)this + 0x180));
  FUN_103b2410(this,(uint *)"forces",5,param_1,(int *)((int)this + 0x194));
  FUN_103b2410(this,(uint *)"initializers",2,param_1,(int *)((int)this + 0x16c));
  FUN_103b2410(this,(uint *)"operators",1,param_1,(int *)((int)this + 0x144));
  FUN_103b2410(this,(uint *)"renderers",0,param_1,(int *)((int)this + 0x158));
  FUN_103bc960(this,param_1,param_2,"",0);
  FUN_103ce890(this,param_1,param_2,"",0);
  FUN_103e83b0(&DAT_106cca3c,(int *)"Button",(int *)FUN_103a4d30);
  FUN_103e83b0(&DAT_106ce2bc,(int *)"EditablePanel",(int *)FUN_103a6d10);
  FUN_103e83b0(&DAT_106ce504,(int *)"ImagePanel",(int *)FUN_103a8820);
  FUN_103e83b0(&DAT_106ce93c,(int *)"PercentageCroppedImageLabel",(int *)FUN_103aa4f0);
  FUN_103e83b0(&DAT_106ce954,(int *)"Label",(int *)FUN_103aa4c0);
  FUN_103e83b0(&DAT_106cfe50,(int *)"Panel",(int *)FUN_103b14b0);
  FUN_103e83b0(&DAT_106cffa4,(int *)"ToggleButton",(int *)FUN_103bcab0);
  FUN_103e83b0(&DAT_106cffd8,(int *)"AnimatingImagePanel",(int *)FUN_103bd0d0);
  FUN_103e83b0(&DAT_106d040c,(int *)"CBitmapImagePanel",(int *)FUN_103bdae0);
  FUN_103e83b0(&DAT_106d0824,(int *)"CheckButton",(int *)FUN_103be330);
  FUN_103e83b0(&DAT_106d0860,(int *)"ComboBox",(int *)FUN_103befd0);
  FUN_103e83b0(&DAT_106d0898,(int *)"CvarToggleCheckButton",(int *)FUN_103c0610);
  FUN_103e83b0(&DAT_106d08c4,(int *)"Divider",(int *)FUN_103c0c10);
  FUN_103e83b0(&DAT_106d08f4,(int *)"ExpandButton",(int *)FUN_103c0fc0);
  FUN_103e83b0(&DAT_106d0930,(int *)"GraphPanel",(int *)FUN_103c1680);
  FUN_103e83b0(&DAT_106d0964,(int *)"ListPanel",(int *)FUN_103c2ec0);
  FUN_103e83b0(&DAT_106d09b0,(int *)"ListViewPanel",(int *)FUN_103c83d0);
  FUN_103e83b0(&DAT_106d0a5c,(int *)"MenuBar",(int *)FUN_103ce190);
  FUN_103e83b0(&DAT_106d0a8c,(int *)"MenuButton",(int *)FUN_103ceb00);
  FUN_103e83b0(&DAT_106d0ac0,(int *)"MenuItem",(int *)FUN_103cfa80);
  FUN_103e83b0(&DAT_106d0afc,(int *)"MessageBox",(int *)FUN_103d0c00);
  FUN_103e83b0(&DAT_106d0b30,(int *)"ImageProgressBar",(int *)FUN_103d1930);
  FUN_103e83b0(&DAT_106d0b44,(int *)"ProgressBar",(int *)FUN_103d1960);
  FUN_103e83b0(&DAT_106d0b54,(int *)"ContinuousProgressBar",(int *)FUN_103d1900);
  FUN_103e83b0(&DAT_106d0fbc,(int *)"CircularProgressBar",(int *)FUN_103d29f0);
  FUN_103e83b0(&DAT_106d0fec,(int *)"RadioButton",(int *)FUN_103d3540);
  FUN_103e83b0(&DAT_106d1424,(int *)"RichText",(int *)FUN_103d4c40);
  FUN_103e83b0(&DAT_106d1894,(int *)"ScalableImagePanel",(int *)FUN_103d89f0);
  FUN_103e83b0(&DAT_106d1cd4,(int *)"ScrollBar",(int *)FUN_103da050);
  FUN_103e83b0(&DAT_106d1ce4,(int *)"ScrollBar_Vertical",(int *)FUN_103da080);
  FUN_103e83b0(&DAT_106d1cf4,(int *)"ScrollBar_Horizontal",(int *)FUN_103da050);
  FUN_103e83b0(&DAT_106d1d2c,(int *)"TextEntry",(int *)FUN_103db890);
  FUN_103e83b0(&DAT_106d2174,(int *)"TreeView",(int *)FUN_103e2910);
  FUN_103e83b0(&DAT_106d21ec,(int *)"CTreeViewListControl",(int *)FUN_103e6af0);
  FUN_103e83b0(&DAT_106d2220,(int *)"URLLabel",(int *)FUN_103e7900);
  FUN_103e83b0(&DAT_106d2654,(int *)"CountdownLabel",(int *)FUN_103e7aa0);
  FUN_103e83b0(&DAT_106d2680,(int *)"MessagingPanel",(int *)FUN_103e8020);
  FUN_103e8bc0((int *)"AnimatingImagePanel");
  FUN_103e8bc0((int *)"BuildModeDialog");
  FUN_103e8bc0((int *)"Button");
  FUN_103e8bc0((int *)"CBuildModeNavCombo");
  FUN_103e8bc0((int *)"CDragDropHelperPanel");
  FUN_103e8bc0((int *)"CSmallTextEntry");
  FUN_103e8bc0((int *)"CTreeViewListControl");
  FUN_103e8bc0((int *)"CheckButton");
  FUN_103e8bc0((int *)"CircularProgressBar");
  FUN_103e8bc0((int *)"ClickPanel");
  FUN_103e8bc0((int *)"ComboBox");
  FUN_103e8bc0((int *)"ContinuousProgressBar");
  FUN_103e8bc0((int *)"CountdownLabel");
  FUN_103e8bc0((int *)"CvarToggleCheckButton");
  FUN_103e8bc0((int *)"Divider");
  FUN_103e8bc0((int *)"EditablePanel");
  FUN_103e8bc0((int *)"ExpandButton");
  FUN_103e8bc0((int *)"Frame");
  FUN_103e8bc0((int *)"FrameSystemButton");
  FUN_103e8bc0((int *)"GraphPanel");
  FUN_103e8bc0((int *)"ImagePanel");
  FUN_103e8bc0((int *)"ImageProgressBar");
  FUN_103e8bc0((int *)"Label");
  FUN_103e8bc0((int *)"ListPanel");
  FUN_103e8bc0((int *)"ListViewItem");
  FUN_103e8bc0((int *)"ListViewPanel");
  FUN_103e8bc0((int *)"MenuBar");
  FUN_103e8bc0((int *)"MenuButton");
  FUN_103e8bc0((int *)"MenuItem");
  FUN_103e8bc0((int *)"MenuSeparator");
  FUN_103e8bc0((int *)"MessageBox");
  FUN_103e8bc0((int *)"MessagingPanel");
  FUN_103e8bc0((int *)"Panel");
  FUN_103e8bc0((int *)"PanelListPanel");
  FUN_103e8bc0((int *)"PercentageCroppedImageLabel");
  FUN_103e8bc0((int *)"ProgressBar");
  FUN_103e8bc0((int *)"RadioButton");
  FUN_103e8bc0((int *)"RichText");
  FUN_103e8bc0((int *)"RichTextInterior");
  FUN_103e8bc0((int *)"ScalableImagePanel");
  FUN_103e8bc0((int *)"ScrollBar");
  FUN_103e8bc0((int *)"ScrollBarSlider");
  FUN_103e8bc0((int *)"TextEntry");
  FUN_103e8bc0((int *)"ToggleButton");
  FUN_103e8bc0((int *)"TreeNode");
  FUN_103e8bc0((int *)"TreeNodeDropPanel");
  FUN_103e8bc0((int *)"TreeNodeText");
  FUN_103e8bc0((int *)"TreeView");
  FUN_103e8bc0((int *)"URLLabel");
  FUN_103e8c00(&DAT_106d2820,(int *)"AnimationController");
  FUN_103f0bb0(this,"g");
  FUN_103f2db0(this,param_3,"MessageBox",0,'\x01',0);
  FUN_103f70c0(this,"#Frame_Untitled",param_1 == 0);
  FUN_103f70c0(this,"VGUI Build Mode Editor",'\x01');
  FUN_103f9857("string too long");
  FUN_103f9885("invalid string position");
  FUN_1040108f(&DAT_106d0bb0,0x400,(byte *)"%s, string progress, string variable");
  FUN_1040108f(&DAT_106d2248,0x400,(byte *)"%s, string URLText");
  FUN_1042cc70(local_238,".vcd",0x200);
  FUN_1042ce40((undefined (*) [16])local_1004,(undefined (*) [16])"&quot;","\"",local_2004,0x1000,
  FUN_1042ce40((undefined (*) [16])local_1004,(undefined (*) [16])&DAT_105cfb48,">",local_2004,
  FUN_1042ce40((undefined (*) [16])local_1004,(undefined (*) [16])&DAT_105cfb50,"&rt;",local_2004,
  FUN_1042ce40((undefined (*) [16])local_1004,(undefined (*) [16])&DAT_105cfb68,"&quot;",local_2004,
  FUN_1042ce40((undefined (*) [16])local_2004,(undefined (*) [16])"&amp;","&",local_1004,0x1000,'\0'
  FUN_1042ce40((undefined (*) [16])local_2004,(undefined (*) [16])"&apos;","\'",local_1004,0x1000,
  FUN_1042ce40((undefined (*) [16])local_2004,(undefined (*) [16])&DAT_105cfb5c,"&amp;",local_1004,
  FUN_1042ce40((undefined (*) [16])local_2004,(undefined (*) [16])&DAT_105cfb74,"&apos;",local_1004,
  FUN_1042ce40(param_1,(undefined (*) [16])&DAT_105cf0ac,"&lt;",local_1004,0x1000,'\0');
  FUN_1042ce40(param_1,(undefined (*) [16])&DAT_105cfb40,"<",local_1004,0x1000,'\0');
  FUN_1042d940(&DAT_10797828,0x400,(byte *)"%s, string command, int default");
  FUN_1042d940(&DAT_1079a8c8,0x104,(byte *)"%.2d:%.2d:%.2d %s %02i/%02i/%04i");
  FUN_1042d940(&DAT_107aa560,0x400,(byte *)"%s, int ScrollSpeed, int Direction");
  FUN_1042d940(&DAT_107c0838,0x100,(byte *)"%s : %s : %s -- %s \"%s\"");
  FUN_1042d940(&DAT_10843208,0x400,(byte *)"%s, string text, bool scrollbar");
  FUN_1042d940(&DAT_10843680,0x400,(byte *)"%s, string command, int default");
  FUN_1042d940(&DAT_10843f10,0x400,(byte *)"%s, string image");
  FUN_1042d940(&DAT_10844f18,0x400,(byte *)"%s, int SubTabPosition");
  FUN_1042d940(&DAT_10845e18,0x200,(byte *)"%s, string title");
  FUN_1042d940(&DAT_10847508,0x400,(byte *)"%s, string leftText, string rightText");
  FUN_1042d940((char *)((int)this + 0x273),0x10,(byte *)"notset");
  FUN_1042d940((char *)((int)this + 0x27e),0x40,(byte *)"resource/UI/basemodui/%s.res");
  FUN_1042d940((char *)((int)this + 0x284),0x40,(byte *)"expired");
  FUN_1042d940((char *)((int)this + 599),0x40,(byte *)"%d %d %d %d");
  FUN_1042d940((char *)(param_1 + 0x11),0x40,(byte *)"NAMENOTSET");
  FUN_1042d940((char *)(param_1 + 0x3734),0x40,(byte *)"%s_strong");
  FUN_1042d940((char *)(param_1 + 0xda3),0x40,(byte *)"%s_weak");
  FUN_1042d940((char *)(param_1 + 0xdcd),0x40,(byte *)"%s_strong");
  FUN_1042d940((char *)(param_1 + 1),0x40,(byte *)"TARGETNOTSET");
  FUN_1042d940((char *)(uint *)(param_1 + 0x368c),0x40,(byte *)"%s_weak");
  FUN_1042d940((char *)local_10c,0x104,(byte *)"resource/overviews/%s.txt");
  FUN_1042d940((char *)local_118,0x104,(byte *)"resource/overviews/%s.txt");
  FUN_1042d940((char *)local_148,0x104,(byte *)"scripts/plans/%s.res");
  FUN_1042d940((char *)local_184,0x100,(byte *)"#GameUI_Icons_%s");
  FUN_1042d940((char *)local_20c,0x200,(byte *)"%s.txt");
  FUN_1042d940((char *)local_44,0x40,(byte *)"SkillLevel%d");
  FUN_1042d940((char *)local_d8,0x7f,(byte *)"maps/%s.res");
  FUN_1042d940(local_104,0x100,(byte *)"%f %f %f");
  FUN_1042d940(local_130,0x104,(byte *)"%s [seq: %s]");
  FUN_1042d940(local_13c,0x80,(byte *)"weapon_%s");
  FUN_1042d940(local_148,0x100,(byte *)"%s (RAGDOLL)");
  FUN_1042d940(local_148,0x104,(byte *)"//MOD/%d_%s_%s.tga");
  FUN_1042d940(local_148,0x104,(byte *)"maps/%s_%s.txt");
  FUN_1042d940(local_158,0x7f,(byte *)"maps/%s.bsp");
  FUN_1042d940(local_15c,0x100,(byte *)"cmd:%5.1f/s");
  FUN_1042d940(local_15c,0x100,(byte *)"fps: %5i  var: %4.1f ms  ping: %i ms");
  FUN_1042d940(local_15c,0x100,(byte *)"loss: %3i%%  choke: %2i%%");
  FUN_1042d940(local_15c,0x100,(byte *)"sv:%5.1f %s%4.1f ms   var: %6.3f ms");
  FUN_1042d940(local_15c,0x100,(byte *)"tick:%5.1f  ");
  FUN_1042d940(local_15c,0x100,(byte *)"up:%5.1f/s");
  FUN_1042d940(local_164,0x100,(byte *)"%s_%d_%s");
  FUN_1042d940(local_1c4,0x100,(byte *)"%s_R%iS%i%s_%s");
  FUN_1042d940(local_20c,0x104,(byte *)"%s/*.*");
  FUN_1042d940(local_20c,0x200,(byte *)"%s: \'%s\'");
  FUN_1042d940(local_2c,0x20,(byte *)"overview_mode %d\n");
  FUN_1042d940(local_2d4,0x104,(byte *)"//MOD/%s");
  FUN_1042d940(local_2fc,0x104,(byte *)"debug/debugfbtexture%d");
  FUN_1042d940(local_434,0x104,(byte *)"materials/vgui/%s/*.vmt");
  FUN_1042d940(local_44,0x10,(byte *)"%d/%d");
  FUN_1042d940(local_44,0x3f,(byte *)"lo_squad %d");
  FUN_1042d940(local_44,0x40,(byte *)" %.1f");
  FUN_1042d940(local_84,0x80,(byte *)"gamestats_");
  FUN_1042d940(local_84,0x80,(byte *)"scripts/%s");
  FUN_1042d940(param_2,param_3,(byte *)"%i x %i");
  FUN_1042db60(&DAT_10769a80,"_gamestats.dat",0x100,0xffffffff);
  FUN_1042db60(local_108,".ogv",0x104,0xffffffff);
  FUN_1042db60(local_10c,".ekv",0x104,0xffffffff);
  FUN_1042db60(local_10c,"_pc",0x104,0xffffffff);
  FUN_1042db60(local_1a8,"\n",0x1a0,0xffffffff);
  FUN_1042db60(param_1,".mdl",param_2,0xffffffff);
  FUN_1042dc40(&DAT_10769b80,(int)"GameStatsUpload_",0x100);
  FUN_1042dc40((char *)(param_1 + 0x400),(int)"default",0x200);
  FUN_1042dc40((char *)local_24,(int)"_antialias",0x20);
  FUN_1042dc40((char *)pauVar14,(int)"GameUI.UiCoopHudClick",0x20);
  FUN_1042dc40(local_108,(int)"media/",0x104);
  FUN_1042dc40(local_110,(int)"file://",0x10b);
  FUN_1042dc40(param_1,(int)"icon_blank",param_2);
  FUN_1042de40(local_210,(int)L"ERRORNAME",0x200);
  FUN_1042de40(local_410,(int)L"ERRORNAME",0x200);
  FUN_1042df60((int)(param_1 + 3),"Error loading info message.");
  FUN_1042df60((int)local_48c,"\n");
  FUN_1042df60((int)param_1 + 0x10b,"");
  FUN_1042df60((int)param_1 + 0x90b,"");
  FUN_1042df60((int)this + 0x1f0,"default");
  FUN_1042e330(local_14,"models/");
  FUN_1042e330(local_30,"Undetermined");
  FUN_1042e3d0(&local_24,"");
  FUN_1042e3d0(&local_2c,"");
  FUN_1042e3d0((void *)((int)this + 0x1c0),"");
  FUN_1042e3d0((void *)((int)this + 0x308),"");
  FUN_1042e3d0((void *)((int)this + 0x54),"");
  FUN_1042e3d0((void *)((int)this + 0x86c),"");
  FUN_1042e3d0((void *)((int)this + 0xc),"");
  FUN_1042e3d0((void *)((int)this + 500),"");
  FUN_1042e3d0(param_1 + 0x110a,"");
  FUN_1042e3d0(param_2,"");
  FUN_1042e3d0(puVar1 + 0xc,"");
  FUN_1042e530((void *)((int)this + 4),(byte *)"models/weapons/w_models/%s/%s");
  FUN_1042e6e0((void *)((int)this + 0x13c),"");
  FUN_1042e6e0((void *)((int)this + 0x18),"");
  FUN_1042e6e0((void *)((int)this + 0x28),"");
  FUN_1042e6e0((void *)((int)this + 0x38),"");
  FUN_1042e6e0((void *)((int)this + 0x94),"");
  FUN_1042e6e0((void *)((int)this + 0xa4),"");
  FUN_1042e6e0((void *)((int)this + 8),"");
  FUN_1042ee30(*(void **)(param_1 + 0x200),(uint *)"hidden_maps",0);
  FUN_1042f060(param_3,&local_10,(uint *)"color",&local_8);
  FUN_1042f060(param_3,&local_10,(uint *)"frontcolor",&local_8);
  FUN_1042f060(param_3,&local_c,(uint *)"backcolor",&local_8);
  FUN_1042f060(param_3,&local_c,(uint *)"color",&local_8);
  FUN_1042f140(param_1,(uint *)"example_param");
  FUN_1042f270(param_1,(uint *)"bot_difficulty",0);
  FUN_1042f270(param_1,(uint *)"level",0);
  FUN_1042f270(param_1,(uint *)"squad",0);
  FUN_1042f270(param_2,(uint *)"NumSegments",0);
  FUN_1042f270(this_00,(uint *)"deaths",0);
  FUN_1042f270(this_00,(uint *)"kills",0);
  FUN_1042f270(this_00,(uint *)"score",0);
  FUN_1042f3d0(*(void **)(*(int *)((int)this + 8) + 8 + param_1 * 0xc),(uint *)"MenuName",
  FUN_1042f3d0(*(void **)(param_1 + 0x200),(uint *)"fallback_dir",(uint)&DAT_104eefb3);
  FUN_104300e0(piVar1,(uint *)"gameinfo.txt",0,(int *)0x0);
  FUN_104300e0(piVar4,(uint *)"resource/UI/RadialMenu.res",0,(int *)0x0);
  FUN_10431930(param_1,(uint *)"progress",*(uint *)((int)this + 0x1b0));
  FUN_10431930(param_1,(uint *)"scaleAmount",*(uint *)((int)this + 0x1f0));
  FUN_10431930(this,(uint *)"CPUGhz",(uint)(float)(dVar8 * 1e-09));
  FUN_10431930(this_00,(uint *)"EndWidth",*(uint *)((int)this + 0x14b8));
  FUN_10431930(this_00,(uint *)"FadeLength",*(uint *)((int)this + 0x14bc));
  FUN_10431930(this_00,(uint *)"HaloScale",*(uint *)((int)this + 0x14c0));
  FUN_10431930(this_00,(uint *)"Noise",*(uint *)((int)this + 0x14c4));
  FUN_10431930(this_00,(uint *)"ScrollRate",*(uint *)((int)this + 0x14cc));
  FUN_10431930(this_00,(uint *)"Width",*(uint *)((int)this + 0x14b4));
  FUN_10431930(this_00,(uint *)"color_hdrscale",*(uint *)((int)this + 0x1444));
  FUN_10431930(this_00,(uint *)"end_x",*puVar2);
  FUN_10431930(this_00,(uint *)"end_y",uVar4);
  FUN_10431930(this_00,(uint *)"end_z",uVar1);
  FUN_10431930(this_00,(uint *)"framerate",*(uint *)((int)this + 0x1440));
  FUN_10431930(this_00,(uint *)"start_x",*puVar2);
  FUN_10431930(this_00,(uint *)"start_y",uVar4);
  FUN_10431930(this_00,(uint *)"start_z",uVar1);
  FUN_10431930(this_00,(uint *)"startframe",*(uint *)((int)this + 0x14c8));
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_allow_grenades",uVar2 & 0xff);
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_allow_machine_guns",uVar2 & 0xff);
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_allow_pistols",uVar2 & 0xff);
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_allow_rifles",uVar2 & 0xff);
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_allow_rogues",uVar2 & 0xff);
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_allow_shotguns",uVar2 & 0xff);
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_allow_snipers",uVar2 & 0xff);
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_allow_sub_machine_guns",uVar2 & 0xff);
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_defer_to_human",uVar2 & 0xff);
  FUN_10431960(*(void **)(param_1 + 0x21c),(uint *)"bot_join_after_player",uVar2 & 0xff);
  FUN_10431960(local_8,(uint *)"VPanel",uVar2);
  FUN_10431960(param_1,(uint *)"AllowEnter",(uint)(*(char *)((int)this + 0x2b8) != '\0'));
  FUN_10431960(param_1,(uint *)"AutoResize",(uint)(*(byte *)((int)this + 0xae) >> 4));
  FUN_10431960(param_1,(uint *)"DisableSelectionColor",(uint)(*(char *)((int)this + 0x29c) == '\0'))
  FUN_10431960(param_1,(uint *)"NumericInputOnly",(uint)(*(char *)((int)this + 0x2aa) != '\0'));
  FUN_10431960(param_1,(uint *)"PinCorner",*(byte *)((int)this + 0xae) & 0xf);
  FUN_10431960(param_1,(uint *)"RoundedCorners",(uint)*(byte *)((int)this + 0x150));
  FUN_10431960(param_1,(uint *)"SubTabPosition",*(uint *)((int)this + 700));
  FUN_10431960(param_1,(uint *)"TabPosition",uVar1);
  FUN_10431960(param_1,(uint *)"allowMouseWheel",(uint)(*(char *)((int)this + 0x234) != '\0'));
  FUN_10431960(param_1,(uint *)"allowMouseWheel",(uint)(*(char *)((int)this + 0x23e) != '\0'));
  FUN_10431960(param_1,(uint *)"auto_shrink_contents",(uint)(*(char *)((int)this + 0x246) != '\0'));
  FUN_10431960(param_1,(uint *)"auto_tall_tocontents",(uint)(*(char *)((int)this + 0x243) != '\0'));
  FUN_10431960(param_1,(uint *)"auto_wide_minimum",*(uint *)((int)this + 0x24c));
  FUN_10431960(param_1,(uint *)"auto_wide_tocontents",(uint)(*(char *)((int)this + 0x241) != '\0'));
  FUN_10431960(param_1,(uint *)"autocolor_enable",(uint)(*(char *)((int)this + 0x249) != '\0'));
  FUN_10431960(param_1,(uint *)"brighttext",(uint)(*(int *)((int)this + 0x22c) == 2));
  FUN_10431960(param_1,(uint *)"catchEnter",(uint)*(byte *)((int)this + 0x28d));
  FUN_10431960(param_1,(uint *)"centerwrap",(uint)(*(char *)((int)this + 0x23f) != '\0'));
  FUN_10431960(param_1,(uint *)"default",*(ushort *)((int)this + 0x25a) >> 6 & 1);
  FUN_10431960(param_1,(uint *)"default",*(ushort *)((int)this + 0x25c) >> 6 & 1);
  FUN_10431960(param_1,(uint *)"directory",(uint)(*(char *)((int)this + 0x118) != '\0'));
  FUN_10431960(param_1,(uint *)"draw_corner_height",*(uint *)((int)this + 0x1b0));
  FUN_10431960(param_1,(uint *)"draw_corner_width",*(uint *)((int)this + 0x1b4));
  FUN_10431960(param_1,(uint *)"dulltext",(uint)(*(int *)((int)this + 0x22c) == 1));
  FUN_10431960(param_1,(uint *)"editable",(uint)(cVar1 != '\0'));
  FUN_10431960(param_1,(uint *)"enabled",(uint)(cVar2 != '\0'));
  FUN_10431960(param_1,(uint *)"filtered",(uint)*(byte *)((int)this + 0x1a9));
  FUN_10431960(param_1,(uint *)"horizontal",(uint)(*(char *)((int)this + 0x24c) != '\0'));
  FUN_10431960(param_1,(uint *)"image",(*(char *)((int)this + 0x118) != '\0') + 1);
  FUN_10431960(param_1,(uint *)"imageSelected",(uint)(*(char *)((int)this + 0x118) != '\0') * 2 + 1)
  FUN_10431960(param_1,(uint *)"lastBarWidth",*(uint *)((int)this + 500));
  FUN_10431960(param_1,(uint *)"maxchars",*(uint *)((int)this + 0x214));
  FUN_10431960(param_1,(uint *)"maxchars",uVar2);
  FUN_10431960(param_1,(uint *)"multiline",(uint)*(byte *)((int)this + 0x261));
  FUN_10431960(param_1,(uint *)"noellipses",(uint)(*(char *)((int)this + 0x250) != '\0'));
  FUN_10431960(param_1,(uint *)"noshortcutsyntax",(uint)(*(char *)((int)this + 0x245) != '\0'));
  FUN_10431960(param_1,(uint *)"overrideChildPanelWidth",
  FUN_10431960(param_1,(uint *)"pin_corner_to_sibling",(uint)*(byte *)((int)this + 0xbd));
  FUN_10431960(param_1,(uint *)"pin_to_sibling_corner",(uint)*(byte *)((int)this + 0xbc));
  FUN_10431960(param_1,(uint *)"preserveAspectRatio",(uint)*(byte *)((int)this + 0x1a8));
  FUN_10431960(param_1,(uint *)"scaleImage",(uint)(*(char *)((int)this + 0x1ec) != '\0'));
  FUN_10431960(param_1,(uint *)"scrollbar",(uint)(cVar1 != '\0'));
  FUN_10431960(param_1,(uint *)"settitlebarvisible",*(byte *)((int)this + 0x25c) >> 5 & 1);
  FUN_10431960(param_1,(uint *)"showScrollBar",(uint)(*(char *)((int)this + 0x234) != '\0'));
  FUN_10431960(param_1,(uint *)"showScrollBar",(uint)(*(char *)((int)this + 0x23d) != '\0'));
  FUN_10431960(param_1,(uint *)"src_corner_height",*(uint *)((int)this + 0x1a8));
  FUN_10431960(param_1,(uint *)"src_corner_width",*(uint *)((int)this + 0x1ac));
  FUN_10431960(param_1,(uint *)"tabPosition",uVar6);
  FUN_10431960(param_1,(uint *)"textHidden",(uint)(*(char *)((int)this + 0x231) != '\0'));
  FUN_10431960(param_1,(uint *)"textinsetx",uVar4);
  FUN_10431960(param_1,(uint *)"textinsety",*(uint *)((int)this + 0x218));
  FUN_10431960(param_1,(uint *)"tileHorizontalOverride",*(uint *)((int)this + 0x208));
  FUN_10431960(param_1,(uint *)"tileHorizontally",(uint)(*(char *)((int)this + 0x1ee) != '\0'));
  FUN_10431960(param_1,(uint *)"tileImage",(uint)(*(char *)((int)this + 0x1ed) != '\0'));
  FUN_10431960(param_1,(uint *)"tileVerticalOverride",*(uint *)((int)this + 0x20c));
  FUN_10431960(param_1,(uint *)"tileVertically",(uint)(*(char *)((int)this + 0x1ef) != '\0'));
  FUN_10431960(param_1,(uint *)"unicode",(uint)(*(char *)((int)this + 0x2ab) != '\0'));
  FUN_10431960(param_1,(uint *)"use_proportional_insets",
  FUN_10431960(param_1,(uint *)"visible",(uint)(cVar2 != '\0'));
  FUN_10431960(param_1,(uint *)"visible",0xffffffff);
  FUN_10431960(param_2,(uint *)"deaths",uVar2);
  FUN_10431960(param_2,(uint *)"frags",uVar2);
  FUN_10431960(this,(uint *)"DxLvl",uVar7);
  FUN_10431960(this,(uint *)"GPUDeviceID",local_2c);
  FUN_10431960(this,(uint *)"GPUVendor",local_30);
  FUN_10431960(this,(uint *)"Height",local_8);
  FUN_10431960(this,(uint *)"IsSplitScreen",(uint)bVar1);
  FUN_10431960(this,(uint *)"NumCores",(uint)*(byte *)(iVar3 + 5));
  FUN_10431960(this,(uint *)"Width",local_c);
  FUN_10431960(this,(uint *)"version",1);
  FUN_10431960(this_00,(uint *)"Brightness",uVar4 & 0xff);
  FUN_10431960(this_00,(uint *)"HaloIndex",*(uint *)((int)this + 0x1458));
  FUN_10431960(this_00,(uint *)"ModelIndex",uVar4);
  FUN_10431960(this_00,(uint *)"Selected",(uint)(param_2 != '\0'));
  FUN_10431960(this_00,(uint *)"Selected",0);
  FUN_10431960(this_00,(uint *)"VPanel",uVar2);
  FUN_10431960(this_00,(uint *)"beamEnts",*(uint *)((int)this + 0x1450));
  FUN_10431960(this_00,(uint *)"beamFlags",*(uint *)((int)this + 0x1460));
  FUN_10431960(this_00,(uint *)"beamType",0);
  FUN_10431960(this_00,(uint *)"color_b",(uint)*(byte *)((int)this + 0x6e));
  FUN_10431960(this_00,(uint *)"color_g",(uint)*(byte *)((int)this + 0x6d));
  FUN_10431960(this_00,(uint *)"color_r",(uint)*(byte *)((int)this + 0x6c));
  FUN_10431960(this_00,(uint *)"connectionport",*(uint *)(param_1 + 0x10));
  FUN_10431960(this_00,(uint *)"dontnotify",0);
  FUN_10431960(this_00,(uint *)"entIndex",*(uint *)((int)this + 0x60));
  FUN_10431960(this_00,(uint *)"entIndex",uVar4);
  FUN_10431960(this_00,(uint *)"error",(uint)((char)param_1 != '\0'));
  FUN_10431960(this_00,(uint *)"flags",*(uint *)((int)this + 0x1468));
  FUN_10431960(this_00,(uint *)"overlayID",*(uint *)((int)this + 0x1440));
  FUN_10431960(this_00,(uint *)"queryport",*(uint *)(param_1 + 0x14));
  FUN_10431960(this_00,(uint *)"squad",param_1[0xb3]);
  FUN_10431960(this_00,(uint *)"state",uVar2 & 0xff);
  FUN_10431960(this_00,(uint *)"state",uVar3 & 0xff);
  FUN_10431960(this_00,(uint *)"textureFrame",uVar2);
  FUN_10431960(this_01,(uint *)"$ignorez",1);
  FUN_10431960(this_01,(uint *)"$nocull",1);
  FUN_10431960(this_01,(uint *)"$nofog",1);
  FUN_104319d0(param_1,(uint *)"TIPropertyPage",*(uint *)((int)this + 0x680));
  FUN_104319d0(param_1,(uint *)"TIPropertySheet",*(uint *)((int)this + 0x67c));
  FUN_104319d0(param_1,(uint *)"iconImage",0);
  FUN_104319d0(param_1,(uint *)"monitor",(uint)&DAT_1072b670);
  FUN_104319d0(param_1,(uint *)"propertypage",*(uint *)((int)this + 0x2c0));
  FUN_104319d0(param_1,(uint *)"propertysheet",*(uint *)((int)this + 700));
  FUN_104319d0(this_00,(uint *)"BuildGroupPtr",param_1);
  FUN_104319d0(this_00,(uint *)"PanelPtr",uVar2);
  FUN_104319d0(this_00,(uint *)"panel",(uint)param_1);
  FUN_104319d0(this_01,(uint *)"PanelPtr",uVar3);
  FUN_104319d0(this_01,(uint *)"panel",(uint)this);
  FUN_104319f0(*(void **)(param_1 + 0x21c),(uint *)"bot_chatter",pcVar1);
  FUN_104319f0(*(void **)(param_1 + 0x21c),(uint *)"bot_join_team",pcVar1);
  FUN_104319f0(*(void **)(param_1 + 0x21c),(uint *)"bot_prefix",local_10c);
  FUN_104319f0(param_1,(uint *)"ControlName",pcVar3);
  FUN_104319f0(param_1,(uint *)"attributes",pcVar2);
  FUN_104319f0(param_1,(uint *)"created",pcVar2);
  FUN_104319f0(param_1,(uint *)"fieldName",pcVar3);
  FUN_104319f0(param_1,(uint *)"imageAlignment",pcVar1);
  FUN_104319f0(param_1,(uint *)"labelText",pcVar2);
  FUN_104319f0(param_1,(uint *)"modified",pcVar2);
  FUN_104319f0(param_1,(uint *)"pin_to_sibling",*(char **)((int)this + 0xb8));
  FUN_104319f0(param_1,(uint *)"tabname",local_104);
  FUN_104319f0(param_1,(uint *)"textAlignment",pcVar2);
  FUN_104319f0(param_2,*param_3,"");
  FUN_104319f0(puVar2,(uint *)"$CHANNEL_SELECT","[1.0 0.0 0.0 0.0]");
  FUN_104319f0(puVar2,(uint *)"$DUST_TEXTURE","Effects/Splotches256");
  FUN_104319f0(puVar2,(uint *)"$GRAIN_TEXTURE","Effects/FilmScan256");
  FUN_104319f0(puVar2,(uint *)"$NOISESCALE","[0.0 1.0 0.5 1.0]");
  FUN_104319f0(puVar2,(uint *)"$SCALEBIAS","[0.0 0.0 0.0 0.0]");
  FUN_104319f0(this,(uint *)"CPUID",*(char **)(iVar3 + 0x10));
  FUN_104319f0(this,(uint *)"GPUDriverVersion",(char *)((int)puVar6 + 5));
  FUN_104319f0(this,(uint *)"GPUDrv",local_230);
  FUN_104319f0(this,(uint *)"srcid",&DAT_10769a68);
  FUN_104319f0(this_00,(uint *)"Action","");
  FUN_104319f0(this_00,(uint *)"Action",(&PTR_s__P2Controller_NoAction_105593dc)[uVar8 * 2]);
  FUN_104319f0(this_00,(uint *)"Binding",pcVar12);
  FUN_104319f0(this_00,(uint *)"reason",param_2);
  FUN_104319f0(this_00,(uint *)"reason_ex",param_3);
  FUN_104319f0(this_01,(uint *)"$basetexture","_rt_FullScreen");
  FUN_104319f0(this_01,(uint *)"$vertexcolor","1");
  FUN_104319f0(this_01,(uint *)"filterinfo",param_4);
  FUN_10431ac0(param_1,(uint *)"createdint",*(undefined4 *)((int)this + 0x20),
  FUN_10431ac0(param_1,(uint *)"modifiedint",*(undefined4 *)((int)this + 0x48),
  FUN_10431ac0(this,(uint *)"CPUFeatures0",*(undefined4 *)(iVar3 + 0x1c),0);
  FUN_10431ac0(this,(uint *)"CPUFeatures1",*(undefined4 *)(iVar3 + 0x20),0);
  FUN_10431ac0(this,(uint *)"CPUFeatures2",*(undefined4 *)(iVar3 + 0x24),0);
  FUN_10431ac0(this,(uint *)"CPUModel",*(undefined4 *)(iVar3 + 0x18),0);
  FUN_10431b10(this_00,(uint *)"DrawAsButton",psVar5);
  FUN_10431e50(&DAT_10719cb8,(int)"cl_updatevisibility",(int)FUN_1003ffb0,"Updates visibility bits."
  FUN_10431e50(&DAT_10719e50,(int)"dlight_debug",(int)FUN_1003ffb0,
  FUN_10431e50(&DAT_10719e98,(int)"cl_ent_bbox",(int)FUN_1003ffb0,
  FUN_10431e50(&DAT_10719ebc,(int)"cl_ent_absbox",(int)FUN_1003ffb0,
  FUN_10431e50(&DAT_10719ee0,(int)"cl_ent_rbox",(int)FUN_1007a1a0,
  FUN_10431e50(&DAT_10719f38,(int)"cl_find_ent",(int)FUN_1006e9d0,
  FUN_10431e50(&DAT_10719f5c,(int)"cl_find_ent_index",(int)FUN_1006eac0,
  FUN_10431e50(&DAT_1071c340,(int)"soundscape_dumpclient",(int)FUN_1008cfa0,
  FUN_10431e50(&DAT_1071e374,(int)"cl_csm_status",(int)FUN_1009b320,"Usage:\n   cl_csm_status\n",0,
  FUN_10431e50(&DAT_107262ec,(int)"+csm_rot_x_plus",(int)FUN_1009fa80,(undefined *)0x0,0,
  FUN_10431e50(&DAT_10726310,(int)"-csm_rot_x_plus",(int)FUN_1009fa90,(undefined *)0x0,0,
  FUN_10431e50(&DAT_10726334,(int)"+csm_rot_x_neg",(int)FUN_1009fa60,(undefined *)0x0,0,
  FUN_10431e50(&DAT_10726358,(int)"-csm_rot_x_neg",(int)FUN_1009fa70,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1072637c,(int)"+csm_rot_y_plus",(int)FUN_1009fac0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_107263a0,(int)"-csm_rot_y_plus",(int)FUN_1009fad0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_107263c4,(int)"+csm_rot_y_neg",(int)FUN_1009faa0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_107263e8,(int)"-csm_rot_y_neg",(int)FUN_1009fab0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_107297ec,(int)"gameinstructor_reload_lessons",(int)FUN_100ae3c0,
  FUN_10431e50(&DAT_10729a78,(int)"gameinstructor_reset_counts",(int)FUN_100ae3e0,
  FUN_10431e50(&DAT_10729a9c,(int)"gameinstructor_dump_open_lessons",(int)FUN_100ae320,
  FUN_10431e50(&DAT_1072f160,(int)"cl_soundscape_flush",(int)FUN_100c3f20,
  FUN_10431e50(&DAT_1072f184,(int)"playsoundscape",(int)FUN_1003ffb0,"Forces a soundscape to play",
  FUN_10431e50(&DAT_1072f1a8,(int)"stopsoundscape",(int)FUN_1003ffb0,
  FUN_10431e50(&DAT_1072f1cc,(int)"cl_soundscape_printdebuginfo",(int)FUN_100c3f80,
  FUN_10431e50(&DAT_1072f1f0,(int)"cl_ss_origin",(int)FUN_100c4030,"print origin in script format",0
  FUN_10431e50(&DAT_1072fd78,(int)"Test_ProxyToggle_EnsureValue",(int)FUN_100c7bb0,
  FUN_10431e50(&DAT_10730e98,(int)"cl_dumpsplithacks",(int)FUN_1003ffb0,
  FUN_10431e50(&DAT_10731000,(int)"cl_modemanager_reload",(int)thunk_FUN_102f07a0,
  FUN_10431e50(&DAT_10734790,(int)"count_world_lights",(int)FUN_100cfb20,"list count of worldlights"
  FUN_10431e50(&DAT_10735c68,(int)"vr_cycle_aim_move_mode",(int)FUN_100d2e00,
  FUN_10431e50(&DAT_10735c8c,(int)"vr_activate",(int)FUN_100d5fc0,"Switch to VR mode",0,
  FUN_10431e50(&DAT_10735cb0,(int)"vr_deactivate",(int)FUN_100d5fd0,
  FUN_10431e50(&DAT_10735cd4,(int)"vr_toggle",(int)FUN_100d5fe0,"Toggles VR mode",0,(undefined *)0x0
  FUN_10431e50(&DAT_107664e0,(int)"hud_reloadscheme",(int)FUN_100dfa70,
  FUN_10431e50(&DAT_10766e60,(int)"r_shadowdir",(int)FUN_100eda30,"Set shadow direction",0x4000,
  FUN_10431e50(&DAT_10766e84,(int)"r_shadowangles",(int)FUN_100ed7e0,"Set shadow angles",0x4000,
  FUN_10431e50(&DAT_10766ea8,(int)"r_shadowcolor",(int)FUN_100ed990,"Set shadow color",0x4000,
  FUN_10431e50(&DAT_10766ecc,(int)"r_shadowdist",(int)FUN_100edb80,"Set shadow distance",0x4000,
  FUN_10431e50(&DAT_10766ef0,(int)"r_shadowblobbycutoff",(int)FUN_100ed940,"some shadow stuff",
  FUN_10431e50(&DAT_1076867c,(int)"cl_tree_sway_dir",(int)FUN_10101c90,
  FUN_10431e50(&DAT_1076e3b0,(int)"testhudanim",(int)FUN_1011a460,
  FUN_10431e50(&DAT_1076e62c,(int)"g15_reload",(int)FUN_10121bf0,
  FUN_10431e50(&DAT_1076e654,(int)"g15_dumpplayer",(int)FUN_10121bc0,"Spew player data.",0,
  FUN_10431e50(&DAT_1076e76c,(int)"cl_dumpplayer",(int)FUN_10121ab0,"Dumps info about a player",
  FUN_10431e50(&DAT_1076f780,(int)"cam_command",(int)FUN_1012aba0,"Tells camera to change modes",
  FUN_10431e50(&DAT_1076f7a4,(int)"+campitchup",(int)FUN_10129280,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1076f7c8,(int)"-campitchup",(int)FUN_101292c0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1076f7ec,(int)"+campitchdown",(int)FUN_10129200,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1076f810,(int)"-campitchdown",(int)FUN_10129240,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1076f834,(int)"+camyawleft",(int)FUN_1012a920,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1076f858,(int)"-camyawleft",(int)FUN_1012a960,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1076f87c,(int)"+camyawright",(int)FUN_1012a9a0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1076f8a0,(int)"-camyawright",(int)FUN_1012a9e0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1076f8c4,(int)"+camin",(int)FUN_10128fc0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_1076f8e8,(int)"-camin",(int)FUN_10129000,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_1076f90c,(int)"+camout",(int)FUN_10129180,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_1076f930,(int)"-camout",(int)FUN_101291c0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_107716c8,(int)"ss_teleport",(int)FUN_10132100,
  FUN_10431e50(&DAT_107716ec,(int)"+commandermousemove",(int)FUN_101306c0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_10771768,(int)"-commandermousemove",(int)FUN_10130700,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1077178c,(int)"+moveup",(int)FUN_10131780,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_107717b0,(int)"-moveup",(int)FUN_101317c0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_107717d4,(int)"+movedown",(int)FUN_10130740,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_107717f8,(int)"-movedown",(int)FUN_10130780,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_1077181c,(int)"+left",(int)FUN_10131070,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771840,(int)"-left",(int)FUN_101310b0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771864,(int)"+right",(int)FUN_101313f0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771888,(int)"-right",(int)FUN_10131430,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_107718ac,(int)"+forward",(int)FUN_10130a50,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_107718d0,(int)"-forward",(int)FUN_10130a90,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_107718f4,(int)"+back",(int)FUN_101304b0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771918,(int)"-back",(int)FUN_101304f0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_1077193c,(int)"+lookup",(int)FUN_101311f0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771960,(int)"-lookup",(int)FUN_10131230,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771984,(int)"+lookdown",(int)FUN_10131170,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_107719a8,(int)"-lookdown",(int)FUN_101311b0,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_107719cc,(int)"+strafe",(int)FUN_10131700,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_107719f0,(int)"-strafe",(int)FUN_10131740,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771a14,(int)"+moveleft",(int)FUN_10131270,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_10771a38,(int)"-moveleft",(int)FUN_101312b0,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_10771a5c,(int)"+moveright",(int)FUN_101312f0,(undefined *)0x0,0,(undefined *)0x0
  FUN_10431e50(&DAT_10771a80,(int)"-moveright",(int)FUN_10131330,(undefined *)0x0,0,(undefined *)0x0
  FUN_10431e50(&DAT_10771aa4,(int)"+speed",(int)FUN_10131680,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771ac8,(int)"-speed",(int)FUN_101316c0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771aec,(int)"+sprint",(int)FUN_10131470,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771b10,(int)"-sprint",(int)FUN_10131570,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771b34,(int)"+roll",(int)FUN_10131880,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771b58,(int)"-roll",(int)FUN_101318c0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771b7c,(int)"+attack",(int)FUN_10130430,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771ba0,(int)"-attack",(int)FUN_10130470,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771bc4,(int)"+attack2",(int)FUN_101303b0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771be8,(int)"-attack2",(int)FUN_101303f0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771c54,(int)"+jump",(int)FUN_10130d50,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771c78,(int)"-jump",(int)FUN_10130e50,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771c9c,(int)"impulse",(int)FUN_10130c60,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771cc0,(int)"+klook",(int)FUN_10130e90,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771ce4,(int)"-klook",(int)FUN_10130ed0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771d08,(int)"+jlook",(int)FUN_10130ca0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771d2c,(int)"-jlook",(int)FUN_10130ce0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771d50,(int)"+duck",(int)FUN_101307c0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771d74,(int)"-duck",(int)FUN_10130920,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771d98,(int)"+reload",(int)FUN_10131370,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771dbc,(int)"-reload",(int)FUN_101313b0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771de0,(int)"+leanleft",(int)FUN_10130090,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_10771e04,(int)"-leanleft",(int)FUN_10130180,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_10771e28,(int)"+leanright",(int)FUN_10130220,(undefined *)0x0,0,(undefined *)0x0
  FUN_10431e50(&DAT_10771e4c,(int)"-leanright",(int)FUN_10130310,(undefined *)0x0,0,(undefined *)0x0
  FUN_10431e50(&DAT_10771e70,(int)"+score",(int)FUN_101315b0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771e94,(int)"-score",(int)FUN_10131600,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771eb8,(int)"+showscores",(int)FUN_101315b0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_10771edc,(int)"-showscores",(int)FUN_10131600,(undefined *)0x0,0,
  FUN_10431e50(&DAT_10771f00,(int)"+graph",(int)FUN_10130ad0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771f24,(int)"-graph",(int)FUN_10130b10,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771f48,(int)"+break",(int)FUN_10130530,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771f6c,(int)"-break",(int)FUN_10130570,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771fb4,(int)"joyadvancedupdate",(int)FUN_10130d30,&DAT_104eefb3,0x40000000,
  FUN_10431e50(&DAT_10771fd8,(int)"+tactic",(int)FUN_10131900,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10771ffc,(int)"-tactic",(int)FUN_10131940,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10772020,(int)"-grenade",(int)FUN_10130b90,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10772044,(int)"+grenade",(int)FUN_10130b50,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10772068,(int)"-grenadeswap",(int)FUN_10130c20,(undefined *)0x0,0,
  FUN_10431e50(&DAT_1077208c,(int)"+grenadeswap",(int)FUN_10130bd0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_107720b0,(int)"+lookspin",(int)FUN_101310f0,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_107720d4,(int)"-lookspin",(int)FUN_10131130,(undefined *)0x0,0,(undefined *)0x0)
  FUN_10431e50(&DAT_107720f8,(int)"xmove",(int)FUN_1003ffb0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_1077211c,(int)"xlook",(int)FUN_1003ffb0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431e50(&DAT_10778540,(int)"cl_particles_dump_effects",(int)FUN_1014cc40,&DAT_104eefb3,0,
  FUN_10431e50(&DAT_1077880c,(int)"cl_particles_dumplist",(int)FUN_1014f680,
  FUN_10431e50(&DAT_1077c0c8,(int)"cl_predictioncopy_describe",(int)FUN_1016a5f0,
  FUN_10431e50(&DAT_1077c1b0,(int)"cl_pred_track",(int)FUN_1016a830,
  FUN_10431e50(&DAT_1077e680,(int)"cl_soundemitter_reload",(int)FUN_10180bf0,
  FUN_10431e50(&DAT_1077e6a4,(int)"cl_soundemitter_flush",(int)FUN_10180bc0,
  FUN_10431e50(&DAT_1077e6c8,(int)"playgamesound",(int)FUN_10180180,
  FUN_10431e50(&DAT_1077e6ec,(int)"snd_playsounds",(int)FUN_101803c0,
  FUN_10431e50(&DAT_1077e710,(int)"snd_setsoundparam",(int)FUN_10180510,"Set a sound paramater",
  FUN_10431e50(&DAT_1077e734,(int)"cl_sos_test_set_opvar",(int)FUN_10180b70,&DAT_104eefb3,0x4000,
  FUN_10431e50(&DAT_1077e758,(int)"cl_sos_test_get_opvar",(int)FUN_10180b00,&DAT_104eefb3,0x4000,
  FUN_10431e50(&DAT_1077e820,(int)"cl_report_soundpatch",(int)FUN_10182d00,
  FUN_10431e50(&DAT_10780ea8,(int)"ss_reloadletterbox",(int)FUN_101965d0,"ss_reloadletterbox",0,
  FUN_10431e50(&DAT_10780ecc,(int)"cl_panelanimation",(int)FUN_10196590,
  FUN_10431e50(&DAT_107814dc,(int)"playvideo",(int)FUN_1019c9c0,
  FUN_10431e50(&DAT_10781500,(int)"playvideo_nointerrupt",(int)FUN_1019ce00,
  FUN_10431e50(&DAT_10781524,(int)"playvideo_end_level_transition",(int)FUN_1019ca40,
  FUN_10431e50(&DAT_10781548,(int)"playvideo_exitcommand",(int)FUN_1019cc00,
  FUN_10431e50(&DAT_1078156c,(int)"playvideo_exitcommand_nointerrupt",(int)FUN_1019cd00,
  FUN_10431e50(&DAT_10781590,(int)"stopvideos",(int)FUN_1019cf20,
  FUN_10431e50(&DAT_107815b4,(int)"stopvideos_fadeout",(int)FUN_1019cf60,
  FUN_10431e50(&DAT_107815d8,(int)"stop_transition_videos_fadeout",(int)FUN_1019ce80,
  FUN_10431e50(&DAT_10781c74,(int)"spec_pos",(int)FUN_1019f8a0,
  FUN_10431e50(&DAT_10781cf0,(int)"getpos",(int)FUN_1019f7b0,
  FUN_10431e50(&DAT_10781d14,(int)"getpos_exact",(int)FUN_1019f7b0,
  FUN_10431e50(&DAT_10781f68,(int)"shake_testpunch",(int)FUN_101a3df0,
  FUN_10431e50(&DAT_107820ac,(int)"viewanim_create",(int)FUN_101a67f0,"viewanim_create",0,
  FUN_10431e50(&DAT_10782118,(int)"viewanim_addkeyframe",(int)FUN_101a66e0,&DAT_104eefb3,0x4000,
  FUN_10431e50(&DAT_1078213c,(int)"viewanim_save",(int)FUN_101a68c0,"Save current animation to file"
  FUN_10431e50(&DAT_10782160,(int)"viewanim_load",(int)FUN_101a6880,"load animation from file",0,
  FUN_10431e50(&DAT_10782768,(int)"r_screenoverlay",(int)FUN_101a8070,
  FUN_10431e50(&DAT_107857c8,(int)"toggleThreadedBuildRWList",(int)FUN_101bcad0,
  FUN_10431e50(&DAT_107857ec,(int)"r_cheapwaterstart",(int)FUN_101bca40,&DAT_104eefb3,0,
  FUN_10431e50(&DAT_107923a0,(int)"r_cheapwaterend",(int)FUN_101bc9d0,&DAT_104eefb3,0,
  FUN_10431e50(&DAT_1079299c,(int)"script_client",(int)FUN_101bea00,"Run the text as a script",0,
  FUN_10431e50(&DAT_107929c0,(int)"script_execute_client",(int)FUN_101beb70,"Run a vscript file",0,
  FUN_10431e50(&DAT_107929e4,(int)"script_debug_client",(int)FUN_101beaf0,
  FUN_10431e50(&DAT_10792a08,(int)"script_help_client",(int)FUN_101bebf0,
  FUN_10431e50(&DAT_10792a2c,(int)"script_dump_all_client",(int)FUN_101beb30,
  FUN_10431e50(&DAT_10793740,(int)"showpanel",(int)FUN_101c55b0,"Shows a viewport panel <name>",0,
  FUN_10431e50(&DAT_10793764,(int)"hidepanel",(int)FUN_101c5580,"Hides a viewport panel <name>",0,
  FUN_10431e50(&DAT_10793b38,(int)"overview_zoom",(int)FUN_101d0d10,
  FUN_10431e50(&DAT_10793b5c,(int)"overview_mode",(int)FUN_101d0c50,
  FUN_10431e50(&DAT_10793cc0,(int)"spec_next",(int)FUN_101d2440,"Spectate next player",0x40000000,
  FUN_10431e50(&DAT_10793ce4,(int)"spec_prev",(int)FUN_101d2530,"Spectate previous player",
  FUN_10431e50(&DAT_10793d08,(int)"spec_mode",(int)FUN_101d2390,"Set spectator mode",0x40000000,
  FUN_10431e50(&DAT_10793d2c,(int)"spec_player",(int)FUN_101d2490,"Spectate player by name",
  FUN_10431e50(&DAT_10793dd8,(int)"showinfo",(int)FUN_101d36f0,
  FUN_10431e50(&DAT_1079570c,(int)"fx_rf_test",(int)FUN_101d97a0,&DAT_104eefb3,0x40000000,
  FUN_10431e50(&DAT_10795b80,(int)"condump",(int)FUN_101efaa0,
  FUN_10431e50(&DAT_10798638,(int)"ui_reloadscheme",(int)FUN_1020ada0,
  FUN_10431e50(&DAT_107987a0,(int)"joy_cfg_custom",(int)FUN_10212800,&DAT_104eefb3,0,
  FUN_10431e50(&DAT_10799118,(int)"ti_showranks",(int)FUN_10232680,"ShowRanks",0,(undefined *)0x0);
  FUN_10431e50(&DAT_10799140,(int)"fix_listranks",(int)FUN_10232590,
  FUN_10431e50(&DAT_107991c0,(int)"fix_spectate",(int)FUN_10232630,"Spectate the desired room",0,
  FUN_10431e50(&DAT_107991e4,(int)"fix_roominfo",(int)FUN_102325e0,"Lists local room info",0,
  FUN_10431e50(&DAT_1079b940,(int)"cl_list_attributes",(int)FUN_10274d20,
  FUN_10431e50(&DAT_107a3718,(int)"l_gameents_cl",(int)FUN_102c2bd0,"List game entities",0,
  FUN_10431e50(&DAT_107a518c,(int)"carbump_rear",(int)FUN_102db0d0,(undefined *)0x0,0,
  FUN_10431e50(&DAT_107a51bc,(int)"ch_flipcar",(int)FUN_102d3010,&DAT_104eefb3,0x4000,
  FUN_10431e50(&DAT_107a5238,(int)"ch_turboboost",(int)FUN_102d30b0,&DAT_104eefb3,0x80000,
  FUN_10431e50(&DAT_107a93fc,(int)"+mouse_menu",(int)FUN_102f80a0,"Opens a menu while held",0,
  FUN_10431e50(&DAT_107a9420,(int)"+mouse_menu_radio",(int)FUN_102f80f0,"Opens a menu while held",0,
  FUN_10431e50(&DAT_107a9444,(int)"-mouse_menu",(int)FUN_102f8080,
  FUN_10431e50(&DAT_107a9468,(int)"-mouse_menu_radio",(int)FUN_102f8090,
  FUN_10431e50(&DAT_107a9720,(int)"changeteam",(int)FUN_10301910,"Choose a new team",0x50000000,
  FUN_10431e50(&DAT_107a9744,(int)"changeequipment",(int)FUN_103018c0,"Ingame Panel",0x50000000,
  FUN_10431e50(&DAT_107a9768,(int)"voicecontrol",(int)&DAT_103019c0,"Voice Control",0x40000000,
  FUN_10431e50(&DAT_107a978c,(int)"spec_help",(int)FUN_10301940,"Show spectator help screen",
  FUN_10431e50(&DAT_107a97b0,(int)"togglescores",(int)&DAT_10301960,"Toggles score panel",0x40000000
  FUN_10431e50(&DAT_107a98b0,(int)"drawradar",(int)FUN_10301fd0,"Draws HUD radar",0,(undefined *)0x0
  FUN_10431e50(&DAT_107a98d4,(int)"hideradar",(int)FUN_10301ff0,"Hides HUD radar",0,(undefined *)0x0
  FUN_10431e50(&DAT_107ab158,(int)"cl_trigger_first_notification",(int)FUN_103205b0,
  FUN_10431e50(&DAT_107ab17c,(int)"cl_decline_first_notification",(int)FUN_10320580,
  FUN_10431ef0(&DAT_1071338c,(int)"reload_weapondata",(int)FUN_100467d0,
  FUN_10431ef0(&DAT_10719e74,(int)"cl_removedecals",(int)FUN_10076230,
  FUN_10431ef0(&DAT_10729ac8,(int)"CreateHairball",(int)FUN_100aeff0,(undefined *)0x0,0x4002,
  FUN_10431ef0(&DAT_1076e1c0,(int)"cl_clearhinthistory",(int)FUN_10115000,
  FUN_10431ef0(&DAT_1076f954,(int)"thirdperson",(int)FUN_1012aa80,"Switch to thirdperson camera.",
  FUN_10431ef0(&DAT_1076f978,(int)"firstperson",(int)FUN_1012aa20,"Switch to firstperson camera.",0,
  FUN_10431ef0(&DAT_1076f99c,(int)"thirdpersonshoulder",(int)FUN_1012aac0,
  FUN_10431ef0(&DAT_1076f9c0,(int)"thirdpersonoverview",(int)FUN_1012aab0,
  FUN_10431ef0(&DAT_1076f9e4,(int)"camortho",(int)FUN_1012aa70,"Switch to orthographic camera.",
  FUN_10431ef0(&DAT_1076fa08,(int)"+cammousemove",(int)FUN_10129410,(undefined *)0x0,0,
  FUN_10431ef0(&DAT_1076fa2c,(int)"-cammousemove",(int)FUN_10128f70,(undefined *)0x0,0,
  FUN_10431ef0(&DAT_1076fa50,(int)"+camdistance",(int)FUN_10129330,(undefined *)0x0,0,
  FUN_10431ef0(&DAT_1076fa74,(int)"-camdistance",(int)FUN_10128f40,(undefined *)0x0,0,
  FUN_10431ef0(&DAT_1076fa98,(int)"snapto",(int)FUN_1012a8e0,(undefined *)0x0,0,(undefined *)0x0);
  FUN_10431ef0(&DAT_10771f90,(int)"force_centerview",(int)FUN_101305b0,(undefined *)0x0,0,
  FUN_10431ef0(&DAT_107787e8,(int)"cl_dump_particle_stats",(int)FUN_1014e570,
  FUN_10431ef0(&DAT_107788f8,(int)"perfvisualbenchmark",(int)FUN_101530b0,(undefined *)0x0,0,
  FUN_10431ef0(&DAT_1077891c,(int)"perfvisualbenchmark_abort",(int)FUN_10153060,(undefined *)0x0,0,
  FUN_10431ef0(&DAT_10781c50,(int)"centerview",(int)FUN_1019f3b0,(undefined *)0x0,0,(undefined *)0x0
  FUN_10431ef0(&DAT_10781eec,(int)"shake_stop",(int)FUN_101a3de0,"Stops all active screen shakes.\n"
  FUN_10431ef0(&DAT_107820d0,(int)"viewanim_test",(int)FUN_101a6680,"test view animation",0,
  FUN_10431ef0(&DAT_107820f4,(int)"viewanim_reset",(int)FUN_101a62f0,"reset view angles!",0x4000,
  FUN_10431ef0(&DAT_10784584,(int)"test_freezeframe",(int)FUN_101bcab0,"Test the freeze frame code."
  FUN_10431ef0(&DAT_1079336c,(int)"slot1",(int)FUN_101c15f0,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_10793440,(int)"slot2",(int)FUN_101c1640,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_10793464,(int)"slot3",(int)FUN_101c1670,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_10793488,(int)"slot4",(int)FUN_101c16d0,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_107934ac,(int)"slot5",(int)FUN_101c1700,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_107934d0,(int)"slot6",(int)FUN_101c1730,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_107934f4,(int)"slot7",(int)FUN_101c1760,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_10793518,(int)"slot8",(int)FUN_101c1790,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_1079353c,(int)"slot9",(int)FUN_101c17c0,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_10793560,(int)"slot0",(int)FUN_101c1590,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_10793584,(int)"slot10",(int)FUN_101c15c0,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_107935a8,(int)"cancelselect",(int)FUN_101c1470,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_107935cc,(int)"invnext",(int)FUN_101c14d0,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_107935f0,(int)"invprev",(int)FUN_101c1530,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_10793614,(int)"lastinv",(int)FUN_101c14a0,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_10794584,(int)"por_stepforward",(int)FUN_101d4bd0,
  FUN_10431ef0(&DAT_107945a8,(int)"por_stepbackward",(int)FUN_101d4b90,
  FUN_10431ef0(&DAT_107945cc,(int)"por_forward",(int)FUN_101d4b00,
  FUN_10431ef0(&DAT_107945f0,(int)"por_backward",(int)FUN_101d4ae0,
  FUN_10431ef0(&DAT_10794614,(int)"por_record",(int)FUN_101d4c40,
  FUN_10431ef0(&DAT_10794638,(int)"por_playback",(int)FUN_101d4c10,
  FUN_10431ef0(&DAT_1079465c,(int)"por_jump_forward",(int)FUN_101d4b40,&DAT_104eefb3,0x4000,
  FUN_10431ef0(&DAT_10794680,(int)"por_jump_backward",(int)FUN_101d4b20,&DAT_104eefb3,0x4000,
  FUN_10431ef0(&DAT_107946a4,(int)"por_readfile",(int)FUN_101d4b60,
  FUN_10431ef0(&DAT_107946c8,(int)"por_reset_playback",(int)FUN_101d4b80,
  FUN_10431ef0(&DAT_1079ab58,(int)"test_killstreak_msg",(int)&DAT_1025a580,
  FUN_10431ef0(&DAT_1079ab7c,(int)"test_ammobonus_msg",(int)FUN_1025a400,"Test the ammo bonus msg",0
  FUN_10431ef0(&DAT_1079aba0,(int)"test_healthbonus_msg",(int)FUN_1025a510,
  FUN_10431ef0(&DAT_1079ad88,(int)"fastswap",(int)FUN_1025f830,&DAT_104eefb3,0x10000000,
  FUN_10431ef0(&DAT_107a1260,(int)"dump_mapids",(int)FUN_10294c10,&DAT_104eefb3,0x4000,
  FUN_10431ef0(&DAT_107a490c,(int)"cl_fudge_vehicle_pos",(int)FUN_102cf630,&DAT_104eefb3,8,
  FUN_10431f80(param_1,(int)"screenfademaxsize",(int)puVar1,
  FUN_10431f80(param_1,(int)"screenfademinsize",(int)puVar1,
  FUN_10432010(&DAT_10713068,(int)"cl_showanimstate",&DAT_104ef1dc,0x4002,
  FUN_10432010(&DAT_107130c0,(int)"cl_showanimstate_log",&DAT_104ef188,0x4002,
  FUN_10432010(&DAT_10713118,(int)"cl_showanimstate_activities",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10713170,(int)"mp_feetyawrate",&DAT_104ef308,0x2002,
  FUN_10432010(&DAT_107131c8,(int)"mp_facefronttime",&DAT_104ef394,0x2002,
  FUN_10432010(&DAT_10713220,(int)"mp_ik",&DAT_104ef184,0x2002,"Use IK on in-place turns.");
  FUN_10432010(&DAT_10714298,(int)"player_can_use_painted_power",&DAT_104ef188,0x2002,
  FUN_10432010(&DAT_107142f0,(int)"player_loses_painted_power_over_time",&DAT_104ef184,0x2002,
  FUN_10432010(&DAT_10714348,(int)"player_paint_effects_duration",&DAT_104f16d4,0x2002,
  FUN_10432010(&DAT_107143a0,(int)"player_paint_effects_enabled",&DAT_104ef184,0x2002,
  FUN_10432010(&DAT_107143f8,(int)"player_paint_screen_effect_restart_delay",&DAT_104f17c0,0x2002,
  FUN_10432010(&DAT_10714450,(int)"sv_footstep_sound_frequency",&DAT_104f1860,0x6000,
  FUN_10432010(&DAT_107145b0,(int)"mp_usehwmmodels",&DAT_104ef188,0,
  FUN_10432010(&DAT_10714608,(int)"sv_debug_player_use",&DAT_104ef188,0x2000,
  FUN_10432010(&DAT_107146b8,(int)"smoothstairs",&DAT_104ef184,0x2000,
  FUN_10432010(&DAT_10716760,(int)"enable_skeleton_draw",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10716960,(int)"cl_threaded_bone_setup",&DAT_104ef188,0,
  FUN_10432010(&DAT_107169c0,(int)"r_drawothermodels",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_107198f8,(int)"report_cliententitysim",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10719950,(int)"cl_extrapolate",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_107199a8,(int)"cl_interp_npcs",&DAT_104f2504,0,
  FUN_10432010(&DAT_10719ab0,(int)"r_drawrenderboxes",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10719da0,(int)"hermite_fix",&DAT_104ef184,2,
  FUN_10432010(&DAT_1071b798,(int)"phonemedelay",&DAT_104ef188,0,
  FUN_10432010(&DAT_1071b7f0,(int)"phonemefilter",&DAT_104f9208,0,
  FUN_10432010(&DAT_1071b848,(int)"flex_rules",&DAT_104ef184,0,"Allow flex animation rules to run.")
  FUN_10432010(&DAT_1071b8a0,(int)"blink_duration",&DAT_104f918c,0,
  FUN_10432010(&DAT_1071b8f8,(int)"flex_smooth",&DAT_104ef184,0,
  FUN_10432010(&DAT_1071b988,(int)"phonemesnap",&DAT_104f94c0,0,
  FUN_10432010(&DAT_1071c010,(int)"cl_customsounds",&DAT_104ef188,0,
  FUN_10432010(&DAT_1071c068,(int)"spec_track",&DAT_104ef188,0,"Tracks an entity in spec mode");
  FUN_10432010(&DAT_1071c0c0,(int)"cl_smooth",&DAT_104ef184,0,
  FUN_10432010(&DAT_1071c170,(int)"spec_freeze_time",&DAT_104fc21c,0x6000,
  FUN_10432010(&DAT_1071c220,(int)"spec_freeze_distance_min",&DAT_104fc2f4,0x4000,
  FUN_10432010(&DAT_1071c278,(int)"spec_freeze_distance_max",&DAT_104fc374,0x4000,
  FUN_10432010(&DAT_1071d248,(int)"mat_colcorrection_disableentities",&DAT_104ef188,0,
  FUN_10432010(&DAT_1071d2a0,(int)"mat_colcorrection_forceentitiesclientside",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_1071da60,(int)"cl_portal_use_new_dissolve",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_1071e200,(int)"cl_ambient_light_disableentities",&DAT_104ef188,0,
  FUN_10432010(&DAT_1071e398,(int)"cl_csm_enabled",&DAT_104ef184,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e3f0,(int)"cl_csm_max_shadow_dist",&DAT_104ef1dc,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e448,(int)"cl_csm_capture_state",&DAT_104ef188,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e4a0,(int)"cl_csm_clear_captured_state",&DAT_104ef188,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e4f8,(int)"cl_csm_debug_render_ztest",&DAT_104ef184,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e550,(int)"cl_csm_max_visible_dist",&DAT_10501af8,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e5a8,(int)"cl_csm_debug_vis_lo_range",&DAT_10501b18,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e600,(int)"cl_csm_debug_vis_hi_range",&DAT_104f04fc,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e658,(int)"cl_csm_use_forced_view_matrices",&DAT_104ef184,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e868,(int)"cl_csm_viz_numplanes",&DAT_104ef1dc,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071e8c0,(int)"cl_csm_viz_polyhedron_quad_size","131072",2,&DAT_104eefb3);
  FUN_10432010(&DAT_1071ee98,(int)"cl_csm_optimize_static_props",&DAT_104ef184,2,
  FUN_10432010(&DAT_10726de8,(int)"asw_perf_wtf",&DAT_104ef188,2,
  FUN_10432010(&DAT_10727cd0,(int)"fish_debug",&DAT_104ef188,0x4000,"Show debug info for fish");
  FUN_10432010(&DAT_10729810,(int)"gameinstructor_save_restore_lessons",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10729868,(int)"gameinstructor_verbose",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107298c0,(int)"gameinstructor_verbose_lesson",&DAT_104eefb3,0x4000,
  FUN_10432010(&DAT_10729918,(int)"gameinstructor_find_errors",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107299c8,(int)"gameinstructor_start_sound_cooldown",&DAT_104fc21c,0,
  FUN_10432010(&DAT_1072c010,(int)"rope_collide",&DAT_104ef184,0,"Collide rope with the world");
  FUN_10432010(&DAT_1072c068,(int)"rope_smooth",&DAT_104ef184,0,"Do an antialiasing effect on ropes"
  FUN_10432010(&DAT_1072c0c0,(int)"rope_smooth_enlarge",&DAT_1051460c,0,
  FUN_10432010(&DAT_1072c118,(int)"rope_smooth_minwidth",&DAT_1051467c,0,
  FUN_10432010(&DAT_1072c170,(int)"rope_smooth_minalpha",&DAT_104f918c,0,
  FUN_10432010(&DAT_1072c220,(int)"rope_smooth_maxalpha",&DAT_105146f8,0,
  FUN_10432010(&DAT_1072c380,(int)"rope_wind_dist",&DAT_10501ed4,0,
  FUN_10432010(&DAT_1072c3d8,(int)"rope_averagelight",&DAT_104ef184,0,
  FUN_10432010(&DAT_1072ccb8,(int)"cl_rumblescale",&DAT_104f04fc,0x8080,
  FUN_10432010(&DAT_1072cd10,(int)"cl_debugrumble",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_1072e890,(int)"mp_usehwmvcds",&DAT_104ef188,0,
  FUN_10432010(&DAT_1072e8e8,(int)"scene_vcdautosave",&DAT_104ef188,0,
  FUN_10432010(&DAT_1072ef80,(int)"soundscape_fadetime",&DAT_10515ed4,0x4000,
  FUN_10432010(&DAT_1072f030,(int)"soundscape_radius_debug",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10730b58,(int)"cl_predict",&DAT_104f04fc,0x200,"Perform client side prediction."
  FUN_10432010(&DAT_10730bb0,(int)"cl_interp_ratio",&DAT_1051b05c,0x80200,
  FUN_10432010(&DAT_10730d90,(int)"showparticlecounts",&DAT_104ef188,0,
  FUN_10432010(&DAT_10730de8,(int)"cl_team","default",0x280,"Default team when joining a game");
  FUN_10432010(&DAT_10730e40,(int)"cl_class","default",0x280,"Default class when joining a game");
  FUN_10432010(&DAT_10730ef8,(int)"cl_ShowBoneSetupEnts",&DAT_104ef188,0,
  FUN_10432010(&DAT_10731198,(int)"cl_disable_splitscreen_cpu_level_cfgs_in_pip",&DAT_104ef184,0,
  FUN_10432010(&DAT_10734ef8,(int)"report_clientthinklist",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10735168,(int)"vr_activate_default",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_107351c0,(int)"vr_moveaim_mode",&DAT_104ef394,0x80,
  FUN_10432010(&DAT_10735218,(int)"vr_moveaim_mode_zoom",&DAT_104ef394,0x80,
  FUN_10432010(&DAT_10735270,(int)"vr_moveaim_reticle_yaw_limit",&DAT_1051c474,0x80,
  FUN_10432010(&DAT_107352c8,(int)"vr_moveaim_reticle_pitch_limit",&DAT_104f44a8,0x80,
  FUN_10432010(&DAT_10735320,(int)"vr_moveaim_reticle_yaw_limit_zoom",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_10735378,(int)"vr_moveaim_reticle_pitch_limit_zoom",&DAT_104ef1dc,0x80,
  FUN_10432010(&DAT_107353d0,(int)"vr_aim_yaw_offset",&DAT_1051c57c,0,
  FUN_10432010(&DAT_10735428,(int)"vr_stereo_swap_eyes",&DAT_104ef188,0,"1=swap eyes.");
  FUN_10432010(&DAT_10735480,(int)"vr_stereo_mono_set_eye",&DAT_104ef188,0,
  FUN_10432010(&DAT_10735740,(int)"vr_translation_limit",&DAT_104f18a4,0,
  FUN_10432010(&DAT_107357f0,(int)"vr_hud_max_fov",&DAT_1051c764,0x80,"Max FOV of the HUD");
  FUN_10432010(&DAT_10735848,(int)"vr_hud_forward",&DAT_104f444c,0x80,
  FUN_10432010(&DAT_10735950,(int)"vr_hud_axis_lock_to_world",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_107359a8,(int)"vr_projection_znear_multiplier",&DAT_1051467c,0,
  FUN_10432010(&DAT_10735a00,(int)"vr_viewmodel_translate_with_head",&DAT_104ef188,0,
  FUN_10432010(&DAT_10735a58,(int)"vr_zoom_multiplier",&DAT_1051b05c,0x80,
  FUN_10432010(&DAT_10735ab0,(int)"vr_zoom_scope_scale",&DAT_1051c974,0,
  FUN_10432010(&DAT_10735c10,(int)"vr_first_person_uses_world_model",&DAT_104ef184,0,
  FUN_10432010(&DAT_10765e18,(int)"r_PortalTestEnts",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10765e70,(int)"r_portalsopenall",&DAT_104ef188,0x4000,"Open all portals");
  FUN_10432010(&DAT_10765ec8,(int)"r_shadows_on_renderables_enable",&DAT_104ef188,0,
  FUN_10432010(&DAT_10765f78,(int)"r_alphafade_usefov",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10766210,(int)"r_disable_distance_fade_on_big_props",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10766268,(int)"r_disable_distance_fade_on_big_props_thresh","48000",0x4000,
  FUN_10432010(&DAT_107662c0,(int)"r_drawallrenderables",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107663d8,(int)"cl_drawhud",&DAT_104ef184,8,"Enable the rendering of the hud");
  FUN_10432010(&DAT_10766430,(int)"hud_takesshots",&DAT_104ef188,0x88,
  FUN_10432010(&DAT_10766488,(int)"hud_freezecamhide",&DAT_104ef188,0x88,
  FUN_10432010(&DAT_107667e8,(int)"r_shadow_shortenfactor",&DAT_104f94c0,0,
  FUN_10432010(&DAT_10766840,(int)"r_flashlightenableculling",&DAT_104ef184,0,
  FUN_10432010(&DAT_107669f8,(int)"r_flashlight_info",&DAT_104ef188,0,
  FUN_10432010(&DAT_10767680,(int)"cl_csm_parallel_split_log_lin_lerp",&DAT_1051edbc,2,&DAT_104eefb3
  FUN_10432010(&DAT_107676d8,(int)"cl_csm_parallel_split_dist1",&DAT_104ef1dc,2,&DAT_104eefb3);
  FUN_10432010(&DAT_10767730,(int)"cl_csm_parallel_split_dist2",&DAT_104ef1dc,2,&DAT_104eefb3);
  FUN_10432010(&DAT_10767788,(int)"cl_csm_parallel_split_dist3",&DAT_104ef1dc,2,&DAT_104eefb3);
  FUN_10432010(&DAT_107678f0,(int)"cl_detail_max_sway",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10767948,(int)"cl_detail_avoid_radius",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107679a0,(int)"cl_detail_avoid_force",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107679f8,(int)"cl_detail_avoid_recover_speed",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10767a50,(int)"r_FlashlightDetailProps",&DAT_104ef184,0,
  FUN_10432010(&DAT_10767aa8,(int)"r_threadeddetailprops",&DAT_104ef184,0,
  FUN_10432010(&DAT_10767d68,(int)"cl_detail_multiplier",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10767dc0,(int)"cl_fastdetailsprites",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10769828,(int)"cl_pred_checkstuck",&DAT_104ef188,2,
  FUN_10432010(&DAT_1076da78,(int)"mp_forcecamera",&DAT_104ef184,0x2000,
  FUN_10432010(&DAT_1076dad0,(int)"mp_allowspectators",&DAT_104f04fc,0x2000,
  FUN_10432010(&DAT_1076db28,(int)"mp_friendlyfire",&DAT_104ef188,0x2100,
  FUN_10432010(&DAT_1076db80,(int)"mp_fadetoblack",&DAT_104ef188,0x2100,
  FUN_10432010(&DAT_1076dc38,(int)"cl_glow_outline_effect_enable",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_1076dc90,(int)"cl_glow_outline_effect_width",&DAT_1051c974,0x4000,
  FUN_10432010(&DAT_1076dce8,(int)"r_emissiveGlowIntensity",&DAT_1051b05c,8,
  FUN_10432010(&DAT_1076dd40,(int)"r_emissiveGlowEnable",&DAT_104ef188,8,&DAT_104eefb3);
  FUN_10432010(&DAT_1076e168,(int)"cl_showhelp",&DAT_104ef184,0x280,
  FUN_10432010(&DAT_1076e1e8,(int)"spec_autodirector",&DAT_104ef184,0x40000008,
  FUN_10432010(&DAT_1076e2d8,(int)"cl_screenshots_hud",&DAT_104ef188,2,
  FUN_10432010(&DAT_1076e490,(int)"cl_showtextmsg",&DAT_104ef184,0,
  FUN_10432010(&DAT_1076e540,(int)"cl_mute_all_comms",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_1076e5d0,(int)"g15_update_msec",&DAT_10520010,0x80,
  FUN_10432010(&DAT_1076e790,(int)"locator_icon_min_size_non_ss",&DAT_104f04fc,0,
  FUN_10432010(&DAT_1076e7e8,(int)"locator_icon_max_size_non_ss",&DAT_104f94c0,0,
  FUN_10432010(&DAT_1076e840,(int)"locator_fade_time",&DAT_1051467c,0,
  FUN_10432010(&DAT_1076e898,(int)"locator_lerp_speed",&DAT_10527220,0,
  FUN_10432010(&DAT_1076e8f0,(int)"locator_lerp_rest","2.25f",0,
  FUN_10432010(&DAT_1076e948,(int)"locator_lerp_time","1.75f",0,
  FUN_10432010(&DAT_1076e9a0,(int)"locator_pulse_time",&DAT_104f84b4,0,
  FUN_10432010(&DAT_1076e9f8,(int)"locator_start_at_crosshair",&DAT_104ef188,0,
  FUN_10432010(&DAT_1076ea50,(int)"locator_topdown_style",&DAT_104ef188,0,
  FUN_10432010(&DAT_1076eaa8,(int)"locator_background_style",&DAT_104ef188,0,
  FUN_10432010(&DAT_1076eb00,(int)"locator_background_color","255 255 255 5",0,
  FUN_10432010(&DAT_1076eb58,(int)"locator_background_border_color","255 255 255 15",0,
  FUN_10432010(&DAT_1076ebb0,(int)"locator_background_thickness_x",&DAT_10527564,0,
  FUN_10432010(&DAT_1076ec08,(int)"locator_background_thickness_y",&DAT_104ef188,0,
  FUN_10432010(&DAT_1076ec60,(int)"locator_background_shift_x",&DAT_104ef394,0,
  FUN_10432010(&DAT_1076ecb8,(int)"locator_background_shift_y",&DAT_104ef184,0,
  FUN_10432010(&DAT_1076ed10,(int)"locator_background_border_thickness",&DAT_104ef394,0,
  FUN_10432010(&DAT_1076ed68,(int)"locator_target_offset_x",&DAT_104ef188,0,
  FUN_10432010(&DAT_1076edc0,(int)"locator_target_offset_y",&DAT_104ef188,0,
  FUN_10432010(&DAT_1076eff0,(int)"cam_ideallag",&DAT_104fc21c,0x80,
  FUN_10432010(&DAT_1076f048,(int)"cam_idealdelta",&DAT_104fc21c,0x80,
  FUN_10432010(&DAT_1076f258,(int)"cam_collision",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_1076f2b0,(int)"cam_showangles",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107700f0,(int)"joy_legacy",&DAT_104ef188,0x1008080,
  FUN_10432010(&DAT_10770148,(int)"joy_response_move",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_107701f8,(int)"joy_response_look",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_107703b0,(int)"joy_autoaimdampenrange",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_10770408,(int)"joy_autoaimdampen",&DAT_104ef188,0x280,
  FUN_10432010(&DAT_10770670,(int)"joy_diagonalpov",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_10770720,(int)"joy_wingmanwarrior_turnhack",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_10770778,(int)"joy_autosprint",&DAT_104ef188,0,
  FUN_10432010(&DAT_107707d0,(int)"joy_invertx",&DAT_104ef188,0x1008080,
  FUN_10432010(&DAT_10770828,(int)"joy_inverty",&DAT_104ef188,0x1008080,
  FUN_10432010(&DAT_10770880,(int)"joy_vibration",&DAT_104ef184,0x8080,"Controller vibration.");
  FUN_10432010(&DAT_107708d8,(int)"sc_joystick_inner_deadzone_scale",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_10770930,(int)"sc_joystick_outer_deadzone_scale",&DAT_105296b0,0x80,
  FUN_10432010(&DAT_10770c48,(int)"joy_xcontroller_cfg_loaded",&DAT_104ef188,0,
  FUN_10432010(&DAT_10770ca0,(int)"joy_steamcontroller_cfg_loaded",&DAT_104ef188,0,
  FUN_10432010(&DAT_10771358,(int)"thirdperson_platformer",&DAT_104ef188,0,
  FUN_10432010(&DAT_107713b0,(int)"thirdperson_screenspace",&DAT_104ef188,0,
  FUN_10432010(&DAT_10771408,(int)"sv_noclipduringpause",&DAT_104ef188,0x6000,
  FUN_10432010(&DAT_10771460,(int)"cl_lagcomp_errorcheck",&DAT_104ef188,0,
  FUN_10432010(&DAT_10771618,(int)"in_forceuser",&DAT_104ef188,0x4002,
  FUN_10432010(&DAT_10771670,(int)"ss_mimic",&DAT_104ef188,0x4002,
  FUN_10432010(&DAT_10771710,(int)"in_usekeyboardsampletime",&DAT_104ef184,0,
  FUN_10432010(&DAT_10772380,(int)"m_rawinput",&DAT_104ef188,0x80,"Use Raw Input for mouse input.");
  FUN_10432010(&DAT_10772430,(int)"cl_mouselook",&DAT_104ef184,0x408280,
  FUN_10432010(&DAT_10772488,(int)"cl_mouselook_roll_compensation",&DAT_104ef184,0,
  FUN_10432010(&DAT_107724e0,(int)"m_customaccel_max",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_10772538,(int)"m_side",&DAT_1052a4e8,0x80,"Mouse side factor.");
  FUN_10432010(&DAT_10772590,(int)"m_pitch","0.022",0x8080,"Mouse pitch factor.");
  FUN_10432010(&DAT_107725e8,(int)"m_yaw","0.022",0x80,"Mouse yaw factor.");
  FUN_10432010(&DAT_10772698,(int)"m_customaccel",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_107727a0,(int)"m_forward",&DAT_104ef184,0x80,"Mouse forward factor.");
  FUN_10432010(&DAT_107728a8,(int)"sc_enable",&DAT_104f04fc,0x8080,"Enable SteamController");
  FUN_10432010(&DAT_10772908,(int)"sc_yaw_sensitivity",&DAT_104f04fc,0x8080,
  FUN_10432010(&DAT_107729b8,(int)"sc_pitch_sensitivity",&DAT_1052aa60,0x8080,
  FUN_10432010(&DAT_10773c10,(int)"cl_extrapolate_amount",&DAT_1052ad00,0x4000,
  FUN_10432010(&DAT_10773c70,(int)"cl_jiggle_bone_debug_pitch_constraints",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10773cd0,(int)"cl_jiggle_bone_debug",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10773d80,(int)"cl_jiggle_bone_sanity",&DAT_104ef184,0,
  FUN_10432010(&DAT_10773dd8,(int)"cl_jiggle_bone_debug_yaw_constraints",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10777010,(int)"cl_skipfastpath",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10777078,(int)"sv_gravity",&DAT_10520894,0x6100,"World gravity.");
  FUN_10432010(&DAT_107770d0,(int)"sv_gravity_alt",&DAT_104f48c8,0x6100,"Sets alternate-gravity.");
  FUN_10432010(&DAT_10777128,(int)"sv_stopspeed",&DAT_104f48e0,0x2102,
  FUN_10432010(&DAT_107774f0,(int)"sv_footsteps",&DAT_104ef184,0x2102,
  FUN_10432010(&DAT_107775a0,(int)"sv_rollangle",&DAT_104ef188,0x2102,"Max view roll angle");
  FUN_10432010(&DAT_107775f8,(int)"sv_friction",&DAT_1052ab64,0x2102,"World friction.");
  FUN_10432010(&DAT_10777650,(int)"sv_bounce",&DAT_104ef188,0x2102,
  FUN_10432010(&DAT_107776a8,(int)"sv_maxvelocity",&DAT_1052c7e8,0x2002,
  FUN_10432010(&DAT_10777758,(int)"sv_skyname","sky_ti_09_hdr",0x2080,
  FUN_10432010(&DAT_107777b0,(int)"sv_backspeed",&DAT_10529344,0x2002,
  FUN_10432010(&DAT_10777808,(int)"sv_waterdist",&DAT_105268d8,0x2002,
  FUN_10432010(&DAT_10777b30,(int)"mp_timelimit",&DAT_104ef188,0x2100,"game time per map in minutes"
  FUN_10432010(&DAT_10777b98,(int)"sv_mumble_positionalaudio",&DAT_104ef184,0x2000,
  FUN_10432010(&DAT_10777ca0,(int)"sv_pushaway_force","30000",0x2002,
  FUN_10432010(&DAT_10777cf8,(int)"sv_pushaway_min_player_speed",&DAT_1052ce1c,0x2002,
  FUN_10432010(&DAT_10777d50,(int)"sv_pushaway_max_force",&DAT_10501ed4,0x2002,
  FUN_10432010(&DAT_10777da8,(int)"sv_pushaway_clientside",&DAT_104ef188,0x2002,
  FUN_10432010(&DAT_10777e00,(int)"sv_pushaway_player_force","200000",0x6002,
  FUN_10432010(&DAT_10777e58,(int)"sv_pushaway_max_player_force","10000",0x6002,
  FUN_10432010(&DAT_10777eb0,(int)"sv_turbophysics",&DAT_104ef188,0x2000,"Turns on turbo physics");
  FUN_10432010(&DAT_107780c8,(int)"r_drawparticles",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10778120,(int)"particle_simulateoverflow",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107781d0,(int)"cl_particle_fallback_multiplier",&DAT_104ef184,0,
  FUN_10432010(&DAT_10778228,(int)"cl_particle_fallback_base",&DAT_104ef188,0,
  FUN_10432010(&DAT_10778280,(int)"cl_particle_sim_fallback_threshold_ms",&DAT_1051c974,0,
  FUN_10432010(&DAT_107782d8,(int)"cl_particle_sim_fallback_base_multiplier",&DAT_1052c600,0,
  FUN_10432010(&DAT_10778950,(int)"cl_phys_timescale",&DAT_104f04fc,0x4000,
  FUN_10432010(&DAT_107789a8,(int)"cl_phys_maxticks",&DAT_104ef188,0,
  FUN_10432010(&DAT_10778c78,(int)"cl_predict_physics",&DAT_104ef188,0,
  FUN_10432010(&DAT_10778f68,(int)"think_limit",&DAT_1051c474,0x82000,
  FUN_10432010(&DAT_1077b2e0,(int)"cl_phys_props_max",&DAT_1051f540,0,
  FUN_10432010(&DAT_1077b338,(int)"r_propsmaxdist",&DAT_10530358,0,"Maximum visible distance");
  FUN_10432010(&DAT_1077b390,(int)"cl_phys_props_enable",&DAT_104ef184,0,
  FUN_10432010(&DAT_1077b3e8,(int)"cl_phys_props_respawndist",&DAT_10530430,0,
  FUN_10432010(&DAT_1077b440,(int)"cl_phys_props_respawnrate",&DAT_1051c764,0,
  FUN_10432010(&DAT_1077b8d0,(int)"ui_posedebug_fade_out_time",&DAT_1052a4e8,0x24000,
  FUN_10432010(&DAT_1077b928,(int)"ui_posedebug_fade_in_time",&DAT_104f918c,0x24000,
  FUN_10432010(&DAT_1077bc18,(int)"cl_predictweapons",&DAT_104ef184,0x200,
  FUN_10432010(&DAT_1077bc70,(int)"cl_lagcompensation",&DAT_104ef184,0x200,
  FUN_10432010(&DAT_1077bcc8,(int)"cl_showerror",&DAT_104ef188,0,
  FUN_10432010(&DAT_1077bd78,(int)"cl_predictionlist",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_1077bdd0,(int)"cl_pdump",&DAT_104ef1dc,0x4000,
  FUN_10432010(&DAT_1077be28,(int)"cl_pclass",&DAT_104eefb3,0x4000,
  FUN_10432010(&DAT_1077be80,(int)"cl_pred_optimize",&DAT_104f94c0,0,
  FUN_10432010(&DAT_1077bfc0,(int)"cl_pred_error_verbose",&DAT_104ef188,0,
  FUN_10432010(&DAT_1077c018,(int)"pwatchent",&DAT_104ef1dc,0x4000,
  FUN_10432010(&DAT_1077c070,(int)"pwatchvar",&DAT_104eefb3,0x4000,
  FUN_10432010(&DAT_1077c1d8,(int)"sv_pushaway_clientside_size",&DAT_1052ab20,0x2002,
  FUN_10432010(&DAT_1077c230,(int)"props_break_max_pieces",&DAT_104ef1dc,0x2000,
  FUN_10432010(&DAT_1077c288,(int)"props_break_max_pieces_perframe",&DAT_104ef1dc,0x2000,
  FUN_10432010(&DAT_1077c2e0,(int)"cl_burninggibs",&DAT_104ef188,0,
  FUN_10432010(&DAT_1077c438,(int)"ragdoll_sleepaftertime",&DAT_1052c600,0,
  FUN_10432010(&DAT_1077e2f0,(int)"scene_print",&DAT_104ef188,0x2000,
  FUN_10432010(&DAT_1077e348,(int)"scene_clientflex",&DAT_104ef184,0x2000,
  FUN_10432010(&DAT_1077e4c8,(int)"sv_soundemitter_version",&DAT_104f94c0,0x6002,
  FUN_10432010(&DAT_1077e520,(int)"snd_prevent_ss_duplicates",&DAT_104ef188,0x6002,
  FUN_10432010(&DAT_1077e5d0,(int)"sv_soundemitter_trace",&DAT_104ef1dc,0x2000,
  FUN_10432010(&DAT_1077e628,(int)"cc_showmissing",&DAT_104ef188,0x2000,
  FUN_10432010(&DAT_1077e7c0,(int)"soundpatch_captionlength",&DAT_1051b05c,0x2000,
  FUN_10432010(&DAT_1077f070,(int)"mod_load_showstall",&DAT_104ef188,0,
  FUN_10432010(&DAT_1077f0c8,(int)"mod_load_preload",&DAT_104f04fc,0,
  FUN_10432010(&DAT_1077f9b0,(int)"net_showusercmd",&DAT_104ef188,0,"Show user command encoding");
  FUN_10432010(&DAT_1077fa68,(int)"developer",&DAT_104ef188,0x80000,"Set developer message level");
  FUN_10432010(&DAT_1077fac0,(int)"violence_hblood",&DAT_104ef184,0,"Draw human blood");
  FUN_10432010(&DAT_1077fb18,(int)"violence_hgibs",&DAT_104ef184,0,"Show human gib entities");
  FUN_10432010(&DAT_1077fb70,(int)"violence_ablood",&DAT_104ef184,0,"Draw alien blood");
  FUN_10432010(&DAT_1077fbc8,(int)"violence_agibs",&DAT_104ef184,0,"Show alien gib entities");
  FUN_10432010(&DAT_10780168,(int)"cl_showfps",&DAT_104ef188,0x80080,
  FUN_10432010(&DAT_107801c0,(int)"cl_showpos",&DAT_104ef188,0x80000,
  FUN_10432010(&DAT_10780218,(int)"cl_showbattery",&DAT_104ef188,0,
  FUN_10432010(&DAT_10780270,(int)"cl_showfps5_disp_time",&DAT_104f04fc,0,
  FUN_10432010(&DAT_107802c8,(int)"cl_showfps5_btlneck_disp_time",&DAT_105217fc,0,
  FUN_10432010(&DAT_10780320,(int)"cl_countbones",&DAT_104ef188,0x4000,&DAT_104eefb3);
  FUN_10432010(&DAT_10780e50,(int)"ss_enable",&DAT_104ef188,0x12,
  FUN_10432010(&DAT_10780ef0,(int)"cl_showpausedimage",&DAT_104ef184,0,
  FUN_10432010(&DAT_10781138,(int)"net_graphtext",&DAT_104ef184,0x80,"Draw text fields");
  FUN_10432010(&DAT_10781190,(int)"net_graphmsecs",&DAT_1051f584,0x80,
  FUN_10432010(&DAT_107811e8,(int)"net_graphshowlatency",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_10781240,(int)"net_graphshowinterp",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_10781298,(int)"net_graphshowsvframerate",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_107812f0,(int)"net_graphholdsvframerate",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_10781470,(int)"bink_preload_videopanel_movies",&DAT_104ef184,0,
  FUN_10432010(&DAT_10781618,(int)"zoom_sensitivity_ratio_joystick",&DAT_104f04fc,0x8080,
  FUN_10432010(&DAT_10781670,(int)"zoom_sensitivity_ratio_mouse",&DAT_104f04fc,0x1008080,
  FUN_10432010(&DAT_107818c8,(int)"mat_viewportupscale",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10781978,(int)"r_mapextents","16384",0x4000,
  FUN_10432010(&DAT_107819d0,(int)"cl_camera_follow_bone_index",&DAT_104f4420,0x4000,
  FUN_10432010(&DAT_10781a80,(int)"gl_clear_randomcolor",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10781ad8,(int)"r_farz",&DAT_104ef1dc,0x4000,
  FUN_10432010(&DAT_10781b30,(int)"r_nearz",&DAT_104ef1dc,0x4000,
  FUN_10432010(&DAT_10781b88,(int)"cl_demoviewoverride",&DAT_104ef188,0,
  FUN_10432010(&DAT_10781d50,(int)"r_DrawBeams",&DAT_104ef184,0x4000,"0=Off, 1=Normal, 2=Wireframe")
  FUN_10432010(&DAT_10781e40,(int)"cl_beam_test_traces",&DAT_104ef188,2,
  FUN_10432010(&DAT_10781f10,(int)"shake_show",&DAT_104ef188,0,
  FUN_10432010(&DAT_10782050,(int)"r_depthoverlay",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10782190,(int)"cl_drawmaterial",&DAT_104eefb3,0x4000,
  FUN_10432010(&DAT_10782500,(int)"mat_drawTexture",&DAT_104eefb3,0,"Enable debug view texture");
  FUN_10432010(&DAT_10782558,(int)"mat_drawTextureScale",&DAT_104f04fc,0,"Debug view texture scale")
  FUN_10432010(&DAT_10782938,(int)"mat_debug_postprocessing_effects",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10782f10,(int)"mat_tonemap_algorithm",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10782f68,(int)"mat_force_tonemap_percent_target",&DAT_104ef1dc,0x4000,
  FUN_10432010(&DAT_10782fc0,(int)"mat_force_tonemap_percent_bright_pixels",&DAT_104ef1dc,0x4000,
  FUN_10432010(&DAT_10783018,(int)"mat_force_tonemap_min_avglum",&DAT_104ef1dc,0x4000,
  FUN_10432010(&DAT_10783298,(int)"mat_software_aa_quality",&DAT_104ef188,0,
  FUN_10432010(&DAT_107832f0,(int)"mat_software_aa_edge_threshold",&DAT_104f04fc,0,
  FUN_10432010(&DAT_10783348,(int)"mat_software_aa_blur_one_pixel_lines",&DAT_105146f8,0,
  FUN_10432010(&DAT_107833a0,(int)"mat_software_aa_tap_offset",&DAT_104f04fc,0,
  FUN_10432010(&DAT_107833f8,(int)"mat_software_aa_debug",&DAT_104ef188,0,
  FUN_10432010(&DAT_10783450,(int)"mat_software_aa_strength_vgui",&DAT_104f04e0,0,
  FUN_10432010(&DAT_107834a8,(int)"mat_fxaa_subpixel_C",&DAT_105146f8,0,
  FUN_10432010(&DAT_10783500,(int)"mat_fxaa_edge_sharpness_C",&DAT_1053fb50,0,
  FUN_10432010(&DAT_10783558,(int)"mat_fxaa_edge_threshold_C","0.125",0,
  FUN_10432010(&DAT_107835b0,(int)"mat_fxaa_edge_threshold_min_C",&DAT_104f2504,0,
  FUN_10432010(&DAT_10783608,(int)"mat_fxaa_subpixel_Q",&DAT_105296b0,0,
  FUN_10432010(&DAT_10783660,(int)"mat_fxaa_edge_threshold_Q",&DAT_10501b18,0,
  FUN_10432010(&DAT_107836b8,(int)"mat_fxaa_edge_threshold_min_Q",&DAT_104f2504,0,
  FUN_10432010(&DAT_10783df8,(int)"cl_blurClearAlpha",&DAT_104ef188,0,
  FUN_10432010(&DAT_10784600,(int)"cl_maxrenderable_dist",&DAT_10540a64,0x4000,
  FUN_10432010(&DAT_107847b8,(int)"r_3dsky",&DAT_104ef184,0,"Enable the rendering of 3d sky boxes");
  FUN_10432010(&DAT_10784810,(int)"r_skybox",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10784a20,(int)"r_DrawDetailProps",&DAT_104ef184,2,"0=Off, 1=Normal, 2=Wireframe"
  FUN_10432010(&DAT_10785100,(int)"r_WaterDrawRefraction",&DAT_104ef184,0,"Enable water refraction")
  FUN_10432010(&DAT_10785158,(int)"r_WaterDrawReflection",&DAT_104ef184,0,"Enable water reflection")
  FUN_10432010(&DAT_107851b0,(int)"r_ForceWaterLeaf",&DAT_104ef184,0,
  FUN_10432010(&DAT_10785368,(int)"r_fastzreject",&DAT_104ef188,0,
  FUN_10432010(&DAT_10785770,(int)"r_threaded_buildWRlist",&DAT_104ef184,2,
  FUN_10432010(&DAT_107924d8,(int)"r_drawbrushmodels",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_10792588,(int)"cl_skipslowpath",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_10792710,(int)"voice_modenable",&DAT_104ef184,0x40000080,
  FUN_10432010(&DAT_107927c0,(int)"voice_head_icon_size",&DAT_105292b4,0,
  FUN_10432010(&DAT_10792818,(int)"voice_head_icon_height",&DAT_10528900,0,
  FUN_10432010(&DAT_10792870,(int)"voice_local_icon",&DAT_104ef188,0,
  FUN_10432010(&DAT_107928c8,(int)"voice_all_icons",&DAT_104ef188,0,"Draw all players\' voice icons"
  FUN_10432010(&DAT_10792920,(int)"voice_icons_use_particles",&DAT_104ef188,0,
  FUN_10432010(&DAT_10793690,(int)"hud_autoreloadscript",&DAT_104ef188,0,
  FUN_10432010(&DAT_10793820,(int)"overview_health",&DAT_104ef184,0x40000080,
  FUN_10432010(&DAT_10793878,(int)"overview_names",&DAT_104ef184,0x40000080,
  FUN_10432010(&DAT_107938d0,(int)"overview_tracks",&DAT_104ef184,0x40000080,
  FUN_10432010(&DAT_10793928,(int)"overview_locked",&DAT_104ef184,0x40000080,
  FUN_10432010(&DAT_10793980,(int)"overview_alpha",&DAT_104f04fc,0x40000080,
  FUN_10432010(&DAT_107939d8,(int)"cl_radar_locked",&DAT_104ef188,0x80080,
  FUN_10432010(&DAT_10793a30,(int)"debug_show_npccars",&DAT_104ef188,2,
  FUN_10432010(&DAT_10793ae0,(int)"overview_preferred_view_size",&DAT_104f48c8,0,
  FUN_10432010(&DAT_10793c68,(int)"cl_spec_mode",&DAT_104ef184,0x10000200,"spectator mode");
  FUN_10432010(&DAT_10793d80,(int)"cl_disablehtmlmotd",&DAT_104ef188,0x80,"Disable HTML motds.");
  FUN_10432010(&DAT_107949c0,(int)"ti_motionblur_addalpha",&DAT_104fc1dc,0,"Motion Blur Alpha");
  FUN_10432010(&DAT_10794a18,(int)"ti_motionblur_drawalpha",&DAT_104ef184,0,"Motion Blur Draw Alpha"
  FUN_10432010(&DAT_10794a70,(int)"ti_motionblur_time",&DAT_10524bd4,0,
  FUN_10432010(&DAT_10794ac8,(int)"mat_dest_alpha_range",&DAT_10501ed4,0,
  FUN_10432010(&DAT_10795740,(int)"cl_phys_prop_sim_percent",&DAT_10501c5c,0x80080,
  FUN_10432010(&DAT_10797c78,(int)"ui_gameui_ctrlr_title",&DAT_104ef188,2,&DAT_104eefb3);
  FUN_10432010(&DAT_10797cd8,(int)"ui_gameui_modal",&DAT_104ef188,2,
  FUN_10432010(&DAT_10797ff0,(int)"demo_campaign_name","L4D2C5",2,
  FUN_10432010(&DAT_10798338,(int)"ui_transition_delay",&DAT_1051467c,2,&DAT_104eefb3);
  FUN_10432010(&DAT_10798398,(int)"ui_transition_effect",&DAT_104ef394,2,&DAT_104eefb3);
  FUN_10432010(&DAT_107983f0,(int)"ui_transition_debug",&DAT_104ef188,2,&DAT_104eefb3);
  FUN_10432010(&DAT_10798448,(int)"ui_transition_time",&DAT_10555c68,2,&DAT_104eefb3);
  FUN_10432010(&DAT_107984d0,(int)"demo_connect_string",&DAT_104eefb3,2,"Connect string for demo UI"
  FUN_10432010(&DAT_10798660,(int)"demo_ui_enable",&DAT_104eefb3,2,"Suffix for the demo UI");
  FUN_10432010(&DAT_10798948,(int)"cl_footer_no_auto_shrink",&DAT_104ef188,0,
  FUN_10432010(&DAT_107989a8,(int)"cl_footer_no_auto_wrap",&DAT_104ef188,0,
  FUN_10432010(&DAT_10798ac0,(int)"ui_newui",&DAT_104ef188,0x80000,"Preview new ui tests.");
  FUN_10432010(&DAT_10798b98,(int)"gameui_ingame_menu_active",(undefined *)0x0,0,
  FUN_10432010(&DAT_10798c68,(int)"ui_loadingscreen_mintransition_time",&DAT_105146f8,2,
  FUN_10432010(&DAT_10798cc0,(int)"ui_loadingscreen_transition_time",&DAT_104f04fc,2,&DAT_104eefb3);
  FUN_10432010(&DAT_10798d18,(int)"ui_loadingscreen_fadein_time",&DAT_104f04fc,2,&DAT_104eefb3);
  FUN_10432010(&DAT_10798d70,(int)"ui_loadingscreen_autotransition_time",&DAT_105217fc,2,
  FUN_10432010(&DAT_10798de8,(int)"connect_lobby",&DAT_104eefb3,0x10,
  FUN_10432010(&DAT_10798ee8,(int)"ui_show_attract_moviename",&DAT_104ef188,2,&DAT_104eefb3);
  FUN_10432010(&DAT_1079a208,(int)"cl_disablefreezecam",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_1079a440,(int)"ti_teamicons_pos",&DAT_104ef184,0x80008,
  FUN_10432010(&DAT_1079a498,(int)"ti_teamicons_size",&DAT_104ef184,0x80008,
  FUN_10432010(&DAT_1079a4f0,(int)"ti_teamicons_size_max",&DAT_104ef184,0x80008,
  FUN_10432010(&DAT_1079a548,(int)"ti_teamicons_distance",&DAT_10520640,0x80008,
  FUN_10432010(&DAT_1079b110,(int)"cl_colorblind",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_1079b218,(int)"cl_update_planningcam_override",(undefined *)0x0,0x4000,
  FUN_10432010(&DAT_1079b270,(int)"cl_useglow_update_interval",&DAT_1051ed54,0x4000,
  FUN_10432010(&DAT_1079b680,(int)"r_flashlight_attach_to_viewmodel",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_1079d228,(int)"cl_ragdoll_physics_enable",&DAT_104ef184,2,
  FUN_10432010(&DAT_1079d280,(int)"cl_ragdoll_force_multiplier",&DAT_104f04fc,8,
  FUN_10432010(&DAT_1079d2d8,(int)"cl_ragdoll_exaggerate",&DAT_104f04fc,8,
  FUN_10432010(&DAT_1079d600,(int)"ti_teamicons",&DAT_104ef184,0x80088,
  FUN_10432010(&DAT_1079ef88,(int)"vehicle_lights_mindist",&DAT_10583404,0x80,
  FUN_10432010(&DAT_1079efe0,(int)"vehicle_lights_maxdist",&DAT_10583454,0x80,
  FUN_10432010(&DAT_1079f690,(int)"cl_client_hitzone_density",&DAT_104ef184,0x80088,
  FUN_10432010(&DAT_1079fa80,(int)"cl_client_ragdoll_enable",&DAT_104ef184,0,
  FUN_10432010(&DAT_1079fad8,(int)"cl_client_ragdoll_maxdist",&DAT_10501ed4,0,
  FUN_10432010(&DAT_1079fc40,(int)"inferno_dlight_spacing",&DAT_104fc374,0x4000,
  FUN_10432010(&DAT_1079fc98,(int)"inferno_dlights",&DAT_1051c474,0,
  FUN_10432010(&DAT_107a1288,(int)"ti_holiday",&DAT_104ef188,0x2000,
  FUN_10432010(&DAT_107a12e0,(int)"force_load_backpack",&DAT_104ef188,0,
  FUN_10432010(&DAT_107a19d0,(int)"anim_showmainactivity",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107a1a28,(int)"anim_showstate",&DAT_104ef1dc,0x6002,
  FUN_10432010(&DAT_107a1a80,(int)"anim_showstatelog",&DAT_104ef188,0x6002,
  FUN_10432010(&DAT_107a1ad8,(int)"mp_showgestureslots",&DAT_104ef1dc,0x6002,
  FUN_10432010(&DAT_107a1b30,(int)"mp_slammoveyaw",&DAT_104ef188,0x2002,
  FUN_10432010(&DAT_107a1cb0,(int)"sv_showimpacts",&DAT_104ef188,0x2000,
  FUN_10432010(&DAT_107a1d08,(int)"sv_showplayerhitboxes",&DAT_104ef188,0x2000,
  FUN_10432010(&DAT_107a1d60,(int)"sv_showdamage",&DAT_104ef188,0x2000,"Shows damage done by bullet"
  FUN_10432010(&DAT_107a2660,(int)"cl_pred_checkstuck",&DAT_104ef188,2,
  FUN_10432010(&DAT_107a27e0,(int)"wp_drawplans",&DAT_104ef188,0x6002,
  FUN_10432010(&DAT_107a2838,(int)"mp_playermodelname",&DAT_104ef188,0x6002,
  FUN_10432010(&DAT_107a2890,(int)"mp_maxpetsperteam",&DAT_104ef1dc,0x82000,
  FUN_10432010(&DAT_107a28e8,(int)"mp_maxsnipersperteam",&DAT_104ef1dc,0x82000,
  FUN_10432010(&DAT_107a2940,(int)"ti_tournament",&DAT_104ef188,0x2000,"Tournament Mode");
  FUN_10432010(&DAT_107a2a30,(int)"ti_tdm_fraglimit",&DAT_1051f584,0x2000,
  FUN_10432010(&DAT_107a3678,(int)"wp_use_eyes",&DAT_104ef188,0x6000,
  FUN_10432010(&DAT_107a3a68,(int)"boat_steering_sensitivity",&DAT_1053f150,0x80008,
  FUN_10432010(&DAT_107a3cf8,(int)"cl_helicopter_flightmode",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_107a3d50,(int)"sv_helicopter_skill_cap",&DAT_104f94c0,0x2080,
  FUN_10432010(&DAT_107a4988,(int)"cl_vehicle_smoothify_tolerance_passenger","160.0",0x80008,
  FUN_10432010(&DAT_107a5970,(int)"cl_localtracers",&DAT_104ef188,0x88,
  FUN_10432010(&DAT_107a5b10,(int)"cl_muzzleflash_mode",&DAT_104f94c0,0x80088,
  FUN_10432010(&DAT_107a5b68,(int)"cl_muzzleflash_frequency",&DAT_105296b0,8,
  FUN_10432010(&DAT_107a6008,(int)"melee_return_to_idle_time",&DAT_1052cd14,0x6000,
  FUN_10432010(&DAT_107a8d08,(int)"cl_glow_brightness",&DAT_104f04fc,0x80,
  FUN_10432010(&DAT_107a91c8,(int)"cl_fastradial",&DAT_104ef184,2,
  FUN_10432010(&DAT_107a9528,(int)"mp_taunt_item",&DAT_104eefb3,0x2002,
  FUN_10432010(&DAT_107a9af8,(int)"cl_chatfiltering",&DAT_104f94c0,0x80080,
  FUN_10432010(&DAT_107ab018,(int)"cl_notifications_show_ingame",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_107ab070,(int)"cl_notifications_max_num_visible",&DAT_104ef394,0x80,
  FUN_10432010(&DAT_107ab0c8,(int)"cl_notifications_move_time",&DAT_105146f8,0x80,
  FUN_10432010(&DAT_107ac4b0,(int)"cl_winddir",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107ac508,(int)"cl_windspeed",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107ac5b8,(int)"r_RainParticleDensity",&DAT_104ef184,0,
  FUN_10432010(&DAT_107ac610,(int)"r_RainAllowInSplitScreen",&DAT_104ef188,0,
  FUN_10432010(&DAT_107ac718,(int)"r_RainSideVel",&DAT_1051fe34,0x4000,
  FUN_10432010(&DAT_107ac770,(int)"r_RainCheck",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107ac7c8,(int)"r_RainSimulate",&DAT_104ef184,0x4000,
  FUN_10432010(&DAT_107ac820,(int)"r_DrawRain",&DAT_104ef184,0x4000,"Enable/disable rain rendering."
  FUN_10432010(&DAT_107ac878,(int)"r_RainProfile",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107ac8d0,(int)"r_RainDebugDuration",&DAT_104ef188,0x4000,
  FUN_10432010(&DAT_107ac978,(int)"r_SnowEnable",&DAT_104ef184,0x4000,"Snow Enable");
  FUN_10432010(&DAT_107ac9d0,(int)"r_SnowParticles",&DAT_104f444c,0x4000,"Snow.");
  FUN_10432010(&DAT_107aca28,(int)"r_SnowInsideRadius",&DAT_10520028,0x4000,"Snow.");
  FUN_10432010(&DAT_107aca80,(int)"r_SnowOutsideRadius",&DAT_105dca14,0x4000,"Snow.");
  FUN_10432010(&DAT_107acad8,(int)"r_SnowSpeedScale",&DAT_104ef184,0x4000,"Snow.");
  FUN_10432010(&DAT_107acb30,(int)"r_SnowPosScale",&DAT_104ef184,0x4000,"Snow.");
  FUN_10432010(&DAT_107acb88,(int)"r_SnowFallSpeed",&DAT_10501fdc,0x4000,"Snow fall speed scale.");
  FUN_10432010(&DAT_107acbe0,(int)"r_SnowWindScale","0.0035",0x4000,"Snow.");
  FUN_10432010(&DAT_107acc38,(int)"r_SnowDebugBox",&DAT_104ef188,0x4000,"Snow Debug Boxes.");
  FUN_10432010(&DAT_107acc90,(int)"r_SnowZoomOffset","384.0f",0x4000,"Snow.");
  FUN_10432010(&DAT_107acce8,(int)"r_SnowZoomRadius","512.0f",0x4000,"Snow.");
  FUN_10432010(&DAT_107acd40,(int)"r_SnowStartAlpha",&DAT_1053b594,0x4000,"Snow.");
  FUN_10432010(&DAT_107acd98,(int)"r_SnowEndAlpha",&DAT_10520024,0x4000,"Snow.");
  FUN_10432010(&DAT_107acdf0,(int)"r_SnowStartSize",&DAT_104ef184,0x4000,"Snow.");
  FUN_10432010(&DAT_107ace48,(int)"r_SnowEndSize",&DAT_104ef188,0x4000,"Snow.");
  FUN_10432010(&DAT_107acea0,(int)"r_SnowRayLength","8192.0f",0x4000,"Snow.");
  FUN_10432010(&DAT_107acef8,(int)"r_SnowRayRadius",&DAT_10520028,0x4000,"Snow.");
  FUN_10432010(&DAT_107acf50,(int)"r_SnowRayEnable",&DAT_104ef184,0x4000,"Snow.");
  FUN_10432010(&DAT_107ada60,(int)"fx_drawimpactdebris",&DAT_104ef184,2,
  FUN_10432010(&DAT_107adab8,(int)"fx_drawimpactdust",&DAT_104ef184,2,"Draw impact dust effects.");
  FUN_10432010(&DAT_107b2a90,(int)"fx_glass_velocity_cap",&DAT_104ef188,0,
  FUN_10432010(&DAT_107b3538,(int)"cl_ejectbrass_lifetime",&DAT_10501f00,0x80088,
  FUN_10432010(&DAT_107b35e8,(int)"cl_physprop_model_duration",&DAT_104f04fc,0x80080,
  FUN_10432010(&DAT_107b3c50,(int)"cl_playerspraydisable",&DAT_104ef188,0x88,
  FUN_10432010(&DAT_107b4bc8,(int)"fx_drawmetalspark",&DAT_104ef184,2,"Draw metal spark effects.");
  FUN_10432010(&DAT_107b4ea8,(int)"r_paintblob_debug_draw_margin",&DAT_104ef188,0,
  FUN_10432010(&DAT_107b4f00,(int)"r_paintblob_force_single_pass",&DAT_104ef188,0,
  FUN_10432010(&DAT_107b4f58,(int)"r_paintblob_material",&DAT_104ef1dc,0,
  FUN_10432010(&DAT_107b4fb0,(int)"r_paintblob_calc_color",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_107b5008,(int)"r_paintblob_debug_draw_tile_boundaries",&DAT_104ef188,0,
  FUN_10432010(&DAT_107b5060,(int)"r_paintblob_otherviews_highres",&DAT_104ef188,0,
  FUN_10432010(&DAT_107b50c0,(int)"r_threaded_blobulator",&DAT_104ef184,0,
  FUN_10432010(&DAT_107b5118,(int)"r_paintblob_mainview_highres",&DAT_104ef184,0,
  FUN_10432010(&DAT_107b5170,(int)"r_paintblob_calc_tile_color",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_107b51c8,(int)"r_paintblob_calc_tan_only",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_107b5220,(int)"r_paintblob_calc_uv_and_tan",&DAT_104ef184,0x80,
  FUN_10432010(&DAT_107b5278,(int)"r_paintblob_highres_cube",&DAT_1052a4e8,0,
  FUN_10432010(&DAT_107b52d0,(int)"r_paintblob_only_mainview_displayed",&DAT_104ef188,0,
  FUN_10432010(&DAT_107b5328,(int)"r_paintblob_wireframe",&DAT_104ef188,0,"Draw wireframe");
  FUN_10432010(&DAT_107b5380,(int)"r_paintblob_shader",&DAT_104eefb3,0,"Choose a shader");
  FUN_10432010(&DAT_107b53d8,(int)"r_paintblob_blr_scale",&DAT_104fc1dc,0,
  FUN_10432010(&DAT_107b5430,(int)"r_paintblob_tile_index_to_draw",&DAT_104ef1dc,0,
  FUN_10432010(&DAT_107b5488,(int)"r_paintblob_rotate",&DAT_104ef188,0,
  FUN_10432010(&DAT_107b54e0,(int)"r_paintblob_calc_hifreq_color",&DAT_104ef188,0x80,
  FUN_10432010(&DAT_107b5538,(int)"r_paintblob_draw_isosurface",&DAT_104ef184,0,
  FUN_10432010(&DAT_107b5600,(int)"r_paintblob_timeout_for_recycling_fragments",&DAT_104f48e0,0,
  FUN_10432010(&DAT_107b5660,(int)"blob_csection_pool_enable",&DAT_104ef184,2,
  FUN_10432010(&DAT_107b56b8,(int)"blob_csection_pool_free_per_frame",&DAT_1052ab20,2,
  FUN_10432010(&DAT_107b5710,(int)"blob_csection_pool_block_size",&DAT_104f48e0,2,
  FUN_10432010(&DAT_107b5768,(int)"blob_csection_pool_spew",&DAT_104ef188,2,
  FUN_10432010(&DAT_107b57c0,(int)"blob_csection_pool_size",&DAT_105e95f0,2,
  FUN_10432010(&DAT_107b5818,(int)"r_paintblob_seeding_with_simd",&DAT_104ef188,0,
  FUN_10432010(&DAT_107b5878,(int)"r_paintblob_use_optimized_fragment_copy",&DAT_104ef184,0,
  FUN_10432010(&DAT_107b60d8,(int)"r_paintblob_max_number_of_indices_displayed","1000000",0,
  FUN_10432010(&DAT_107b6138,(int)"r_paintblob_max_number_of_vertices_displayed","1000000",0,
  FUN_10432010(&DAT_107b6460,(int)"r_paintblob_max_number_of_threads",&DAT_105e9d24,0,
  FUN_10432010(&DAT_107b65c0,(int)"r_paintblob_debug_spu",&DAT_104ef188,0,
  FUN_10432010(&DAT_107c05e8,(int)"cl_simdbones",&DAT_104ef188,0x2000,"Use SIMD bone setup.");
  FUN_10432010(&DAT_107c06b0,(int)"cl_use_simd_bones",&DAT_104ef184,0x2000,
  FUN_10432010(&DAT_107c0750,(int)"anim_3wayblend",&DAT_104ef184,0x2000,
  FUN_10432010(&DAT_107c07a8,(int)"anim_twistbones_enabled",&DAT_104ef184,0x6000,
  FUN_10432010(&DAT_107c0960,(int)"choreo_spew_filter",&DAT_104eefb3,0x2000,
  FUN_10432010(&DAT_107d50d8,(int)"r_sse_s",&DAT_104ef184,0,"sse ins for particle sphere create");
  FUN_10432010(&DAT_10840048,(int)"panel_test_title_safe",&DAT_104ef188,0x4000,
  FUN_104320a0(&DAT_10716708,(int)"vcollide_wireframe",&DAT_104ef188,0x4000,
  FUN_104320a0(&DAT_10729970,(int)"gameinstructor_enable",&DAT_104ef184,0x88,
  FUN_104320a0(&DAT_10729a20,(int)"sv_gameinstructor_disable",&DAT_104ef188,0x2000,
  FUN_104320a0(&DAT_1072adc0,(int)"r_drawpixelvisibility",&DAT_104ef188,0,
  FUN_104320a0(&DAT_10730aa0,(int)"cl_thirdperson",&DAT_104ef188,0x400282,
  FUN_104320a0(&DAT_10731038,(int)"cpu_level",&DAT_104f94c0,0,"CPU Level - Default: High",
  FUN_104320a0(&DAT_10731090,(int)"gpu_level",&DAT_104ef394,0,"GPU Level - Default: High",
  FUN_104320a0(&DAT_107310e8,(int)"mem_level",&DAT_104f94c0,0,"Memory Level - Default: High",
  FUN_104320a0(&DAT_10731140,(int)"gpu_mem_level",&DAT_104f94c0,0,"Memory Level - Default: High",
  FUN_104320a0(&DAT_10766898,(int)"r_shadow_deferred",&DAT_104ef188,0x4000,
  FUN_104320a0(&DAT_107668f0,(int)"r_shadow_deferred_downsample",&DAT_104ef188,0,
  FUN_104320a0(&DAT_10766f18,(int)"r_shadowfromworldlights",&DAT_104ef184,0,
  FUN_104320a0(&DAT_10767b58,(int)"cl_detaildist",&DAT_1051f540,2,
  FUN_104320a0(&DAT_10767d10,(int)"cl_detailfade",&DAT_1051f584,2,
  FUN_104320a0(&DAT_1076df28,(int)"building_cubemaps",&DAT_104ef188,0x4000,
  FUN_104320a0(&DAT_1076ef28,(int)&DAT_105289c0,&DAT_104ef188,0,"Automates fov command to server.",
  FUN_104320a0(&DAT_10770bf0,(int)"joy_movement_stick",&DAT_104ef188,0x1008080,
  FUN_104320a0(&DAT_10780be8,(int)"ss_pipsplit",&DAT_104ef184,0,
  FUN_104320a0(&DAT_10780c40,(int)"ss_pipscale",&DAT_1053b550,0,
  FUN_104320a0(&DAT_10780c98,(int)"ss_pip_right_offset",&DAT_1053b594,0,
  FUN_104320a0(&DAT_10780cf0,(int)"ss_pip_bottom_offset",&DAT_1053b594,0,
  FUN_104320a0(&DAT_10780d48,(int)"ss_force_primary_fullscreen",&DAT_104ef188,0,
  FUN_104320a0(&DAT_10780da0,(int)"ss_verticalsplit",&DAT_104ef188,0,
  FUN_104320a0(&DAT_10780df8,(int)"ss_splitmode",&DAT_104ef188,0x12,
  FUN_104320a0(&DAT_10780f60,(int)"cl_enable_remote_splitscreen",&DAT_104ef188,0,
  FUN_104320a0(&DAT_10781348,(int)"net_graph",&DAT_104ef188,0x80,
  FUN_104320a0(&DAT_107813a0,(int)"net_graphheight",&DAT_1052e9c0,0x80,"Height of netgraph panel",
  FUN_104320a0(&DAT_107813f8,(int)"net_graphproportionalfont",&DAT_104ef184,0x80,
  FUN_104320a0(&DAT_10781be0,(int)"cl_software_cursor",&DAT_104ef188,0x80,
  FUN_104320a0(&DAT_10784b80,(int)"fog_override",&DAT_104ef188,0x4000,
  FUN_104320a0(&DAT_10793a88,(int)"overview_preferred_mode",&DAT_104ef184,0,
  FUN_104320a0(&DAT_107956a8,(int)"mat_filmgrain",&DAT_104ef188,8,
  FUN_104320a0(&DAT_107a8f50,(int)"cl_steamscreenshots",&DAT_104ef184,0x80,
  FUN_10432130(&DAT_1071c118,(int)"cl_smoothtime",&DAT_104fc1dc,0,
  FUN_10432130(&DAT_1071c1c8,(int)"spec_freeze_traveltime",&DAT_104fc278,0x6000,
  FUN_10432130(&DAT_1071deb8,(int)"cl_blobulator_freezing_max_metaball_radius",&DAT_10500474,0,
  FUN_10432130(&DAT_1072bfb8,(int)"rope_subdiv",&DAT_104f94c0,0x800000,"Rope subdivision amount",1,0
  FUN_10432130(&DAT_10730c08,(int)"cl_interp","0.015625",0x80200,
  FUN_10432130(&DAT_107722c8,(int)"m_customaccel_exponent",&DAT_10501f00,0x80,
  FUN_10432130(&DAT_10772328,(int)"m_mouseaccel2",&DAT_104ef188,0x80,
  FUN_10432130(&DAT_107723d8,(int)"m_mouseaccel1",&DAT_104ef188,0x80,
  FUN_10432130(&DAT_10772640,(int)"m_customaccel_scale",&DAT_1052a6d8,0x80,
  FUN_10432130(&DAT_107726f0,(int)"sensitivity",&DAT_104ef394,0x80,"Mouse sensitivity.",1,0x38d1b717
  FUN_10432130(&DAT_107727f8,(int)"m_mousespeed",&DAT_104ef184,0x80,
  FUN_10432130(&DAT_10773928,(int)"tir_maxx",&DAT_1052ab64,0x4000,"TrackIR Max X",1,0,1,0x42480000);
  FUN_10432130(&DAT_10773980,(int)"tir_maxyaw",&DAT_1051c57c,0x4000,"TrackIR Max Yaw",1,0,1,
  FUN_10432130(&DAT_107739e0,(int)"tir_maxpitch",&DAT_1052ab20,0x4000,"TrackIR Max Pitch",1,0,1,
  FUN_10432130(&DAT_10773a38,(int)"tir_stop",&DAT_104ef188,0,"TrackIR Stop",1,0,1,0x3f800000);
  FUN_10432130(&DAT_10773a90,(int)"tir_maxz",&DAT_104ef184,0x4000,"TrackIR Max Z",1,0,1,0x42480000);
  FUN_10432130(&DAT_10773ae8,(int)"tir_maxroll",&DAT_1051c57c,0x4000,"TrackIR Max Roll",1,0,1,
  FUN_10432130(&DAT_10773b50,(int)"tir_start",&DAT_104ef188,0,"TrackIR Start",1,0,1,0x3f800000);
  FUN_10432130(&DAT_10773ba8,(int)"tir_maxy",&DAT_105292b4,0x4000,"TrackIR Max Y",1,0,1,0x42480000);
  FUN_10432130(&DAT_10777ad8,(int)"mp_chattime",&DAT_1051c474,0x2000,
  FUN_10432130(&DAT_10781030,(int)"net_scale",&DAT_1052c600,0x80,"Graph Scale",1,0x3dcccccd,1,
  FUN_10432130(&DAT_10781870,(int)"mat_viewportscale",&DAT_104f04fc,0x4000,
  FUN_10432130(&DAT_10795558,(int)"r_debugrt_size",&DAT_1051fe2c,0x80,&DAT_104eefb3,1,0x42800000,1,
  FUN_10432130(&DAT_10798048,(int)"ui_lastact_played",&DAT_104ef188,0x90,&DAT_104eefb3,1,0,1,
  FUN_10432130(&DAT_10798288,(int)"ti_hud_basecolor",&DAT_104ef188,0x80080,
  FUN_10432130(&DAT_1079ac70,(int)"ti_hitoutput_type",&DAT_104ef188,0x88,
  FUN_10432130(&DAT_1079f5e0,(int)"cl_client_hitzone_max",&DAT_1051feac,0x80088,
  FUN_10432130(&DAT_1079f638,(int)"cl_client_hitzone_maxdist",&DAT_10501ed4,0x80088,
  FUN_10432130(&DAT_1079fa28,(int)"cl_client_ragdoll_max",&DAT_105200d8,0x80088,
  FUN_10432130(&DAT_107a1c00,(int)"ti_feetyawboost",&DAT_1051b05c,2,"feet yaw boost",1,0x3f800000,1,
  FUN_10432130(&DAT_107a29d8,(int)"ti_gamemode_override",&DAT_104ef1dc,0x2000,
  FUN_10432130(&DAT_107a8900,(int)"default_fov",&DAT_1051c57c,0x404000,&DAT_104eefb3,1,0x42b40000,1,
  FUN_10432130(&DAT_107a8958,(int)"fov_desired",&DAT_1051c57c,0x280,"Sets the base field-of-view.",1
  FUN_10432130(&DAT_107a9848,(int)"cl_radaralpha",&DAT_10520024,8,(undefined *)0x0,1,0,1,0x437f0000)
  FUN_10432130(&DAT_107ade80,(int)"cl_smoke_color_percent",&DAT_105146f8,0x4000,&DAT_104eefb3,1,0,1,
  FUN_104321d0(&DAT_10719a00,(int)"cl_interp_all",&DAT_104ef188,0,
  FUN_104321d0(&DAT_10771300,(int)"joystick",&DAT_104ef184,0x80,
  FUN_104321d0(&DAT_1079b168,(int)"cl_autoreload",&DAT_104ef188,0x80080,
  FUN_104321d0(&DAT_1079b1c0,(int)"cl_lefthand",&DAT_104ef188,0x80080,"Use left-handed view models."
  FUN_104321d0(&DAT_107a8dc0,(int)"voice_vox",&DAT_104ef188,0x80,
  FUN_10432270(&DAT_10713278,(int)"cl_disable_water_render_targets",&DAT_104ef188,0);
  FUN_10432270(&DAT_107137f8,(int)"hl2_episodic",&DAT_104ef188,0x2000);
  FUN_10432270(&DAT_10713850,(int)"ai_shot_bias_min",&DAT_104f04e0,0x2000);
  FUN_10432270(&DAT_107138a8,(int)"ai_shot_bias_max",&DAT_104f04fc,0x2000);
  FUN_10432270(&DAT_10713900,(int)"ai_debug_shoot_positions",&DAT_104ef188,0x6000);
  FUN_10432270(&DAT_107144a8,(int)"cl_physicsshadowupdate_render",&DAT_104ef188,0);
  FUN_10432270(&DAT_10714500,(int)"cl_shadowupdatespacing",&DAT_104f18a4,0);
  FUN_10432270(&DAT_10714558,(int)"cl_predict_motioncontrol",&DAT_104ef188,0);
  FUN_10432270(&DAT_10714660,(int)"sv_suppress_viewpunch",&DAT_104ef188,0x6002);
  FUN_10432270(&DAT_10715520,(int)"viewmodel_offset_x",&DAT_104f2504,0x80);
  FUN_10432270(&DAT_10715578,(int)"viewmodel_offset_y",&DAT_104f2504,0x80);
  FUN_10432270(&DAT_107155d0,(int)"viewmodel_offset_z",&DAT_104f2504,0x80);
  FUN_10432270(&DAT_107163f0,(int)"cl_SetupAllBones",&DAT_104ef188,0);
  FUN_10432270(&DAT_10716448,(int)"r_sequence_debug",&DAT_104eefb3,0);
  FUN_10432270(&DAT_107164a0,(int)"r_debug_sequencesets",&DAT_104f4420,0);
  FUN_10432270(&DAT_107164f8,(int)"r_jiggle_bones",&DAT_104ef184,0);
  FUN_10432270(&DAT_10716550,(int)"z_ragdoll_impact_strength",&DAT_104f444c,0);
  FUN_10432270(&DAT_107165a8,(int)"cl_disable_ragdolls",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10716600,(int)"cl_ejectbrass",&DAT_104ef184,0x80080);
  FUN_10432270(&DAT_10716658,(int)"cl_minimal_rtt_shadows",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_107166b0,(int)"sfm_record_hz",&DAT_104f44a8,0);
  FUN_10432270(&DAT_10716838,(int)"g_debug_ragdoll_visualize",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10716890,(int)"g_ragdoll_fadespeed",&DAT_104f48c8,0);
  FUN_10432270(&DAT_107168e8,(int)"g_ragdoll_lvfadespeed",&DAT_104f48e0,0);
  FUN_10432270(&DAT_10716a18,(int)"r_drawmodelstatsoverlay",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10719a58,(int)"r_drawmodeldecals",&DAT_104ef184,0);
  FUN_10432270(&DAT_10719be0,(int)"cl_interpolate_demos",&DAT_104ef184,0);
  FUN_10432270(&DAT_10719cf0,(int)"cl_simulationtimefix",&DAT_104ef184,2);
  FUN_10432270(&DAT_10719d48,(int)"cl_interp_watch",&DAT_104f4420,0);
  FUN_10432270(&DAT_10719df8,(int)"cl_interpolate",&DAT_104f84b4,0x202);
  FUN_10432270(&DAT_1071c2d0,(int)"cl_player_fullupdate_predicted_origin_fix",&DAT_104ef184,0);
  FUN_10432270(&DAT_1071cbb0,(int)"cl_predict_basetoggles",&DAT_104ef184,0);
  FUN_10432270(&DAT_1071ce48,(int)"vm_debug",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_1071cea0,(int)"vm_draw_always",&DAT_104ef188,0);
  FUN_10432270(&DAT_1071e6b0,(int)"cl_csm_debug_2d",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071e708,(int)"cl_csm_debug_3d",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071e760,(int)"cl_csm_debug_culling",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071e7b8,(int)"cl_csm_debug_culling_cascade",&DAT_104ef1dc,2);
  FUN_10432270(&DAT_1071e810,(int)"cl_csm_print_culling_planes",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071e918,(int)"cl_csm_use_env_light_direction",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071e970,(int)"cl_csm_rot_override",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071e9c8,(int)"cl_csm_rot_x",&DAT_10501c5c,2);
  FUN_10432270(&DAT_1071ea20,(int)"cl_csm_rot_y",&DAT_10501c70,2);
  FUN_10432270(&DAT_1071ea78,(int)"cl_csm_rot_z",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071ead0,(int)"cl_csm_disable_culling",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071eb28,(int)"cl_csm_shadows",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071eb80,(int)"cl_csm_entity_shadows",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071ebd8,(int)"cl_csm_static_prop_shadows",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071ec30,(int)"cl_csm_world_shadows",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071ec88,(int)"cl_csm_world_shadows_in_viewmodelcascade",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071ece0,(int)"cl_csm_sprite_shadows",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071ed38,(int)"cl_csm_rope_shadows",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071ed90,(int)"cl_csm_translucent_shadows",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071ede8,(int)"cl_csm_translucent_shadows_using_opaque_path",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071ee40,(int)"cl_csm_ignore_disable_shadow_depth_rendering",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071eef0,(int)"cl_csm_viewmodel_shadows",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071ef48,(int)"cl_csm_viewmodel_max_shadow_dist",&DAT_10501e94,2);
  FUN_10432270(&DAT_1071efa0,(int)"cl_csm_viewmodel_farz",&DAT_104f44a8,2);
  FUN_10432270(&DAT_1071eff8,(int)"cl_csm_viewmodel_max_visible_dist",&DAT_10501ed4,2);
  FUN_10432270(&DAT_1071f050,(int)"cl_csm_slopescaledepthbias_c0",&DAT_10501f00,2);
  FUN_10432270(&DAT_1071f0a8,(int)"cl_csm_slopescaledepthbias_c1",&DAT_104f94c0,2);
  FUN_10432270(&DAT_1071f100,(int)"cl_csm_slopescaledepthbias_c2",&DAT_104f94c0,2);
  FUN_10432270(&DAT_1071f158,(int)"cl_csm_slopescaledepthbias_c3",&DAT_104f94c0,2);
  FUN_10432270(&DAT_1071f1b0,(int)"cl_csm_depthbias_c0",".000025",2);
  FUN_10432270(&DAT_1071f208,(int)"cl_csm_depthbias_c1",".000025",2);
  FUN_10432270(&DAT_1071f260,(int)"cl_csm_depthbias_c2",".000025",2);
  FUN_10432270(&DAT_1071f2b8,(int)"cl_csm_depthbias_c3",".000025",2);
  FUN_10432270(&DAT_1071f310,(int)"cl_csm_viewmodel_slopescaledepthbias",&DAT_10501fdc,2);
  FUN_10432270(&DAT_1071f368,(int)"cl_csm_viewmodel_depthbias",".00005",2);
  FUN_10432270(&DAT_1071f3c0,(int)"cl_csm_hack_proj_matrices_for_cull_debugging",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071f418,(int)"cl_csm_xlat_continuity",&DAT_104ef184,2);
  FUN_10432270(&DAT_1071f470,(int)"cl_csm_force_no_csm_in_reflections",&DAT_104ef188,2);
  FUN_10432270(&DAT_1071f4c8,(int)"cl_csm_cull_small_prop_threshold_volume","2000.0f ",2);
  FUN_10432270(&DAT_107289c8,(int)"cl_elevator_physics",&DAT_104ef184,0);
  FUN_10432270(&DAT_10729c10,(int)"r_disable_lightglow",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10729f90,(int)"debug_materialmodifycontrol_client",&DAT_104ef188,0);
  FUN_10432270(&DAT_1072aad0,(int)"r_PhysPropStaticLighting",&DAT_104ef188,0);
  FUN_10432270(&DAT_1072ab28,(int)"r_visualizeproplightcaching",&DAT_104ef188,0);
  FUN_10432270(&DAT_1072ad10,(int)"r_pixelvisibility_partial",&DAT_104ef184,0);
  FUN_10432270(&DAT_1072ad68,(int)"r_dopixelvisibility",&DAT_104ef184,0);
  FUN_10432270(&DAT_1072ae18,(int)"r_pixelvisibility_spew",&DAT_104ef188,0);
  FUN_10432270(&DAT_1072b168,(int)"cl_names_debug",&DAT_104ef188,2);
  FUN_10432270(&DAT_1072bf60,(int)"rope_shake",&DAT_104ef188,0);
  FUN_10432270(&DAT_1072c1c8,(int)"rope_smooth_maxalphawidth",&DAT_105146d4,0);
  FUN_10432270(&DAT_1072c278,(int)"mat_fullbright",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_1072c2d0,(int)"r_drawropes",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_1072c328,(int)"r_ropetranslucent",&DAT_104ef184,0);
  FUN_10432270(&DAT_1072c430,(int)"rope_rendersolid",&DAT_104ef184,0);
  FUN_10432270(&DAT_1072c488,(int)"rope_solid_minwidth",&DAT_1051467c,0);
  FUN_10432270(&DAT_1072c4e0,(int)"rope_solid_maxwidth",&DAT_104ef184,0);
  FUN_10432270(&DAT_1072c538,(int)"rope_solid_minalpha",&DAT_104f2504,0);
  FUN_10432270(&DAT_1072c590,(int)"rope_solid_maxalpha",&DAT_104ef184,0);
  FUN_10432270(&DAT_1072c6a8,(int)"r_queued_ropes",&DAT_104ef184,0);
  FUN_10432270(&DAT_1072efd8,(int)"soundscape_message",&DAT_104ef188,0);
  FUN_10432270(&DAT_1072f4e8,(int)"r_drawsprites",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10730d38,(int)"no_driver_fps_limit",&DAT_104ef188,0x4002);
  FUN_10432270(&DAT_10730fa8,(int)"cl_threaded_init",&DAT_104ef188,0);
  FUN_10432270(&DAT_107311f0,(int)"bonecache_optimization",&DAT_104ef184,2);
  FUN_10432270(&DAT_10731248,(int)"spew_local_drawcount",&DAT_104ef188,0);
  FUN_10432270(&DAT_10734de8,(int)"mat_stub",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107354d8,(int)"vr_debug_remote_cam",&DAT_104ef188,0);
  FUN_10432270(&DAT_10735530,(int)"vr_debug_remote_cam_pos_x","150.0",0);
  FUN_10432270(&DAT_10735588,(int)"vr_debug_remote_cam_pos_y",&DAT_104f2504,0);
  FUN_10432270(&DAT_107355e0,(int)"vr_debug_remote_cam_pos_z",&DAT_104f2504,0);
  FUN_10432270(&DAT_10735638,(int)"vr_debug_remote_cam_target_x",&DAT_104f2504,0);
  FUN_10432270(&DAT_10735690,(int)"vr_debug_remote_cam_target_y",&DAT_104f2504,0);
  FUN_10432270(&DAT_107356e8,(int)"vr_debug_remote_cam_target_z","-50.0",0);
  FUN_10432270(&DAT_10735798,(int)"vr_render_hud_in_world",&DAT_104ef184,0);
  FUN_10432270(&DAT_107358a0,(int)"vr_hud_display_ratio",&DAT_1051c7b0,0x80);
  FUN_10432270(&DAT_107358f8,(int)"vr_hud_never_overlay",&DAT_104ef188,0);
  FUN_10432270(&DAT_10735b08,(int)"vr_viewmodel_offset_forward",&DAT_1051c98c,0);
  FUN_10432270(&DAT_10735b60,(int)"vr_viewmodel_offset_forward_large",&DAT_1051c9ac,0);
  FUN_10432270(&DAT_10735bb8,(int)"vr_force_windowed",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_10765dc0,(int)"cl_drawleaf",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10765f20,(int)"cl_leafsystemvis",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10766318,(int)"r_fastreflectionfastpath",&DAT_104ef184,0);
  FUN_10432270(&DAT_10766370,(int)"r_highlight_translucent_renderables",&DAT_104ef188,0);
  FUN_10432270(&DAT_10766528,(int)"r_disable_update_shadow",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10766580,(int)"r_flashlightdrawfrustum",&DAT_104ef188,0);
  FUN_10432270(&DAT_107665d8,(int)"r_flashlightdrawfrustumbbox",&DAT_104ef188,0);
  FUN_10432270(&DAT_10766630,(int)"r_flashlightmodels",&DAT_104ef184,0);
  FUN_10432270(&DAT_10766688,(int)"r_shadowrendertotexture",&DAT_104ef188,2);
  FUN_10432270(&DAT_107666e0,(int)"r_shadow_lightpos_lerptime",&DAT_105146f8,0);
  FUN_10432270(&DAT_10766738,(int)"r_shadowfromworldlights_debug",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10766790,(int)"r_shadowfromanyworldlight",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10766948,(int)"r_shadow_deferred_simd",&DAT_104ef188,0);
  FUN_10432270(&DAT_107669a0,(int)"r_shadow_debug_spew",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10766a50,(int)"r_flashlightdepthtexture",&DAT_104ef184,0);
  FUN_10432270(&DAT_10766aa8,(int)"r_flashlightdepthreshigh",&DAT_104ef308,0);
  FUN_10432270(&DAT_10766b00,(int)"r_flashlightdepthres",&DAT_104ef308,0);
  FUN_10432270(&DAT_10766b58,(int)"r_shadows",&DAT_104ef184,0);
  FUN_10432270(&DAT_10766bb0,(int)"r_shadowmaxrendered",&DAT_1051db24,0);
  FUN_10432270(&DAT_10766c08,(int)"r_shadows_gamecontrol",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10766fb8,(int)"cl_tracer_whiz_distance",&DAT_1051e494,0);
  FUN_10432270(&DAT_107671a8,(int)"cl_show_bounds_errors",&DAT_104ef188,0);
  FUN_10432270(&DAT_107674f0,(int)"mat_colcorrection_editor",&DAT_104ef188,0);
  FUN_10432270(&DAT_107675d0,(int)"cl_csm_shadow_split_lerp_factor_range",&DAT_1051ed54,2);
  FUN_10432270(&DAT_10767628,(int)"cl_csm_shadow_split_radial_dist_lerp_factor_multiplier",
  FUN_10432270(&DAT_10767b00,(int)"mat_fullbright",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10768438,(int)"r_decals",(undefined *)&DAT_1051dc84,0);
  FUN_10432270(&DAT_107688d0,(int)"r_flashlightlockposition",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10768928,(int)"r_flashlightfov",&DAT_105217e4,0x4000);
  FUN_10432270(&DAT_10768980,(int)"r_flashlightoffsetright",&DAT_105217fc,0x4000);
  FUN_10432270(&DAT_107689d8,(int)"r_flashlightoffsetup",&DAT_10521818,0x4000);
  FUN_10432270(&DAT_10768a30,(int)"r_flashlightoffsetforward",&DAT_104f2504,0x4000);
  FUN_10432270(&DAT_10768a88,(int)"r_flashlightnear",&DAT_104fc21c,0x4000);
  FUN_10432270(&DAT_10768ae0,(int)"r_flashlightfar","1024.0",0x4000);
  FUN_10432270(&DAT_10768b38,(int)"r_flashlightconstant",&DAT_104f2504,0x4000);
  FUN_10432270(&DAT_10768b90,(int)"r_flashlightlinear","100.0",0x4000);
  FUN_10432270(&DAT_10768be8,(int)"r_flashlightquadratic",&DAT_104f2504,0x4000);
  FUN_10432270(&DAT_10768c40,(int)"r_flashlightvisualizetrace",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10768c98,(int)"r_flashlightambient",&DAT_104f2504,0x4000);
  FUN_10432270(&DAT_10768cf0,(int)"r_flashlightshadowatten",&DAT_105218fc,0x4000);
  FUN_10432270(&DAT_10768d48,(int)"r_flashlightladderdist",&DAT_1052191c,0x4000);
  FUN_10432270(&DAT_10768da0,(int)"r_flashlight_topdown",&DAT_104ef188,0);
  FUN_10432270(&DAT_10768df8,(int)"r_flashlightnearoffsetscale",&DAT_104f04fc,0x4000);
  FUN_10432270(&DAT_10768e50,(int)"r_flashlighttracedistcutoff",&DAT_1051fe2c,0);
  FUN_10432270(&DAT_10768ea8,(int)"r_flashlightbacktraceoffset",&DAT_104fc278,0x4000);
  FUN_10432270(&DAT_10768f00,(int)"ti_flashlight_brightness",&DAT_104f16d4,0x4000);
  FUN_10432270(&DAT_10768f58,(int)"r_flashlightmuzzleflashfov",&DAT_1051fe0c,0x4000);
  FUN_10432270(&DAT_107693d8,(int)"r_drawflecks",&DAT_104ef184,0);
  FUN_10432270(&DAT_10769430,(int)"r_impacts_alt_orientation",&DAT_104ef184,0);
  FUN_10432270(&DAT_107695e0,(int)"r_drawtracers",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10769638,(int)"r_drawtracers_firstperson",&DAT_104ef184,0);
  FUN_10432270(&DAT_107696b8,(int)"cl_show_splashes",&DAT_104ef184,0);
  FUN_10432270(&DAT_10769880,(int)"sv_optimizedmovement",&DAT_104ef184,0x2002);
  FUN_10432270(&DAT_10769900,(int)"g_Language",&DAT_104ef188,0x2000);
  FUN_10432270(&DAT_10769958,(int)"sk_autoaim_mode",&DAT_104ef184,0x2080);
  FUN_10432270(&DAT_107699c8,(int)"old_radiusdamage",&DAT_104f2504,0x2000);
  FUN_10432270(&DAT_1076dbe0,(int)"cl_glow_use_tolerance",&DAT_105248b4,0x6000);
  FUN_10432270(&DAT_1076dd98,(int)"r_emissiveGlow_pvis",&DAT_104ef188,0);
  FUN_10432270(&DAT_1076ddf0,(int)"r_emissive_Minimum","0.00768",0);
  FUN_10432270(&DAT_1076de70,(int)"cl_ShowSunVectors",&DAT_104ef188,0);
  FUN_10432270(&DAT_1076dec8,(int)"cl_sun_decay_rate",&DAT_10524bd4,0x4000);
  FUN_10432270(&DAT_1076e280,(int)"hidehud",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_1076e438,(int)"hud_saytext_time",&DAT_105268d8,0);
  FUN_10432270(&DAT_1076e4e8,(int)"cl_chat_active",&DAT_104ef188,0);
  FUN_10432270(&DAT_1076ee18,(int)"locator_split_maxwide_percent","0.80f",0x4000);
  FUN_10432270(&DAT_1076ee70,(int)"locator_split_len",&DAT_104f17c0,0x4000);
  FUN_10432270(&DAT_1076ef98,(int)"cam_snapto",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076f0a0,(int)"cam_idealyaw",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076f0f8,(int)"cam_idealpitch",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076f150,(int)"cam_idealdist",&DAT_1051fe84,0x80);
  FUN_10432270(&DAT_1076f1a8,(int)"cam_idealdistright",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076f200,(int)"cam_idealdistup",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076f308,(int)"c_maxpitch",&DAT_1051c57c,0x80);
  FUN_10432270(&DAT_1076f360,(int)"c_minpitch",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076f3b8,(int)"c_maxyaw",&DAT_1051fe48,0x80);
  FUN_10432270(&DAT_1076f410,(int)"c_minyaw",&DAT_10528cfc,0x80);
  FUN_10432270(&DAT_1076f468,(int)"c_maxdistance",&DAT_1052041c,0x80);
  FUN_10432270(&DAT_1076f4c0,(int)"c_mindistance",&DAT_104f44a8,0x80);
  FUN_10432270(&DAT_1076f518,(int)"c_orthowidth",&DAT_104f48e0,0x80);
  FUN_10432270(&DAT_1076f570,(int)"c_orthoheight",&DAT_104f48e0,0x80);
  FUN_10432270(&DAT_1076f5c8,(int)"c_thirdpersonshoulder","false",0x80);
  FUN_10432270(&DAT_1076f620,(int)"c_thirdpersonshoulderoffset",&DAT_10528d50,0x80);
  FUN_10432270(&DAT_1076f678,(int)"c_thirdpersonshoulderdist",&DAT_1052191c,0x80);
  FUN_10432270(&DAT_1076f6d0,(int)"c_thirdpersonshoulderheight",&DAT_105217fc,0x80);
  FUN_10432270(&DAT_1076f728,(int)"c_thirdpersonshoulderaimdist","120.0",0x80);
  FUN_10432270(&DAT_1076fb18,(int)"joy_variable_frametime",&DAT_104ef184,0);
  FUN_10432270(&DAT_1076fb70,(int)"joy_name","joystick",0x80);
  FUN_10432270(&DAT_1076fbc8,(int)"joy_advanced",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076fc20,(int)"joy_advaxisx",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076fc78,(int)"joy_advaxisy",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076fcd0,(int)"joy_advaxisz",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076fd28,(int)"joy_advaxisr",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076fd80,(int)"joy_advaxisu",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076fdd8,(int)"joy_advaxisv",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_1076fe30,(int)"joy_forwardthreshold",&DAT_10529118,0x80);
  FUN_10432270(&DAT_1076fe88,(int)"joy_sidethreshold",&DAT_10529118,0x80);
  FUN_10432270(&DAT_1076fee0,(int)"joy_pitchthreshold",&DAT_10529118,0x80);
  FUN_10432270(&DAT_1076ff38,(int)"joy_yawthreshold",&DAT_10529118,0x80);
  FUN_10432270(&DAT_1076ff90,(int)"joy_forwardsensitivity",&DAT_104ef1dc,0x80);
  FUN_10432270(&DAT_1076ffe8,(int)"joy_sidesensitivity",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_10770040,(int)"joy_pitchsensitivity",&DAT_104ef184,0x1008080);
  FUN_10432270(&DAT_10770098,(int)"joy_yawsensitivity",&DAT_104ef1dc,0x1008080);
  FUN_10432270(&DAT_107701a0,(int)"joy_response_move_vehicle",&DAT_105292b4,0);
  FUN_10432270(&DAT_10770250,(int)"joy_lowend",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_107702a8,(int)"joy_lowmap",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_10770300,(int)"joy_accelscale",&DAT_10529344,0x80);
  FUN_10432270(&DAT_10770358,(int)"joy_accelmax",&DAT_104f04fc,0x80);
  FUN_10432270(&DAT_10770460,(int)"joy_vehicle_turn_lowend",&DAT_105248b4,0);
  FUN_10432270(&DAT_107704b8,(int)"joy_vehicle_turn_lowmap",&DAT_104fc278,0);
  FUN_10432270(&DAT_10770510,(int)"joy_sensitive_step0",&DAT_104fc1dc,0x80);
  FUN_10432270(&DAT_10770568,(int)"joy_sensitive_step1",&DAT_104fc278,0x80);
  FUN_10432270(&DAT_107705c0,(int)"joy_sensitive_step2",&DAT_1052947c,0x80);
  FUN_10432270(&DAT_10770618,(int)"joy_circle_correct",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_107706c8,(int)"joy_display_input",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_10770988,(int)"joy_yawsensitivity_default","-1.25",0);
  FUN_10432270(&DAT_107709e0,(int)"joy_pitchsensitivity_default",&DAT_104f04e0,0);
  FUN_10432270(&DAT_10770a38,(int)"sv_stickysprint_default",&DAT_104ef188,0);
  FUN_10432270(&DAT_10770a90,(int)"joy_lookspin_default",&DAT_105218fc,0);
  FUN_10432270(&DAT_10770ae8,(int)"joy_cfg_custom_bindingsA",&DAT_104ef188,0x1008080);
  FUN_10432270(&DAT_10770b40,(int)"joy_cfg_custom_bindingsB",&DAT_104ef188,0x1008080);
  FUN_10432270(&DAT_10770b98,(int)"joy_cfg_preset",&DAT_104ef184,0x1008080);
  FUN_10432270(&DAT_10770cf8,(int)"joy_no_accel_jump",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_10770d50,(int)"joy_pegged",&DAT_105296b0,0);
  FUN_10432270(&DAT_10770da8,(int)"joy_virtual_peg",&DAT_104ef188,0);
  FUN_10432270(&DAT_10770e00,(int)"joy_accel_filter",&DAT_104f918c,0);
  FUN_10432270(&DAT_10770e58,(int)"joy_debug_ouput",(undefined *)0x0,0);
  FUN_10432270(&DAT_10771040,(int)"cl_anglespeedkey",&DAT_10529c4c,0);
  FUN_10432270(&DAT_10771098,(int)"cl_yawspeed",&DAT_1051ff70,0);
  FUN_10432270(&DAT_107710f0,(int)"cl_pitchspeed",&DAT_1051ffac,0);
  FUN_10432270(&DAT_10771148,(int)"cl_pitchdown",&DAT_10529c84,0x4000);
  FUN_10432270(&DAT_107711a0,(int)"cl_pitchup",&DAT_10529c98,0x4000);
  FUN_10432270(&DAT_107711f8,(int)"cl_upspeed",&DAT_10520128,0x4000);
  FUN_10432270(&DAT_10771250,(int)"lookspring",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_107712a8,(int)"lookstrafe",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_107714b8,(int)"option_duck_method",&DAT_104ef188,0x88080);
  FUN_10432270(&DAT_10771510,(int)"option_lean_method",&DAT_104ef188,0x88080);
  FUN_10432270(&DAT_10771568,(int)"round_start_reset_duck",&DAT_104ef188,0);
  FUN_10432270(&DAT_107715c0,(int)"round_start_reset_lean",&DAT_104ef188,0);
  FUN_10432270(&DAT_10772748,(int)"cl_mouseenable",&DAT_104ef184,0x80000);
  FUN_10432270(&DAT_10772850,(int)"sc_pitch_sensitivity_default",&DAT_1052aa60,0);
  FUN_10432270(&DAT_10772960,(int)"sc_yaw_sensitivity_default",&DAT_104f04fc,0);
  FUN_10432270(&DAT_10773d28,(int)"cl_jiggle_bone_invert",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10774640,(int)"r_lod",&DAT_104ef1dc,0);
  FUN_10432270(&DAT_10774698,(int)"r_shadowlod",&DAT_104ef1dc,0);
  FUN_10432270(&DAT_107746f0,(int)"r_DrawModelLightOrigin",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10776fb8,(int)"cl_colorfastpath",&DAT_104ef188,0);
  FUN_10432270(&DAT_10777180,(int)"sv_noclipaccelerate",&DAT_1052c600,0x2180);
  FUN_10432270(&DAT_107771d8,(int)"sv_noclipspeed",&DAT_1052c600,0x2180);
  FUN_10432270(&DAT_10777230,(int)"sv_specaccelerate",&DAT_1052c600,0x2180);
  FUN_10432270(&DAT_10777288,(int)"sv_specspeed",&DAT_104ef394,0x2180);
  FUN_10432270(&DAT_107772e0,(int)"sv_specnoclip",&DAT_104ef184,0x2180);
  FUN_10432270(&DAT_10777338,(int)"sv_maxspeed",&DAT_105200b0,0x2102);
  FUN_10432270(&DAT_10777390,(int)"sv_accelerate",&DAT_1051c474,0x2102);
  FUN_10432270(&DAT_107773e8,(int)"sv_airaccelerate",&DAT_1051c474,0x2102);
  FUN_10432270(&DAT_10777440,(int)"sv_wateraccelerate",&DAT_1051c474,0x2102);
  FUN_10432270(&DAT_10777498,(int)"sv_waterfriction",&DAT_104ef184,0x2102);
  FUN_10432270(&DAT_10777548,(int)"sv_rollspeed",&DAT_104fc374,0x2102);
  FUN_10432270(&DAT_10777700,(int)"sv_stepsize",&DAT_1052c800,0x2102);
  FUN_10432270(&DAT_10777860,(int)"r_VehicleViewDampen",&DAT_104ef184,0x6100);
  FUN_10432270(&DAT_107778b8,(int)"r_JeepViewDampenFreq",&DAT_1052c8e0,0x6100);
  FUN_10432270(&DAT_10777910,(int)"r_JeepViewDampenDamp",&DAT_104f04fc,0x6100);
  FUN_10432270(&DAT_10777968,(int)"r_JeepViewZHeight",&DAT_104f18a4,0x6100);
  FUN_10432270(&DAT_107779c0,(int)"r_AirboatViewDampenFreq",&DAT_1052c8e0,0x6100);
  FUN_10432270(&DAT_10777a18,(int)"r_AirboatViewDampenDamp",&DAT_104f04fc,0x6100);
  FUN_10432270(&DAT_10777a70,(int)"r_AirboatViewZHeight",&DAT_104f2504,0x6100);
  FUN_10432270(&DAT_10777bf0,(int)"mat_object_motion_blur_enable",&DAT_104ef188,0);
  FUN_10432270(&DAT_10777c48,(int)"mat_object_motion_blur_model_scale",&DAT_1052cd14,0);
  FUN_10432270(&DAT_10777f88,(int)"cl_particle_batch_mode",&DAT_104ef184,0);
  FUN_10432270(&DAT_10778178,(int)"cl_particles_show_bbox",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10778330,(int)"r_particle_sim_spike_threshold_ms",&DAT_104ef188,0);
  FUN_10432270(&DAT_10778388,(int)"r_threaded_particles",&DAT_104ef184,0);
  FUN_10432270(&DAT_107783e0,(int)"cl_particle_retire_cost",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10778438,(int)"particle_sim_alt_cores",&DAT_104f94c0,0);
  FUN_10432270(&DAT_10778490,(int)"r_particle_timescale",&DAT_104f04fc,0);
  FUN_10432270(&DAT_107784e8,(int)"cl_particle_max_count",&DAT_104ef188,0);
  FUN_10432270(&DAT_10778738,(int)"cl_particles_show_controlpoints",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10778790,(int)"cl_aggregate_particles",&DAT_104ef184,0);
  FUN_10432270(&DAT_10778a00,(int)"phys_debug_check_contacts",&DAT_104ef188,0x6000);
  FUN_10432270(&DAT_10778a58,(int)"cl_phys_block_fraction",&DAT_104fc1dc,0);
  FUN_10432270(&DAT_10778ab0,(int)"cl_phys_block_dist",&DAT_104f04fc,0);
  FUN_10432270(&DAT_10778cd0,(int)"cl_ragdoll_collide",&DAT_104ef188,0);
  FUN_10432270(&DAT_10778d70,(int)"cl_phys_show_active",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10778e00,(int)"PhysicsSimulateTicks",&DAT_1052e9c0,0x6000);
  FUN_10432270(&DAT_10778e58,(int)"PhysicsSmoothingFactor",&DAT_104f2504,0x6000);
  FUN_10432270(&DAT_10778eb0,(int)"PhysicsInitialAverageFrameTime","0.01667",0x6000);
  FUN_10432270(&DAT_1077b498,(int)"props_break_fadetime",&DAT_105146f8,8);
  FUN_10432270(&DAT_1077b4f0,(int)"cl_prop_active_gib_limit",&DAT_10520010,0);
  FUN_10432270(&DAT_1077bae8,(int)"cl_wpn_sway_interp",&DAT_104fc1dc,8);
  FUN_10432270(&DAT_1077bb40,(int)"cl_wpn_sway_scale",&DAT_104f04fc,0x4008);
  FUN_10432270(&DAT_1077bd20,(int)"cl_idealpitchscale",&DAT_1052a4e8,0x80);
  FUN_10432270(&DAT_1077bed8,(int)"cl_pred_doresetlatch",&DAT_104ef184,0);
  FUN_10432270(&DAT_1077bf30,(int)"cl_prediction_error_timestamps",&DAT_104ef188,0);
  FUN_10432270(&DAT_1077c3e0,(int)"cl_ragdoll_self_collision",&DAT_104ef184,2);
  FUN_10432270(&DAT_1077c880,(int)"g_ragdoll_maxcount",&DAT_10527564,0x2000);
  FUN_10432270(&DAT_1077c8d8,(int)"g_debug_ragdoll_removal",&DAT_104ef188,0x6000);
  FUN_10432270(&DAT_1077c980,(int)"g_ragdoll_important_maxcount",&DAT_104f94c0,0x2000);
  FUN_10432270(&DAT_1077e578,(int)"snd_sos_show_client_xmit",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_1077f280,(int)"phys_pushscale",&DAT_104ef184,0x2000);
  FUN_10432270(&DAT_1077fa10,(int)"r_visualizetraces",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10780058,(int)"scr_centertime",&DAT_104f94c0,0);
  FUN_10432270(&DAT_10781088,(int)"net_graphpos",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_107810e0,(int)"net_graphsolid",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_10781768,(int)"v_centermove",&DAT_10529118,0);
  FUN_10432270(&DAT_107817c0,(int)"v_centerspeed",&DAT_104f444c,0);
  FUN_10432270(&DAT_10781818,(int)"viewmodel_fov",&DAT_1053da14,0x4000);
  FUN_10432270(&DAT_10781920,(int)"cl_leveloverview",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10781a28,(int)"gl_clear",&DAT_104ef188,0);
  FUN_10432270(&DAT_10781c98,(int)"ss_debug_draw_player",&DAT_104ef1dc,0x4002);
  FUN_10432270(&DAT_10781ff8,(int)"r_updaterefracttexture",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_107821e8,(int)"mat_showwatertextures",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10782240,(int)"mat_wateroverlaysize",&DAT_1051fe2c,0);
  FUN_10432270(&DAT_10782298,(int)"mat_showframebuffertexture",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107822f0,(int)"mat_framebuffercopyoverlaysize",&DAT_1051fe2c,0);
  FUN_10432270(&DAT_10782348,(int)"mat_showcamerarendertarget",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107823a0,(int)"mat_camerarendertargetoverlaysize",&DAT_1051fe2c,0x4000);
  FUN_10432270(&DAT_107823f8,(int)"mat_hsv",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10782450,(int)"mat_yuv",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107824a8,(int)"cl_overdraw_test",&DAT_104ef188,0x5000);
  FUN_10432270(&DAT_107825b0,(int)"mat_wireframe",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10782608,(int)"mat_showlightmappage",&DAT_104ef1dc,0);
  FUN_10432270(&DAT_10782660,(int)"cl_drawshadowtexture",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107826b8,(int)"cl_shadowtextureoverlaysize",&DAT_10520028,0x4000);
  FUN_10432270(&DAT_10782710,(int)"r_flashlightdrawdepth",&DAT_104ef188,0);
  FUN_10432270(&DAT_10782830,(int)"mat_bloomscale",&DAT_104ef184,0x4002);
  FUN_10432270(&DAT_10782888,(int)"mat_hdr_level",&DAT_104f94c0,2);
  FUN_10432270(&DAT_107828e0,(int)"mat_bloomamount_rate","0.05f",0x4000);
  FUN_10432270(&DAT_10782990,(int)"mat_dynamic_tonemapping",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_107829e8,(int)"mat_tonemapping_occlusion_use_stencil",&DAT_104ef188,2);
  FUN_10432270(&DAT_10782a40,(int)"mat_autoexposure_max",&DAT_104f94c0,0x4000);
  FUN_10432270(&DAT_10782a98,(int)"mat_autoexposure_max_multiplier",&DAT_104f04fc,0x4000);
  FUN_10432270(&DAT_10782af0,(int)"mat_autoexposure_min",&DAT_105146f8,0x4000);
  FUN_10432270(&DAT_10782b48,(int)"mat_show_histogram",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10782ba0,(int)"mat_hdr_uncapexposure",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10782bf8,(int)"mat_force_bloom",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10782c50,(int)"mat_disable_bloom",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10782ca8,(int)"mat_debug_bloom",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10782d00,(int)"mat_colorcorrection",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10782d58,(int)"mat_accelerate_adjust_exposure_down",&DAT_1052191c,0x4000);
  FUN_10432270(&DAT_10782db0,(int)"mat_non_hdr_bloom_scalefactor",&DAT_1053f0ec,0x4002);
  FUN_10432270(&DAT_10782e08,(int)"mat_bloom_scalefactor_scalar",&DAT_104f04fc,0x4002);
  FUN_10432270(&DAT_10782e60,(int)"mat_exposure_center_region_x",&DAT_1052aa60,0x4000);
  FUN_10432270(&DAT_10782eb8,(int)"mat_exposure_center_region_y",&DAT_1053f150,0x4000);
  FUN_10432270(&DAT_10783070,(int)"mat_force_tonemap_scale",&DAT_104f2504,0x4000);
  FUN_10432270(&DAT_107830c8,(int)"mat_fullbright",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10783120,(int)"mat_grain_enable",&DAT_104ef184,0);
  FUN_10432270(&DAT_10783178,(int)"mat_blur_r",&DAT_105248b4,0);
  FUN_10432270(&DAT_107831d0,(int)"mat_blur_g",&DAT_105248b4,0);
  FUN_10432270(&DAT_10783228,(int)"mat_blur_b",&DAT_105248b4,0);
  FUN_10432270(&DAT_10783710,(int)"mat_dump_rts",&DAT_104ef188,2);
  FUN_10432270(&DAT_10783768,(int)"r_queued_post_processing",&DAT_104ef188,0);
  FUN_10432270(&DAT_107837c0,(int)"mat_postprocess_x",&DAT_1052ab64,0);
  FUN_10432270(&DAT_10783818,(int)"mat_postprocess_y",&DAT_104ef184,0);
  FUN_10432270(&DAT_10783870,(int)"mat_postprocess_enable",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_107838d0,(int)"mat_motion_blur_forward_enabled",&DAT_104ef188,0);
  FUN_10432270(&DAT_10783928,(int)"mat_motion_blur_falling_min",&DAT_104f18a4,0);
  FUN_10432270(&DAT_10783980,(int)"mat_motion_blur_falling_max",&DAT_10528d50,0);
  FUN_10432270(&DAT_107839d8,(int)"mat_motion_blur_falling_intensity",&DAT_104f04fc,0);
  FUN_10432270(&DAT_10783a30,(int)"mat_motion_blur_rotation_intensity",&DAT_104f04fc,0);
  FUN_10432270(&DAT_10783a88,(int)"mat_motion_blur_strength",&DAT_104f04fc,0);
  FUN_10432270(&DAT_10783ae0,(int)"mat_dof_enabled",&DAT_104ef184,0);
  FUN_10432270(&DAT_10783b38,(int)"mat_dof_override",&DAT_104ef188,0);
  FUN_10432270(&DAT_10783b90,(int)"mat_dof_near_blur_depth",&DAT_10528d50,0);
  FUN_10432270(&DAT_10783be8,(int)"mat_dof_near_focus_depth","100.0",0);
  FUN_10432270(&DAT_10783c40,(int)"mat_dof_far_focus_depth","250.0",0);
  FUN_10432270(&DAT_10783c98,(int)"mat_dof_far_blur_depth","1000.0",0);
  FUN_10432270(&DAT_10783cf0,(int)"mat_dof_near_blur_radius",&DAT_104f18a4,0);
  FUN_10432270(&DAT_10783d48,(int)"mat_dof_far_blur_radius",&DAT_105217fc,0);
  FUN_10432270(&DAT_10783da0,(int)"mat_dof_quality",&DAT_104ef188,0);
  FUN_10432270(&DAT_10783e50,(int)"cl_blurDebug",&DAT_104ef188,0);
  FUN_10432270(&DAT_10783ea8,(int)"cl_blurTapSize",&DAT_105146f8,0);
  FUN_10432270(&DAT_10783f00,(int)"cl_blurPasses",&DAT_104ef184,0);
  FUN_10432270(&DAT_107845a8,(int)"r_visocclusion",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10784658,(int)"r_entityclips",&DAT_104ef184,0);
  FUN_10432270(&DAT_107846b0,(int)"r_deferopaquefastclipped",&DAT_104ef184,0);
  FUN_10432270(&DAT_10784708,(int)"r_drawopaqueworld",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10784760,(int)"r_drawtranslucentworld",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10784868,(int)"r_drawviewmodel",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_107848c0,(int)"r_drawtranslucentrenderables",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10784918,(int)"r_drawopaquerenderables",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10784970,(int)"r_flashlightdepth_drawtranslucents",&DAT_104ef188,0);
  FUN_10432270(&DAT_107849c8,(int)"r_flashlightvolumetrics",&DAT_104ef184,0);
  FUN_10432270(&DAT_10784a78,(int)"r_worldlistcache",&DAT_104ef184,0);
  FUN_10432270(&DAT_10784ad0,(int)"r_drawunderwateroverlay",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10784b28,(int)"r_drawscreenoverlay",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10784bd8,(int)"fog_start",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10784c30,(int)"fog_end",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10784c88,(int)"fog_color","-1 -1 -1",0x4000);
  FUN_10432270(&DAT_10784ce0,(int)"fog_enable",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10784d38,(int)"fog_startskybox",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10784d90,(int)"fog_endskybox",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10784de8,(int)"fog_maxdensityskybox",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10784e40,(int)"fog_colorskybox","-1 -1 -1",0x4000);
  FUN_10432270(&DAT_10784e98,(int)"fog_enableskybox",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10784ef0,(int)"fog_maxdensity",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10784f48,(int)"fog_hdrcolorscale",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10784fa0,(int)"fog_hdrcolorscaleskybox",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10784ff8,(int)"r_debugcheapwater",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10785050,(int)"r_waterforceexpensive",&DAT_104ef188,0);
  FUN_10432270(&DAT_107850a8,(int)"r_waterforcereflectentities",&DAT_104ef188,0);
  FUN_10432270(&DAT_10785208,(int)"mat_drawwater",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10785260,(int)"mat_clipz",&DAT_104ef184,0);
  FUN_10432270(&DAT_107852b8,(int)"cl_drawmonitors",&DAT_104ef184,0);
  FUN_10432270(&DAT_10785310,(int)"r_eyewaterepsilon",&DAT_10540e78,0x4000);
  FUN_10432270(&DAT_107853c0,(int)"r_simpleworldmodel_waterreflections_fullscreen",&DAT_104ef188,0);
  FUN_10432270(&DAT_10785418,(int)"r_simpleworldmodel_drawforrecursionlevel_fullscreen",
  FUN_10432270(&DAT_10785470,(int)"r_simpleworldmodel_drawbeyonddistance_fullscreen",&DAT_104ef1dc,0
  FUN_10432270(&DAT_107854c8,(int)"r_simpleworldmodel_waterreflections_splitscreen",&DAT_104ef188,0)
  FUN_10432270(&DAT_10785520,(int)"r_simpleworldmodel_drawforrecursionlevel_splitscreen",
  FUN_10432270(&DAT_10785578,(int)"r_simpleworldmodel_drawbeyonddistance_splitscreen",&DAT_104ef1dc,
  FUN_10432270(&DAT_107855d0,(int)"r_simpleworldmodel_waterreflections_pip",&DAT_104ef188,0);
  FUN_10432270(&DAT_10785628,(int)"r_simpleworldmodel_drawforrecursionlevel_pip",&DAT_104ef1dc,0);
  FUN_10432270(&DAT_10785680,(int)"r_simpleworldmodel_drawbeyonddistance_pip",&DAT_104ef1dc,0);
  FUN_10432270(&DAT_10785718,(int)"r_2PassBuildDraw",&DAT_104ef184,2);
  FUN_10432270(&DAT_107923c8,(int)"mat_lpreview_mode",&DAT_104ef1dc,0x4000);
  FUN_10432270(&DAT_10792420,(int)"r_fade360style",&DAT_104ef184,0);
  FUN_10432270(&DAT_10792480,(int)"cl_brushfastpath",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_10792530,(int)"cl_modelfastpath",&DAT_104ef184,0);
  FUN_10432270(&DAT_107925e0,(int)"r_unlimitedrefract",&DAT_104ef188,0);
  FUN_10432270(&DAT_10792638,(int)"cl_tlucfastpath",&DAT_104ef184,0);
  FUN_10432270(&DAT_10792768,(int)"voice_clientdebug",&DAT_104ef188,0);
  FUN_10432270(&DAT_10793390,(int)"hud_drawhistory_time",&DAT_1052c600,0);
  FUN_10432270(&DAT_107933e8,(int)"hud_fastswitch",&DAT_104ef184,0x12);
  FUN_10432270(&DAT_107936e8,(int)"cl_leveloverviewmarker",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_10793b80,(int)"show_MapViewHeight",&DAT_104ef188,2);
  FUN_10432270(&DAT_10793c10,(int)"spec_scoreboard",&DAT_104ef188,0x88);
  FUN_10432270(&DAT_107944a0,(int)"physrecord_speed",&DAT_1052ab20,0);
  FUN_10432270(&DAT_107944f8,(int)"physrecord_stepsize",&DAT_104ef184,0);
  FUN_10432270(&DAT_107954a8,(int)"_offsetclip",&DAT_10528938,2);
  FUN_10432270(&DAT_10795500,(int)"r_debugrt",&DAT_104eefb3,8);
  FUN_10432270(&DAT_107955b0,(int)"r_debugrt_additive",&DAT_104ef188,8);
  FUN_10432270(&DAT_10795918,(int)"fx_refraction",&DAT_104ef188,0);
  FUN_10432270(&DAT_10797ed8,(int)"ui_lobby_noresults_create_msg_time",&DAT_105536ac,2);
  FUN_10432270(&DAT_10797f30,(int)"cm_current_community_map",&DAT_104ef188,0x2010);
  FUN_10432270(&DAT_10797f90,(int)"ui_fadecloud_time",&DAT_10501fdc,2);
  FUN_10432270(&DAT_107980a0,(int)"sys_attract_mode_timeout",&DAT_104f44a8,2);
  FUN_10432270(&DAT_107980f8,(int)"ui_lobby_noautostart",&DAT_104ef188,2);
  FUN_10432270(&DAT_10798150,(int)"ui_gameui_debug",&DAT_104ef188,0x80000);
  FUN_10432270(&DAT_107981a8,(int)"ui_lobby_jointimeout",&DAT_1052ce1c,2);
  FUN_10432270(&DAT_10798200,(int)"ui_fadexui_time",&DAT_105146f8,2);
  FUN_10432270(&DAT_10798528,(int)"ping_max_green",&DAT_10555efc,0);
  FUN_10432270(&DAT_10798588,(int)"ping_max_yellow",&DAT_1051fe5c,0);
  FUN_10432270(&DAT_107985e0,(int)"ping_max_red",&DAT_10520010,0);
  FUN_10432270(&DAT_10798b18,(int)"ui_virtualnav_render",&DAT_104ef188,2);
  FUN_10432270(&DAT_10798e40,(int)"cm_play_intro_video",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_10799168,(int)"cl_upgrade_convars",&DAT_104ef1dc,0x90);
  FUN_10432270(&DAT_10799398,(int)"fix_force_new_user",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079a338,(int)"z_splatter_delay",&DAT_1052ad00,0);
  FUN_10432270(&DAT_1079a390,(int)"z_splatter_delay_melee",&DAT_104fc1dc,0);
  FUN_10432270(&DAT_1079a3e8,(int)"ti_bloodsplatter",&DAT_104ef184,0x80088);
  FUN_10432270(&DAT_1079a660,(int)"cl_vip_pathbeam_length",&DAT_1056f484,0);
  FUN_10432270(&DAT_1079a6b8,(int)"ti_show_spawn_intro",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_1079a720,(int)"dev_visualise_VIPPath",(undefined *)0x0,0x4010);
  FUN_10432270(&DAT_1079a9f8,(int)"hud_deathnotice_time",&DAT_105292b4,0);
  FUN_10432270(&DAT_1079aaa8,(int)"test_killstreak_msg_type",&DAT_104ef184,0);
  FUN_10432270(&DAT_1079ab00,(int)"test_killstreak_msg_item",&DAT_104ef184,0);
  FUN_10432270(&DAT_1079abe8,(int)"debug_disable_blackout",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079acc8,(int)"ti_hitoutput_time",&DAT_104ef394,0);
  FUN_10432270(&DAT_1079aec0,(int)"cl_vote_ui_active_after_voting",&DAT_104ef184,0);
  FUN_10432270(&DAT_1079af18,(int)"cl_vote_ui_show_notification",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079b4c8,(int)"cl_planphase",&DAT_104ef188,0x804012);
  FUN_10432270(&DAT_1079b520,(int)"debug_localplayernodraw",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079b578,(int)"disable_bonecache_invalidate",&DAT_104ef184,2);
  FUN_10432270(&DAT_1079b5d0,(int)"ti_player_avoidance",&DAT_10579e28,0x4010);
  FUN_10432270(&DAT_1079b628,(int)"debug_run_autoplayer",&DAT_104ef188,0x2002);
  FUN_10432270(&DAT_1079b6d8,(int)"z_nvgdistance",(undefined *)&DAT_1051dc84,0x4002);
  FUN_10432270(&DAT_1079b7e0,(int)"cl_debug_use_glow",&DAT_104ef188,0x4002);
  FUN_10432270(&DAT_1079b838,(int)"bot_friend1",&DAT_104ef1dc,0);
  FUN_10432270(&DAT_1079b890,(int)"bot_friend2",&DAT_104ef1dc,0);
  FUN_10432270(&DAT_1079b8e8,(int)"bot_friend3",&DAT_104ef1dc,0);
  FUN_10432270(&DAT_1079d1d0,(int)"cl_addon_debug",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079d330,(int)"cl_ragdoll_fade_time",&DAT_10575e90,8);
  FUN_10432270(&DAT_1079d670,(int)"sv_bomb_radius",&DAT_1052041c,0x2000);
  FUN_10432270(&DAT_1079dc10,(int)"csoffs",&DAT_105292b4,0x12);
  FUN_10432270(&DAT_1079dc68,(int)"cl_shield_origin_lerp",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079f050,(int)"vehicle_light_radius",&DAT_10529c84,0);
  FUN_10432270(&DAT_1079f0a8,(int)"vehicle_light_offset",&DAT_1051fe5c,0);
  FUN_10432270(&DAT_1079f100,(int)"debug_show_npcdriver_status",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079f158,(int)"cl_npc_vehicle_mass_modifier",&DAT_105146f8,0);
  FUN_10432270(&DAT_1079f1b0,(int)"debug_interp_show_cars_timedelta",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079f6e8,(int)"cl_hitzone_debug",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079f740,(int)"cl_hitzone_dxquery",&DAT_104ef188,0);
  FUN_10432270(&DAT_1079fcf0,(int)"inferno_fire",&DAT_104f94c0,0);
  FUN_10432270(&DAT_1079ff18,(int)"cl_dog_origin_lerp",&DAT_1058986c,0);
  FUN_10432270(&DAT_107a02b0,(int)"hostage_ragdoll_force",&DAT_1058ad18,0);
  FUN_10432270(&DAT_107a0308,(int)"cl_hostage_watch_vip",&DAT_104ef188,0);
  FUN_10432270(&DAT_107a0360,(int)"cl_hostage_origin_lerp",&DAT_1058986c,0);
  FUN_10432270(&DAT_107a03b8,(int)"cl_glow_civ_f_b",&DAT_1051467c,2);
  FUN_10432270(&DAT_107a0410,(int)"cl_glow_civ_f_g",&DAT_1058b3a0,2);
  FUN_10432270(&DAT_107a0468,(int)"cl_glow_civ_f_r",&DAT_1058b3a0,2);
  FUN_10432270(&DAT_107a04c0,(int)"cl_glow_civ_t_b",&DAT_1058b3a0,2);
  FUN_10432270(&DAT_107a0518,(int)"cl_glow_civ_t_g",&DAT_1058b3a0,2);
  FUN_10432270(&DAT_107a0570,(int)"cl_glow_civ_t_r",&DAT_1051467c,2);
  FUN_10432270(&DAT_107a05c8,(int)"cl_glow_vip_b",&DAT_1058b3a0,2);
  FUN_10432270(&DAT_107a0620,(int)"cl_glow_vip_g",&DAT_104f918c,2);
  FUN_10432270(&DAT_107a0678,(int)"cl_glow_vip_r",&DAT_104f918c,2);
  FUN_10432270(&DAT_107a06d0,(int)"cl_glow_civ_t_r",&DAT_104f04fc,2);
  FUN_10432270(&DAT_107a0728,(int)"cl_glow_civ_t_g",&DAT_1058b428,2);
  FUN_10432270(&DAT_107a0780,(int)"cl_glow_civ_t_b",&DAT_104f2504,2);
  FUN_10432270(&DAT_107a10c8,(int)"ti_user_stat_spew",&DAT_104ef188,0x2002);
  FUN_10432270(&DAT_107a13d8,(int)"ti_backpack_debug",&DAT_104ef184,0);
  FUN_10432270(&DAT_107a18a8,(int)"mp_tournament",&DAT_104ef188,0x2100);
  FUN_10432270(&DAT_107a1b88,(int)"movement_anim_playback_minrate",&DAT_1052ad00,0);
  FUN_10432270(&DAT_107a1c58,(int)"debug_show_player_shoot_angles",&DAT_104ef188,0x2002);
  FUN_10432270(&DAT_107a26c0,(int)"vm_draw_addon",&DAT_104ef184,0);
  FUN_10432270(&DAT_107a3848,(int)"cl_dog_yawspeed",&DAT_10501fdc,0);
  FUN_10432270(&DAT_107a3960,(int)"boat_force",&DAT_104ef1dc,0x2000);
  FUN_10432270(&DAT_107a39b8,(int)"boat_brake_speed",&DAT_1052a4e8,0x2000);
  FUN_10432270(&DAT_107a3a10,(int)"boat_idle_speed",&DAT_104fc1dc,0x2000);
  FUN_10432270(&DAT_107a3ac0,(int)"boat_spring_force",&DAT_104f2504,0x2002);
  FUN_10432270(&DAT_107a3b18,(int)"boat_spring_damp",&DAT_104f2504,0x2002);
  FUN_10432270(&DAT_107a3b70,(int)"boat_spring_length",&DAT_104f2504,0x2002);
  FUN_10432270(&DAT_107a3bc8,(int)"boat_turnoverride",&DAT_104f2504,0x2002);
  FUN_10432270(&DAT_107a3c20,(int)"boat_ray_debug_client",&DAT_104ef188,0);
  FUN_10432270(&DAT_107a3da8,(int)"nullify_roll",&DAT_10520024,0x2000);
  FUN_10432270(&DAT_107a3e00,(int)"nullify_yaw",&DAT_105204c8,0x2000);
  FUN_10432270(&DAT_107a3e58,(int)"nullify_pitch",&DAT_1051ffac,0x2000);
  FUN_10432270(&DAT_107a3eb0,(int)"nullify_forward",&DAT_10515ed4,0x2000);
  FUN_10432270(&DAT_107a3f08,(int)"nullify_lateral",&DAT_105217fc,0x2000);
  FUN_10432270(&DAT_107a3f60,(int)"nullify_collective",&DAT_105217fc,0x2000);
  FUN_10432270(&DAT_107a3fb8,(int)"heli_damping_rot",&DAT_1056d1c4,0x2000);
  FUN_10432270(&DAT_107a4010,(int)"heli_damping",&DAT_105a0578,0x2000);
  FUN_10432270(&DAT_107a40c8,(int)"ti_heli_drama_pitch",&DAT_1053b594,0);
  FUN_10432270(&DAT_107a4360,(int)"ti_vehicle_authmode",&DAT_104f94c0,0x2000);
  FUN_10432270(&DAT_107a43d8,(int)"headlightpitch",&DAT_1052c600,0);
  FUN_10432270(&DAT_107a4430,(int)"headlighttexture","effects/headlight002",0);
  FUN_10432270(&DAT_107a4488,(int)"headlightfov",&DAT_104f48e0,0);
  FUN_10432270(&DAT_107a4930,(int)"cl_vehicle_smoothify_tolerance","200.0",0x80008);
  FUN_10432270(&DAT_107a49e0,(int)"cl_vehicle_smoothify_angles",&DAT_104ef188,0x80008);
  FUN_10432270(&DAT_107a4a38,(int)"cl_vehicle_smoothify_position",&DAT_104ef188,0x80008);
  FUN_10432270(&DAT_107a4a90,(int)"cl_vehicle_interp_factor",&DAT_104f04fc,0x80008);
  FUN_10432270(&DAT_107a4ae8,(int)"cl_vehicle_extrap_factor",&DAT_10501fdc,0x80008);
  FUN_10432270(&DAT_107a4f08,(int)"car_friction",&DAT_10515ed4,0);
  FUN_10432270(&DAT_107a4f60,(int)"car_force",&DAT_104ef1dc,0x2000);
  FUN_10432270(&DAT_107a4fb8,(int)"car_gearmod",&DAT_104ef1dc,0x2000);
  FUN_10432270(&DAT_107a5010,(int)"car_turnoverride",&DAT_104f2504,0x2002);
  FUN_10432270(&DAT_107a5068,(int)"carbump_torque_value",&DAT_105a2840,0x2000);
  FUN_10432270(&DAT_107a50c0,(int)"vehicle_wheel_debug_client",&DAT_104ef188,0);
  FUN_10432270(&DAT_107a5118,(int)"car_use_grip_nullify",&DAT_104ef188,0x2000);
  FUN_10432270(&DAT_107a51e0,(int)"debug_log_car_speeds",&DAT_104ef188,2);
  FUN_10432270(&DAT_107a5778,(int)"sv_grenade_size",&DAT_104f94c0,0);
  FUN_10432270(&DAT_107a5a08,(int)"sv_infiniteammo",&DAT_104ef188,0x6100);
  FUN_10432270(&DAT_107a5a60,(int)"cl_bobcycle",&DAT_105a4ca0,0);
  FUN_10432270(&DAT_107a5ab8,(int)"cl_bob",&DAT_104f04fc,0);
  FUN_10432270(&DAT_107a5f58,(int)"melee_show_swing",&DAT_104ef188,0x6000);
  FUN_10432270(&DAT_107a5fb0,(int)"melee_range",&DAT_10555efc,0x6000);
  FUN_10432270(&DAT_107a89f0,(int)"cl_glow_prop_b",&DAT_104f04fc,2);
  FUN_10432270(&DAT_107a8a48,(int)"cl_glow_prop_g",&DAT_104fc278,2);
  FUN_10432270(&DAT_107a8aa0,(int)"cl_glow_prop_r",&DAT_1051467c,2);
  FUN_10432270(&DAT_107a8af8,(int)"cl_glow_use_far_b",&DAT_104f9208,2);
  FUN_10432270(&DAT_107a8b50,(int)"cl_glow_use_far_g",&DAT_10529118,2);
  FUN_10432270(&DAT_107a8ba8,(int)"cl_glow_use_far_r",&DAT_104f9208,2);
  FUN_10432270(&DAT_107a8c00,(int)"cl_glow_use_b",&DAT_10524bd4,2);
  FUN_10432270(&DAT_107a8c58,(int)"cl_glow_use_g",&DAT_1051467c,2);
  FUN_10432270(&DAT_107a8cb0,(int)"cl_glow_use_r",&DAT_10524bd4,2);
  FUN_10432270(&DAT_107a9220,(int)"cl_rosette_debug",&DAT_104ef188,0);
  FUN_10432270(&DAT_107a9278,(int)"cl_rosette_line_inner_radius",&DAT_1053b594,0);
  FUN_10432270(&DAT_107a92d0,(int)"cl_rosette_line_outer_radius",&DAT_105c14f0,0);
  FUN_10432270(&DAT_107a9328,(int)"cl_rosette_gamepad_lockin_time",&DAT_104f918c,0);
  FUN_10432270(&DAT_107a9380,(int)"cl_rosette_gamepad_expand_time",&DAT_105146f8,0);
  FUN_10432270(&DAT_107a97f0,(int)"ti_alwaysdrawminimap",&DAT_104f94c0,0x80088);
  FUN_10432270(&DAT_107a9b70,(int)"mdlCamTweak",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107a9bc8,(int)"mdlCamFov",&DAT_104f44a8,0x4000);
  FUN_10432270(&DAT_107a9c20,(int)"mdlCamX",&DAT_104fc374,0x4000);
  FUN_10432270(&DAT_107a9c78,(int)"mdlCamY",&DAT_104f44a8,0x4000);
  FUN_10432270(&DAT_107a9cd0,(int)"mdlCamZ",&DAT_104f44a8,0x4000);
  FUN_10432270(&DAT_107a9d28,(int)"mdlCamAX",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107a9d80,(int)"mdlCamAY",&DAT_1051fefc,0x4000);
  FUN_10432270(&DAT_107a9dd8,(int)"mdlCamAZ",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107ac280,(int)"cl_planning_attributes",&DAT_104ef184,0x80080);
  FUN_10432270(&DAT_107ac560,(int)"r_RainSplashPercentage",&DAT_10528900,0x4000);
  FUN_10432270(&DAT_107ac668,(int)"r_RainHack",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107ac6c0,(int)"r_RainRadius",&DAT_10530430,0x4000);
  FUN_10432270(&DAT_107acfa8,(int)"r_raindensity","0.001",0x4000);
  FUN_10432270(&DAT_107ad000,(int)"r_rainwidth",&DAT_105146f8,0x4000);
  FUN_10432270(&DAT_107ad058,(int)"r_rainlength",&DAT_105dcb90,0x4000);
  FUN_10432270(&DAT_107ad0b0,(int)"r_rainspeed","600.0f",0x4000);
  FUN_10432270(&DAT_107ad108,(int)"r_rainalpha",&DAT_104fc278,0x4000);
  FUN_10432270(&DAT_107ad160,(int)"r_rainalphapow",&DAT_1052a4e8,0x4000);
  FUN_10432270(&DAT_107add20,(int)"cl_smoke_fog_percent",&DAT_1051c7b0,0x4002);
  FUN_10432270(&DAT_107add78,(int)"cl_smoke_near",&DAT_10501c5c,0x4002);
  FUN_10432270(&DAT_107addd0,(int)"cl_smoke_far",&DAT_1051fe5c,0x4002);
  FUN_10432270(&DAT_107ade28,(int)"cl_smoke_alpha",&DAT_104f04fc,0x4002);
  FUN_10432270(&DAT_107ae0e0,(int)"cl_sporeclipdistance",&DAT_1052041c,0x4008);
  FUN_10432270(&DAT_107b34e0,(int)"func_break_max_pieces",&DAT_1052ab20,0x2080);
  FUN_10432270(&DAT_107b3590,(int)"cl_fasttempentcollision",&DAT_1052c600,0);
  FUN_10432270(&DAT_107b4ac8,(int)"muzzleflash_light",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_107b4b68,(int)"tracer_extra",&DAT_104ef184,0);
  FUN_10432270(&DAT_107c0648,(int)"BlendBonesMode",&DAT_104f94c0,0x2000);
  FUN_10432270(&DAT_107d3ea0,(int)"cloth_windage_multiplier",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_107d3f30,(int)"cloth_wind",&DAT_104ef188,0);
  FUN_10432270(&DAT_107d4008,(int)"cloth_wind_pitch",&DAT_104ef188,0);
  FUN_10432270(&DAT_107d4110,(int)"r_eyegloss",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_107d4168,(int)"r_nohw",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107d41c0,(int)"r_eyes",&DAT_104ef184,0);
  FUN_10432270(&DAT_107d4220,(int)"mat_softwareskin",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107d4278,(int)"r_eyesize",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_107d42d0,(int)"r_eyeglintlodpixels",&DAT_104ef188,0);
  FUN_10432270(&DAT_107d4328,(int)"r_showenvcubemap",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107d4380,(int)"r_teeth",&DAT_104ef184,0);
  FUN_10432270(&DAT_107d43d8,(int)"mat_normals",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107d4430,(int)"r_eyemove",&DAT_104ef184,0x80);
  FUN_10432270(&DAT_107d4488,(int)"r_rootlod",&DAT_104ef188,0x804002);
  FUN_10432270(&DAT_107d44f0,(int)"r_eyeshift_z",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_107d4548,(int)"r_flex",&DAT_104ef184,0);
  FUN_10432270(&DAT_107d45a0,(int)"r_nosw",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107d45f8,(int)"r_maxmodeldecal",&DAT_10501c5c,0);
  FUN_10432270(&DAT_107d4650,(int)"r_drawentities",&DAT_104ef184,0x4000);
  FUN_10432270(&DAT_107d46a8,(int)"r_modelwireframedecal",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107d4700,(int)"r_skin",&DAT_104ef188,0x4000);
  FUN_10432270(&DAT_107d4758,(int)"r_eyeshift_x",&DAT_104ef188,0x80);
  FUN_10432270(&DAT_107d47b0,(int)"r_eyeshift_y",&DAT_104ef188,0x80);
  FUN_10432330(&local_18,"ti_holiday");
  FUN_10432330(&local_4c,"mat_software_aa_strength");
  FUN_10432330(&local_c,"sv_password");
  FUN_10432330(&local_c,"ti_tournament");
  FUN_10432330(local_10,"developer");
  FUN_10432330(local_10,"snd_musicvolume");
  FUN_10432330(local_10,"sv_infiniteammo");
  FUN_10432330(local_14,"cl_pitchdown");
  FUN_10432330(local_14,"mat_queue_mode");
  FUN_10432330(local_14,"sv_infiniteammo");
  FUN_10432330(local_14,"sv_maxspeed");
  FUN_10432330(local_18,"debug_disable_blackout");
  FUN_10432330(local_18,"r_flashlightscissor");
  FUN_10432330(local_18,"sv_infiniteammo");
  FUN_10432330(local_18,"sv_maxspeed");
  FUN_10432330(local_1c,"cl_mouselook_roll_compensation");
  FUN_10432330(local_2c,"snd_musicvolume");
  FUN_10432330(local_90,"mat_motion_blur_enabled");
  FUN_10432330(local_c,"bot_allow_grenades");
  FUN_10432330(local_c,"bot_allow_machine_guns");
  FUN_10432330(local_c,"bot_allow_pistols");
  FUN_10432330(local_c,"bot_allow_rifles");
  FUN_10432330(local_c,"bot_allow_rogues");
  FUN_10432330(local_c,"bot_allow_shotguns");
  FUN_10432330(local_c,"bot_allow_snipers");
  FUN_10432330(local_c,"bot_allow_sub_machine_guns");
  FUN_10432330(local_c,"bot_chatter");
  FUN_10432330(local_c,"bot_defer_to_human");
  FUN_10432330(local_c,"bot_join_after_player");
  FUN_10432330(local_c,"bot_join_team");
  FUN_10432330(local_c,"bot_prefix");
  FUN_10432330(local_c,"cl_pitchup");
  FUN_10432330(local_c,"fx_drawimpactdust");
  FUN_10432330(local_c,"sv_infiniteammo");
  FUN_10432330(local_c,"sv_maxspeed");
  FUN_10432330(local_f0,"sv_debug_player_use");
  FUN_104323b0(&local_10,"cl_hud_minmode",'\x01');
  FUN_104323d0(&local_18,(int)"option_duck_method");
  FUN_104323d0(&local_18,(int)"option_lean_method");
  FUN_104332d0(&DAT_1077b598,"gameui");
  FUN_104332f0(&DAT_107132d0,FUN_10041c10,"ClientRenderTargets001");
  FUN_104332f0(&DAT_10730ebc,FUN_100cfaf0,"GameClientExports001");
  FUN_104332f0(&DAT_10730ee0,FUN_100cfad0,"VClientDllSharedAppSystems001");
  FUN_104332f0(&DAT_10730eec,FUN_100cfb00,"VClient016");
  FUN_104332f0(&DAT_10734784,FUN_100cfae0,"VCLIENTMATERIALSYSTEM001");
  FUN_104332f0(&DAT_1073515c,FUN_100d5fb0,"ClientVirtualReality001");
  FUN_104332f0(&DAT_10765db0,FUN_100d7380,"VClientEntityList003");
  FUN_104332f0(&DAT_107661f8,FUN_100dd720,"ClientLeafSystem002");
  FUN_104332f0(&DAT_10766204,FUN_100dd710,"ClientAlphaPropertyMgrV001");
  FUN_104332f0(&DAT_10768428,FUN_101009b0,"IEffects001");
  FUN_104332f0(&DAT_107788dc,FUN_101527c0,"VParticleSystemQuery004");
  FUN_104332f0(&DAT_1077e230,FUN_101783b0,"RenderToRTHelper001");
  FUN_104332f0(&DAT_107949b0,FUN_101d5b70,"ClientRenderTargets001");
  FUN_104332f0(&DAT_10795ba4,FUN_101efa90,"GameConsole004");
  FUN_104332f0(&DAT_10795be8,FUN_101f01b0,"GameUI011");
  FUN_104332f0(&DAT_1079738c,FUN_101f3fe0,"RunGameEngine005");
  FUN_104332f0(&DAT_10797c44,FUN_101f80e0,"VGuiModuleLoader003");
  FUN_104332f0(&DAT_1079d1c0,FUN_10274f90,"VClientPrediction001");
  FUN_104332f0(&DAT_107b4c80,FUN_1035bf00,"VCLIENTTOOLS001");
  FUN_10435540(&DAT_1083dad8,0x5c,"\"",0xb,(int)&DAT_106fb2c8);
  FUN_10435540(&DAT_1083e4f8,0x7f,"\"",1,(int)&DAT_106fb320);
  FUN_10437be0(&DAT_10765fd0,0x24124,1,2,"CClientRenderablesList pool",0);
  FUN_10437be0(&DAT_10778f08,0x14,0x800,0,"g_EdictTouchLinks",0);
  FUN_10437be0(&DAT_10778f38,0xc,0x800,0,"g_EntityGroundLinks",0);
  FUN_10437be0(&DAT_1077e844,0x84,0x40,1,"CSoundPatch pool",0);
  FUN_10437be0(&DAT_1077e878,0x18,0x20,1,"SoundCommand_t pool",0);
  FUN_10437be0(param_1 + 0x6f,0x20,0x400,2,"CClientAlphaProperty",0);
  FUN_10437be0(param_1 + 9,0x20,0x20,1,"CPanelMessageMapDictionary::m_PanelMessageMapPool",0);
  FUN_10437be0(param_1 + 9,0x48,0x20,1,"CPanelKeyBindingMapDictionary::m_PanelKeyBindingMapPool",0);
  FUN_10438d50(param_1 + 4,(byte *)"CModelRenderSystem::m_BoneToWorld",0x100000,0x8000,0,0x20);
  FUN_1043a570((void *)((int)this + 0x1bc),"FreezeFrame_FullScreen","Other textures",this_01);
  FUN_1043a5d0(&DAT_107923c4,"engine/writez","Other textures",1);
  FUN_1043a5d0((void *)((int)param_1 + 0x6c),pcVar7,"Other textures",1);
  FUN_1043a5d0((void *)((int)param_1 + 0x70),"debug/debugspritewireframe","Other textures",1);
  FUN_1043a5d0((void *)((int)this + 0x12280),"vgui/white","Other textures",1);
  FUN_1043a5d0((void *)((int)this + 0x1c0),"debug/debugtranslucentsinglecolor","Other textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x3fc),"vgui/black","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x400),"sprites/scope_ll","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x404),"sprites/scope_detail1","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x408),"sprites/scope_detail2","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x40c),"sprites/g36_scope_detail1","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x410),"sprites/g36_scope_detail2","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x414),"sprites/acog_detail1","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x418),"sprites/nvg_overlay","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x428),"sprites/reddot","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x42c),"sprites/reddot_cb","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x430),"sprites/holosight","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x434),"vgui/grenade_shockwave","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x438),"vgui/magazines/flashbang","VGUI textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x44),"debug/debugempty","Other textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x48),"engine/shadowbuild","Other textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x680),"debug/debugtranslucentsinglecolor","Other textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x684),"engine/modulatesinglecolor","Other textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x6c),pcVar4,"Other textures",1);
  FUN_1043a5d0((void *)(param_1 + 0x8cc),"vgui/white","Other textures",1);
  FUN_1043a5d0(param_1 + 5,"decals/simpleshadow","Decal textures",1);
  FUN_1043a5d0(this,"engine/writez","VGUI textures",1);
  FUN_1043a5d0(this_00,param_3,"ClientEffect textures",1);
  FUN_1043a640((void *)((int)this + 0x460),"potterywheelpanelwireframe",this_01);
  FUN_1043a640((void *)(param_1 + 0xc),"engine/filmdust",puVar2);
  FUN_1043a640((void *)(param_1 + 8),"engine/filmgrain",puVar2);
  FUN_1043a6c0((void *)((int)this + 0x28),"effects/muzzleflash_light","Other textures",1,0x80000);
  FUN_1043a6c0((void *)((int)this + 0x70),"effects/nvglight","Other textures",1,0);
  FUN_1043a6c0((void *)(param_1 + 0x40),"engine/defaultcubemap","CubeMap textures",1,0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HUDHealthVehicle",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HUDPlayerHitOutput",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudClock",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudDamageIndicator",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudDeathNotice",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudDisplayBonuses",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudGrenades",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudHealth",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudHoldingObject",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudMenu",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudMessage",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudMiniMap",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudMissionStatus",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudTICrosshair",0);
  FUN_1043f640((void *)((int)this + 0x224),0,"HudVoiceSelfStatus",0);
  FUN_1043f640((void *)((int)this + 0x230),0,"HudWeaponSelection",0);
  FUN_1043f640(this,0,"CDebugOverlay",0);
  FUN_1043f640(this,0,"CFPSPanel",0);
  FUN_1043f640(this,0,"CMessageCharsPanel",0);
  FUN_1043f640(this,0,"CNetGraphPanel",0);
  FUN_1043f640(this,0,"DragDropHelper",0);
  FUN_1043f640(this,0,"HudFullscreen",0);
  FUN_1043f640(this,0,"InlineEditPanel",0);
  FUN_1043f640(this,0,"TIRootPanel",0);
  FUN_1043f640(this,param_1,"ToastManager",0);
  FUN_1043f640(this,param_1,"TreeNode",0);
  FUN_1043f640(this,param_1,"TreeNodeDropPanel",0);
  FUN_1043f640(this_00,0,"HudOBJLocator",0);
  FUN_1043f640(this_00,0,"HudVoiceStatus",0);
  FUN_1044e5f0((void *)((int)this + 0x224),"SourceScheme");
  FUN_1044e5f0(this,"ChatScheme");
  FUN_1044e5f0(this,"ClientScheme");
  FUN_1044e5f0(this,"SourceScheme");
  FUN_1044e5f0(this,"basemodui_scheme");
  FUN_1044e5f0(this_00,"ClientScheme");
  FUN_1044e5f0(this_00,"SourceScheme");
  FUN_1044f9a0((int *)"AchievementGenericPanelList");
  FUN_1044f9a0((int *)"Achievements");
  FUN_1044f9a0((int *)"AnimatingImagePanel");
  FUN_1044f9a0((int *)"Audio");
  FUN_1044f9a0((int *)"AudioVideo");
  FUN_1044f9a0((int *)"BaseInputDialog");
  FUN_1044f9a0((int *)"BaseModHybridButton");
  FUN_1044f9a0((int *)"BaseModMenuBackground");
  FUN_1044f9a0((int *)"BorderedPanel");
  FUN_1044f9a0((int *)"BuildModeDialog");
  FUN_1044f9a0((int *)"Button");
  FUN_1044f9a0((int *)"CAdvancedVideo");
  FUN_1044f9a0((int *)"CAvatarImagePanel");
  FUN_1044f9a0((int *)"CBackpackSlotItem");
  FUN_1044f9a0((int *)"CBackpack_ContentsList");
  FUN_1044f9a0((int *)"CBaseHudChat");
  FUN_1044f9a0((int *)"CBaseItemPurchasingPopup");
  FUN_1044f9a0((int *)"CBaseModFooterPanel");
  FUN_1044f9a0((int *)"CBaseModFrame");
  FUN_1044f9a0((int *)"CBaseModPanel");
  FUN_1044f9a0((int *)"CBaseModTransitionPanel");
  FUN_1044f9a0((int *)"CBaseModelPanel");
  FUN_1044f9a0((int *)"CBaseViewport");
  FUN_1044f9a0((int *)"CBuildModeNavCombo");
  FUN_1044f9a0((int *)"CCenterStringLabel");
  FUN_1044f9a0((int *)"CChatPanel");
  FUN_1044f9a0((int *)"CChatRichText");
  FUN_1044f9a0((int *)"CClientScoreBoardDialog");
  FUN_1044f9a0((int *)"CConsoleDialog");
  FUN_1044f9a0((int *)"CConsolePanel");
  FUN_1044f9a0((int *)"CContextMenuBase");
  FUN_1044f9a0((int *)"CCreateMultiplayerGameBotPage");
  FUN_1044f9a0((int *)"CCreateMultiplayerGameDialog");
  FUN_1044f9a0((int *)"CCreateMultiplayerGameServerPage");
  FUN_1044f9a0((int *)"CCvarSlider");
  FUN_1044f9a0((int *)"CCvarToggleCheckButton");
  FUN_1044f9a0((int *)"CDialogListButton");
  FUN_1044f9a0((int *)"CDragDropHelperPanel");
  FUN_1044f9a0((int *)"CDummyPanel");
  FUN_1044f9a0((int *)"CEORTeamScores");
  FUN_1044f9a0((int *)"CExButton");
  FUN_1044f9a0((int *)"CExImageButton");
  FUN_1044f9a0((int *)"CExLabel");
  FUN_1044f9a0((int *)"CExRichText");
  FUN_1044f9a0((int *)"CExplanationPopup");
  FUN_1044f9a0((int *)"CExtrasDialog");
  FUN_1044f9a0((int *)"CFPSPanel");
  FUN_1044f9a0((int *)"CFadeOutStartGame");
  FUN_1044f9a0((int *)"CFadeOutToEconUI");
  FUN_1044f9a0((int *)"CFilterComboBox");
  FUN_1044f9a0((int *)"CFilterablePanelListPanel");
  FUN_1044f9a0((int *)"CFooterBitmapButton");
  FUN_1044f9a0((int *)"CFriendsListPanel");
  FUN_1044f9a0((int *)"CGameConsoleDialog");
  FUN_1044f9a0((int *)"CGammaDialog");
  FUN_1044f9a0((int *)"CHUDHealthVehicle");
  FUN_1044f9a0((int *)"CHUDMissionStatus");
  FUN_1044f9a0((int *)"CHUDPlayerHitOutput");
  FUN_1044f9a0((int *)"CHudAmmo");
  FUN_1044f9a0((int *)"CHudChatHistory");
  FUN_1044f9a0((int *)"CHudClock");
  FUN_1044f9a0((int *)"CHudDamageIndicator");
  FUN_1044f9a0((int *)"CHudDisplayBonuses");
  FUN_1044f9a0((int *)"CHudFullscreen");
  FUN_1044f9a0((int *)"CHudGamePanel");
  FUN_1044f9a0((int *)"CHudGrenades");
  FUN_1044f9a0((int *)"CHudHealth");
  FUN_1044f9a0((int *)"CHudHoldingObject");
  FUN_1044f9a0((int *)"CHudMenu");
  FUN_1044f9a0((int *)"CHudMessage");
  FUN_1044f9a0((int *)"CHudMiniMap");
  FUN_1044f9a0((int *)"CHudNumericDisplay");
  FUN_1044f9a0((int *)"CHudOBJLocator");
  FUN_1044f9a0((int *)"CHudPanelRoundWin");
  FUN_1044f9a0((int *)"CHudTICrosshair");
  FUN_1044f9a0((int *)"CHudVoiceSelfStatus");
  FUN_1044f9a0((int *)"CHudVoiceStatus");
  FUN_1044f9a0((int *)"CHudVote");
  FUN_1044f9a0((int *)"CHudWeaponSelection");
  FUN_1044f9a0((int *)"CIconPanel");
  FUN_1044f9a0((int *)"CInfoLabel");
  FUN_1044f9a0((int *)"CInfoListItem");
  FUN_1044f9a0((int *)"CInventoryItem");
  FUN_1044f9a0((int *)"CItemButton");
  FUN_1044f9a0((int *)"CItemPreviewPanel");
  FUN_1044f9a0((int *)"CKeyBindings");
  FUN_1044f9a0((int *)"CKeyLabel");
  FUN_1044f9a0((int *)"CLoadoutSlotLabel");
  FUN_1044f9a0((int *)"CLoadoutSlotLabelItemImage");
  FUN_1044f9a0((int *)"CLoadoutSlotLabelItemLabel");
  FUN_1044f9a0((int *)"CLoadoutSlotPanel");
  FUN_1044f9a0((int *)"CLoadoutSlotPreview");
  FUN_1044f9a0((int *)"CLoadoutSlotTitleLabel");
  FUN_1044f9a0((int *)"CLocatorPanel");
  FUN_1044f9a0((int *)"CMDLPanel");
  FUN_1044f9a0((int *)"CMapOverview");
  FUN_1044f9a0((int *)"CMouseMessageForwardingPanel");
  FUN_1044f9a0((int *)"CMoviePlayer");
  FUN_1044f9a0((int *)"CNavProgress");
  FUN_1044f9a0((int *)"CNonFocusableMenu");
  FUN_1044f9a0((int *)"CNotificationQueuePanel");
  FUN_1044f9a0((int *)"CNotificationToastControl");
  FUN_1044f9a0((int *)"CNotificationToastManager");
  FUN_1044f9a0((int *)"CNotificationsPresentPanel");
  FUN_1044f9a0((int *)"CPanelListPanel");
  FUN_1044f9a0((int *)"CPlanCreationMenu");
  FUN_1044f9a0((int *)"CPlayerPreviewPanel");
  FUN_1044f9a0((int *)"CPolygonButton");
  FUN_1044f9a0((int *)"CPopUp_Purchase_Buy");
  FUN_1044f9a0((int *)"CPotteryWheelPanel");
  FUN_1044f9a0((int *)"CRadialButton");
  FUN_1044f9a0((int *)"CRadialMenu");
  FUN_1044f9a0((int *)"CRadialMenuPanel");
  FUN_1044f9a0((int *)"CRequisitionComboBox");
  FUN_1044f9a0((int *)"CRichTextWithScrollbarBorders");
  FUN_1044f9a0((int *)"CRoundWinHeader");
  FUN_1044f9a0((int *)"CRoundWinPanel");
  FUN_1044f9a0((int *)"CRoundWinPersonalStats");
  FUN_1044f9a0((int *)"CRoundWinScores");
  FUN_1044f9a0((int *)"CSDKTextWindow");
  FUN_1044f9a0((int *)"CScoreHeader");
  FUN_1044f9a0((int *)"CScoreListItem");
  FUN_1044f9a0((int *)"CScoreListPanel");
  FUN_1044f9a0((int *)"CSectionHeader");
  FUN_1044f9a0((int *)"CSlotItem");
  FUN_1044f9a0((int *)"CSmallTextEntry");
  FUN_1044f9a0((int *)"CSoundTest");
  FUN_1044f9a0((int *)"CSpectatorGUI");
  FUN_1044f9a0((int *)"CSpectatorPlayerItem");
  FUN_1044f9a0((int *)"CSpectatorPlayerList");
  FUN_1044f9a0((int *)"CTIFreezePanel");
  FUN_1044f9a0((int *)"CTIGamePanel");
  FUN_1044f9a0((int *)"CTIHudChat");
  FUN_1044f9a0((int *)"CTIHudChatInputLine");
  FUN_1044f9a0((int *)"CTIHudChatLine");
  FUN_1044f9a0((int *)"CTIItemAttributePanel");
  FUN_1044f9a0((int *)"CTIItemAttributesPanel");
  FUN_1044f9a0((int *)"CTILocalPlayerPlanPanel");
  FUN_1044f9a0((int *)"CTIMDLPanel");
  FUN_1044f9a0((int *)"CTINotificationToast");
  FUN_1044f9a0((int *)"CTIScoreboard");
  FUN_1044f9a0((int *)"CTISpectatorGUI");
  FUN_1044f9a0((int *)"CTISpectatorMenu");
  FUN_1044f9a0((int *)"CTISquadButton");
  FUN_1044f9a0((int *)"CTITeamMenu");
  FUN_1044f9a0((int *)"CTIUserStatContainer");
  FUN_1044f9a0((int *)"CTIUserStatLabel");
  FUN_1044f9a0((int *)"CTeamListPanel");
  FUN_1044f9a0((int *)"CTeamMenu");
  FUN_1044f9a0((int *)"CTextWindow");
  FUN_1044f9a0((int *)"CTimeLabel");
  FUN_1044f9a0((int *)"CTipPanel");
  FUN_1044f9a0((int *)"CTransitionScreen");
  FUN_1044f9a0((int *)"CTreeViewListControl");
  FUN_1044f9a0((int *)"CVoiceListItem");
  FUN_1044f9a0((int *)"CVoiceListPanel");
  FUN_1044f9a0((int *)"CVoicePlayerListContext");
  FUN_1044f9a0((int *)"CVoteSetupDialog");
  FUN_1044f9a0((int *)"CWeaponStatsPanel");
  FUN_1044f9a0((int *)"CheckButton");
  FUN_1044f9a0((int *)"CircularProgressBar");
  FUN_1044f9a0((int *)"ClickPanel");
  FUN_1044f9a0((int *)"ClientModeTINormalFullscreen");
  FUN_1044f9a0((int *)"ComboBox");
  FUN_1044f9a0((int *)"CommandMenu");
  FUN_1044f9a0((int *)"ContextLabel");
  FUN_1044f9a0((int *)"ContinuousProgressBar");
  FUN_1044f9a0((int *)"ControllerOptions");
  FUN_1044f9a0((int *)"ControllerOptionsButtons");
  FUN_1044f9a0((int *)"ControllerOptionsSticks");
  FUN_1044f9a0((int *)"CountdownLabel");
  FUN_1044f9a0((int *)"CvarToggleCheckButton");
  FUN_1044f9a0((int *)"Divider");
  FUN_1044f9a0((int *)"DropDownMenu");
  FUN_1044f9a0((int *)"EditablePanel");
  FUN_1044f9a0((int *)"ExclusiveEditablePanel");
  FUN_1044f9a0((int *)"ExpandButton");
  FUN_1044f9a0((int *)"FileNameComboBox");
  FUN_1044f9a0((int *)"FileOpenDialog");
  FUN_1044f9a0((int *)"FlyoutMenu");
  FUN_1044f9a0((int *)"Frame");
  FUN_1044f9a0((int *)"FrameSystemButton");
  FUN_1044f9a0((int *)"FullscreenTIViewport");
  FUN_1044f9a0((int *)"GameModes");
  FUN_1044f9a0((int *)"GenericConfirmation");
  FUN_1044f9a0((int *)"GenericPanelList");
  FUN_1044f9a0((int *)"GenericWaitScreen");
  FUN_1044f9a0((int *)"GraphPanel");
  FUN_1044f9a0((int *)"HorizontalGauge");
  FUN_1044f9a0((int *)"ImagePanel");
  FUN_1044f9a0((int *)"ImageProgressBar");
  FUN_1044f9a0((int *)"InGameMainMenu");
  FUN_1044f9a0((int *)"InputDialog");
  FUN_1044f9a0((int *)"KeyboardMouse");
  FUN_1044f9a0((int *)"KilledByPanel");
  FUN_1044f9a0((int *)"Label");
  FUN_1044f9a0((int *)"ListPanel");
  FUN_1044f9a0((int *)"ListViewItem");
  FUN_1044f9a0((int *)"ListViewPanel");
  FUN_1044f9a0((int *)"LoadingProgress");
  FUN_1044f9a0((int *)"MainMenu");
  FUN_1044f9a0((int *)"MarqueeLabel");
  FUN_1044f9a0((int *)"MenuBar");
  FUN_1044f9a0((int *)"MenuButton");
  FUN_1044f9a0((int *)"MenuItem");
  FUN_1044f9a0((int *)"MenuSeparator");
  FUN_1044f9a0((int *)"MessageBox");
  FUN_1044f9a0((int *)"MessagingPanel");
  FUN_1044f9a0((int *)"Multiplayer");
  FUN_1044f9a0((int *)"Options");
  FUN_1044f9a0((int *)"PageTab");
  FUN_1044f9a0((int *)"Panel");
  FUN_1044f9a0((int *)"PanelListPanel");
  FUN_1044f9a0((int *)"PanelListPanel2");
  FUN_1044f9a0((int *)"Panel_PassNavigationToParent");
  FUN_1044f9a0((int *)"PasswordEntry");
  FUN_1044f9a0((int *)"PercentageCroppedImageLabel");
  FUN_1044f9a0((int *)"ProgressBar");
  FUN_1044f9a0((int *)"PropertyBox");
  FUN_1044f9a0((int *)"PropertyDialog");
  FUN_1044f9a0((int *)"PropertyPage");
  FUN_1044f9a0((int *)"PropertySheet");
  FUN_1044f9a0((int *)"RadioButton");
  FUN_1044f9a0((int *)"RichText");
  FUN_1044f9a0((int *)"RichTextInterior");
  FUN_1044f9a0((int *)"ScalableImagePanel");
  FUN_1044f9a0((int *)"ScrollBar");
  FUN_1044f9a0((int *)"ScrollBarSlider");
  FUN_1044f9a0((int *)"ScrollableEditablePanel");
  FUN_1044f9a0((int *)"SectionedListPanel");
  FUN_1044f9a0((int *)"Slider");
  FUN_1044f9a0((int *)"SliderControl");
  FUN_1044f9a0((int *)"TIAvatarSelectionList");
  FUN_1044f9a0((int *)"TIButton");
  FUN_1044f9a0((int *)"TICheckButton");
  FUN_1044f9a0((int *)"TIConVarCheckButton");
  FUN_1044f9a0((int *)"TIGameOptions");
  FUN_1044f9a0((int *)"TIHorizontalList");
  FUN_1044f9a0((int *)"TIHudDeathNotice");
  FUN_1044f9a0((int *)"TIImageButton");
  FUN_1044f9a0((int *)"TIImageButtonToggle");
  FUN_1044f9a0((int *)"TILocalInfoLabel");
  FUN_1044f9a0((int *)"TIMainMenuLocalUserInfoContainer");
  FUN_1044f9a0((int *)"TIMainMenuSocialContainer");
  FUN_1044f9a0((int *)"TIMessageBox");
  FUN_1044f9a0((int *)"TIPageTab");
  FUN_1044f9a0((int *)"TIPopUp_Base");
  FUN_1044f9a0((int *)"TIPropertyPage");
  FUN_1044f9a0((int *)"TIPropertySheet");
  FUN_1044f9a0((int *)"TIRadioButton");
  FUN_1044f9a0((int *)"TIRankListFrame");
  FUN_1044f9a0((int *)"TIRichText");
  FUN_1044f9a0((int *)"TIScrollBar");
  FUN_1044f9a0((int *)"TITabContainer");
  FUN_1044f9a0((int *)"TIUserAvatarPanel");
  FUN_1044f9a0((int *)"TIViewport");
  FUN_1044f9a0((int *)"TIVoiceControl");
  FUN_1044f9a0((int *)"TextEntry");
  FUN_1044f9a0((int *)"ToggleButton");
  FUN_1044f9a0((int *)"TreeNode");
  FUN_1044f9a0((int *)"TreeNodeDropPanel");
  FUN_1044f9a0((int *)"TreeNodeText");
  FUN_1044f9a0((int *)"TreeView");
  FUN_1044f9a0((int *)"URLButton");
  FUN_1044f9a0((int *)"URLLabel");
  FUN_1044f9a0((int *)"Video");
  FUN_1044f9a0((int *)"VideoPanel");
  FUN_1044f9a0((int *)"VoteBarPanel");
  FUN_1044f9a0((int *)"VoteOptions");
  FUN_1044f9a0((int *)"XboxLiveOptions");
  FUN_1044f9e0(&DAT_10840278,(int *)"AnimationController");
  FUN_10452a40((void *)((int)this + 0x224),0,"HudPanelRoundWin",0);
  FUN_10452a40((void *)((int)this + 0x224),0,"NotificationQueuePanel",0);
  FUN_10452a40(this,0,"CBaseModPanel",0);
  FUN_10452a40(this,0,"CBaseViewport",0);
  FUN_10452a40(this,0,"CHudVote",0);
  FUN_10452a40(this,0,"CLoadingDiscPanel",0);
  FUN_10452a40(this,0,"FreezePanel",0);
  FUN_10452a40(this,0,"VideoPanel",0);
  FUN_10452a40(this,0,"scores",0);
  FUN_10452a40(this,param_1,"NotificationToast",0);
  FUN_10452a40(this,param_1,"NotificationsPresentPanel",0);
  FUN_10452a40(this_00,0,"HudChat",0);
  FUN_10452a40(this_00,0,"HudGamePanel",0);
  FUN_10452a40(this_00,0,"RadialMenu",0);
  FUN_10453600(this,"resource/CreateMultiplayerGameBotPage.res",0,0,0);
  FUN_10453600(this,"resource/CreateMultiplayerGameGameplayPage.res",0,0,0);
  FUN_10453600(this,"resource/CreateMultiplayerGameServerPage.res",0,0,0);
  FUN_10453600(this,"resource/LoadingDiscPanel.res",0,0,0);
  FUN_10453600(this,"resource/UI/ScoreBoard.res",0,0,0);
  FUN_10453600(this,"resource/UI/basemodui/SliderControl.res",0,0,0);
  FUN_10453600(this,"resource/fixmenu/Popups/objects/socialtoast.res",&DAT_104eefa0,0,0);
  FUN_10453600(this,"resource/fixmenu/contextmenus/player_context.res",0,0,0);
  FUN_10453600(this,"resource/ingame/BottomSpectator.res",0,0,0);
  FUN_10453600(this,"resource/ingame/GamePanelSlotLabel.res",0,0,0);
  FUN_10453600(this,"resource/ingame/killedbypanel.res",0,0,0);
  FUN_10453600(this,"resource/ingame/roundwinpanel.res",0,0,0);
  FUN_10453600(this,"resource/ingame/scorelistitem.res",0,0,0);
  FUN_10453600(this,"resource/ingame/tiscoreboard.res",0,0,0);
  FUN_10453670(this,"BuildModeDialog",0);
  FUN_10453f60(this,(byte *)"ServerNameEdit",pcVar8);
  FUN_10454090(this,(uint *)"gametype","");
  FUN_10454090(this,(uint *)"roomname","");
  FUN_104540e0(this,(uint *)"curkillct",0);
  FUN_104540e0(this,(uint *)"curkillt",0);
  FUN_104540e0(this,(uint *)"curmatch",0);
  FUN_104540e0(this,(uint *)"curround",0);
  FUN_104540e0(this,(uint *)"curstage",0);
  FUN_104540e0(this,(uint *)"maxmatch",0);
  FUN_104540e0(this,(uint *)"maxstage",0);
  FUN_104540e0(this,(uint *)"roundct",0);
  FUN_104540e0(this,(uint *)"roundt",0);
  FUN_104540e0(this,(uint *)"totalct",0);
  FUN_104540e0(this,(uint *)"totalt",0);
  FUN_10454240(this,(int)param_1,param_2,"",0);
  FUN_10454240(this,0,"CCenterStringLabel"," ",0);
  FUN_10454240(this,param_1,"SectionHeader","",0);
  FUN_10454240(this,param_1,(char *)0x0,"",0);
  FUN_10454240(this,param_1,(char *)0x0,"< item >",0);
  FUN_10454240(this,param_1,param_2,"",0);
  FUN_10454240(this,param_1,param_2,"CLoadoutSlotTitleLabel",0);
  FUN_104545d0(this,param_1,param_2,(ushort *)L"KeyBind",0);
  FUN_104621c0(*(void **)(param_1 + 0x1e0),"");
  FUN_104621c0(this,"");
  FUN_104621c0(this_00,"");
  FUN_104625e0(&DAT_10780028,(int *)"CAvatarImagePanel",(int *)FUN_1018f470);
  FUN_104625e0(&DAT_10793654,(int *)"CBaseModelPanel",(int *)FUN_101c2890);
  FUN_104625e0(&DAT_107937e0,(int *)"CIconPanel",(int *)FUN_101c7cf0);
  FUN_104625e0(&DAT_10795b10,(int *)"CCvarSlider",(int *)FUN_101eed30);
  FUN_104625e0(&DAT_10795b4c,(int *)"CCvarToggleCheckButton",(int *)FUN_101ef710);
  FUN_104625e0(&DAT_107977f8,(int *)"URLButton",(int *)FUN_101f5d30);
  FUN_104625e0(&DAT_10798310,(int *)"GameModes",(int *)FUN_102024f0);
  FUN_104625e0(&DAT_10798830,(int *)"CDialogListButton",(int *)FUN_10214390);
  FUN_104625e0(&DAT_10798864,(int *)"DropDownMenu",(int *)FUN_102157d0);
  FUN_104625e0(&DAT_1079891c,(int *)"FlyoutMenu",(int *)FUN_10218b90);
  FUN_104625e0(&DAT_10798aa8,(int *)"BaseModHybridButton",(int *)FUN_10220250);
  FUN_104625e0(&DAT_10798eb4,(int *)"BaseModMenuBackground",(int *)FUN_10227670);
  FUN_104625e0(&DAT_10798fcc,(int *)"SliderControl",(int *)FUN_1022b410);
  FUN_104625e0(&DAT_107992b8,(int *)"CWeaponStatsPanel",(int *)FUN_102339b0);
  FUN_104625e0(&DAT_107992cc,(int *)"CTIItemAttributesPanel",(int *)FUN_10233980);
  FUN_104625e0(&DAT_1079936c,(int *)"CTeamListPanel",(int *)FUN_10234e70);
  FUN_104625e0(&DAT_1079a000,(int *)"CBackpackSlotItem",(int *)FUN_10235c80);
  FUN_104625e0(&DAT_1079a010,(int *)"CBackpack_ContentsList",(int *)FUN_10235cb0);
  FUN_104625e0(&DAT_1079a078,(int *)"CSlotItem",(int *)FUN_10237790);
  FUN_104625e0(&DAT_1079a088,(int *)"CRequisitionComboBox",(int *)FUN_10237760);
  FUN_104625e0(&DAT_1079a0fc,(int *)"TIMainMenuLocalUserInfoContainer",(int *)FUN_1023aef0);
  FUN_104625e0(&DAT_1079a130,(int *)"TIMainMenuSocialContainer",(int *)FUN_1023b6a0);
  FUN_104625e0(&DAT_1079a18c,(int *)"CFriendsListPanel",(int *)FUN_1023c2c0);
  FUN_104625e0(&DAT_1079a260,(int *)"HorizontalGauge",(int *)FUN_1023e170);
  FUN_104625e0(&DAT_107a96e0,(int *)"CSpectatorPlayerList",(int *)FUN_102fef90);
  FUN_104625e0(&DAT_107a9980,(int *)"CVoiceListPanel",(int *)FUN_103045d0);
  FUN_104625e0(&DAT_107a9b50,(int *)"CChatPanel",(int *)FUN_1030a8a0);
  FUN_104625e0(&DAT_107a9b60,(int *)"CTimeLabel",(int *)FUN_1030a9f0);
  FUN_104625e0(&DAT_107a9e30,(int *)"CPlayerPreviewPanel",(int *)FUN_1030a960);
  FUN_104625e0(&DAT_107a9e44,(int *)"CItemPreviewPanel",(int *)FUN_1030a930);
  FUN_104625e0(&DAT_107a9e54,(int *)"CFilterComboBox",(int *)FUN_1030a8d0);
  FUN_104625e0(&DAT_107a9e64,(int *)"CFilterablePanelListPanel",(int *)FUN_1030a900);
  FUN_104625e0(&DAT_107a9e74,(int *)"CTipPanel",(int *)FUN_1030aa20);
  FUN_104625e0(&DAT_107a9ec8,(int *)"TIUserAvatarPanel",(int *)FUN_1030ab40);
  FUN_104625e0(&DAT_107a9ed8,(int *)"TIHorizontalList",(int *)FUN_1030aab0);
  FUN_104625e0(&DAT_107a9ee8,(int *)"TIAvatarSelectionList",(int *)FUN_1030aa80);
  FUN_104625e0(&DAT_107a9ef8,(int *)"TILocalInfoLabel",(int *)FUN_1030aae0);
  FUN_104625e0(&DAT_107a9f08,(int *)"TIRichText",(int *)FUN_1030ab10);
  FUN_104625e0(&DAT_107a9f70,(int *)"CTIUserStatLabel",(int *)FUN_1030a9c0);
  FUN_104625e0(&DAT_107a9f80,(int *)"CTIUserStatContainer",(int *)FUN_1030a990);
  FUN_104625e0(&DAT_107a9f90,(int *)"BorderedPanel",(int *)FUN_1030a870);
  FUN_104625e0(&DAT_107a9fa0,(int *)"ExclusiveEditablePanel",(int *)FUN_1030aa50);
  FUN_104625e0(&DAT_107aa54c,(int *)"MarqueeLabel",(int *)FUN_10311820);
  FUN_104625e0(&DAT_107aa97c,(int *)"PanelListPanel2",(int *)FUN_10312540);
  FUN_104625e0(&DAT_107aadb0,(int *)"PropertyBox",(int *)FUN_10313ae0);
  FUN_104625e0(&DAT_107aae58,(int *)"TIButton",(int *)FUN_10315520);
  FUN_104625e0(&DAT_107aae68,(int *)"TIImageButton",(int *)FUN_103155b0);
  FUN_104625e0(&DAT_107aae78,(int *)"TIImageButtonToggle",(int *)FUN_103155e0);
  FUN_104625e0(&DAT_107aae88,(int *)"TICheckButton",(int *)FUN_10315550);
  FUN_104625e0(&DAT_107aae98,(int *)"TIConVarCheckButton",(int *)FUN_10315580);
  FUN_104625e0(&DAT_107aafb4,(int *)"CExButton",(int *)FUN_1031c840);
  FUN_104625e0(&DAT_107aafc4,(int *)"CExImageButton",(int *)FUN_1031c870);
  FUN_104625e0(&DAT_107aafd4,(int *)"CExLabel",(int *)FUN_1031c8a0);
  FUN_104625e0(&DAT_107aafe4,(int *)"CExRichText",(int *)FUN_1031c8d0);
  FUN_104625e0(&DAT_107aaff4,(int *)"CRichTextWithScrollbarBorders",(int *)FUN_1031c930);
  FUN_104625e0(&DAT_107ab004,(int *)"CExplanationPopup",(int *)FUN_1031c900);
  FUN_104625e0(&DAT_107ab148,(int *)"CNotificationsPresentPanel",(int *)FUN_1031f630);
  FUN_104625e0(&DAT_107ac200,(int *)"PlanMapPanel",(int *)FUN_103210b0);
  FUN_104625e0(&DAT_107ac210,(int *)"CTILocalPlayerPlanPanel",(int *)FUN_10321080);
  FUN_104625e0(&DAT_107ac260,(int *)"CTIGamePanel",(int *)FUN_10325140);
  FUN_104625e0(&DAT_107ac270,(int *)"CTISquadButton",(int *)FUN_10325170);
  FUN_104625e0(&DAT_107ac2d8,(int *)"CDummyPanel",(int *)FUN_10325110);
  FUN_104625e0(&DAT_107ac3b8,(int *)"CLoadoutSlotLabel",(int *)FUN_10328fa0);
  FUN_104625e0(&DAT_107ac3c8,(int *)"CLoadoutSlotPreview",(int *)FUN_10329030);
  FUN_104625e0(&DAT_107ac3d8,(int *)"CLoadoutSlotTitleLabel",(int *)FUN_10329060);
  FUN_104625e0(&DAT_107ac3e8,(int *)"CLoadoutSlotLabelItemImage",(int *)FUN_10328fd0);
  FUN_104625e0(&DAT_107ac3f8,(int *)"CLoadoutSlotLabelItemLabel",(int *)FUN_10329000);
  FUN_104625e0(&DAT_107ac408,(int *)"CLoadoutRequisitions",(int *)FUN_10328f70);
  FUN_104625e0(&DAT_107ac418,(int *)"CLoadoutPerks",(int *)FUN_10328f40);
  FUN_104625e0(&DAT_107d44e0,(int *)"CMDLPanel",(int *)FUN_103a99d0);
  FUN_104625e0(&DAT_108400e0,(int *)"Panel",(int *)FUN_10443f70);
  FUN_104625e0(&DAT_108416e4,(int *)"EditablePanel",(int *)FUN_10452ec0);
  FUN_104625e0(&DAT_10841914,(int *)"PercentageCroppedImageLabel",(int *)FUN_10455780);
  FUN_104625e0(&DAT_1084192c,(int *)"Label",(int *)FUN_10455750);
  FUN_104625e0(&DAT_10842d74,(int *)"TextEntry",(int *)FUN_104583a0);
  FUN_104625e0(&DAT_108431a4,(int *)"RichText",(int *)FUN_1045ed50);
  FUN_104625e0(&DAT_10843628,(int *)"Button",(int *)FUN_10462db0);
  FUN_104625e0(&DAT_10843a94,(int *)"ImagePanel",(int *)FUN_10465190);
  FUN_104625e0(&DAT_10843eb4,(int *)"ToggleButton",(int *)FUN_104658d0);
  FUN_104625e0(&DAT_10843ee8,(int *)"AnimatingImagePanel",(int *)FUN_10465ef0);
  FUN_104625e0(&DAT_1084431c,(int *)"CBitmapImagePanel",(int *)FUN_104667f0);
  FUN_104625e0(&DAT_10844734,(int *)"CheckButton",(int *)FUN_10467030);
  FUN_104625e0(&DAT_1084475c,(int *)"ComboBox",(int *)FUN_10467a80);
  FUN_104625e0(&DAT_10844794,(int *)"CvarToggleCheckButton",(int *)FUN_10468fe0);
  FUN_104625e0(&DAT_108447c0,(int *)"Divider",(int *)FUN_104695d0);
  FUN_104625e0(&DAT_108447f0,(int *)"ExpandButton",(int *)FUN_10469860);
  FUN_104625e0(&DAT_1084482c,(int *)"GraphPanel",(int *)FUN_10469de0);
  FUN_104625e0(&DAT_10844860,(int *)"ListPanel",(int *)FUN_1046b570);
  FUN_104625e0(&DAT_108448ac,(int *)"ListViewPanel",(int *)FUN_10470e90);
  FUN_104625e0(&DAT_10844958,(int *)"MenuBar",(int *)FUN_10476910);
  FUN_104625e0(&DAT_10844988,(int *)"MenuButton",(int *)FUN_10477150);
  FUN_104625e0(&DAT_108449bc,(int *)"MenuItem",(int *)FUN_10477f50);
  FUN_104625e0(&DAT_108449f8,(int *)"MessageBox",(int *)FUN_10479070);
  FUN_104625e0(&DAT_10844a2c,(int *)"ImageProgressBar",(int *)FUN_10479d40);
  FUN_104625e0(&DAT_10844a40,(int *)"ProgressBar",(int *)FUN_10479d70);
  FUN_104625e0(&DAT_10844a50,(int *)"ContinuousProgressBar",(int *)FUN_10479d10);
  FUN_104625e0(&DAT_10844ebc,(int *)"CircularProgressBar",(int *)FUN_1047ac00);
  FUN_104625e0(&DAT_10844eec,(int *)"RadioButton",(int *)FUN_1047b750);
  FUN_104625e0(&DAT_10845324,(int *)"ScalableImagePanel",(int *)FUN_1047c3f0);
  FUN_104625e0(&DAT_10845764,(int *)"ScrollBar",(int *)FUN_1047d790);
  FUN_104625e0(&DAT_10845774,(int *)"ScrollBar_Vertical",(int *)FUN_1047d7c0);
  FUN_104625e0(&DAT_10845784,(int *)"ScrollBar_Horizontal",(int *)FUN_1047d790);
  FUN_104625e0(&DAT_108457a8,(int *)"TreeView",(int *)FUN_1047f180);
  FUN_104625e0(&DAT_10845820,(int *)"CTreeViewListControl",(int *)FUN_10483200);
  FUN_104625e0(&DAT_10845854,(int *)"URLLabel",(int *)FUN_10483f20);
  FUN_104625e0(&DAT_10845c8c,(int *)"CountdownLabel",(int *)FUN_104840c0);
  FUN_104625e0(&DAT_10845cb8,(int *)"MessagingPanel",(int *)FUN_10484550);
  FUN_104625e0(&DAT_10846024,(int *)"SectionedListPanel",(int *)FUN_1048a140);
  FUN_104625e0(&DAT_108474e0,(int *)"Slider",(int *)FUN_104904e0);
  FUN_104625e0(&DAT_10847be0,(int *)"ScrollableEditablePanel",(int *)FUN_1049bb00);
  FUN_10462790(this,param_1,param_2,"",0,(char *)0x0,0);
  FUN_104640b0(this,(undefined4 *)"UI/buttonrollover.wav");
  FUN_10464530(this,(undefined4 *)"UI/buttonclick.wav");
  FUN_10465780(this,param_1,param_2,"",0);
  FUN_10476ee0(this,param_1,param_2,"",0);
  FUN_10484700("GameUI");
  FUN_104848a0(this,0,"OptionsSubVideoGammaDlg",1,'\x01',0);
  FUN_104848a0(this,0,"info",1,'\x01',0);
  FUN_104848a0(this,0,"nav_progress",1,'\x01',0);
  FUN_104848a0(this,0,"plancreate",1,'\x01',0);
  FUN_104848a0(this,0,"radialmenupanel",1,'\x01',0);
  FUN_104848a0(this,0,"specgui",1,'\x01',0);
  FUN_104848a0(this,0,"team",1,'\x01',0);
  FUN_104848a0(this,0,"voicecontrol",1,'\x01',0);
  FUN_104848a0(this,param_1,"FileOpenDialog",1,'\x01',0);
  FUN_104848a0(this,param_1,"ViewPortBackGround",1,'\x01',0);
  FUN_104848a0(this,param_1,"VoteSetupDialog",1,'\x01',0);
  FUN_104848a0(this,param_3,"MessageBox",0,'\x01',0);
  FUN_10486f10(this,"resource/OptionsSubVideoGammaDlg.res",0,0,0);
  FUN_10486f10(this,"resource/UI/NavProgress.res",0,0,0);
  FUN_10486f10(this,"resource/UI/RadialMenuPanel.res",0,0,0);
  FUN_10486f10(this,"resource/fixmenu/MessageBox.res",0,0,0);
  FUN_10486f10(this,"resource/fixmenu/Popups/RankListing.res",0,0,0);
  FUN_10486f10(this,"resource/fixmenu/Popups/TIPopUp_ItemPurchase.res",0,0,0);
  FUN_10486f10(this,"resource/ingame/PlanCreation.res",0,0,0);
  FUN_10486f10(this,"resource/ingame/Spectator.res",0,0,0);
  FUN_10486f10(this,"resource/ingame/TeamMenu.res",0,0,0);
  FUN_10486f10(this,"resource/ingame/VoiceControl.res",0,0,0);
  FUN_10488690(this,"",'\0');
  FUN_10488690(this,"",'\x01');
  FUN_10488690(this,"#Console_Title",'\x01');
  FUN_10488690(this,"#Frame_Untitled",param_1 == 0);
  FUN_10488690(this,"#GameUI_AdjustGamma_Title",'\x01');
  FUN_10488690(this,"#GameUI_CreateServer",'\x01');
  FUN_10488690(this,"VGUI Build Mode Editor",'\x01');
  FUN_1048d0f0(this,"g");
  FUN_1048f810(this,param_1,"CreateMultiplayerGameDialog",0);
  FUN_1048fbb0(this,*(undefined4 *)((int)this + 0x28c),"#GameUI_Server");
  FUN_1048fbb0(this,*(undefined4 *)((int)this + 0x290),"#GameUI_Game");
  FUN_10491640(this,0,"GameConsole",0,0);
  FUN_104974a0(param_1,param_2,param_3,(uint *)"filesizeint");
  FUN_104974a0(param_1,param_3,param_2,(uint *)"modifiedint");
  FUN_10497550(param_1,param_2,param_3,(uint *)"attributes");
  FUN_104a5f00(local_c,param_1,"cpu_level",param_6,'\x01',param_5);
  FUN_104a5f00(local_c,param_2,"gpu_level",param_6,'\0',param_5);
  FUN_104a5f00(local_c,param_3,"mem_level",param_6,'\0',param_5);
  FUN_104a5f00(local_c,param_4,"gpu_mem_level",param_6,'\0',param_5);
  FUN_104a69dc("string too long");
  FUN_104a6a0a("invalid string position");
  FUN_104adc9e((byte *)"Invalid Item Manager\n");
  FUN_104afa65(&DAT_10844ab0,0x400,(byte *)"%s, string progress, string variable");
  FUN_104afa65(&DAT_10845880,0x400,(byte *)"%s, string URLText");
  FUN_104c714b(in_stack_00000004,&local_14,"",&local_c,0);
  FUN_104c714b(in_stack_00000004,&local_14,"",&local_c,1);
  GetProcAddress(param_1,"CreateInterface");
  LVar1 = RegCreateKeyExA((HKEY)0x80000001,param_1,0,"String",0,0xf003f,(LPSECURITY_ATTRIBUTES)0x0,
  LVar1 = RegCreateKeyExA(param_1,param_2,0,"String",0,0xf003f,(LPSECURITY_ATTRIBUTES)0x0,&local_8,
  LoggingSystem_AddTagToCurrentChannel("Developer");
  LoggingSystem_AddTagToCurrentChannel("DeveloperVerbose");
  LoggingSystem_AddTagToCurrentChannel("SndEmitterSystem");
  LoggingSystem_AddTagToCurrentChannel("SndOperators");
  LoggingSystem_AddTagToCurrentChannel("SoundOperatorSystem");
  LoggingSystem_AddTagToCurrentChannel("TIGameUI");
  LoggingSystem_AddTagToCurrentChannel("tirules");
  LoggingSystem_AddTagToCurrentChannel((byte *)"Console");
  LoggingSystem_AddTagToCurrentChannel((byte *)"Developer");
  LoggingSystem_AddTagToCurrentChannel((byte *)"DeveloperVerbose");
  LoggingSystem_SetChannelSpewLevelByTag("Console",0);
  LoggingSystem_SetChannelSpewLevelByTag("Developer",uVar2);
  LoggingSystem_SetChannelSpewLevelByTag("DeveloperVerbose",uVar3);
  Msg("    %55s:%10d\n","TOTAL:",local_8);
  Msg("   %s\n",param_1 + 0x2e);
  Msg("   Runs for copy type: %s, packing: %s\n",puVar2,puVar5);
  Msg(" %s Control message\n",piVar1);
  Msg("%*s  Out    In  OutBits InBits  OutSize InSize  Notes\n",iVar3,&DAT_10340084);
  Msg("%8d bytes BBox physics: %d boxes\n",local_18,local_1c);
  Msg("%d decals: %d permanent, %d dynamic\nr_decals: %d\n",iVar5 + iVar4,iVar4,iVar5,uVar3);
  Msg("%d threads being reserved\n",DAT_10682954);
  Msg("%d/%d (%.1f%%) occluded, occlusion tests run %.1f us ave ([%d]=%.1fus, [%d]=%.1fus) on a %.2fGHz CPU\n"
  Msg("%d:  Reinitialized %i predictable entities\n",0,puVar4[3]);
  Msg("%i %s %s : %s\n",*(undefined4 *)(PTR_DAT_106ab8dc + 0x1c),*(undefined4 *)(param_1 + 0x28),
  Msg("%i demo(s) in loop\n",iVar6);
  Msg("%i gametitle fade\n",*(undefined4 *)(PTR_DAT_106ab8dc + 4));
  Msg("%s - %s\n",puVar6,pcVar5);
  Msg("%s DETACH ROPE\n",uVar2);
  Msg("%s Occlusion calls. %s (%.1f%%) calls within jitter. %u/%u queries, %u/%u jobs in flight. %d threads in pool\n"
  Msg("%s in solid list (not solid) (%d, %04X)\n",uVar6);
  Msg("%s: type( %d ) group ( %d ) size ( %d bytes ), startbit %d end bit %d\n",piVar1,param_1[2],
  Msg("%s::%s%s",*(undefined4 *)(param_2 + 8),puVar1,local_1004);
  Msg("**** THERE ARE NO VALID SPAWN ZONES RIGHT NOW FOR TEAM: %s TO SPAWN!!\n",puVar6);
  Msg("**Can\'t create ragdoll gib!\n");
  Msg("- CURRENT SOUNDSCAPE: %d [%s]\n",DAT_1072f11c,puVar1);
  Msg("- choke: in %.2f, out %.2f\n",SUB84((double)fVar6,0),(int)((ulonglong)(double)fVar6 >> 0x20))
  Msg("- latency: %.1f, loss %.2f\n",SUB84((double)fVar6,0),(int)((ulonglong)(double)fVar6 >> 0x20))
  Msg("- online: %s\n",puVar3);
  Msg("- packets: in %.1f/s, out %.1f/s\n",SUB84((double)fVar6,0),
  Msg("- remote IP: %s\n",uVar2);
  Msg("- total: in %.1f, out %.1f MB\n\n",(double)((float)iVar4 * 9.536743e-07));
  Msg("-- Globals --\n");
  Msg("--------------------------------------------------------\n");
  Msg("----------------------------------\n\n");
  Msg("--------------\n%8d bytes total VCollide Memory\n",local_18 + iVar4);
  Msg("->Sorted %s for copy type: %s, packing: %s\n",*(undefined4 *)(param_1 + 8));
  Msg("=================================\n");
  Msg("AUTOFILL: %s (%s)\n",param_1,pcVar1);
  Msg("AppID       : %u\n",(int)(short)uVar8);
  Msg("Array Props   : %i\n",local_28);
  Msg("Attempting to Load DM Spawns from: %s\n",local_8,puVar11,pcVar13,puVar9);
  Msg("Attempting to precache model, but model name is NULL\n");
  Msg("Available: %.2f MB, Used: %.2f MB, Free: %.2f MB\n",
  Msg("Average framerate: %.2f\n",(double)local_8,uVar3);
  Msg("BUG REPORT PORTAL POSITIONS:\n");
  Msg("Bad ragdoll for %s\n",iVar2);
  Msg("Bots         : %u\n",uVar9);
  Msg("CClientSteamContext OnSteamServerConnectFailure logged on = %d\n",
  Msg("CClientSteamContext OnSteamServersConnected logged on = %d\n",
  Msg("CClientSteamContext OnSteamServersDisconnected logged on = %d\n",
  Msg("CDecalEmitterSystem::LoadDecalsFromScript:  Script \'%s\' missing section \'%s\'\n",puVar14,
  Msg("CGameClient::FileReceived: %s not wanted.\n",param_1);
  Msg("CHANGE LEVEL: %s\n",local_28);
  Msg("CSM enabled: %i\n",iVar3 != 0);
  Msg("CTipPanel: Showing Tip #%i\n",iVar2);
  Msg("Can\'t find a nearby track !!!\n");
  Msg("Can\'t find target of train %s\n",puVar5);
  Msg("Changing to bugreporter(%s)\n",pcVar3);
  Msg("Channel - Index: %d - Guid: %d.\n",(iVar4 * 0x14c) / 0x14c,(&DAT_10427a80)[iVar4 * 0x53]);
  Msg("Channel - Index: %d - Guid: %d.\n",(int)(param_2 + -0x4109ea0) / 0x14c,*param_2);
  Msg("Channel - Index: %d - Guid: %d.\n",(int)(param_3 + -0x4109ea0) / 0x14c,*param_3);
  Msg("Checking for map clear.. new map: %s old map: %s\n",param_1,&DAT_106837f8);
  Msg("Clamping to %d frames",10);
  Msg("Compilation of \"%s\" succeeded\n",param_1);
  Msg("Completed reinitialising fixapi\n");
  Msg("Connecting navigation areas...\n");
  Msg("Connection to %s failed, server requires a password\n",pcVar1);
  Msg("Copying \'%s\' to \'%s\'\n",pcVar1,local_104);
  Msg("Count = %d\n",iVar3);
  Msg("Count = %d\n",iVar6);
  Msg("Created EHANDLE test entity. Run this command again to transmit the second ent.\n");
  Msg("Created new fencetop area %d(%x) between %d(%x) and %d(%x)\n",
  Msg("Current sound patches: %d\n",DAT_1077e7bc);
  Msg("Depth texture resolution: %i\n",DAT_1071f52c);
  Msg("Description : %s\n",local_404);
  Msg("Direct sound audio devices..\n");
  Msg("Dumping event queue. Current time is: %.2f\n",(double)*(float *)(DAT_10646018 + 0x10));
  Msg("Dynamic Combined Models:\n");
  Msg("END LIST\n");
  Msg("Elapsed time:  %.2f seconds\n",(double)((float)fVar8 - local_c));
  Msg("Elapsed time: %.2f\n",DAT_10683898);
  Msg("Entity exists: %u\n",DAT_1063fa18 != 0);
  Msg("Exclu Props   : %i\n",iVar5);
  Msg("Failed to find function %s\n",param_2);
  Msg("Flat Props    : %i\n",local_10);
  Msg("Float Props   : %i\n",local_18);
  Msg("Found %d matches.\n",param_1);
  Msg("Found no entity at %d.\n",iVar2);
  Msg("Found no entity at %d.\n",iVar3);
  Msg("GAME OBJECTS: [%s]\n","Client");
  Msg("GAME OBJECTS: [%s]\n","Server");
  Msg("Game        : %s\n",local_404);
  Msg("Generating Navigation Mesh...\n");
  Msg("GetModelMaterialColorAndLighting:  Available on client only!\n");
  Msg("Handle Count %d (%d bytes)\n",(uint)*(ushort *)((int)this + 0x3e),
  Msg("Hardware config SupportsBilinearPCFSampling: %i\n",uVar1);
  Msg("Hardware config supportsCascadedShadowMapping: %i\n",uVar1);
  Msg("Hardware config supportsShadowDepthTextures: %i\n",uVar1);
  Msg("Histogram : Entities per level\n");
  Msg("Hostname    : %s\n",local_404);
  Msg("Hunk allocations:\n");
  Msg("Initial round teams are swapped: %s\n",puVar2);
  Msg("Initialising fixapi\n");
  Msg("Int Props     : %i\n",local_14);
  Msg("Invalid address or port: %s\n",&DAT_103236cf);
  Msg("Map         : %s\n",local_404);
  Msg("MapId\tName\n");
  Msg("MaxPlayers   : %u\n",uVar9);
  Msg("Merging navigation areas...\n");
  Msg("NULL Ent \'%s\'in GiveNamedItem!\n",local_11c);
  Msg("NULL Ent in GiveNamedItem!\n");
  Msg("Name\t\t\t\t\tCount\t\tChild Count Per Instance\n");
  Msg("NavMesh Visibility List Lengths:  min = %d, avg = %d, max = %d\n",iVar6,iVar1,iVar3);
  Msg("Network: IP %s ",pcVar3);
  Msg("No %s found.\n",puVar4);
  Msg("No view anim created\n");
  Msg("None.\n");
  Msg("Not using save-in-memory path!\n");
  Msg("OS    Type   : %s\n",pcVar3);
  Msg("Outside Z by (below) %.2f, (above) %.2f ",(double)fVar7,(double)fVar8);
  Msg("Password     : %s\n",puVar4);
  Msg("Performing fixup on \'%s\'\n",local_104);
  Msg("Planning Time: %i seconds\n",*(undefined4 *)((int)param_1 + 0x3c0));
  Msg("Players      : %u\n",uVar9);
  Msg("PostFork: Port: %i\n",uVar4,uVar3);
  Msg("Potential vote being called\n");
  Msg("Precache called on a point_template that has no templates: %s\n",puVar3);
  Msg("Preparing to collect %d occlusion tests. %d collected so far.\n",iVar2,DAT_10672c0c);
  Msg("Private:  %s\n",puVar1);
  Msg("Protocol    : %d\n",uVar9);
  Msg("Public :  %s\n",puVar1);
  Msg("Reinitialising fixapi\n");
  Msg("Reloading G15 config\n");
  Msg("Removed %d jump areas\n",iVar1 - DAT_1067f854);
  Msg("Render targets allocated: %i\n",DAT_107262a4);
  Msg("Responder   : %s\n",pcVar3);
  Msg("Round Time: %i seconds\n",*(undefined4 *)((int)param_1 + 0x3c4));
  Msg("SAVEGAME: %6.1fkb, %6.1fkb used by %3d entities (%s)\n",
  Msg("Score_TeamRoundWin: %s: Partial?: %s\n",puVar2,puVar1);
  Msg("Score_TeamRoundWin: %s: Partial?: %s\n",puVar3,puVar6);
  Msg("Score_TeamRoundWin: %s: Partial?: %s\n",puVar7,puVar9);
  Msg("Searching for client entities with classname containing substring: \'%s\'\n",pcVar7);
  Msg("Searching for entities with class/target name containing substring: \'%s\'\n",pcVar5);
  Msg("Secure       : %s\n",puVar4);
  Msg("Selected set saved to %s.  Use \'nav_merge_mesh %s_selected_%4.4d\' to merge it into another mesh.\n"
  Msg("Send Props    : %i\n",local_c);
  Msg("Send Tables   : %i\n",local_30);
  Msg("Server Type  : %s\n",pcVar3);
  Msg("SetLoadoutAppearance: pInventory is missing\n");
  Msg("SetLoadoutWeapons: Inventory Missing\n");
  Msg("Setting hinge friction to %f\n",(double)fVar1);
  Msg("Shutdown function %s not in list!!!\n",param_1);
  Msg("Shutting down fixapi\n");
  Msg("Sound system not started\n");
  Msg("Spectator Port: %u\n",uVar9 & 0xffff);
  Msg("SpectatorName : %s\n",local_404);
  Msg("String Props  : %i\n",local_24);
  Msg("Table Props   : %i\n",local_2c);
  Msg("Tags:\n");
  Msg("The nav file for %s is up-to-date\n");
  Msg("The server is using sv_pure = 1.\n");
  Msg("There are %i world lights\nThe first %i:",local_8,iVar1);
  Msg("Too many simultaneously active particle systems!\n");
  Msg("Total Channels: %d\n",DAT_10427238);
  Msg("Total Send Table stats\n");
  Msg("Total committed memory: %d\n",iVar1);
  Msg("Total used memory:      %d\n",DAT_106af850 - DAT_106af860);
  Msg("Total: %.2f MB\n",(double)((float)local_8 * 9.536743e-07));
  Msg("Trying to precache breakable prop, but has no model name\n");
  Msg("Unknown attribute \'%s\'",puVar2);
  Msg("Unknown command \"%s\"\n",puVar14);
  Msg("Uploading %s to %s\n",param_1,param_2);
  Msg("Usage: dsp_parms PRESET# PROC# param0 param1 ...up to param15 \n");
  Msg("VCollides loaded: %d\n",iStack52);
  Msg("VProf cache miss disabled.\n");
  Msg("VProf collapse all.\n");
  Msg("VProf disabled.\n");
  Msg("VProf expand all.\n");
  Msg("VProf expand group.\n");
  Msg("VProf peaks reset.\n");
  Msg("VProf reset.\n");
  Msg("VProf setting scope to %s\n",*(undefined4 *)(local_8 + 0x24));
  Msg("Vector Props  : %i\n",local_1c);
  Msg("VectorXY Props: %i\n",local_20);
  Msg("Version      : %s\n",local_404);
  Msg("VoxelTreePlayerView\n");
  Msg("VoxelTreeView\n");
  Msg("Writing model list to %s...\n",local_14c);
  Msg("Wrote \'%s\':  %s (%dx%d) compresssed (quality %i) to %s\n",param_1,local_b8,uVar5);
  Msg("[%s]Grabbing car data: ws:%d wd:%d ef:%d wr:%d\n","Client",
  Msg("[%s]Grabbing car data: ws:%d wd:%d ef:%d wr:%d\n","Server",
  Msg("[1] bTDM_ShouldDoEnd [%s]\n",local_1c);
  Msg("[Client] MAP LIST: Count: %i\n",DAT_106c388e);
  Msg("[DEBUG] TIGameRules()->GetGameMode(): %i\n",uVar11);
  Msg("[FixAPI][Client] %s\n",param_1);
  Msg("[FixAPI][Game] %s Kicked, for: %s\n",uVar2);
  Msg("[FixAPI][Game] %s\n",param_1);
  Msg("[MEMORYSTATUS] [%s] Operating system reports Available: %.2f MB, Used: %.2f MB, Free: %.2f MB\n"
  Msg("[Map] Load: %s\n",param_3);
  Msg("[Server] MAP LIST: Count: %i\n",DAT_105e0ad6);
  Msg("\n------- CLIENT SOUNDSCAPES -------\n");
  Msg("\nHunk Memory Used:\n",uVar2);
  Msg("\ndynamic models:\n");
  Msg("\nnetwork table (client):\n");
  Msg("build %s\n",local_5e4);
  Msg("closed all UI tutors\n");
  Msg("description:  %s\n",local_4488);
  Msg("didn\'t hit a prop\n");
  Msg("env_beam: unknown entity \"%s\"\n",puVar2);
  Msg("env_tracer: unknown entity \"%s\"\n",puVar3);
  Msg("index(%03d) guid(% 4d) l(% 3d) c(% 3d) r(% 3d) rl(% 3d) rr(% 3d) vol(% 3d) ent(% 3d) pos(% 6.2f % 6.2f % 6.2f) timeleft(% 2.2f) pitch(% 2.2f) looped(%d) %s\n"
  Msg("level %s\n",local_764);
  Msg("m_bSendHandle: %d, m_Handle.Get: 0x%p\n",*(undefined *)(param_1 + 0x143c),uVar2);
  Msg("mode %s, dedicated %s, ports %i SV / %i CL\n",puVar5,puVar4,DAT_106a5570[4],*DAT_106a5570);
  Msg("network table (server):\n");
  Msg("orientation %s\n",local_a64);
  Msg("pinging %s\n",pcVar1);
  Msg("position %s\n",local_864);
  Msg("r_threaded_buildWRlist = %s\n",pcVar3,uVar2);
  Msg("remove 0x%x: %s-%s (%d-%d) [%d in play, %d max]\n",param_2,pcVar4,pcVar3,iVar7,iVar2,iVar9,
  Msg("report_type %s\n",local_d64);
  Msg("submitter %s\n",local_1488);
  Msg("title:  %s\n",local_4e4);
  Msg("trigger_changelevel to %s doesn\'t have a landmark",piVar1);
  Msg("using rate value: %i [%i]\n",uVar1,(&DAT_10554908)[uVar1]);
  Msg((byte *)"%-40s: %4.1f MB allocated (%4.1f MB peak), %4.1f MB committed, %4.1f MB reserved\n");
  Msg((byte *)"%s test: multithread push, multithread pop, %s");
  Msg((byte *)"%s test: single thread push/pop, in order... ");
  Msg((byte *)"%u MB address space used assuming maximum PageHeap overhead.\n");
  Msg((byte *)"%u MB allocated.\n");
  Msg((byte *)"%u MB memory used assuming maximum PageHeap overhead.\n");
  Msg((byte *)"%u lifetime allocations (%u delta).\n");
  Msg((byte *)"%u outstanding allocations (%d delta).\n");
  Msg((byte *)"******** BEGIN VPROF REPORT ********\n");
  Msg((byte *)"******** END VPROF REPORT ********\n");
  Msg((byte *)"No samples\n");
  Msg((byte *)"Sorry -- no stats saved to file memstats.txt when the heap allocator is enabled.\n");
  Msg((byte *)"Tests done, purging test memory...");
  Msg((byte *)"pass\n");
  ThreadSetDebugName((HANDLE)0x0,"CPUMonitoringHeartbeatThread");
  ThreadSetDebugName((HANDLE)0x0,"CPUMonitoringMeasureThread");
  ThreadSetDebugName((HANDLE)0x0,"MainThrd");
  ThreadSetDebugName((HANDLE)0x0,"PushPopThread");
  V_tier0_strncat(param_1,"\\",param_2,0xffffffff);
  Warning("#####################################################################################\n")
  Warning("%d queries, %d misses (%d free) suc spec = %d wasted spec=%d\n",DAT_10670590,DAT_10670594
  Warning("%s %f %f %f;",pcVar5,(double)local_10,(double)local_c,(double)local_8);
  Warning("%s %f %f %f\n",pcVar4,(double)local_1c,(double)local_18,(double)local_14);
  Warning("%s (%s) received SetBloomScaleRange input without 2 arguments. Syntax: <max bloom> <min bloom>\n"
  Warning("%s (%s) received StartAnimSequence input without correct parameters. Syntax: <Frame Start> <Frame End> <Frame Rate> <Loop>\nSetting <Frame End> to -1 uses the last frame of the texture. <Loop> should be 1 or 0.\n"
  Warning("%s (%s) received StartFloatLerp input without correct parameters. Syntax: <Start Value> <End Value> <Transition Time> <Loop>\n<Loop> should be 1 or 0.\n"
  Warning("%s Deactivate(): I have no player when called by %s!\n",puVar8,puVar7);
  Warning("%s is not writable!!!  Check it out before running buildcubemaps.\n",uVar5);
  Warning("%s(%d) : %s\n",*(undefined4 *)(param_1 + 0x100),*(undefined4 *)(param_1 + 0x104),
  Warning("%s(%s) received ForceInteractionWithNPC input with bad parameters: %s\nFormat should be: ForceInteractionWithNPC <target NPC> <interaction name>\n"
  Warning("---- Host_Changelevel ----\n");
  Warning("---- Host_NewGame ----\n");
  Warning("------------------ SERVER BENCHMARK RESULTS ------------------\n");
  Warning("--------------------------------------------------------------\n");
  Warning("AppFramework : Unable to create system %s!\n",pcVar2);
  Warning("Attempted to create unknown particle system with unknown symbol\n");
  Warning("Bad type %d in saved variant_t\n",*(undefined4 *)((int)this + 0x10));
  Warning("Bad type %d in saved variant_t\n",uVar2);
  Warning("Benchmark CRC       : %d\n",iVar3);
  Warning("CBasePlayer::ChangeTeam( %d ) - invalid team index.\n",param_1);
  Warning("CEngineClient::SetViewAngles:  rejecting invalid value [%f %f %f]\n",(double)*param_1,
  Warning("CParticleSnapshot::%s - Invalid attribute mapping specified for the provided container!\n"
  Warning("CSM Quality Level: %u\n",param_1[0x19]);
  Warning("CSaveRestoreBuffer::TokenHash() is COMPLETELY FULL!");
  Warning("CSceneEntity::GenerateSceneForSound:  Couldn\'t determine duration of %s\n",piVar3);
  Warning("CTriggerLook \'%s\' has a bad look target (%s)\n",pcVar3,puVar4);
  Warning("CViewAngleAnimation::LoadViewAnimFile failed to load script %s\n",param_1);
  Warning("Called Release() on CBoneList not allocated via Alloc() method\n");
  Warning("Can\'t call GetActiveSounds from server\n");
  Warning("Can\'t call GetElapsedTimeByGuid from server\n");
  Warning("Can\'t call GetGuidForLastSoundEmitted from server\n");
  Warning("Can\'t call GetSoundChannelVolume from server\n");
  Warning("Can\'t call IsLoopingSound from server\n");
  Warning("Can\'t call IsSoundStillPlaying from server\n");
  Warning("Can\'t call SetVolumeByGuid from server\n");
  Warning("Can\'t call StopSoundByGuid from server\n");
  Warning("Can\'t find bottom track for track change! %s\n",pcVar6);
  Warning("Can\'t init %s\n",&stack0xffffe730);
  Warning("Can\'t recreate dictionary for %s, file must be writable!!!\n",local_140);
  Warning("ClientSetupVisibility: No entity for edict!\n");
  Warning("Code forced %s(%s), to be the target of scripted sequence %s, but it can\'t play it.\n",
  Warning("Conditional Error: %s\n",param_1);
  Warning("Could not find screen space effect %s\n",param_1);
  Warning("Could not find the channel with the guid: %d\n",iVar2);
  Warning("Could not load client menu %s\n",param_1);
  Warning("DSP index is out of range. It should be between 0 and %d.\n",0x20);
  Warning("DataTable warning: %s",local_1004);
  Warning("Demo recording custom data for unregistered callback.\n");
  Warning("ED_Free(0x%p) called after sv.edicts == NULL\n",param_1);
  Warning("ERROR: (%s) can\'t teleport object (%s) as it has a parent (%s)!\n",pcVar6,pcVar5,pcVar4)
  Warning("ERROR: Tried to %s for entity %s (%s), but its parent has no model.\n",param_1,puVar6,
  Warning("EmitSound: %s pitch out of bounds = %i\n",param_6,param_11);
  Warning("Empty %s (%s) at %.2f, %.2f, %.2f\n",puVar5,pcVar4,dVar8,dVar7,dVar6);
  Warning("Error reading weapon data file for: %s\n",puVar9);
  Warning("Error reading weapon data file for: %s\n",uVar4);
  Warning("Failed to get mix layer %s!\n",&DAT_10674cf0);
  Warning("Failed to init \'%s\'\n",puVar3);
  Warning("Failed to write block to device\n");
  Warning("GetAllManifestFiles:  Unable to load %s\n","maplist.txt");
  Warning("GetAllSoundFilesReferencedInReslists:  Unable to load file %s\n","maplist.txt");
  Warning("Headtrack mode (zoomed) %d\n",iVar1,iVar2);
  Warning("Incorrect usage of snd_print_channel_by_index. Pass the index from 0 to %d.\n",0xff);
  Warning("Invalid save, failed to open file\n");
  Warning("KeyValues Error: %s in file %s\n",param_1,*(undefined4 *)((int)this + 0x100));
  Warning("MATSYS_VIDCFG_FLAGS_DISABLE_SPECULAR: %s\n",pcVar1);
  Warning("MATSYS_VIDCFG_FLAGS_ENABLE_PARALLAX_MAPPING: %s\n",pcVar1);
  Warning("MATSYS_VIDCFG_FLAGS_UNSUPPORTED: %s\n",pcVar1);
  Warning("MATSYS_VIDCFG_FLAGS_USE_Z_PREFILL: %s\n",pcVar1);
  Warning("MATSYS_VIDCFG_FLAGS_WINDOWED: %s\n",pcVar1);
  Warning("Map uses old detail prop file format.. ignoring detail props\n");
  Warning("MultiSrc: Used by non member %s.\n","<logical entity>");
  Warning("No model %d!\n",param_3);
  Warning("Num ticks simulated : %d\n",iVar3);
  Warning("Particlelib: Missing precache for particle system type \"%s\"!\n","unknown");
  Warning("PutClientInServer: no info_player_start on level\n");
  Warning("RejectConnection: %s - %s\n",pcVar1,pcVar2);
  Warning("Respawn failed to create %s!\n",puVar5);
  Warning("SampleToStreamPosition( %d ) is not supported for sound \'%s\'.\n",param_1,uVar2);
  Warning("Sound DSP: Failed to lock.\n");
  Warning("Sound DSP: preset failed to init.\n");
  Warning("Stopping vprof playback...\n");
  Warning("Stopping vprof recording...\n");
  Warning("System (%s) failed during stage %s\n",pcVar3,PTR_s_INITIALIZATION_0044704c);
  Warning("System (%s) failed during stage %s\n",pcVar3,PTR_s_INITIALIZATION_10419418);
  Warning("TIGetNextMap::Next map is: %s\n",puVar3);
  Warning("Ticks per second    : %.2f\n",(double)((float)iVar3 / fVar1));
  Warning("Total time          : %.2f seconds\n",(double)fVar1);
  Warning("TriggerProximity - Missing measure target or measure target with no origin!\n");
  Warning("Unable to load deletions.bat file %s\n","deletions.bat");
  Warning("ViewBuilder Begin/End Error - Accessing volume culler(-1)\n");
  Warning("ViewBuilder Begin/End Error - Setting frustum data(-1)\n");
  Warning("Warning: Softbarrier trigger couldn\'t find front or back planes. Removing!\n");
  Warning("[Sound] %s(\"%s\") called. %s\n","PrintChannel",pcVar2,&DAT_103236cf);
  Warning("[Sound] %s(\"%s\") called. %s\n","S_StopChannelUnlocked",pcVar2,"Stopping sound.");
  Warning("[Sound] %s(\"%s\") called. %s\n",param_1,param_2,puVar1);
  Warning("[Sound] %s(\"%s\") called. %s\n",param_1,pcVar2,puVar1);
  Warning("[Sound] S_StartSound(\"%s\") called. Flags: %d. %s%s\n",pcVar5,
  Warning("\"fs_warning_level n\" where n is one of:\n");
  Warning("\"origin\"\t\"%.1f, %.1f, %.1f\"\n",(double)local_10,(double)fStack12,
  Warning("\t0:\tFILESYSTEM_WARNING_QUIET\n");
  Warning("\t1:\tFILESYSTEM_WARNING_REPORTUNCLOSED\n");
  Warning("\t2:\tFILESYSTEM_WARNING_REPORTUSAGE\n");
  Warning("\t3:\tFILESYSTEM_WARNING_REPORTALLACCESSES\n");
  Warning("\t4:\tFILESYSTEM_WARNING_REPORTALLACCESSES_READ\n");
  Warning("\t5:\tFILESYSTEM_WARNING_REPORTALLACCESSES_READWRITE\n");
  Warning("\t6:\tFILESYSTEM_WARNING_REPORTALLACCESSES_ASYNC\n");
  Warning("aaquality: %d\n",param_1[0x16]);
  Warning("aasamples: %d\n",param_1[9]);
  Warning("bad inline model number %i\n",iVar1);
  Warning("classname %s used to create wrong class type\n","viewangleanim");
  Warning("cycler_flex used on model %s without enough flexes.\n",param_1);
  Warning("dxSupportLevel: %d\n",param_1[0xc]);
  Warning("env_screenoverlay %s has no overlays to display.\n",puVar3);
  Warning("env_screenoverlay couldn\'t find overlay %s.\n",
  Warning("env_soundscape_proxy can\'t find target soundscape: \'%s\'\n",puVar5);
  Warning("height: %d\n",param_1[1]);
  Warning("info_particle_system (%s) has no particle system name specified!\n",puVar1);
  Warning("logic_measure_movement: Unable to find measure reference entity %s\n",param_1);
  Warning("logic_measure_movement: Unable to find movement reference entity %s\n",param_1);
  Warning("logic_measure_movement: Unable to find movement target entity %s\n",param_1);
  Warning("m_nForceAnisotropicLevel: %d\n",param_1[10]);
  Warning("monitorGamma: %f\n",(double)(float)param_1[4]);
  Warning("motionblur: %s\n",pcVar1);
  Warning("no more split screen slots!\n");
  Warning("npc_track_plane at %.0f %.0f %0.f missing modelname\n",(double)(float)param_1[0x84],
  Warning("phys_motor %s does not have a valid axis helper, and self-destructed!\n",pcVar2);
  Warning("r_cheapwaterend: %f\n",(double)(float)param_1);
  Warning("r_cheapwaterstart: %f\n",(double)(float)param_1);
  Warning("r_shadowrendertotexture: %s\n",pcVar1);
  Warning("save_in_memory is compatible with only the Xbox 360!\n");
  Warning("shadowdepthtexture: %s\n",pcVar3);
  Warning("skipMipLevels: %d\n",param_1[0xb]);
  Warning("spec_pos %.1f %.1f %.1f %.1f %.1f\n",(double)local_10,(double)local_c,(double)local_8,
  Warning("tripleBuffered: %s\n",pcVar1);
  Warning("unable to create world_item %d\n",param_1[0x13c]);
  Warning("vjobs interface not connected\n");
  Warning("vprof_playback_average [# frames]\n");
  Warning("vprof_playback_start requires a filename\n");
  Warning("vprof_to_csv requires an input filename (.VPROJ) and optional VPROF node names\n");
  Warning("width: %d\n",*param_1);
  _DAT_1004ff40 = "SBH_cur";
  _DAT_1004ff48 = "SBH_max";
  _DAT_105f9ae8 = "CAI_Agent";
  _DAT_105facd0 = "CAI_BaseNPC";
  _DAT_106072f4 = LoggingSystem_RegisterLoggingChannel("DeveloperVerbose",0,0,0,DAT_106072f0);
  _DAT_10646704 = (**(code **)(*DAT_10646008 + 4))("ExtraParticleFilesTable",0x400,0,0,1);
  _DAT_10646708 = (**(code **)(*DAT_10646008 + 4))("Movies",0x10,0,0,1);
  _DAT_10646714 = (**(code **)(*DAT_10646008 + 4))("InfoPanel",0x80,0,0,0);
  _DAT_10651048 = FUN_100a7bb0("player_manager",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
  _DAT_10651048 = FUN_100a7bb0("ti_player_resource",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
  _DAT_106a6784 = "grenade";
  _DAT_106a69b8 = "viewmodel";
  _DAT_106aa820 = "beam_spotlight";
  _DAT_106aa9d0 = "env_cascade_light";
  _DAT_106ae3fc = "env_detail_controller";
  _DAT_106ae454 = "func_useableladder";
  _DAT_106ae5d8 = "info_ladder_dismount";
  _DAT_106b39d8 = "env_sprite";
  _DAT_106b39f4 = "env_sprite_oriented";
  _DAT_106b3ffc = "env_spritetrail";
  _DAT_106b6c4c = "func_teamclip";
  _DAT_106b92ec = "PREV_XYZ";
  _DAT_106b92f4 = "RADIUS";
  _DAT_106b92fc = "ROTATION";
  _DAT_106b9304 = "ROTATION_SPEED";
  _DAT_106b930c = "TINT_RGB";
  _DAT_106b9314 = "ALPHA";
  _DAT_106b931c = "CREATION_TIME";
  _DAT_106b9324 = "SEQUENCE_NUMBER";
  _DAT_106b932c = "TRAIL_LENGTH";
  _DAT_106b9334 = "PARTICLE_ID";
  _DAT_106b9344 = "SEQUENCE_NUMBER1";
  _DAT_106b934c = "HITBOX_INDEX";
  _DAT_106b9354 = "HITBOX_RELATIVE_XYZ";
  _DAT_106b935c = "ALPHA2";
  _DAT_106b9364 = "SCRATCH_VEC";
  _DAT_106b936c = "SCRATCH_FLOAT";
  _DAT_106b9374 = "UNUSED";
  _DAT_106b937c = "PITCH";
  _DAT_106b9384 = "NORMAL";
  _DAT_106b938c = "GLOW_RGB";
  _DAT_106b9394 = "GLOW_ALPHA";
  _DAT_106c411c = "predicted_viewmodel";
  _DAT_106c41c0 = "tacint_gamerules";
  _DAT_106c4250 = "tistaticglobalsproxy";
  _DAT_106c426c = "vip_entity";
  _DAT_106c4288 = "boat_controllable";
  _DAT_106c42ac = "helicopter_ct";
  _DAT_106c42c8 = "helicopter_ter";
  _DAT_106c42e4 = "helicopter_mafia";
  _DAT_106c4310 = "helicopter_controllable";
  _DAT_106c4454 = "base_controllable";
  _DAT_106c4504 = "phys_controllable";
  _DAT_106c4550 = "wheeled_controllable";
  _DAT_106c463c = "realwheeled_controllable";
  _DAT_106c4750 = "weapon_ti_base";
  _DAT_106c4be0 = "weapon_Knife";
  _DAT_106c4cac = "weapon_gsr1911";
  _DAT_106c4d74 = "weapon_mr96";
  _DAT_106c4e3c = "weapon_mtx";
  _DAT_106c4f04 = "weapon_p2000";
  _DAT_106c4fcc = "weapon_p250";
  _DAT_106c5094 = "weapon_sphinx";
  _DAT_106c515c = "weapon_vertec";
  _DAT_106c5224 = "weapon_xd45";
  _DAT_106c5260 = "prop_breaching_charge";
  _DAT_106c528c = "prop_c4_charge";
  _DAT_106c5344 = "weapon_c4detonator";
  _DAT_106c540c = "weapon_m320";
  _DAT_106c5438 = "grenade_40mm";
  _DAT_106c5504 = "weapon_mg4";
  _DAT_106c55cc = "weapon_rpg7";
  _DAT_106c55f8 = "rpg_rocket";
  _DAT_106c56b4 = "weapon_ak47";
  _DAT_106c577c = "weapon_amd65";
  _DAT_106c5844 = "weapon_aug";
  _DAT_106c590c = "weapon_dsa58";
  _DAT_106c59d4 = "weapon_g36k";
  _DAT_106c5a9c = "weapon_hk417";
  _DAT_106c5b64 = "weapon_k1a";
  _DAT_106c5c2c = "weapon_m1";
  _DAT_106c5cf4 = "weapon_m4";
  _DAT_106c5dbc = "weapon_sg551";
  _DAT_106c5e84 = "weapon_bekas";
  _DAT_106c5fc4 = "weapon_fp6";
  _DAT_106c6104 = "weapon_m4star10";
  _DAT_106c6244 = "weapon_tgs12";
  _DAT_106c6384 = "weapon_mp5";
  _DAT_106c644c = "weapon_mp7";
  _DAT_106c6514 = "weapon_p90";
  _DAT_106c65dc = "weapon_pdw";
  _DAT_106c66a4 = "weapon_skorpion";
  _DAT_106c676c = "weapon_superv";
  _DAT_106c6834 = "weapon_uzi";
  _DAT_106c68fc = "weapon_as50";
  _DAT_106c69c4 = "weapon_m14";
  _DAT_106c6a8c = "weapon_spr";
  _DAT_106c6b54 = "weapon_uratio";
  _DAT_106c6bb4 = "cycler_weapon";
  _DAT_106c6bd0 = "weapon_cubemap";
  _DAT_1071395c = LoggingSystem_RegisterLoggingChannel("DeveloperVerbose",0,0,0,DAT_10713958);
  _DAT_10730d0c = (*(code *)param_1)("XboxSystemInterface002",0);
  _DAT_10730d34 = LoggingSystem_RegisterLoggingChannel("VJOBS",0,0,0,DAT_10730d30);
  _DAT_1076e248 = (**(code **)(*piVar3 + 0xc))("CenterPrintText16",1);
  _DAT_107827c8 = (**(code **)(*param_2 + 0x2c))("$C0_Y",(int)&uStack8 + 3,0);
  _DAT_107827cc = (**(code **)(*DAT_107c0a04 + 0x150))("dev/lumcompare","Other textures",1,0);
  _DAT_10782828 = (**(code **)(*param_2 + 0x2c))("$bloomsaturation",(int)&uStack8 + 3,0);
  _DAT_10795bd4 = (*(code *)param_1)("VGUI_Surface031",0);
  _DAT_107a27d8 = LoggingSystem_RegisterLoggingChannel("TIRules",&LAB_102c17d0,1,0,0xff800a0a);
  _DAT_107a27d8 = LoggingSystem_RegisterLoggingChannel("TIRules",FUN_102c17d0,1,0,0xff800a0a);
  _DAT_107a27dc = LoggingSystem_RegisterLoggingChannel("TIRulesDebug",&LAB_102c17b0,1,0,0xffff3232);
  _DAT_107a27dc = LoggingSystem_RegisterLoggingChannel("TIRulesDebug",FUN_102c17b0,1,0,0xffff3232);
  _DAT_107b2460 = FUN_1042f270(param_3,(uint *)"magnitude",0);
  _DAT_107d48b4 = "PREV_XYZ";
  _DAT_107d48bc = "RADIUS";
  _DAT_107d48c4 = "ROTATION";
  _DAT_107d48cc = "ROTATION_SPEED";
  _DAT_107d48d4 = "TINT_RGB";
  _DAT_107d48dc = "ALPHA";
  _DAT_107d48e4 = "CREATION_TIME";
  _DAT_107d48ec = "SEQUENCE_NUMBER";
  _DAT_107d48f4 = "TRAIL_LENGTH";
  _DAT_107d48fc = "PARTICLE_ID";
  _DAT_107d490c = "SEQUENCE_NUMBER1";
  _DAT_107d4914 = "HITBOX_INDEX";
  _DAT_107d491c = "HITBOX_RELATIVE_XYZ";
  _DAT_107d4924 = "ALPHA2";
  _DAT_107d492c = "SCRATCH_VEC";
  _DAT_107d4934 = "SCRATCH_FLOAT";
  _DAT_107d493c = "UNUSED";
  _DAT_107d4944 = "PITCH";
  _DAT_107d494c = "NORMAL";
  _DAT_107d4954 = "GLOW_RGB";
  _DAT_107d495c = "GLOW_ALPHA";
  _File = (FILE *)FUN_10149e50(local_1c,pcVar1,"log.gz",'\x01');
  _File = _fopen("simple.log","at+");
  _File = _fopen(local_204,"wt");
  _File = _fopen(param_1,"rb");
  _File = _fopen(param_1,"wb");
  _Source = "";
  _Src = "";
  _Str1 = "";
  _Str1 = "world";
  bVar2 = FUN_100a6de0(this,"info_hint");
  cVar1 = (**(code **)(*(int *)(DAT_10681754 + 4) + 0x48))("//mod/cfg/modsettings.cfg",0);
  cVar1 = (**(code **)(*(int *)(DAT_10681754 + 4) + 0x48))("enginetools.txt","EXECUTABLE_PATH");
  cVar1 = (**(code **)(*(int *)(DAT_10681754 + 4) + 0x48))(local_208,"EXECUTABLE_PATH");
  cVar1 = (**(code **)(*(int *)(DAT_106cb7e8 + 4) + 0x48))("media/HealthWarning.txt",0);
  cVar1 = (**(code **)(*DAT_106cb7e8 + 0x16c))(param_1,"CONTENT",local_20c,0x104);
  cVar1 = (**(code **)(*this + 0x1ac))("sprites/blueglow1.vmt",0);
  cVar1 = (**(code **)(DAT_10681754[1] + 0x48))("SAVE\\modeswitchsave.sav",0);
  cVar1 = (**(code **)(DAT_10681754[1] + 0x48))("SAVE\\modeswitchsave.tga",0);
  cVar1 = (**(code **)(DAT_106cb7e8[1] + 0x48))(local_234,"PROFILE");
  cVar1 = (**(code **)(DAT_106cb7e8[1] + 0x48))(param_1,"PROFILE");
  cVar1 = FUN_1013aba0(&local_10,(byte *)"classname",local_810);
  cVar1 = FUN_101c7b20("Breakable.Computer",unaff_EBP + -0x120,0);
  cVar1 = FUN_101c7b20("Breakable.MatConcrete",unaff_EBP + -0x120,0);
  cVar1 = FUN_101c7b20("Breakable.MatGlass",unaff_EBP + -0x120,0);
  cVar1 = FUN_101c7b20("Breakable.MatMetal",unaff_EBP + -0x120,0);
  cVar2 = FUN_10137bb0(&local_10,(byte *)"classname",(char *)local_1810);
  cVar2 = FUN_10137bb0(&local_10,(byte *)"classname",(char *)local_181c);
  cVar2 = FUN_1013aba0(&local_10,(byte *)"Stage",(char *)local_858);
  cVar2 = FUN_1013aba0(&local_10,(byte *)"TeamBias",(char *)local_858);
  cVar2 = FUN_1013aba0(&local_10,(byte *)"angles",(char *)local_858);
  cVar2 = FUN_1013aba0(&local_10,(byte *)"classname",(char *)local_18cc);
  cVar2 = FUN_101c7b20("Inferno.Fire.Ignite",local_1d4,0);
  cVar4 = FUN_1013aba0(&local_10,(byte *)"classname",&stack0xffffe730);
  cVar4 = FUN_1013aba0(&local_10,(byte *)"hammerid",(char *)local_85c);
  cVar5 = FUN_1013aba0(&local_10,(byte *)"zone_mode",(char *)local_85c);
  else if ((param_1 != (uint *)"deadmodel") &&
  fVar10 = (float10)(**(code **)(*piVar5 + 0x1c))("-servertime",0xbf800000);
  fVar10 = FUN_102686b0(param_1,(uint *)"scaleAmount",0.0);
  fVar10 = FUN_1039d900(param_1,(uint *)"scaleAmount",0.0);
  fVar10 = FUN_1042f1d0(param_1,(uint *)"scaleAmount",0.0);
  fVar10 = FUN_1042f1d0(param_3,(uint *)"directiony",0.0);
  fVar11 = FUN_102686b0(param_1,(uint *)"duration",0.0);
  fVar11 = FUN_1042f1d0(param_3,(uint *)"directionz",0.0);
  fVar12 = FUN_102686b0(param_1,(uint *)"holdtime",0.0);
  fVar12 = FUN_1042f1d0(*(void **)((int)this + 0x40f4),(uint *)"scale",1.0);
  fVar12 = FUN_1042f1d0(param_3,(uint *)"scale",0.0);
  fVar14 = FUN_1039d900(puVar7,(uint *)"Cooldown",*(float *)((int)this + 0x544));
  fVar14 = FUN_1039d900(puVar7,(uint *)"WarmupTime",*(float *)((int)this + 0x53c));
  fVar14 = FUN_1042f1d0(puVar10,(uint *)"Cooldown",(float)puVar12[0xd05]);
  fVar14 = FUN_1042f1d0(puVar10,(uint *)"WarmupTime",(float)local_8[0xd03]);
  fVar19 = FUN_1039d900(param_1,(uint *)"SpreadBias",0.1);
  fVar19 = FUN_1039d900(param_1,(uint *)"SpreadRatio",0.0);
  fVar19 = FUN_1042f1d0(param_1,(uint *)"SpreadBias",0.1);
  fVar19 = FUN_1042f1d0(param_1,(uint *)"SpreadRatio",0.0);
  fVar2 = FUN_101044c0((void *)(param_1 + -4),"GetRenderOrigin",local_8,&local_c);
  fVar2 = FUN_1042f1d0(param_2,(uint *)"scale",0.002);
  fVar2 = FUN_1042f1d0(param_2,(uint *)"scale",0.005);
  fVar2 = FUN_1042f1d0(param_2,(uint *)"scale",2.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"anglesx",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"anglesy",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"anglesz",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"directionx",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"directiony",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"directionz",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"forceposx",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"forceposy",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"forceposz",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"forcex",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"forcey",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"forcez",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"height",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"originx",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"originy",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"originz",0.0);
  fVar2 = FUN_1042f1d0(param_3,(uint *)"width",0.0);
  fVar3 = FUN_102686b0(*(void **)(param_1 + 0x168),(uint *)"cl_updaterate",64.0);
  fVar3 = FUN_102686b0(param_1,(uint *)"pausetime",1.0);
  fVar3 = FUN_102686b0(param_1,(uint *)"playbackrate",1.0);
  fVar3 = FUN_102686b0(param_1,(uint *)"skiptotime",-1.0);
  fVar3 = FUN_102686b0(param_1,(uint *)"stoptime",-1.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"anglesx",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"anglesy",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"anglesz",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"decay",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"directionx",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"directiony",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"directionz",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"distance",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"duration",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"originx",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"originy",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"originz",0.0);
  fVar3 = FUN_1042f1d0(param_3,(uint *)"radius",0.0);
  fVar4 = FUN_102686b0(param_1,(uint *)"fadein",0.0);
  fVar4 = FUN_102686b0(param_1,(uint *)"fadeout",0.0);
  fVar4 = FUN_102686b0(param_1,(uint *)"finalfov",0.0);
  fVar4 = FUN_102686b0(param_1,(uint *)"fovhold",0.0);
  fVar4 = FUN_102686b0(param_1,(uint *)"fovratein",0.0);
  fVar4 = FUN_102686b0(param_1,(uint *)"fovrateout",0.0);
  fVar4 = FUN_102686b0(param_1,(uint *)"fxtime",0.0);
  fVar4 = FUN_102686b0(param_1,(uint *)"holdtime",0.0);
  fVar4 = FUN_102686b0(param_1,(uint *)"progress",0.0);
  fVar4 = FUN_1039d900(param_1,(uint *)"progress",0.0);
  fVar4 = FUN_1042f1d0(param_1,(uint *)"progress",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"brightness",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"directionx",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"directiony",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"directionz",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"duration",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"noise",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"originx",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"originy",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"originz",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"scale",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"startx",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"starty",0.0);
  fVar4 = FUN_1042f1d0(param_3,(uint *)"startz",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"EndWidth",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"FadeLength",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"HaloScale",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"Noise",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"ScrollRate",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"Width",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"color_hdrscale",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"end_x",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"end_y",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"end_z",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"framerate",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"start_x",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"start_y",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"start_z",0.0);
  fVar5 = FUN_1042f1d0(param_1,(uint *)"startframe",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"anglesx",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"anglesy",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"anglesz",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"duration",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"magnitude",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"normalx",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"normaly",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"normalz",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"originx",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"originy",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"originz",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"radius",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"scale",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"sizex",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"sizey",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"sizez",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"startx",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"starty",0.0);
  fVar5 = FUN_1042f1d0(param_3,(uint *)"startz",0.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"AutoBrakeFactor",3.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"AutoBrakeGain",1.1);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"AxleRatio",3.8);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"ExtraGravity",0.8);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"GearForceMult",0.1);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"Horsepower",450.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"SpringDampCompress",3.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"SpringDampRelax",10.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"SpringLengthOverride",0.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"StabilizerConstant",80.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"WheelDragCoefficient",0.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"WheelInertia",0.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"WheelMass",11.3398);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"WheelRotDamping",0.0);
  fVar5 = FUN_1042f1d0(this_00,(uint *)"WheelRotInertiaLimit",0.0);
  fVar6 = FUN_1042f1d0(param_3,(uint *)"originx",0.0);
  fVar7 = FUN_1039d900(pvVar5,(uint *)"BlindOffset",4.0);
  fVar7 = FUN_1039d900(pvVar5,(uint *)"CycleTime",0.15);
  fVar7 = FUN_1039d900(pvVar5,(uint *)"Damage",42.0);
  fVar7 = FUN_1039d900(pvVar5,(uint *)"DeployTime",1.1);
  fVar7 = FUN_1039d900(pvVar5,(uint *)"HolsterTime",-1.0);
  fVar7 = FUN_1039d900(pvVar5,(uint *)"Mobility",1.0);
  fVar7 = FUN_1039d900(pvVar5,(uint *)"Range",16384.0);
  fVar7 = FUN_1039d900(pvVar5,(uint *)"ReloadTime",1.5);
  fVar7 = FUN_1042f1d0(param_3,(uint *)"originy",0.0);
  fVar7 = FUN_1042f1d0(pvVar5,(uint *)"BlindOffset",4.0);
  fVar7 = FUN_1042f1d0(pvVar5,(uint *)"CycleTime",0.15);
  fVar7 = FUN_1042f1d0(pvVar5,(uint *)"Damage",42.0);
  fVar7 = FUN_1042f1d0(pvVar5,(uint *)"DeployTime",1.1);
  fVar7 = FUN_1042f1d0(pvVar5,(uint *)"HolsterTime",-1.0);
  fVar7 = FUN_1042f1d0(pvVar5,(uint *)"Mobility",1.0);
  fVar7 = FUN_1042f1d0(pvVar5,(uint *)"Range",16384.0);
  fVar7 = FUN_1042f1d0(pvVar5,(uint *)"ReloadTime",1.5);
  fVar8 = FUN_1039d900(param_2,(uint *)"duration",1.0);
  fVar8 = FUN_1039d900(param_2,(uint *)"endtime",0.0);
  fVar8 = FUN_1039d900(param_2,(uint *)"slowdownratio",0.0);
  fVar8 = FUN_1039d900(param_2,(uint *)"starttime",0.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"AutoBrakeFactor",3.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"AutoBrakeGain",1.1);
  fVar8 = FUN_1039d900(this_00,(uint *)"AxleRatio",3.8);
  fVar8 = FUN_1039d900(this_00,(uint *)"ExtraGravity",0.8);
  fVar8 = FUN_1039d900(this_00,(uint *)"GearForceMult",0.1);
  fVar8 = FUN_1039d900(this_00,(uint *)"Horsepower",450.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"SpringDampCompress",3.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"SpringDampRelax",10.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"SpringLengthOverride",0.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"StabilizerConstant",80.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"WheelDragCoefficient",0.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"WheelInertia",0.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"WheelMass",11.3398);
  fVar8 = FUN_1039d900(this_00,(uint *)"WheelRotDamping",0.0);
  fVar8 = FUN_1039d900(this_00,(uint *)"WheelRotInertiaLimit",0.0);
  fVar8 = FUN_1042f1d0(param_2,(uint *)"duration",1.0);
  fVar8 = FUN_1042f1d0(param_2,(uint *)"endtime",0.0);
  fVar8 = FUN_1042f1d0(param_2,(uint *)"slowdownratio",0.0);
  fVar8 = FUN_1042f1d0(param_2,(uint *)"starttime",0.0);
  fVar8 = FUN_1042f1d0(param_3,(uint *)"originz",0.0);
  fVar8 = FUN_1042f1d0(pvVar2,(uint *)"maxValue",100.0);
  fVar8 = FUN_1042f1d0(pvVar2,(uint *)"minValue",0.0);
  fVar8 = FUN_1042f1d0(pvVar2,(uint *)"stepSize",1.0);
  fVar8 = FUN_1042f1d0(this_00,(uint *)"scale",1.0);
  fVar9 = FUN_1042f1d0(param_2,(uint *)"Width",0.5);
  fVar9 = FUN_1042f1d0(param_3,(uint *)"directionx",0.0);
  for (; piVar2 != (int *)0x0; piVar2 = FUN_100eed30(piVar2,"info_ladder_dismount",param_1,param_2))
  for (piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"env_projectedtexture");
  for (piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"game_player_equip");
  for (piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"point_camera"); piVar1 != (int *)0x0;
  for (piVar2 = FUN_100eed30((int *)0x0,"player",(float *)(param_1 + 0xc1),local_10);
  for (ppvVar4 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"func_navmesh_zone");
  hModule = GetModuleHandleA("kernel32");
  hModule = GetModuleHandleW(L"kernel32.dll");
  hModule = LoadLibraryA("dsound.dll");
  hModule = LoadLibraryA("kernel32.dll");
  hModule = LoadLibraryW(L"Advapi32.dll");
  hWnd = CreateWindowExA(0,"HL2-TrackIR",(LPCSTR)0x0,0xcf0000,-0x80000000,0,-0x80000000,0,(HWND)0x0,
  hWnd = FindWindowA("Worldcraft_ShellMessageWnd","Worldcraft_ShellMessageWnd");
  iVar1 = (**(code **)(*(int *)(DAT_10681754 + 4) + 0x24))("//mod/cfg/config.cfg",&DAT_10330e30,0);
  iVar1 = (**(code **)(*(int *)(DAT_10681754 + 4) + 0x24))(local_20c,&DAT_10323770,"PROFILE");
  iVar1 = (**(code **)(**(int **)(iVar1 + 0x4f9c) + 0x30))("QueryPort");
  iVar1 = (**(code **)(*DAT_106466d0 + 0x18))("game_init",0,0);
  iVar1 = (**(code **)(*DAT_1067e240 + 0x3c))("__ReplaceClosures",0);
  iVar1 = (**(code **)(*DAT_106cb7c4 + 0x44))("mat_paint_enabled");
  iVar1 = (**(code **)(*DAT_106cb7e0 + 0x2c))("Valve_CreatingSpecificSoundCache");
  iVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("sprites/animglow01.vmt",0);
  iVar1 = (**(code **)(*DAT_10730d00 + 0x18))("gameui_activated",0,0);
  iVar1 = (**(code **)(*DAT_10730d00 + 0x18))("gameui_hidden",0,0);
  iVar1 = (**(code **)(*DAT_107c0a6c + 0x88))("hud/leaderboard_dead");
  iVar1 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/bomb_zone");
  iVar1 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/defend_zone");
  iVar1 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/defend_zone_connector");
  iVar1 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/defend_zone_red");
  iVar1 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/defend_zone_white");
  iVar1 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/stamina/fullbar");
  iVar1 = (**(code **)(*DAT_107c0a7c + 0x30))(0,"resource/ChatScheme.res","ChatScheme");
  iVar1 = (**(code **)(*param_1 + 0x18))("EventQueue",this,0,DAT_105a0c10,DAT_105a0c14);
  iVar1 = (**(code **)(*param_1 + 0x18))("Value",this,0,DAT_105a0e28,DAT_105a0e2c);
  iVar1 = (**(code **)(*param_1 + 0x1c))("userid",0);
  iVar1 = (**(code **)(*param_1 + 0x30))("in_graph");
  iVar1 = (**(code **)(*param_1 + 0x30))("in_jlook");
  iVar1 = (**(code **)(*param_1 + 0xc))("ChatText",0);
  iVar1 = (**(code **)(*param_1 + 0xc))("GLOBAL",this,0,DAT_105b7070,DAT_105b7074);
  iVar1 = (**(code **)(*piVar6 + 0xc))("-mat_vsync",0);
  iVar1 = (**(code **)(*piVar6 + 0xc))("-nosound",0);
  iVar1 = (**(code **)(DAT_10681754[1] + 0x24))(param_1,&DAT_1032b700,"PROFILE");
  iVar1 = (**(code **)(iVar1 + 0x24))("-game",uVar4);
  iVar1 = FUN_0041e000(local_410,".dll");
  iVar1 = FUN_10061a60(param_1,(byte *)"body_pitch");
  iVar1 = FUN_10061a60(param_1,(byte *)"body_yaw");
  iVar1 = FUN_10061a60(param_1,(byte *)"hor_aims");
  iVar1 = FUN_10061a60(param_1,(byte *)"move_x");
  iVar1 = FUN_10061a60(param_1,(byte *)"ver_aims");
  iVar1 = FUN_1008c000(param_1,(byte *)"Explosion_Start");
  iVar1 = FUN_1008c000(param_1,(byte *)"wall1_corner_bottomleft");
  iVar1 = FUN_1008c000(param_1,(byte *)"wall1_corner_bottomright");
  iVar1 = FUN_1008c000(param_1,(byte *)"wall1_corner_topleft");
  iVar1 = FUN_1008c000(param_1,(byte *)"wall1_corner_topright");
  iVar1 = FUN_1008c000(param_1,(byte *)"wall2_corner_bottomleft");
  iVar1 = FUN_1008c000(param_1,(byte *)"wall2_corner_bottomright");
  iVar1 = FUN_1008c000(param_1,(byte *)"wall2_corner_topleft");
  iVar1 = FUN_1008c000(param_1,(byte *)"wall2_corner_topright");
  iVar1 = FUN_1008c000(param_1,(byte *)"wheel_fl");
  iVar1 = FUN_1008c000(param_1,(byte *)"wheel_rr");
  iVar1 = FUN_1008c0a0(piVar2,(byte *)"aim_pitch");
  iVar1 = FUN_1008c0a0(piVar2,(byte *)"aim_yaw");
  iVar1 = FUN_1008c0a0(piVar2,(byte *)"move_yaw");
  iVar1 = FUN_100ae3e0("models/germanygibs.mdl");
  iVar1 = FUN_100ae3e0("sprites/bubble.vmt");
  iVar1 = FUN_100ae3e0("sprites/fire_floor.vmt");
  iVar1 = FUN_100ae3e0("sprites/flare6.vmt");
  iVar1 = FUN_100ae3e0("sprites/gunsmoke.vmt");
  iVar1 = FUN_100ae3e0("sprites/light_glow03.vmt");
  iVar1 = FUN_100ae3e0("sprites/plasma1.vmt");
  iVar1 = FUN_100d00a0("GAMETITLE");
  iVar1 = FUN_10124190((byte *)"player_regenerates_health");
  iVar1 = FUN_10265920((char *)local_104,0x100,(byte *)"%.10f");
  iVar1 = FUN_102659a0((byte *)"TextMessageDefault",(byte *)((int)param_1 + 0x298));
  iVar1 = FUN_102659a0((byte *)"TextMessageDefault",(byte *)(param_1 + 0x298));
  iVar1 = FUN_102659a0(param_1,(byte *)"Cancel");
  iVar1 = FUN_102659a0(param_1,(byte *)"Close");
  iVar1 = FUN_102659a0(param_1,(byte *)"LoadLookup");
  iVar1 = FUN_102659a0(param_1,(byte *)"acosh");
  iVar1 = FUN_102659a0(param_1,(byte *)"asinh");
  iVar1 = FUN_102659a0(param_1,(byte *)"atanh");
  iVar1 = FUN_102659a0(param_1,(byte *)"cancel");
  iVar1 = FUN_102659a0(param_1,(byte *)"choosesound");
  iVar1 = FUN_102659a0(param_1,(byte *)"delete");
  iVar1 = FUN_102659a0(param_1,(byte *)"equals");
  iVar1 = FUN_102659a0(param_1,(byte *)"expm1");
  iVar1 = FUN_102659a0(param_1,(byte *)"floor");
  iVar1 = FUN_102659a0(param_1,(byte *)"gamma");
  iVar1 = FUN_102659a0(param_1,(byte *)"greater_than");
  iVar1 = FUN_102659a0(param_1,(byte *)"greater_than_or_equal");
  iVar1 = FUN_102659a0(param_1,(byte *)"invert");
  iVar1 = FUN_102659a0(param_1,(byte *)"invert_scale");
  iVar1 = FUN_102659a0(param_1,(byte *)"less_than");
  iVar1 = FUN_102659a0(param_1,(byte *)"less_than_or_equal");
  iVar1 = FUN_102659a0(param_1,(byte *)"lgamma");
  iVar1 = FUN_102659a0(param_1,(byte *)"log10");
  iVar1 = FUN_102659a0(param_1,(byte *)"log1p");
  iVar1 = FUN_102659a0(param_1,(byte *)"nearbyint");
  iVar1 = FUN_102659a0(param_1,(byte *)"not_equal");
  iVar1 = FUN_102659a0(param_1,(byte *)"refresh");
  iVar1 = FUN_102659a0(param_1,(byte *)"revert");
  iVar1 = FUN_102659a0(param_1,(byte *)"rintol");
  iVar1 = FUN_102659a0(param_1,(byte *)"round");
  iVar1 = FUN_102659a0(param_1,(byte *)"roundtol");
  iVar1 = FUN_102659a0(param_1,(byte *)"submit");
  iVar1 = FUN_102659a0(param_1,(byte *)"trunc");
  iVar1 = FUN_102659b0(local_410,".dll");
  iVar1 = FUN_102659b0(param_1,"autosavedangerous");
  iVar1 = FUN_10265ad0((int)local_104,"#var_",5);
  iVar1 = FUN_10265ad0((int)param_1,"vgui::",6);
  iVar1 = FUN_10265ad0((int)puVar4,"vgui::",6);
  iVar1 = FUN_10265ad0((int)puVar5,"vgui::",6);
  iVar1 = FUN_10265bb0(local_94,"localhost",10);
  iVar1 = FUN_10265bb0(pcVar9,"#",1);
  iVar1 = FUN_10265c20((int)local_104,"V_",2);
  iVar1 = FUN_10265c20((int)param_1,"sound",5);
  iVar1 = FUN_10265c20((int)param_1,"vgui::",6);
  iVar1 = FUN_10265c20((int)pcVar4,"FKID_",5);
  iVar1 = FUN_10265c20((int)piVar4,"vgui::",6);
  iVar1 = FUN_10265ff0("TexGroup_Global_");
  iVar1 = FUN_102f5d8a(param_1,(byte *)"3DRefinement");
  iVar1 = FUN_102f5d8a(param_1,(byte *)"DXT1UseAlpha");
  iVar1 = FUN_102f5d8a(param_1,(byte *)"RefinementSteps");
  iVar1 = FUN_102f5d8a(param_1,(byte *)"UseAdaptiveWeighting");
  iVar1 = FUN_102f5d8a(param_1,(byte *)"UseSSE2");
  iVar1 = FUN_102f5d8a(param_1,(byte *)"WeightB");
  iVar1 = FUN_102f5d8a(param_1,(byte *)"WeightG");
  iVar1 = FUN_102f5d8a(param_1,(byte *)"WeightR");
  iVar1 = FUN_10399150(param_2,param_3,(byte *)"([%d] %s)");
  iVar1 = FUN_103991d0(param_1,(byte *)"playback_time");
  iVar1 = FUN_103991d0(param_1,(byte *)"shifted_time");
  iVar1 = FUN_103991e0((char *)param_1,".wav");
  iVar1 = FUN_103991e0(pcVar4,".vmt");
  iVar1 = FUN_103991e0(pcVar6,".vcd");
  iVar1 = FUN_10399300((int)local_104,"#var_",5);
  iVar1 = FUN_10399300((int)param_1,"vgui::",6);
  iVar1 = FUN_10399300((int)puVar4,"vgui::",6);
  iVar1 = FUN_10399300((int)puVar5,"vgui::",6);
  iVar1 = FUN_10399480((int)local_404,"models/",7);
  iVar1 = FUN_10399480((int)param_1,"SNDLVL_",iVar1);
  iVar1 = FUN_10399480((int)param_1,"vgui::",6);
  iVar1 = FUN_10399480((int)piVar4,"vgui::",6);
  iVar1 = FUN_103997b0("SNDLVL_");
  iVar1 = FUN_103997b0("nav_merge_mesh");
  iVar1 = FUN_103997b0("nav_use_place ");
  iVar1 = FUN_103fd956(pcVar2,(int)"[%f %f %f]");
  iVar1 = FUN_1042d940(param_2,param_3,(byte *)"models/weapons/v_models/%s/%s_%i");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"EffectDispatch");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"ExtraParticleFilesTable");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"GameRulesCreation");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"InfoPanel");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"Materials");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"Movies");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"ParticleEffectNames");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"Scenes");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"VguiScreen");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"playback_time");
  iVar1 = FUN_1042d9c0(param_1,(byte *)"shifted_time");
  iVar1 = FUN_1042d9d0((char *)param_1,"showsplan ");
  iVar1 = FUN_1042d9d0((char *)param_1,"showsquad ");
  iVar1 = FUN_1042d9d0((char *)param_1,"showstage ");
  iVar1 = FUN_1042d9d0((char *)param_1,"showteam ");
  iVar1 = FUN_1042d9d0((char *)param_1,"wp ");
  iVar1 = FUN_1042d9d0(local_410,".dll");
  iVar1 = FUN_1042d9d0(param_1,".htm");
  iVar1 = FUN_1042daf0((int)local_104,"#var_",5);
  iVar1 = FUN_1042daf0((int)param_1,"SNDLVL_",7);
  iVar1 = FUN_1042daf0((int)param_1,"vgui::",6);
  iVar1 = FUN_1042daf0((int)puVar4,"vgui::",6);
  iVar1 = FUN_1042daf0((int)puVar5,"vgui::",6);
  iVar1 = FUN_1042dc00((char *)param_1,"MaterialImage",0x14);
  iVar1 = FUN_1042dc00((char *)param_1,"roundwin",iVar1);
  iVar1 = FUN_1042dc00(param_1,"roundwin",iVar1);
  iVar1 = FUN_1042dc70((int)local_404,"models/",7);
  iVar1 = FUN_1042dc70((int)param_1,"vgui::",6);
  iVar1 = FUN_1042dc70((int)piVar4,"vgui::",6);
  iVar1 = FUN_1042dc70(param_1,"none",iVar1);
  iVar1 = FUN_1042e020("none");
  iVar1 = FUN_1042e020("roundwin");
  iVar1 = FUN_10444d70(this,(byte *)"ButtonPurchase",1);
  iVar1 = FUN_10444d70(this,(byte *)"Description",1);
  iVar1 = FUN_10444d70(this,(byte *)"ExpiredOverlay",1);
  iVar1 = FUN_10444d70(this,(byte *)"ItemDescription",1);
  iVar1 = FUN_10444d70(this,(byte *)"ItemImage",1);
  iVar1 = FUN_10444d70(this,(byte *)"ItemPrices",1);
  iVar1 = FUN_10444d70(this,(byte *)"LabelName",1);
  iVar1 = FUN_10444d70(this,(byte *)"LabelTitle",1);
  iVar1 = FUN_10444d70(this,(byte *)"NegativeProgress",1);
  iVar1 = FUN_10444d70(this,(byte *)"PercentLabel",1);
  iVar1 = FUN_10444d70(this,(byte *)"PositiveProgress",1);
  iVar1 = FUN_10444d70(this,(byte *)"TeamImage",1);
  iVar1 = FUN_10444d70(this,(byte *)"Title",1);
  iVar1 = FUN_104af95a(param_1,(byte *)"3DRefinement");
  iVar1 = FUN_104af95a(param_1,(byte *)"DXT1UseAlpha");
  iVar1 = FUN_104af95a(param_1,(byte *)"RefinementSteps");
  iVar1 = FUN_104af95a(param_1,(byte *)"UseAdaptiveWeighting");
  iVar1 = FUN_104af95a(param_1,(byte *)"UseChannelWeighting");
  iVar1 = FUN_104af95a(param_1,(byte *)"UseSSE2");
  iVar1 = FUN_104af95a(param_1,(byte *)"WeightB");
  iVar1 = FUN_104af95a(param_1,(byte *)"WeightG");
  iVar1 = FUN_104af95a(param_1,(byte *)"WeightR");
  iVar10 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_L_Hand");
  iVar12 = FUN_10444d70(this,(byte *)"PnlDefaultMark",0);
  iVar2 = (**(code **)(*(int *)(DAT_107c09f8 + 4) + 0x24))("cfg/config_default.cfg",&DAT_1051c19c,0)
  iVar2 = (**(code **)(**(int **)(param_1 + 200) + 4))("server_query_info",4,0,0,0);
  iVar2 = (**(code **)(*DAT_106cb7e0 + 0x2c))("#Valve_CreatingCache");
  iVar2 = (**(code **)(*DAT_106cb86c + 4))("resource/SourceScheme.res","SourceScheme");
  iVar2 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/icon_arrow");
  iVar2 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/icon_arrow_down");
  iVar2 = (**(code **)(*DAT_107c0a7c + 0x30))(0,"resource/basemodui_scheme.res","basemodui_scheme");
  iVar2 = (**(code **)(*param_1 + 0x1c))("userid",0);
  iVar2 = (**(code **)(*param_1 + 8))("PropertySheetBorder");
  iVar2 = (**(code **)(*piVar1 + 0x10))("CurDSoundDevice",0);
  iVar2 = (**(code **)(*piVar1 + 0x20))("-height",param_1[1]);
  iVar2 = (**(code **)(*piVar1 + 0x20))("-particles",0xffffffff);
  iVar2 = (**(code **)(*piVar1 + 0x24))("-game","tacint");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("$fogcolor",0,1);
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-NoQueuedPacketThread");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-autoquit");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-csm_quality_level");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-gamestatslogging");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-gamestatsloggingtofile");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-height");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-internalbuild");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-makedevshots");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-makereslists");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-mat_aaquality");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-mat_antialias");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-mat_resolveFullFrameDepth");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-mat_vsync");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-minmemory");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-nobreakpad");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-noclearsave");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-nodns");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-noip");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-nomouse");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-noshaderapi");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-publicbuild");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-random_invariant");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-resizing");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-safe");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-sv_benchmark");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-trackdeletions");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-tvmasteronly");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-usetcp");
  iVar2 = (**(code **)(*piVar1 + 0x2c))("-width");
  iVar2 = (**(code **)(*piVar1 + 0xc))("-bugreporterdll",&local_8);
  iVar2 = (**(code **)(*piVar1 + 0xc))("-edit",0);
  iVar2 = (**(code **)(*piVar1 + 0xc))("-flushlog",0);
  iVar2 = (**(code **)(*piVar1 + 0xc))("-language",0);
  iVar2 = (**(code **)(*piVar1 + 0xc))("-makereslists",0);
  iVar2 = (**(code **)(*piVar1 + 0xc))("-nosound",0);
  iVar2 = (**(code **)(*piVar1 + 0xc))("-remotebug",0);
  iVar2 = (**(code **)(*piVar1 + 0xc))("-tools",0);
  iVar2 = (**(code **)(*piVar1 + 0xc))("DebugOverlay",0);
  iVar2 = (**(code **)(*piVar4 + 0x2c))("-nopreload");
  iVar2 = (**(code **)(*piVar4 + 0x2c))("-noshaderapi");
  iVar2 = (**(code **)(*piVar4 + 0xc))("-snoforceformat",0);
  iVar2 = (**(code **)(*piVar4 + 0xc))("-tools",0);
  iVar2 = (**(code **)(*piVar4 + 0xc))("Normal_Smaller",1);
  iVar2 = (*local_10)("VSERVERENGINETOOLS001",0);
  iVar2 = FUN_10061a60(piVar3,(byte *)"head_pitch");
  iVar2 = FUN_10061a60(piVar3,(byte *)"head_yaw");
  iVar2 = FUN_10061a60(piVar3,(byte *)"main_rotor_spin");
  iVar2 = FUN_10061a60(piVar3,(byte *)"tail_rotor_spin");
  iVar2 = FUN_100898d0(param_1,(byte *)"back_end");
  iVar2 = FUN_100898d0(param_1,(byte *)"front_end");
  iVar2 = FUN_100898d0(param_1,(byte *)"left_side");
  iVar2 = FUN_100898d0(param_1,(byte *)"right_side");
  iVar2 = FUN_1008c000(param_1,(byte *)"engine_left_exhaust_port");
  iVar2 = FUN_1008c000(param_1,(byte *)"engine_right_exhaust_port");
  iVar2 = FUN_1008c000(param_1,(byte *)"view_origin");
  iVar2 = FUN_1008c000(param_1,(byte *)"view_origin2");
  iVar2 = FUN_1008c000(piVar1,(byte *)"rpg7_port_exhaust");
  iVar2 = FUN_1008c0a0(piVar3,(byte *)"body_pitch");
  iVar2 = FUN_1008c110(this,(byte *)"close");
  iVar2 = FUN_100e5ad0(puVar6,(int)local_10,(int)((ulonglong)local_10 >> 0x20),local_8,"origin",
  iVar2 = FUN_1016a2a0(local_48,"",iVar2,piVar1);
  iVar2 = FUN_10227b40(param_1,(int)"VSoundEmitter003");
  iVar2 = FUN_102659a0(param_1,(byte *)"FarZOverride");
  iVar2 = FUN_102659a0(param_1,(byte *)"FogEnable");
  iVar2 = FUN_102659a0(param_1,(byte *)"FogEnableSky");
  iVar2 = FUN_102659a0(param_1,(byte *)"FogOverride");
  iVar2 = FUN_102659a0(param_1,(byte *)"cancel");
  iVar2 = FUN_102659a0(param_1,(byte *)"modelprecache");
  iVar2 = FUN_102659a0(param_1,(byte *)"savegame");
  iVar2 = FUN_102659a0(param_1,(byte *)"snapshot");
  iVar2 = FUN_102659a0(param_1,(byte *)"submit");
  iVar2 = FUN_102659a0(param_1,(byte *)"toggledebugpanel");
  iVar2 = FUN_102659b0((char *)param_2,"update");
  iVar2 = FUN_102659b0(local_108,"\\materialsrc\\");
  iVar2 = FUN_102659b0(param_1,"*.hl?");
  iVar2 = FUN_102659b0(param_1,"RATINGBOARD");
  iVar2 = FUN_102659b0(pcVar4,"quick");
  iVar2 = FUN_102659b0(pcVar5,"quick");
  iVar2 = FUN_10265ad0(iVar1,"VertexLitGeneric",0x10);
  iVar2 = FUN_10265bb0((char *)param_2,"VTF",4);
  iVar2 = FUN_10265bb0(pcVar4,"localhost",9);
  iVar2 = FUN_10265ff0("V_NUMBERS");
  iVar2 = FUN_1026d670(param_1,"%d");
  iVar2 = FUN_1026d670(param_1,"%f %f %f %f");
  iVar2 = FUN_1026d670(param_1,"%f %f %f");
  iVar2 = FUN_1026d670(param_1,"%f %f");
  iVar2 = FUN_1026d670(param_1,"%f");
  iVar2 = FUN_1038de80(param_2,(int *)"Concept");
  iVar2 = FUN_1038de80(param_2,(int *)"Subject");
  iVar2 = FUN_10399300((int)param_1,"weapon_",7);
  iVar2 = FUN_10399410((char *)pbVar1,"server_",7);
  iVar2 = FUN_10399410(pcVar1,"#TeamName_C",0xb);
  iVar2 = FUN_10399410(pcVar1,"#TeamName_S",0xb);
  iVar2 = FUN_10399410(pcVar1,"#TeamName_T",0xb);
  iVar2 = FUN_10399410(pcVar1,"#TeamName_U",0xb);
  iVar2 = FUN_103997b0("curve_");
  iVar2 = FUN_103997b0("scene_playvcd");
  iVar2 = FUN_1039cac0(param_1,"%d");
  iVar2 = FUN_1039cac0(param_1,"%f %f %f %f");
  iVar2 = FUN_1039cac0(param_1,"%f %f %f");
  iVar2 = FUN_1039cac0(param_1,"%f %f");
  iVar2 = FUN_1039cac0(param_1,"%f");
  iVar2 = FUN_103fd956("%f %f",(int)pcVar3);
  iVar2 = FUN_1042d940(param_2,param_3,(byte *)"%d %d %d %d");
  iVar2 = FUN_1042d9c0(param_1,(byte *)"VOL_NORM");
  iVar2 = FUN_1042daf0((int)(param_3 + 8),"vo",2);
  iVar2 = FUN_1042dc00(param_1,"delete",7);
  iVar2 = FUN_1042e020("curve_");
  iVar2 = FUN_104368b0(param_1,"%d");
  iVar2 = FUN_104368b0(param_1,"%f %f %f %f");
  iVar2 = FUN_104368b0(param_1,"%f %f %f");
  iVar2 = FUN_104368b0(param_1,"%f %f");
  iVar2 = FUN_104368b0(param_1,"%f");
  iVar2 = FUN_10444d70(this,(byte *)"RankListing",1);
  iVar2 = FUN_10444d70(this,(byte *)"timessagelabel",1);
  iVar2 = __stricmp(_Str1,".Z");
  iVar2 = _strncmp("right_",pcVar5,sVar9);
  iVar3 = (**(code **)(*DAT_106466d0 + 0x18))("nav_generate",0,0);
  iVar3 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/goal_hostage");
  iVar3 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/bomb_zone");
  iVar3 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/defend_zone");
  iVar3 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/defend_zone_connector");
  iVar3 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/defend_zone_red");
  iVar3 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/defend_zone_white");
  iVar3 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/player_outline");
  iVar3 = (**(code **)(*param_1 + 0xc))("EventQueue",this,0,DAT_105a0c10,DAT_105a0c14);
  iVar3 = (**(code **)(*param_1 + 8))("Default");
  iVar3 = (**(code **)(*piVar1 + 0x10))("DisableGameStats",0);
  iVar3 = (**(code **)(*piVar1 + 0x2c))("$fogenable",0,1);
  iVar3 = (**(code **)(*piVar2 + 0x20))("-maxplayers",0xffffffff);
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-heapcheck");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-makedevshots");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-makereslists");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-nobreakpad");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-small");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-spewsentences");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-startmap");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-swapcores");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-tools");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-xboxreslist");
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-xlsp");
  iVar3 = (**(code **)(*piVar2 + 0xc))("-edit",0);
  iVar3 = (**(code **)(*piVar2 + 0xc))("-endgamevid",0);
  iVar3 = (**(code **)(*piVar2 + 0xc))("-nosound",0);
  iVar3 = (**(code **)(*piVar2 + 0xc))("-remotebug",0);
  iVar3 = (**(code **)(*piVar2 + 0xc))("-reslistdir",&local_8);
  iVar3 = (**(code **)(*piVar2 + 0xf0))(param_1,param_2,"Lighting Verts",0,0);
  iVar3 = (**(code **)(*piVar2 + 8))("MenuBorder");
  iVar3 = (**(code **)(*piVar4 + 0x84))("engine_left2_exhaust_port",uVar14,uVar15);
  iVar3 = (**(code **)(*piVar4 + 0x84))("engine_left2_turbines");
  iVar3 = (**(code **)(*piVar4 + 0x84))("engine_right2_exhaust_port");
  iVar3 = (**(code **)(*piVar4 + 0x84))("engine_right2_turbines");
  iVar3 = (**(code **)(*piVar4 + 0xc))("-remotebug",0);
  iVar3 = (**(code **)(*piVar5 + 0x2c))("-allowstalezip");
  iVar3 = (**(code **)(*piVar5 + 0x2c))("-makedevshots");
  iVar3 = (**(code **)(*piVar5 + 0xc))("-nodevicechecks",0);
  iVar3 = (**(code **)(*piVar6 + 0x2c))("-profileinit");
  iVar3 = (**(code **)(piVar4[1] + 0x84))("anim_attachment_LH");
  iVar3 = (**(code **)(piVar4[1] + 0x84))("carry_fire_extinguisher");
  iVar3 = (**(code **)(piVar4[1] + 0x84))("shield_attachment");
  iVar3 = (**(code **)(piVar5[1] + 0x84))("anim_attachment_LH");
  iVar3 = (**(code **)(piVar6[1] + 0x84))("shield_attachment");
  iVar3 = CVProfile::BudgetGroupNameToBudgetGroupID((CVProfile *)g_VProfCurrentProfile_exref,"NPCs")
  iVar3 = FUN_10061a60(piVar4,(byte *)"front_wheels_turn");
  iVar3 = FUN_10061a60(piVar4,(byte *)"left_flap_set1");
  iVar3 = FUN_10061a60(piVar4,(byte *)"left_flap_set2");
  iVar3 = FUN_10061a60(piVar4,(byte *)"right_flap_set1");
  iVar3 = FUN_10061a60(piVar4,(byte *)"right_flap_set2");
  iVar3 = FUN_10061a60(piVar4,(byte *)"tail_flap_set");
  iVar3 = FUN_10061a60(piVar4,(byte *)"tail_left_flap_set");
  iVar3 = FUN_10061a60(piVar4,(byte *)"tail_right_flap_set");
  iVar3 = FUN_10061a60(piVar4,(byte *)"vehicle_left_engine_spin");
  iVar3 = FUN_10061a60(piVar4,(byte *)"vehicle_right_engine_spin");
  iVar3 = FUN_10061a60(piVar4,(byte *)"wheel_spin");
  iVar3 = FUN_1008c000(piVar5,(byte *)"shield_attachment");
  iVar3 = FUN_1008c050(this,(byte *)"Quadruped.LFootBone1");
  iVar3 = FUN_1008c050(this,(byte *)"ValveBiped.Bip01_L_Hand");
  iVar3 = FUN_100ae3e0("sprites/glow01.vmt");
  iVar3 = FUN_102659a0(param_3,(byte *)"operator");
  iVar3 = FUN_102659b0((char *)local_108,"update");
  iVar3 = FUN_102659b0(param_1,"*.hl?");
  iVar3 = FUN_10265c20((int)pcVar4,"FKID_",5);
  iVar3 = FUN_10265ff0("V_NUMBERS");
  iVar3 = FUN_10399150(param_2,param_3,(byte *)"%d %d %d %d");
  iVar3 = FUN_1042e020("DrpCSMQuality");
  iVar3 = FUN_1042e050(param_1,param_2,param_3,(undefined (*) [16])"playgamesound");
  iVar3 = FUN_1042e050(param_1,param_2,param_3,(undefined (*) [16])"playsoundscape");
  iVar3 = FUN_1042e050(param_1,param_2,param_3,(undefined (*) [16])"snd_playsounds");
  iVar3 = FUN_1042e050(param_1,param_2,param_3,(undefined (*) [16])"snd_setsoundparam");
  iVar3 = FUN_10444d70(this,(byte *)"Highlight",1);
  iVar3 = _strncmp(_Str1,"weapon_",7);
  iVar4 = (**(code **)(*DAT_107c09f0 + 0x30))("#TI_Objective_OOB");
  iVar4 = (**(code **)(*DAT_107c0a7c + 0x14))("basemodui_scheme");
  iVar4 = (**(code **)(*param_1 + 0x1c))("holiday",0);
  iVar4 = (**(code **)(*piVar1 + 0x2c))("$fogend",0,1);
  iVar4 = (**(code **)(*piVar1 + 0x2c))("-nolv");
  iVar4 = (**(code **)(*piVar2 + 0xc))("-recapvid",0);
  iVar4 = (**(code **)(*piVar3 + 0x2c))("-filmgrain");
  iVar4 = (**(code **)(*piVar3 + 0x2c))("-gamestatsfileoutputonly");
  iVar4 = (**(code **)(*piVar3 + 0x2c))("-textmessagedebug");
  iVar4 = (**(code **)(*piVar5 + 0x2c))("-autodemo");
  iVar4 = (**(code **)(*ppuVar3 + 0x2c))("-steam");
  iVar4 = (**(code **)(iVar4 + 0xc))("ChatText",uVar2);
  iVar4 = (**(code **)(param_1[1] + 0x84))("chest");
  iVar4 = (**(code **)(piVar5[1] + 0x84))("carry_2hand_object");
  iVar4 = (**(code **)(piVar5[1] + 0x84))("carry_portable_blockade");
  iVar4 = FUN_10061a60(piVar5,(byte *)"body_pitch");
  iVar4 = FUN_10061a60(piVar5,(byte *)"body_yaw");
  iVar4 = FUN_1008c000(this,(byte *)"nozzle");
  iVar4 = FUN_103991e0(param_4,".wav");
  iVar4 = FUN_10399410((char *)local_18cc,"info_ammo_box_spawn",0x13);
  iVar4 = FUN_10399410((char *)local_18cc,"info_heli_supply_drop",0x15);
  iVar4 = FUN_10399410((char *)local_18cc,"info_oozpoint",0xd);
  iVar4 = FUN_10399410((char *)local_18cc,"info_player_ctstart_",iVar4);
  iVar4 = FUN_10399410((char *)local_18cc,"info_portable_blockade",0x16);
  iVar4 = FUN_10399410((char *)param_1,"game_intermission",0x11);
  iVar4 = FUN_10399480((int)puVar5,"!player",8);
  iVar4 = FUN_103997b0("info_player_ctstart_");
  iVar4 = FUN_1042d9d0(param_4,".wav");
  iVar4 = FUN_1042d9d0(pcVar3,"paper");
  iVar4 = FUN_1042dc00((char *)param_1,"game_intermission",0x11);
  iVar4 = FUN_1042dc00(local_214,"none",0x103);
  iVar4 = FUN_1042e050(piVar5,(int)((ulonglong)uVar16 >> 0x20),pauVar6,(undefined (*) [16])"error");
  iVar4 = FUN_10444d70(this,(byte *)"DividerBar",0);
  iVar4 = FUN_10444d70(this,(byte *)"ItemImageCorners",1);
  iVar4 = FUN_10444d70(this,(byte *)"timerclock",0);
  iVar4 = FindBudgetGroupName(this,"Brush_Model_Rendering");
  iVar4 = FindBudgetGroupName(this,"Client_Animation");
  iVar4 = FindBudgetGroupName(this,"Detail_Prop_Rendering");
  iVar4 = FindBudgetGroupName(this,"Displacement_Rendering");
  iVar4 = FindBudgetGroupName(this,"Dynamic_Light_Rendering");
  iVar4 = FindBudgetGroupName(this,"Fast Path Model Rendering");
  iVar4 = FindBudgetGroupName(this,"FileSystem");
  iVar4 = FindBudgetGroupName(this,"Game");
  iVar4 = FindBudgetGroupName(this,"Interpolation");
  iVar4 = FindBudgetGroupName(this,"Light_Cache");
  iVar4 = FindBudgetGroupName(this,"NPCs");
  iVar4 = FindBudgetGroupName(this,"Networking");
  iVar4 = FindBudgetGroupName(this,"Occlusion");
  iVar4 = FindBudgetGroupName(this,"Other_Model_Rendering");
  iVar4 = FindBudgetGroupName(this,"Overlays");
  iVar4 = FindBudgetGroupName(this,"Particle/Effect_Rendering");
  iVar4 = FindBudgetGroupName(this,"Physics");
  iVar4 = FindBudgetGroupName(this,"Player");
  iVar4 = FindBudgetGroupName(this,"Prediction");
  iVar4 = FindBudgetGroupName(this,"Replay");
  iVar4 = FindBudgetGroupName(this,"Ropes");
  iVar4 = FindBudgetGroupName(this,"Server Animation");
  iVar4 = FindBudgetGroupName(this,"Shadow_Rendering");
  iVar4 = FindBudgetGroupName(this,"Sound");
  iVar4 = FindBudgetGroupName(this,"Static_Prop_Rendering");
  iVar4 = FindBudgetGroupName(this,"Swap_Buffers");
  iVar4 = FindBudgetGroupName(this,"Texture_Cache");
  iVar4 = FindBudgetGroupName(this,"Tools");
  iVar4 = FindBudgetGroupName(this,"Unaccounted");
  iVar4 = FindBudgetGroupName(this,"VGUI");
  iVar4 = FindBudgetGroupName(this,"World Rendering");
  iVar4 = InternetOpenA("Half-Life 2",0,0,0,0);
  iVar4 = _strncmp(_Str1,"weapon_",7);
  iVar5 = (**(code **)(*DAT_106466d0 + 0x18))("round_pre_start",0,0);
  iVar5 = (**(code **)(*DAT_107c0a04 + 0x150))("dev/clearalpha","Other textures",1,0);
  iVar5 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/controller_layout_sticks");
  iVar5 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/controller_layout_sticks_look");
  iVar5 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/controller_layout_sticks_move");
  iVar5 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/controller_stick_callouts_360");
  iVar5 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/icon_info");
  iVar5 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/hud/spinner_saving");
  iVar5 = (**(code **)(*DAT_107c0a6c + 0x88))("vgui/loadbar_dots");
  iVar5 = (**(code **)(*piVar1 + 4))("rosette.ArmedFont");
  iVar5 = (**(code **)(*piVar1 + 4))("rosette.DefaultFont");
  iVar5 = (**(code **)(*piVar2 + 0xc))("-testvideo",0);
  iVar5 = (**(code **)(*piVar4 + 0x2c))("-makereslists");
  iVar5 = (**(code **)(*piVar4 + 0x2c))("-netspike");
  iVar5 = (**(code **)(iVar5 + 0xc))("ConsoleText",uVar3);
  iVar5 = (**(code **)(piVar8[1] + 0x84))("carry_fire_extinguisher");
  iVar5 = FUN_1008c000(local_8,(byte *)"physics_pushpoint_rear");
  iVar5 = FUN_1008c000(this,(byte *)"front_feeler1");
  iVar5 = FUN_1008c000(this,(byte *)"front_feeler2");
  iVar5 = FUN_1008c000(this,(byte *)"muzzle");
  iVar5 = FUN_1008c000(this,(byte *)"physics_pushpoint_front");
  iVar5 = FUN_1008c000(this,(byte *)"taillight1");
  iVar5 = FUN_1008c000(this,(byte *)"taillight2");
  iVar5 = FUN_102f2265((char *)local_244,(int)"%i %i %i %i");
  iVar5 = FUN_103fd956(*(char **)(local_14 + 0x24),(int)"%d %d %d %d");
  iVar5 = FUN_103fd956(pcVar7,(int)"%d %d %d %d");
  iVar6 = (**(code **)(*piVar2 + 0x2c))("-swapcores");
  iVar6 = (**(code **)(*piVar5 + 0x2c))("-nopreload");
  iVar6 = (**(code **)(*piVar5 + 0xc))("-tools",0);
  iVar6 = (**(code **)(piVar9[1] + 0x84))("carry_2hand_object");
  iVar6 = (**(code **)(piVar9[1] + 0x84))("carry_portable_blockade");
  iVar6 = FUN_10023a9c((byte *)puVar4,(byte *)"GenuineIntel");
  iVar6 = FUN_10061a60(piVar7,(byte *)"vehicle_steer");
  iVar6 = FUN_10061a60(piVar7,(byte *)"vehicle_wheel_fl_height");
  iVar6 = FUN_10061a60(piVar7,(byte *)"vehicle_wheel_fl_spin");
  iVar6 = FUN_10061a60(piVar7,(byte *)"vehicle_wheel_fr_height");
  iVar6 = FUN_10061a60(piVar7,(byte *)"vehicle_wheel_fr_spin");
  iVar6 = FUN_10061a60(piVar7,(byte *)"vehicle_wheel_rl_height");
  iVar6 = FUN_10061a60(piVar7,(byte *)"vehicle_wheel_rl_spin");
  iVar6 = FUN_10061a60(piVar7,(byte *)"vehicle_wheel_rr_height");
  iVar6 = FUN_10061a60(piVar7,(byte *)"vehicle_wheel_rr_spin");
  iVar6 = FUN_10265bb0(local_18,"#",1);
  iVar6 = FUN_10265bb0(pcVar4,"localhost",9);
  iVar6 = FUN_10265c20((int)&local_12c,"connect",iVar6);
  iVar6 = FUN_10265ff0("connect");
  iVar6 = FUN_10399410(&stack0xffffe730,"info_mapinfo",0xc);
  iVar6 = FUN_10399410(&stack0xffffe730,"prop_physics_multiplayer",iVar6);
  iVar6 = FUN_10399410(&stack0xffffe730,"worldspawn",10);
  iVar6 = FUN_103997b0("prop_physics_multiplayer");
  iVar6 = FUN_103aa550(*(void **)(param_1 + 0x250),(byte *)"pose_UI_CT_store_pose");
  iVar6 = FUN_103fd956(pcVar8,(int)"%d %d %d %d");
  iVar6 = FUN_1042dc00((char *)pauVar3,"ENDOFMATCH",10);
  iVar6 = FUN_1042dc00(pcVar7,"CPU",3);
  iVar6 = FUN_1042dc70(local_c,"gravel",6);
  iVar6 = FUN_10444d70(this,(byte *)"ItemNameCorners",1);
  iVar7 = (**(code **)(*DAT_106cb7c4 + 0x44))("sv_skyname");
  iVar7 = (**(code **)(*param_1 + 0x1c))("assister_dominated",0);
  iVar7 = (**(code **)(*param_1 + 0x1c))("assister_revenge",0);
  iVar7 = (**(code **)(*param_1 + 0x1c))("dominated",0);
  iVar7 = (**(code **)(*param_1 + 0x1c))("revenge",0);
  iVar7 = (**(code **)(*piVar6 + 0x1c))("entityid",0);
  iVar7 = (**(code **)(*piVar6 + 0x1c))("vote_option",0);
  iVar7 = FUN_10061a10(piVar3,(byte *)"ValveBiped.Bip01_L_Hand");
  iVar7 = FUN_10265ff0("materials/");
  iVar8 = FUN_10061a60(piVar7,(byte *)"vehicle_guage");
  iVar8 = FUN_10061a60(piVar7,(byte *)"vehicle_rpm");
  iVar8 = FUN_10061a60(piVar7,(byte *)"vehicle_steer");
  iVar8 = FUN_1008c0a0(piVar7,(byte *)"vehicle_guage");
  iVar8 = FUN_1008c0a0(piVar7,(byte *)"vehicle_rpm");
  iVar8 = FUN_1008c0a0(piVar7,(byte *)"vehicle_steer");
  iVar8 = FUN_103991e0((char *)param_2,".vmt");
  iVar9 = (**(code **)(*piVar10 + 0xc))("-collate",0);
  iVar9 = (**(code **)(*piVar3 + 0xc))("-buildcubemaps",0);
  iVar9 = (**(code **)(*piVar3 + 0xc))("-leakcheck",0);
  iVar9 = (**(code **)(*piVar8 + 0xc))("-reslistmap",&param_2);
  iVar9 = FUN_1008c050(piVar4,(byte *)"ValveBiped.Bip01_L_Hand");
  iVar9 = FUN_1008c0a0(piVar5,(byte *)"vehicle_wheel_fl_height");
  iVar9 = FUN_1008c0a0(piVar5,(byte *)"vehicle_wheel_fr_height");
  iVar9 = FUN_1008c0a0(piVar5,(byte *)"vehicle_wheel_rl_height");
  iVar9 = FUN_1008c0a0(piVar5,(byte *)"vehicle_wheel_rr_height");
  if (((((char *)this_00[0x17] == "prop_dynamic") ||
  if ((((char *)param_1[0x17] == "env_steamjet") ||
  if ((((iVar1 == 1) || (uVar2 = FUN_10399710(param_1,(byte *)"!self"), uVar2 == 0)) &&
  if ((((iVar2 != 0) && (iVar2 = __stricmp(_Str1,".zip"), iVar2 != 0)) &&
  if ((((param_1 == (byte *)"rendercolor") ||
  if ((((param_1 == (uint *)"rendercolor") ||
  if ((((pbVar1 == (byte *)"break_prop") ||
  if (((*(char **)((int)*(void **)((int)this + 4) + 0x5c) == "npc_monk") ||
  if (((*(char **)((int)*(void **)(param_1 + 4) + 0x5c) == "npc_monk") ||
  if (((bool)local_9) || (uVar7 = FUN_10265f50(param_1,(byte *)"autosave"), uVar7 != 0)) {
  if (((cVar1 == '\0') || (cVar1 == '\"')) || ((cVar1 == '{' || ((cVar1 == '}' || (cVar1 == '=')))))
  if (((char *)param_1[0x17] != "env_sprite_clientside") &&
  if (((char *)param_1[0x17] != "func_water") &&
  if (((char *)param_1[0x17] == "physics_prop") ||
  if (((char *)this_00[0x17] == "func_breakable") ||
  if (((char *)this_00[0x17] == "func_breakable_surf") ||
  if (((uVar2 != 0) && (uVar2 = FUN_1042df20(pbVar1,(byte *)"map_transition"), uVar2 != 0)) &&
  if (((uVar3 == 0) || (uVar3 = FUN_10265f50(param_1,(byte *)"size+"), uVar3 == 0)) &&
  if ((*(char *)((int)this + 0x357) == '\0') || (pcVar1 = "BulletProof", param_2 != 0x47)) {
  if ((*(char *)((int)this + 0xc1) == '\0') || (pcVar1 = "BulletProof", param_2 != 0x47)) {
  if ((*(char **)((int)param_1 + 0x5c) != "func_water") &&
  if ((*(char **)((int)param_1 + 0x5c) != "func_water_analog") &&
  if ((*(char **)((int)param_1 + 0x5c) != "prop_dynamic_override") &&
  if ((*(char **)((int)param_1 + 0x5c) != "prop_physics_override") &&
  if ((*(char **)((int)param_1 + 0x5c) != "prop_talker") &&
  if ((*param_1 == 2) && (uVar8 = FUN_10265f50((byte *)param_1[0x103],(byte *)"short"), uVar8 == 0))
  if ((*param_1 == L'\"') || (*param_1 == L'\'')) {
  if ((cVar1 == '\0') && (FUN_102667c0(local_c,"mat_queue_mode"), local_8[0xc] != 0)) {
  if ((cVar4 == '\0') && (Warning("Executing command outside main loop thread\n"), DAT_106727c4 < 1)
  if ((char *)param_1[0x17] != "func_water_analog") {
  if ((iVar1 != 0) && ((local_804[iVar1 + -1] == '\"' || (local_804[iVar1] == '\'')))) {
  if ((iVar1 != 0) || (pcVar12 = "disabled", *(int *)(DAT_104e4254 + 0x30) != 0)) {
  if ((iVar1 == 0) && (iVar1 = FUN_1042d9d0(param_1,".html"), iVar1 == 0)) {
  if ((iVar3 != 0) && (iVar3 = _strncmp(_Str1,"NPC_",8), iVar3 != 0)) {
  if ((local_18 == (int *)0x0) && (cVar2 = FUN_1017f870(this,(uint *)"Damage"), cVar2 == '\0')) {
  if ((param_1 != (uint *)"shootsounds") &&
  if ((param_1 != -1) && (uVar2 = FUN_10265f50(param_2,(byte *)"toggleconsole"), uVar2 != 0)) {
  if ((param_1 == '\0') && (FUN_102667c0(local_c,"ti_low_violence"), *(int *)(local_8 + 0x30) != 0))
  if ((param_1 == '\0') && (iVar2 = FUN_10124190((byte *)"skill.cfg"), -1 < iVar2)) {
  if ((param_1 == (byte *)"disableshadows") ||
  if ((param_1 == (byte *)"renderamt") ||
  if ((param_1 == (uint *)"DisappearDist") ||
  if ((param_1 == (uint *)"disableshadows") ||
  if ((param_1 == (uint *)"drawinfastreflection") ||
  if ((param_1 == (uint *)"health") ||
  if ((param_1 == (uint *)"material") ||
  if ((param_1 == (uint *)"renderamt") ||
  if ((param_1 == (uint *)"shootmodel") ||
  if ((param_2 != '\0') && (iVar1 = FUN_1042dc00("death_",param_1,6), iVar1 == 0)) {
  if ((param_2 != 0x43) && (uVar1 = FUN_10399710(param_1,(byte *)"Impact.Concrete"), uVar1 == 0)) {
  if ((param_2 != 0x43) && (uVar1 = FUN_10399710(param_1,(byte *)"Slash.Generic"), uVar1 == 0)) {
  if ((param_2 != 0x43) && (uVar1 = FUN_1042df80(param_1,(byte *)"Impact.Concrete"), uVar1 == 0)) {
  if ((param_2 != 0x43) && (uVar1 = FUN_1042df80(param_1,(byte *)"Slash.Generic"), uVar1 == 0)) {
  if ((pbVar1 != (byte *)"player") && (uVar2 = FUN_10399710(pbVar1,(byte *)"player"), uVar2 != 0)) {
  if ((pbVar1 == (byte *)"round_start") ||
  if ((pcVar2 != (char *)0x0) && (iVar3 = FUN_102659b0(pcVar2,"nvfx"), iVar3 != 0)) {
  if ((pcVar3 != (char *)0x0) && (iVar4 = FUN_102f2265(pcVar3,(int)"%ld%c"), 0 < iVar4)) {
  if ((puVar2 != (uint *)0x0) && (puVar2 = FUN_1039d370(puVar2,"Waypoints"), puVar2 != (uint *)0x0))
  if ((puVar3 != (undefined *)0x0) && ((char *)param_1[0x17] != "info_target")) {
  if ((pvVar1 != (void *)0x0) && (puVar2 = FUN_1039d370(pvVar1,"CTPlans"), puVar2 != (uint *)0x0)) {
  if ((pvVar1 != (void *)0x0) && (puVar2 = FUN_1039d370(pvVar1,"Preview"), puVar2 != (uint *)0x0)) {
  if ((pvVar1 != (void *)0x0) && (puVar2 = FUN_1039d370(pvVar1,"TPlans"), puVar2 != (uint *)0x0)) {
  if ((this != (void *)0x0) && (this_00 = FUN_10267f50(this,"Fonts"), this_00 != (uint *)0x0)) {
  if ((this != (void *)0x0) && (this_00 = FUN_10267f50(this,"VideoConfig"), this_00 != (uint *)0x0))
  if ((this != (void *)0x0) && (this_00 = FUN_1042ea30(this,"layout"), this_00 != (uint *)0x0)) {
  if ((uVar2 != 0) && (uVar2 = FUN_10265f50((byte *)param_1,(byte *)"vaudio_miles"), uVar2 != 0)) {
  if ((uVar2 == 0) || (uVar2 = FUN_10399710(param_1,(byte *)"!player"), uVar2 == 0)) {
  if ((uVar2 == 0) || (uVar2 = FUN_1042df80((byte *)"nextlevel",pbVar5), uVar2 == 0)) {
  if ((uVar4 == 0) || (uVar4 = FUN_10399710(pbVar14,(byte *)"say_team"), uVar4 == 0)) {
  if (*(char **)((int)this + 0x5c) == "info_hint") {
  if (*(char **)((int)this + 0x5c) == "info_node_air") {
  if (*(char **)((int)this + 0x5c) == "info_node_hint") {
  if (cVar2 == '\"') {
  if (param_1 != (byte *)"color") {
  if (param_1 != (byte *)"fademindist") {
  if (param_1 != (byte *)"lightcolor") {
  if (param_1 != (byte *)"snapshot_file") {
  if (param_1 != (uint *)"GoalDistance") {
  if (param_1 != (uint *)"Speed") {
  if (param_1 != (uint *)"Stage") {
  if (param_1 != (uint *)"StartOpen") {
  if (param_1 != (uint *)"Start_WP") {
  if (param_1 != (uint *)"VehicleScript") {
  if (param_1 != (uint *)"_light") {
  if (param_1 != (uint *)"angles") {
  if (param_1 != (uint *)"beveragetype") {
  if (param_1 != (uint *)"cheapwaterstartdistance") {
  if (param_1 != (uint *)"color") {
  if (param_1 != (uint *)"fanfriction") {
  if (param_1 != (uint *)"filename") {
  if (param_1 != (uint *)"fireballsprite") {
  if (param_1 != (uint *)"fish_count") {
  if (param_1 != (uint *)"globalname") {
  if (param_1 != (uint *)"health") {
  if (param_1 != (uint *)"init_detonatetime") {
  if (param_1 != (uint *)"lightcolor") {
  if (param_1 != (uint *)"locked_sentence") {
  if (param_1 != (uint *)"locked_sound") {
  if (param_1 != (uint *)"navprop") {
  if (param_1 != (uint *)"panelname") {
  if (param_1 != (uint *)"pitch") {
  if (param_1 != (uint *)"points") {
  if (param_1 != (uint *)"preset") {
  if (param_1 != (uint *)"rotation") {
  if (param_1 != (uint *)"skyname") {
  if (param_1 != (uint *)"snapshot_file") {
  if (param_1 != (uint *)"soundscape") {
  if (param_1 != (uint *)"startcolor") {
  if (param_1 != (uint *)"style") {
  if (param_1 != (uint *)"targetname") {
  if (param_1 != (uint *)"texture") {
  if (param_1 != (uint *)"tolerance") {
  if (param_1 != (uint *)"volume") {
  if (param_1 != (uint *)"width") {
  if (param_1 == (uint *)"Stage") {
  if (param_1 == (uint *)"VIPMinDistance") {
  if (param_1 == (uint *)"_light") {
  if (param_1 == (uint *)"materialName") {
  if (param_2 != (byte *)"Ignore") {
  if (pbVar1 != (byte *)"ignoremsg") {
  if (pbVar11 != (byte *)"voicemenu") {
  if (pbVar3 != (byte *)"!player") {
  if (pbVar3 != (byte *)"nav_selected_set_border_color") {
  if (pbVar6 != (byte *)"demorestart") {
  in_EAX = (**(code **)(*piVar3 + 0x2c))("-nomenuvid");
  in_EAX = Warning("SpliceEdit: Out of memory.\n");
  local_10 = "3D skybox";
  local_10 = "Default";
  local_10 = "VSoundEmitter003";
  local_10 = "brush models";
  local_10 = "bump mapping";
  local_10 = "decals";
  local_10 = "dem_stop";
  local_10 = "detail props";
  local_10 = "displacements";
  local_10 = "dynamic lighting";
  local_10 = "entities";
  local_10 = "fillrate";
  local_10 = "material system and below";
  local_10 = "overlays";
  local_10 = "particles";
  local_10 = "rescale";
  local_10 = "ropes";
  local_10 = "round";
  local_10 = "shadows";
  local_10 = "specularity";
  local_10 = "sprites";
  local_10 = "viewmodel";
  local_10 = "water";
  local_10 = "world geometry";
  local_10 = (**(code **)(*piVar1 + 0x2c))("$fogstart",0,1);
  local_10 = (byte *)FUN_10268930(this_00,(uint *)"Format",(uint)&DAT_103236cf);
  local_10 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
  local_10 = (uint *)"scripts/vehicles/default.txt";
  local_14 = "NULL";
  local_14 = "VWj";
  local_14 = "atan2";
  local_14 = "ceiling";
  local_14 = "dem_datatables";
  local_14 = "scripts/vehicles/default.txt";
  local_14 = "soundemittersystem.dll";
  local_14 = (**(code **)(**(int **)(param_1 + 0x2b8) + 0x4c4))("None",0);
  local_14 = (**(code **)(*DAT_107c0a04 + 0x150))("dev/glow_color","Other textures",1,0);
  local_14 = FUN_1042ee30(puVar10,(uint *)"Slots",0);
  local_14[0] = "weapon_";
  local_14[2] = "func_";
  local_14[3] = "prop_";
  local_18 = "";
  local_18 = "MediaPlayer001";
  local_18 = "dem_usercmd";
  local_18 = "floor";
  local_18 = (**(code **)(*param_1 + 0x1c))("location",0);
  local_18 = FUN_102687d0(this_00,(uint *)"Width",0);
  local_18[0] = "Stage1";
  local_18[1] = "Stage2";
  local_18[2] = "Stage3";
  local_18[3] = "CounterTerrorists";
  local_18c = "vaudio_speex";
  local_1c = "";
  local_1c = "cl_drawhud";
  local_1c = "dem_consolecmd";
  local_1c = "mat_bumpmap";
  local_1c = "mat_drawwater";
  local_1c = "mat_specular";
  local_1c = "mat_stub";
  local_1c = "mat_viewportscale";
  local_1c = "mediaplayer.dll";
  local_1c = "r_3dsky";
  local_1c = "r_drawbrushmodels";
  local_1c = "r_drawdecals";
  local_1c = "r_drawdetailprops";
  local_1c = "r_drawdisp";
  local_1c = "r_drawentities";
  local_1c = "r_drawparticles";
  local_1c = "r_drawropes";
  local_1c = "r_drawsprites";
  local_1c = "r_drawstaticprops";
  local_1c = "r_drawviewmodel";
  local_1c = "r_drawworld";
  local_1c = "r_dynamic";
  local_1c = "r_renderoverlayfragment";
  local_1c = "r_shadows";
  local_1c = (byte *)FUN_10268930(local_8,(uint *)"Format",(uint)&DAT_103236cf);
  local_1c = (char *)FUN_10268930(param_1,(uint *)"border",(uint)&DAT_103236cf);
  local_1c = (char *)FUN_10268930(param_1,(uint *)"drawcolor",(uint)&DAT_103236cf);
  local_1c = (char *)FUN_10268930(param_1,(uint *)"fillcolor",(uint)&DAT_103236cf);
  local_1c = (char *)FUN_1039db00(param_1,(uint *)"border",(uint)&DAT_1043677a);
  local_1c = (char *)FUN_1039db00(param_1,(uint *)"drawcolor",(uint)&DAT_1043677a);
  local_1c = (char *)FUN_1039db00(param_1,(uint *)"fillcolor",(uint)&DAT_1043677a);
  local_1c = (char *)FUN_1042f3d0(param_1,(uint *)"border",(uint)&DAT_104eefb3);
  local_1c = (char *)FUN_1042f3d0(param_1,(uint *)"drawcolor",(uint)&DAT_104eefb3);
  local_1c = (char *)FUN_1042f3d0(param_1,(uint *)"fillcolor",(uint)&DAT_104eefb3);
  local_1c = FUN_1042f270(param_3,(uint *)"hitbox",0);
  local_1c = LoadLibraryA("DbgHelp.dll");
  local_20 = "VENGINE_LAUNCHER_API_VERSION004";
  local_20 = "noise";
  local_20 = ETWBegin("MIX_PaintChannels");
  local_20 = FUN_1042f270(param_3,(uint *)"damagetype",0);
  local_214 = "";
  local_24 = "NULL";
  local_24 = "elerp";
  local_24 = "engine_mapkit.dll";
  local_24 = (**(code **)(*DAT_106cb7f4 + 0x170))("debugempty",&DAT_103236cf,0,0);
  local_24 = (float)(**(code **)(*DAT_107c0a04 + 0x150))("dev/motion_blur","Other textures",1,0);
  local_24 = FUN_1042f270(puVar12,(uint *)"hitbox_default_ImpactAmount",1);
  local_28 = "CL_ParseEventDelta->fromBuf";
  local_28 = "EntityMessage(read)";
  local_28 = "UserMessage(read)";
  local_28 = "VGUI_ivgui008";
  local_28 = "clerp";
  local_28 = "inDataHeader";
  local_28[0] = "Alpha";
  local_28[0] = "Stage1";
  local_28[1] = "Bravo";
  local_28[1] = "Stage2";
  local_28[2] = "Charlie";
  local_28[2] = "Stage3";
  local_28[3] = "Delta";
  local_2c = "cramp";
  local_2c = "vgui2.dll";
  local_2c = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_SmallFB1","RenderTargets",1,0);
  local_2c = FUN_1042f270(param_3,(uint *)"attachmentindex",0);
  local_2c = FUN_1042f270(puVar12,(uint *)"hitbox_default_ExplodeAmount",4);
  local_2c[0] = "dem_unknown";
  local_2c[0] = "nvidia";
  local_2c[1] = "dem_signon";
  local_2c[2] = "dem_packet";
  local_2c[3] = "dem_synctick";
  local_30 = "#L4D360UI_SteamOverlay_Text";
  local_30 = "VGUI_Surface031";
  local_30 = (undefined4 *)(**(code **)(*DAT_107c0a04 + 0x150))(pcVar11,"Other textures",1,0);
  local_34 = "#L4D360UI_SteamOverlay_Title";
  local_34 = "#PORTAL2_VideoOptions_PowerSavings_Info";
  local_34 = "NULL";
  local_34 = "vguimatsurface.dll";
  local_34 = FUN_100c5fd0((int)"debug/debugtexturecolor",piVar5,(int)local_78);
  local_34.lpszClassName = "HL2-TrackIR";
  local_38 = "#GameUI_PowerSavingsMode";
  local_38 = "CL_CopyNewEntity->fromBuf";
  local_38 = "VSoundEmitter003";
  local_38 = "clamp";
  local_38 = FUN_100c5fd0((int)"debug/debugtexturecolor",local_24,(int)local_80);
  local_38[0] = "Plan1";
  local_38[0] = "SquadA";
  local_38[1] = "Plan2";
  local_38[1] = "SquadB";
  local_38[2] = "Plan3";
  local_38[2] = "SquadC";
  local_38[3] = "Plan4";
  local_38[3] = "SquadD";
  local_390[0] = "h fg\x10j";
  local_390[0] = "steam";
  local_3c = "HLTV_ReadEnterPVS1";
  local_3c = "inrange";
  local_3c = "soundemittersystem.dll";
  local_3c = (float)(**(code **)(*DAT_10730cd8 + 0xc))("models/weapons/rpg7_shrapnel_p3.mdl");
  local_3c = FUN_1042f3a0(param_3,(uint *)"entindex",local_8);
  local_40 = "VStudioRender026";
  local_40 = (float)(**(code **)(*DAT_10730cd8 + 0xc))("models/weapons/rpg7_shrapnel_p2.mdl");
  local_40 = FUN_1042f270(param_3,(uint *)"flags",0);
  local_44 = "NULL";
  local_44 = "UncompressPackedEntity2";
  local_44 = "studiorender.dll";
  local_44 = (byte *)FUN_10268930(param_1,(uint *)"border",(uint)&DAT_103236cf);
  local_44 = (byte *)FUN_1039db00(param_1,(uint *)"border",(uint)&DAT_1043677a);
  local_44 = (byte *)FUN_1042f3d0(param_1,(uint *)"border",(uint)&DAT_104eefb3);
  local_44.lpszClassName = "Valve001";
  local_48 = "VStudioDataCache005";
  local_48 = L"";
  local_4c = "datacache.dll";
  local_50 = "HLTV_ReadEnterPVS1";
  local_50 = "MDLCache004";
  local_50[3] = (float)(**(code **)(*DAT_10730cd8 + 0xc))("models/weapons/rpg7_shrapnel_p1.mdl");
  local_54 = "NULL";
  local_54 = "datacache.dll";
  local_54 = "elems";
  local_54[0] = (uint *)FUN_1014fb90(local_10,(int *)"particle/particle_noisesphere");
  local_54[1] = (uint *)FUN_1014fb90(local_10,(int *)"particle/smoke-1");
  local_54[2] = (uint *)FUN_1014fb90(local_10,(int *)"particle/smoke-2");
  local_54[3] = (uint *)FUN_1014fb90(local_10,(int *)"particle/smoke-3");
  local_58 = "VDataCache003";
  local_58 = "elems";
  local_58 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(param_13,"ClientEffect textures",1,0);
  local_5c = "datacache.dll";
  local_60 = "VMaterialSystem080";
  local_64 = "materialsystem.dll";
  local_68 = "UncompressPackedEntity1";
  local_68 = "VPhysics031";
  local_68 = "Water.BulletImpact";
  local_6c = "sprites/nav_goal.vmt";
  local_6c = "vphysics.dll";
  local_70 = "InputSystemVersion001";
  local_74 = "inputsystem.dll";
  local_74 = "sprites/lgtning.vmt";
  local_74 = "sprites/nav_beam_flashing.vmt";
  local_78 = "QueuedLoaderVersion001";
  local_7c = "filesystem_stdio.dll";
  local_8 = "EnemyHit";
  local_8 = "SceneFileCache002";
  local_8 = "Server";
  local_8 = "Terrorists";
  local_8 = "VSoundEmitter003";
  local_8 = "bad allocation";
  local_8 = "dem_stringtables";
  local_8 = "flesh";
  local_8 = "sprites/blueglow1.vmt";
  local_8 = (**(code **)(DAT_10681754[1] + 0x24))("maplist.txt",&DAT_10323770,&DAT_1032376c);
  local_8 = (char *)(**(code **)(*param_1 + 4))("FrameTitleBar.Font");
  local_8 = (char *)FUN_10268930(param_1,(uint *)"fallbackFont",(uint)&DAT_103236cf);
  local_8 = (char *)FUN_1039db00(param_1,(uint *)"fallbackFont",(uint)&DAT_1043677a);
  local_8 = (char *)FUN_1042f3d0(param_1,(uint *)"fallbackFont",(uint)&DAT_104eefb3);
  local_8 = (int *)FUN_104d70b0(param_1,(uint *)"memory_data");
  local_8 = FUN_1042df80(pbVar1,(byte *)"health");
  local_8 = GetProcAddress(hModule,"VerifyVersionInfoA");
  local_80 = "VCvarQuery001";
  local_84 = "engine_mapkit.dll";
  local_84[3] = (**(code **)(*piVar3 + 0x20))("-refreshrate",uVar4);
  local_8c = "sprites/lgtning.vmt";
  local_c = "";
  local_c = "-allowdebug";
  local_c = "Damage";
  local_c = "crescale";
  local_c = "dem_customdata";
  local_c = "scenefilecache";
  local_c = "soundemittersystem";
  local_c = (**(code **)(*piVar3 + 0x2c))("-nostartupsound");
  local_c = (**(code **)(DAT_10681754[1] + 0x24))("deletions.bat",&DAT_10323770,0);
  local_c = (byte *)(**(code **)(*param_1 + 0x1c))("customkill",0);
  local_c = (char *)FUN_10268930(param_1,(uint *)"drawcolor",(uint)&DAT_103236cf);
  local_c = (char *)FUN_1039db00(param_1,(uint *)"drawcolor",(uint)&DAT_1043677a);
  local_c = (char *)FUN_1042f3d0(param_1,(uint *)"drawcolor",(uint)&DAT_104eefb3);
  local_c = (int *)(**(code **)(*piVar3 + 0x2c))("$basetexture",&local_5,0);
  local_c = (int *)(**(code **)(*piVar3 + 0x2c))("$frame",(int)&param_1 + 3,0);
  local_c = (int *)FUN_102687d0(param_1,(uint *)"textinsety",*(uint *)((int)this + 0x218));
  local_c = (int *)FUN_10268930(param_1,(uint *)"associate",(uint)&DAT_103236cf);
  local_c = (int *)FUN_102c10f0(DAT_107a27d0,'\0',(uint *)"ObjectiveInfo",'\x01');
  local_c = (int *)FUN_1039d9a0(param_1,(uint *)"textinsety",*(uint *)((int)this + 0x218));
  local_c = (int *)FUN_1039db00(param_1,(uint *)"associate",(uint)&DAT_1043677a);
  local_c = (int *)FUN_1042f270(param_1,(uint *)"textinsety",*(uint *)((int)this + 0x218));
  local_c = (int *)FUN_1042f3d0(param_1,(uint *)"associate",(uint)&DAT_104eefb3);
  local_c = (uint *)FUN_1042c450((char *)param_1,(int)"FlmChapterXXautogenerated_");
  local_c = FUN_102687d0(this_00,(uint *)"Height",0);
  local_c = FUN_1039d560(param_1,(uint *)"Inaccuracy",0);
  local_c = FUN_1039d560(puVar7,(uint *)"Slots",0);
  local_c = FUN_1042ee30(param_1,(uint *)"Inaccuracy",0);
  pFVar1 = GetProcAddress(hModule,"GetProcessUserModeExceptionPolicy");
  pFVar1 = _fopen(param_1,"wb");
  pFVar11 = GetProcAddress(hModule,"AttachConsole");
  pFVar2 = GetProcAddress(hModule,"CloseThreadpoolTimer");
  pFVar2 = GetProcAddress(hModule,"CloseThreadpoolWait");
  pFVar2 = GetProcAddress(hModule,"CompareStringEx");
  pFVar2 = GetProcAddress(hModule,"CreateEventExW");
  pFVar2 = GetProcAddress(hModule,"CreateSemaphoreExW");
  pFVar2 = GetProcAddress(hModule,"CreateSymbolicLinkW");
  pFVar2 = GetProcAddress(hModule,"CreateThreadpoolTimer");
  pFVar2 = GetProcAddress(hModule,"CreateThreadpoolWait");
  pFVar2 = GetProcAddress(hModule,"EnumSystemLocalesEx");
  pFVar2 = GetProcAddress(hModule,"FlsAlloc");
  pFVar2 = GetProcAddress(hModule,"FlsFree");
  pFVar2 = GetProcAddress(hModule,"FlsGetValue");
  pFVar2 = GetProcAddress(hModule,"FlsSetValue");
  pFVar2 = GetProcAddress(hModule,"FlushProcessWriteBuffers");
  pFVar2 = GetProcAddress(hModule,"FreeLibraryWhenCallbackReturns");
  pFVar2 = GetProcAddress(hModule,"GetCurrentPackageId");
  pFVar2 = GetProcAddress(hModule,"GetCurrentProcessorNumber");
  pFVar2 = GetProcAddress(hModule,"GetDateFormatEx");
  pFVar2 = GetProcAddress(hModule,"GetFileInformationByHandleExW");
  pFVar2 = GetProcAddress(hModule,"GetLocaleInfoEx");
  pFVar2 = GetProcAddress(hModule,"GetLogicalProcessorInformation");
  pFVar2 = GetProcAddress(hModule,"GetTickCount64");
  pFVar2 = GetProcAddress(hModule,"GetTimeFormatEx");
  pFVar2 = GetProcAddress(hModule,"GetUserDefaultLocaleName");
  pFVar2 = GetProcAddress(hModule,"InitializeCriticalSectionEx");
  pFVar2 = GetProcAddress(hModule,"IsValidLocaleName");
  pFVar2 = GetProcAddress(hModule,"LCMapStringEx");
  pFVar2 = GetProcAddress(hModule,"SetDefaultDllDirectories");
  pFVar2 = GetProcAddress(hModule,"SetFileInformationByHandleW");
  pFVar2 = GetProcAddress(hModule,"SetProcessUserModeExceptionPolicy");
  pFVar2 = GetProcAddress(hModule,"SetThreadStackGuarantee");
  pFVar2 = GetProcAddress(hModule,"SetThreadpoolTimer");
  pFVar2 = GetProcAddress(hModule,"SetThreadpoolWait");
  pFVar2 = GetProcAddress(hModule,"WaitForThreadpoolTimerCallbacks");
  pFVar4 = GetProcAddress(hModule,"BuiltDebug");
  pHVar1 = (HMODULE)(**(code **)(*DAT_10681754 + 0x74))(param_1,"EXECUTABLE_PATH",0);
  pHVar1 = (HMODULE)FUN_10198d40((undefined (*) [16])"vtex_dll");
  pHVar1 = FUN_10263c60((undefined (*) [16])"unicode");
  pHVar2 = (HMODULE)FUN_10198d40((undefined (*) [16])"bsppack");
  pHVar2 = GetModuleHandleA("tier0_s.dll");
  pHVar4 = GetModuleHandleA("GameOverlayRenderer.dll");
  pIVar2 = (IEngineAPI *)(*pcVar1)("VENGINE_LAUNCHER_API_VERSION004",0);
  param_1 = "";
  param_1 = "flesh";
  param_1[0x18b] = (uint)"DEFAULT";
  param_1[0x2d] = (int)"models/props_containers/military_case-1.mdl";
  param_1[0x2d] = (int)"models/props_containers/military_case-1_bonemerge.mdl";
  param_1[0x2d] = (int)"models/props_vehicles/cars/broken_parts/wheel-1.mdl";
  param_1[0x2d] = (int)"models/tiny_object.mdl";
  param_1[0x2d] = (int)"models/vehicles/cars/truck-5_npc.mdl";
  param_1[0x2d] = (int)"models/vehicles/cars/truck-6_npc.mdl";
  param_1[2] = "BSQ_cache_reference";
  pauVar2 = (undefined (*) [16])"console.log";
  pauVar2 = FUN_10021ad0(extraout_ECX_00,extraout_EDX_00,param_1,(undefined (*) [16])"-PROCESSHEAP")
  pauVar2 = FUN_10021ad0(uVar3,uVar4,param_1,(undefined (*) [16])"-NOPROCESSHEAP");
  pauVar3 = (undefined (*) [16])(**(code **)(*DAT_107c09f8 + 0x7c))("maps/*.bsp",&local_8);
  pauVar3 = (undefined (*) [16])FUN_1042f3d0(pvVar9,(uint *)"reason",(uint)&DAT_104eefb3);
  pbVar1 = (byte *)FUN_10268930(*param_2,(uint *)"filename",(uint)&DAT_103236cf);
  pbVar1 = (byte *)FUN_10268930(*param_2,(uint *)"operation",(uint)&DAT_103236cf);
  pbVar1 = (byte *)FUN_1039db00(param_1,(uint *)"Place",(uint)&DAT_1043677a);
  pbVar1 = (byte *)FUN_1042f3d0(param_1,(uint *)"InitialFocus",0);
  pbVar1 = (byte *)FUN_1042f3d0(param_1,(uint *)"ResourceFile",0);
  pbVar1 = (byte *)FUN_1042f3d0(param_1,(uint *)"cvar_name",(uint)&DAT_104eefb3);
  pbVar1 = (byte *)FUN_1042f3d0(param_1,(uint *)"localtype",(uint)"LOCALINFOLABEL_UNKNOWN");
  pbVar1 = (byte *)FUN_1042f3d0(param_1,(uint *)"scoreboard_position",(uint)&DAT_104eefb3);
  pbVar1 = (byte *)FUN_1042f3d0(param_1,(uint *)"slot_item",(uint)&DAT_104eefb3);
  pbVar1 = (byte *)FUN_1042f3d0(param_1,(uint *)"timezone_name",(uint)&DAT_104eefb3);
  pbVar1 = (byte *)FUN_1042f3d0(param_2,(uint *)"resultVar",0);
  pbVar1 = (byte *)FUN_1042f3d0(this_00,(uint *)"Binding",(uint)&DAT_104eefb3);
  pbVar11 = (byte *)FUN_10268930(param_1,(uint *)"pin_to_sibling",0);
  pbVar11 = (byte *)FUN_1039db00(param_1,(uint *)"pin_to_sibling",0);
  pbVar11 = (byte *)FUN_1042f3d0(param_1,(uint *)"pin_to_sibling",0);
  pbVar2 = (byte *)FUN_10268930(*param_3,(uint *)"filename",(uint)&DAT_103236cf);
  pbVar2 = (byte *)FUN_10268930(*param_3,(uint *)"operation",(uint)&DAT_103236cf);
  pbVar2 = (byte *)FUN_10268930(param_1,(uint *)"Format",(uint)&DAT_103236cf);
  pbVar2 = (byte *)FUN_10268930(param_1,(uint *)"cvar_name",(uint)&DAT_103236cf);
  pbVar2 = (byte *)FUN_1039db00(param_1,(uint *)"cvar_name",(uint)&DAT_1043677a);
  pbVar2 = (byte *)FUN_1042f3d0(param_1,(uint *)"cvar_name",(uint)&DAT_104eefb3);
  pbVar2 = (byte *)FUN_1042f3d0(param_1,(uint *)"cvar_value",(uint)&DAT_104eefb3);
  pbVar2 = (byte *)FUN_1042f3d0(param_2,(uint *)"resultVar",(uint)&DAT_104eefb3);
  pbVar2 = (byte *)FUN_1042f3d0(pbVar2,(uint *)"item_category",(uint)"ITEMCAT_NONE");
  pbVar3 = (byte *)FUN_10268930(param_1,(uint *)"cvar_value",(uint)&DAT_103236cf);
  pbVar3 = (byte *)FUN_10268930(param_1,(uint *)"imageAlignment",(uint)&DAT_103236cf);
  pbVar3 = (byte *)FUN_10268930(param_1,(uint *)"textAlignment",(uint)&DAT_103236cf);
  pbVar3 = (byte *)FUN_1039db00(param_1,(uint *)"MuzzleFlash",0);
  pbVar3 = (byte *)FUN_1039db00(param_1,(uint *)"cvar_value",(uint)&DAT_1043677a);
  pbVar3 = (byte *)FUN_1039db00(param_1,(uint *)"imageAlignment",(uint)&DAT_1043677a);
  pbVar3 = (byte *)FUN_1039db00(param_1,(uint *)"textAlignment",(uint)&DAT_1043677a);
  pbVar3 = (byte *)FUN_1039db00(pvVar5,(uint *)"WeaponType",0);
  pbVar3 = (byte *)FUN_1042f3d0(param_1,(uint *)"MuzzleFlash",0);
  pbVar3 = (byte *)FUN_1042f3d0(param_1,(uint *)"cvar_value",(uint)&DAT_104eefb3);
  pbVar3 = (byte *)FUN_1042f3d0(param_1,(uint *)"imageAlignment",(uint)&DAT_104eefb3);
  pbVar3 = (byte *)FUN_1042f3d0(param_1,(uint *)"primary_stat",0);
  pbVar3 = (byte *)FUN_1042f3d0(param_1,(uint *)"textAlignment",(uint)&DAT_104eefb3);
  pbVar3 = (byte *)FUN_1042f3d0(pvVar5,(uint *)"WeaponType",0);
  pbVar4 = (byte *)"CTIGameRules";
  pbVar4 = (byte *)"CTIStaticGlobals";
  pbVar4 = (byte *)(**(code **)(*param_1 + 4))("PropertySheet.TransitionEffectTime");
  pbVar4 = (byte *)(**(code **)(*param_1 + 4))("TIPropertySheet.TransitionEffectTime");
  pbVar4 = (byte *)FUN_10399710((byte *)"Schedule",local_418);
  pbVar4 = (byte *)FUN_1042c450((char *)param_1,(int)"AllowFreeLook");
  pbVar4 = (byte *)FUN_1042c450((char *)param_1,(int)"GameInstructor");
  pbVar4 = (byte *)FUN_1042c450((char *)param_1,(int)"MpLanGames");
  pbVar4 = (byte *)FUN_1042f3d0(param_3,(uint *)"effectname",(uint)&DAT_104eefb3);
  pbVar5 = (byte *)FUN_1039db00(param_2,(uint *)"enddir",(uint)&DAT_104d7ac0);
  pbVar5 = (byte *)FUN_1039db00(param_2,(uint *)"startdir",(uint)&DAT_104d7abc);
  pbVar5 = (byte *)FUN_1042f3d0(param_2,(uint *)"enddir",(uint)&DAT_10542b3c);
  pbVar5 = (byte *)FUN_1042f3d0(param_2,(uint *)"startdir",(uint)&DAT_10542b38);
  pbVar5 = (byte *)FUN_1042f3d0(pvVar4,(uint *)"Issue",(uint)&DAT_104eefb3);
  pbVar6 = (byte *)FUN_1039db00(param_1,(uint *)"ai_addon",(uint)"ai_addon_basecombatweapon");
  pbVar6 = (byte *)FUN_1039db00(param_1,(uint *)"primary_ammo",(uint)&DAT_10439718);
  pbVar6 = (byte *)FUN_1039db00(param_1,(uint *)"secondary_ammo",(uint)&DAT_10439718);
  pbVar6 = (byte *)FUN_1042f3d0(param_1,(uint *)"ai_addon",(uint)"ai_addon_basecombatweapon");
  pbVar6 = (byte *)FUN_1042f3d0(param_1,(uint *)"primary_ammo",(uint)&DAT_10542dc0);
  pbVar6 = (byte *)FUN_1042f3d0(param_1,(uint *)"secondary_ammo",(uint)&DAT_10542dc0);
  pbVar6 = (byte *)FUN_1042f3d0(param_3,(uint *)"bot_chatter",(uint)"normal");
  pbVar6 = (byte *)FUN_1042f3d0(param_3,(uint *)"bot_join_team",(uint)&DAT_1054bbd0);
  pbVar7 = (byte *)(**(code **)(*(int *)pcVar2 + 4))("Frame.FocusTransitionEffectTime");
  pbVar7 = (byte *)(**(code **)(*(int *)pcVar2 + 4))("Frame.TransitionEffectTime");
  pcStack268 = "DEFAULT";
  pcStack28 = "DEFAULT";
  pcStack32 = "distributed...";
  pcStack44 = "Unable to load surface prop file \'%s\' (referenced by manifest file \'%s\')\n";
  pcStack48 = "DEFAULT";
  pcStack60 = "DEFAULT";
  pcVar1 = " BL update,";
  pcVar1 = " reliable,";
  pcVar1 = "";
  pcVar1 = "4 Channel Surround";
  pcVar1 = "CHudDamageIndicator";
  pcVar1 = "CHudDisplayBonuses";
  pcVar1 = "CHudGamePanel";
  pcVar1 = "CHudMenu";
  pcVar1 = "CHudMessage";
  pcVar1 = "CHudMiniMap";
  pcVar1 = "CHudOBJLocator";
  pcVar1 = "CHudTICrosshair";
  pcVar1 = "Connection closing";
  pcVar1 = "Connection lost";
  pcVar1 = "NotificationToastControl";
  pcVar1 = "PARTIAL";
  pcVar1 = "Unnamed";
  pcVar1 = "adduser";
  pcVar1 = "cl_fullupdate command";
  pcVar1 = "dev/downsample";
  pcVar1 = "engine:  ";
  pcVar1 = "explosion(100)";
  pcVar1 = "nomap";
  pcVar1 = "paused";
  pcVar1 = "relative";
  pcVar1 = "true";
  pcVar1 = "unknown reason";
  pcVar1 = "unnamed";
  pcVar1 = "use client classes";
  pcVar1 = (char *)(**(code **)(*param_1 + 4))("Dialog.PinFromBottom");
  pcVar1 = (char *)(**(code **)(*param_1 + 4))("Dialog.PinFromLeft");
  pcVar1 = (char *)(**(code **)(*param_1 + 4))("FooterPanel.OffsetY");
  pcVar1 = (char *)(**(code **)(*param_1 + 4))("KeyBindings.ActionColumnWidth");
  pcVar1 = (char *)(**(code **)(*param_1 + 4))("KeyBindings.HeaderFont");
  pcVar1 = (char *)(**(code **)(*param_1 + 4))("KeyBindings.KeyColumnWidth");
  pcVar1 = (char *)(**(code **)(*param_1 + 4))("KeyBindings.KeyFont");
  pcVar1 = (char *)FUN_10268930(param_1,(uint *)"URLText",0);
  pcVar1 = (char *)FUN_10268930(param_1,(uint *)"bg_image",(uint)&DAT_103236cf);
  pcVar1 = (char *)FUN_10268930(param_1,(uint *)"fg_image",(uint)&DAT_103236cf);
  pcVar1 = (char *)FUN_10268930(param_1,(uint *)"filtered",(uint)&DAT_103236cf);
  pcVar1 = (char *)FUN_10268930(param_1,(uint *)"image",(uint)&DAT_103236cf);
  pcVar1 = (char *)FUN_10268930(param_1,(uint *)"image",0);
  pcVar1 = (char *)FUN_10268930(param_1,(uint *)"imagecolor",(uint)&DAT_103236cf);
  pcVar1 = (char *)FUN_10268930(param_1,(uint *)"preserveAspectRatio",(uint)&DAT_103236cf);
  pcVar1 = (char *)FUN_1039db00(param_1,(uint *)"URLText",0);
  pcVar1 = (char *)FUN_1039db00(param_1,(uint *)"bg_image",(uint)&DAT_1043677a);
  pcVar1 = (char *)FUN_1039db00(param_1,(uint *)"fg_image",(uint)&DAT_1043677a);
  pcVar1 = (char *)FUN_1039db00(param_1,(uint *)"filtered",(uint)&DAT_1043677a);
  pcVar1 = (char *)FUN_1039db00(param_1,(uint *)"image",(uint)&DAT_1043677a);
  pcVar1 = (char *)FUN_1039db00(param_1,(uint *)"image",0);
  pcVar1 = (char *)FUN_1039db00(param_1,(uint *)"imagecolor",(uint)&DAT_1043677a);
  pcVar1 = (char *)FUN_1039db00(param_1,(uint *)"preserveAspectRatio",(uint)&DAT_1043677a);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"URLText",0);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"bg_image",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"color",(uint)"255 255 255 255");
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"command",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"fg_image",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"filtered",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"image",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"image",0);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"imagecolor",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"loadfilename",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"material",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"preserveAspectRatio",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"reason",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"selected_image",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,(uint *)"video",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_1,param_2,(uint)"255 255 255 255");
  pcVar1 = (char *)FUN_1042f3d0(param_2,(uint *)"centerVar",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_2,(uint *)"material",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_2,(uint *)"onlyAnimateOnTexture",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(param_3,(uint *)"model",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(this_00,(uint *)"rotateVar",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(this_00,(uint *)"scaleVar",(uint)&DAT_104eefb3);
  pcVar1 = (char *)FUN_1042f3d0(this_00,(uint *)"translateVar",(uint)&DAT_104eefb3);
  pcVar1 = FUN_1017c740((byte *)"%s [%s]");
  pcVar1 = FUN_1017c740((byte *)"fog_color %i %i %i\n");
  pcVar1 = FUN_1017c740((byte *)"fog_colorskybox %i %i %i\n");
  pcVar1 = FUN_1017c740((byte *)"sky_miecolor %i %i %i\n");
  pcVar1 = FUN_1017c740((byte *)"sky_rayleighcolor %i %i %i\n");
  pcVar1 = FUN_101ed3f0(param_1,(byte *)"maxplayers",&DAT_1051db24);
  pcVar1 = FUN_101fc220(param_1,"DEFAULT_WRITE_PATH",(char *)0x0,(char *)0x0);
  pcVar1 = FUN_102640a0(local_404,(int)"Disconnect: ");
  pcVar1 = FUN_103980c0(pcVar1,(int)"game_");
  pcVar1 = FUN_1042c450((char *)param_1,(int)"virtual_ui_command_");
  pcVar10 = "ClientScheme";
  pcVar10 = "backpack_tm.dat";
  pcVar10 = "exec valve.rc\n";
  pcVar10 = "fixapi2_AppSystem001";
  pcVar10 = "leftedge";
  pcVar10 = "rightedge";
  pcVar10 = "vgui/loadbar_dots";
  pcVar10 = (char *)(**(code **)(*(int *)pcVar2 + 4))("Frame.ClientInsetX");
  pcVar10 = (char *)(**(code **)(*(int *)pcVar2 + 4))("Frame.ClientInsetY");
  pcVar10 = (char *)(**(code **)(*(int *)pcVar2 + 4))("Frame.TitleTextInsetX");
  pcVar10 = (char *)(**(code **)(*piVar1 + 4))("LoadingProgress.DotGap");
  pcVar10 = (char *)(**(code **)(*piVar1 + 4))("LoadingProgress.DotHeight");
  pcVar10 = (char *)(**(code **)(*piVar1 + 4))("LoadingProgress.DotWidth");
  pcVar10 = (char *)(**(code **)(*piVar1 + 4))("LoadingProgress.NumDots");
  pcVar11 = "";
  pcVar11 = "#KB_HitYouString";
  pcVar11 = "#KB_KilledString";
  pcVar11 = "#KB_KillerHealth";
  pcVar11 = "#KB_YouHitString";
  pcVar11 = "#KickedByGMBody";
  pcVar11 = "#LocalWentAFKBody";
  pcVar11 = "#VoteKickedBody";
  pcVar11 = "Client Build XForms";
  pcVar11 = "insecure";
  pcVar11 = "prop_door_rotating";
  pcVar11 = (char *)FUN_1042f3d0(this,(uint *)"customfleck",uVar6);
  pcVar12 = "";
  pcVar12 = "AuthenticAMD";
  pcVar12 = "disabled";
  pcVar12 = "vgui/chapters/vignette";
  pcVar12 = (char *)FUN_1039db00(puVar7,(uint *)"InheritFrom",(uint)&DAT_1043677a);
  pcVar12 = (char *)FUN_1039db00(this,(uint *)"customfleck",(uint)puVar17);
  pcVar13 = "";
  pcVar13 = "CHudAmmo";
  pcVar13 = "backpack_tm.dat";
  pcVar13 = "info_player_start";
  pcVar13 = "maps/%s_dmspawn.res";
  pcVar13 = (char *)FUN_1042f3d0(puVar10,(uint *)"InheritFrom",(uint)&DAT_104eefb3);
  pcVar14 = "(%f, %f, %f)";
  pcVar14 = "effects/splash2";
  pcVar14 = (char *)FUN_10268930(param_1,(uint *)"fieldName",0);
  pcVar14 = (char *)FUN_10268930(param_1,(uint *)"navDown",(uint)&DAT_103236cf);
  pcVar14 = (char *)FUN_10268930(param_1,(uint *)"navLeft",(uint)&DAT_103236cf);
  pcVar14 = (char *)FUN_10268930(param_1,(uint *)"navRight",(uint)&DAT_103236cf);
  pcVar14 = (char *)FUN_10268930(param_1,(uint *)"navUp",(uint)&DAT_103236cf);
  pcVar14 = (char *)FUN_10268930(param_1,(uint *)"tooltiptext",0);
  pcVar14 = (char *)FUN_1039db00(param_1,(uint *)"fieldName",0);
  pcVar14 = (char *)FUN_1039db00(param_1,(uint *)"navDown",(uint)&DAT_1043677a);
  pcVar14 = (char *)FUN_1039db00(param_1,(uint *)"navLeft",(uint)&DAT_1043677a);
  pcVar14 = (char *)FUN_1039db00(param_1,(uint *)"navRight",(uint)&DAT_1043677a);
  pcVar14 = (char *)FUN_1039db00(param_1,(uint *)"navUp",(uint)&DAT_1043677a);
  pcVar14 = (char *)FUN_1039db00(param_1,(uint *)"tooltiptext",0);
  pcVar14 = (char *)FUN_1042f3d0(param_1,(uint *)"fieldName",0);
  pcVar14 = (char *)FUN_1042f3d0(param_1,(uint *)"navDown",(uint)&DAT_104eefb3);
  pcVar14 = (char *)FUN_1042f3d0(param_1,(uint *)"navLeft",(uint)&DAT_104eefb3);
  pcVar14 = (char *)FUN_1042f3d0(param_1,(uint *)"navRight",(uint)&DAT_104eefb3);
  pcVar14 = (char *)FUN_1042f3d0(param_1,(uint *)"navUp",(uint)&DAT_104eefb3);
  pcVar14 = (char *)FUN_1042f3d0(param_1,(uint *)"tooltiptext",0);
  pcVar15 = "";
  pcVar15 = "#GameUI_vote_header";
  pcVar15 = "#TI_KillStreak";
  pcVar15 = "%s/%s.txt";
  pcVar15 = "HideVoteBackgrounds";
  pcVar15 = "Multiplayer";
  pcVar15 = "defaultcurvetype";
  pcVar15 = "player_spawn";
  pcVar15 = "samples_use_time";
  pcVar16 = "CGameEventManager::UnserializeEvent:: unknown event id %i.\n";
  pcVar16 = "backpack_tm.dat";
  pcVar16 = "r";
  pcVar16 = "scripts/vehicles";
  pcVar16 = "w";
  pcVar2 = " NET_StringCmd NULL";
  pcVar2 = " svc_print NULL";
  pcVar2 = "";
  pcVar2 = "#TI_vote_alltalk_disable";
  pcVar2 = "(Unknown)";
  pcVar2 = "<no file>";
  pcVar2 = "BuildModeDialog";
  pcVar2 = "CHudFullscreen";
  pcVar2 = "CHudGamePanel";
  pcVar2 = "CHudHealth";
  pcVar2 = "CHudMenu";
  pcVar2 = "CHudMessage";
  pcVar2 = "CHudMiniMap";
  pcVar2 = "CHudOBJLocator";
  pcVar2 = "CHudTICrosshair";
  pcVar2 = "CHudVote";
  pcVar2 = "CHudWeaponSelection";
  pcVar2 = "CloseWeaponSelectionMenu";
  pcVar2 = "RoundIntroReset";
  pcVar2 = "UNKNOWN";
  pcVar2 = "\\\\fileserver\\bugs";
  pcVar2 = "_water";
  pcVar2 = "d:\\projects\\ti\\release\\ti_rel\\src\\tier1\\mempool.cpp";
  pcVar2 = "debug/debugreflect";
  pcVar2 = "debug/debugrefract";
  pcVar2 = "helicopter_ct";
  pcVar2 = "hllog.txt";
  pcVar2 = "models/characters/santa.mdl";
  pcVar2 = "none";
  pcVar2 = "prop_door_rotating";
  pcVar2 = "quit\n";
  pcVar2 = "svc_voiceinit NULL";
  pcVar2 = "voice_player";
  pcVar2 = "voice_self";
  pcVar2 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar3,"cl_interp");
  pcVar2 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar3,"cl_interp_ratio");
  pcVar2 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar3,"cl_interpolate");
  pcVar2 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar3,"cl_predict");
  pcVar2 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar3,"cl_updaterate");
  pcVar2 = (char *)(**(code **)(*DAT_106466b4 + 0x8c))("maps/*.bsp",&DAT_1045b2f8,&local_8);
  pcVar2 = (char *)(**(code **)(*piVar3 + 0xc))("-basedir",0);
  pcVar2 = (char *)FUN_10268930(param_1,(uint *)"activeborder_override",(uint)&DAT_103236cf);
  pcVar2 = (char *)FUN_10268930(param_1,(uint *)"normalborder_override",(uint)&DAT_103236cf);
  pcVar2 = (char *)FUN_10268930(param_1,(uint *)"variable",(uint)&DAT_103236cf);
  pcVar2 = (char *)FUN_10268930(this_00,(uint *)"command",(uint)&DAT_103236cf);
  pcVar2 = (char *)FUN_1039db00(param_1,(uint *)"variable",(uint)&DAT_1043677a);
  pcVar2 = (char *)FUN_1039db00(this_00,(uint *)"command",(uint)&DAT_1043677a);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"Title",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"activeborder_override",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"border_armed",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"border_default",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"border_disabled",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"border_selected",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"command",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"fgcolor",(uint)"Button.TextColor");
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"normalborder_override",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)"variable",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(param_1,(uint *)&DAT_10524fe8,(uint)"Default");
  pcVar2 = (char *)FUN_1042f3d0(param_2,(uint *)"axisVar",(uint)&DAT_104eefb3);
  pcVar2 = (char *)FUN_1042f3d0(this_00,(uint *)"command",(uint)&DAT_104eefb3);
  pcVar2 = FUN_1017c740((byte *)"%s [%s]");
  pcVar2 = FUN_1017c740((byte *)"jpeg \"%s\" %i\n");
  pcVar2 = FUN_1017c740((byte *)"play %s\n");
  pcVar2 = FUN_101fc220(param_1,"DEFAULT_WRITE_PATH",local_224,(char *)0x104);
  pcVar2 = FUN_103980c0(pcVar1,(int)"player_");
  pcVar2 = FUN_103980c0(pcVar1,(int)"server_");
  pcVar2 = FUN_103980c0(pcVar1,(int)"team_");
  pcVar2 = FUN_1042c450((char *)param_1,(int)"SNDLVL_");
  pcVar2 = FUN_1042c450((char *)param_1,(int)"_antialias");
  pcVar21 = "Client Setup Bones";
  pcVar3 = "";
  pcVar3 = "(Unknown)";
  pcVar3 = ".pfm";
  pcVar3 = "???";
  pcVar3 = "CHudDisplayBonuses";
  pcVar3 = "CHudHealth";
  pcVar3 = "CHudMenu";
  pcVar3 = "CHudWeaponSelection";
  pcVar3 = "CRadialMenu";
  pcVar3 = "C_InfoOverlayAccessor";
  pcVar3 = "ComboBoxBorder";
  pcVar3 = "Default.ClipEmpty_Rifle";
  pcVar3 = "LevelInit";
  pcVar3 = "TERRORIST";
  pcVar3 = "TRUE";
  pcVar3 = "True";
  pcVar3 = "UNKNOWN";
  pcVar3 = "bugreporter_filequeue";
  pcVar3 = "bullet_mp7";
  pcVar3 = "bullet_pistol";
  pcVar3 = "bullet_rifle";
  pcVar3 = "bullet_shotgun";
  pcVar3 = "cancel_crosshair";
  pcVar3 = "decalprecache";
  pcVar3 = "deny_blockade";
  pcVar3 = "dog_attack";
  pcVar3 = "dog_follow";
  pcVar3 = "dog_goto";
  pcVar3 = "dog_health_empty";
  pcVar3 = "dog_health_full";
  pcVar3 = "dog_sniff";
  pcVar3 = "dog_stay";
  pcVar3 = "genericprecache";
  pcVar3 = "grenade_breaching_charge";
  pcVar3 = "grenade_c4_charge";
  pcVar3 = "grenade_flashbang";
  pcVar3 = "grenade_frag";
  pcVar3 = "grenade_incendiary";
  pcVar3 = "grenade_smoke";
  pcVar3 = "grenade_teargas";
  pcVar3 = "health_empty";
  pcVar3 = "health_full";
  pcVar3 = "holdobject_bomb";
  pcVar3 = "holdobject_fire_extinguisher";
  pcVar3 = "holdobject_propane";
  pcVar3 = "holdobject_suitcase";
  pcVar3 = "holdobject_tire";
  pcVar3 = "ico_friend_indicator_avatar";
  pcVar3 = "mapname";
  pcVar3 = "medikit_empty";
  pcVar3 = "medikit_full";
  pcVar3 = "modelprecache";
  pcVar3 = "rappel_icon";
  pcVar3 = "rappelground_icon";
  pcVar3 = "rappelwall_icon";
  pcVar3 = "scripts/GameUIAnimations.txt";
  pcVar3 = "singleplayer_only";
  pcVar3 = "soundprecache";
  pcVar3 = "title_half";
  pcVar3 = "title_life";
  pcVar3 = "true";
  pcVar3 = "vehicle_car_icon";
  pcVar3 = "vehicle_car_tire";
  pcVar3 = "vehicle_heli_icon";
  pcVar3 = "vehicle_suv_icon";
  pcVar3 = "vehicle_van_icon";
  pcVar3 = (char *)(**(code **)(*param_1 + 4))("ConfirmationDialog.IconOffsetY");
  pcVar3 = (char *)(**(code **)(*param_1 + 4))("ConfirmationDialog.TextOffsetX");
  pcVar3 = (char *)(**(code **)(*param_1 + 4))("CustomButtonBindings.ActionColumnWidth");
  pcVar3 = (char *)(**(code **)(*param_1 + 4))("CustomButtonBindings.ButtonColumnWidth");
  pcVar3 = (char *)(**(code **)(*param_1 + 4))("CustomButtonBindings.ButtonFont");
  pcVar3 = (char *)(**(code **)(*param_1 + 4))("CustomButtonBindings.HeaderFont");
  pcVar3 = (char *)(**(code **)(*param_1 + 4))("Dialog.TitleOffsetX");
  pcVar3 = (char *)(**(code **)(*piVar1 + 4))("RichText.InsetX");
  pcVar3 = (char *)(**(code **)(*piVar2 + 0x24))("-game","tacint");
  pcVar3 = (char *)(**(code **)(*piVar2 + 4))("Dialog.PinFromBottom");
  pcVar3 = (char *)(**(code **)(*piVar2 + 4))("Dialog.PinFromLeft");
  pcVar3 = (char *)(**(code **)(*piVar2 + 4))("Dialog.TileHeight");
  pcVar3 = (char *)(**(code **)(*piVar2 + 4))("Dialog.TileWidth");
  pcVar3 = (char *)(**(code **)(*piVar6 + 4))("ScrollBar.VerticalButtonInsetX");
  pcVar3 = (char *)(**(code **)(*piVar6 + 4))("ScrollBar.Wide");
  pcVar3 = (char *)FUN_10268930(param_1,(uint *)"image",(uint)&DAT_103236cf);
  pcVar3 = (char *)FUN_10268930(param_1,(uint *)"title",(uint)&DAT_103236cf);
  pcVar3 = (char *)FUN_10268930(param_1,(uint *)"title_font",(uint)&DAT_103236cf);
  pcVar3 = (char *)FUN_1039db00(param_1,(uint *)"image",(uint)&DAT_1043677a);
  pcVar3 = (char *)FUN_1039db00(param_1,(uint *)"title",(uint)&DAT_1043677a);
  pcVar3 = (char *)FUN_1039db00(param_1,(uint *)"title_font",(uint)&DAT_1043677a);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"fgcolor",(uint)"RichText.TextColor");
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_armed",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_armedcolor",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_box",(uint)"chalkboard_scroll_box");
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_default",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_depressedcolor",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_disabledcolor",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_down_arrow",(uint)"chalkboard_scroll_down");
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_down_arrow_mouseover",0);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_drawcolor",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_line",(uint)"chalkboard_scroll_line");
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_selected",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_selectedcolor",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_up_arrow",(uint)"chalkboard_scroll_up");
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"image_up_arrow_mouseover",0);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"title",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)"title_font",(uint)&DAT_104eefb3);
  pcVar3 = (char *)FUN_1042f3d0(param_1,(uint *)&DAT_10524fe8,(uint)"Default");
  pcVar3 = FUN_1017c740((byte *)"%s [%s]");
  pcVar3 = FUN_1017c740((byte *)"tv_relay %s\n");
  pcVar3 = FUN_102f35e3("JPEGMEM");
  pcVar3 = FUN_10398070((char *)local_8c,(int)"curve_");
  pcVar3 = FUN_103980c0(pcVar1,(int)"player_connect");
  pcVar3 = FUN_103980c0(pcVar1,(int)"player_disconnect");
  pcVar3 = FUN_1042c450((char *)local_8c,(int)"curve_");
  pcVar3 = FUN_1042c450((char *)param_1,(int)"#GameUI_DownloadFilter_");
  pcVar3 = FUN_1042c450((char *)param_1,(int)"ColorBlind");
  pcVar3 = FUN_1042c450((char *)param_1,(int)"_spraypaint");
  pcVar4 = "";
  pcVar4 = "CHudMessage";
  pcVar4 = "CRadialMenu";
  pcVar4 = "CTIFreezePanel";
  pcVar4 = "Director";
  pcVar4 = "GetCommand";
  pcVar4 = "GetState";
  pcVar4 = "GetText";
  pcVar4 = "Global texture stats";
  pcVar4 = "MsgLeaveGameConfirm";
  pcVar4 = "OperationConfirmed";
  pcVar4 = "QueryParticleManifest";
  pcVar4 = "Unknown SteamID (%llu) trying to send p2p messages.";
  pcVar4 = "detail/detailsprites";
  pcVar4 = "game_intermission";
  pcVar4 = "goal_icon";
  pcVar4 = "icon_pp_bomb_zone_a";
  pcVar4 = "icon_pp_bomb_zone_b";
  pcVar4 = "icon_pp_breachable";
  pcVar4 = "icon_pp_car_dest";
  pcVar4 = "icon_pp_ct_alpha";
  pcVar4 = "icon_pp_ct_bravo";
  pcVar4 = "icon_pp_ct_charlie";
  pcVar4 = "icon_pp_escapezone";
  pcVar4 = "icon_pp_t_alpha";
  pcVar4 = "icon_pp_t_bravo";
  pcVar4 = "icon_pp_t_charlie";
  pcVar4 = "minimap_suitcase";
  pcVar4 = "models/player/vip2.mdl";
  pcVar4 = "models/props_clothing/hats/vip-1_player.mdl";
  pcVar4 = "path_arrow";
  pcVar4 = "planprogress_icon";
  pcVar4 = "prop_physics_multiplayer";
  pcVar4 = "r_farz -1\n";
  pcVar4 = "reading";
  pcVar4 = "save %s.sav notmostrecent copymap\n";
  pcVar4 = "setang";
  pcVar4 = "setang_exact";
  pcVar4 = "sound";
  pcVar4 = "vgui/btn_bg";
  pcVar4 = "vgui/btn_bg_alt";
  pcVar4 = "vgui/btn_bg_click";
  pcVar4 = "vgui/btn_bg_click_alt";
  pcVar4 = "vgui/btn_bg_over";
  pcVar4 = "vgui/btn_bg_over_alt";
  pcVar4 = (char *)(**(code **)(*piVar1 + 4))("CustomButtonBindings.ArrowInset");
  pcVar4 = (char *)(**(code **)(*piVar1 + 4))("CustomButtonBindings.ButtonOffset");
  pcVar4 = (char *)(**(code **)(*piVar1 + 4))("FooterPanel.ButtonGapX");
  pcVar4 = (char *)(**(code **)(*piVar1 + 4))("FooterPanel.ButtonGapY");
  pcVar4 = (char *)(**(code **)(*piVar1 + 4))("FooterPanel.ButtonPaddingX");
  pcVar4 = (char *)(**(code **)(*piVar1 + 4))("FooterPanel.TextOffsetX");
  pcVar4 = (char *)(**(code **)(*piVar1 + 4))("FooterPanel.TextOffsetY");
  pcVar4 = (char *)(**(code **)(*piVar1 + 4))("rosette.DrawBorder");
  pcVar4 = (char *)(**(code **)(*piVar2 + 0x24))("-window_name_suffix",&DAT_103236cf);
  pcVar4 = (char *)(**(code **)(*piVar2 + 4))("SliderControl.InsetX");
  pcVar4 = (char *)FUN_1042f3d0(param_1,(uint *)"issue_font",0);
  pcVar4 = (char *)FUN_1042f3d0(this_00,(uint *)"header_font",0);
  pcVar4 = FUN_1017c740((byte *)"%s %s");
  pcVar4 = FUN_1017c740((byte *)"%s [%s]");
  pcVar4 = FUN_10398070(pcVar4,(int)"models");
  pcVar4 = FUN_1042c450((char *)pbVar1,(int)"#L4D360UI_InviteUI_");
  pcVar5 = "";
  pcVar5 = "#Valve_Reject_Server_Full";
  pcVar5 = "%s\\%s";
  pcVar5 = "(Demo`)";
  pcVar5 = "(Unknown)";
  pcVar5 = "<unnamed>";
  pcVar5 = "CHudDisplayBonuses";
  pcVar5 = "C_Beam";
  pcVar5 = "CanBeDefaultButton";
  pcVar5 = "GetCommand";
  pcVar5 = "GetState";
  pcVar5 = "Half-Life";
  pcVar5 = "bbox_corner1";
  pcVar5 = "bbox_corner2";
  pcVar5 = "mission_hostage_icon";
  pcVar5 = "mission_left_arrow";
  pcVar5 = "mission_right_arrow";
  pcVar5 = "mission_vip_bar_empty";
  pcVar5 = "mission_vip_bar_full";
  pcVar5 = "mission_vip_bar_icon";
  pcVar5 = "models/player/vip2.mdl";
  pcVar5 = "models/vehicles/cars/truck-5_npc.mdl";
  pcVar5 = "setpos";
  pcVar5 = "setpos_exact";
  pcVar5 = "true";
  pcVar5 = "vprof_on\n";
  pcVar5 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar2,"english");
  pcVar5 = (char *)(**(code **)(*param_1 + 4))("Dialog.PinFromBottom");
  pcVar5 = (char *)(**(code **)(*param_1 + 4))("Dialog.PinFromLeft");
  pcVar5 = (char *)(**(code **)(*param_1 + 4))("Dialog.TileHeight");
  pcVar5 = (char *)(**(code **)(*param_1 + 4))("Dialog.TileWidth");
  pcVar5 = (char *)(**(code **)(*param_1 + 4))("Dialog.TitleOffsetX");
  pcVar5 = (char *)(**(code **)(*param_1 + 4))("Dialog.TitleOffsetY");
  pcVar5 = (char *)(**(code **)(*param_1 + 4))("FooterPanel.OffsetY");
  pcVar5 = (char *)(**(code **)(*piVar2 + 4))("InlineEditPanel.DashLength");
  pcVar5 = (char *)(**(code **)(*piVar2 + 4))("InlineEditPanel.GapLength");
  pcVar5 = (char *)(**(code **)(*piVar2 + 4))("InlineEditPanel.LineSize");
  pcVar5 = (char *)(**(code **)(*piVar2 + 4))("NewGameDialog.TextOffsetY");
  pcVar5 = (char *)FUN_10268930(local_8,(uint *)"Screenshot",(uint)&DAT_103236cf);
  pcVar5 = FUN_1017c740((byte *)"%s [%s]");
  pcVar6 = "";
  pcVar6 = "BuildDialog";
  pcVar6 = "ControlFactory";
  pcVar6 = "DmeParticleSystemDefinition";
  pcVar6 = "Failed to reestablish collision model for object\n";
  pcVar6 = "General.BurningFlesh";
  pcVar6 = "MarlettSmall";
  pcVar6 = "Software\\FixKorea\\TIRELBASE";
  pcVar6 = "burning_gib_01";
  pcVar6 = "config.cfg";
  pcVar6 = "models/vehicles/cars/truck-5_npc.mdl";
  pcVar6 = "models/vehicles/helicopters/bell212/bell212.mdl";
  pcVar6 = "portal_report\n";
  pcVar6 = "public";
  pcVar6 = "recording demo";
  pcVar6 = "simple_physics_prop";
  pcVar6 = "taillight1";
  pcVar6 = "taillight2";
  pcVar6 = (char *)(**(code **)(*DAT_106466ac + 0xe0))(iVar7,"fov_desired");
  pcVar6 = (char *)(**(code **)(*param_1 + 4))("Menu.TextInset",0);
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("Frame.AutoSnapRange");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("Logo.Height");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("Logo.Width");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("Logo.X");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("Logo.Y");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloud.Height");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloud.Width");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloud.X");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloud.Y");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloudProgress.Height");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloudProgress.Width");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloudProgress.X");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloudProgress.Y");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloudText.X");
  pcVar6 = (char *)(**(code **)(*piVar2 + 4))("SteamCloudText.Y");
  pcVar6 = (char *)(**(code **)(*piVar5 + 0x24))("-benchmark_path",0);
  pcVar6 = (char *)FUN_0041f250(this_00,"basecommandline",(uint)&DAT_0043b3d2);
  pcVar6 = (char *)FUN_0041f250(this_00,"finaldir",(uint)puVar7);
  pcVar6 = (char *)FUN_0041f250(this_00,"maplist",(uint)"maplist.txt");
  pcVar6 = (char *)FUN_0041f250(this_00,"workdir",(uint)puVar7);
  pcVar6 = (char *)FUN_10268930(param_1,(uint *)"labelText",0);
  pcVar6 = (char *)FUN_1039db00(param_1,(uint *)"labelText",0);
  pcVar6 = (char *)FUN_1042f3d0(param_1,(uint *)"labelText",0);
  pcVar6 = FUN_1017c740((byte *)"%s [%s]");
  pcVar6 = FUN_102640a0((char *)(param_1 + 1),(int)"position");
  pcVar7 = "";
  pcVar7 = "#SB_DEATHS";
  pcVar7 = "#SB_EXP";
  pcVar7 = "#SB_KILLS";
  pcVar7 = "#SB_PING";
  pcVar7 = "#include";
  pcVar7 = "CHudAmmo";
  pcVar7 = "DrpCSMQuality";
  pcVar7 = "applycontext";
  pcVar7 = "applycontexttoworld";
  pcVar7 = "criteria";
  pcVar7 = "criterion";
  pcVar7 = "defaultdelay";
  pcVar7 = "delay";
  pcVar7 = "detail/detailsprites";
  pcVar7 = "displayfirst";
  pcVar7 = "displaylast";
  pcVar7 = "enumeration";
  pcVar7 = "fgColor";
  pcVar7 = "icon_pp_bomb_zone_a";
  pcVar7 = "icon_pp_bomb_zone_b";
  pcVar7 = "icon_pp_breachable";
  pcVar7 = "icon_pp_escapezone";
  pcVar7 = "matchonce";
  pcVar7 = "minimap_car";
  pcVar7 = "minimap_cargoal";
  pcVar7 = "minimap_crosshair";
  pcVar7 = "minimap_dog";
  pcVar7 = "minimap_down_arrow";
  pcVar7 = "minimap_heli";
  pcVar7 = "minimap_hostage";
  pcVar7 = "minimap_objective";
  pcVar7 = "minimap_player";
  pcVar7 = "minimap_suitcase";
  pcVar7 = "minimap_up_arrow";
  pcVar7 = "minimap_vip";
  pcVar7 = "models/props_misc/briefcase_bomb-1.mdl";
  pcVar7 = "nodelay";
  pcVar7 = "noscene";
  pcVar7 = "predelay";
  pcVar7 = "respeakdelay";
  pcVar7 = "response";
  pcVar7 = "soundlevel";
  pcVar7 = "speakonce";
  pcVar7 = "stop_on_nonidle";
  pcVar7 = "use_ammobag";
  pcVar7 = "use_bomb";
  pcVar7 = "use_grab_hostage";
  pcVar7 = "use_rappel";
  pcVar7 = "use_rescue_hostage";
  pcVar7 = "weapondelay";
  pcVar7 = "weight";
  pcVar7 = (char *)(**(code **)(*piVar9 + 4))("ScrollBarSlider.Inset");
  pcVar7 = (char *)FUN_1042f3d0(param_3,(uint *)"bot_prefix",(uint)&DAT_104eefb3);
  pcVar7 = FUN_1017c740((byte *)"addip %i %s\n");
  pcVar7 = FUN_1017c740((byte *)"play %s\n");
  pcVar8 = "";
  pcVar8 = "#GameUI_RandomMap";
  pcVar8 = "#KickedByGM";
  pcVar8 = "#LocalWentAFK";
  pcVar8 = "#VoteKicked";
  pcVar8 = "#Wait_ReturnToLobby";
  pcVar8 = "ItemSwatch";
  pcVar8 = "_DisableUpdateTarget";
  pcVar8 = "backpack.dat";
  pcVar8 = "backpack_tm.dat";
  pcVar8 = "fixapi2_AppSystem001";
  pcVar8 = "mapname";
  pcVar8 = "predicted";
  pcVar8 = (char *)FUN_10268930(param_2,(uint *)"Format",(uint)&DAT_103236cf);
  pcVar8 = (char *)FUN_10268930(param_2,(uint *)"TexGroup",(uint)&DAT_103236cf);
  pcVar8 = FUN_1017c740((byte *)"%s [%s]");
  pcVar9 = " OVERFLOW";
  pcVar9 = "";
  pcVar9 = "Failed to reestablish collision model for object\n";
  pcVar9 = "candy";
  pcVar9 = "exec valve.rc\n";
  pcVar9 = "quit\n";
  pcVar9 = "resource/ClientScheme.res";
  pfVar1 = FUN_10149d40((void *)((int)this + 0x1444),(int *)"particle/particle_fire");
  piVar1 = (int *)(*(code *)param_1)("VEngineCvar007",0);
  piVar1 = (int *)(*(code *)param_1)("VPhysics031",0);
  piVar1 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("player_connect_full",0,0);
  piVar1 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_pre_shutdown",0,0);
  piVar1 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_shutdown",0,0);
  piVar1 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("hltv_chase",1,0);
  piVar1 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("instructor_server_hint_stop",0,&DAT_106402f4)
  piVar1 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("plans_loaded",0,0);
  piVar1 = (int *)(**(code **)(*DAT_106cb7c4 + 0x44))("sensitivity");
  piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(param_1,"ClientEffect textures",1,0);
  piVar1 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
  piVar1 = (int *)(**(code **)(*DAT_107c0a08 + 0x170))("render_to_rt_helper","RenderTargets",1,0);
  piVar1 = (int *)(**(code **)(*param_1 + 0x2c))("$basetexture",(int)&param_1 + 3,0);
  piVar1 = (int *)(**(code **)(*param_1 + 0x2c))("$basetexture",(int)&uStack8 + 3,1);
  piVar1 = (int *)(**(code **)(*piVar3 + 0x2c))("$bloomamount",0,1);
  piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"env_credits");
  piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"env_outtro_stats");
  piVar1 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar1,"point_viewcontrol_multiplayer");
  piVar1 = (int *)FUN_10135420("npc_vehicle",-1,'\x01');
  piVar1 = (int *)FUN_10135420("scene_manager",-1,'\x01');
  piVar1 = (int *)FUN_10268900(param_1,(uint *)"panel",0);
  piVar1 = (int *)FUN_10444d70(param_1,(byte *)"LoadoutPreview_Appearance",1);
  piVar1 = (int *)FUN_10444d70(this,(byte *)"PlanInfo",1);
  piVar1 = (int *)FUN_10444d70(this,(byte *)"SquadInfo",1);
  piVar1 = (int *)FUN_10444d70(this,(byte *)"WT_Primary_Weapon",1);
  piVar1 = (int *)FUN_10444d70(this,(byte *)"WT_Secondary_Weapon",1);
  piVar1 = (int *)FUN_10444d70(this,(byte *)"cancelbutton",1);
  piVar1 = (int *)FUN_10444d70(this,(byte *)"okbutton",1);
  piVar1 = (int *)FUN_10444d70(this,(byte *)"thirdbutton",1);
  piVar1 = (int *)FUN_104d70b0(param_1,(uint *)"version");
  piVar1 = FUN_100a7c20("instanced_scripted_scene",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
  piVar1 = FUN_100a7c20("physics_entity_solver",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
  piVar1 = FUN_100a7c20("physics_npc_solver",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
  piVar1 = FUN_100a7c20("prop_ragdoll",(undefined8 *)(param_1 + 0x84),&DAT_106a6510,0);
  piVar1 = FUN_100eec60("func_simpleladder",&local_10,12.0);
  piVar1 = FUN_101ce210(*(int *)((int)this + 0xc),param_1,(int)"CLIENT",(int)this,(int *)0x0);
  piVar1 = FUN_101e54e0("Steam");
  piVar1 = FUN_101e54e0("TacticalIntervention");
  piVar1 = FUN_1034f610((int *)&local_8,"TEBloodStream",param_3);
  piVar10 = (int *)FUN_10444d70(piVar5,(byte *)"AlphaSquadButton",1);
  piVar10 = (int *)FUN_10444d70(piVar5,(byte *)"BravoSquadButton",1);
  piVar10 = (int *)FUN_10444d70(piVar5,(byte *)"ButtonSubmit",1);
  piVar10 = (int *)FUN_10444d70(piVar5,(byte *)"CharlieSquadButton",1);
  piVar13 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("player_hurt");
  piVar13 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("player_say",0,0);
  piVar16 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_addban",0,0);
  piVar2 = (int *)(*(code *)param_1[1][0x21])("muzzle_flash");
  piVar2 = (int *)(*(code *)param_1[1][0x21])("muzzle_flash_l");
  piVar2 = (int *)(*(code *)param_1[1][0x21])("muzzle_flash_r");
  piVar2 = (int *)(*(code *)param_1[1][0x21])("shell");
  piVar2 = (int *)(*(code *)param_1[1][0x21])("shell_l");
  piVar2 = (int *)(*(code *)param_1[1][0x21])("shell_r");
  piVar2 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("player_activate",0,0);
  piVar2 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("player_connect",0,0);
  piVar2 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("player_disconnect",0,0);
  piVar2 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("server_spawn",0,0);
  piVar2 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("break_prop",0,&DAT_10652bd4);
  piVar2 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("entity_killed",0,0);
  piVar2 = (int *)(**(code **)(*DAT_106cb7c4 + 0x4c))("cl_soundscape_flush");
  piVar2 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("game_newmap",0,0);
  piVar2 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("plans_loaded",0,0);
  piVar2 = (int *)(**(code **)(*DAT_107c09d0 + 0x44))("mp_allowspectators");
  piVar2 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("voice/icntlk_pl","VGUI textures",1,0);
  piVar2 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(pcVar1,"Other textures",1,0);
  piVar2 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_Flashbang","RenderTargets",1,0);
  piVar2 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_Health","RenderTargets",1,0);
  piVar2 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_NVG","RenderTargets",1,0);
  piVar2 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_gui",0,0,0);
  piVar2 = (int *)(**(code **)(*param_2 + 0x2c))("$USINGPIXELSHADER",(int)&param_1 + 3,0);
  piVar2 = (int *)COM_TimestampedLog("ConnectTier1/2/3Libraries - Finish",ppuVar6,uVar7,ppuVar8,
  piVar2 = (int *)FUN_00405740(param_1,uVar5,"VProcessUtils002");
  piVar2 = (int *)FUN_00405c80(param_1,(int)"VFileSystem017");
  piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"ambient_generic");
  piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"func_elevator");
  piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"info_NPCSeat");
  piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar2,"func_elevator");
  piVar2 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar2,"point_viewcontrol_multiplayer");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"blendFactor");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"channelMask");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"enabled");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"fileName");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"maxInputLevel");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"maxOutputLevel");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"midInputLevel");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"minInputLevel");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"minOutputLevel");
  piVar2 = (int *)FUN_10243620(param_1,(uint *)"preserveLuminosity");
  piVar2 = (int *)FUN_10268900(param_1,(uint *)"panel",0);
  piVar2 = (int *)FUN_1042f3a0(param_1,(uint *)"panel",0);
  piVar2 = (int *)FUN_10444d70(this,(byte *)"ConsoleHistory",1);
  piVar2 = FUN_100a7bb0("env_explosion",param_1,param_2,param_3);
  piVar2 = FUN_100a7bb0("item_sodacan",(undefined8 *)(param_1 + 0xc1),(undefined8 *)(param_1 + 0xc4)
  piVar2 = FUN_100a7bb0("soundent",(undefined8 *)&DAT_106a6504,&DAT_106a6510,uVar1);
  piVar2 = FUN_100a7c20("instanced_scripted_scene",(undefined8 *)&DAT_106a6504,&DAT_106a6510,0);
  piVar2 = FUN_100ca5b0(param_1,(uint *)"cyanRedBalance");
  piVar2 = FUN_100ca6a0(param_1,(uint *)"controlPoints");
  piVar2 = FUN_100eed30((int *)0x0,"info_ladder_dismount",param_1,param_2);
  piVar2 = FUN_101ab6a0(param_1,0xffff,(int)fVar4,1,"cable/cable.vmt",5,'\x01',"keyframe_rope");
  piVar2 = FUN_1038aaf0(param_1,(uint *)"children");
  piVar2 = FUN_103a75b0(param_1,(uint *)"children");
  piVar3 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("hltv_chat",1,0);
  piVar3 = (int *)(**(code **)(*(int *)PTR_DAT_10417380 + 0x18))("hltv_title",1,0);
  piVar3 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("plans_loaded",0,0);
  piVar3 = (int *)(**(code **)(*DAT_106cb7f4 + 0x150))(local_108,"Other textures",1,0);
  piVar3 = (int *)(**(code **)(*DAT_106cb7f4 + 0x150))(param_1,"Other textures",0,0);
  piVar3 = (int *)(**(code **)(*DAT_106cb7f4 + 400))("_rt_FullFrameDepth",1,1,4,uVar4,uVar5,0xd,8);
  piVar3 = (int *)(**(code **)(*DAT_106cb7f4 + 400))("_rt_PowerOfTwoFB",0x400,0x400,1,0,0,0xc,1);
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("___error","Other textures",1,0);
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("console/rt_background","Other textures",1,0)
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("console/rt_foreground","Other textures",1,0)
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("dev/depth_of_field","Other textures",1,0);
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))("dev/lumcompare","Other textures",1,0);
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(local_2fc,"Other textures",1,0);
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(param_1,"Other textures",0,0);
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(param_1,"Other textures",1,0);
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x150))(pcVar4,"ClientEffect textures",0,0);
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
  piVar3 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))(param_1,"RenderTargets",1,0);
  piVar3 = (int *)(**(code **)(*local_c + 0x2c))("$crackmaterial",&local_5,0);
  piVar3 = (int *)(**(code **)(*param_1 + 400))("_rt_eyeglint",0x20,0x20,0,0xc,2,0xc,0);
  piVar3 = (int *)(**(code **)(*param_1 + 400))("render_to_rt_helper",0x200,0x200,1,0,0,0x40000,0);
  piVar3 = (int *)(**(code **)(*piVar2 + 0x2c))("$bloomexp",(int)&param_5 + 3,0);
  piVar3 = (int *)(**(code **)(*piVar2 + 0x2c))("$bloomsaturation",(int)&param_5 + 3,0);
  piVar3 = (int *)(**(code **)(*piVar3 + 0x14))("specgui");
  piVar3 = (int *)(**(code **)(*piVar3 + 0x170))("editor/cubemap",0,1,0);
  piVar3 = (int *)(**(code **)(*piVar3 + 0x170))("editor/cubemap.hdr",0,1,0);
  piVar3 = (int *)(**(code **)(*piVar3 + 0x2c))("$C0_Y",0,1);
  piVar3 = (int *)(**(code **)(*piVar3 + 0xbc))("$HDRCOLORSCALE",&DAT_1072f4e4);
  piVar3 = (int *)(**(code **)(iVar1 + 0x188))("_rt_SSAO",1,1,4,uVar2);
  piVar3 = (int *)(**(code **)(iVar1 + 0x188))("_rt_SkyMask",0x80,0x80,3,uVar2);
  piVar3 = (int *)(**(code **)(iVar1 + 0x188))("_rt_ViewmodelMask",0x80,0x80,3,uVar2);
  piVar3 = (int *)(**(code **)(iVar1 + 400))("_rt_DepthDoubler",1,1,4,uVar2);
  piVar3 = (int *)(**(code **)(iVar1 + 400))("_rt_Flashbang",0x200,0x200,1,uVar2);
  piVar3 = (int *)(**(code **)(iVar1 + 400))("_rt_Health",0x400,0x400,1,uVar2);
  piVar3 = (int *)(**(code **)(iVar1 + 400))("_rt_NVG",0x200,0x200,1,uVar2);
  piVar3 = (int *)(**(code **)(iVar1 + 400))("_rt_TIMotionBlur",0x200,0x200,1,uVar2);
  piVar3 = (int *)(**(code **)(iVar1 + 400))("_rt_TIMotionBlur2",0x200,0x200,1,uVar2);
  piVar3 = (int *)FUN_10050d40("sprites/glow_test02.vmt",(float)param_1[0x515]);
  piVar3 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"env_particlelight");
  piVar3 = (int *)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"multi_manager");
  piVar3 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar3,"env_fog_controller");
  piVar3 = (int *)FUN_100eebc0(&DAT_1060f4b8,piVar3,"env_tonemap_controller");
  piVar3 = (int *)FUN_1014fb30(&param_1,"FireTrail");
  piVar3 = (int *)FUN_10444d70(this,(byte *)"RootPanel",1);
  piVar3 = (int *)FUN_10444d70(this,(byte *)"SelectedPanel",1);
  piVar3 = FUN_100eec60("func_simpleladder",&local_14,12.0);
  piVar4 = (int *)(**(code **)(*(int *)param_3[5] + 0x2c))("$underwateroverlay",0,0);
  piVar4 = (int *)(**(code **)(**(int **)((int)this + 0x210) + 0xbc))("$basetexture",&DAT_106decdc);
  piVar4 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("hltv_cameraman",0,0);
  piVar4 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("player_death",0,0);
  piVar4 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("round_start",0,0);
  piVar4 = (int *)(**(code **)(*DAT_106cb7f4 + 0x150))("dev/constant_color","Other textures",1,0);
  piVar4 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
  piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$C0_X",0,1);
  piVar4 = (int *)(**(code **)(*piVar3 + 0x2c))("$basetexture",(int)&param_1 + 3,0);
  piVar4 = (int *)FUN_100c6ec0("sprites/glow_test02.vmt",(float)param_1[0xfc]);
  piVar4 = (int *)FUN_10135420("spotlight_end",-1,'\x01');
  piVar4 = (int *)FUN_10135420("ti_team_blue",-1,'\x01');
  piVar4 = (int *)FUN_10135420("ti_team_manager",-1,'\x01');
  piVar4 = (int *)FUN_10135420("ti_team_red",-1,'\x01');
  piVar4 = (int *)FUN_10135420("ti_team_unassigned",-1,'\x01');
  piVar4 = (int *)FUN_1039db00(this_00,(uint *)"sound_armed",(uint)&DAT_1043677a);
  piVar4 = (int *)FUN_1039db00(this_00,(uint *)"sound_depressed",(uint)&DAT_1043677a);
  piVar4 = (int *)FUN_1039db00(this_00,(uint *)"sound_released",(uint)&DAT_1043677a);
  piVar4 = (int *)FUN_104235d0(this_00,(uint *)"preventNameBasedLookup");
  piVar4 = (int *)FUN_104d70b0(param_1,(uint *)"constant_data");
  piVar4 = (int *)FUN_104d70b0(this_00,(uint *)"preventNameBasedLookup");
  piVar4 = FUN_10243420(param_1,(uint *)"controlPoints");
  piVar4 = FUN_10243420(this_00,(uint *)"operators");
  piVar5 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("player_hurt",0,&DAT_10650424);
  piVar5 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("vote_cast",0,0);
  piVar5 = (int *)(**(code **)(*DAT_10730d00 + 0x18))("vote_started",0,0);
  piVar5 = (int *)(**(code **)(*piVar1 + 0x2c))("$distortbounds",0,1);
  piVar5 = (int *)(**(code **)(*piVar1 + 0x2c))("$hudtranslucent",0,1);
  piVar5 = (int *)(**(code **)(*piVar1 + 0x2c))("$hudundistort",0,1);
  piVar5 = (int *)(**(code **)(*piVar5 + 0x14))("overview");
  piVar5 = (int *)(**(code **)(*piVar9 + 8))("ButtonBorder");
  piVar5 = (int *)(*pcVar4)("VTOOLDICTIONARY003",0);
  piVar5 = (int *)FUN_10135420("env_particle_trail",-1,'\x01');
  piVar5 = (int *)FUN_104235d0(this_00,(uint *)"preventNameBasedLookup");
  piVar5 = (int *)FUN_10444d70(this,(byte *)"Check_ToggleAttributes",1);
  piVar5 = (int *)FUN_10444d70(this,(byte *)"LoadoutPreview_Appearance",1);
  piVar5 = (int *)FUN_104d70b0(local_c,(uint *)"particle_snapshot");
  piVar5 = (int *)FUN_104d70b0(this_00,(uint *)"preventNameBasedLookup");
  piVar5 = FUN_100a7c20("prop_physics",param_3,param_4,param_1);
  piVar5 = FUN_100ca5b0(param_1,(uint *)"magentaGreenBalance");
  piVar5 = FUN_10243420(param_1,(uint *)"cyanRedBalance");
  piVar6 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("hltv_fixed",1,0);
  piVar6 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("round_end",0,0);
  piVar6 = (int *)(**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
  piVar6 = (int *)(**(code **)(*local_c + 0x2c))("$crackmaterial",&local_5,0);
  piVar6 = (int *)(**(code **)(*piVar1 + 0x2c))("$forcecheap",0,0);
  piVar6 = (int *)(**(code **)(*piVar9 + 8))("ScrollBarSliderBorder");
  piVar6 = (int *)FUN_10243620(param_1,(uint *)"blendFactor");
  piVar6 = (int *)FUN_10243620(param_1,(uint *)"colorize");
  piVar6 = (int *)FUN_10243620(param_1,(uint *)"enabled");
  piVar6 = (int *)FUN_10243620(param_1,(uint *)"fuzziness");
  piVar6 = (int *)FUN_10243620(param_1,(uint *)"invertSelection");
  piVar6 = (int *)FUN_10243620(param_1,(uint *)"selectionMethod");
  piVar6 = (int *)FUN_10243620(param_1,(uint *)"tolerance");
  piVar6 = (int *)FUN_10444d70(*(void **)(param_1 + 0x1ec),(byte *)"imageMute",1);
  piVar6 = (int *)FUN_10444d70(param_1,(byte *)"BtnSpecCustom",0);
  piVar6 = FUN_100ca5b0(param_1,(uint *)"yellowBlueBalance");
  piVar6 = FUN_100ca6a0(param_1,(uint *)"selectedHSVs");
  piVar6 = FUN_100ca6a0(param_1,(uint *)"selectedRGBs");
  piVar6 = FUN_10243420(param_1,(uint *)"magentaGreenBalance");
  piVar6 = FUN_10243420(param_1,(uint *)"selectedHSVs");
  piVar6 = FUN_10243420(param_1,(uint *)"selectedRGBs");
  piVar7 = (int *)(**(code **)(*DAT_106466d0 + 0x18))("hltv_cameraman",1,0);
  piVar7 = (int *)(**(code **)(*param_1 + 0x2c))("$videoname",(int)&uStack8 + 3,0);
  piVar7 = (int *)(**(code **)(*piVar1 + 0x2c))("$forceexpensive",0,0);
  piVar7 = (int *)FUN_10444d70(*(void **)(param_1 + 0x1ec),(byte *)"imageUnMute",1);
  piVar7 = FUN_10243420(param_1,(uint *)"yellowBlueBalance");
  piVar8 = (int *)(**(code **)(*piVar3 + 0x104))(&param_1,"ComboBoxButton.DisabledBgColor",piVar8);
  piVar9 = (int *)FUN_10135420("phys_bone_follower",-1,'\x01');
  piVar9 = FUN_10243420(puVar6,(uint *)"ambientCube");
  piVar9 = FUN_10243420(puVar6,(uint *)"localLights");
  ppcVar1 = FUN_101214f0(&local_c,"func_brush");
  ppcVar2 = FUN_101214f0(&local_8,"prop_physics");
  ppcVar2 = FUN_101214f0((char **)&local_8,"player_squad");
  ppcVar3 = FUN_101214f0(&local_8,"DoorSound.Null");
  ppcVar3 = FUN_101214f0((char **)&local_8,"player_squad");
  ppcVar5 = FUN_101214f0(&local_18,"bottom");
  ppcVar5 = FUN_101214f0(&local_18,"top");
  ppiVar3 = (int **)"unknown error";
  ppiVar5 = (int **)FUN_103af9c0(PTR_DAT_106cd710,(undefined4 *)"error");
  ppvVar1 = (void **)FUN_1006fcd0("viewangleanim");
  ppvVar1 = (void **)FUN_100eebc0(&DAT_1060f4b8,(int *)0x0,"trigger_changelevel");
  ppvVar1 = (void **)FUN_10135420("env_sprite",-1,'\x01');
  ppvVar1 = (void **)FUN_10135420("prop_bomb",-1,'\x01');
  ppvVar1 = (void **)FUN_10135420("prop_vip_retrieval_entity",-1,'\x01');
  ppvVar1 = (void **)FUN_10268900(param_1,(uint *)"panel",0);
  ppvVar1 = (void **)FUN_1042f3a0(param_1,(uint *)"panel",0);
  ppvVar1 = (void **)FUN_10444d70((void *)param_1[0x100],(byte *)"KillerHealth",0);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"BtnCancel",0);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"BtnOk",0);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"CurrentLoadoutPreview",1);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"DrpVoicePTT",0);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"FreezePanelBG",0);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"LblMapName",0);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"LblModeString",0);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"LblTitle",0);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"ScreenshotPanel",0);
  ppvVar1 = (void **)FUN_10444d70(param_1,(byte *)"TacintTIPDialog",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"AdvInfoLabel",1);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"AdvInfoText",1);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"AvatarImage",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"BlueScoreLabel",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"BlueScoreValue",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"BtnEditBindings",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"BtnEditButtons",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"BtnEditSticks",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"CTPlayerList",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"CTPlayerList",1);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpAntialias",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpCPUDetail",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpCSMQuality",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpCaptioning",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpColorBlindMode",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpColorMode",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpController",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpDuckMode",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpFiltering",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpHorizontalLookType",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpLanguage",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpLookType",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpModelDetail",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpMouseAcceleration",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpMouseYInvert",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpPagedPoolMem",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpPowerSavingsMode",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpQueuedMode",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpRawMouse",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpShaderDetail",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpSoundQuality",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpSpeakerConfiguration",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpSplitScreenDirection",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpVSync",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpVibration",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"DrpVoiceCommunication",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"LabelContainer",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"LblGamerTag",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"LblGamerTagStatus",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"LoadoutAttributes",1);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"PlayerModel",1);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"PnlGamerPic",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"RedScoreLabel",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"RedScoreValue",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"ScoreBackground",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"SldBrightness",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"SldGameVolume",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"SldHorizSens",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"SldMouseAcceleration",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"SldMouseSensitivity",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"SldMusicVolume",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"SldVertSens",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"SldZoomRatioMouse",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"SpecialValueString",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"TerPlayerList",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"TerPlayerList",1);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"UserAvatar",1);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"UserHealth",1);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"UserName",1);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"ValueImage",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"ValueLabel",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"WaitingForPlayers",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"extrainfo",0);
  ppvVar1 = (void **)FUN_10444d70(this,(byte *)"timerlabel",0);
  ppvVar14 = (void **)FUN_10444d70(local_14,(byte *)"extrainfo",0);
  ppvVar14 = (void **)FUN_10444d70(piVar4,(byte *)"titlelabel",0);
  ppvVar2 = (void **)FUN_100eebc0(&DAT_1060f4b8,piVar4,"color_correction");
  ppvVar2 = (void **)FUN_100eebc0(&DAT_1060f4b8,piVar4,"postprocess_controller");
  ppvVar2 = (void **)FUN_10135420("handle_dummy",-1,'\x01');
  ppvVar2 = (void **)FUN_10135420("handle_test",-1,'\x01');
  ppvVar2 = (void **)FUN_10135420("wheeled_controllable",-1,'\x01');
  ppvVar2 = (void **)FUN_10268900(param_1,(uint *)"panel",0);
  ppvVar2 = (void **)FUN_1042f3a0(param_1,(uint *)"panel",0);
  ppvVar2 = (void **)FUN_1042f3a0(param_1,(uint *)"selectedPanel",0);
  ppvVar2 = (void **)FUN_10444d70(param_1,(byte *)"BtnReturnToGame",0);
  ppvVar2 = (void **)FUN_10444d70(param_1,(byte *)"BtnSwitchToGameView",0);
  ppvVar2 = (void **)FUN_10444d70(param_1,(byte *)"FlmCampaignFlyout",0);
  ppvVar2 = (void **)FUN_10444d70(param_1,(byte *)"FlmOptionsFlyout",0);
  ppvVar2 = (void **)FUN_10444d70(param_1,(byte *)"HelpTextLabel",0);
  ppvVar2 = (void **)FUN_10444d70(param_1,(byte *)"LabelContainer",0);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"BackgroundImage",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"BtnDropButton",0);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"BtnSpecCustom",0);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"ButtonExtend",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"ClanName",0);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpAlwaysDrawMiniMap",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpAutoReload",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpBloodSplatter",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpDuckToggle",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpHitOutput",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpHudColor",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpLeanToggle",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpLeftHandViewModels",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpLocalTracers",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpLowViolence",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpNetGraph",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpNetworkRate",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpOverlayPosition",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpShowFPS",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpSpawnIntros",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DrpTutor",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DurationText",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"DurationTime",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"ExperienceLabel",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"ExpiredOverlay",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"ItemImage",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"ItemName",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"ItemSwatch",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"RestrictedOverlay",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"SelectionHighlight",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"SliderExperience",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"TeamImage",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"UserGamePoints",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"UserName",0);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"UserRank",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"UserRankName",1);
  ppvVar2 = (void **)FUN_10444d70(this,(byte *)"UserRankNumber",1);
  ppvVar3 = (void **)FUN_10135420("env_particlesmokegrenade",-1,'\x01');
  ppvVar3 = (void **)FUN_10135420("prop_shield_entity",-1,'\x01');
  ppvVar3 = (void **)FUN_10444d70(param_1,(byte *)"FlmOptionsFlyout",0);
  ppvVar3 = (void **)FUN_10444d70(param_1,(byte *)"LabelLocalMissionInfo_Desc",1);
  ppvVar3 = (void **)FUN_10444d70(param_1,(byte *)"LblInfoName",0);
  ppvVar3 = (void **)FUN_10444d70(this,(byte *)"DeleteButton",0);
  ppvVar3 = (void **)FUN_10444d70(this,(byte *)"FlmOptionsFlyout",0);
  ppvVar3 = (void **)FUN_10444d70(this,(byte *)"UserAvatar",1);
  ppvVar4 = (void **)FUN_10135420("wheeled_controllable",-1,'\x01');
  ppvVar4 = (void **)FUN_1014fb30(&local_c,"C_EntityDissolve");
  ppvVar4 = (void **)FUN_10444d70(this,(byte *)"BtnDropButton",0);
  ppvVar4 = (void **)FUN_10444d70(this,(byte *)"InfoImage",0);
  ppvVar4 = (void **)FUN_10444d70(this,(byte *)"LblSliderText",0);
  ppvVar4 = (void **)FUN_10444d70(this,(byte *)"LegacyExplanation",0);
  ppvVar4 = (void **)FUN_10444d70(this,(byte *)"PrgValue",0);
  ppvVar5 = (void **)FUN_10268900(param_1,(uint *)"panel",0);
  ppvVar6 = (void **)FUN_10444d70(this,(byte *)"SectionedScrollBar",0);
  psVar1 = FUN_1026e510(param_1,&local_6,(undefined4 *)"dummy");
  psVar1 = FUN_10434510(&DAT_1071bd30,(short *)((int)&uStack8 + 2),(undefined4 *)"255,255,255");
  psVar1 = FUN_10434510(&DAT_1071bd30,(short *)((int)&uStack8 + 2),(undefined4 *)"None given.");
  psVar2 = (short *)(**(code **)(*DAT_107c09f0 + 0x30))("#L4D360UI_Installer_Loading");
  psVar3 = FUN_1026e510(&DAT_106f1e38,(short *)((int)&param_2 + 2),(undefined4 *)"bgcolor");
  psVar3 = FUN_1026e510(&DAT_106f1e38,(short *)((int)&param_2 + 2),(undefined4 *)"fgcolor");
  psVar3 = FUN_1026e510(&DAT_106f1e38,(short *)((int)&param_2 + 2),(undefined4 *)"position");
  psVar3 = FUN_103a0cc0(&DAT_106d27c4,(short *)((int)&param_2 + 2),(int *)"bgcolor");
  psVar3 = FUN_103a0cc0(&DAT_106d27c4,(short *)((int)&param_2 + 2),(int *)"fgcolor");
  psVar3 = FUN_103a0cc0(&DAT_106d27c4,(short *)((int)&param_2 + 2),(int *)"position");
  psVar3 = FUN_10434510(&DAT_10840218,(short *)((int)&param_2 + 2),(undefined4 *)"bgcolor");
  psVar3 = FUN_10434510(&DAT_10840218,(short *)((int)&param_2 + 2),(undefined4 *)"fgcolor");
  psVar3 = FUN_10434510(&DAT_10840218,(short *)((int)&param_2 + 2),(undefined4 *)"position");
  puVar1 = (uint *)FUN_1014fb90(local_c,(int *)"effects/gunshipmuzzle");
  puVar1 = (uint *)FUN_1014fb90(local_c,(int *)"sprites/flare6");
  puVar1 = (uint *)FUN_1042f3d0(param_1,(uint *)"resfile",(uint)&DAT_104eefb3);
  puVar1 = (uint *)FUN_1042f3d0(param_2,(uint *)"resultVar",(uint)&DAT_104eefb3);
  puVar1 = FUN_10021180(puVar4,(byte *)"%s\\%s");
  puVar1 = FUN_10031640(local_110,(byte *)"%s/%s");
  puVar1 = FUN_10031640(local_114,(byte *)"sound/%s");
  puVar1 = FUN_10031640(local_218,(byte *)"%s/_master%s.cache");
  puVar1 = FUN_10031640(puVar4,(byte *)"%s\\%s");
  puVar1 = FUN_100b10f0(puVar4,(byte *)"%s\\%s");
  puVar1 = FUN_100d0740((byte *)"host_writeconfig_ss %d");
  puVar1 = FUN_1017c0e0("scripts/titles.txt",5,&local_8);
  puVar1 = FUN_101f6800((byte *)"debug_hostage_recorder%d.txt");
  puVar1 = FUN_10212cf0(param_1 * 0xf8,"DispCollTrees_Alloc",'\0');
  puVar1 = FUN_10243420(param_1,(uint *)"blendFactor");
  puVar1 = FUN_10243420(param_1,(uint *)"channelMask");
  puVar1 = FUN_10243420(param_1,(uint *)"enabled");
  puVar1 = FUN_10243420(param_1,(uint *)"fileName");
  puVar1 = FUN_10243420(param_1,(uint *)"maxInputLevel");
  puVar1 = FUN_10243420(param_1,(uint *)"maxOutputLevel");
  puVar1 = FUN_10243420(param_1,(uint *)"midInputLevel");
  puVar1 = FUN_10243420(param_1,(uint *)"minInputLevel");
  puVar1 = FUN_10243420(param_1,(uint *)"minOutputLevel");
  puVar1 = FUN_10268340(param_1,(uint *)"CustomKeys",0);
  puVar1 = FUN_1039d560(param_1,(uint *)"CustomKeys",0);
  puVar1 = FUN_1042ee30(param_1,(uint *)"CustomKeys",0);
  puVar1 = FUN_1042ee30(param_1,(uint *)"Preview",0);
  puVar1 = FUN_1042ee30(param_1,(uint *)"RankTemplate",0);
  puVar1 = FUN_1042ee30(param_1,(uint *)"Sheet",0);
  puVar1 = FUN_1042ee30(param_1,(uint *)"attribute_template",0);
  puVar1 = FUN_1042ee30(param_1,(uint *)"noise_scale",0);
  puVar1 = FUN_1042ee30(this_00,(uint *)"dust_prob",0);
  puVar1 = FUN_1042ee30(this_00,(uint *)"effect_alpha",0);
  puVar1 = FUN_1042ee30(this_00,(uint *)"enable_flicker",0);
  puVar1 = FUN_1042ee30(this_00,(uint *)"flicker_alpha",0);
  puVar1 = FUN_1042ee30(this_00,(uint *)"max_dust_particles",0);
  puVar1 = FUN_1042ee30(this_00,(uint *)"max_dust_size",0);
  puVar1 = FUN_1042ee30(this_00,(uint *)"min_dust_size",0);
  puVar1 = FUN_1042ee30(this_00,(uint *)"update_rate",0);
  puVar10 = FUN_100b10f0(puVar13,(byte *)"(%f, %f, %f)");
  puVar10 = FUN_101f6800((byte *)"materials/%s");
  puVar10 = FUN_10212cf0(uVar13 * 0x1c,"LeafAmbientSamples",'\x01');
  puVar10 = FUN_10212cf0(uVar13 * 4,"LeafAmbient",'\x01');
  puVar11 = FUN_1039d560(puVar7,(uint *)"Sounds",0);
  puVar15 = FUN_1039d560(pvVar16,(uint *)"prop_contexts",0);
  puVar2 = (uint *)(**(code **)(*piVar1 + 0x24))("-transmitevents",&DAT_103236cf);
  puVar2 = (uint *)FUN_101bec80(&local_110,(byte *)"%s,%s");
  puVar2 = (undefined4 *)(**(code **)(**this_00 + 0x2c))("$basetexture",(int)&param_1 + 3,0);
  puVar2 = (undefined4 *)(**(code **)(*param_1 + 0x14))(&param_1,"Normal",0xff40d0ff);
  puVar2 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&local_8,"rosette.DefaultBgColor",0x80000000)
  puVar2 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"Caution",0xff0030ff);
  puVar2 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"Yellowish",0xff00a0ff);
  puVar2 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"rosette.ArmedBgColor",0x80c01c00);
  puVar2 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"rosette.DefaultFgColor",0xff00b0ff)
  puVar2 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"rosette.LineColor",0x80c0c0c0);
  puVar2 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"Button.BgColor",0xff000000,piVar1);
  puVar2 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"Button.TextColor",0xffffffff,piVar1)
  puVar2 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"CT_Blue",0xffff4040,piVar1);
  puVar2 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"Hostage_yellow",0xff00a0ff,piVar1);
  puVar2 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"T_Red",0xff4040ff,piVar1);
  puVar2 = (undefined4 *)(**(code **)(*this + 0x104))(&local_8,"ListPanel.BgColor",param_1);
  puVar2 = (undefined4 *)(**(code **)(*this + 0x104))(&local_8,"ListPanel.TextColor",param_1);
  puVar2 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FrameTitleButton.BgColor",piVar1);
  puVar2 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FrameTitleButton.FgColor",piVar1);
  puVar2 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"RichText.SelectedBgColor",piVar1);
  puVar2 = (undefined4 *)(**(code **)(iVar4 + 0x104))(&param_1,"RichText.BgColor",piVar1);
  puVar2 = (undefined4 *)(**(code **)(iVar4 + 0x104))(&param_1,"RichText.TextColor",piVar1);
  puVar2 = (undefined4 *)(**(code **)(iVar5 + 0x104))(&local_8,"ListPanel.BgColor",param_1);
  puVar2 = FUN_004017b0(local_110,(byte *)"%s\\%s\\%s");
  puVar2 = FUN_004017b0(local_148,(byte *)"%s\\%s\\%s");
  puVar2 = FUN_10021180(local_110,(byte *)"stage%i");
  puVar2 = FUN_10031640(local_36c,(byte *)"%s\\%s");
  puVar2 = FUN_100b10f0(local_110,(byte *)"stage%i");
  puVar2 = FUN_100b10f0(local_214,(byte *)"rank_images/%i");
  puVar2 = FUN_100b10f0(local_594,(byte *)"rank_images/%i");
  puVar2 = FUN_100d0740((byte *)"autoreload %d\n");
  puVar2 = FUN_100d0740((byte *)"host_writeconfig_ss %d");
  puVar2 = FUN_100d0740((byte *)"lefthand %d\n");
  puVar2 = FUN_1017c740((byte *)"%i %i %i %i");
  puVar2 = FUN_101f6800((byte *)"AutoGenerated(%s)");
  puVar2 = FUN_10268340(param_1,(uint *)"Button",0);
  puVar2 = FUN_10268340(param_1,(uint *)"DownButton",0);
  puVar2 = FUN_10268340(param_1,(uint *)"Slider",0);
  puVar2 = FUN_10268340(param_1,(uint *)"UpButton",0);
  puVar2 = FUN_1039d560(*(void **)(param_1 + 0xc),(uint *)"BreakableModels",0);
  puVar2 = FUN_1039d560(param_1,(uint *)"Button",0);
  puVar2 = FUN_1039d560(param_1,(uint *)"DownButton",0);
  puVar2 = FUN_1039d560(param_1,(uint *)"Slider",0);
  puVar2 = FUN_1039d560(param_1,(uint *)"UpButton",0);
  puVar2 = FUN_1042ee30(param_1,(uint *)"Button",0);
  puVar2 = FUN_1042ee30(param_1,(uint *)"Cables",0);
  puVar2 = FUN_1042ee30(param_1,(uint *)"DownButton",0);
  puVar2 = FUN_1042ee30(param_1,(uint *)"Particles",0);
  puVar2 = FUN_1042ee30(param_1,(uint *)"Slider",0);
  puVar2 = FUN_1042ee30(param_1,(uint *)"SubmenuHotspot",0);
  puVar2 = FUN_1042ee30(param_1,(uint *)"UpButton",0);
  puVar2 = FUN_1042ee30(param_1,(uint *)"WT_Template",0);
  puVar3 = (uint *)FUN_102659b0((char *)param_1,"materials/");
  puVar3 = (undefined *)FUN_103991e0((char *)local_108,".mdl");
  puVar3 = (undefined4 *)(**(code **)(*param_1 + 0x14))(local_10,"rosette.DefaultFgColor",local_c);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ChatEmote",0xffff8080);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ChatNormalBracket",0xffff8080);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ChatNormalName",0xff00c8c8);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ChatNormalText",0xffc8c8c8);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ChatNotify",0xff8080ff);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ChatPMSGBracket",0xff8080ff);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ChatPMSGName",0xff00c8c8);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ChatPMSGText",0xff80ff80);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"EQWeapon.FillColor",0xff000000);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"EQWeapon.TextColor",0xffffffff);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"FgColor",0xffffffff);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ItemQuality.Default",0xffffffff);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ItemQuality.Modify",0xffffffff);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ItemQuality.Normal",0xffffffff);
  puVar3 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"ItemQuality.Unique",0xffffffff);
  puVar3 = (undefined4 *)(**(code **)(*piVar2 + 0x14))(&param_1,"Menu.BgColor",0xff000000);
  puVar3 = (undefined4 *)(**(code **)(*piVar2 + 0x14))(&param_1,"Menu.SeparatorColor",0xff8e8e8e);
  puVar3 = (undefined4 *)(**(code **)(*piVar2 + 0x14))(&param_1,"ViewportBG",0);
  puVar3 = (undefined4 *)(**(code **)(*piVar4 + 0x14))(&param_1,"BorderDark",0xffffff);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"Black",0xffffcc99,piVar2);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"Button.BgColor",0xff000000,piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"Button.TextColor",0xffffffff,piVar1)
  puVar3 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"FgColor",0,pcVar2);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"ChatCursorColor",piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"ChatInputColor",piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"Console.DevTextColor",piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"Console.TextColor",piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FooterPanel.BorderColor",piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FooterPanel.BorderColorAlt",piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FooterPanel.InGameTextColor",piVar1)
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FooterPanel.TextColor",piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FooterPanel.TextColorAlt",piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FrameSystemButton.BgColor",piVar1);
  puVar3 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FrameSystemButton.FgColor",piVar1);
  puVar3 = (undefined4 *)(**(code **)(iVar1 + 0x100))(&local_8,"BgColor",*puVar3,pcVar2);
  puVar3 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"DarkBlue",piVar2);
  puVar3 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"GraphPanel.BgColor",piVar2);
  puVar3 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"GraphPanel.FgColor",piVar2);
  puVar3 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"LighterBlue",piVar2);
  puVar3 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"Menu.BgColor",piVar4);
  puVar3 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"Menu.TextColor",piVar4);
  puVar3 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"ProgressBar.BgColor",piVar2);
  puVar3 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"ProgressBar.FgColor",piVar2);
  puVar3 = (undefined4 *)(**(code **)(iVar7 + 0x104))(&param_1,"CircularProgressBar.BgColor",piVar6)
  puVar3 = (undefined4 *)(**(code **)(iVar7 + 0x104))(&param_1,"CircularProgressBar.FgColor",piVar6)
  puVar3 = FUN_10021180(auStack532,(byte *)"%s_exploded.mdl");
  puVar3 = FUN_10021180(local_12c,(byte *)"%f %f %f");
  puVar3 = FUN_10021180(local_214,(byte *)"%s_exploded.mdl");
  puVar3 = FUN_10031640(local_130,(byte *)"VProf (%s) --  %d frames sampled");
  puVar3 = FUN_10031640(local_158,(byte *)"%s\\TacticalIntervention\\Settings");
  puVar3 = FUN_100b10f0(local_110,(byte *)"spec_player %i\n");
  puVar3 = FUN_100b10f0(local_190,(byte *)"HKEY_CURRENT_USER\\%s\\Rate");
  puVar3 = FUN_100b10f0(local_218,(byte *)"resource/overviews/%s_stage%i.txt");
  puVar3 = FUN_1017c740((byte *)"%i %i %i %i");
  puVar3 = FUN_101f6800((byte *)"AutoGenerated(%s)");
  puVar3 = FUN_10243420(param_1,(uint *)"blendFactor");
  puVar3 = FUN_10243420(param_1,(uint *)"channelMask");
  puVar3 = FUN_10243420(param_1,(uint *)"enabled");
  puVar3 = FUN_10267d30(pvVar2,"Command",(uint *)"Command",pcVar7);
  puVar3 = FUN_10267f50(this_00,"ListViewItemSelected");
  puVar3 = FUN_10268340(param_1,(uint *)"tabskv",0);
  puVar3 = FUN_10268340(param_1,(uint *)"tabwidth",0);
  puVar3 = FUN_10268340(param_1,(uint *)"transition_time",0);
  puVar3 = FUN_1039d370(this_00,"ListViewItemSelected");
  puVar3 = FUN_1039d560(param_2,(uint *)"TPEvents",0);
  puVar3 = FUN_1039d560(this_00,(uint *)"Gears",0);
  puVar3 = FUN_1042ea30(this_00,"ListViewItemSelected");
  puVar3 = FUN_1042ee30(param_1,(uint *)"PlayerItemTemplate",0);
  puVar3 = FUN_1042ee30(param_1,(uint *)"PlayerTemplate",0);
  puVar3 = FUN_1042ee30(param_1,(uint *)"buttonflags",0);
  puVar3 = FUN_1042ee30(param_1,(uint *)"tabskv",0);
  puVar3 = FUN_1042ee30(param_1,(uint *)"tabwidth",0);
  puVar3 = FUN_1042ee30(param_1,(uint *)"transition_time",0);
  puVar3 = FUN_1042ee30(param_2,(uint *)"TPEvents",0);
  puVar3 = FUN_1042ee30(puVar12,(uint *)"BtnChapter",0);
  puVar3 = FUN_1042f060(pvVar1,&local_c,(uint *)"Color",&param_1);
  puVar4 = (uint *)FUN_102687d0(*ppuVar3,(uint *)"image",0);
  puVar4 = (uint *)FUN_102687d0(*ppuVar3,(uint *)"imageSelected",0);
  puVar4 = (uint *)FUN_10268900(*ppuVar3,(uint *)"iconImage",0);
  puVar4 = (uint *)FUN_1039d9a0(*ppuVar3,(uint *)"image",0);
  puVar4 = (uint *)FUN_1039d9a0(*ppuVar3,(uint *)"imageSelected",0);
  puVar4 = (uint *)FUN_1039dad0(*ppuVar3,(uint *)"iconImage",0);
  puVar4 = (uint *)FUN_1042f270(*ppuVar3,(uint *)"image",0);
  puVar4 = (uint *)FUN_1042f270(*ppuVar3,(uint *)"imageSelected",0);
  puVar4 = (uint *)FUN_1042f3a0(*ppuVar3,(uint *)"iconImage",0);
  puVar4 = (undefined *)FUN_103991e0((char *)auStack516,".mdl");
  puVar4 = (undefined *)FUN_103991e0((char *)local_204,".mdl");
  puVar4 = (undefined4 *)(**(code **)(*piVar2 + 0x104))(local_10,"DimBaseText",param_1);
  puVar4 = (undefined4 *)(**(code **)(*piVar2 + 0x104))(local_c,"DimBaseText",param_1);
  puVar4 = (undefined4 *)(**(code **)(*piVar2 + 0x14))(&param_1,"Blank",0);
  puVar4 = (undefined4 *)(**(code **)(*piVar2 + 0x14))(&param_1,"ProgressBar.FgColor",0);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"ListPanel.TextBgColor",uVar2,piVar3)
  puVar4 = (undefined4 *)(**(code **)(*this + 0x100))(&param_1,"TextEntry.FocusEdgeColor",0,piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&local_8,"Dialog.TitleColor",param_1);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&local_8,"Dialog.TitleColorAlt",param_1);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"Console.DevTextColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"Console.TextColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"ExpandButton.Color",piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FrameTitleBar.BgColor",pcVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"FrameTitleBar.TextColor",pcVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"HybridButton.CursorColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"HybridButton.FocusColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"HybridButton.TextColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"Label.SelectedTextColor",piVar7);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"ListPanel.SelectedBgColor",piVar3);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"ListPanel.SelectedTextColor",piVar3)
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"ListPanel.TextColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"ListPanel.TextColor",piVar3);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"TextEntry.CursorColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"TextEntry.DisabledBgColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"TextEntry.DisabledTextColor",piVar2)
  puVar4 = (undefined4 *)(**(code **)(*this + 0x104))(&param_1,"TextEntry.SelectedBgColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x100))(&local_8,"Label.BgColor",*puVar4,piVar2);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x100))(&local_8,"ListPanel.BgColor",*puVar4,piVar2);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x100))(&local_8,"ListPanel.BgColor",*puVar4,piVar3);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x100))(local_10,"Menu.BgColor",*puVar4,param_1);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x100))(local_14,"Menu.ArmedBgColor",*puVar4,param_1);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"ListPanel.BgColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"ScrollBarSlider.BgColor",piVar9);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"ScrollBarSlider.FgColor",piVar9);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"TextEntry.BgColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"TextEntry.TextColor",piVar2);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x104))(local_8,"Slider.NobColor",param_1);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x14))(&local_8,"FgColor",*puVar4);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x14))(local_8,"Slider.DisabledTextColor1",*puVar4);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x14))(local_8,"Slider.DisabledTextColor2",*puVar4);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x14))(local_8,"Slider.TrackColor",*puVar4);
  puVar4 = (undefined4 *)(**(code **)(iVar1 + 0x14))(local_c,"Slider.TextColor",*puVar4);
  puVar4 = (undefined4 *)(**(code **)(iVar3 + 0x104))(&param_1,"Label.BgColor",piVar7);
  puVar4 = (undefined4 *)(**(code **)(iVar3 + 0x104))(&param_1,"Label.DisabledFgColor1",param_1);
  puVar4 = (undefined4 *)(**(code **)(iVar3 + 0x104))(&param_1,"Label.DisabledFgColor2",piVar7);
  puVar4 = (undefined4 *)FUN_10268930(this_00,(uint *)"sound_armed",(uint)&DAT_103236cf);
  puVar4 = (undefined4 *)FUN_10268930(this_00,(uint *)"sound_depressed",(uint)&DAT_103236cf);
  puVar4 = (undefined4 *)FUN_10268930(this_00,(uint *)"sound_released",(uint)&DAT_103236cf);
  puVar4 = (undefined4 *)FUN_1042f3d0(this_00,(uint *)"sound_armed",(uint)&DAT_104eefb3);
  puVar4 = (undefined4 *)FUN_1042f3d0(this_00,(uint *)"sound_depressed",(uint)&DAT_104eefb3);
  puVar4 = (undefined4 *)FUN_1042f3d0(this_00,(uint *)"sound_released",(uint)&DAT_104eefb3);
  puVar4 = FUN_100b10f0(local_144,(byte *)"sound/music/%s*");
  puVar4 = FUN_100d0740((byte *)"demo_record_inc %s\n");
  puVar4 = FUN_100e40c0(local_58,"lengthproxy",0,puVar4,FUN_100e4b50,0x80);
  puVar4 = FUN_100ff930(local_48,"lengthproxy",0,0,puVar4,FUN_100ffd80);
  puVar4 = FUN_10243420(param_1,(uint *)"blendFactor");
  puVar4 = FUN_10243420(param_1,(uint *)"enabled");
  puVar4 = FUN_10243420(param_1,(uint *)"preserveLuminosity");
  puVar4 = FUN_10267e50(this_00,"KeyCodeTyped",(uint *)&DAT_103c8ea4,param_1);
  puVar4 = FUN_10268340(param_1,(uint *)"frame",0);
  puVar4 = FUN_1039d270(this_00,"KeyCodeTyped",(uint *)&DAT_105366dc,param_1);
  puVar4 = FUN_1039d560(param_1,(uint *)"KickData",0);
  puVar4 = FUN_1039d560(param_1,(uint *)"SoundData",0);
  puVar4 = FUN_1039d560(param_1,(uint *)"frame",0);
  puVar4 = FUN_1039d560(param_1,(uint *)"meleeattacks_back",0);
  puVar4 = FUN_1039d560(param_1,(uint *)"meleeattacks_crouched",0);
  puVar4 = FUN_1039d560(param_1,(uint *)"meleeattacks_forward",0);
  puVar4 = FUN_1039d560(param_1,(uint *)"meleeattacks_left",0);
  puVar4 = FUN_1039d560(param_1,(uint *)"meleeattacks_right",0);
  puVar4 = FUN_1039d560(param_1,(uint *)"meleeattacks_standing",0);
  puVar4 = FUN_1042e930(this_00,"KeyCodeTyped",(uint *)&DAT_10539390,param_1);
  puVar4 = FUN_1042ee30(*(void **)((int)this + 0x40f4),(uint *)"elevations",0);
  puVar4 = FUN_1042ee30(*(void **)(param_1 + 0xc),(uint *)"BreakableModels",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"Hotspot",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"KickData",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"SoundData",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"VisibleHotspot",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"frame",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"item_types",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"meleeattacks_back",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"meleeattacks_crouched",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"meleeattacks_forward",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"meleeattacks_left",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"meleeattacks_right",0);
  puVar4 = FUN_1042ee30(param_1,(uint *)"meleeattacks_standing",0);
  puVar4 = FUN_1042ee30(this_01,(uint *)"FlmChapterXXautogenerated",0);
  puVar5 = (undefined4 *)(**(code **)(*piVar1 + 0x14))(&param_1,"Frame.SmearColor",0xc8000000);
  puVar5 = (undefined4 *)(**(code **)(*piVar2 + 0x14))(&param_1,"Blank",0);
  puVar5 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"ListPanel.BgColor",piVar3);
  puVar5 = (undefined4 *)(**(code **)(iVar1 + 0x14))(&param_1,"Panel.FgColor",0xffffffff);
  puVar5 = (undefined4 *)(**(code **)(iVar1 + 0x14))(local_c,"Chat.TypingText",*puVar5);
  puVar5 = (undefined4 *)(**(code **)(iVar2 + 0x100))(local_18,"Menu.TextColor",*puVar5,param_1);
  puVar5 = (undefined4 *)(**(code **)(iVar2 + 0x100))(local_c,"Menu.ArmedTextColor",*puVar5,param_1)
  puVar5 = (undefined4 *)(**(code **)(iVar2 + 0x14))(local_c,"MenuBar.BgColor",*puVar5);
  puVar5 = FUN_10021180(local_264,(byte *)"vehicle_exit%i");
  puVar5 = FUN_100b10f0(local_224,(byte *)"resource/overviews/%s_stage%i.txt");
  puVar5 = FUN_100d0740((byte *)"autoreload %d\n");
  puVar5 = FUN_100d0740((byte *)"lefthand %d\n");
  puVar5 = FUN_10243420(param_1,(uint *)"blendFactor");
  puVar5 = FUN_10243420(param_1,(uint *)"colorize");
  puVar5 = FUN_10243420(param_1,(uint *)"deltaHSV");
  puVar5 = FUN_10243420(param_1,(uint *)"enabled");
  puVar5 = FUN_10243420(param_1,(uint *)"fuzziness");
  puVar5 = FUN_10243420(param_1,(uint *)"invertSelection");
  puVar5 = FUN_10243420(param_1,(uint *)"selectionMethod");
  puVar5 = FUN_10243420(param_1,(uint *)"tolerance");
  puVar5 = FUN_1042ee30(param_1,(uint *)"SubImage",0);
  puVar6 = (undefined *)FUN_103991e0(pcVar12,".mdl");
  puVar6 = (undefined4 *)(**(code **)(iVar1 + 0x100))(local_c,"TreeView.BgColor",*puVar6,piVar3);
  puVar6 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"ComboBoxButton.BgColor",piVar8);
  puVar6 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"ControlText",piVar3);
  puVar6 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"RadioButton.TextColor",piVar3);
  puVar6 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"WindowDisabledBgColor",piVar3);
  puVar6 = (undefined4 *)(**(code **)(iVar2 + 0x104))(&param_1,"RadioButton.ArmedTextColor",piVar3);
  puVar6 = (undefined4 *)FUN_101fc220(local_bc,"EXECUTABLE_PATH",(char *)0x0,(char *)0x0);
  puVar6 = FUN_100b10f0(local_33c,(byte *)"%d.%d");
  puVar6 = FUN_102435f0((uint *)"DmeElement");
  puVar6 = FUN_1042ee30(param_1,(uint *)"states",0);
  puVar7 = (uint *)FUN_101f6800((byte *)"%s/%s.txt");
  puVar7 = (undefined *)FUN_1042d9d0(pcVar13,".mdl");
  puVar7 = (undefined4 *)(**(code **)(*local_8 + 0x104))(local_14,"CheckButton.TextColor",piVar3);
  puVar7 = (undefined4 *)(**(code **)(*local_8 + 0x104))(local_c,"ComboBoxButton.ArrowColor",piVar8)
  puVar7 = (undefined4 *)(**(code **)(*param_1 + 0x14))(&local_8,"DragDrop.DragFrame",0xc0ffffff);
  puVar7 = (undefined4 *)(**(code **)(*param_1 + 0x14))(&local_8,"DragDrop.DropFrame",0xff96ff96);
  puVar7 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"ScrollBarButton.BgColor",piVar3);
  puVar7 = (undefined4 *)FUN_100ca740(param_1,(uint *)"deltaHSV");
  puVar7 = FUN_10368080(PTR_PTR_FUN_105e5b28,(int)"friend",puVar8);
  puVar7 = FUN_1042ee30(puVar12,(uint *)"hitbox_default_ExplodeFX",0);
  puVar7 = FUN_1042ee30(puVar12,(uint *)"hitbox_default_Options",0);
  puVar8 = (uint *)FUN_100d0740((byte *)"%s/%s.txt");
  puVar8 = (undefined4 *)(**(code **)(*local_8 + 0x104))(local_c,"ScrollBarButton.FgColor",piVar3);
  puVar8 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"FrameGrip.Color1",piVar2);
  puVar8 = (undefined4 *)(**(code **)(iVar1 + 0x104))(&param_1,"FrameGrip.Color2",piVar2);
  puVar8 = (undefined4 *)(**(code **)(iVar5 + 0x14))(&local_8,"Frame.BgColor",*puVar4);
  puVar8 = FUN_100d0740((byte *)"demo_record_inc %s\n");
  puVar8 = FUN_10243420(puVar6,(uint *)"cubemap");
  puVar8 = FUN_1042ee30(puVar10,(uint *)"Sounds",0);
  pvVar1 = (void *)FUN_100eef50(&DAT_1060f4b8,(int *)0x0,"helicopter_escape_point",0,0,0,
  pvVar2 = (void *)FUN_1042df80((byte *)"#L4D360UI_Controller_Edit_Keys_Buttons",param_1);
  pvVar2 = FUN_103a08e0(local_3c,"");
  pvVar4 = (void *)FUN_1042df20(pbVar14,(byte *)"DeveloperCommentary");
  pvVar4 = FUN_1026ebe0((void *)((int)this + 0x24),"");
  pvVar5 = (void *)FUN_10314ac0(this,'\0',(uint *)"Cars_Ter",'\x01');
  pvVar5 = (void *)FUN_1042df20(pbVar1,(byte *)"DrpVoicePTT");
  pvVar5 = (void *)FUN_1042df80(pbVar1,(byte *)"ShowAdvanced");
  pvVar5 = FUN_100e47c0(1,(byte *)"_LPT_%s_%d");
  pvVar5 = FUN_100ffcc0((byte *)"lengthprop%d");
  pvVar5 = FUN_100ffd20(0,(byte *)"_LPT_%s_%d");
  pvVar6 = FUN_100e47c0(1,(byte *)"_ST_%s_%d");
  pvVar7 = FUN_100ffd20(0,(byte *)"_ST_%s_%d");
  pwVar3 = _wcspbrk(param_1,L"?*");
  return "";
  return "#RC_Mode_FFA";
  return "#RC_Skill_HC";
  return "#TI_GT_TEAMDM";
  return "#TI_vote_alltalk_change";
  return "#TI_vote_balance_teams";
  return "#TI_vote_kick_player";
  return "#TI_vote_passed_alltalk_change";
  return "#TI_vote_passed_balance_teams";
  return "#TI_vote_passed_kick_player";
  return "#TI_vote_passed_restart_game";
  return "#TI_vote_restart_game";
  return "#Teamname_Blue";
  return "#Teamname_Red";
  return "#Teamname_Spectators";
  return "#Teamname_Unassigned";
  return "<<Invalid>>";
  return "<<illegal>>";
  return "<null>";
  return "AchievementGenericPanelList";
  return "Achievements";
  return "AnimatingImagePanel";
  return "AnimationController";
  return "Audio Disabled";
  return "Audio";
  return "AudioVideo";
  return "BaseInputDialog";
  return "BaseModHybridButton";
  return "BaseModMenuBackground";
  return "BigShot";
  return "BorderedPanel";
  return "BuildModeDialog";
  return "Button";
  return "CAI_BaseNPC";
  return "CAdvancedVideo";
  return "CAreaPortalsUIPanel";
  return "CAvatarImagePanel";
  return "CBackpackSlotItem";
  return "CBackpack_ContentsList";
  return "CBaseActionEditDialog";
  return "CBaseActionPlaySoundStartDialog";
  return "CBaseHudChat";
  return "CBaseItemPurchasingPopup";
  return "CBaseModFooterPanel";
  return "CBaseModFrame";
  return "CBaseModPanel";
  return "CBaseModTransitionPanel";
  return "CBaseModelPanel";
  return "CBaseViewport";
  return "CBugUIPanel";
  return "CBuildModeNavCombo";
  return "CCLientShadowMgr";
  return "CCenterStringLabel";
  return "CChatPanel";
  return "CChatRichText";
  return "CClientLeafSystem";
  return "CClientScoreBoardDialog";
  return "CClientThinkList";
  return "CColorBalanceUIPanel";
  return "CColorCorrectionUIChildPanel";
  return "CColorCorrectionUIPanel";
  return "CColorCurvesEditPanel";
  return "CColorCurvesUIPanel";
  return "CColorHistogramPanel";
  return "CColorLevelsUIPanel";
  return "CColorLookupUIPanel";
  return "CColorOperationListPanel";
  return "CColorSlider";
  return "CConsoleDialog";
  return "CConsolePanel";
  return "CContextMenuBase";
  return "CCreateMultiplayerGameBotPage";
  return "CCreateMultiplayerGameDialog";
  return "CCreateMultiplayerGameServerPage";
  return "CCurveEditorPanel";
  return "CCvarSlider";
  return "CCvarToggleCheckButton";
  return "CDemoEditorPanel";
  return "CDemoSmootherPanel";
  return "CDemoUIPanel";
  return "CDemoUIPanel2";
  return "CDialogListButton";
  return "CDragDropHelperPanel";
  return "CDrawTreeFrame";
  return "CDummyPanel";
  return "CEORTeamScores";
  return "CExButton";
  return "CExImageButton";
  return "CExLabel";
  return "CExRichText";
  return "CExplanationPopup";
  return "CExtrasDialog";
  return "CFPSPanel";
  return "CFadeOutStartGame";
  return "CFadeOutToEconUI";
  return "CFilterComboBox";
  return "CFilterablePanelListPanel";
  return "CFogUIPanel";
  return "CFooterBitmapButton";
  return "CFriendsListPanel";
  return "CFullScreenSelectionPanel";
  return "CGameConsoleDialog";
  return "CGameRules";
  return "CGameStringPool";
  return "CGammaDialog";
  return "CHLTVDirector";
  return "CHUDHealthVehicle";
  return "CHUDMissionStatus";
  return "CHUDPlayerHitOutput";
  return "CHudAmmo";
  return "CHudChatHistory";
  return "CHudClock";
  return "CHudDamageIndicator";
  return "CHudDisplayBonuses";
  return "CHudFullscreen";
  return "CHudGamePanel";
  return "CHudGrenades";
  return "CHudHealth";
  return "CHudHoldingObject";
  return "CHudMenu";
  return "CHudMessage";
  return "CHudMiniMap";
  return "CHudNumericDisplay";
  return "CHudOBJLocator";
  return "CHudPanelRoundWin";
  return "CHudTICrosshair";
  return "CHudVoiceSelfStatus";
  return "CHudVoiceStatus";
  return "CHudVote";
  return "CHudWeaponSelection";
  return "CIconPanel";
  return "CInfoLabel";
  return "CInfoListItem";
  return "CInventoryItem";
  return "CItemButton";
  return "CItemPreviewPanel";
  return "CKeyBindings";
  return "CKeyLabel";
  return "CLoadoutSlotLabel";
  return "CLoadoutSlotLabelItemImage";
  return "CLoadoutSlotLabelItemLabel";
  return "CLoadoutSlotPanel";
  return "CLoadoutSlotPreview";
  return "CLoadoutSlotTitleLabel";
  return "CLocatorPanel";
  return "CLookupViewPanel";
  return "CLookupViewWindow";
  return "CMDLPanel";
  return "CMapOverview";
  return "CMouseMessageForwardingPanel";
  return "CMoviePlayer";
  return "CNavProgress";
  return "CNewOperationDialog";
  return "CNonFocusableMenu";
  return "CNotificationQueuePanel";
  return "CNotificationToastControl";
  return "CNotificationToastManager";
  return "CNotificationsPresentPanel";
  return "COcclusionUIPanel";
  return "COperationFileListFrame";
  return "COperationListPanel";
  return "CPanelListPanel";
  return "CPerfUIChildPanel";
  return "CPerfUIPanel";
  return "CPerfVisualBenchmark";
  return "CPerforceFileListFrame";
  return "CPhysicsHook";
  return "CPlanCreationMenu";
  return "CPlayerPreviewPanel";
  return "CPolygonButton";
  return "CPopUp_Purchase_Buy";
  return "CPostFrameNavigationHook";
  return "CPotteryWheelPanel";
  return "CPrecisionSlider";
  return "CProceduralTexturePanel";
  return "CProfileHierarchyPanel";
  return "CProfileTree";
  return "CPropFadeUIPanel";
  return "CRadialButton";
  return "CRadialMenu";
  return "CRadialMenuPanel";
  return "CRenderTextureEditor";
  return "CRenderTexturesListViewPanel";
  return "CRequisitionComboBox";
  return "CRichTextWithScrollbarBorders";
  return "CRoundWinHeader";
  return "CRoundWinPanel";
  return "CRoundWinPersonalStats";
  return "CRoundWinScores";
  return "CSDKTextWindow";
  return "CSaveDocumentQuery";
  return "CScoreHeader";
  return "CScoreListItem";
  return "CScoreListPanel";
  return "CSectionHeader";
  return "CSelectedHSVUIPanel";
  return "CSkyUIPanel";
  return "CSlotItem";
  return "CSmallTextEntry";
  return "CSoundEmitterSystem";
  return "CSoundTest";
  return "CSpectatorGUI";
  return "CSpectatorPlayerItem";
  return "CSpectatorPlayerList";
  return "CTIFreezePanel";
  return "CTIGamePanel";
  return "CTIHudChat";
  return "CTIHudChatInputLine";
  return "CTIHudChatLine";
  return "CTIItemAttributePanel";
  return "CTIItemAttributesPanel";
  return "CTILocalPlayerPlanPanel";
  return "CTIMDLPanel";
  return "CTINotificationToast";
  return "CTIScoreboard";
  return "CTISpectatorGUI";
  return "CTISpectatorMenu";
  return "CTISquadButton";
  return "CTIStaticGlobals";
  return "CTITeamMenu";
  return "CTIUserStatContainer";
  return "CTIUserStatLabel";
  return "CTeamListPanel";
  return "CTeamMenu";
  return "CTextWindow";
  return "CTextureListPanel";
  return "CTimeLabel";
  return "CTipPanel";
  return "CTransitionScreen";
  return "CTreeViewListControl";
  return "CUncorrectedImagePanel";
  return "CVProfLabel";
  return "CVProfPanel";
  return "CViewportClientSystem";
  return "CVmtTextEntry";
  return "CVoiceListItem";
  return "CVoiceListPanel";
  return "CVoicePlayerListContext";
  return "CVoteSetupDialog";
  return "CWeaponStatsPanel";
  return "C_SoundScapeSystem";
  return "Chat_All";
  return "Chat_Radio";
  return "CheckButton";
  return "CircularProgressBar";
  return "ClickPanel";
  return "ClientModeTINormalFullscreen";
  return "Color Correction Mgr";
  return "ComboBox";
  return "CommandMenu";
  return "ContextLabel";
  return "ContinuousProgressBar";
  return "ControllerOptions";
  return "ControllerOptionsButtons";
  return "ControllerOptionsSticks";
  return "CountdownLabel";
  return "CreateDirectoryDialog";
  return "CvarToggleCheckButton";
  return "DPT_Array";
  return "DPT_Float";
  return "DPT_Int";
  return "DPT_Int64";
  return "DPT_String";
  return "DPT_Vector";
  return "DPT_VectorXY";
  return "DetailObjectSystem";
  return "DirectorySelectDialog";
  return "Divider";
  return "DropDownMenu";
  return "EditablePanel";
  return "Entities";
  return "ExclusiveEditablePanel";
  return "ExpandButton";
  return "FileNameComboBox";
  return "FileOpenDialog";
  return "FileOpenStateMachine";
  return "FlyoutMenu";
  return "Frame";
  return "FrameSystemButton";
  return "FullscreenTIViewport";
  return "GameInstructor";
  return "GameModes";
  return "GenericConfirmation";
  return "GenericPanelList";
  return "GenericWaitScreen";
  return "GetDeathNoticeName not implemented on client yet";
  return "GraphPanel";
  return "HLTVHLTVHLTVHLTVHLTVHLTVHLTVHLTV";
  return "Half-Life 2";
  return "HorizontalGauge";
  return "ImagePanel";
  return "ImageProgressBar";
  return "InGameMainMenu";
  return "InputDialog";
  return "KeyboardMouse";
  return "KilledByPanel";
  return "Label";
  return "ListPanel";
  return "ListViewItem";
  return "ListViewPanel";
  return "LoadingProgress";
  return "MAPKIT";
  return "MainMenu";
  return "MarqueeLabel";
  return "MenuBar";
  return "MenuButton";
  return "MenuItem";
  return "MenuSeparator";
  return "MenuStatePanel";
  return "MessageBox";
  return "MessagingPanel";
  return "Multiplayer";
  return "NULL m_pSfx";
  return "No conversion to string";
  return "No model!";
  return "Obsolete / Unused";
  return "Options";
  return "PageTab";
  return "Panel";
  return "PanelListPanel";
  return "PanelListPanel2";
  return "Panel_PassNavigationToParent";
  return "PasswordEntry";
  return "PercentageCroppedImageLabel";
  return "Physics";
  return "PrecacheRegister";
  return "ProgressBar";
  return "PropertyBox";
  return "PropertyDialog";
  return "PropertyPage";
  return "PropertySheet";
  return "RadioButton";
  return "RichText";
  return "RichTextInterior";
  return "ScalableImagePanel";
  return "ScrollBar";
  return "ScrollBarSlider";
  return "ScrollableEditablePanel";
  return "SectionedListPanel";
  return "Slider";
  return "SliderControl";
  return "Spatial Entity Mgr";
  return "Splitter";
  return "SplitterChildPanel";
  return "SplitterHandle";
  return "TIAvatarSelectionList";
  return "TIButton";
  return "TICheckButton";
  return "TIConVarCheckButton";
  return "TIGameOptions";
  return "TIGameStatsManager";
  return "TIHorizontalList";
  return "TIHudDeathNotice";
  return "TIImageButton";
  return "TIImageButtonToggle";
  return "TILocalInfoLabel";
  return "TIMainMenuLocalUserInfoContainer";
  return "TIMainMenuSocialContainer";
  return "TIMessageBox";
  return "TIPageTab";
  return "TIPopUp_Base";
  return "TIPropertyPage";
  return "TIPropertySheet";
  return "TIRadioButton";
  return "TIRankListFrame";
  return "TIRichText";
  return "TIScrollBar";
  return "TITabContainer";
  return "TIUserAvatarPanel";
  return "TIViewport";
  return "TIVoiceControl";
  return "TacInt FixAPI GameSystem";
  return "Tactical Intervention - STEAM";
  return "Tactical Intervention";
  return "TextEntry";
  return "TileViewPanelEx";
  return "ToggleButton";
  return "TreeNode";
  return "TreeNodeDropPanel";
  return "TreeNodeText";
  return "TreeView";
  return "TxViewPanel";
  return "UNKNOWN ERROR";
  return "URLButton";
  return "URLLabel";
  return "Unknown";
  return "VScriptServer";
  return "Video";
  return "VideoPanel";
  return "ViewEffects";
  return "VisibilityMonitor";
  return "VoteBarPanel";
  return "VoteOptions";
  return "WSANO_DATA";
  return "Windows WAVE";
  return "XboxLiveOptions";
  return "[unknown]";
  return "clc_BaselineAck";
  return "clc_ClientInfo";
  return "clc_CmdKeyValues";
  return "clc_FileCRCCheck";
  return "clc_ListenEvents";
  return "clc_LoadingProgress";
  return "clc_Move";
  return "clc_RespondCvarValue";
  return "clc_SplitPlayerConnect";
  return "clc_UserMessage";
  return "clc_VoiceData";
  return "client entity";
  return "crash";
  return "error";
  return "flashbang";
  return "gamemode";
  return "generic";
  return "grenade";
  return "handlerID";
  return "impact_physics_dust";
  return "incendiary";
  return "iostream";
  return "lobbygamesystem";
  return "models/player.mdl";
  return "nav_progress";
  return "net_SetConVar";
  return "net_SignonState";
  return "net_SplitScreenUser";
  return "net_StringCmd";
  return "net_Tick";
  return "overview";
  return "plancreate";
  return "point_viewcontrol";
  return "prop_bomb_armed";
  return "radialmenupanel";
  return "roundwin";
  return "scores";
  return "scripts/talker/response_rules.txt";
  return "smokegrenade";
  return "specgui";
  return "svc_BSPDecal";
  return "svc_ClassInfo";
  return "svc_CmdKeyValues";
  return "svc_CreateStringTable";
  return "svc_CrosshairAngle";
  return "svc_EntityMessage";
  return "svc_FixAngle";
  return "svc_GameEvent";
  return "svc_GameEventList";
  return "svc_GetCvarValue";
  return "svc_PacketEntities";
  return "svc_PaintmapData";
  return "svc_Prefetch";
  return "svc_Print";
  return "svc_SendTable";
  return "svc_ServerInfo";
  return "svc_SetPause";
  return "svc_SetView";
  return "svc_Sounds";
  return "svc_SplitScreen";
  return "svc_TempEntities";
  return "svc_UpdateStringTable";
  return "svc_UserMessage";
  return "svc_VoiceData";
  return "svc_VoiceInit";
  return "system";
  return "teargrenade";
  return "unconnected";
  return "unknown vote passed.";
  return "unknown_script_type";
  return "unnamed";
  return "voicecontrol";
  return "xmas";
  return (undefined4 *)"unknown";
  return (wchar_t *)L"zh-TW";
  this = (int *)FUN_10135420("ai_hint",-1,'\x01');
  this = (int *)FUN_10135420("entityflame",-1,'\x01');
  this = (int *)FUN_10135420("env_entity_dissolver",-1,'\x01');
  this = (int *)FUN_10135420("env_ragdoll_boogie",-1,'\x01');
  this = (int *)FUN_10135420("func_useableladder",-1,'\x01');
  this = (int *)FUN_10135420("large_metal_gib",-1,'\x01');
  this = (int *)FUN_10135420("npc_vehicle",-1,'\x01');
  this = (int *)FUN_10135420("physics_prop_statue",-1,'\x01');
  this = (int *)FUN_10135420("prop_ballistic_blockade",-1,'\x01');
  this = (int *)FUN_10135420("prop_fire_extinguisher",-1,'\x01');
  this = (int *)FUN_10135420("prop_propane_tank",-1,'\x01');
  this = (int *)FUN_10135420("prop_rocket_crate",-1,'\x01');
  this = (int *)FUN_10135420("prop_vip_retrieval_entity",-1,'\x01');
  this = (int *)FUN_10135420("raggib",-1,'\x01');
  this = (int *)FUN_10135420("window_pane",-1,'\x01');
  this = (int *)FUN_1023faf0("player",param_1);
  this = (int *)FUN_10444d70(param_1,(byte *)"background_mouseintercept",0);
  this = (void *)(**(code **)(*DAT_106cb868 + 0xdc))(param_2,"ENGINE");
  this = (void *)FUN_10135420("sdk_bot",-1,'\x01');
  this = (void *)FUN_102c10f0(DAT_107a27d0,'\0',(uint *)"GamePanelStrings",'\x01');
  this = (void *)FUN_102c10f0(DAT_107a27d0,'\0',(uint *)"ObjectiveInfo",'\x01');
  this = (void *)FUN_10314ac0(DAT_10693b08,'\x01',(uint *)"loadedtrucks",'\0');
  this = (void *)FUN_10444d70(param_1,(byte *)"LocatorBG",0);
  this = (void **)FUN_10135420("helicopter_controllable",-1,'\x01');
  this = FUN_100a7bb0("entity_blocker",param_1,&DAT_106a6510,param_4);
  this = FUN_100a7bb0("flashbang_projectile",param_1,param_2,param_5);
  this = FUN_100a7bb0("grenade_40mm",param_1,param_2,param_7);
  this = FUN_100a7bb0("grenade_projectile",param_1,param_2,param_5);
  this = FUN_100a7bb0("incendiary_projectile",param_1,param_2,param_5);
  this = FUN_100a7bb0("rpg_rocket",param_1,param_2,uVar1);
  this = FUN_100a7bb0("smokegrenade_projectile",param_1,param_2,param_5);
  this = FUN_100a7bb0("teargrenade_projectile",param_1,param_2,param_5);
  this = FUN_100a7c20("prop_ragdoll",param_3,param_4,param_1);
  this = FUN_100a7c20("prop_ragdoll_attached",(undefined8 *)(param_1 + 0x84),&DAT_106a6510,0);
  this = FUN_102865d0(&DAT_106f1d88,(uint *)"Panel");
  this = FUN_103b28c0(&DAT_106cfee8,(uint *)"Panel");
  this = FUN_10445300(&DAT_10840168,(uint *)"Panel");
  this[0x18b] = (uint)"DEFAULT";
  this_00 = (int *)FUN_10135420("prop_physics_multiplayer",-1,'\x01');
  this_00 = (void *)FUN_10314ac0(DAT_10693b08,'\x01',(uint *)"cargotrucks",'\0');
  this_00 = (void *)FUN_10314ac0(this,'\0',(uint *)"Cars_CT",'\x01');
  this_00 = (void *)FUN_10444d70(this,(byte *)"PnlBackground",0);
  this_00 = (void *)FUN_10444d70(this,(byte *)"PublicChatPage",1);
  this_00 = (void *)FUN_10444d70(this,(byte *)"SlotList",1);
  this_00 = FUN_100a7bb0("inferno",(undefined8 *)&param_1,&DAT_106a6510,
  this_00 = FUN_101f8ca0("vgui_screen","slideshow_display_screen",param_1,param_1,0);
  this_00 = FUN_102435f0((uint *)"DmeColorCorrectionOperatorList");
  this_00 = FUN_10268340(param_1,(uint *)"clientinsetx_override",0);
  this_00 = FUN_1039d560(param_1,(uint *)"Waypoints",0);
  this_00 = FUN_1039d560(param_1,(uint *)"clientinsetx_override",0);
  this_00 = FUN_1042ee30(param_1,(uint *)"DefaultButtonSize",0);
  this_00 = FUN_1042ee30(param_1,(uint *)"Waypoints",0);
  this_00 = FUN_1042ee30(param_1,(uint *)"clientinsetx_override",0);
  this_01 = FUN_1042ee30(this_00,(uint *)"Gears",0);
  uVar1 = (*(code *)PTR_FUN_10418d00)("VGUI_InputInternal001",0);
  uVar1 = (**(code **)(*(int *)(*(int *)(param_1 + 0x290) + 4) + 0x84))("anim_attachment_RH");
  uVar1 = (**(code **)(*(int *)(*(int *)(param_1 + 0x290) + 4) + 0x84))("bone_Chest");
  uVar1 = (**(code **)(*(int *)(*(int *)(param_1 + 0x290) + 4) + 0x84))("bone_Groin");
  uVar1 = (**(code **)(*(int *)(*(int *)(param_1 + 0x290) + 4) + 0x84))("bone_Head");
  uVar1 = (**(code **)(*(int *)(*(int *)(param_1 + 0x290) + 4) + 0x84))("bone_L_Arm");
  uVar1 = (**(code **)(*(int *)(*(int *)(param_1 + 0x290) + 4) + 0x84))("bone_L_Leg");
  uVar1 = (**(code **)(*(int *)(*(int *)(param_1 + 0x290) + 4) + 0x84))("bone_R_Arm");
  uVar1 = (**(code **)(*(int *)(*(int *)(param_1 + 0x290) + 4) + 0x84))("bone_R_Leg");
  uVar1 = (**(code **)(*(int *)(*(int *)(param_1 + 0x290) + 4) + 0x84))("bone_Stomach");
  uVar1 = (**(code **)(**(int **)(param_1 + 200) + 4))("DynamicModels",0x800,1,1,0);
  uVar1 = (**(code **)(**(int **)(param_1 + 200) + 4))("decalprecache",0x200,1,2,1);
  uVar1 = (**(code **)(**(int **)(param_1 + 200) + 4))("downloadables",0x2000,0,0,1);
  uVar1 = (**(code **)(**(int **)(param_1 + 200) + 4))("genericprecache",0x200,1,2,1);
  uVar1 = (**(code **)(**(int **)(param_1 + 200) + 4))("instancebaseline",0x400,0,0,0);
  uVar1 = (**(code **)(**(int **)(param_1 + 200) + 4))("lightstyles",0x40,0,0,0);
  uVar1 = (**(code **)(**(int **)(param_1 + 200) + 4))("modelprecache",0x2000,1,2,1);
  uVar1 = (**(code **)(**(int **)(param_1 + 200) + 4))("soundprecache",0x2000,1,2,1);
  uVar1 = (**(code **)(**(int **)(param_1 + 200) + 4))("userinfo",0x40,0,0,0);
  uVar1 = (**(code **)(*DAT_106466d0 + 0xc))(param_1 + -0xc,"player_hurt",1);
  uVar1 = (**(code **)(*DAT_106466d0 + 4))("resource/hltvevents.res");
  uVar1 = (**(code **)(*DAT_106cb86c + 0x18))("resource/icon_folder",0);
  uVar1 = (**(code **)(*DAT_106cb86c + 0x18))("resource/icon_folder_selected",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/crossbow_bolt.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/gib-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/gib-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/gib-3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/gib-4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/gib-5.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/server_black_gib-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/server_black_gib-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/server_black_gib-3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/server_black_gib-4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/server_white_gib-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/server_white_gib-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/server_white_gib-3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_electronics/server_white_gib-4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_glass_shards/mirror_shard-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_glass_shards/mirror_shard-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_glass_shards/mirror_shard-3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_glass_shards/shard-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_glass_shards/shard-1_small.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_glass_shards/shard-5.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_glass_shards/shard-5_small.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_glass_shards/shard-9.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_glass_shards/shard-9_small.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/cosmetics/gib-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/cosmetics/gib-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/cosmetics/gib-3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/cosmetics/gib-4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/cosmetics/gib-5.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/cosmetics/gib-6.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/display_case-3_gib.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/display_case-4_gib.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/gib-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/gib-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/gib-3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/gib-4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/gib-5.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/gib-6.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/gib-7.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/glasses/glasses_gib-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/glasses/glasses_gib-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/glasses/glasses_gib-3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/glasses/glasses_gib-4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/glasses/glasses_gib-5.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/necklace_rack-1_gib.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/necklace_stand-1_gib.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/necklace_stand-3_gib.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/watches/watch_gib-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/watches/watch_gib-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/watches/watch_gib-3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_jewelery/watches/watch_gib-4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/bowl_gib1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/bowl_gib2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/bowl_gib3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/bowl_gib4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/bowl_gib5.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/cup_gib1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/cup_gib2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/cup_gib3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/cup_gib4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/cup_glass_gib1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/cup_glass_gib2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/cup_glass_gib3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/cup_glass_gib4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/dish_gib1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/dish_gib2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/dish_gib3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/dish_gib4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/gib_cutlery-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_kitchen/gib_cutlery-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_store/mannequin_gib1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_store/mannequin_gib3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_store/mannequin_gib_black1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_store/mannequin_gib_black3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_store/mannequin_gib_small1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_store/mannequin_gib_small1_BLACK.mdl",0)
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_store/mannequin_gib_small2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/props_store/mannequin_gib_small2_BLACK.mdl",0)
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/shells/pistol_shell.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/shells/rifle_shell.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/shells/shotgun_shell.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/vehicles/cars/sheet_metal/shard-1.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/vehicles/cars/sheet_metal/shard-2.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/vehicles/cars/sheet_metal/shard-3.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/vehicles/cars/sheet_metal/shard-4.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("models/vehicles/cars/sheet_metal/shard-5.mdl",0);
  uVar1 = (**(code **)(*DAT_10730cc4 + 0x38))("sprites/animglow01.vmt",0);
  uVar1 = (**(code **)(*DAT_10730d00 + 0xc))(param_1 + 4,"server_spawn",0);
  uVar1 = (**(code **)(*DAT_107c09d0 + 0x44))("r_drawbrushmodels");
  uVar1 = (**(code **)(*DAT_107c09d0 + 0x44))("r_drawentities");
  uVar1 = (**(code **)(*DAT_107c0a04 + 0x150))("models/object_hint","Model textures",1,0);
  uVar1 = (**(code **)(*DAT_107c0a04 + 0x150))(param_1,"Other textures",1,0);
  uVar1 = (**(code **)(*DAT_107c0a7c + 0x14))("SourceScheme");
  uVar1 = (**(code **)(*DAT_107c0a7c + 0x14))("basemodui_scheme");
  uVar1 = (**(code **)(*DAT_107c0a7c + 0x18))("avatar_default_64_ct",0);
  uVar1 = (**(code **)(*DAT_107c0a7c + 0x18))("avatar_default_64_ter",0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$BLOOMCOORDS",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$MotionBlurInternal",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$MotionBlurViewportInternal",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$basetexture",(int)&param_1 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$bloomAmount",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$bloomEnable",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$c0_x",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$colCorrectEnable",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$colCorrect_DefaultWeight",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$colCorrect_LookupWeights",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$colCorrect_NumLookups",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$entityorigin",(int)&param_1 + 3,1);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$fade",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$fadeColor",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$fadeToBlackScale",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$light_color",0,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$light_position",0,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$localContrastVignetteEnd",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$localContrastVignetteStart",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$refractamount",(int)&param_1 + 3,1);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$vomitColor1",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$vomitColor2",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$vomitEnable",(int)&uStack8 + 3,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$world_maxs",0,0);
  uVar1 = (**(code **)(*param_1 + 0x2c))("$world_mins",0,0);
  uVar1 = (**(code **)(*param_1 + 0x33c))("prepend","#TextEntry_PrependText","prepend",this,0);
  uVar1 = (**(code **)(*param_1 + 0xc))("ChatText",0);
  uVar1 = (**(code **)(*param_1 + 0xc))("DebugFixed",0);
  uVar1 = (**(code **)(*param_1 + 0xc))("Default",0);
  uVar1 = (**(code **)(*param_1 + 0xc))("DefaultFixed",0);
  uVar1 = (**(code **)(*param_1 + 0xc))("DefaultFixedOutline",0);
  uVar1 = (**(code **)(*param_1 + 0xc))("DefaultFixedOutline",1);
  uVar1 = (**(code **)(*param_1 + 0xc))("DefaultSmall",1);
  uVar1 = (**(code **)(*param_1 + 0xc))("DefaultVerySmall",0);
  uVar1 = (**(code **)(*param_1 + 0xc))("NewGameChapter",1);
  uVar1 = (**(code **)(*param_1 + 0xc))("Normal_Small",1);
  uVar1 = (**(code **)(*param_1 + 8))("NoBorder");
  uVar1 = (**(code **)(*param_1 + 8))("ToolTipBorder");
  uVar1 = (**(code **)(*piVar4 + 0xc))("-dumpvidmemstats",0);
  uVar1 = (*local_8)("VCLIENTENGINETOOLS001",0);
  uVar1 = DevMsg(1,"CDummyMaterialProxy::Init( material = \"%s\" )\n",uVar1);
  uVar1 = FUN_00401c70('\0',3,(byte *)"FileSystem_GetBaseDir failed.");
  uVar1 = FUN_0041e3a0(param_1,(byte *)"WIN32");
  uVar1 = FUN_004285ff(param_1,(int)"%i %i %i %i");
  uVar1 = FUN_10007f03(param_1,(int)"%i %i %i %i");
  uVar1 = FUN_10061a10(*(void **)(param_1 + 0x290),(byte *)"ValveBiped.Bip01_Head1");
  uVar1 = FUN_10061a10(*(void **)(param_1 + 0x290),(byte *)"ValveBiped.Bip01_L_Foot");
  uVar1 = FUN_10061a10(*(void **)(param_1 + 0x290),(byte *)"ValveBiped.Bip01_L_Hand");
  uVar1 = FUN_10061a10(*(void **)(param_1 + 0x290),(byte *)"ValveBiped.Bip01_Pelvis");
  uVar1 = FUN_10061a10(*(void **)(param_1 + 0x290),(byte *)"ValveBiped.Bip01_R_Foot");
  uVar1 = FUN_10061a10(*(void **)(param_1 + 0x290),(byte *)"ValveBiped.Bip01_R_Hand");
  uVar1 = FUN_10061a10(*(void **)(param_1 + 0x290),(byte *)"ValveBiped.Bip01_Spine2");
  uVar1 = FUN_10077120("CAI_BaseNPC",(uint)PTR_s__Schedule_SCHED_IDLE_STAND_Tasks_10592394,
  uVar1 = FUN_100e3540(param_1 + 1,(int)"demoheader.tmp",'\0','\0');
  uVar1 = FUN_10104e40((void *)((int)this + 0xc),param_1,param_2,(uint *)"multiplier",
  uVar1 = FUN_10104e40((void *)((int)this + 0xc),param_1,param_2,(uint *)"scale",(byte *)0x3f800000)
  uVar1 = FUN_10137dc0(param_1,(byte *)"classname",(char *)local_1004);
  uVar1 = FUN_1013ae50(param_1,(byte *)"classname",(char *)local_1004);
  uVar1 = FUN_10165590((void *)((int)this + -0x4f0),(uint *)"onlaunch",(byte *)"spin_zaxis");
  uVar1 = FUN_10165590(this,(uint *)"onfirstimpact",(byte *)"alienbloodsplat");
  uVar1 = FUN_10165590(this,(uint *)"onfirstimpact",(byte *)"break");
  uVar1 = FUN_10165590(this,(uint *)"onfirstimpact",(byte *)"paintsplat");
  uVar1 = FUN_10227600(param_1,uVar1,"VTOOLFRAMEWORKVERSION002");
  uVar1 = FUN_10228160(param_1,"engine_mapkit.dll");
  uVar1 = FUN_10265ef0((byte *)"modelprecache",param_1);
  uVar1 = FUN_10265ef0(pbVar2,(byte *)"localhost");
  uVar1 = FUN_10265f50(&DAT_10680c58,(byte *)"infested");
  uVar1 = FUN_10265f50(&DAT_106a60a0,(byte *)"infested");
  uVar1 = FUN_10265f50((byte *)"BlendFactorUpdate",param_1);
  uVar1 = FUN_10265f50((byte *)"EnableColorCorrection",param_1);
  uVar1 = FUN_10265f50((byte *)"PickHSV",param_1);
  uVar1 = FUN_10265f50((byte *)"PickRGB",param_1);
  uVar1 = FUN_10265f50((byte *)"ToggleSelection",param_1);
  uVar1 = FUN_10265f50((byte *)"cstrike",DAT_106829b8);
  uVar1 = FUN_10265f50((byte *)param_1[0x103],(byte *)"internal");
  uVar1 = FUN_10265f50(DAT_106829b8,(byte *)"cstrike");
  uVar1 = FUN_10265f50(local_100c,(byte *)"VERSION");
  uVar1 = FUN_10265f50(param_1,(byte *)"ButtonClicked");
  uVar1 = FUN_10265f50(param_1,(byte *)"Cancel");
  uVar1 = FUN_10265f50(param_1,(byte *)"Close");
  uVar1 = FUN_10265f50(param_1,(byte *)"CloseModal");
  uVar1 = FUN_10265f50(param_1,(byte *)"Create");
  uVar1 = FUN_10265f50(param_1,(byte *)"INETSUPPORT_001");
  uVar1 = FUN_10265f50(param_1,(byte *)"Minimize");
  uVar1 = FUN_10265f50(param_1,(byte *)"MinimizeToSysTray");
  uVar1 = FUN_10265f50(param_1,(byte *)"ShowContextMenu");
  uVar1 = FUN_10265f50(param_1,(byte *)"StepBack");
  uVar1 = FUN_10265f50(param_1,(byte *)"StepForward");
  uVar1 = FUN_10265f50(param_1,(byte *)"VCvarQuery001");
  uVar1 = FUN_10265f50(param_1,(byte *)"VFileSystem017");
  uVar1 = FUN_10265f50(param_1,(byte *)"WIN32");
  uVar1 = FUN_10265f50(param_1,(byte *)"__DEMOMESSAGE__");
  uVar1 = FUN_10265f50(param_1,(byte *)"__NETMESSAGE__2");
  uVar1 = FUN_10265f50(param_1,(byte *)"__NETMESSAGE__3");
  uVar1 = FUN_10265f50(param_1,(byte *)"__NETMESSAGE__4");
  uVar1 = FUN_10265f50(param_1,(byte *)"__NETMESSAGE__5");
  uVar1 = FUN_10265f50(param_1,(byte *)"__NETMESSAGE__6");
  uVar1 = FUN_102687d0((void *)param_1[0x6c],(uint *)"SelectedImage",0);
  uVar1 = FUN_102687d0(*(void **)(param_1 + 0x168),(uint *)"tv_nochat",0);
  uVar1 = FUN_102687d0(*(void **)(param_1 + 0x168),(uint *)"voice_loopback",0);
  uVar1 = FUN_102687d0(*param_2,(uint *)"directory",0);
  uVar1 = FUN_102687d0(param_1,(uint *)"BindsFrame",0);
  uVar1 = FUN_102687d0(param_1,(uint *)"SubTabPosition",0);
  uVar1 = FUN_102687d0(param_1,(uint *)"TabPosition",0);
  uVar1 = FUN_102687d0(param_1,(uint *)"allowMouseWheel",1);
  uVar1 = FUN_102687d0(param_1,(uint *)"lastBarWidth",0);
  uVar1 = FUN_102687d0(param_1,(uint *)"nobuttons",0);
  uVar1 = FUN_102687d0(param_1,(uint *)"operationPerformed",0);
  uVar1 = FUN_102687d0(param_1,(uint *)"setChildPanelWidth",1);
  uVar1 = FUN_102687d0(param_1,(uint *)"showScrollBar",1);
  uVar1 = FUN_102687d0(param_2,(uint *)"Height",0);
  uVar1 = FUN_102687d0(param_2,(uint *)"Width",0);
  uVar1 = FUN_102687d0(this_01,(uint *)"members/numSlots",0xffffffff);
  uVar1 = FUN_10268930(param_1,(uint *)"border_override",0);
  uVar1 = FUN_10268930(param_1,(uint *)"leftText",0);
  uVar1 = FUN_1026e000(&DAT_106af84c,(byte *)"g_HunkMemoryStack",0x4000000,0x10000,0x2800000,0x10);
  uVar1 = FUN_102e6b40((uint *)"cfg\\videodefaults.txt","cfg\\video.txt");
  uVar1 = FUN_102f2265(param_1,(int)"%i %i %i %i");
  uVar1 = FUN_10314250(DAT_10693b08,(uint *)"mafia_mode");
  uVar1 = FUN_10314250(param_1,(uint *)"always_show_minimap");
  uVar1 = FUN_10399410(param_1,"worldspawn",10);
  uVar1 = FUN_103996b0(param_1,(byte *)"addon_baseshooter");
  uVar1 = FUN_10399710(&DAT_10646ab8,(byte *)"unknown");
  uVar1 = FUN_10399710((byte *)param_1,(byte *)"StartDisabled");
  uVar1 = FUN_10399710((byte *)param_1,(byte *)"startvalue");
  uVar1 = FUN_10399710((byte *)puVar2,(byte *)"!activator");
  uVar1 = FUN_10399710(param_1,(byte *)"!player");
  uVar1 = FUN_10399710(param_1,(byte *)"ALERT");
  uVar1 = FUN_10399710(param_1,(byte *)"ButtonClicked");
  uVar1 = FUN_10399710(param_1,(byte *)"COMBAT");
  uVar1 = FUN_10399710(param_1,(byte *)"COVER");
  uVar1 = FUN_10399710(param_1,(byte *)"CUSTOM1");
  uVar1 = FUN_10399710(param_1,(byte *)"CUSTOM2");
  uVar1 = FUN_10399710(param_1,(byte *)"CUSTOM3");
  uVar1 = FUN_10399710(param_1,(byte *)"CUSTOM4");
  uVar1 = FUN_10399710(param_1,(byte *)"Close");
  uVar1 = FUN_10399710(param_1,(byte *)"CloseModal");
  uVar1 = FUN_10399710(param_1,(byte *)"ENEMY");
  uVar1 = FUN_10399710(param_1,(byte *)"ENEMY_LKP");
  uVar1 = FUN_10399710(param_1,(byte *)"FLINCHED");
  uVar1 = FUN_10399710(param_1,(byte *)"INCOVER");
  uVar1 = FUN_10399710(param_1,(byte *)"LOCKED_HINT");
  uVar1 = FUN_10399710(param_1,(byte *)"Minimize");
  uVar1 = FUN_10399710(param_1,(byte *)"MinimizeToSysTray");
  uVar1 = FUN_10399710(param_1,(byte *)"PATH_FAILED");
  uVar1 = FUN_10399710(param_1,(byte *)"PLAYDEAD");
  uVar1 = FUN_10399710(param_1,(byte *)"PRONE");
  uVar1 = FUN_10399710(param_1,(byte *)"PROVOKED");
  uVar1 = FUN_10399710(param_1,(byte *)"SAVED_POSITION");
  uVar1 = FUN_10399710(param_1,(byte *)"SCRIPT");
  uVar1 = FUN_10399710(param_1,(byte *)"SUSPICIOUS");
  uVar1 = FUN_10399710(param_1,(byte *)"TARGET");
  uVar1 = FUN_10399710(param_1,(byte *)"TOURGUIDE");
  uVar1 = FUN_10399710(param_1,(byte *)"TRAVEL");
  uVar1 = FUN_10399710(param_1,(byte *)"TURNHACK");
  uVar1 = FUN_10399710(param_1,(byte *)"TURNING");
  uVar1 = FUN_10399710(param_1,(byte *)"WIN32");
  uVar1 = FUN_10399710(param_2,(byte *)"angle");
  uVar1 = FUN_10399710(param_2,(byte *)"cheap_ass_physics");
  uVar1 = FUN_10399710(param_2,(byte *)"explodeFX");
  uVar1 = FUN_10399710(param_2,(byte *)"explodeFX_offset");
  uVar1 = FUN_10399710(param_2,(byte *)"fadetime");
  uVar1 = FUN_10399710(param_2,(byte *)"glassbreak_height");
  uVar1 = FUN_10399710(param_2,(byte *)"glassbreak_is_mirror");
  uVar1 = FUN_10399710(param_2,(byte *)"glassbreak_width");
  uVar1 = FUN_10399710(param_2,(byte *)"health");
  uVar1 = FUN_10399710(param_2,(byte *)"model");
  uVar1 = FUN_10399710(param_2,(byte *)"motiondisabled");
  uVar1 = FUN_10399710(param_2,(byte *)"offset");
  uVar1 = FUN_10399710(param_2,(byte *)"ragdoll");
  uVar1 = FUN_10399710(pbVar2,(byte *)"move_keyframed");
  uVar1 = FUN_10399710(pbVar7,(byte *)"reload");
  uVar1 = FUN_1039d9a0((void *)param_1[0x6c],(uint *)"SelectedImage",0);
  uVar1 = FUN_1039d9a0(param_1,(uint *)"SubTabPosition",0);
  uVar1 = FUN_1039d9a0(param_1,(uint *)"TabPosition",0);
  uVar1 = FUN_1039d9a0(param_1,(uint *)"allowMouseWheel",1);
  uVar1 = FUN_1039d9a0(param_1,(uint *)"lastBarWidth",0);
  uVar1 = FUN_1039d9a0(param_1,(uint *)"nobuttons",0);
  uVar1 = FUN_1039d9a0(param_1,(uint *)"setChildPanelWidth",1);
  uVar1 = FUN_1039d9a0(param_1,(uint *)"showScrollBar",1);
  uVar1 = FUN_1039d9a0(param_1,(uint *)"squad",0xffffffff);
  uVar1 = FUN_1039d9a0(param_2,(uint *)"stationary",0);
  uVar1 = FUN_1039db00(param_1,(uint *)"border_override",0);
  uVar1 = FUN_1039db00(param_2,(uint *)"activity",(uint)"ACT_INVALID");
  uVar1 = FUN_1039db00(param_2,(uint *)"activityidle",(uint)"ACT_INVALID");
  uVar1 = FUN_103e82f0("GAMEDLL");
  uVar1 = FUN_103fd956(param_1,(int)"%i %i %i %i");
  uVar1 = FUN_1042df20((byte *)"scores",param_1);
  uVar1 = FUN_1042df80(&DAT_10769a68,(byte *)"unknown");
  uVar1 = FUN_1042df80((byte *)"#GameUI_Headphones",param_1);
  uVar1 = FUN_1042df80((byte *)"Cancel",param_1);
  uVar1 = FUN_1042df80((byte *)"PolygonButton",param_1);
  uVar1 = FUN_1042df80((byte *)param_1,(byte *)"fademaxdist");
  uVar1 = FUN_1042df80((byte *)param_1,(byte *)"hammerid");
  uVar1 = FUN_1042df80((byte *)param_1,(byte *)"health");
  uVar1 = FUN_1042df80((byte *)param_1,(byte *)"model");
  uVar1 = FUN_1042df80((byte *)param_1,(byte *)"neversolid");
  uVar1 = FUN_1042df80((byte *)param_1,(byte *)"physdamagescale");
  uVar1 = FUN_1042df80((byte *)param_1,(byte *)"scale");
  uVar1 = FUN_1042df80((byte *)param_1,(byte *)"sequence");
  uVar1 = FUN_1042df80((byte *)param_1,(byte *)"spawnflags");
  uVar1 = FUN_1042df80(param_1,(byte *)"#GameUI_Anisotropic16X");
  uVar1 = FUN_1042df80(param_1,(byte *)"#GameUI_Anisotropic2X");
  uVar1 = FUN_1042df80(param_1,(byte *)"#GameUI_Anisotropic4X");
  uVar1 = FUN_1042df80(param_1,(byte *)"#GameUI_Anisotropic8X");
  uVar1 = FUN_1042df80(param_1,(byte *)"#GameUI_Bilinear");
  uVar1 = FUN_1042df80(param_1,(byte *)"#GameUI_Trilinear");
  uVar1 = FUN_1042df80(param_1,(byte *)"ButtonClicked");
  uVar1 = FUN_1042df80(param_1,(byte *)"CPUDetailHigh");
  uVar1 = FUN_1042df80(param_1,(byte *)"CPUDetailLow");
  uVar1 = FUN_1042df80(param_1,(byte *)"CPUDetailMedium");
  uVar1 = FUN_1042df80(param_1,(byte *)"CSMQualityHigh");
  uVar1 = FUN_1042df80(param_1,(byte *)"CSMQualityLow");
  uVar1 = FUN_1042df80(param_1,(byte *)"CSMQualityMedium");
  uVar1 = FUN_1042df80(param_1,(byte *)"CSMQualityVeryLow");
  uVar1 = FUN_1042df80(param_1,(byte *)"Cancel");
  uVar1 = FUN_1042df80(param_1,(byte *)"Center");
  uVar1 = FUN_1042df80(param_1,(byte *)"Close");
  uVar1 = FUN_1042df80(param_1,(byte *)"CloseModal");
  uVar1 = FUN_1042df80(param_1,(byte *)"Extend");
  uVar1 = FUN_1042df80(param_1,(byte *)"Minimize");
  uVar1 = FUN_1042df80(param_1,(byte *)"MinimizeToSysTray");
  uVar1 = FUN_1042df80(param_1,(byte *)"ModelDetailHigh");
  uVar1 = FUN_1042df80(param_1,(byte *)"ModelDetailLow");
  uVar1 = FUN_1042df80(param_1,(byte *)"ModelDetailMedium");
  uVar1 = FUN_1042df80(param_1,(byte *)"North");
  uVar1 = FUN_1042df80(param_1,(byte *)"NorthEast");
  uVar1 = FUN_1042df80(param_1,(byte *)"NorthWest");
  uVar1 = FUN_1042df80(param_1,(byte *)"PagedPoolMemHigh");
  uVar1 = FUN_1042df80(param_1,(byte *)"PagedPoolMemLow");
  uVar1 = FUN_1042df80(param_1,(byte *)"PagedPoolMemMedium");
  uVar1 = FUN_1042df80(param_1,(byte *)"QueuedModeDisabled");
  uVar1 = FUN_1042df80(param_1,(byte *)"QueuedModeEnabled");
  uVar1 = FUN_1042df80(param_1,(byte *)"QuitRestartNoConfirm");
  uVar1 = FUN_1042df80(param_1,(byte *)"ShaderDetailHigh");
  uVar1 = FUN_1042df80(param_1,(byte *)"ShaderDetailLow");
  uVar1 = FUN_1042df80(param_1,(byte *)"ShaderDetailMedium");
  uVar1 = FUN_1042df80(param_1,(byte *)"ShaderDetailVeryHigh");
  uVar1 = FUN_1042df80(param_1,(byte *)"ShowContextMenu");
  uVar1 = FUN_1042df80(param_1,(byte *)"South");
  uVar1 = FUN_1042df80(param_1,(byte *)"SouthEast");
  uVar1 = FUN_1042df80(param_1,(byte *)"SouthWest");
  uVar1 = FUN_1042df80(param_1,(byte *)"Stage");
  uVar1 = FUN_1042df80(param_1,(byte *)"Submit");
  uVar1 = FUN_1042df80(param_1,(byte *)"Target1");
  uVar1 = FUN_1042df80(param_1,(byte *)"VSyncDisabled");
  uVar1 = FUN_1042df80(param_1,(byte *)"VSyncEnabled");
  uVar1 = FUN_1042df80(param_1,(byte *)"VSyncTripleBuffered");
  uVar1 = FUN_1042df80(param_1,(byte *)"WIN32");
  uVar1 = FUN_1042df80(param_1,(byte *)"angles");
  uVar1 = FUN_1042df80(param_1,(byte *)"localuser");
  uVar1 = FUN_1042df80(param_1,(byte *)"map_large");
  uVar1 = FUN_1042df80(param_1,(byte *)"map_normal");
  uVar1 = FUN_1042df80(param_1,(byte *)"map_off");
  uVar1 = FUN_1042df80(param_1,(byte *)"nextexplanation");
  uVar1 = FUN_1042df80(param_1,(byte *)"origin");
  uVar1 = FUN_1042df80(param_1,(byte *)"prevexplanation");
  uVar1 = FUN_1042df80(param_1,(byte *)"rendercolor");
  uVar1 = FUN_1042df80(param_1,(byte *)"specnext");
  uVar1 = FUN_1042df80(param_1,(byte *)"specprev");
  uVar1 = FUN_1042df80(param_1,(byte *)"targetname");
  uVar1 = FUN_1042df80(param_1,(byte *)"vguicancel");
  uVar1 = FUN_1042f270((void *)param_1[0x6c],(uint *)"SelectedImage",0);
  uVar1 = FUN_1042f270(*param_2,(uint *)"directory",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"AllowMultiSelect",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"GroupID",0xffffffff);
  uVar1 = FUN_1042f270(param_1,(uint *)"HaloIndex",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"ModelIndex",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"RadioGroup",0xffffffff);
  uVar1 = FUN_1042f270(param_1,(uint *)"StartSelected",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"SubTabPosition",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"TabPosition",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"allowMouseWheel",1);
  uVar1 = FUN_1042f270(param_1,(uint *)"beamEnts",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"beamFlags",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"beamType",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"bot_quota",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"color_b",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"color_g",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"color_r",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"current",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"dialogstyle",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"error",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"filter_number",*(uint *)((int)this + 0x530));
  uVar1 = FUN_1042f270(param_1,(uint *)"fixid",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"height",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"horizontal",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"lastBarWidth",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"nobuttons",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"num_columns",*(uint *)((int)this + 0x230));
  uVar1 = FUN_1042f270(param_1,(uint *)"playerIndex",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"scaleImage",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"scrollbar_spacing",2);
  uVar1 = FUN_1042f270(param_1,(uint *)"scrollbar_width",8);
  uVar1 = FUN_1042f270(param_1,(uint *)"setChildPanelWidth",1);
  uVar1 = FUN_1042f270(param_1,(uint *)"showScrollBar",1);
  uVar1 = FUN_1042f270(param_1,(uint *)"state",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"userid",0);
  uVar1 = FUN_1042f270(param_1,(uint *)"width",0);
  uVar1 = FUN_1042f270(param_2,(uint *)"stationary",0);
  uVar1 = FUN_1042f270(param_3,(uint *)"amount",0);
  uVar1 = FUN_1042f270(param_3,(uint *)"exponent",0);
  uVar1 = FUN_1042f270(param_3,(uint *)"hitbox",0);
  uVar1 = FUN_1042f270(param_3,(uint *)"surfacetype",0);
  uVar1 = FUN_1042f270(this,(uint *)"points",0);
  uVar1 = FUN_1042f270(this,(uint *)"score",0);
  uVar1 = FUN_1042f270(this_00,(uint *)"EngineForce",*(uint *)((int)this + 0x9bcc));
  uVar1 = FUN_1042f270(this_00,(uint *)"SkidTheta",*(uint *)((int)this + 0x9bd0));
  uVar1 = FUN_1042f270(this_00,(uint *)"SpedometerKPH",0);
  uVar1 = FUN_1042f270(this_00,(uint *)"SpedometerMax",0x96);
  uVar1 = FUN_1042f270(this_00,(uint *)"SpinModifier",*(uint *)((int)this + 0x9bd8));
  uVar1 = FUN_1042f270(this_00,(uint *)"SpringConstant",*(uint *)((int)this + 0x9bb8));
  uVar1 = FUN_1042f270(this_00,(uint *)"TachometerMax",5000);
  uVar1 = FUN_1042f270(this_00,(uint *)"WheelDamp",*(uint *)((int)this + 0x9bbc));
  uVar1 = FUN_1042f270(this_00,(uint *)"WheelFriction",*(uint *)((int)this + 0x9bc0));
  uVar1 = FUN_1042f270(this_00,(uint *)"WheelFrictionAngular",*(uint *)((int)this + 0x9bc4));
  uVar1 = FUN_1042f270(this_00,(uint *)"WheelRadius",*(uint *)((int)this + 0x9bb0));
  uVar1 = FUN_1042f270(this_00,(uint *)"WheelRadiusFlat",*(uint *)((int)this + 0x9bb4));
  uVar1 = FUN_1042f270(this_00,(uint *)"WheelTurnSpeed",*(uint *)((int)this + 0x9bc8));
  uVar1 = FUN_1042f3a0(param_1,(uint *)"options/asyncoperation",0);
  uVar1 = FUN_1042f3a0(param_1,(uint *)"options/waitscreencallback",0);
  uVar1 = FUN_1042f3d0(param_1,(uint *)"ActionSignal",(uint)"HorizontalListSelected");
  uVar1 = FUN_1042f3d0(param_1,(uint *)"border_override",0);
  uVar1 = FUN_1042f3d0(param_1,(uint *)"custom",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_1,(uint *)"fgcolor",(uint)"Label.TextColor");
  uVar1 = FUN_1042f3d0(param_1,(uint *)"leftText",0);
  uVar1 = FUN_1042f3d0(param_1,(uint *)"next_explanation",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_1,(uint *)"ruledata",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_2,(uint *)"TextureVar",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_2,(uint *)"activity",(uint)"ACT_INVALID");
  uVar1 = FUN_1042f3d0(param_2,(uint *)"activityidle",(uint)"ACT_INVALID");
  uVar1 = FUN_1042f3d0(param_2,(uint *)"animatedTextureVar",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_2,(uint *)"lessEqualVar",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_2,(uint *)"maskTextureVar",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_2,(uint *)"textureScrollVar",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_2,(uint *)"toggleTextureVar",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_2,(uint *)"vehicleGearVar",(uint)&DAT_104eefb3);
  uVar1 = FUN_1042f3d0(param_3,(uint *)"decalname",(uint)&DAT_104eefb3);
  uVar1 = FUN_10484700("CLIENT");
  uVar1 = FUN_104a8d56(param_1,(int)"%i %i %i %i");
  uVar1 = Msg((byte *)"done\n");
  uVar1 = Warning("*** Encountered VTF file with an invalid full header!\n");
  uVar1 = Warning("*** Error: Skybox vtf files for %s weren\'t compiled with the same size texture and/or same flags! (Error with: %s%s.vtf)\n"
  uVar10 = FUN_102687d0(local_8,(uint *)"SpecialTx",0);
  uVar10 = FUN_10269690(piVar9,(uint *)"scripts/bugreport_convars.txt",&DAT_10323b20,(int *)0x0);
  uVar10 = FUN_1039d9a0(this,(uint *)"fleck_amount",0);
  uVar10 = FUN_1039d9a0(this,(uint *)"liquid_amount",0);
  uVar10 = FUN_1039d9a0(this,(uint *)"spark_amount",0);
  uVar10 = FUN_1039d9a0(this,(uint *)"steam_amount",0);
  uVar10 = FUN_1042f270(this,(uint *)"liquid_colour_A",0);
  uVar11 = (**(code **)(*piVar10 + 0x20))("-startstage",0);
  uVar11 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01');
  uVar12 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_Civilian_Kill_Warning");
  uVar12 = FUN_10399820(param_1,param_2,param_3,(undefined (*) [16])"ent_fire");
  uVar13 = (**(code **)(*DAT_107c09f0 + 0x2c))("#KB_HitYouString",3,local_488,local_208,local_288);
  uVar13 = (**(code **)(*DAT_107c09f0 + 0x2c))("#KB_KilledString",1,local_488);
  uVar13 = (**(code **)(*DAT_107c09f0 + 0x2c))("#KB_KillerHealth",2,local_488,local_88);
  uVar13 = (**(code **)(*DAT_107c09f0 + 0x2c))("#KB_YouHitString",3,local_488,local_108,local_188);
  uVar13 = FUN_102687d0(param_1,(uint *)"pin_to_sibling_corner",0);
  uVar13 = FUN_10399820(param_1,param_2,param_3,(undefined (*) [16])"ent_fire");
  uVar13 = FUN_1039d9a0(param_1,(uint *)"pin_to_sibling_corner",0);
  uVar13 = FUN_1042f270(param_1,(uint *)"pin_to_sibling_corner",0);
  uVar2 = (**(code **)(*DAT_106466ac + 0x94))("disconnect\n");
  uVar2 = (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"game_init",1);
  uVar2 = (**(code **)(*DAT_106466d0 + 0xc))(iVar1,"player_connect",1);
  uVar2 = (**(code **)(*DAT_106cb86c + 0x18))("resource/icon_explore",0,0);
  uVar2 = (**(code **)(*DAT_106cb86c + 0x18))("resource/icon_file",0);
  uVar2 = (**(code **)(*DAT_106cb86c + 0x18))("resource/icon_folder",0);
  uVar2 = (**(code **)(*DAT_106cb86c + 0x18))("resource/icon_folder_selected",0);
  uVar2 = (**(code **)(*DAT_106cb86c + 0x18))("resource/icon_folderup",0,0);
  uVar2 = (**(code **)(*DAT_106cb86c + 0x18))("resource/icon_hlicon1",0);
  uVar2 = (**(code **)(*DAT_106cb86c + 0x18))("resource/icon_newfolder",0,0);
  uVar2 = (**(code **)(*DAT_106cb86c + 4))("resource/SourceScheme.res","SourceScheme");
  uVar2 = (**(code **)(*DAT_107c09d0 + 0x44))("cl_cmdrate");
  uVar2 = (**(code **)(*DAT_107c09d0 + 0x44))("cl_updaterate");
  uVar2 = (**(code **)(*DAT_107c0a04 + 0x150))("dev/blurfilterx_nohdr","Other textures",1,0);
  uVar2 = (**(code **)(*DAT_107c0a04 + 0x150))("effects/frontbuffer","Other textures",1,0);
  uVar2 = (**(code **)(*DAT_107c0a04 + 0x150))("vgui/callout_tail","Other textures",1,0,0);
  uVar2 = (**(code **)(*DAT_107c0a04 + 0x170))("_rt_DepthDoubler","RenderTargets",1,0);
  uVar2 = (**(code **)(*DAT_107c0a04 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
  uVar2 = (**(code **)(*DAT_107c0a7c + 0x14))("SourceScheme");
  uVar2 = (**(code **)(*DAT_107c0a7c + 0x14))("basemodui_scheme");
  uVar2 = (**(code **)(*DAT_107c0a7c + 0x18))("resource/icon_explore",0,0);
  uVar2 = (**(code **)(*DAT_107c0a7c + 0x18))("resource/icon_file",0);
  uVar2 = (**(code **)(*DAT_107c0a7c + 0x18))("resource/icon_folder",0);
  uVar2 = (**(code **)(*DAT_107c0a7c + 0x18))("resource/icon_folder_selected",0);
  uVar2 = (**(code **)(*DAT_107c0a7c + 0x18))("resource/icon_folderup",0,0);
  uVar2 = (**(code **)(*DAT_107c0a7c + 0x18))("resource/icon_newfolder",0,0);
  uVar2 = (**(code **)(*param_1 + 0x2c))("$CHEAPWATERSTARTDISTANCE",(int)&param_1 + 3,0);
  uVar2 = (**(code **)(*param_1 + 0x2c))("$alpha",(int)&param_1 + 3,1);
  uVar2 = (**(code **)(*param_1 + 0x2c))("$basetexture",(int)&param_1 + 3,0);
  uVar2 = (**(code **)(*param_1 + 0xc))("ConfirmationText",1);
  uVar2 = (**(code **)(*param_1 + 0xc))("ConsoleText",1);
  uVar2 = (**(code **)(*param_1 + 0xc))("DefaultFixed",0);
  uVar2 = (**(code **)(*param_1 + 0xc))("DefaultVerySmall",0);
  uVar2 = (**(code **)(*param_1 + 0xc))("GameUIButtons",0);
  uVar2 = (**(code **)(*param_1 + 0xc))("MainBold",0);
  uVar2 = (**(code **)(*param_1 + 8))("ButtonDepressedBorder");
  uVar2 = (**(code **)(*param_1 + 8))("InventoryShopItemBorder");
  uVar2 = (**(code **)(*piVar1 + 0x20))("-adapter",0);
  uVar2 = (**(code **)(*piVar1 + 0x2c))("$CHEAPWATERENDDISTANCE",(int)&param_1 + 3,0);
  uVar2 = (**(code **)(*piVar1 + 0x2c))("$maxfalloffamount",(int)&param_1 + 3,0);
  uVar2 = (**(code **)(*piVar1 + 0x2c))("-buildcubemaps");
  uVar2 = (**(code **)(*piVar1 + 0x2c))("-nogamestats");
  uVar2 = (**(code **)(*piVar1 + 0x2c))("-playtest");
  uVar2 = (**(code **)(*piVar1 + 0xc))("DefaultFixedOutline",0);
  uVar2 = (**(code **)(*piVar1 + 0xc))("InstructorKeyBindings",1);
  uVar2 = (**(code **)(*piVar1 + 0xc))("ScreenTitle",1);
  uVar2 = (**(code **)(*piVar1 + 4))("FooterPanel.ButtonFont");
  uVar2 = (**(code **)(*piVar1 + 4))("FooterPanel.TextFont");
  uVar2 = (**(code **)(*piVar1 + 4))("Frame.BottomBorderImage");
  uVar2 = (**(code **)(*piVar1 + 4))("Frame.TopBorderImage");
  uVar2 = (**(code **)(*piVar1 + 8))("ButtonBorder");
  uVar2 = (**(code **)(*piVar1 + 8))("ButtonDepressedBorder");
  uVar2 = (**(code **)(*piVar1 + 8))("ButtonKeyFocusBorder");
  uVar2 = (**(code **)(*piVar1 + 8))("DepressedButtonBorder");
  uVar2 = (**(code **)(*piVar3 + 0xc))("DefaultSmall",0);
  uVar2 = (**(code **)(*piVar3 + 0xc))("HUD_Notifications",1);
  uVar2 = (**(code **)(*piVar4 + 0xc))("Condensed_Medium",1);
  uVar2 = (**(code **)(*piVar6 + 0xc))("Marlett",0);
  uVar2 = (**(code **)(iVar1 + 0x14))("SourceScheme");
  uVar2 = (**(code **)(iVar1 + 0xc))("ladder");
  uVar2 = (**(code **)(iVar1 + 4))("ConfirmationDialog.TextFont",1);
  uVar2 = (**(code **)(iVar1 + 900))("gamepanel","PANEL_GAMEPANEL");
  uVar2 = (**(code **)(iVar1 + 900))("nav_progress","PANEL_NAV_PROGRESS");
  uVar2 = (**(code **)(iVar1 + 900))("plancreate","PANEL_PLANCREATION");
  uVar2 = (**(code **)(iVar1 + 900))("radialmenupanel","PANEL_RADIAL_MENU");
  uVar2 = (**(code **)(iVar1 + 900))("scores","PANEL_SCOREBOARD");
  uVar2 = (**(code **)(iVar1 + 900))("specgui","PANEL_SPECGUI");
  uVar2 = (**(code **)(iVar1 + 900))("voicecontrol","PANEL_VOICECONTROL");
  uVar2 = (**(code **)(iVar1 + 900))(&DAT_104fa2f8,"PANEL_TEAM");
  uVar2 = (**(code **)(iVar1 + 900))(&DAT_105435e4,"PANEL_INFO");
  uVar2 = (**(code **)(iVar4 + 0x84))("muzzle",&local_64,local_18);
  uVar2 = (**(code **)(param_1[1] + 0x84))("bomb_light1");
  uVar2 = (**(code **)(param_1[1] + 0x84))("vehicle_feet_passenger0");
  uVar2 = (**(code **)*param_1)("Connection to Lobby Lost");
  uVar2 = (***(code ***)PTR_DAT_10418bb8)(local_214,&DAT_10323770,"DEFAULT_WRITE_PATH");
  uVar2 = COM_TimestampedLog(" CBaseClient::ProcessClassInfo");
  uVar2 = DevMsg(2,"Attempting to find cover from best sound, but best sound not founc.\n");
  uVar2 = FUN_0041f130(param_2,"mode",0);
  uVar2 = FUN_100362c0(this,DAT_104271ec,&local_14,&local_1c,"DS_INTERLEAVED",0);
  uVar2 = FUN_1003ff90(*(void **)((int)this + 4),(int)"Changed behavior status");
  uVar2 = FUN_101a5ad0(1,(byte *)"ProcessClassInfo: can\'t allocate %d C_ServerClassInfos.\n");
  uVar2 = FUN_101f3700((int)this,2,"usage: blind holdtime fadetime\n",(char *)0x0,(char *)0x0,
  uVar2 = FUN_10265ef0((byte *)"SliderMoved",pbVar1);
  uVar2 = FUN_10265ef0(local_53c,(byte *)"HL2DEMO");
  uVar2 = FUN_10265f50((byte *)"BlendFactorUpdate",param_1);
  uVar2 = FUN_10265f50((byte *)"OnNetLanConnectionlessPacket",pbVar1);
  uVar2 = FUN_10265f50((byte *)param_1,(byte *)"vaudio_speex");
  uVar2 = FUN_10265f50((byte *)param_1[0x103],(byte *)"disable");
  uVar2 = FUN_10265f50(DAT_106829b8,(byte *)"left4dead2");
  uVar2 = FUN_10265f50(param_1,(byte *)"Apply");
  uVar2 = FUN_10265f50(param_1,(byte *)"Cancel");
  uVar2 = FUN_10265f50(param_1,(byte *)"NewOperation");
  uVar2 = FUN_10265f50(param_1,(byte *)"Select");
  uVar2 = FUN_10265f50(param_3,(byte *)"keyvalues2_flat");
  uVar2 = FUN_10265f50(pbVar1,(byte *)"OnProfileDataLoaded");
  uVar2 = FUN_10265f50(pbVar1,(byte *)"playflush");
  uVar2 = FUN_102687d0(*(void **)(param_1 + 0x168),(uint *)"net_maxroutable",0x4b0);
  uVar2 = FUN_102687d0(*param_3,(uint *)"directory",0);
  uVar2 = FUN_102687d0(param_1,(uint *)"FFADE_IN",0);
  uVar2 = FUN_102687d0(param_1,(uint *)"FLICKER",0);
  uVar2 = FUN_102687d0(param_1,(uint *)"anim_framerate",100);
  uVar2 = FUN_102687d0(param_1,(uint *)"maxchars",0xffffffff);
  uVar2 = FUN_102687d0(param_1,(uint *)"scaleImage",0);
  uVar2 = FUN_102687d0(param_1,(uint *)"scrollbar",1);
  uVar2 = FUN_102687d0(param_1,(uint *)"settitlebarvisible",1);
  uVar2 = FUN_102687d0(param_1,(uint *)"skiptotick",0xffffffff);
  uVar2 = FUN_102687d0(param_1,(uint *)"spline",1);
  uVar2 = FUN_102687d0(param_1,(uint *)"stoptick",0xffffffff);
  uVar2 = FUN_102687d0(param_1,(uint *)"tileHorizontalOverride",0);
  uVar2 = FUN_102687d0(param_1,(uint *)"tileHorizontally",(uint)(uVar2 != 0));
  uVar2 = FUN_102687d0(param_1,(uint *)"tileImage",0);
  uVar2 = FUN_102687d0(param_1,(uint *)"tileVerticalOverride",0);
  uVar2 = FUN_102687d0(param_1,(uint *)"tileVertically",(uint)(*(char *)((int)this + 0x1ed) != '\0')
  uVar2 = FUN_102687d0(param_1,(uint *)"track",0xffffffff);
  uVar2 = FUN_102687d0(param_2,(uint *)"BindsFrame",0);
  uVar2 = FUN_10268900(param_1,(uint *)"newPanel",0);
  uVar2 = FUN_10268900(param_1,(uint *)"panel",0);
  uVar2 = FUN_10268930(param_1,(uint *)"commands",(uint)&DAT_103236cf);
  uVar2 = FUN_10268930(param_1,(uint *)"message",(uint)&DAT_103236cf);
  uVar2 = FUN_10268930(param_1,(uint *)"original",(uint)&DAT_103236cf);
  uVar2 = FUN_10268930(param_1,(uint *)"rightText",0);
  uVar2 = FUN_10268930(param_1,(uint *)"sound",(uint)&DAT_103236cf);
  uVar2 = FUN_10268930(this_00,(uint *)"textfile",0);
  uVar2 = FUN_10269690(piVar1,(uint *)"gameinfo.txt",0,(int *)0x0);
  uVar2 = FUN_102990b0((int)puVar1,(uint *)"vip_model");
  uVar2 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01');
  uVar2 = FUN_10314280(param_1,(uint *)"force_civillians",'\x01');
  uVar2 = FUN_103996b0((byte *)"player_hurt",pbVar1);
  uVar2 = FUN_10399710((byte *)param_1,(byte *)"SpotlightWidth");
  uVar2 = FUN_10399710((byte *)param_1,(byte *)"Stage");
  uVar2 = FUN_10399710((byte *)param_1,(byte *)"VIPMinDistance");
  uVar2 = FUN_10399710(param_1,(byte *)"!activator");
  uVar2 = FUN_10399710(param_1,(byte *)"!target1");
  uVar2 = FUN_10399710(param_1,(byte *)"Player");
  uVar2 = FUN_10399710(param_4,(byte *)"subject");
  uVar2 = FUN_10399710(pbVar1,(byte *)"VModEnable");
  uVar2 = FUN_10399710(pbVar4,(byte *)"!activator");
  uVar2 = FUN_1039d9a0(param_1,(uint *)"AllowFlipping",1);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"BuiltRightHanded",1);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"MeleeWeapon",0);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"RecoilSeed",0);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"anim_framerate",100);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"autoswitchfrom",1);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"autoswitchto",1);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"bucket",0);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"bucket_position",0);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"clip2_size",0xffffffff);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"clip_size",0xffffffff);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"default_clip",*(uint *)((int)this + 0x180));
  uVar2 = FUN_1039d9a0(param_1,(uint *)"default_clip2",*(uint *)((int)this + 0x184));
  uVar2 = FUN_1039d9a0(param_1,(uint *)"item_flags",8);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"maxchars",0xffffffff);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"rumble",0xffffffff);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"scaleImage",0);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"scrollbar",1);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"settitlebarvisible",1);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"showusagehint",0);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"tileHorizontalOverride",0);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"tileHorizontally",(uint)(uVar2 != 0));
  uVar2 = FUN_1039d9a0(param_1,(uint *)"tileImage",0);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"tileVerticalOverride",0);
  uVar2 = FUN_1039d9a0(param_1,(uint *)"tileVertically",(uint)(*(char *)((int)this + 0x1ed) != '\0')
  uVar2 = FUN_1039d9a0(param_1,(uint *)"weight",0);
  uVar2 = FUN_1039d9a0(pvVar5,(uint *)"Bullets",1);
  uVar2 = FUN_1039d9a0(pvVar5,(uint *)"NumClips",2);
  uVar2 = FUN_1039d9a0(this_00,(uint *)"EngineForce",*(uint *)((int)this + 0x15cc));
  uVar2 = FUN_1039d9a0(this_00,(uint *)"SkidTheta",*(uint *)((int)this + 0x15d0));
  uVar2 = FUN_1039d9a0(this_00,(uint *)"SpedometerKPH",0);
  uVar2 = FUN_1039d9a0(this_00,(uint *)"SpedometerMax",0x96);
  uVar2 = FUN_1039d9a0(this_00,(uint *)"SpinModifier",*(uint *)((int)this + 0x15d8));
  uVar2 = FUN_1039d9a0(this_00,(uint *)"SpringConstant",*(uint *)((int)this + 0x15b8));
  uVar2 = FUN_1039d9a0(this_00,(uint *)"TachometerMax",5000);
  uVar2 = FUN_1039d9a0(this_00,(uint *)"WheelDamp",*(uint *)((int)this + 0x15bc));
  uVar2 = FUN_1039d9a0(this_00,(uint *)"WheelFriction",*(uint *)((int)this + 0x15c0));
  uVar2 = FUN_1039d9a0(this_00,(uint *)"WheelFrictionAngular",*(uint *)((int)this + 0x15c4));
  uVar2 = FUN_1039d9a0(this_00,(uint *)"WheelRadius",*(uint *)((int)this + 0x15b0));
  uVar2 = FUN_1039d9a0(this_00,(uint *)"WheelRadiusFlat",*(uint *)((int)this + 0x15b4));
  uVar2 = FUN_1039d9a0(this_00,(uint *)"WheelTurnSpeed",*(uint *)((int)this + 0x15c8));
  uVar2 = FUN_1039dad0(param_1,(uint *)"newPanel",0);
  uVar2 = FUN_1039db00(param_1,(uint *)"anim_prefix",(uint)&DAT_1043677a);
  uVar2 = FUN_1039db00(param_1,(uint *)"original",(uint)&DAT_1043677a);
  uVar2 = FUN_1039db00(param_1,(uint *)"playermodel",(uint)&DAT_1043677a);
  uVar2 = FUN_1039db00(param_1,(uint *)"playermodelattachment",(uint)&DAT_1043677a);
  uVar2 = FUN_1039db00(param_1,(uint *)"printname",(uint)"!!! Missing printname on weapon");
  uVar2 = FUN_1039db00(param_1,(uint *)"viewmodel",(uint)&DAT_1043677a);
  uVar2 = FUN_1039db00(pvVar5,(uint *)"PlayerAnimationExtension",(uint)&DAT_105059b4);
  uVar2 = FUN_1039db00(this_00,(uint *)"textfile",0);
  uVar2 = FUN_1039e3f0(piVar1,(uint *)"scripts/points.txt",&DAT_1045b2f0,(int *)0x0);
  uVar2 = FUN_1042df20((byte *)"round_start",pbVar1);
  uVar2 = FUN_1042df20((byte *)"spec_target_updated",pbVar1);
  uVar2 = FUN_1042df20(pbVar1,(byte *)"game_newmap");
  uVar2 = FUN_1042df20(pbVar1,(byte *)"plans_loaded");
  uVar2 = FUN_1042df20(pbVar1,(byte *)"round_end");
  uVar2 = FUN_1042df80((byte *)"#GameUI_2Speakers",pbVar1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_4Speakers",pbVar1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_5Speakers",pbVar1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_Headphones",param_1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_High",pbVar1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_Low",pbVar1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_Medium",pbVar1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_Rate1",param_1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_Rate2",param_1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_Rate3",param_1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_Rate4",param_1);
  uVar2 = FUN_1042df80((byte *)"#GameUI_Rate5",param_1);
  uVar2 = FUN_1042df80((byte *)"#L4D360UI_AudioOptions_CaptionOff",pbVar1);
  uVar2 = FUN_1042df80((byte *)"#L4D360UI_AudioOptions_CaptionOn",pbVar1);
  uVar2 = FUN_1042df80((byte *)"#L4D360UI_AudioOptions_CaptionSubtitles",pbVar1);
  uVar2 = FUN_1042df80((byte *)"#Option_VM_LeftHand",param_1);
  uVar2 = FUN_1042df80((byte *)"#Option_VM_RightHand",param_1);
  uVar2 = FUN_1042df80((byte *)"BloodSplatter_Off",param_1);
  uVar2 = FUN_1042df80((byte *)"BloodSplatter_On",param_1);
  uVar2 = FUN_1042df80((byte *)"BtnSetupMicrophone",pbVar1);
  uVar2 = FUN_1042df80((byte *)"Cancel",param_1);
  uVar2 = FUN_1042df80((byte *)"LowViolence_Off",param_1);
  uVar2 = FUN_1042df80((byte *)"OnEngineDisconnectReason",pbVar1);
  uVar2 = FUN_1042df80((byte *)"OnEngineLevelLoadingFinished",pbVar1);
  uVar2 = FUN_1042df80((byte *)"OnEngineLevelLoadingSession",pbVar1);
  uVar2 = FUN_1042df80((byte *)"OnSysXUIEvent",pbVar1);
  uVar2 = FUN_1042df80((byte *)"ShowFPS_Off",param_1);
  uVar2 = FUN_1042df80((byte *)"ShowFPS_On",param_1);
  uVar2 = FUN_1042df80((byte *)"VoiceCommunicationDisabled",pbVar1);
  uVar2 = FUN_1042df80((byte *)"VoiceCommunicationOpenMic",pbVar1);
  uVar2 = FUN_1042df80((byte *)"VoiceCommunicationPushToTalk",pbVar1);
  uVar2 = FUN_1042df80((byte *)"changelevel",pbVar5);
  uVar2 = FUN_1042df80(local_84,(byte *)"COMBINE");
  uVar2 = FUN_1042df80(param_1,(byte *)"#GameUI_AspectNormal");
  uVar2 = FUN_1042df80(param_1,(byte *)"#L4D360UI_ColorMode_LCD");
  uVar2 = FUN_1042df80(param_1,(byte *)"#L4D360UI_ColorMode_Television");
  uVar2 = FUN_1042df80(param_1,(byte *)"#L4D360UI_SplitScreenDirection_Default");
  uVar2 = FUN_1042df80(param_1,(byte *)"Apply");
  uVar2 = FUN_1042df80(param_1,(byte *)"CallVote");
  uVar2 = FUN_1042df80(param_1,(byte *)"Cancel");
  uVar2 = FUN_1042df80(param_2,(byte *)"model");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"#GameUI_AspectWide16x10");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"#GameUI_AspectWide16x9");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"#GameUI_Fullscreen");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"#GameUI_RandomMap");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"#GameUI_Windowed");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"#L4D360UI_VideoOptions_Windowed_NoBorder");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"PowerSavingsDisabled");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"angle");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"cheap_ass_physics");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"explodeFX");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"explodeFX_offset");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"fadetime");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"glassbreak_height");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"glassbreak_is_mirror");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"glassbreak_width");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"motiondisabled");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"north");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"north-east");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"north-west");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"offset");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"ragdoll");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"round_pre_start");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"south");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"south-east");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"south-west");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"use_binding");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"vote_cast");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"vote_changed");
  uVar2 = FUN_1042df80(pbVar1,(byte *)"vote_options");
  uVar2 = FUN_1042f270(*param_3,(uint *)"directory",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"AllowEnter",1);
  uVar2 = FUN_1042f270(param_1,(uint *)"AllowFlipping",1);
  uVar2 = FUN_1042f270(param_1,(uint *)"Brightness",0xff);
  uVar2 = FUN_1042f270(param_1,(uint *)"BuiltRightHanded",1);
  uVar2 = FUN_1042f270(param_1,(uint *)"MeleeWeapon",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"RecoilSeed",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"RemoveAll",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"allow_rot",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"anim_framerate",100);
  uVar2 = FUN_1042f270(param_1,(uint *)"attribute",0xffffffff);
  uVar2 = FUN_1042f270(param_1,(uint *)"autoswitchfrom",1);
  uVar2 = FUN_1042f270(param_1,(uint *)"autoswitchto",1);
  uVar2 = FUN_1042f270(param_1,(uint *)"bottomPadding",*(uint *)((int)this + 0x1f8));
  uVar2 = FUN_1042f270(param_1,(uint *)"bucket",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"bucket_position",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"clip2_size",0xffffffff);
  uVar2 = FUN_1042f270(param_1,(uint *)"clip_size",0xffffffff);
  uVar2 = FUN_1042f270(param_1,(uint *)"default_clip",*(uint *)((int)this + 0x180));
  uVar2 = FUN_1042f270(param_1,(uint *)"default_clip2",*(uint *)((int)this + 0x184));
  uVar2 = FUN_1042f270(param_1,(uint *)"editormenu_onclose",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"entIndex",0xffffffff);
  uVar2 = FUN_1042f270(param_1,(uint *)"item_flags",8);
  uVar2 = FUN_1042f270(param_1,(uint *)"item_image",1);
  uVar2 = FUN_1042f270(param_1,(uint *)"letterbox",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"linespacing",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"maxchars",0xffffffff);
  uVar2 = FUN_1042f270(param_1,(uint *)"operation",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"rumble",0xffffffff);
  uVar2 = FUN_1042f270(param_1,(uint *)"scaleImage",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"scrollbar",1);
  uVar2 = FUN_1042f270(param_1,(uint *)"selected",0xffffffff);
  uVar2 = FUN_1042f270(param_1,(uint *)"settitlebarvisible",1);
  uVar2 = FUN_1042f270(param_1,(uint *)"showusagehint",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"tileHorizontalOverride",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"tileHorizontally",(uint)(uVar2 != 0));
  uVar2 = FUN_1042f270(param_1,(uint *)"tileImage",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"tileVerticalOverride",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"tileVertically",(uint)(*(char *)((int)this + 0x1ed) != '\0')
  uVar2 = FUN_1042f270(param_1,(uint *)"timezone_offset",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"total",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"weapon_slot",0);
  uVar2 = FUN_1042f270(param_1,(uint *)"weight",0);
  uVar2 = FUN_1042f270(param_2,(uint *)"overlayID",0);
  uVar2 = FUN_1042f270(param_2,(uint *)"textureFrame",0);
  uVar2 = FUN_1042f270(param_3,(uint *)"color",0);
  uVar2 = FUN_1042f270(param_3,(uint *)"framerate",0);
  uVar2 = FUN_1042f270(param_3,(uint *)"lightindex",0x10000000);
  uVar2 = FUN_1042f270(param_3,(uint *)"randomization",0);
  uVar2 = FUN_1042f270(param_3,(uint *)"speed",0);
  uVar2 = FUN_1042f270(pvVar5,(uint *)"Bullets",1);
  uVar2 = FUN_1042f270(pvVar5,(uint *)"NumClips",2);
  uVar2 = FUN_1042f270(pvVar9,(uint *)"dontnotify",0);
  uVar2 = FUN_1042f270(this_00,(uint *)"points",0);
  uVar2 = FUN_1042f270(this_00,(uint *)"score",0);
  uVar2 = FUN_1042f3a0(param_1,(uint *)"baseentity",(uint)&local_3c);
  uVar2 = FUN_1042f3a0(param_1,(uint *)"newPanel",0);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"anim_prefix",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"command",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"custom",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"original",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"playermodel",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"playermodelattachment",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"printname",(uint)"!!! Missing printname on weapon");
  uVar2 = FUN_1042f3d0(param_1,(uint *)"rightText",0);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"secondary_stat",0);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"toggle",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_1,(uint *)"viewmodel",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_2,(uint *)"textureScrollVar",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_3,(uint *)"decalname",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(param_3,(uint *)"surfaceprop",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(pvVar5,(uint *)"PlayerAnimationExtension",(uint)&DAT_10593770);
  uVar2 = FUN_1042f3d0(this,(uint *)"mapname",(uint)&DAT_104eefb3);
  uVar2 = FUN_1042f3d0(this_00,(uint *)"textfile",0);
  uVar2 = Msg("CBaseDemoAction::Init:  must specify a name for action!\n");
  uVar2 = Msg("DS::Lock Sound Buffer Failed %s\n",param_4);
  uVar2 = V_tier0_stricmp(pbVar1,(byte *)"AuthenticAMD");
  uVar2 = V_tier0_stricmp(pbVar1,(byte *)"GenuineIntel");
  uVar2 = Warning("Bad field type\n");
  uVar2 = Warning("COM_BufferToBufferDecompress with improperly sized dest buffer (%u in, %u needed)\n"
  uVar2 = Warning("Response was entityio but had bad value %s\n",param_1);
  uVar2 = Warning("Warning! Can\'t specify mins/maxs for point entities! (%s)\n",puVar3);
  uVar3 = (**(code **)(*DAT_106cb7f4 + 0x150))("debug/debugportals","Other textures",1,0);
  uVar3 = (**(code **)(*DAT_107c0a7c + 0x14))("SourceScheme");
  uVar3 = (**(code **)(*param_1 + 0x1c))("damagebits",0);
  uVar3 = (**(code **)(*param_1 + 0x28))("sound",&DAT_104eefb3);
  uVar3 = (**(code **)(*param_1 + 0xc))("FriendsListSmall",1);
  uVar3 = (**(code **)(*param_1 + 4))("SectionedListPanel.Font");
  uVar3 = (**(code **)(*param_1 + 8))("GenericPanelListBorder");
  uVar3 = (**(code **)(*piVar1 + 0x20))("+port",uVar3);
  uVar3 = (**(code **)(*piVar1 + 0x20))("-port",uVar3);
  uVar3 = (**(code **)(*piVar1 + 0xc))("GameUIButtonsMini",1);
  uVar3 = (**(code **)(*piVar1 + 0xc))("Marlett",param_2);
  uVar3 = (**(code **)(*piVar1 + 0xc))("MarlettLarge",1);
  uVar3 = (**(code **)(*piVar1 + 8))("ButtonDepressedBorder");
  uVar3 = (**(code **)(*piVar1 + 8))("TitleButtonBorder");
  uVar3 = (**(code **)(*piVar1 + 8))("TitleButtonDepressedBorder");
  uVar3 = (**(code **)(*piVar1 + 8))("TitleButtonDisabledBorder");
  uVar3 = (**(code **)(*piVar2 + 0xc))("Default",0);
  uVar3 = (**(code **)(*piVar2 + 0xc))("Marlett",0);
  uVar3 = (**(code **)(*piVar2 + 0xc))("NewGameChapterName",1);
  uVar3 = (**(code **)(*piVar2 + 8))("ButtonBorder");
  uVar3 = (**(code **)(*piVar2 + 8))("ButtonDepressedBorder");
  uVar3 = (**(code **)(*piVar2 + 8))("DepressedButtonBorder");
  uVar3 = (**(code **)(*piVar6 + 0xc))("playerIndex",1);
  uVar3 = (**(code **)(iVar6 + 4))("Dialog.ButtonFont",1);
  uVar3 = (**(code **)(iVar6 + 4))("Dialog.TitleFont",1);
  uVar3 = (**(code **)(iVar8 + 0xc))("Default",uVar2);
  uVar3 = (**(code **)(param_1[1] + 0x84))("bomb_light2");
  uVar3 = FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Adding Ticket %d to pending list\n");
  uVar3 = FUN_0041f130(param_2,"WeaponFilters",0);
  uVar3 = FUN_0041f130(param_2,"bots",0);
  uVar3 = FUN_0041f130(param_2,"cyclemaps",0);
  uVar3 = FUN_0041f130(param_2,"ff",0);
  uVar3 = FUN_0041f130(param_2,"flags",0);
  uVar3 = FUN_0041f130(param_2,"maxplayers",0);
  uVar3 = FUN_0041f130(param_2,"minplayers",0);
  uVar3 = FUN_0041f130(param_2,"sk",0);
  uVar3 = FUN_0041f250(param_2,"password",(uint)&DAT_0043b3d2);
  uVar3 = FUN_0041f250(param_2,"roomname",(uint)&DAT_0043b3d2);
  uVar3 = FUN_100612d0(param_1,"func_breakable");
  uVar3 = FUN_100612d0(param_1,"func_brush");
  uVar3 = FUN_100612d0(param_1,"func_door*");
  uVar3 = FUN_100612d0(param_1,"prop_door*");
  uVar3 = FUN_10104e40((void *)((int)this + 0x20),param_1,pbVar1,(uint *)"textureScale",
  uVar3 = FUN_10104e40((void *)((int)this + 0xc),param_1,pbVar1,(uint *)"angle",(byte *)0x0);
  uVar3 = FUN_101a5c10((byte *)"DataTable_ParseClientTablesFromBuffer failed.\n");
  uVar3 = FUN_101c67d0(param_1,"resource/subtitles_english.dat");
  uVar3 = FUN_101c8900(param_1,"sprites/car_blue");
  uVar3 = FUN_101c8900(param_1,"sprites/car_red");
  uVar3 = FUN_101c8900(param_1,"sprites/car_red_cb");
  uVar3 = FUN_101c8900(param_1,"sprites/player_blue_dead");
  uVar3 = FUN_101c8900(param_1,"sprites/player_blue_dead_offscreen");
  uVar3 = FUN_101c8900(param_1,"sprites/player_blue_offscreen");
  uVar3 = FUN_101c8900(param_1,"sprites/player_blue_self");
  uVar3 = FUN_101c8900(param_1,"sprites/player_blue_small");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_dead");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_dead_cb");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_dead_offscreen");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_dead_offscreen_cb");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_offscreen");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_offscreen_cb");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_self");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_self_cb");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_small");
  uVar3 = FUN_101c8900(param_1,"sprites/player_red_small_cb");
  uVar3 = FUN_101c8900(param_1,"sprites/player_tick");
  uVar3 = FUN_101c8900(param_1,"sprites/spectator_3rdcam");
  uVar3 = FUN_101c8900(param_1,"sprites/spectator_eye");
  uVar3 = FUN_101c8900(param_1,"sprites/spectator_freecam");
  uVar3 = FUN_10265f50((byte *)"SliderMoved",pbVar2);
  uVar3 = FUN_10265f50((byte *)"loopback",pbVar2);
  uVar3 = FUN_10265f50((byte *)(param_1 + 0x14),(byte *)"beta-playtest");
  uVar3 = FUN_10265f50(param_1,(byte *)"Close");
  uVar3 = FUN_10265f50(param_1,(byte *)"Collapse");
  uVar3 = FUN_10265f50(param_1,(byte *)"CopyImg");
  uVar3 = FUN_10265f50(param_1,(byte *)"CopyTxt");
  uVar3 = FUN_10265f50(param_1,(byte *)"Exclude");
  uVar3 = FUN_10265f50(param_1,(byte *)"Explore");
  uVar3 = FUN_10265f50(param_1,(byte *)"FlashBtn");
  uVar3 = FUN_10265f50(param_1,(byte *)"Reload");
  uVar3 = FUN_10265f50(param_1,(byte *)"gamedescription");
  uVar3 = FUN_10265f50(param_1,(byte *)"mapcycle");
  uVar3 = FUN_10265f50(param_1,(byte *)"maxplayers");
  uVar3 = FUN_10265f50(param_1,(byte *)"playercount");
  uVar3 = FUN_10265f50(param_1,(byte *)"size-");
  uVar3 = FUN_10265f50(pbVar2,(byte *)"portal");
  uVar3 = FUN_10265f50(pbVar6,(byte *)"donotecho");
  uVar3 = FUN_102687d0(param_1,(uint *)"BindsMax",0);
  uVar3 = FUN_102687d0(param_1,(uint *)"FFADE_OUT",0);
  uVar3 = FUN_102687d0(param_1,(uint *)"WRITEOUT",0);
  uVar3 = FUN_102687d0(param_1,(uint *)"stayout",1);
  uVar3 = FUN_102687d0(param_1,(uint *)"thumbwidth",0);
  uVar3 = FUN_102687d0(this_00,(uint *)"default",0);
  uVar3 = FUN_102687d0(this_00,(uint *)"selected",0xffffffff);
  uVar3 = FUN_10268930(local_8,(uint *)"Build",(uint)&DAT_103236cf);
  uVar3 = FUN_10268930(local_8,(uint *)"Console",(uint)&DAT_103236cf);
  uVar3 = FUN_10268930(local_8,(uint *)"DriverInfo",(uint)&DAT_103236cf);
  uVar3 = FUN_10268930(local_8,(uint *)"Orientation",(uint)&DAT_103236cf);
  uVar3 = FUN_10268930(local_8,(uint *)"Position",(uint)&DAT_103236cf);
  uVar3 = FUN_10268930(param_1,(uint *)"changed",(uint)&DAT_103236cf);
  uVar3 = FUN_10268930(this,(uint *)"level",(uint)&DAT_103236cf);
  uVar3 = FUN_10268930(this_00,(uint *)"filter",(uint)&DAT_10324290);
  uVar3 = FUN_10269690(piVar2,(uint *)"gameinfo.txt",0,(int *)0x0);
  uVar3 = FUN_10269690(piVar2,(uint *)"scripts\\newbindings.txt",0,(int *)0x0);
  uVar3 = FUN_102990b0((int)puVar2,(uint *)"vip_model");
  uVar3 = FUN_102c09d0(DAT_107a27d0,(uint *)"spawn_in_cars",'\x01');
  uVar3 = FUN_102eb130((int)puVar2,(uint *)"vip_model");
  uVar3 = FUN_10314250(this,(uint *)"IgnoreSpawnOverrun");
  uVar3 = FUN_10314280(param_1,(uint *)"spawn_in_cars",'\x01');
  uVar3 = FUN_103996b0((byte *)"player_death",pbVar1);
  uVar3 = FUN_10399710(pbVar4,(byte *)"move_keyframed");
  uVar3 = FUN_10399710(pbVar9,(byte *)"spec_mode");
  uVar3 = FUN_10399710(pbVar9,(byte *)"spec_next");
  uVar3 = FUN_10399710(pbVar9,(byte *)"spectate");
  uVar3 = FUN_1039d9a0(param_1,(uint *)"Attributes",0);
  uVar3 = FUN_1039d9a0(this_00,(uint *)"default",0);
  uVar3 = FUN_1039d9a0(this_00,(uint *)"selected",0xffffffff);
  uVar3 = FUN_1039db00(param_1,(uint *)"changed",(uint)&DAT_1043677a);
  uVar3 = FUN_1039e3f0(piVar2,(uint *)"scripts/voicecommands.txt",&DAT_1045b2f0,(int *)0x0);
  uVar3 = FUN_1039e3f0(piVar8,(uint *)"scripts/propdata.txt",0,(int *)0x0);
  uVar3 = FUN_1042df20((byte *)"hltv_chat",pbVar2);
  uVar3 = FUN_1042df20((byte *)"player_death",pbVar2);
  uVar3 = FUN_1042df20((byte *)"round_start",pbVar2);
  uVar3 = FUN_1042df20(local_1810,(byte *)"prop_physics_clientside");
  uVar3 = FUN_1042df20(param_1,(byte *)"EditButtons");
  uVar3 = FUN_1042df20(pbVar2,(byte *)"gameui_hidden");
  uVar3 = FUN_1042df20(pbVar2,(byte *)"hltv_status");
  uVar3 = FUN_1042df80((byte *)"MouseYInvertEnabled",pbVar1);
  uVar3 = FUN_1042df80(param_1,(byte *)"BtnSpecCustom");
  uVar3 = FUN_1042df80(param_1,(byte *)"ToggleMute");
  uVar3 = FUN_1042df80(param_1,(byte *)"ViewProfile");
  uVar3 = FUN_1042df80(param_1,(byte *)"VoteKick");
  uVar3 = FUN_1042df80(param_1,(byte *)"burning_character_screen");
  uVar3 = FUN_1042df80(param_1,(byte *)"indicator_rescue");
  uVar3 = FUN_1042df80(pbVar2,(byte *)"player_death");
  uVar3 = FUN_1042df80(pbVar2,(byte *)"round_start");
  uVar3 = FUN_1042df80(pbVar7,(byte *)"initial");
  uVar3 = FUN_1042f270(param_1,(uint *)"DirectCommandTarget",0);
  uVar3 = FUN_1042f270(param_1,(uint *)"ExpandUp",0);
  uVar3 = FUN_1042f270(param_1,(uint *)"NoDrawPanel",0);
  uVar3 = FUN_1042f270(param_1,(uint *)"NoWrap",0);
  uVar3 = FUN_1042f270(param_1,(uint *)"OnlyActiveUser",0);
  uVar3 = FUN_1042f270(param_1,(uint *)"StandalonePositioning",0);
  uVar3 = FUN_1042f270(param_1,(uint *)"deaths",0);
  uVar3 = FUN_1042f270(param_1,(uint *)"item_image",1);
  uVar3 = FUN_1042f270(param_1,(uint *)"operation",0);
  uVar3 = FUN_1042f270(param_1,(uint *)"panelBorder",4);
  uVar3 = FUN_1042f270(param_1,(uint *)"pixelswide",0xf0);
  uVar3 = FUN_1042f270(param_1,(uint *)"thumbwidth",0);
  uVar3 = FUN_1042f270(param_3,(uint *)"breakmodel",0);
  uVar3 = FUN_1042f270(param_3,(uint *)"brightness",0);
  uVar3 = FUN_1042f270(param_3,(uint *)"count",0);
  uVar3 = FUN_1042f270(param_3,(uint *)"flags",0);
  uVar3 = FUN_1042f270(param_3,(uint *)"header",0);
  uVar3 = FUN_1042f270(this_00,(uint *)"default",0);
  uVar3 = FUN_1042f270(this_00,(uint *)"noblindnavigation",0);
  uVar3 = FUN_1042f270(this_00,(uint *)"selected",0xffffffff);
  uVar3 = FUN_1042f3d0(param_1,(uint *)"changed",(uint)&DAT_104eefb3);
  uVar3 = FUN_1042f3d0(param_1,(uint *)"label",(uint)&DAT_104eefb3);
  uVar3 = FUN_1042f3d0(param_1,(uint *)"msg_fallback",(uint)&DAT_104eefb3);
  uVar3 = FUN_1042f3d0(this_00,(uint *)"command",0);
  uVar3 = FUN_104300e0(piVar2,(uint *)"scripts/voicecommands.txt",&DAT_104eefa0,(int *)0x0);
  uVar3 = Msg("Unable to allocate %i bytes for image\n",iVar1 * iVar2 * 3);
  uVar3 = Msg("unknown type %d in ProcessSceneEvent()\n",uVar2);
  uVar3 = Warning("CEntityMapData::GetNextKey: EOF without closing brace\n");
  uVar3 = Warning("System (%s) failed during stage %s\n",pcVar2,PTR_s_CONNECTION_00447044);
  uVar3 = Warning("System (%s) failed during stage %s\n",pcVar2,PTR_s_CONNECTION_10419410);
  uVar3 = Warning("Unable to load interface %s from %s, requested from EXE.\n",param_1[1],*param_1);
  uVar3 = Warning("vgui_controls is missing a required interface!\n");
  uVar4 = (**(code **)(*(int *)((int)param_1 + 4) + 0x84))("goggles");
  uVar4 = (**(code **)(*(int *)((int)param_1 + 4) + 0x84))("view_origin");
  uVar4 = (**(code **)(*(int *)((int)param_1 + 4) + 0x84))("view_origin2");
  uVar4 = (**(code **)(*DAT_106cb7f4 + 0x150))("engine/writestencil","Other textures",1,0);
  uVar4 = (**(code **)(*DAT_10730d00 + 0xc))(puVar1,"game_newmap",0);
  uVar4 = (**(code **)(*DAT_107c0a04 + 0x150))(pcVar8,"VGUI textures",1,0);
  uVar4 = (**(code **)(*param_1 + 0x1c))("assister",0);
  uVar4 = (**(code **)(*param_1 + 0x1c))("attacker",0);
  uVar4 = (**(code **)(*param_1 + 0x1c))("userid",0);
  uVar4 = (**(code **)(*param_1 + 0xc))("GameUIButtons",0);
  uVar4 = (**(code **)(*piVar1 + 0x20))("+clientport",uVar3);
  uVar4 = (**(code **)(*piVar1 + 0x20))("+hostport",uVar3);
  uVar4 = (**(code **)(*piVar2 + 0x24))("-defaultgamedir","tacint");
  uVar4 = (**(code **)(*piVar2 + 0xc))("DefaultSystemUI",1);
  uVar4 = (**(code **)(*piVar2 + 0xc))("Normal_Smaller",1);
  uVar4 = (**(code **)(*piVar2 + 0xc))("TipKeyFont",0);
  uVar4 = (**(code **)(*piVar2 + 8))("ButtonDepressedBorder");
  uVar4 = (**(code **)(*piVar2 + 8))("MenuBorder");
  uVar4 = (**(code **)(*piVar2 + 8))("TabActiveBorder");
  uVar4 = (**(code **)(*piVar2 + 8))("TabBorder");
  uVar4 = (**(code **)(*piVar3 + 0x20))("-freq",iStack8);
  uVar4 = (**(code **)(*piVar3 + 0x20))("-refresh",uVar4);
  uVar4 = (**(code **)(*piVar3 + 0xc))("ChatText",0);
  uVar4 = (**(code **)(*piVar3 + 8))("ButtonBorder");
  uVar4 = (**(code **)(*piVar6 + 0xc))("playerIndex",1);
  uVar4 = (**(code **)(iVar1 + 4))("SteamCloudText.Font",1);
  uVar4 = (**(code **)(iVar2 + 0xc))("Default",uVar3);
  uVar4 = (**(code **)(iVar2 + 0xc))("DefaultSmall",uVar3);
  uVar4 = (**(code **)(iVar2 + 0xc))("DefaultUnderline",uVar3);
  uVar4 = (**(code **)(iVar5 + 0x14))("SourceScheme");
  uVar4 = ETWBegin("CBaseViewport::ReloadScheme");
  uVar4 = ETWBegin("CHostState::State_NewGame");
  uVar4 = FUN_0041f130(this_00,"xbox",0);
  uVar4 = FUN_0041f380(param_2,"mapid",0);
  uVar4 = FUN_0041f9d0((uint *)"reslists",local_68[0],0,0,(int *)0x0);
  uVar4 = FUN_0041ff00(piVar3,(uint *)"scripts/items/attributes.res",&DAT_0043b3fc,(int *)0x0);
  uVar4 = FUN_101c7240(this,"Action.Error",0,0);
  uVar4 = FUN_101c8900(param_1,"sprites/player_blue_dead");
  uVar4 = FUN_101c8900(param_1,"sprites/player_blue_dead_offscreen");
  uVar4 = FUN_101c8900(param_1,"sprites/player_blue_offscreen");
  uVar4 = FUN_101c8900(param_1,"sprites/player_blue_small");
  uVar4 = FUN_102659a0(local_408,(byte *)"TimeUseTick");
  uVar4 = FUN_10265f50((byte *)"SliderMoved",pbVar3);
  uVar4 = FUN_10265f50((byte *)param_1,(byte *)"cancel");
  uVar4 = FUN_10265f50(pbVar3,(byte *)"banip");
  uVar4 = FUN_10265f50(pbVar3,(byte *)"north-west");
  uVar4 = FUN_102687d0(param_1,(uint *)"Expand",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"FFADE_MODULATE",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"PanelPtr",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"allcaps",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"auto_shrink_contents",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"auto_tall_tocontents",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"auto_wide_minimum",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"auto_wide_tocontents",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"autocolor_enable",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"centerwrap",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"droppable",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"dulltext",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"noellipses",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"noshortcutsyntax",0);
  uVar4 = FUN_102687d0(param_1,(uint *)"textinsetx",*(uint *)((int)this + 0x214));
  uVar4 = FUN_102687d0(param_2,(uint *)"BindsMax",0);
  uVar4 = FUN_102687d0(this,(uint *)"PanelPtr",0);
  uVar4 = FUN_102687d0(this,(uint *)"Width",0);
  uVar4 = FUN_10268930(this,(uint *)"TexGroup",(uint)&DAT_103236cf);
  uVar4 = FUN_10269690(piVar3,(uint *)"gameinfo.txt",0,(int *)0x0);
  uVar4 = FUN_1026cbd0(param_1,(byte *)"<!-- DMXVersion","-->",param_5,param_6);
  uVar4 = FUN_1026cbd0(param_1,(byte *)"<!-- dmx","-->",&local_b0,0xa8);
  uVar4 = FUN_102f2265(local_210,(int)"%i %i %i %i");
  uVar4 = FUN_103991e0((char *)param_1,".wav");
  uVar4 = FUN_103996b0((byte *)"player_footstep",pbVar3);
  uVar4 = FUN_103996b0((byte *)"round_start",pbVar1);
  uVar4 = FUN_10399710((byte *)"!player",param_1);
  uVar4 = FUN_10399710((byte *)param_1,(byte *)"Breakable");
  uVar4 = FUN_10399710(pbVar3,(byte *)"north-west");
  uVar4 = FUN_1039c1a0(param_1,(byte *)"<!-- DMXVersion","-->",param_5,param_6);
  uVar4 = FUN_1039c1a0(param_1,(byte *)"<!-- dmx","-->",&local_b0,0xa8);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"Expand",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"allcaps",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"auto_shrink_contents",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"auto_tall_tocontents",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"auto_wide_minimum",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"auto_wide_tocontents",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"autocolor_enable",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"centerwrap",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"droppable",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"dulltext",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"noellipses",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"noshortcutsyntax",0);
  uVar4 = FUN_1039d9a0(param_1,(uint *)"textinsetx",*(uint *)((int)this + 0x214));
  uVar4 = FUN_1039d9a0(puVar7,(uint *)"Health",*(uint *)((int)this + 0x4fc));
  uVar4 = FUN_1039d9a0(puVar7,(uint *)"numSlots",0);
  uVar4 = FUN_1042df20((byte *)"plr_hitoutput",pbVar3);
  uVar4 = FUN_1042df20(pbVar1,(byte *)"BalanceTeams");
  uVar4 = FUN_1042df20(pbVar1,(byte *)"Controller");
  uVar4 = FUN_1042df20(pbVar3,(byte *)"gameinstructor_draw");
  uVar4 = FUN_1042df20(pbVar3,(byte *)"plans_loaded");
  uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"$alpha");
  uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"health");
  uVar4 = FUN_1042df80((byte *)puVar1,(byte *)"rendercolor");
  uVar4 = FUN_1042df80(param_1,(byte *)"Submit");
  uVar4 = FUN_1042df80(param_1,(byte *)"burning_engine");
  uVar4 = FUN_1042df80(param_1,(byte *)"molotov_groundfire");
  uVar4 = FUN_1042df80(pbVar1,(byte *)"ReturnToGame");
  uVar4 = FUN_1042df80(pbVar3,(byte *)"north-west");
  uVar4 = FUN_1042f270(param_1,(uint *)"Expand",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"allcaps",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"auto_shrink_contents",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"auto_tall_tocontents",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"auto_wide_minimum",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"auto_wide_tocontents",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"autocolor_enable",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"centerwrap",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"droppable",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"dulltext",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"friend_iconsize_x",0x37);
  uVar4 = FUN_1042f270(param_1,(uint *)"friend_iconsize_y",0x22);
  uVar4 = FUN_1042f270(param_1,(uint *)"friend_indent_x",0x16);
  uVar4 = FUN_1042f270(param_1,(uint *)"friend_indent_y",1);
  uVar4 = FUN_1042f270(param_1,(uint *)"level",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"noellipses",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"noshortcutsyntax",0);
  uVar4 = FUN_1042f270(param_1,(uint *)"pixelshigh",0xa0);
  uVar4 = FUN_1042f270(param_1,(uint *)"scaleImage",1);
  uVar4 = FUN_1042f270(param_1,(uint *)"textinsetx",*(uint *)((int)this + 0x214));
  uVar4 = FUN_1042f270(param_3,(uint *)"effects",0);
  uVar4 = FUN_1042f270(param_3,(uint *)"flags",0);
  uVar4 = FUN_1042f270(param_3,(uint *)"materialtype",0);
  uVar4 = FUN_1042f3d0(param_2,(uint *)"Material",(uint)&DAT_104eefb3);
  uVar4 = FUN_104300e0(piVar3,(uint *)"scripts/extras.txt",&DAT_104eefa0,(int *)0x0);
  uVar4 = FUN_104300e0(piVar3,(uint *)"scripts/hudanimations_manifest.txt",&DAT_104eefa0,(int *)0x0)
  uVar4 = FUN_104300e0(piVar3,(uint *)"splitscreen_config.txt",&DAT_10515278,(int *)0x0);
  uVar4 = FUN_104300e0(piVar3,(uint *)"steam/games/PlatformMenu.vdf","PLATFORM",(int *)0x0);
  uVar4 = FUN_10431960(param_2,(uint *)"playerIndex",param_1);
  uVar4 = FUN_10436070(param_1,(byte *)"<!-- DMXVersion","-->",param_5,param_6);
  uVar4 = FUN_10436070(param_1,(byte *)"<!-- dmx","-->",&local_b0,0xa8);
  uVar4 = FUN_104d8750(param_1,"GAME",'\x01',&local_c);
  uVar4 = Msg("Unable to set SetActiveChannel to user in slot %d\n",*(undefined4 *)(param_1 + 0x10))
  uVar4 = Msg((byte *)"done\n");
  uVar5 = (*(code *)puVar10)("VENGINE_DEDICATEDEXPORTS_API_VERSION003",0,ppuVar6,uVar3,ppuVar7,uVar9
  uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#SB_DEATHS",1,local_108);
  uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#SB_EXP",1,local_108);
  uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#SB_KILLS",1,local_108);
  uVar5 = (**(code **)(*DAT_107c09f0 + 0x2c))("#SB_PING",1,local_108);
  uVar5 = (**(code **)(*DAT_107c0a04 + 0x170))(puVar7,"Model textures",0,0);
  uVar5 = (**(code **)(*param_1 + 0x1c))("userid",0);
  uVar5 = (**(code **)(*param_1 + 8))("ButtonBorder");
  uVar5 = (**(code **)(*param_1 + 8))("ButtonDepressedBorder");
  uVar5 = (**(code **)(*piVar1 + 0xc))("UI_ChatInput",1);
  uVar5 = (**(code **)(*piVar2 + 8))("ButtonDepressedBorder");
  uVar5 = (**(code **)(*piVar3 + 0x328))("Open VMT",puVar4,param_1,0);
  uVar5 = (**(code **)(*piVar3 + 8))("ButtonDepressedBorder");
  uVar5 = (**(code **)(*piVar4 + 0x14))(uVar2,uVar3,"SteamUser018");
  uVar5 = (**(code **)(*piVar4 + 0xc))("HUD_Notifications",1);
  uVar5 = (**(code **)(*piVar4 + 0xc))("Normal_ExtraLarge",1);
  uVar5 = (**(code **)(*piVar8 + 8))("ScrollBarButtonBorder");
  uVar5 = (**(code **)(iVar1 + 0xc))("Default",uVar3);
  uVar5 = (**(code **)(iVar1 + 0xc))("Marlett",uVar3);
  uVar5 = (**(code **)(iVar2 + 0xc))("Default",uVar4);
  uVar5 = (**(code **)(iVar2 + 0xc))("DefaultVerySmall",uVar3);
  uVar5 = (**(code **)(iVar2 + 0xc))("Marlett",uVar4);
  uVar5 = (**(code **)(param_1[1] + 0x84))("muzzle_flash");
  uVar5 = FUN_004062b0(param_1,"sourcevr.dll");
  uVar5 = FUN_004062b0(param_1,"vstdlib.dll");
  uVar5 = FUN_0041ff00(piVar4,(uint *)"scripts/items/item_manifest.res",&DAT_0043b3fc,(int *)0x0);
  uVar5 = FUN_100362c0(this,DAT_104271ec,&param_1,&local_10,"DS_STEREO",0);
  uVar5 = FUN_10265f50(&DAT_106a61a8,(byte *)"infested");
  uVar5 = FUN_10265f50(param_1,(byte *)"noscreenshot");
  uVar5 = FUN_10265f50(param_1,(byte *)"screenshot");
  uVar5 = FUN_102687d0(*ppuVar3,(uint *)"image",0);
  uVar5 = FUN_102687d0(param_1,(uint *)"DisableSelectionColor",0);
  uVar5 = FUN_102687d0(param_1,(uint *)"FFADE_STAYOUT",0);
  uVar5 = FUN_102687d0(param_1,(uint *)"NumericInputOnly",0);
  uVar5 = FUN_102687d0(param_1,(uint *)"catchEnter",0);
  uVar5 = FUN_102687d0(param_1,(uint *)"editable",1);
  uVar5 = FUN_102687d0(param_1,(uint *)"maxchars",0xffffffff);
  uVar5 = FUN_102687d0(param_1,(uint *)"multiline",0);
  uVar5 = FUN_102687d0(param_1,(uint *)"showTabs",(uint)(*(char *)((int)this + 0x220) != '\0'));
  uVar5 = FUN_102687d0(param_1,(uint *)"smallTabs",(uint)(cVar2 != '\0'));
  uVar5 = FUN_102687d0(param_1,(uint *)"textHidden",0);
  uVar5 = FUN_102687d0(param_1,(uint *)"unicode",0);
  uVar5 = FUN_102687d0(param_3,(uint *)"PanelPtr",0);
  uVar5 = FUN_10268930(param_1,(uint *)"tabFont",(uint)"Default");
  uVar5 = FUN_10268930(param_1,(uint *)"tabFontSmall",(uint)"DefaultSmall");
  uVar5 = FUN_10299070(puVar4,(uint *)"night_map");
  uVar5 = FUN_102c09a0(DAT_107a27d0,(uint *)"mafia_mode");
  uVar5 = FUN_102c09d0(DAT_107a27d0,(uint *)"vip_splitsquad",'\x01');
  uVar5 = FUN_103996b0((byte *)"round_end",pbVar1);
  uVar5 = FUN_1039d9a0(*ppuVar3,(uint *)"image",0);
  uVar5 = FUN_1039d9a0(param_1,(uint *)"DisableSelectionColor",0);
  uVar5 = FUN_1039d9a0(param_1,(uint *)"NumericInputOnly",0);
  uVar5 = FUN_1039d9a0(param_1,(uint *)"catchEnter",0);
  uVar5 = FUN_1039d9a0(param_1,(uint *)"editable",1);
  uVar5 = FUN_1039d9a0(param_1,(uint *)"maxchars",0xffffffff);
  uVar5 = FUN_1039d9a0(param_1,(uint *)"multiline",0);
  uVar5 = FUN_1039d9a0(param_1,(uint *)"textHidden",0);
  uVar5 = FUN_1039d9a0(param_1,(uint *)"unicode",0);
  uVar5 = FUN_1039d9a0(this,(uint *)"liquid_colour_A",0);
  uVar5 = FUN_1039d9a0(this,(uint *)"liquid_colour_B",0);
  uVar5 = FUN_1039d9a0(this,(uint *)"liquid_colour_G",0);
  uVar5 = FUN_1039d9a0(this,(uint *)"liquid_colour_R",0);
  uVar5 = FUN_1042df80(pbVar1,(byte *)"BtnQuickMatch");
  uVar5 = FUN_1042f270(*ppuVar3,(uint *)"image",0);
  uVar5 = FUN_1042f270(param_1,(uint *)"DisableSelectionColor",0);
  uVar5 = FUN_1042f270(param_1,(uint *)"NumericInputOnly",0);
  uVar5 = FUN_1042f270(param_1,(uint *)"catchEnter",0);
  uVar5 = FUN_1042f270(param_1,(uint *)"editable",1);
  uVar5 = FUN_1042f270(param_1,(uint *)"maxchars",0xffffffff);
  uVar5 = FUN_1042f270(param_1,(uint *)"multiline",0);
  uVar5 = FUN_1042f270(param_1,(uint *)"requiresplayer",0);
  uVar5 = FUN_1042f270(param_1,(uint *)"score",0);
  uVar5 = FUN_1042f270(param_1,(uint *)"showTabs",(uint)(*(char *)((int)this + 0x220) != '\0'));
  uVar5 = FUN_1042f270(param_1,(uint *)"smallTabs",(uint)(cVar2 != '\0'));
  uVar5 = FUN_1042f270(param_1,(uint *)"textHidden",0);
  uVar5 = FUN_1042f270(param_1,(uint *)"titlepage",0);
  uVar5 = FUN_1042f270(param_1,(uint *)"unicode",0);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_allow_grenades",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_allow_machine_guns",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_allow_pistols",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_allow_rifles",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_allow_rogues",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_allow_shotguns",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_allow_snipers",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_allow_sub_machine_guns",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_defer_to_human",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"bot_join_after_player",1);
  uVar5 = FUN_1042f270(param_3,(uint *)"header",0);
  uVar5 = FUN_1042f270(param_3,(uint *)"radius",0);
  uVar5 = FUN_1042f270(puVar10,(uint *)"HUD_IconType",0);
  uVar5 = FUN_1042f270(pvVar2,(uint *)"inverseFill",0);
  uVar5 = FUN_1042f3d0(param_1,(uint *)"label",(uint)&DAT_104eefb3);
  uVar5 = FUN_1042f3d0(param_1,(uint *)"tabFont",(uint)"Default");
  uVar5 = FUN_1042f3d0(param_1,(uint *)"tabFontSmall",(uint)"DefaultSmall");
  uVar5 = FUN_1042f3d0(param_1,(uint *)"title",(uint)&DAT_104eefb3);
  uVar5 = FUN_1042f3d0(param_2,(uint *)"EndAttachment",(uint)&DAT_104eefb3);
  uVar5 = FUN_1042f3d0(param_3,(uint *)"align",(uint)&DAT_10526d38);
  uVar5 = FUN_1042f3d0(pvVar2,(uint *)"conCommand",0);
  uVar5 = FUN_1042f3d0(pvVar2,(uint *)"conCommandDefault",0);
  uVar5 = FUN_1042f3d0(this_00,(uint *)"header_fgcolor",(uint)"Label.TextColor");
  uVar5 = FUN_1042f3d0(this_00,(uint *)"issue_fgcolor",(uint)"Label.TextColor");
  uVar5 = FUN_1042f3d0(this_00,(uint *)"issue_fgcolor_disabled",(uint)"Label.TextColor");
  uVar5 = FUN_104300e0(piVar11,(uint *)"scripts/propdata.txt",0,(int *)0x0);
  uVar5 = Msg("Expecting \'{\', got \'%s\'",&DAT_107973a0);
  uVar6 = (**(code **)(*(int *)pcVar2 + 8))("FrameBorder");
  uVar6 = (**(code **)(*DAT_107c09f0 + 0x2c))("#TI_KillStreak",1,local_a8);
  uVar6 = (**(code **)(*DAT_107c09f0 + 0x2c))("#Voice");
  uVar6 = (**(code **)(*DAT_107c0a04 + 0x150))("debug/debugspritewireframe","Other textures",1,0);
  uVar6 = (**(code **)(*DAT_107c0a04 + 0x150))(puVar5,"Other textures",1,0);
  uVar6 = (**(code **)(*param_1 + 0x2c))("$basetexture",(int)&uStack8 + 3,0);
  uVar6 = (**(code **)(*param_1 + 0xc))("DebugScaled_Small",0);
  uVar6 = (**(code **)(*piVar3 + 8))("ButtonDepressedBorder");
  uVar6 = (**(code **)(*piVar3 + 8))("ScrollBarButtonBorder");
  uVar6 = (**(code **)(*piVar3 + 8))("ScrollBarButtonDepressedBorder");
  uVar6 = (**(code **)(iVar2 + 0xc))("Default",uVar4);
  uVar6 = (**(code **)(iVar2 + 0xc))("Marlett",uVar5);
  uVar6 = (**(code **)(iVar5 + 0xc))("ConsoleText",uVar3);
  uVar6 = FUN_1004a460(this,&local_14,0,0,0,0xffffffff,0.0,"BaseCombatWeapon_HideThink");
  uVar6 = FUN_10051510(param_1,(byte *)"prop_physics_override");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"Breachable");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"angle");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"angles");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"disableflashlight");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"disablereceiveshadows");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"disableshadowdepth");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"nodamageforces");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"origin");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"shadowdepthnocache");
  uVar6 = FUN_100845f0((byte *)param_1,(byte *)"targetname");
  uVar6 = FUN_100d26f0(this,"");
  uVar6 = FUN_102687d0(local_30,(uint *)"SpecialTx",0);
  uVar6 = FUN_102687d0(param_1,(uint *)"AutoResize",0);
  uVar6 = FUN_102687d0(param_1,(uint *)"FFADE_PURGE",0);
  uVar6 = FUN_102687d0(this,(uint *)"Height",0);
  uVar6 = FUN_10268930(this_00,(uint *)"TexGroup",(uint)&DAT_103236cf);
  uVar6 = FUN_10314280(piVar12,(uint *)"ct_heli_insert",'\x01');
  uVar6 = FUN_103991e0((char *)pauVar1,".wav");
  uVar6 = FUN_103996b0((byte *)_Str1,(byte *)"grenade_40mm");
  uVar6 = FUN_103996b0((byte *)_Str1,(byte *)"grenade_projectile");
  uVar6 = FUN_103996b0((byte *)_Str1,(byte *)"rpg_rocket");
  uVar6 = FUN_10399710((byte *)param_1,(byte *)"SmokeMaterial");
  uVar6 = FUN_10399710((byte *)param_1,(byte *)"WindAngle");
  uVar6 = FUN_10399710((byte *)param_1,(byte *)"WindSpeed");
  uVar6 = FUN_1039d9a0(param_1,(uint *)"AutoResize",0);
  uVar6 = FUN_1042df20((byte *)"player_changename",pbVar5);
  uVar6 = FUN_1042df20((byte *)"player_connect",pbVar5);
  uVar6 = FUN_1042df20((byte *)"player_disconnect",pbVar5);
  uVar6 = FUN_1042df20((byte *)"player_fullyjoined",pbVar5);
  uVar6 = FUN_1042df20((byte *)"player_team",pbVar5);
  uVar6 = FUN_1042df20((byte *)"teamplay_broadcast_audio",pbVar5);
  uVar6 = FUN_1042df80(local_a04,(byte *)"scores");
  uVar6 = FUN_1042f270(param_1,(uint *)"AutoResize",0);
  uVar6 = FUN_1042f270(param_1,(uint *)"kills",0);
  uVar6 = FUN_1042f270(this,(uint *)"fleck_amount",0);
  uVar6 = FUN_1042f270(this,(uint *)"liquid_amount",0);
  uVar6 = FUN_1042f270(this,(uint *)"liquid_colour_R",0);
  uVar6 = FUN_1042f270(this,(uint *)"spark_amount",0);
  uVar6 = FUN_1042f270(this,(uint *)"steam_amount",0);
  uVar6 = FUN_1042f270(this_00,(uint *)"pos_x",0);
  uVar6 = FUN_1042f270(this_00,(uint *)"pos_y",0);
  uVar6 = FUN_1042f270(this_00,(uint *)"rotate",0);
  uVar6 = FUN_1042f3d0(this_00,(uint *)"material",(uint)&DAT_104eefb3);
  uVar6 = Warning("** Encountered stale cubemap! Please rebuild the following vtf:\n");
  uVar7 = (**(code **)(*DAT_106cb7f4 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
  uVar7 = (**(code **)(*DAT_107c09f0 + 0x2c))("#GameUI_vote_header",1,local_41c);
  uVar7 = COM_TimestampedLog("Host_ReadPreStartupConfiguration - Finish");
  uVar7 = FUN_1023edf0(param_1,"GAME",'\x01',&local_14);
  uVar7 = FUN_10265ef0(pbVar6,(byte *)"[$&*,`]");
  uVar7 = FUN_10265f50(param_1,(byte *)"banlist");
  uVar7 = FUN_10265f50(param_1,(byte *)"ipaddress");
  uVar7 = FUN_10265f50(param_1,(byte *)"mapcycle");
  uVar7 = FUN_10265f50(param_1,(byte *)"maplist");
  uVar7 = FUN_10265f50(param_1,(byte *)"playerlist");
  uVar7 = FUN_10265f50(param_1,(byte *)"quick");
  uVar7 = FUN_10265f50(param_1,(byte *)"stats");
  uVar7 = FUN_10265f50(param_1,(byte *)"uptime");
  uVar7 = FUN_102687d0(param_1,(uint *)"ForceStereoRenderToFrameBuffer",0);
  uVar7 = FUN_102687d0(param_1,(uint *)"IgnoreScheme",0);
  uVar7 = FUN_102687d0(param_1,(uint *)"PinCorner",4);
  uVar7 = FUN_102687d0(param_1,(uint *)"RoundedCorners",0xffffffff);
  uVar7 = FUN_102687d0(param_1,(uint *)"draw_corner_height",0);
  uVar7 = FUN_102687d0(param_1,(uint *)"draw_corner_width",0);
  uVar7 = FUN_102687d0(param_1,(uint *)"enabled",1);
  uVar7 = FUN_102687d0(param_1,(uint *)"paintbackground",0xffffffff);
  uVar7 = FUN_102687d0(param_1,(uint *)"paintbackgroundtype",0xffffffff);
  uVar7 = FUN_102687d0(param_1,(uint *)"paintborder",0xffffffff);
  uVar7 = FUN_102687d0(param_1,(uint *)"pin_corner_to_sibling",0);
  uVar7 = FUN_102687d0(param_1,(uint *)"proportionalToParent",0);
  uVar7 = FUN_102687d0(param_1,(uint *)"src_corner_height",0);
  uVar7 = FUN_102687d0(param_1,(uint *)"src_corner_width",0);
  uVar7 = FUN_102687d0(param_1,(uint *)"tabPosition",0);
  uVar7 = FUN_102687d0(param_1,(uint *)"usekbinput",(uint)(cVar4 != '\0'));
  uVar7 = FUN_102687d0(param_1,(uint *)"usemouseinput",(uint)(cVar4 != '\0'));
  uVar7 = FUN_102687d0(param_1,(uint *)"visible",1);
  uVar7 = FUN_10268930(param_1,(uint *)"image",(uint)&DAT_103236cf);
  uVar7 = FUN_102c09a0(DAT_107a27d0,(uint *)"mafia_mode");
  uVar7 = FUN_102c09d0(DAT_107a27d0,(uint *)"assign_bomb",'\x01');
  uVar7 = FUN_102c09d0(DAT_107a27d0,(uint *)"vip_splitsquad",'\x01');
  uVar7 = FUN_1039d9a0(param_1,(uint *)"ForceStereoRenderToFrameBuffer",0);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"IgnoreScheme",0);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"PinCorner",4);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"RoundedCorners",0xffffffff);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"draw_corner_height",0);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"draw_corner_width",0);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"enabled",1);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"paintbackground",0xffffffff);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"paintbackgroundtype",0xffffffff);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"paintborder",0xffffffff);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"pin_corner_to_sibling",0);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"proportionalToParent",0);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"src_corner_height",0);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"src_corner_width",0);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"tabPosition",0);
  uVar7 = FUN_1039d9a0(param_1,(uint *)"usekbinput",(uint)(cVar4 != '\0'));
  uVar7 = FUN_1039d9a0(param_1,(uint *)"usemouseinput",(uint)(cVar4 != '\0'));
  uVar7 = FUN_1039d9a0(param_1,(uint *)"visible",1);
  uVar7 = FUN_1039db00(param_1,(uint *)"image",(uint)&DAT_1043677a);
  uVar7 = FUN_1042df20(pbVar14,(byte *)"StatsAndAchievements");
  uVar7 = FUN_1042f270(*(void **)((int)this + 0x40f4),(uint *)"pos_x",0);
  uVar7 = FUN_1042f270(*(void **)((int)this + 0x40f4),(uint *)"pos_y",0);
  uVar7 = FUN_1042f270(*(void **)((int)this + 0x40f4),(uint *)"rotate",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"ForceStereoRenderToFrameBuffer",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"IgnoreScheme",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"PinCorner",4);
  uVar7 = FUN_1042f270(param_1,(uint *)"RoundedCorners",0xffffffff);
  uVar7 = FUN_1042f270(param_1,(uint *)"draw_corner_height",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"draw_corner_width",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"enabled",1);
  uVar7 = FUN_1042f270(param_1,(uint *)"paintbackground",0xffffffff);
  uVar7 = FUN_1042f270(param_1,(uint *)"paintbackgroundtype",0xffffffff);
  uVar7 = FUN_1042f270(param_1,(uint *)"paintborder",0xffffffff);
  uVar7 = FUN_1042f270(param_1,(uint *)"pin_corner_to_sibling",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"proportionalToParent",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"src_corner_height",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"src_corner_width",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"tabPosition",0);
  uVar7 = FUN_1042f270(param_1,(uint *)"usekbinput",(uint)(cVar4 != '\0'));
  uVar7 = FUN_1042f270(param_1,(uint *)"usemouseinput",(uint)(cVar4 != '\0'));
  uVar7 = FUN_1042f270(param_1,(uint *)"visible",1);
  uVar7 = FUN_1042f3d0(param_1,(uint *)"image",(uint)&DAT_104eefb3);
  uVar7 = FUN_1042f3d0(param_2,(uint *)"StartAttachment",(uint)&DAT_104eefb3);
  uVar8 = (**(code **)(*param_1 + 0xc))("DefaultVerySmall",0);
  uVar8 = DevMsg(2,"unhandled input: (%s) -> (%s,%s)\n",param_1,puVar12,puVar11);
  uVar8 = FUN_10265f50(param_5,(byte *)"binary_v1");
  uVar8 = FUN_10314280(param_1,(uint *)"use_vip_car",'\x01');
  uVar8 = FUN_10399710(param_5,(byte *)"binary_v1");
  uVar8 = FUN_1042df80(param_5,(byte *)"binary_v1");
  uVar8 = FUN_1042df80(param_5,(byte *)"rally_here");
  uVar8 = FUN_1042f270(puVar12,(uint *)"hitbox_invertedgroups",0);
  uVar8 = FUN_1042f270(puVar12,(uint *)"hitzone_forcedraw",0);
  uVar8 = FUN_1042f270(puVar12,(uint *)"hitzone_ignoreplayertouch",0);
  uVar8 = FUN_1042f270(this,(uint *)"liquid_colour_G",0);
  uVar8 = Msg("%s: No maps found\n",param_4);
  uVar9 = (**(code **)(*DAT_106cb7f4 + 0x170))("_rt_FullFrameFB","RenderTargets",1,0);
  uVar9 = (**(code **)(iVar1 + 0xc))("Marlett",uVar5);
  uVar9 = (**(code **)(iVar2 + 0x84))("rpg7_port_exhaust",&local_30,&local_24);
  uVar9 = FUN_102687d0(param_1,(uint *)"use_proportional_insets",0);
  uVar9 = FUN_1039d9a0(param_1,(uint *)"use_proportional_insets",0);
  uVar9 = FUN_1042df80(pbVar8,(byte *)"use_name");
  uVar9 = FUN_1042f270(param_1,(uint *)"use_proportional_insets",0);
  uVar9 = FUN_1042f270(this,(uint *)"liquid_colour_B",0);
  uVar9 = Plat_DebugString("source or dest is not power of two\n");
  unaff_EDI = __getenv_helper_nolock("TZ");
  wsprintfA(local_204,"%s\\Settings",param_1);
  } while (piVar10 != (int *)"cl_brushfastpath");