#include "sourcevr.dll.h"



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_100011b0(void)

{
  uint uVar1;
  float10 fVar2;
  double dVar3;
  undefined4 uVar4;
  
  uVar4 = 0;
  DAT_100331dc = (char *)FUN_100017b0(2);
  FID_conflict__memcpy(DAT_100331dc,PTR_DAT_100331d8,DAT_100331e0);
  uVar1 = FUN_10004380(&PTR_vftable_100331b8,DAT_100331dc);
  if ((char)uVar1 == '\0') {
    fVar2 = FUN_10004870(DAT_100331dc);
    dVar3 = (double)fVar2;
    DAT_100331e4 = (float)fVar2;
    if (((uint)DAT_100331e4 & 0x7f800000) == 0x7f800000) {
      Warning("ConVar(%s) defined with infinite float value (%s)\n",&DAT_10019cb8,DAT_100331dc,dVar3
              ,uVar4);
      DAT_100331e4 = 3.402823e+38;
    }
    _DAT_100331e8 = (int)dVar3;
  }
  _DAT_100331c8 = PTR_DAT_100331b0;
  DAT_100331c0 = 0;
  _DAT_100331c4 = &DAT_10019cb8;
  _DAT_100331cc = 0;
  _DAT_100331bc = DAT_100443d0;
  DAT_100443d0 = &PTR_vftable_100331b8;
  if (DAT_100443d4 != 0) {
    (**(code **)(PTR_vftable_100331b8 + 0x2c))();
  }
  PTR_vftable_100331b8 = (undefined *)CEmptyConVar::vftable;
  PTR_vftable_100331d0 = (undefined *)CEmptyConVar::vftable;
  FUN_100062eb(FUN_10018240);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_100012d0(void)

{
  FUN_10004f60(&DAT_10044f20,0x7f,"\"",1,(int)&DAT_10033268);
  _DAT_10044f20 = CUtlNoEscConversion::vftable;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_10001300(void)

{
  byte **ppbVar1;
  byte *pbVar2;
  undefined **ppuVar3;
  
  FUN_10004f60(&DAT_10044500,0x5c,"\"",0xb,(int)&DAT_10033210);
  _DAT_10044500 = CUtlCStringConversion::vftable;
  FUN_10006130((uint *)&DAT_10044e18,0,0x100);
  ppuVar3 = &PTR_DAT_10033214;
  do {
    pbVar2 = *ppuVar3;
    ppbVar1 = ppuVar3 + -1;
    ppuVar3 = ppuVar3 + 2;
    (&DAT_10044e18)[*pbVar2] = *(undefined *)ppbVar1;
  } while ((int)ppuVar3 < 0x1003326c);
  return;
}



void __cdecl FUN_10001730(undefined4 param_1)

{
  (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1);
  return;
}



void FUN_10001750(void)

{
  code *pcVar1;
  char cVar2;
  
  cVar2 = Plat_IsInDebugSession();
  if (cVar2 != '\0') {
    pcVar1 = (code *)swi(3);
    (*pcVar1)();
    return;
  }
  WriteMiniDump();
  Plat_ExitProcess(1);
  return;
}



uint * __cdecl FUN_10001770(int param_1,int param_2)

{
  uint *puVar1;
  
  puVar1 = (uint *)(**(code **)(**(int **)g_pMemAlloc_exref + 4))(param_1 * param_2);
  FUN_10006130(puVar1,0,param_1 * param_2);
  return puVar1;
}



bool FUN_100017a0(void)

{
  return *(int *)g_pMemAlloc_exref != 0;
}



void __cdecl FUN_100017b0(undefined4 param_1)

{
  (**(code **)(**(int **)g_pMemAlloc_exref + 4))(param_1);
  return;
}



void __cdecl FUN_100017d0(undefined4 param_1)

{
  (**(code **)(**(int **)g_pMemAlloc_exref + 0x20))(param_1);
  return;
}



void __cdecl FUN_100017f0(undefined4 param_1,undefined4 param_2)

{
  (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(param_1,param_2);
  return;
}



uint * __cdecl FUN_10001810(undefined4 param_1,int param_2,int param_3)

{
  uint *puVar1;
  
  puVar1 = (uint *)(**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(param_1,param_2 * param_3);
  FUN_10006130(puVar1,0,param_2 * param_3);
  return puVar1;
}



undefined4 * __fastcall FUN_10001840(undefined4 *param_1)

{
  *param_1 = CSourceVirtualReality::vftable;
  param_1[2] = CDistortionTextureRegen::vftable;
  param_1[3] = 0;
  param_1[4] = CDistortionTextureRegen::vftable;
  param_1[5] = 1;
  FUN_10005140(param_1 + 6);
  FUN_10005140(param_1 + 7);
  FUN_10005140(param_1 + 8);
  FUN_10005140(param_1 + 9);
  FUN_10005140(param_1 + 10);
  FUN_10005110(param_1 + 0xb,0,0,1);
  FUN_10005110(param_1 + 0xc,0,0,1);
  FUN_10005110(param_1 + 0xd,0,0,1);
  FUN_10005110(param_1 + 0xe,0,0,1);
  FUN_10005110(param_1 + 0xf,0,0,1);
  FUN_10005110(param_1 + 0x10,0,0,1);
  FUN_10005110(param_1 + 0x11,0,0,1);
  FUN_10005110(param_1 + 0x12,0,0,1);
  *(undefined *)(param_1 + 1) = 0;
  *(undefined *)((int)param_1 + 6) = 0;
  param_1[0x13] = 0;
  return param_1;
}



void __fastcall FUN_10001910(undefined4 *param_1)

{
  *param_1 = CSourceVirtualReality::vftable;
  FUN_10005150((int **)(param_1 + 0x12));
  FUN_10005150((int **)(param_1 + 0x11));
  FUN_10005150((int **)(param_1 + 0x10));
  FUN_10005150((int **)(param_1 + 0xf));
  FUN_10005150((int **)(param_1 + 0xe));
  FUN_10005150((int **)(param_1 + 0xd));
  FUN_10005150((int **)(param_1 + 0xc));
  FUN_10005150((int **)(param_1 + 0xb));
  FUN_10005170((int **)(param_1 + 10));
  FUN_10005170((int **)(param_1 + 9));
  FUN_10005170((int **)(param_1 + 8));
  FUN_10005170((int **)(param_1 + 7));
  FUN_10005170((int **)(param_1 + 6));
  *param_1 = ISourceVirtualReality::vftable;
  return;
}



undefined4 * __thiscall FUN_10001990(void *this,byte param_1)

{
  FUN_10001910((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_10001730(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_100019c0(void *this,byte param_1)

{
  *(undefined ***)this = ISourceVirtualReality::vftable;
  if ((param_1 & 1) != 0) {
    FUN_10001730(this);
  }
  return (undefined4 *)this;
}



undefined4 __fastcall FUN_100019f0(int param_1)

{
  undefined4 uVar1;
  int iVar2;
  char *pcVar3;
  
  if (*(int *)(param_1 + 0x4c) != 0) {
    VR_ShutdownInternal();
    *(undefined4 *)(param_1 + 0x4c) = 0;
  }
  uVar1 = FUN_10002d30(param_1);
  if ((char)uVar1 == '\0') {
    return uVar1;
  }
  *(undefined *)(param_1 + 4) = 1;
  iVar2 = (**(code **)(DAT_10034af0 + 0x34))();
  *(bool *)(param_1 + 6) = iVar2 != 0;
  FUN_10005190((void *)(param_1 + 0x2c),"dev/warp","Other",1);
  if (*(char *)(param_1 + 6) == '\0') {
    FUN_10005190((void *)(param_1 + 0x30),"vr/vr_distort_texture_left_nort","Other",1);
    pcVar3 = "vr/vr_distort_texture_right_nort";
  }
  else {
    FUN_10005190((void *)(param_1 + 0x30),"vr/vr_distort_texture_left","Other",1);
    pcVar3 = "vr/vr_distort_texture_right";
  }
  FUN_10005190((void *)(param_1 + 0x34),pcVar3,"Other",1);
  FUN_10005190((void *)(param_1 + 0x40),"vgui/inworldui","Other",1);
  FUN_10005190((void *)(param_1 + 0x44),"vgui/inworldui_opaque","Other",1);
  FUN_10005190((void *)(param_1 + 0x48),"vgui/black","Other",1);
  FUN_10005190((void *)(param_1 + 0x38),"vr/vr_distort_hud_left","Other",1);
  FUN_10005190((void *)(param_1 + 0x3c),"vr/vr_distort_hud_right","Other",1);
  (**(code **)(**(int **)(param_1 + 0x1c) + 0x34))(0,0);
  uVar1 = (**(code **)(**(int **)(param_1 + 0x20) + 0x34))(0,0);
  return CONCAT31((int3)((uint)uVar1 >> 8),1);
}



void FUN_10001b10(void)

{
  if (DAT_1003492c != (int *)0x0) {
                    // WARNING: Could not recover jumptable at 0x10001b1c. Too many branches
                    // WARNING: Treating indirect jump as call
    (**(code **)(*DAT_1003492c + 0x30))();
    return;
  }
  return;
}



void FUN_10001b20(void)

{
  undefined4 uVar1;
  
  if (DAT_1003492c != 0) {
    VR_ShutdownInternal();
    DAT_1003492c = 0;
  }
  uVar1 = FUN_10002d30((int)&DAT_100348e0);
  if ((char)uVar1 != '\0') {
    Warning("Can\'t reset HMD tracker");
  }
  return;
}



void FUN_10001b60(void)

{
  (**(code **)(*DAT_100348fc + 0x34))(0,0);
  (**(code **)(*DAT_10034900 + 0x34))(0,0);
  return;
}



void __fastcall FUN_10001b80(undefined4 *param_1)

{
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  param_1[4] = 0;
  param_1[6] = 0;
  param_1[7] = 0;
  param_1[8] = 0;
  param_1[9] = 0;
  param_1[10] = 0;
  param_1[5] = 0;
  param_1[0xb] = 0;
  param_1[0xc] = 0;
  return;
}



void __cdecl
FUN_10001be0(float param_1,float param_2,float param_3,float param_4,float param_5,float param_6,
            float param_7,float *param_8)

{
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  float fVar1;
  float fVar2;
  float fVar3;
  
  if ((param_7 != 1.0) && (0.0 < param_7)) {
    fVar1 = param_3;
    ___libm_sse2_atanf();
    fVar1 = fVar1 / param_7;
    ___libm_sse2_tanf(extraout_ECX,extraout_EDX);
    fVar1 = fVar1 / param_3;
    param_2 = fVar1 * param_2;
    param_1 = fVar1 * param_1;
    param_4 = fVar1 * param_4;
    param_3 = fVar1 * param_3;
  }
  fVar2 = 1.0 / (param_2 - param_1);
  param_8[1] = 0.0;
  param_8[3] = 0.0;
  param_8[4] = 0.0;
  param_8[7] = 0.0;
  param_8[8] = 0.0;
  param_8[9] = 0.0;
  param_8[0xc] = 0.0;
  param_8[0xd] = 0.0;
  param_8[0xe] = -1.0;
  param_8[0xf] = 0.0;
  param_8[2] = (param_1 + param_2) * fVar2;
  fVar3 = 1.0 / (param_4 - param_3);
  fVar1 = 1.0 / (param_6 - param_5);
  *param_8 = fVar2 * 2.0;
  param_8[5] = fVar3 * 2.0;
  param_8[0xb] = (float)((uint)(param_5 * param_6 * fVar1) ^ 0x80000000);
  param_8[6] = (param_3 + param_4) * fVar3;
  param_8[10] = (float)((uint)(fVar1 * param_6) ^ 0x80000000);
  return;
}



// WARNING: Could not reconcile some variable overlaps

undefined __thiscall
FUN_10001d50(void *this,int param_1,float *param_2,char param_3,char param_4,undefined param_5)

{
  int *piVar1;
  undefined auVar2 [16];
  char cVar3;
  int iVar4;
  int *piVar5;
  int **ppiVar6;
  undefined uStack0000000f;
  undefined local_24 [8];
  float fStack28;
  undefined4 uStack24;
  undefined4 local_14;
  undefined4 local_10;
  undefined4 local_c;
  undefined4 local_8;
  
                    // WARNING: Load size is inaccurate
  cVar3 = (**(code **)(*this + 0x28))();
  if (cVar3 == '\0') {
    return 0;
  }
  if (param_3 != '\0') {
    iVar4 = (**(code **)(DAT_100349c0 + 0x34))();
    uStack0000000f = 1;
    if (iVar4 != 0) goto LAB_10001d8a;
  }
  uStack0000000f = 0;
LAB_10001d8a:
  ppiVar6 = (int **)((int)this + 0x38);
  if (param_1 != 0) {
    ppiVar6 = (int **)((int)this + 0x3c);
  }
  piVar1 = *ppiVar6;
  (**(code **)(*piVar1 + 0x74))(0x200000,param_4 == '\0');
  _local_24 = CONCAT412(param_2[3] * 0.5 + 0.5,
                        CONCAT48(param_2[2] * 0.5 + 0.5,
                                 CONCAT44(param_2[1] * 0.5 + 0.5,*param_2 * 0.5 + 0.5)));
  iVar4 = (**(code **)(DAT_100349c0 + 0x34))();
  auVar2 = _local_24;
  if ((iVar4 != 0) && (*(char *)((int)this + 6) == '\0')) {
    _local_24 = CONCAT124(stack0xffffffe0,local_24._0_4_ * 0.5);
    _local_24 = CONCAT48(fStack28 * 0.5,local_24);
    if (param_1 == 1) {
      _local_24 = CONCAT124(stack0xffffffe0,local_24._0_4_ * 0.5 + 0.5);
      _local_24 = CONCAT48(fStack28 * 0.5 + 0.5,local_24);
    }
  }
  piVar5 = (int *)(**(code **)(*piVar1 + 0x2c))("$distortbounds",0,1);
  if (piVar5 != (int *)0x0) {
    (**(code **)(*piVar5 + 0x34))(local_24,4);
  }
  piVar5 = (int *)(**(code **)(*piVar1 + 0x2c))("$hudtranslucent",0,1);
  if (piVar5 != (int *)0x0) {
    (**(code **)(*piVar5 + 0x14))(param_5);
  }
  piVar5 = (int *)(**(code **)(*piVar1 + 0x2c))("$hudundistort",0,1);
  if (piVar5 != (int *)0x0) {
    (**(code **)(*piVar5 + 0x14))(uStack0000000f);
  }
  piVar5 = (int *)(**(code **)(*DAT_10034bbc + 0x1d0))();
  if (piVar5 != (int *)0x0) {
    (**(code **)(*piVar5 + 8))();
  }
  (**(code **)(**(int **)((int)this + 0x50) + 4))
            (param_1 != 0,&local_14,&local_10,&local_c,&local_8);
  (**(code **)(*piVar5 + 0x1d0))
            (piVar1,local_14,local_10,local_c,local_8,0,0,0x42fe0000,0x42fe0000,0x80,0x80,0,1,1);
  (**(code **)(*piVar5 + 0xc))();
  (**(code **)(*piVar5 + 4))();
  return 1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint FUN_10001f20(undefined *param_1)

{
  undefined4 uVar1;
  
  if (param_1 != (undefined *)0x0) {
    thunk_FUN_10002f80(&param_1,1);
    FUN_10005090();
    uVar1 = FUN_10005320();
    if (_DAT_10034bb0 != 0) {
      return CONCAT31((int3)((uint)uVar1 >> 8),1);
    }
    param_1 = (undefined *)Warning("The head tracker requires the filesystem to run!\n");
  }
  return (uint)param_1 & 0xffffff00;
}



void __thiscall FUN_10001f90(void *this,int *param_1)

{
  int iVar1;
  undefined4 uVar2;
  int *piVar3;
  undefined4 local_c;
  undefined4 local_8;
  
  if ((*(int *)((int)this + 0x4c) != 0) && (*(char *)((int)this + 4) != '\0')) {
    iVar1 = *DAT_10034bbc;
    uVar2 = (**(code **)(iVar1 + 0x90))(0,0xc,1);
    piVar3 = (int *)(**(code **)(iVar1 + 400))("_rt_gui",0x280,0x1e0,5,uVar2);
    FUN_10005200((void *)((int)this + 0x18),piVar3);
    if (*(char *)((int)this + 6) != '\0') {
      (**(code **)**(undefined4 **)((int)this + 0x4c))(&local_c,&local_8);
      piVar3 = (int *)(**(code **)(*param_1 + 400))
                                ("_rt_vr_predistort",local_c,local_8,8,0,1,0x8100,0);
      FUN_10005200((void *)((int)this + 0x24),piVar3);
      piVar3 = (int *)(**(code **)(*param_1 + 400))
                                ("_rt_vr_predistort_depth",local_c,local_8,8,0x30,2,0x10c,0);
      FUN_10005200((void *)((int)this + 0x28),piVar3);
    }
  }
  return;
}



void __fastcall FUN_10002060(int param_1)

{
  *(undefined2 *)(param_1 + 4) = 0;
  FUN_10005240((void *)(param_1 + 0x2c),'\0');
  FUN_10005240((void *)(param_1 + 0x30),'\0');
  FUN_10005240((void *)(param_1 + 0x34),'\0');
  FUN_10005240((void *)(param_1 + 0x38),'\0');
  FUN_10005240((void *)(param_1 + 0x3c),'\0');
  FUN_10005240((void *)(param_1 + 0x40),'\0');
  FUN_10005240((void *)(param_1 + 0x44),'\0');
  FUN_10005240((void *)(param_1 + 0x48),'\0');
  return;
}



void FUN_100020c0(void)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  FUN_10005320();
  FUN_100050e0();
  iVar1 = DAT_10034e0c;
  iVar3 = DAT_10034e08 + -1;
  DAT_10034e08 = iVar3;
  if ((-1 < iVar3) && (iVar2 = 0, 0 < DAT_10034e0c)) {
    do {
      if ((&DAT_10034c64)[iVar2 * 2] == iVar3) {
        *(undefined4 *)(&DAT_10034c60)[iVar2 * 2] = 0;
      }
      iVar2 = iVar2 + 1;
    } while (iVar2 < iVar1);
  }
  return;
}



uint __thiscall FUN_100020d0(void *this,int param_1)

{
  uint uVar1;
  int *piVar2;
  undefined4 uVar3;
  byte bVar4;
  undefined local_28 [4];
  undefined local_24 [4];
  undefined local_20 [4];
  undefined local_1c [4];
  undefined4 local_18;
  undefined4 local_14;
  undefined4 local_10;
  undefined4 local_c;
  uint local_8;
  
                    // WARNING: Load size is inaccurate
  uVar1 = (**(code **)(*this + 0x28))();
  if ((char)uVar1 == '\0') {
LAB_100020e4:
    return uVar1 & 0xffffff00;
  }
  uVar1 = (**(code **)(DAT_100349c0 + 0x34))();
  if (uVar1 == 0) goto LAB_100020e4;
  piVar2 = (int *)(**(code **)(*DAT_10034bbc + 0x1d0))();
  if (piVar2 != (int *)0x0) {
    (**(code **)(*piVar2 + 8))();
  }
  if (param_1 == 0) {
    uVar3 = *(undefined4 *)((int)this + 0x30);
  }
  else {
    uVar3 = *(undefined4 *)((int)this + 0x34);
  }
  if (*(char *)((int)this + 6) == '\0') {
    uVar1 = (**(code **)(*DAT_10034bbc + 0x170))("_rt_FullFrameFB1","RenderTargets",1,0);
    local_8 = uVar1;
    if (uVar1 == 0) {
      bVar4 = 0;
      goto LAB_100021f6;
    }
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x30))(param_1,local_28,local_24,local_20,local_1c);
    (**(code **)(*piVar2 + 0x1f0))(local_8,0,local_28,local_28);
  }
  (**(code **)(**(int **)((int)this + 0x50) + 4))
            (param_1 != 0,&local_18,&local_14,&local_10,&local_c);
  uVar1 = (**(code **)(*piVar2 + 0x1d0))
                    (uVar3,local_18,local_14,local_10,local_c,0,0,0x42fe0000,0x42fe0000,0x80,0x80,0,
                     1,1);
  bVar4 = 1;
LAB_100021f6:
  if (piVar2 != (int *)0x0) {
    (**(code **)(*piVar2 + 0xc))();
    uVar1 = (**(code **)(*piVar2 + 4))();
  }
  return uVar1 & 0xffffff00 | (uint)bVar4;
}



undefined4 FUN_10002220(void)

{
  return 0;
}



undefined4 __thiscall FUN_10002230(void *this,undefined4 *param_1)

{
  uint in_EAX;
  undefined4 local_14;
  undefined4 local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  if ((*(int *)((int)this + 0x4c) != 0) && (*(undefined4 **)((int)this + 0x50) != (undefined4 *)0x0)
     ) {
    (**(code **)**(undefined4 **)((int)this + 0x50))(&local_8,&local_c,&local_10,&local_14);
    *param_1 = local_8;
    param_1[1] = local_c;
    param_1[2] = local_10;
    param_1[3] = local_14;
    return CONCAT31((int3)((uint)local_14 >> 8),1);
  }
  return in_EAX & 0xffffff00;
}



undefined4 __thiscall
FUN_10002290(void *this,float *param_1,float param_2,float param_3,float param_4,float param_5)

{
  uint in_EAX;
  undefined4 uVar1;
  float local_10;
  float local_c;
  float local_8;
  
  if (((param_1 != (float *)0x0) && (*(int **)((int)this + 0x4c) != (int *)0x0)) &&
     (*(char *)((int)this + 4) != '\0')) {
    (**(code **)(**(int **)((int)this + 0x4c) + 8))
              (param_2 != 0.0,&local_10,&local_c,&local_8,&param_2);
    uVar1 = FUN_10001be0(local_10,local_c,local_8,param_2,param_3,param_4,param_5,param_1);
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  return in_EAX & 0xffffff00;
}



undefined4 * __thiscall FUN_10002350(void *this,undefined4 *param_1,int param_2)

{
  float fVar1;
  uint uVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  undefined4 *puVar5;
  undefined4 local_84 [16];
  undefined4 local_44;
  undefined4 uStack64;
  undefined4 uStack60;
  undefined4 uStack56;
  undefined4 local_34;
  undefined4 uStack48;
  undefined4 uStack44;
  undefined4 uStack40;
  undefined4 local_24;
  undefined4 uStack32;
  undefined4 uStack28;
  undefined4 uStack24;
  undefined4 local_14;
  undefined4 uStack16;
  undefined4 uStack12;
  undefined4 uStack8;
  
  if (*(int **)((int)this + 0x4c) != (int *)0x0) {
    (**(code **)(**(int **)((int)this + 0x4c) + 0x10))(&local_34,param_2 != 0);
    puVar5 = FUN_10002df0(local_84,&local_34);
    uVar3 = puVar5[10];
    param_1[2] = puVar5[9] ^ 0x80000000;
    fVar1 = (float)puVar5[0xb];
    uVar4 = puVar5[2];
    *param_1 = uVar3;
    uVar3 = puVar5[8];
    param_1[3] = fVar1 * -39.37008;
    uVar2 = puVar5[1];
    param_1[4] = uVar4;
    param_1[6] = uVar2 ^ 0x80000000;
    fVar1 = (float)puVar5[3];
    uVar4 = *puVar5;
    param_1[1] = uVar3;
    uVar3 = puVar5[0xd];
    param_1[7] = fVar1 * -39.37008;
    uVar2 = puVar5[6];
    param_1[5] = uVar4;
    uVar4 = puVar5[5];
    param_1[8] = uVar2 ^ 0x80000000;
    uVar2 = puVar5[4];
    param_1[0xe] = uVar3;
    uVar3 = puVar5[0xf];
    param_1[9] = uVar2 ^ 0x80000000;
    fVar1 = (float)puVar5[7];
    param_1[10] = uVar4;
    param_1[0xf] = uVar3;
    param_1[0xb] = fVar1 * 39.37008;
    param_1[0xc] = puVar5[0xe] ^ 0x80000000;
    param_1[0xd] = puVar5[0xc] ^ 0x80000000;
    return param_1;
  }
  FUN_100032f0(&local_44);
  *param_1 = local_44;
  param_1[1] = uStack64;
  param_1[2] = uStack60;
  param_1[3] = uStack56;
  param_1[4] = local_34;
  param_1[5] = uStack48;
  param_1[6] = uStack44;
  param_1[7] = uStack40;
  param_1[8] = local_24;
  param_1[9] = uStack32;
  param_1[10] = uStack28;
  param_1[0xb] = uStack24;
  param_1[0xc] = local_14;
  param_1[0xd] = uStack16;
  param_1[0xe] = uStack12;
  param_1[0xf] = uStack8;
  return param_1;
}



void __thiscall FUN_10002490(void *this,undefined4 *param_1)

{
  undefined4 uVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  
  uVar1 = *(undefined4 *)((int)this + 0x5c);
  uVar2 = *(undefined4 *)((int)this + 0x60);
  uVar3 = *(undefined4 *)((int)this + 100);
  *param_1 = *(undefined4 *)((int)this + 0x58);
  param_1[1] = uVar1;
  param_1[2] = uVar2;
  param_1[3] = uVar3;
  uVar1 = *(undefined4 *)((int)this + 0x6c);
  uVar2 = *(undefined4 *)((int)this + 0x70);
  uVar3 = *(undefined4 *)((int)this + 0x74);
  param_1[4] = *(undefined4 *)((int)this + 0x68);
  param_1[5] = uVar1;
  param_1[6] = uVar2;
  param_1[7] = uVar3;
  uVar1 = *(undefined4 *)((int)this + 0x7c);
  uVar2 = *(undefined4 *)((int)this + 0x80);
  uVar3 = *(undefined4 *)((int)this + 0x84);
  param_1[8] = *(undefined4 *)((int)this + 0x78);
  param_1[9] = uVar1;
  param_1[10] = uVar2;
  param_1[0xb] = uVar3;
  uVar1 = *(undefined4 *)((int)this + 0x8c);
  uVar2 = *(undefined4 *)((int)this + 0x90);
  uVar3 = *(undefined4 *)((int)this + 0x94);
  param_1[0xc] = *(undefined4 *)((int)this + 0x88);
  param_1[0xd] = uVar1;
  param_1[0xe] = uVar2;
  param_1[0xf] = uVar3;
  return;
}



undefined4 __thiscall FUN_100024d0(void *this,undefined4 param_1,int param_2)

{
  int iVar1;
  
  iVar1 = (**(code **)(DAT_100349c0 + 0x34))();
  if ((((iVar1 != 0) && (*(char *)((int)this + 4) != '\0')) && (*(int *)((int)this + 0x4c) != 0)) &&
     (*(char *)((int)this + 6) != '\0')) {
    if (param_2 == 0) {
      return *(undefined4 *)((int)this + 0x24);
    }
    if (param_2 == 1) {
      return *(undefined4 *)((int)this + 0x28);
    }
  }
  return 0;
}



void __thiscall FUN_10002520(void *this,undefined4 *param_1,undefined4 *param_2)

{
  undefined4 local_c;
  undefined4 local_8;
  
  if ((*(undefined4 **)((int)this + 0x4c) != (undefined4 *)0x0) &&
     (*(char *)((int)this + 6) != '\0')) {
    (**(code **)**(undefined4 **)((int)this + 0x4c))(&local_8,&local_c);
    *param_1 = local_8;
    *param_2 = local_c;
    return;
  }
  *param_2 = 0;
  *param_1 = 0;
  return;
}



undefined4 FUN_10002570(void)

{
  return 3;
}



undefined4 FUN_10002580(void)

{
  return 4;
}



undefined4 __fastcall FUN_10002590(int param_1)

{
  undefined4 uVar1;
  
  if (*(int *)(param_1 + 0x4c) == 0) {
    uVar1 = FUN_10002d30(param_1);
    if ((char)uVar1 == '\0') {
      return 0xffffffff;
    }
  }
                    // WARNING: Could not recover jumptable at 0x100025ad. Too many branches
                    // WARNING: Treating indirect jump as call
  uVar1 = (**(code **)(**(int **)(param_1 + 0x4c) + 0x18))();
  return uVar1;
}



void __thiscall
FUN_100025b0(void *this,int param_1,int *param_2,undefined4 *param_3,undefined4 *param_4,
            undefined4 *param_5)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  if ((*(int *)((int)this + 0x4c) != 0) && (*(char *)((int)this + 4) != '\0')) {
    if (*(int *)((int)this + 0x24) != 0) {
      iVar1 = (**(code **)(DAT_100349c0 + 0x34))();
      if (iVar1 != 0) {
        if ((param_2 != (int *)0x0) && (param_3 != (undefined4 *)0x0)) {
          *param_2 = 0;
          *param_3 = 0;
        }
        uVar2 = (**(code **)(**(int **)((int)this + 0x24) + 0xc))();
        *param_4 = uVar2;
        uVar2 = (**(code **)(**(int **)((int)this + 0x24) + 0x10))();
        *param_5 = uVar2;
        return;
      }
    }
    (**(code **)(**(int **)((int)this + 0x50) + 4))
              (param_1 != 0,&param_1,&local_8,&local_c,&local_10);
    if ((param_2 != (int *)0x0) && (param_3 != (undefined4 *)0x0)) {
      *param_2 = param_1;
      *param_3 = local_8;
    }
    *param_4 = local_c;
    *param_5 = local_10;
    return;
  }
  *param_4 = 0;
  *param_5 = 0;
  return;
}



undefined4 __fastcall FUN_10002690(int param_1)

{
  int *piVar1;
  
  if (DAT_10034b8c != 0) {
    FUN_10003e80(0,(undefined **)0x0);
  }
  FUN_10003220(0x400ccccd,2.2,0.0,2);
  piVar1 = (int *)(**(code **)(*DAT_10034bbc + 0x178))
                            ("vr_distort_map_left","Pixel Shaders",0x80,0x80,0x19,0x6030c);
  FUN_10005200((void *)(param_1 + 0x1c),piVar1);
  piVar1 = (int *)(**(code **)(*DAT_10034bbc + 0x178))
                            ("vr_distort_map_right","Pixel Shaders",0x80,0x80,0x19,0x6030c);
  FUN_10005200((void *)(param_1 + 0x20),piVar1);
  (**(code **)(**(int **)(param_1 + 0x1c) + 0x30))(param_1 + 8,1);
  (**(code **)(**(int **)(param_1 + 0x20) + 0x30))(param_1 + 0x10,1);
  return 1;
}



undefined FUN_10002760(void)

{
  return 0;
}



undefined4 * __cdecl FUN_10002770(undefined4 *param_1,undefined4 *param_2)

{
  float fVar1;
  uint uVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  
  uVar3 = param_2[10];
  uVar4 = param_2[0xd];
  param_1[2] = param_2[9] ^ 0x80000000;
  fVar1 = (float)param_2[0xb];
  *param_1 = uVar3;
  param_1[1] = param_2[8];
  param_1[3] = fVar1 * -39.37008;
  uVar3 = param_2[2];
  param_1[6] = param_2[1] ^ 0x80000000;
  fVar1 = (float)param_2[3];
  param_1[4] = uVar3;
  param_1[5] = *param_2;
  param_1[7] = fVar1 * -39.37008;
  uVar3 = param_2[5];
  param_1[8] = param_2[6] ^ 0x80000000;
  uVar2 = param_2[4];
  param_1[0xe] = uVar4;
  uVar4 = param_2[0xf];
  param_1[9] = uVar2 ^ 0x80000000;
  fVar1 = (float)param_2[7];
  param_1[10] = uVar3;
  param_1[0xf] = uVar4;
  param_1[0xb] = fVar1 * 39.37008;
  param_1[0xc] = param_2[0xe] ^ 0x80000000;
  param_1[0xd] = param_2[0xc] ^ 0x80000000;
  return param_1;
}



void FUN_10002840(undefined4 param_1)

{
  code *pcVar1;
  
  pcVar1 = (code *)FUN_100038d0();
  (*pcVar1)(param_1,0);
  return;
}



void FUN_10002860(undefined *param_1,byte *param_2)

{
  FUN_10003100(param_1,param_2);
  return;
}



void FUN_10002880(void)

{
  return;
}



void __thiscall FUN_10002890(void *this,undefined4 param_1,int *param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  undefined2 *puVar5;
  float fVar6;
  float fVar7;
  float fVar8;
  float fVar9;
  float fVar10;
  float local_44;
  float local_40;
  float local_3c;
  float local_38;
  float local_34;
  float local_30;
  float local_2c;
  float local_28;
  float local_24;
  float local_20;
  void *local_1c;
  undefined2 *local_18;
  int local_14;
  int local_10;
  float local_c;
  float local_8;
  
  piVar1 = param_2;
  if (DAT_1003492c != (int *)0x0) {
    local_1c = this;
    iVar2 = (**(code **)(*param_2 + 0x98))(0,0,0);
    iVar3 = (**(code **)(*param_2 + 0x50))();
    if (iVar3 == 0x19) {
      if (DAT_100348e6 == '\0') {
        local_8 = 0.5;
        if (*(int *)((int)this + 4) == 0) {
          param_2 = (int *)0x0;
        }
        else {
          param_2 = (int *)0x3f000000;
        }
      }
      else {
        local_8 = 1.0;
        param_2 = (int *)0x0;
      }
      iVar4 = (**(code **)(*piVar1 + 0x38))();
      iVar3 = (**(code **)(*piVar1 + 0x3c))();
      local_2c = (float)iVar4;
      local_14 = 0;
      local_28 = (float)iVar3;
      if (0 < iVar3) {
        local_18 = (undefined2 *)(iVar2 + 4);
        local_10 = iVar3;
        fVar7 = local_2c;
        fVar9 = local_28;
        do {
          iVar2 = 0;
          if (0 < iVar4) {
            local_24 = 1.0 / fVar7;
            local_c = ((float)local_14 + 0.5) / fVar9;
            puVar5 = local_18;
            do {
              local_20 = ((float)iVar2 + 0.5) * local_24;
              (**(code **)(*DAT_1003492c + 0xc))
                        (*(undefined4 *)((int)local_1c + 4),local_20,local_c,&local_44);
              fVar7 = 1.0;
              if (0.0 <= local_44) {
                if (1.0 < local_44) {
                  local_44 = fVar7;
                }
              }
              else {
                local_44 = 0.0;
              }
              local_44 = local_44 * local_8 + (float)param_2;
              if (0.0 <= local_3c) {
                if (1.0 < local_3c) {
                  local_3c = fVar7;
                }
              }
              else {
                local_3c = 0.0;
              }
              local_3c = local_3c * local_8 + (float)param_2;
              if (0.0 <= local_34) {
                if (1.0 < local_34) {
                  local_34 = fVar7;
                }
              }
              else {
                local_34 = 0.0;
              }
              local_34 = local_34 * local_8 + (float)param_2;
              iVar3 = (**(code **)(DAT_10034a18 + 0x34))();
              if (iVar3 != 0) {
                local_44 = local_20 * local_8 + (float)param_2;
                local_30 = local_c;
                local_38 = local_c;
                local_40 = local_c;
                local_3c = local_44;
                local_34 = local_44;
              }
              iVar3 = (**(code **)(DAT_10034a70 + 0x34))();
              fVar8 = local_40;
              fVar10 = local_30;
              fVar7 = local_34;
              fVar9 = local_44;
              if (iVar3 != 0) {
                fVar8 = local_38;
                fVar10 = local_38;
                fVar7 = local_3c;
                fVar9 = local_3c;
              }
              fVar6 = 1.0;
              if (0.0 <= fVar9) {
                if (1.0 < fVar9) {
                  fVar9 = fVar6;
                }
              }
              else {
                fVar9 = 0.0;
              }
              puVar5[-2] = (short)(int)(fVar9 * 65535.0);
              if (0.0 <= fVar8) {
                if (1.0 < fVar8) {
                  fVar8 = fVar6;
                }
              }
              else {
                fVar8 = 0.0;
              }
              puVar5[-1] = (short)(int)(fVar8 * 65535.0);
              if (0.0 <= fVar7) {
                if (1.0 < fVar7) {
                  fVar7 = fVar6;
                }
              }
              else {
                fVar7 = 0.0;
              }
              *puVar5 = (short)(int)(fVar7 * 65535.0);
              if (0.0 <= fVar10) {
                if (1.0 < fVar10) {
                  fVar10 = fVar6;
                }
              }
              else {
                fVar10 = 0.0;
              }
              iVar2 = iVar2 + 1;
              puVar5[1] = (short)(int)(fVar10 * 65535.0);
              puVar5 = puVar5 + 4;
              iVar3 = local_10;
              fVar7 = local_2c;
              fVar9 = local_28;
            } while (iVar2 < iVar4);
          }
          local_14 = local_14 + 1;
          local_18 = local_18 + iVar4 * 4;
        } while (local_14 < iVar3);
      }
    }
  }
  return;
}



undefined4 __fastcall FUN_10002bc0(int param_1)

{
  uint in_EAX;
  uint uVar1;
  undefined4 *puVar2;
  float10 fVar3;
  undefined4 local_dc [16];
  undefined4 local_9c [16];
  undefined4 local_5c [19];
  undefined local_10;
  float local_c;
  float local_8;
  
  if ((*(int **)(param_1 + 0x4c) != (int *)0x0) && (*(char *)(param_1 + 4) != '\0')) {
    in_EAX = (**(code **)(**(int **)(param_1 + 0x4c) + 0x54))(0);
    if ((char)in_EAX == '\0') {
      *(undefined *)(param_1 + 0x54) = 0;
    }
    else {
      (**(code **)(**(int **)(param_1 + 0x4c) + 0x14))(&local_c,0);
      fVar3 = (float10)(**(code **)(**(int **)(param_1 + 0x4c) + 0x5c))(0,0x7d2,0);
      local_8 = (float)((float10)1 / fVar3);
      fVar3 = (float10)(**(code **)(**(int **)(param_1 + 0x4c) + 0x5c))(0,0x7d1,0);
      local_8 = (float)(fVar3 + (float10)(local_8 - local_c));
      uVar1 = (**(code **)(**(int **)(param_1 + 0x4c) + 0x2c))(0,local_8,local_5c,1);
      in_EAX = uVar1 & 0xffffff00;
      *(undefined *)(param_1 + 0x54) = local_10;
    }
    if (*(char *)(param_1 + 0x54) != '\0') {
      puVar2 = FUN_10002df0(local_9c,local_5c);
      puVar2 = FUN_10002770(local_dc,puVar2);
      puVar2 = FUN_10003280((void *)(param_1 + 0x58),puVar2);
      return CONCAT31((int3)((uint)puVar2 >> 8),1);
    }
  }
  return in_EAX & 0xffffff00;
}



void __fastcall FUN_10002cb0(int param_1)

{
  *(undefined *)(param_1 + 5) = 1;
  return;
}



void __fastcall FUN_10002cc0(int param_1)

{
  if (DAT_10034b8c != 0) {
    FUN_10003f20();
  }
  if (*(int *)(param_1 + 0x4c) != 0) {
    VR_ShutdownInternal();
  }
  FUN_10005280((void *)(param_1 + 0x1c),'\0');
  FUN_10005280((void *)(param_1 + 0x20),'\0');
  return;
}



void __fastcall FUN_10002d00(int param_1)

{
  FUN_10005280((void *)(param_1 + 0x18),'\0');
  FUN_10005280((void *)(param_1 + 0x24),'\0');
  FUN_10005280((void *)(param_1 + 0x28),'\0');
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint __fastcall FUN_10002d30(int param_1)

{
  undefined4 uVar1;
  uint uVar2;
  int iVar3;
  int local_8;
  
  local_8 = param_1;
  uVar1 = FUN_10002ec0(&local_8,1);
  *(undefined4 *)(param_1 + 0x4c) = uVar1;
  if (local_8 != 0) {
    uVar2 = Msg("Unable to initialize HMD tracker. Error code %d\n",local_8);
    return uVar2 & 0xffffff00;
  }
  iVar3 = VR_GetInitToken();
  if (_DAT_10034b48 != iVar3) {
    FUN_10001b80(&DAT_10034b4c);
    _DAT_10034b48 = VR_GetInitToken();
  }
  if (DAT_10034b68 == 0) {
    DAT_10034b68 = VR_GetGenericInterface("IVRExtendedDisplay_001",&local_8);
  }
  iVar3 = DAT_10034b68;
  *(int *)(param_1 + 0x50) = DAT_10034b68;
  if (iVar3 == 0) {
    uVar2 = Msg("Unable to retrieve VRExtendedDisplay.\n");
    return uVar2 & 0xffffff00;
  }
  (**(code **)(**(int **)(param_1 + 0x4c) + 0x30))();
  *(undefined *)(param_1 + 0x54) = 0;
  uVar1 = FUN_100032f0((undefined4 *)(param_1 + 0x58));
  return CONCAT31((int3)((uint)uVar1 >> 8),1);
}



undefined4 * __cdecl FUN_10002df0(undefined4 *param_1,undefined4 *param_2)

{
  undefined4 uVar1;
  
  uVar1 = param_2[10];
  *param_1 = *param_2;
  param_1[1] = param_2[1];
  param_1[2] = param_2[2];
  param_1[3] = param_2[3];
  param_1[4] = param_2[4];
  param_1[5] = param_2[5];
  param_1[6] = param_2[6];
  param_1[7] = param_2[7];
  param_1[8] = param_2[8];
  param_1[9] = param_2[9];
  param_1[10] = uVar1;
  param_1[0xb] = param_2[0xb];
  param_1[0xc] = 0;
  param_1[0xd] = 0;
  param_1[0xe] = 0;
  param_1[0xf] = 0x3f800000;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_10002e70(void)

{
  int iVar1;
  undefined local_8 [4];
  
  iVar1 = VR_GetInitToken();
  if (_DAT_10034b48 != iVar1) {
    FUN_10001b80(&DAT_10034b4c);
    _DAT_10034b48 = VR_GetInitToken();
  }
  if (DAT_10034b4c == 0) {
    DAT_10034b4c = VR_GetGenericInterface("IVRSystem_016",local_8);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 __cdecl FUN_10002ec0(int *param_1,undefined4 param_2)

{
  char cVar1;
  undefined4 uVar2;
  int local_8;
  
  uVar2 = 0;
  _DAT_10034b48 = VR_InitInternal(&local_8,param_2);
  _DAT_10034b5c = 0;
  _DAT_10034b74 = 0;
  _DAT_10034b60 = 0;
  _DAT_10034b78 = 0;
  _DAT_10034b7c = 0;
  _DAT_10034b4c = ZEXT816(0);
  _DAT_10034b64 = ZEXT816(0);
  if (local_8 == 0) {
    cVar1 = VR_IsInterfaceVersionValid("IVRSystem_016");
    if (cVar1 == '\0') {
      VR_ShutdownInternal();
      local_8 = 0x69;
    }
    else {
      uVar2 = FUN_10002e70();
    }
  }
  if (param_1 != (int *)0x0) {
    *param_1 = local_8;
  }
  return uVar2;
}



uint __fastcall FUN_10002f50(int param_1)

{
  uint in_EAX;
  uint uVar1;
  
  if (*(int **)(param_1 + 0x4c) != (int *)0x0) {
    uVar1 = (**(code **)(**(int **)(param_1 + 0x4c) + 0x58))(0,0x3ec,0);
    return uVar1;
  }
  return in_EAX & 0xffffff00;
}



undefined * FUN_10002f70(void)

{
  return &DAT_100348e0;
}



void __cdecl FUN_10002f80(undefined **param_1,int param_2)

{
  int *piVar1;
  bool bVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  uint uVar6;
  int local_c;
  code **local_8;
  
  if (DAT_10034e0c < 0) {
    Error("APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n",DAT_10034e0c);
    DAT_10034e08 = DAT_10034e08 + 1;
    return;
  }
  if (DAT_10034e0c == 0) {
    local_8 = (code **)param_2;
    if (0 < param_2) {
      do {
        uVar6 = 0;
        do {
          piVar1 = *(int **)((int)&PTR_DAT_1003300c + uVar6);
          if (*piVar1 == 0) {
            iVar4 = (*(code *)*param_1)(*(undefined4 *)((int)&PTR_s_VEngineCvar007_10033008 + uVar6)
                                        ,0);
            *piVar1 = iVar4;
            if (iVar4 != 0) {
              (&DAT_10034c60)[DAT_10034e0c * 2] = piVar1;
              iVar4 = DAT_10034e0c * 2;
              DAT_10034e0c = DAT_10034e0c + 1;
              (&DAT_10034c64)[iVar4] = DAT_10034e08;
            }
          }
          uVar6 = uVar6 + 8;
        } while (uVar6 < 0x1a0);
        param_1 = (code **)param_1 + 1;
        local_8 = (code **)((int)local_8 + -1);
      } while (local_8 != (code **)0x0);
    }
  }
  else {
    local_c = param_2;
    if (0 < param_2) {
      local_8 = (code **)param_1;
      do {
        uVar6 = 0;
        do {
          piVar1 = *(int **)((int)&PTR_DAT_1003300c + uVar6);
          iVar5 = (**local_8)(*(undefined4 *)((int)&PTR_s_VEngineCvar007_10033008 + uVar6),0);
          iVar3 = DAT_10034e0c;
          iVar4 = DAT_10034e08;
          bVar2 = false;
          *piVar1 = iVar5;
          iVar5 = 0;
          if (iVar3 < 1) {
LAB_1000307b:
            if (*piVar1 != 0) {
              DAT_10034e0c = iVar3 + 1;
              (&DAT_10034c60)[iVar3 * 2] = piVar1;
              (&DAT_10034c64)[iVar3 * 2] = iVar4;
            }
          }
          else {
            do {
              if ((int *)(&DAT_10034c60)[iVar5 * 2] == piVar1) {
                (&DAT_10034c60)[iVar5 * 2] = piVar1;
                bVar2 = true;
              }
              iVar5 = iVar5 + 1;
            } while (iVar5 < iVar3);
            if (!bVar2) goto LAB_1000307b;
          }
          uVar6 = uVar6 + 8;
        } while (uVar6 < 0x1a0);
        local_8 = local_8 + 1;
        local_c = local_c + -1;
        if (local_c == 0) {
          DAT_10034e08 = iVar4 + 1;
          return;
        }
      } while( true );
    }
  }
  DAT_10034e08 = DAT_10034e08 + 1;
  return;
}



void __cdecl FUN_10003100(undefined *param_1,byte *param_2)

{
  byte bVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  byte *pbVar5;
  uint uVar6;
  int iVar7;
  byte *pbVar8;
  uint uVar9;
  bool bVar10;
  
  uVar9 = 0;
  do {
    pbVar5 = *(byte **)((int)&PTR_s_VEngineCvar007_10033008 + uVar9);
    pbVar8 = param_2;
    do {
      bVar1 = *pbVar5;
      bVar10 = bVar1 < *pbVar8;
      if (bVar1 != *pbVar8) {
LAB_10003140:
        uVar6 = -(uint)bVar10 | 1;
        goto LAB_10003145;
      }
      if (bVar1 == 0) break;
      bVar1 = pbVar5[1];
      bVar10 = bVar1 < pbVar8[1];
      if (bVar1 != pbVar8[1]) goto LAB_10003140;
      pbVar5 = pbVar5 + 2;
      pbVar8 = pbVar8 + 2;
    } while (bVar1 != 0);
    uVar6 = 0;
LAB_10003145:
    if (uVar6 == 0) {
      piVar2 = *(int **)((int)&PTR_DAT_1003300c + uVar9);
      iVar7 = (*(code *)param_1)(*(byte **)((int)&PTR_s_VEngineCvar007_10033008 + uVar9),0);
      iVar4 = DAT_10034e0c;
      *piVar2 = iVar7;
      bVar10 = false;
      iVar7 = 0;
      if (0 < iVar4) {
        do {
          if ((int *)(&DAT_10034c60)[iVar7 * 2] == piVar2) {
            (&DAT_10034c60)[iVar7 * 2] = piVar2;
            bVar10 = true;
          }
          iVar7 = iVar7 + 1;
        } while (iVar7 < iVar4);
        if (bVar10) goto LAB_1000319f;
      }
      uVar3 = DAT_10034e08;
      if (*piVar2 != 0) {
        DAT_10034e0c = iVar4 + 1;
        (&DAT_10034c60)[iVar4 * 2] = piVar2;
        (&DAT_10034c64)[iVar4 * 2] = uVar3;
      }
    }
LAB_1000319f:
    uVar9 = uVar9 + 8;
    if (0x19f < uVar9) {
      return;
    }
  } while( true );
}



void FUN_100031c0(void)

{
  undefined8 *puVar1;
  int iVar2;
  double dVar3;
  double dVar4;
  
  iVar2 = 0;
  puVar1 = &DAT_10034e18;
  do {
    dVar3 = (double)iVar2 * 2.0 * 3.141592653589793 * 0.00390625;
    dVar4 = (double)(int)((ulonglong)(double)iVar2 >> 0x20) * 2.0 * 3.141592653589793 * 0.00390625;
    ___sse2_sin2();
    iVar2 = iVar2 + 2;
    *puVar1 = CONCAT44((float)dVar4,(float)dVar3);
    puVar1 = puVar1 + 1;
  } while ((int)puVar1 < 0x10035218);
  return;
}



void __cdecl FUN_10003220(undefined4 param_1,float param_2,float param_3,int param_4)

{
  if (DAT_10034e10 == '\0') {
    DAT_10034e10 = '\x01';
    FUN_100031c0();
    FUN_10003370(param_1,param_2,param_3,param_4);
    FUN_10003700(0x31415926);
  }
  return;
}



undefined4 * __thiscall FUN_10003280(void *this,undefined4 *param_1)

{
  *(undefined4 *)this = *param_1;
  *(undefined4 *)((int)this + 4) = param_1[1];
  *(undefined4 *)((int)this + 8) = param_1[2];
  *(undefined4 *)((int)this + 0xc) = param_1[3];
  *(undefined4 *)((int)this + 0x10) = param_1[4];
  *(undefined4 *)((int)this + 0x14) = param_1[5];
  *(undefined4 *)((int)this + 0x18) = param_1[6];
  *(undefined4 *)((int)this + 0x1c) = param_1[7];
  *(undefined4 *)((int)this + 0x20) = param_1[8];
  *(undefined4 *)((int)this + 0x24) = param_1[9];
  *(undefined4 *)((int)this + 0x28) = param_1[10];
  *(undefined4 *)((int)this + 0x2c) = param_1[0xb];
  *(undefined4 *)((int)this + 0x30) = param_1[0xc];
  *(undefined4 *)((int)this + 0x34) = param_1[0xd];
  *(undefined4 *)((int)this + 0x38) = param_1[0xe];
  *(undefined4 *)((int)this + 0x3c) = param_1[0xf];
  return (undefined4 *)this;
}



void __cdecl FUN_100032f0(undefined4 *param_1)

{
  *param_1 = 0x3f800000;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  param_1[4] = 0;
  param_1[5] = 0x3f800000;
  param_1[6] = 0;
  param_1[7] = 0;
  param_1[8] = 0;
  param_1[9] = 0;
  param_1[10] = 0x3f800000;
  param_1[0xb] = 0;
  param_1[0xc] = 0;
  param_1[0xd] = 0;
  param_1[0xe] = 0;
  param_1[0xf] = 0x3f800000;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_10003370(float param_1,float param_2,float param_3,int param_4)

{
  int iVar1;
  int iVar2;
  undefined8 *puVar3;
  float fVar4;
  float fVar5;
  double dVar6;
  undefined auVar7 [16];
  undefined auVar8 [16];
  double dVar9;
  float local_14;
  
  if (0.0 < param_3) {
    if (param_3 <= 1.0) {
      fVar5 = 0.125 - param_3 * param_3 * 0.075;
    }
    else {
      fVar5 = 0.05;
    }
  }
  else {
    fVar5 = 0.125;
  }
  iVar2 = 0;
  do {
    fVar4 = (float)iVar2 * 0.003921569;
    ___libm_sse2_powf();
    iVar1 = (int)(fVar4 * 255.0);
    if (iVar1 < 0) {
      iVar1 = 0;
    }
    else if (0xff < iVar1) {
      iVar1 = 0xff;
    }
    (&DAT_1003a228)[iVar2] = (char)iVar1;
    iVar2 = iVar2 + 1;
  } while (iVar2 < 0x100);
  iVar2 = 0;
  do {
    fVar4 = (float)iVar2 * 0.0009775171;
    if (1.0 < param_3) {
      fVar4 = fVar4 * param_3;
    }
    if (fVar5 < fVar4) {
      fVar4 = ((fVar4 - fVar5) / (1.0 - fVar5)) * 0.875 + 0.125;
    }
    else {
      fVar4 = (fVar4 / fVar5) * 0.125;
    }
    ___libm_sse2_powf();
    iVar1 = (int)(fVar4 * 255.0);
    if (iVar1 < 0) {
      iVar1 = 0;
    }
    else if (0xff < iVar1) {
      iVar1 = 0xff;
    }
    (&DAT_1003b728)[iVar2] = iVar1;
    iVar2 = iVar2 + 1;
  } while (iVar2 < 0x400);
  iVar2 = 0;
  do {
    auVar7 = CONCAT412((float)(iVar2 + 3) * 0.003921569,
                       CONCAT48((float)(iVar2 + 2) * 0.003921569,
                                CONCAT44((float)(iVar2 + 1) * 0.003921569,(float)iVar2 * 0.003921569
                                        )));
    auVar8 = auVar7;
    ___sse2_powf4();
    *(undefined (*) [16])(&DAT_1003a328 + iVar2 * 4) = auVar8;
    auVar8 = auVar7;
    ___sse2_powf4();
    *(undefined (*) [16])(&DAT_1003cb28 + iVar2 * 4) = auVar8;
    ___sse2_powf4();
    *(undefined (*) [16])(&DAT_1003c728 + iVar2 * 4) = auVar7;
    iVar2 = iVar2 + 4;
  } while (iVar2 < 0x100);
  iVar2 = 0;
  puVar3 = &DAT_1003a728;
  divpd(_DAT_10019c80,CONCAT88((double)param_2,(double)param_2));
  do {
    dVar6 = (double)iVar2 * 0.0009775171065493646;
    dVar9 = (double)(int)((ulonglong)(double)iVar2 >> 0x20) * 0.0009775171065493646;
    ___sse2_pow2();
    iVar2 = iVar2 + 2;
    *puVar3 = CONCAT44((int)(dVar9 * 255.0),(int)(dVar6 * 255.0));
    puVar3 = puVar3 + 1;
  } while ((int)puVar3 < 0x1003b728);
  local_14 = 1.0;
  if (param_4 == 2) {
    local_14 = 0.5;
  }
  else if (param_4 == 4) {
    local_14 = 0.25;
  }
  iVar2 = 0;
  do {
    dVar6 = (double)iVar2 * 0.0009765625;
    ___libm_sse2_pow();
    fVar5 = (float)dVar6 * local_14;
    (&DAT_10035220)[iVar2] = fVar5;
    if (1.0 < fVar5) {
      (&DAT_10035220)[iVar2] = 0x3f800000;
    }
    iVar1 = (int)ROUND((float)dVar6 * 255.0 * local_14);
    if (iVar1 < 0) {
      iVar1 = 0;
    }
    else if (0xff < iVar1) {
      iVar1 = 0xff;
    }
    (&DAT_10039220)[iVar2] = (char)iVar1;
    iVar2 = iVar2 + 1;
  } while (iVar2 < 0x1000);
  return;
}



void __cdecl FUN_10003700(int param_1)

{
  uint uVar1;
  uint uVar2;
  undefined4 *puVar3;
  int iVar4;
  float *pfVar5;
  int iVar6;
  
  puVar3 = &DAT_1003d2b0;
  iVar6 = 0;
  do {
    *puVar3 = puVar3 + -0x80;
    pfVar5 = (float *)(puVar3 + -0xda);
    uVar1 = param_1 + iVar6;
    puVar3[1] = puVar3 + -4;
    iVar4 = 0x37;
    do {
      uVar2 = uVar1 * -0x44bf19d3 + 0xbb40e62d;
      pfVar5[-2] = ((float)(uVar1 >> 0x10) + 0.0) * 1.525879e-05;
      uVar1 = uVar2 * -0x44bf19d3 + 0xbb40e62d;
      pfVar5[-1] = ((float)(uVar2 >> 0x10) + 0.0) * 1.525879e-05;
      uVar2 = uVar1 * -0x44bf19d3 + 0xbb40e62d;
      *pfVar5 = ((float)(uVar1 >> 0x10) + 0.0) * 1.525879e-05;
      uVar1 = uVar2 * -0x44bf19d3 + 0xbb40e62d;
      pfVar5[1] = ((float)(uVar2 >> 0x10) + 0.0) * 1.525879e-05;
      pfVar5 = pfVar5 + 4;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
    puVar3 = puVar3 + 0xe0;
    iVar6 = iVar6 + 1;
  } while ((int)puVar3 < 0x100442b0);
  return;
}



void WriteMiniDump(void)

{
                    // WARNING: Could not recover jumptable at 0x10003820. Too many branches
                    // WARNING: Treating indirect jump as call
  WriteMiniDump();
  return;
}



undefined4 * __thiscall FUN_10003830(void *this,undefined4 param_1,undefined4 param_2)

{
  *(undefined4 *)((int)this + 4) = param_2;
  *(undefined4 *)this = param_1;
  *(void **)((int)this + 8) = DAT_10043fc8;
  DAT_10043fc8 = this;
  return (undefined4 *)this;
}



undefined4 FUN_100038d0(void)

{
  return 0x10003860;
}



undefined4 __cdecl CreateInterface(undefined *param_1,undefined4 *param_2)

{
  code **ppcVar1;
  code cVar2;
  code *pcVar3;
  uint uVar4;
  undefined4 uVar5;
  code *pcVar6;
  code **ppcVar7;
  bool bVar8;
  
                    // 0x38e0  1  CreateInterface
  ppcVar7 = DAT_10043fc8;
  if (DAT_10043fc8 != (code **)0x0) {
    do {
      pcVar6 = ppcVar7[1];
      pcVar3 = (code *)param_1;
      do {
        cVar2 = *pcVar6;
        bVar8 = (byte)cVar2 < (byte)*pcVar3;
        if (cVar2 != *pcVar3) {
LAB_10003897:
          uVar4 = -(uint)bVar8 | 1;
          goto LAB_1000389c;
        }
        if (cVar2 == (code)0x0) break;
        cVar2 = pcVar6[1];
        bVar8 = (byte)cVar2 < (byte)pcVar3[1];
        if (cVar2 != pcVar3[1]) goto LAB_10003897;
        pcVar6 = pcVar6 + 2;
        pcVar3 = pcVar3 + 2;
      } while (cVar2 != (code)0x0);
      uVar4 = 0;
LAB_1000389c:
      if (uVar4 == 0) {
        if (param_2 != (undefined4 *)0x0) {
          *param_2 = 0;
        }
                    // WARNING: Could not recover jumptable at 0x100038cc. Too many branches
                    // WARNING: Treating indirect jump as call
        uVar5 = (**ppcVar7)();
        return uVar5;
      }
      ppcVar1 = ppcVar7 + 2;
      ppcVar7 = (code **)*ppcVar1;
    } while ((code **)*ppcVar1 != (code **)0x0);
  }
  if (param_2 != (undefined4 *)0x0) {
    *param_2 = 1;
  }
  return 0;
}



int * __thiscall
FUN_100038f0(void *this,int param_1,int param_2,undefined *param_3,uint param_4,undefined *param_5)

{
  code *pcVar1;
  undefined *puVar2;
  
  *(int *)((int)this + 0x18) = param_2;
  pcVar1 = FUN_10002220;
  if (param_5 != (undefined *)0x0) {
    pcVar1 = (code *)param_5;
  }
  *(undefined4 *)((int)this + 4) = 0;
  *(code **)((int)this + 0x1c) = pcVar1;
  *(undefined ***)this = ConCommand::vftable;
  *(undefined *)((int)this + 8) = 0;
  *(int *)((int)this + 0xc) = param_1;
  *(byte *)((int)this + 0x20) = param_5 != (undefined *)0x0 | *(byte *)((int)this + 0x20) & 0xfa | 2
  ;
  puVar2 = PTR_DAT_100331b0;
  if (param_3 != (undefined *)0x0) {
    puVar2 = param_3;
  }
  *(undefined **)((int)this + 0x10) = puVar2;
  *(uint *)((int)this + 0x14) = param_4;
  if ((param_4 & 1) == 0) {
    *(void **)((int)this + 4) = DAT_100443d0;
    DAT_100443d0 = this;
  }
  else {
    *(undefined4 *)((int)this + 4) = 0;
  }
  if (DAT_100443d4 != 0) {
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x2c))();
  }
  return (int *)this;
}



undefined4 * __thiscall
FUN_10003980(void *this,int param_1,undefined *param_2,uint param_3,undefined *param_4)

{
  *(undefined *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined ***)((int)this + 0x18) = IConVar::vftable;
  *(undefined ***)this = ConVar::vftable;
  *(undefined ***)((int)this + 0x18) = ConVar::vftable;
  *(undefined4 *)((int)this + 0x44) = 0;
  *(undefined4 *)((int)this + 0x48) = 0;
  *(undefined4 *)((int)this + 0x4c) = 0;
  *(undefined4 *)((int)this + 0x50) = 0;
  *(undefined4 *)((int)this + 0x54) = *(undefined4 *)((int)this + 0x44);
  FUN_10003fd0(this,param_1,param_2,param_3,param_4,0,0,0,0,0);
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_10003a10(void *this,int param_1,undefined *param_2,uint param_3)

{
  *(undefined *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined ***)((int)this + 0x18) = IConVar::vftable;
  *(undefined ***)this = ConVar::vftable;
  *(undefined ***)((int)this + 0x18) = ConVar::vftable;
  *(undefined4 *)((int)this + 0x44) = 0;
  *(undefined4 *)((int)this + 0x48) = 0;
  *(undefined4 *)((int)this + 0x4c) = 0;
  *(undefined4 *)((int)this + 0x50) = 0;
  *(undefined4 *)((int)this + 0x54) = *(undefined4 *)((int)this + 0x44);
  FUN_10003fd0(this,param_1,param_2,param_3,(undefined *)0x0,0,0,0,0,0);
  return (undefined4 *)this;
}



void __fastcall FUN_10003aa0(int *param_1)

{
  int iVar1;
  
  param_1[3] = 0;
  if (-1 < param_1[2]) {
    if (*param_1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*param_1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  iVar1 = *param_1;
  param_1[4] = iVar1;
  if (-1 < param_1[2]) {
    if (iVar1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  return;
}



void __fastcall FUN_10003b00(undefined4 *param_1)

{
  *param_1 = ConCommandBase::vftable;
  return;
}



void __fastcall FUN_10003b10(undefined4 *param_1)

{
  *param_1 = ConVar::vftable;
  param_1[6] = ConVar::vftable;
  if (param_1[9] != 0) {
    FUN_10001730(param_1[9]);
    param_1[9] = 0;
  }
  FUN_10003aa0(param_1 + 0x11);
  *param_1 = ConCommandBase::vftable;
  return;
}



undefined4 * __thiscall FUN_10003b50(void *this,byte param_1)

{
  *(undefined ***)this = ConVar::vftable;
  *(undefined ***)((int)this + 0x18) = ConVar::vftable;
  if (*(int *)((int)this + 0x24) != 0) {
    FUN_10001730(*(int *)((int)this + 0x24));
    *(undefined4 *)((int)this + 0x24) = 0;
  }
  FUN_10003aa0((int *)((int)this + 0x44));
  *(undefined ***)this = ConCommandBase::vftable;
  if ((param_1 & 1) != 0) {
    FUN_10001730(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_10003ba0(void *this,byte param_1)

{
  *(undefined ***)this = ConCommandBase::vftable;
  if ((param_1 & 1) != 0) {
    FUN_10001730(this);
  }
  return (undefined4 *)this;
}



void __thiscall FUN_10003bd0(void *this,uint param_1)

{
  *(uint *)((int)this + 0x14) = *(uint *)((int)this + 0x14) | param_1;
  return;
}



void __thiscall FUN_10003be0(void *this,uint param_1)

{
  uint *puVar1;
  
  puVar1 = (uint *)(*(int *)((int)this + 0x1c) + 0x14);
  *puVar1 = *puVar1 | param_1;
  return;
}



int __thiscall FUN_10003bf0(void *this,undefined4 *param_1)

{
  void *_Src;
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = *(int *)((int)this + 0xc);
  if (*(int *)((int)this + 4) < iVar2 + 1) {
    FUN_10004210(this,(iVar2 - *(int *)((int)this + 4)) + 1);
  }
  *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
                    // WARNING: Load size is inaccurate
  iVar3 = (*(int *)((int)this + 0xc) - iVar2) + -1;
  *(int *)((int)this + 0x10) = *this;
  if (0 < iVar3) {
    _Src = (void *)(*this + iVar2 * 4);
    FID_conflict__memcpy((void *)((int)_Src + 4),_Src,iVar3 * 4);
  }
                    // WARNING: Load size is inaccurate
  puVar1 = (undefined4 *)(*this + iVar2 * 4);
  if (puVar1 != (undefined4 *)0x0) {
    *puVar1 = *param_1;
  }
  return iVar2;
}



// WARNING: Function: __alloca_probe replaced with injection: alloca_probe

int __thiscall FUN_10003c50(void *this,int param_1,int *param_2)

{
  int iVar1;
  void *pvVar2;
  int iVar3;
  char *pcVar4;
  char local_1018 [4096];
  char *local_18;
  undefined4 local_14;
  int local_10;
  undefined4 local_c;
  int local_8;
  
  local_8 = 0x10003c5d;
  if ((*(byte *)((int)this + 0x20) & 4) == 0) {
    if (*(code **)((int)this + 0x1c) != (code *)0x0) {
      local_8 = (**(code **)((int)this + 0x1c))(param_1,local_1018);
      if (0 < local_8) {
        pcVar4 = local_1018;
        param_1 = local_8;
        do {
          FUN_10004e00(&local_18,pcVar4);
          iVar1 = param_2[3];
          if (param_2[1] < iVar1 + 1) {
            FUN_100042c0(param_2,(iVar1 - param_2[1]) + 1);
          }
          param_2[3] = param_2[3] + 1;
          iVar3 = (param_2[3] - iVar1) + -1;
          param_2[4] = *param_2;
          if (0 < iVar3) {
            pvVar2 = (void *)(iVar1 * 0x10 + *param_2);
            FID_conflict__memcpy((void *)((int)pvVar2 + 0x10),pvVar2,iVar3 * 0x10);
          }
          pvVar2 = (void *)(iVar1 * 0x10 + *param_2);
          if (pvVar2 != (void *)0x0) {
            FUN_10004d80(pvVar2,&local_18);
          }
          local_c = 0;
          if (-1 < local_10) {
            if (local_18 != (char *)0x0) {
              (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_18);
              local_18 = (char *)0x0;
            }
            local_14 = 0;
          }
          pcVar4 = pcVar4 + 0x40;
          param_1 = param_1 + -1;
        } while (param_1 != 0);
      }
      return local_8;
    }
  }
  else if (*(undefined4 **)((int)this + 0x1c) != (undefined4 *)0x0) {
    iVar1 = (**(code **)**(undefined4 **)((int)this + 0x1c))(param_1,param_2);
    return iVar1;
  }
  return 0;
}



byte __fastcall FUN_10003d60(int param_1)

{
  return *(byte *)(param_1 + 0x20) & 1;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe
// WARNING: Unable to track spacebase fully for stack

void __thiscall FUN_10003d70(void *this,undefined4 param_1,undefined4 param_2)

{
  uint uVar1;
  int iVar2;
  code *pcVar3;
  int iVar4;
  int iVar5;
  undefined4 uVar6;
  undefined *puVar7;
  undefined *puVar8;
  undefined *puVar9;
  char *apcStack36 [2];
  void *apvStack28 [2];
  uint uStack20;
  
  uStack20 = 0x10003d86;
  iVar4 = -(*(int *)((int)this + 0x28) + 0xfU & 0xfffffff0);
  *(int *)((int)&uStack20 + iVar4) = *(int *)((int)this + 0x28);
  *(undefined4 *)((int)apvStack28 + iVar4 + 4) = *(undefined4 *)((int)this + 0x24);
  *(undefined **)((int)apvStack28 + iVar4) = &stack0xfffffff0 + iVar4;
  *(undefined4 *)((int)apcStack36 + iVar4 + 4) = 0x10003d92;
  FID_conflict__memcpy
            (*(void **)((int)apvStack28 + iVar4),*(void **)((int)apvStack28 + iVar4 + 4),
             *(size_t *)((int)&uStack20 + iVar4));
  *(undefined4 *)((int)apcStack36 + iVar4 + 4) = param_1;
  *(undefined4 *)((int)apcStack36 + iVar4) = 0x10003d9a;
  iVar5 = FUN_10004d00(*(char **)((int)apcStack36 + iVar4 + 4));
  puVar9 = &stack0xfffffff0 + iVar4;
  uVar1 = iVar5 + 1;
  if (*(uint *)((int)this + 0x28) <= uVar1 && uVar1 != *(uint *)((int)this + 0x28)) {
    if (*(int *)((int)this + 0x24) != 0) {
      *(int *)((int)&uStack20 + iVar4) = *(int *)((int)this + 0x24);
      *(undefined4 *)((int)apvStack28 + iVar4 + 4) = 0x10003db2;
      FUN_10001730(*(undefined4 *)((int)&uStack20 + iVar4));
    }
    puVar9 = &stack0xfffffff0 + iVar4;
    *(uint *)((int)&uStack20 + iVar4) = uVar1;
    *(undefined4 *)((int)apvStack28 + iVar4 + 4) = 0x10003dbb;
    uVar6 = FUN_100017b0(*(undefined4 *)((int)&uStack20 + iVar4));
    *(undefined4 *)((int)this + 0x24) = uVar6;
    *(uint *)((int)this + 0x28) = uVar1;
  }
  *(uint *)(puVar9 + -4) = uVar1;
  *(undefined4 *)(puVar9 + -8) = param_1;
  *(undefined4 *)(puVar9 + -0xc) = *(undefined4 *)((int)this + 0x24);
  *(undefined4 *)(puVar9 + -0x10) = 0x10003dd0;
  FID_conflict__memcpy(*(void **)(puVar9 + -0xc),*(void **)(puVar9 + -8),*(size_t *)(puVar9 + -4));
  iVar5 = 0;
  puVar7 = puVar9;
  if (0 < *(int *)((int)this + 0x50)) {
    do {
      iVar2 = *(int *)((int)this + 0x44);
      *(int *)(puVar7 + -4) = (int)this + 0x18;
      *(undefined4 *)(puVar7 + -4) = param_2;
      pcVar3 = *(code **)(iVar2 + iVar5 * 4);
      *(undefined **)(puVar7 + -8) = &stack0xfffffff0 + iVar4;
      *(int *)(puVar7 + -0xc) = (int)this + 0x18;
      puVar8 = puVar7 + -0x10;
      *(undefined4 *)(puVar7 + -0x10) = 0x10003df5;
      (*pcVar3)();
      iVar5 = iVar5 + 1;
      puVar9 = puVar8 + 0xc;
      puVar7 = puVar8 + 0xc;
    } while (iVar5 < *(int *)((int)this + 0x50));
  }
  if (DAT_10034b8c != (int *)0x0) {
    iVar5 = *DAT_10034b8c;
    *(int **)(puVar9 + -4) = DAT_10034b8c;
    *(undefined4 *)(puVar9 + -4) = param_2;
    *(undefined **)(puVar9 + -8) = &stack0xfffffff0 + iVar4;
    *(void **)(puVar9 + -0xc) = this;
    pcVar3 = *(code **)(iVar5 + 0x58);
    *(undefined4 *)(puVar9 + -0x10) = 0x10003e1d;
    (*pcVar3)();
  }
  return;
}



undefined4 __thiscall FUN_10003e30(void *this,float *param_1)

{
  float fVar1;
  uint3 uVar2;
  
  uVar2 = (uint3)((uint)param_1 >> 8);
  if ((*(char *)((int)this + 0x34) != '\0') &&
     (fVar1 = *(float *)((int)this + 0x38), *param_1 <= fVar1 && fVar1 != *param_1)) {
    *param_1 = fVar1;
    return CONCAT31(uVar2,1);
  }
  if ((*(char *)((int)this + 0x3c) != '\0') && (*(float *)((int)this + 0x40) < *param_1)) {
    *param_1 = *(float *)((int)this + 0x40);
    return CONCAT31(uVar2,1);
  }
  return (uint)uVar2 << 8;
}



void __cdecl FUN_10003e80(undefined4 param_1,undefined **param_2)

{
  int *piVar1;
  int *piVar2;
  
  if ((DAT_10034b8c != (int *)0x0) && (DAT_100444e4 == '\0')) {
    DAT_100444e0 = param_1;
    DAT_100444e4 = '\x01';
    DAT_100331a8 = (**(code **)(*DAT_10034b8c + 0x24))();
    DAT_100443d4 = &PTR_vftable_100331ac;
    piVar2 = DAT_100443d0;
    if (param_2 != (undefined **)0x0) {
      DAT_100443d4 = param_2;
    }
    while (piVar2 != (int *)0x0) {
      piVar1 = (int *)piVar2[1];
      (**(code **)(*piVar2 + 0xc))(DAT_100444e0);
      (**(code **)(*piVar2 + 0x2c))();
      piVar2 = piVar1;
    }
    (**(code **)(*DAT_10034b8c + 0x80))();
    (**(code **)(*DAT_10034b8c + 0xa4))();
    DAT_100443d0 = (int *)0x0;
  }
  return;
}



void FUN_10003f20(void)

{
  if ((DAT_10034b8c != (int *)0x0) && (DAT_100444e4 != '\0')) {
    (**(code **)(*DAT_10034b8c + 0x84))(DAT_100331a8);
    (**(code **)(*DAT_10034b8c + 0x30))(DAT_100331a8);
    DAT_100331a8 = 0xffffffff;
    DAT_100444e4 = '\0';
  }
  return;
}



void __thiscall FUN_10003f70(void *this,int param_1,undefined *param_2,uint param_3)

{
  undefined *puVar1;
  
  puVar1 = PTR_DAT_100331b0;
  *(int *)((int)this + 0xc) = param_1;
  *(undefined *)((int)this + 8) = 0;
  if (param_2 != (undefined *)0x0) {
    puVar1 = param_2;
  }
  *(undefined **)((int)this + 0x10) = puVar1;
  *(uint *)((int)this + 0x14) = param_3;
  if ((param_3 & 1) == 0) {
    *(void **)((int)this + 4) = DAT_100443d0;
    DAT_100443d0 = this;
  }
  else {
    *(undefined4 *)((int)this + 4) = 0;
  }
  if (DAT_100443d4 != 0) {
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x2c))();
  }
  return;
}



void __thiscall
FUN_10003fd0(void *this,int param_1,undefined *param_2,uint param_3,undefined *param_4,
            undefined param_5,int param_6,undefined param_7,int param_8,int param_9)

{
  char *pcVar1;
  char cVar2;
  void *_Dst;
  uint uVar3;
  char *pcVar4;
  undefined *puVar5;
  float10 fVar6;
  
  puVar5 = PTR_DAT_100331b4;
  if (param_2 != (undefined *)0x0) {
    puVar5 = param_2;
  }
  *(undefined *)((int)this + 0x34) = param_5;
  *(int *)((int)this + 0x38) = param_6;
  *(void **)((int)this + 0x1c) = this;
  *(undefined **)((int)this + 0x20) = puVar5;
  *(undefined *)((int)this + 0x3c) = param_7;
  *(int *)((int)this + 0x40) = param_8;
  if (param_9 != 0) {
    FUN_10003bf0((void *)((int)this + 0x44),&param_9);
  }
  pcVar4 = *(char **)((int)this + 0x20);
  pcVar1 = pcVar4 + 1;
  do {
    cVar2 = *pcVar4;
    pcVar4 = pcVar4 + 1;
  } while (cVar2 != '\0');
  *(char **)((int)this + 0x28) = pcVar4 + (1 - (int)pcVar1);
  _Dst = (void *)FUN_100017b0(pcVar4 + (1 - (int)pcVar1));
  *(void **)((int)this + 0x24) = _Dst;
  FID_conflict__memcpy(_Dst,*(void **)((int)this + 0x20),*(size_t *)((int)this + 0x28));
  uVar3 = FUN_10004380(this,*(char **)((int)this + 0x24));
  if ((char)uVar3 == '\0') {
    fVar6 = FUN_10004870(*(char **)((int)this + 0x24));
    *(float *)((int)this + 0x2c) = (float)fVar6;
    if ((*(uint *)((int)this + 0x2c) & 0x7f800000) == 0x7f800000) {
      Warning("ConVar(%s) defined with infinite float value (%s)\n",param_1,
              *(undefined4 *)((int)this + 0x24));
      *(undefined4 *)((int)this + 0x2c) = 0x7f7fffff;
    }
    *(int *)((int)this + 0x30) = (int)fVar6;
  }
  puVar5 = PTR_DAT_100331b0;
  if (param_4 != (undefined *)0x0) {
    puVar5 = param_4;
  }
  *(int *)((int)this + 0xc) = param_1;
  *(undefined *)((int)this + 8) = 0;
  *(undefined **)((int)this + 0x10) = puVar5;
  *(uint *)((int)this + 0x14) = param_3;
  if ((param_3 & 1) == 0) {
    *(void **)((int)this + 4) = DAT_100443d0;
    DAT_100443d0 = this;
  }
  else {
    *(undefined4 *)((int)this + 4) = 0;
  }
  if (DAT_100443d4 != 0) {
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x2c))();
  }
  return;
}



void __thiscall FUN_10004100(void *this,undefined4 param_1)

{
  if ((*(byte *)((int)this + 0x20) & 2) == 0) {
    if ((*(byte *)((int)this + 0x20) & 4) == 0) {
      if (*(code **)((int)this + 0x18) != (code *)0x0) {
        (**(code **)((int)this + 0x18))();
      }
    }
    else if (*(undefined4 **)((int)this + 0x18) != (undefined4 *)0x0) {
                    // WARNING: Could not recover jumptable at 0x1000412b. Too many branches
                    // WARNING: Treating indirect jump as call
      (**(code **)**(undefined4 **)((int)this + 0x18))();
      return;
    }
  }
  else if (*(code **)((int)this + 0x18) != (code *)0x0) {
    (**(code **)((int)this + 0x18))(param_1);
    return;
  }
  return;
}



undefined4 __fastcall FUN_10004140(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 4) + 0xc);
}



undefined4 FUN_10004150(void)

{
  return DAT_100331a8;
}



undefined4 __fastcall FUN_10004160(int param_1)

{
  return *(undefined4 *)(param_1 + 0x14);
}



undefined4 __fastcall FUN_10004170(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x1c) + 0x14);
}



float10 __fastcall FUN_10004180(int *param_1)

{
  float10 fVar1;
  
  if ((int *)param_1[7] == param_1) {
    return (float10)(float)param_1[0xb];
  }
                    // WARNING: Could not recover jumptable at 0x10004192. Too many branches
                    // WARNING: Treating indirect jump as call
  fVar1 = (float10)(**(code **)(*(int *)param_1[7] + 0x30))();
  return fVar1;
}



undefined4 __fastcall FUN_100041a0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x10);
}



undefined4 __fastcall FUN_100041b0(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x1c) + 0x10);
}



int __fastcall FUN_100041c0(int *param_1)

{
  int iVar1;
  
  if ((int *)param_1[7] == param_1) {
    return param_1[0xc];
  }
                    // WARNING: Could not recover jumptable at 0x100041cf. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = (**(code **)(*(int *)param_1[7] + 0x34))();
  return iVar1;
}



undefined * FUN_100041e0(void)

{
  return &DAT_10019cb8;
}



void FUN_100041e6(void)

{
  FUN_100041e0();
  return;
}



undefined4 __fastcall FUN_100041f0(int param_1)

{
  return *(undefined4 *)(param_1 + 0xc);
}



undefined4 __fastcall FUN_10004200(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x1c) + 0xc);
}



void __fastcall FUN_10004207(int param_1)

{
  FUN_10004200(param_1 + -0x18);
  return;
}



void __thiscall FUN_10004210(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint uVar5;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar3 = *(uint *)((int)this + 4);
  uVar5 = param_1 + uVar3;
  if (iVar1 == 0) {
    if (uVar3 == 0) {
      uVar3 = 8;
      uVar2 = uVar5;
      if ((int)uVar5 < 9) goto LAB_10004273;
    }
    else {
      if ((int)uVar5 <= (int)uVar3) goto LAB_10004273;
      do {
        uVar3 = uVar3 * 2;
        uVar2 = uVar3;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
  else {
    uVar2 = ((int)(uVar5 - 1) / iVar1 + 1) * iVar1;
  }
  uVar3 = uVar2;
  if ((int)uVar3 < (int)uVar5) {
    if ((uVar3 == 0) && (0x7fffffff < uVar5)) {
      uVar3 = 0xffffffff;
    }
    else {
      do {
        uVar3 = (int)(uVar3 + uVar5) / 2;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
LAB_10004273:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar3;
  if (*this == 0) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar3 * 4);
    *(undefined4 *)this = uVar4;
    return;
  }
  uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this,uVar3 << 2);
  *(undefined4 *)this = uVar4;
  return;
}



void __thiscall FUN_100042c0(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint uVar5;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar3 = *(uint *)((int)this + 4);
  uVar5 = param_1 + uVar3;
  if (iVar1 == 0) {
    if (uVar3 == 0) {
      uVar3 = 2;
      uVar2 = uVar5;
      if ((int)uVar5 < 3) goto LAB_10004323;
    }
    else {
      if ((int)uVar5 <= (int)uVar3) goto LAB_10004323;
      do {
        uVar3 = uVar3 * 2;
        uVar2 = uVar3;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
  else {
    uVar2 = ((int)(uVar5 - 1) / iVar1 + 1) * iVar1;
  }
  uVar3 = uVar2;
  if ((int)uVar3 < (int)uVar5) {
    if ((uVar3 == 0) && (0x7fffffff < uVar5)) {
      uVar3 = 0xffffffff;
    }
    else {
      do {
        uVar3 = (int)(uVar3 + uVar5) / 2;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
LAB_10004323:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar3;
  if (*this == 0) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar3 << 4);
    *(undefined4 *)this = uVar4;
    return;
  }
  uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this);
  *(undefined4 *)this = uVar4;
  return;
}



void __fastcall FUN_10004360(undefined4 param_1)

{
  if (DAT_100443d4 != (undefined4 *)0x0) {
    (**(code **)*DAT_100443d4)(param_1);
  }
  return;
}



uint __thiscall FUN_10004380(void *this,char *param_1)

{
  uint uVar1;
  uint local_18;
  uint local_14;
  uint local_10;
  uint local_c;
  
  uVar1 = FUN_10007f03(param_1,(int)"%i %i %i %i");
  if ((int)uVar1 < 3) {
    return uVar1 & 0xffffff00;
  }
  if (uVar1 == 3) {
    local_c = 0xff;
  }
  if ((((local_18 < 0x100) && (local_14 < 0x100)) && (local_10 < 0x100)) && (local_c < 0x100)) {
    *(char *)((int)this + 0x30) = (char)local_18;
    *(char *)((int)this + 0x33) = (char)local_c;
    *(char *)((int)this + 0x31) = (char)local_14;
    *(char *)((int)this + 0x32) = (char)local_10;
    *(float *)((int)this + 0x2c) = (float)*(int *)((int)this + 0x30);
    return local_c & 0xffffff00 | 1;
  }
  return local_c & 0xffffff00;
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall FUN_10004420(void *this,uint param_1)

{
  uint local_8;
  
  local_8._0_3_ = (uint3)param_1 & 0xff | (uint3)((param_1 >> 8 & 0xff) << 8);
                    // WARNING: Load size is inaccurate
  local_8._0_3_ = (uint3)local_8 | (uint3)(byte)(param_1 >> 0x10) << 0x10;
  local_8 = param_1 & 0xff000000 | (uint)(uint3)local_8;
  (**(code **)(*this + 0x40))(local_8);
  return;
}



void __thiscall FUN_10004450(void *this,float param_1)

{
  char cVar1;
  char local_28 [32];
  undefined4 local_8;
  
  if (param_1 != *(float *)((int)this + 0x2c)) {
                    // WARNING: Load size is inaccurate
    cVar1 = (**(code **)(*this + 8))(0xb00000);
    if ((cVar1 != '\0') && (DAT_10034b8c != (int *)0x0)) {
      cVar1 = (**(code **)(*DAT_10034b8c + 0x90))();
      if (cVar1 == '\0') {
        (**(code **)(*DAT_10034b8c + 0x94))();
        return;
      }
    }
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x48))(&param_1);
    local_8 = *(undefined4 *)((int)this + 0x2c);
    *(float *)((int)this + 0x2c) = param_1;
    *(int *)((int)this + 0x30) = (int)param_1;
    if ((*(uint *)((int)this + 0x14) & 0x1000) == 0) {
      FUN_10004c70(local_28,0x20,&DAT_10019cc0);
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x4c))(local_28,local_8);
    }
  }
  return;
}



void __thiscall FUN_10004520(void *this,float param_1)

{
  char cVar1;
  float fVar2;
  char local_28 [32];
  undefined4 local_8;
  
  fVar2 = param_1;
  if (param_1 != *(float *)((int)this + 0x30)) {
                    // WARNING: Load size is inaccurate
    cVar1 = (**(code **)(*this + 8))(0xb00000);
    if ((cVar1 != '\0') && (DAT_10034b8c != (int *)0x0)) {
      cVar1 = (**(code **)(*DAT_10034b8c + 0x90))();
      if (cVar1 == '\0') {
        (**(code **)(*DAT_10034b8c + 0x98))(this,fVar2);
        return;
      }
    }
                    // WARNING: Load size is inaccurate
    param_1 = (float)(int)fVar2;
    cVar1 = (**(code **)(*this + 0x48))(&param_1);
    if (cVar1 != '\0') {
      fVar2 = (float)(int)param_1;
    }
    local_8 = *(undefined4 *)((int)this + 0x2c);
    *(float *)((int)this + 0x2c) = param_1;
    *(float *)((int)this + 0x30) = fVar2;
    if ((*(uint *)((int)this + 0x14) & 0x1000) == 0) {
      FUN_10004c70(local_28,0x20,&DAT_10019cbc);
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x4c))(local_28,local_8);
    }
  }
  return;
}



void __thiscall FUN_100045f0(void *this,char *param_1)

{
  char *pcVar1;
  char cVar2;
  uint uVar3;
  undefined4 uVar4;
  char *pcVar5;
  float10 fVar6;
  char local_30 [32];
  double local_10;
  undefined4 local_8;
  
                    // WARNING: Load size is inaccurate
  cVar2 = (**(code **)(*this + 8))(0xb00000);
  if ((cVar2 != '\0') && (DAT_10034b8c != (int *)0x0)) {
    cVar2 = (**(code **)(*DAT_10034b8c + 0x90))();
    if (cVar2 == '\0') {
      (**(code **)(*DAT_10034b8c + 0x9c))(this,param_1);
      return;
    }
  }
  local_8 = *(undefined4 *)((int)this + 0x2c);
  pcVar5 = "";
  if (param_1 != (char *)0x0) {
    pcVar5 = param_1;
  }
  uVar3 = FUN_10004380(this,param_1);
  if ((char)uVar3 == '\0') {
    fVar6 = FUN_10004870(param_1);
    local_10 = (double)fVar6;
    pcVar1 = (char *)(float)fVar6;
    if (((uint)(char *)(float)fVar6 & 0x7f800000) == 0x7f800000) {
                    // WARNING: Load size is inaccurate
      uVar4 = (**(code **)(*this + 0x18))();
      Warning("Warning:  %s = \'%s\' is infinite, clamping value.\n",uVar4,param_1);
      param_1 = (char *)0x7f7fffff;
      local_10 = 3.402823466385289e+38;
      pcVar1 = param_1;
    }
    param_1 = pcVar1;
                    // WARNING: Load size is inaccurate
    cVar2 = (**(code **)(*this + 0x48))();
    if (cVar2 != '\0') {
      local_10 = (double)(float)param_1;
      FUN_10004c70(local_30,0x20,&DAT_10019cc0);
      pcVar5 = local_30;
    }
    *(char **)((int)this + 0x2c) = param_1;
    *(int *)((int)this + 0x30) = (int)local_10;
  }
  if ((*(uint *)((int)this + 0x14) & 0x1000) == 0) {
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x4c))(pcVar5,local_8);
  }
  return;
}



undefined FUN_10004740(void)

{
  return 1;
}



undefined FUN_10004750(void)

{
  return 0;
}



void FUN_10004755(void)

{
  FUN_10004750();
  return;
}



uint __thiscall FUN_10004760(void *this,uint param_1)

{
  return param_1 & 0xffffff00 | (uint)((*(uint *)((int)this + 0x14) & param_1) != 0);
}



uint __thiscall FUN_10004770(void *this,uint param_1)

{
  return param_1 & 0xffffff00 |
         (uint)((*(uint *)(*(int *)((int)this + 0x1c) + 0x14) & param_1) != 0);
}



void __thiscall FUN_10004783(void *this,uint param_1)

{
  FUN_10004770((void *)((int)this + -0x18),param_1);
  return;
}



undefined __fastcall FUN_10004790(int param_1)

{
  return *(undefined *)(param_1 + 8);
}



uint __fastcall FUN_100047a0(int param_1)

{
  return *(uint *)(param_1 + 0x1c) & 0xffffff00 | (uint)*(byte *)(*(uint *)(param_1 + 0x1c) + 8);
}



undefined4 FUN_100047b0(undefined4 param_1)

{
  undefined4 uVar1;
  
  uVar1 = (**(code **)(*DAT_10034b8c + 0x28))(param_1);
  return CONCAT31((int3)((uint)uVar1 >> 8),1);
}



void __thiscall FUN_100047d0(void *this,uint param_1)

{
  *(uint *)((int)this + 0x14) = *(uint *)((int)this + 0x14) & ~param_1;
  return;
}



void FUN_100047e0(void)

{
  return;
}



void __fastcall FUN_100047f0(int param_1)

{
                    // WARNING: Could not recover jumptable at 0x100047f9. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(**(int **)(param_1 + 4) + 0x40))();
  return;
}



void __thiscall FUN_10004800(void *this,undefined4 param_1)

{
  (**(code **)(**(int **)((int)this + 4) + 0x3c))(param_1);
  return;
}



void __fastcall FUN_10004820(int param_1)

{
                    // WARNING: Could not recover jumptable at 0x10004829. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(**(int **)(param_1 + 4) + 0x38))();
  return;
}



void __thiscall FUN_10004830(void *this,undefined4 param_1)

{
  (**(code **)(**(int **)((int)this + 4) + 0x44))(param_1);
  return;
}



void __cdecl thunk_FUN_10002f80(undefined **param_1,int param_2)

{
  int *piVar1;
  bool bVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  uint uVar6;
  int iStack12;
  code **ppcStack8;
  
  if (DAT_10034e0c < 0) {
    Error("APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n",DAT_10034e0c);
    DAT_10034e08 = DAT_10034e08 + 1;
    return;
  }
  if (DAT_10034e0c == 0) {
    ppcStack8 = (code **)param_2;
    if (0 < param_2) {
      do {
        uVar6 = 0;
        do {
          piVar1 = *(int **)((int)&PTR_DAT_1003300c + uVar6);
          if (*piVar1 == 0) {
            iVar4 = (*(code *)*param_1)(*(undefined4 *)((int)&PTR_s_VEngineCvar007_10033008 + uVar6)
                                        ,0);
            *piVar1 = iVar4;
            if (iVar4 != 0) {
              (&DAT_10034c60)[DAT_10034e0c * 2] = piVar1;
              iVar4 = DAT_10034e0c * 2;
              DAT_10034e0c = DAT_10034e0c + 1;
              (&DAT_10034c64)[iVar4] = DAT_10034e08;
            }
          }
          uVar6 = uVar6 + 8;
        } while (uVar6 < 0x1a0);
        param_1 = (code **)param_1 + 1;
        ppcStack8 = (code **)((int)ppcStack8 + -1);
      } while (ppcStack8 != (code **)0x0);
    }
  }
  else {
    iStack12 = param_2;
    if (0 < param_2) {
      ppcStack8 = (code **)param_1;
      do {
        uVar6 = 0;
        do {
          piVar1 = *(int **)((int)&PTR_DAT_1003300c + uVar6);
          iVar5 = (**ppcStack8)(*(undefined4 *)((int)&PTR_s_VEngineCvar007_10033008 + uVar6),0);
          iVar3 = DAT_10034e0c;
          iVar4 = DAT_10034e08;
          bVar2 = false;
          *piVar1 = iVar5;
          iVar5 = 0;
          if (iVar3 < 1) {
LAB_1000307b:
            if (*piVar1 != 0) {
              DAT_10034e0c = iVar3 + 1;
              (&DAT_10034c60)[iVar3 * 2] = piVar1;
              (&DAT_10034c64)[iVar3 * 2] = iVar4;
            }
          }
          else {
            do {
              if ((int *)(&DAT_10034c60)[iVar5 * 2] == piVar1) {
                (&DAT_10034c60)[iVar5 * 2] = piVar1;
                bVar2 = true;
              }
              iVar5 = iVar5 + 1;
            } while (iVar5 < iVar3);
            if (!bVar2) goto LAB_1000307b;
          }
          uVar6 = uVar6 + 8;
        } while (uVar6 < 0x1a0);
        ppcStack8 = ppcStack8 + 1;
        iStack12 = iStack12 + -1;
        if (iStack12 == 0) {
          DAT_10034e08 = iVar4 + 1;
          return;
        }
      } while( true );
    }
  }
  DAT_10034e08 = DAT_10034e08 + 1;
  return;
}



float10 __cdecl FUN_10004870(char *param_1)

{
  char *pcVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  float10 fVar6;
  double dVar7;
  ulonglong uVar8;
  double local_14;
  double local_c;
  
  if (*param_1 == '-') {
    iVar4 = -1;
  }
  else {
    iVar4 = 1;
    if (*param_1 != '+') goto LAB_1000488f;
  }
  param_1 = param_1 + 1;
LAB_1000488f:
  dVar7 = 0.0;
  local_14 = 0.0;
  local_c = 0.0;
  if ((*param_1 == '0') && ((param_1[1] == 'x' || (param_1[1] == 'X')))) {
    pcVar1 = param_1 + 2;
    while( true ) {
      while( true ) {
        while( true ) {
          iVar2 = (int)*pcVar1;
          pcVar1 = pcVar1 + 1;
          if (9 < iVar2 - 0x30U) break;
          dVar7 = (dVar7 * 16.0 + (double)iVar2) - 48.0;
        }
        if (5 < iVar2 - 0x61U) break;
        dVar7 = ((dVar7 * 16.0 + (double)iVar2) - 97.0) + 10.0;
      }
      if (5 < iVar2 - 0x41U) break;
      dVar7 = ((dVar7 * 16.0 + (double)iVar2) - 65.0) + 10.0;
    }
    return (float10)((double)iVar4 * dVar7);
  }
  if (*param_1 == '\'') {
    return (float10)(param_1[1] * iVar4);
  }
  iVar2 = 0;
  iVar3 = -1;
  do {
    while( true ) {
      iVar5 = iVar3;
      iVar3 = (int)*param_1;
      param_1 = param_1 + 1;
      if (iVar3 == 0x2e) break;
      if (9 < iVar3 - 0x30U) {
        if ((iVar3 == 0x65) || (iVar3 == 0x45)) {
          uVar8 = FUN_10004ac0(param_1);
          dVar7 = local_14;
          if ((uint)uVar8 != 0) {
            fVar6 = FUN_10004d20(10.0,(uint)uVar8);
            dVar7 = (double)(fVar6 * (float10)local_c);
          }
        }
        if (iVar5 == -1) {
          return (float10)((double)iVar4 * dVar7);
        }
        goto LAB_10004a31;
      }
      iVar2 = iVar2 + 1;
      dVar7 = (dVar7 * 10.0 + (double)iVar3) - 48.0;
      iVar3 = iVar5;
      local_14 = dVar7;
      local_c = dVar7;
    }
    iVar3 = iVar2;
  } while (iVar5 == -1);
LAB_10004a31:
  if (iVar5 < iVar2) {
    if (7 < iVar2 - iVar5) {
      iVar3 = ((iVar2 - iVar5) - 8U >> 3) + 1;
      iVar2 = iVar2 + iVar3 * -8;
      do {
        dVar7 = dVar7 * 0.1 * 0.1 * 0.1 * 0.1 * 0.1 * 0.1 * 0.1 * 0.1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    if (iVar5 < iVar2) {
      iVar2 = iVar2 - iVar5;
      do {
        dVar7 = dVar7 * 0.1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
  }
  return (float10)((double)iVar4 * dVar7);
}



ulonglong __cdecl FUN_10004ac0(char *param_1)

{
  char cVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  int iVar7;
  char *pcVar8;
  uint uVar9;
  uint uVar10;
  uint uVar11;
  bool bVar12;
  ulonglong uVar13;
  uint local_18;
  uint uStack20;
  
  if (*param_1 == '-') {
    uVar9 = 0xffffffff;
    uVar11 = 0xffffffff;
  }
  else {
    uVar11 = 0;
    uVar9 = 1;
    if (*param_1 != '+') goto LAB_10004ae5;
  }
  param_1 = param_1 + 1;
LAB_10004ae5:
  cVar1 = *param_1;
  local_18 = 0;
  uStack20 = 0;
  if ((cVar1 == '0') && ((param_1[1] == 'x' || (param_1[1] == 'X')))) {
    pcVar8 = param_1 + 2;
    while( true ) {
      while( true ) {
        while( true ) {
          uVar2 = (uint)*pcVar8;
          pcVar8 = pcVar8 + 1;
          iVar7 = (int)uVar2 >> 0x1f;
          if ((iVar7 + -1 + (uint)(0x2f < uVar2) != 0) || ((true && (9 < uVar2 - 0x30)))) break;
          bVar12 = local_18 < 3;
          uVar4 = local_18 - 3;
          uVar5 = uVar4 * 0x10;
          local_18 = uVar5 + uVar2;
          uStack20 = ((uStack20 - bVar12) * 0x10 | uVar4 >> 0x1c) + iVar7 +
                     (uint)CARRY4(uVar5,uVar2);
        }
        if ((iVar7 + -1 + (uint)(0x60 < uVar2) != 0) || ((true && (5 < uVar2 - 0x61)))) break;
        uVar4 = local_18 >> 0x1c;
        uVar5 = local_18 * 0x10;
        uVar6 = uVar5 + uVar2;
        local_18 = uVar6 - 0x57;
        uStack20 = ((uStack20 << 4 | uVar4) + iVar7 + (uint)CARRY4(uVar5,uVar2)) -
                   (uint)(uVar6 < 0x57);
      }
      if ((iVar7 + -1 + (uint)(0x40 < uVar2) != 0) || ((true && (5 < uVar2 - 0x41)))) break;
      uVar4 = local_18 >> 0x1c;
      uVar5 = local_18 * 0x10;
      uVar6 = uVar5 + uVar2;
      local_18 = uVar6 - 0x37;
      uStack20 = ((uStack20 << 4 | uVar4) + iVar7 + (uint)CARRY4(uVar5,uVar2)) -
                 (uint)(uVar6 < 0x37);
    }
    uVar13 = __allmul(local_18,uStack20,uVar9,uVar11);
    return uVar13;
  }
  if (cVar1 == '\'') {
    uVar13 = __allmul((int)param_1[1],(int)param_1[1] >> 0x1f,uVar9,uVar11);
    return uVar13;
  }
  uVar2 = (uint)cVar1;
  iVar7 = (int)uVar2 >> 0x1f;
  if ((iVar7 < 0) || ((-1 < (int)uVar2 || iVar7 < 0 && (uVar2 < 0x30)))) {
    uStack20 = 0;
  }
  else {
    while( true ) {
      param_1 = param_1 + 1;
      if ((0 < iVar7) || ((-1 < iVar7 && (0x39 < uVar2)))) break;
      uVar4 = local_18 >> 0x1e;
      bVar12 = CARRY4(local_18,local_18 * 4);
      uVar6 = local_18 * 5;
      uVar3 = (uint)*param_1;
      uVar5 = local_18 * 10;
      uVar10 = uVar5 + uVar2;
      local_18 = uVar10 - 0x30;
      uStack20 = (((uStack20 + (uStack20 << 2 | uVar4) + (uint)bVar12) * 2 | uVar6 >> 0x1f) + iVar7
                 + (uint)CARRY4(uVar5,uVar2)) - (uint)(uVar10 < 0x30);
      iVar7 = (int)uVar3 >> 0x1f;
      if (((int)uVar3 < 0 && iVar7 >= 0) || (iVar7 < 0)) break;
      uVar2 = uVar3;
      if (uVar3 < 0x30) {
        uVar13 = __allmul(local_18,uStack20,uVar9,uVar11);
        return uVar13;
      }
    }
  }
  uVar13 = __allmul(local_18,uStack20,uVar9,uVar11);
  return uVar13;
}



int __cdecl FUN_10004c70(char *param_1,uint param_2,byte *param_3)

{
  int iVar1;
  
  iVar1 = FUN_10005a13(param_1,param_2,param_3,(int **)&stack0x00000010);
  if ((iVar1 < 0) || ((0 < (int)param_2 && ((int)param_2 <= iVar1)))) {
    iVar1 = param_2 - 1;
    param_1[param_2 - 1] = '\0';
  }
  return iVar1;
}



// WARNING: Control flow encountered bad instruction data

void * __cdecl FID_conflict__memcpy(void *_Dst,void *_Src,size_t _Size)

{
  undefined8 uVar1;
  undefined auVar2 [32];
  undefined auVar3 [32];
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uVar11;
  undefined4 uVar12;
  undefined4 uVar13;
  undefined4 uVar14;
  undefined4 uVar15;
  int iVar16;
  undefined8 *puVar17;
  void *pvVar18;
  uint uVar19;
  uint uVar20;
  int iVar21;
  undefined8 *puVar22;
  undefined *puVar23;
  undefined4 *puVar24;
  undefined4 *puVar25;
  undefined4 uVar26;
  undefined4 uVar27;
  undefined4 uVar28;
  
  if ((_Src < _Dst) && (_Dst < (void *)(_Size + (int)_Src))) {
    puVar25 = (undefined4 *)((_Size - 4) + (int)_Src);
    puVar24 = (undefined4 *)((_Size - 4) + (int)_Dst);
    if (((uint)puVar24 & 3) == 0) {
      uVar19 = _Size >> 2;
      if (uVar19 < 8) goto LAB_10008380;
      for (; uVar19 != 0; uVar19 = uVar19 - 1) {
        *puVar24 = *puVar25;
        puVar25 = puVar25 + -1;
        puVar24 = puVar24 + -1;
      }
      switch(_Size & 3) {
      case 1:
        goto switchD_100083a4_caseD_1;
      case 2:
        goto switchD_100083a4_caseD_2;
      case 3:
        goto switchD_100083a4_caseD_3;
      }
    }
    else {
      switch(_Size) {
      case 0:
        break;
      case 1:
switchD_100083a4_caseD_1:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        return _Dst;
      case 2:
switchD_100083a4_caseD_2:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        return _Dst;
      case 3:
switchD_100083a4_caseD_3:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
        return _Dst;
      default:
        uVar20 = _Size - ((uint)puVar24 & 3);
        switch((uint)puVar24 & 3) {
        case 1:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          puVar25 = (undefined4 *)((int)puVar25 + -1);
          uVar19 = uVar20 >> 2;
          puVar24 = (undefined4 *)((int)puVar24 - 1);
          if (uVar19 < 8) {
LAB_10008380:
                    // WARNING: Could not recover jumptable at 0x10008382. Too many branches
                    // WARNING: Treating indirect jump as call
            pvVar18 = (void *)(*(code *)(&PTR_LAB_10008454)[-uVar19])();
            return pvVar18;
          }
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_100083a4_caseD_1;
          case 2:
            goto switchD_100083a4_caseD_2;
          case 3:
            goto switchD_100083a4_caseD_3;
          }
          break;
        case 2:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          puVar25 = (undefined4 *)((int)puVar25 + -2);
          puVar24 = (undefined4 *)((int)puVar24 - 2);
          if (uVar19 < 8) goto LAB_10008380;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_100083a4_caseD_1;
          case 2:
            goto switchD_100083a4_caseD_2;
          case 3:
            goto switchD_100083a4_caseD_3;
          }
          break;
        case 3:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
          puVar25 = (undefined4 *)((int)puVar25 + -3);
          puVar24 = (undefined4 *)((int)puVar24 - 3);
          if (uVar19 < 8) goto LAB_10008380;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_100083a4_caseD_1;
          case 2:
            goto switchD_100083a4_caseD_2;
          case 3:
            goto switchD_100083a4_caseD_3;
          }
        }
      }
    }
    return _Dst;
  }
  puVar23 = (undefined *)_Dst;
  if ((DAT_1004589c >> 1 & 1) != 0) {
                    // WARNING: Load size is inaccurate
    for (; _Size != 0; _Size = _Size - 1) {
      *puVar23 = *_Src;
      _Src = (undefined *)((int)_Src + 1);
      puVar23 = puVar23 + 1;
    }
    return _Dst;
  }
  puVar25 = (undefined4 *)_Dst;
  if (_Size < 0x80) {
LAB_100081db:
    if (((uint)_Dst & 3) != 0) {
LAB_100081f8:
      switch(_Size) {
      case 0:
        return _Dst;
      case 1:
        break;
      case 2:
        goto switchD_10008210_caseD_2;
      case 3:
        goto switchD_10008210_caseD_3;
      default:
        uVar20 = (_Size - 4) + ((uint)_Dst & 3);
        switch((uint)_Dst & 3) {
        case 0:
                    // WARNING: Bad instruction - Truncating control flow here
          halt_baddata();
        case 1:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 2) = *(undefined *)((int)_Src + 2);
          _Src = (undefined4 *)((int)_Src + 3);
          puVar25 = (undefined4 *)((int)_Dst + 3);
          if (7 < uVar19) {
                    // WARNING: Load size is inaccurate
            for (; uVar19 != 0; uVar19 = uVar19 - 1) {
              *puVar25 = *_Src;
              _Src = (undefined4 *)((int)_Src + 4);
              puVar25 = puVar25 + 1;
            }
            switch(uVar20 & 3) {
            case 0:
              return _Dst;
            case 2:
              goto switchD_10008210_caseD_2;
            case 3:
              goto switchD_10008210_caseD_3;
            }
            break;
          }
          goto LAB_10008218;
        case 2:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          _Src = (undefined4 *)((int)_Src + 2);
          puVar25 = (undefined4 *)((int)_Dst + 2);
          if (uVar19 < 8) goto LAB_10008218;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_10008210_caseD_2;
          case 3:
            goto switchD_10008210_caseD_3;
          }
          break;
        case 3:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          _Src = (undefined4 *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)_Dst + 1);
          if (uVar19 < 8) goto LAB_10008218;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_10008210_caseD_2;
          case 3:
            goto switchD_10008210_caseD_3;
          }
        }
      }
      goto switchD_10008210_caseD_1;
    }
  }
  else {
    if (((((uint)_Dst ^ (uint)_Src) & 0xf) == 0) && ((DAT_10033540 >> 1 & 1) != 0)) {
      if (((uint)_Src & 0xf) != 0) {
        uVar19 = 0x10 - ((uint)_Src & 0xf);
        _Size = _Size - uVar19;
        for (uVar20 = uVar19 & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          *(undefined *)puVar25 = *_Src;
          _Src = (void *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)puVar25 + 1);
        }
        for (uVar19 = uVar19 >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {
                    // WARNING: Load size is inaccurate
          *puVar25 = *_Src;
          _Src = (void *)((int)_Src + 4);
          puVar25 = puVar25 + 1;
        }
      }
      for (uVar20 = _Size >> 7; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
        uVar26 = *(undefined4 *)((int)_Src + 4);
        uVar27 = *(undefined4 *)((int)_Src + 8);
        uVar28 = *(undefined4 *)((int)_Src + 0xc);
        uVar4 = *(undefined4 *)((int)_Src + 0x10);
        uVar5 = *(undefined4 *)((int)_Src + 0x14);
        uVar6 = *(undefined4 *)((int)_Src + 0x18);
        uVar7 = *(undefined4 *)((int)_Src + 0x1c);
        uVar8 = *(undefined4 *)((int)_Src + 0x20);
        uVar9 = *(undefined4 *)((int)_Src + 0x24);
        uVar10 = *(undefined4 *)((int)_Src + 0x28);
        uVar11 = *(undefined4 *)((int)_Src + 0x2c);
        uVar12 = *(undefined4 *)((int)_Src + 0x30);
        uVar13 = *(undefined4 *)((int)_Src + 0x34);
        uVar14 = *(undefined4 *)((int)_Src + 0x38);
        uVar15 = *(undefined4 *)((int)_Src + 0x3c);
        *puVar25 = *_Src;
        puVar25[1] = uVar26;
        puVar25[2] = uVar27;
        puVar25[3] = uVar28;
        puVar25[4] = uVar4;
        puVar25[5] = uVar5;
        puVar25[6] = uVar6;
        puVar25[7] = uVar7;
        puVar25[8] = uVar8;
        puVar25[9] = uVar9;
        puVar25[10] = uVar10;
        puVar25[0xb] = uVar11;
        puVar25[0xc] = uVar12;
        puVar25[0xd] = uVar13;
        puVar25[0xe] = uVar14;
        puVar25[0xf] = uVar15;
        uVar26 = *(undefined4 *)((int)_Src + 0x44);
        uVar27 = *(undefined4 *)((int)_Src + 0x48);
        uVar28 = *(undefined4 *)((int)_Src + 0x4c);
        uVar4 = *(undefined4 *)((int)_Src + 0x50);
        uVar5 = *(undefined4 *)((int)_Src + 0x54);
        uVar6 = *(undefined4 *)((int)_Src + 0x58);
        uVar7 = *(undefined4 *)((int)_Src + 0x5c);
        uVar8 = *(undefined4 *)((int)_Src + 0x60);
        uVar9 = *(undefined4 *)((int)_Src + 100);
        uVar10 = *(undefined4 *)((int)_Src + 0x68);
        uVar11 = *(undefined4 *)((int)_Src + 0x6c);
        uVar12 = *(undefined4 *)((int)_Src + 0x70);
        uVar13 = *(undefined4 *)((int)_Src + 0x74);
        uVar14 = *(undefined4 *)((int)_Src + 0x78);
        uVar15 = *(undefined4 *)((int)_Src + 0x7c);
        puVar25[0x10] = *(undefined4 *)((int)_Src + 0x40);
        puVar25[0x11] = uVar26;
        puVar25[0x12] = uVar27;
        puVar25[0x13] = uVar28;
        puVar25[0x14] = uVar4;
        puVar25[0x15] = uVar5;
        puVar25[0x16] = uVar6;
        puVar25[0x17] = uVar7;
        puVar25[0x18] = uVar8;
        puVar25[0x19] = uVar9;
        puVar25[0x1a] = uVar10;
        puVar25[0x1b] = uVar11;
        puVar25[0x1c] = uVar12;
        puVar25[0x1d] = uVar13;
        puVar25[0x1e] = uVar14;
        puVar25[0x1f] = uVar15;
        _Src = (void *)((int)_Src + 0x80);
        puVar25 = puVar25 + 0x20;
      }
      if ((_Size & 0x7f) != 0) {
        for (uVar20 = (_Size & 0x7f) >> 4; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          uVar26 = *(undefined4 *)((int)_Src + 4);
          uVar27 = *(undefined4 *)((int)_Src + 8);
          uVar28 = *(undefined4 *)((int)_Src + 0xc);
          *puVar25 = *_Src;
          puVar25[1] = uVar26;
          puVar25[2] = uVar27;
          puVar25[3] = uVar28;
          _Src = (void *)((int)_Src + 0x10);
          puVar25 = puVar25 + 4;
        }
        if ((_Size & 0xf) != 0) {
          for (uVar20 = (_Size & 0xf) >> 2; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *puVar25 = *_Src;
            _Src = (void *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          for (uVar20 = _Size & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *(undefined *)puVar25 = *_Src;
            _Src = (void *)((int)_Src + 1);
            puVar25 = (undefined4 *)((int)puVar25 + 1);
          }
        }
      }
      return _Dst;
    }
    if ((DAT_1004589c & 1) == 0) goto LAB_100081db;
    if (((uint)_Dst & 3) != 0) goto LAB_100081f8;
    if (((uint)_Src & 3) == 0) {
      if (((uint)_Dst >> 2 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar26 = *_Src;
        _Size = _Size - 4;
        _Src = (void *)((int)_Src + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if (((uint)_Dst >> 3 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar1 = *_Src;
        _Size = _Size - 8;
        _Src = (void *)((int)_Src + 8);
        *(undefined8 *)_Dst = uVar1;
        _Dst = (void *)((int)_Dst + 8);
      }
      if (((uint)_Src & 7) == 0) {
                    // WARNING: Load size is inaccurate
        puVar17 = (undefined8 *)((int)_Src + -8);
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        do {
          puVar22 = puVar17;
          uVar5 = *(undefined4 *)(puVar22 + 4);
          uVar6 = *(undefined4 *)((int)puVar22 + 0x24);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(puVar22 + 2);
          uVar28 = *(undefined4 *)(puVar22 + 7);
          uVar4 = *(undefined4 *)((int)puVar22 + 0x3c);
          auVar3 = *(undefined (*) [32])(puVar22 + 4);
          *(undefined4 *)((int)_Dst + 8) = uVar26;
          *(undefined4 *)((int)_Dst + 0xc) = uVar27;
          *(undefined4 *)((int)_Dst + 0x10) = uVar5;
          *(undefined4 *)((int)_Dst + 0x14) = uVar6;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x40,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x40,0);
          _Dst = (void *)((int)_Dst + 0x30);
          puVar17 = puVar22 + 6;
          uVar26 = uVar28;
          uVar27 = uVar4;
        } while (0x2f < (int)_Size);
        puVar22 = puVar22 + 7;
      }
      else if (((uint)_Src >> 3 & 1) == 0) {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -4;
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        uVar28 = *(undefined4 *)((int)_Src + 8);
        do {
          iVar21 = iVar16;
          uVar7 = *(undefined4 *)(iVar21 + 0x20);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar4 = *(undefined4 *)(iVar21 + 0x34);
          uVar5 = *(undefined4 *)(iVar21 + 0x38);
          uVar6 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 4) = uVar26;
          *(undefined4 *)((int)_Dst + 8) = uVar27;
          *(undefined4 *)((int)_Dst + 0xc) = uVar28;
          *(undefined4 *)((int)_Dst + 0x10) = uVar7;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x20,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x20,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar4;
          uVar27 = uVar5;
          uVar28 = uVar6;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x34);
      }
      else {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -0xc;
        uVar26 = *_Src;
        do {
          iVar21 = iVar16;
          uVar28 = *(undefined4 *)(iVar21 + 0x20);
          uVar4 = *(undefined4 *)(iVar21 + 0x24);
          uVar5 = *(undefined4 *)(iVar21 + 0x28);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar27 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 0xc) = uVar26;
          *(undefined4 *)((int)_Dst + 0x10) = uVar28;
          *(undefined4 *)((int)_Dst + 0x14) = uVar4;
          *(undefined4 *)((int)_Dst + 0x18) = uVar5;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x60,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x60,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar27;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x3c);
      }
      for (; 0xf < (int)_Size; _Size = _Size - 0x10) {
        uVar26 = *(undefined4 *)puVar22;
        uVar27 = *(undefined4 *)((int)puVar22 + 4);
        uVar28 = *(undefined4 *)(puVar22 + 1);
        uVar4 = *(undefined4 *)((int)puVar22 + 0xc);
        puVar22 = puVar22 + 2;
        *(undefined4 *)_Dst = uVar26;
        *(undefined4 *)((int)_Dst + 4) = uVar27;
        *(undefined4 *)((int)_Dst + 8) = uVar28;
        *(undefined4 *)((int)_Dst + 0xc) = uVar4;
        _Dst = (void *)((int)_Dst + 0x10);
      }
      if ((_Size >> 2 & 1) != 0) {
        uVar26 = *(undefined4 *)puVar22;
        _Size = _Size - 4;
        puVar22 = (undefined8 *)((int)puVar22 + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if ((_Size >> 3 & 1) != 0) {
        _Size = _Size - 8;
        *(undefined8 *)_Dst = *puVar22;
      }
                    // WARNING: Could not recover jumptable at 0x100081d9. Too many branches
                    // WARNING: Treating indirect jump as call
      pvVar18 = (void *)(*(code *)(&switchD_10008210::switchdataD_10008308)[_Size])();
      return pvVar18;
    }
  }
  uVar19 = _Size >> 2;
  if (uVar19 < 8) {
LAB_10008218:
                    // WARNING: Could not recover jumptable at 0x10008218. Too many branches
                    // WARNING: Treating indirect jump as call
    pvVar18 = (void *)(*(code *)(&PTR_LAB_1000829c)[uVar19])();
    return pvVar18;
  }
                    // WARNING: Load size is inaccurate
  for (; uVar19 != 0; uVar19 = uVar19 - 1) {
    *puVar25 = *_Src;
    _Src = (undefined4 *)((int)_Src + 4);
    puVar25 = puVar25 + 1;
  }
  switch(_Size & 3) {
  case 0:
    return _Dst;
  case 2:
switchD_10008210_caseD_2:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    return _Dst;
  case 3:
switchD_10008210_caseD_3:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    *(undefined *)((int)puVar25 + 2) = *(undefined *)((int)_Src + 2);
    return _Dst;
  }
switchD_10008210_caseD_1:
                    // WARNING: Load size is inaccurate
  *(undefined *)puVar25 = *_Src;
  return _Dst;
}



uint __cdecl FUN_10004cc0(byte *param_1,byte *param_2)

{
  byte bVar1;
  bool bVar2;
  
  while( true ) {
    bVar1 = *param_1;
    bVar2 = bVar1 < *param_2;
    if (bVar1 != *param_2) break;
    if (bVar1 == 0) {
      return 0;
    }
    bVar1 = param_1[1];
    bVar2 = bVar1 < param_2[1];
    if (bVar1 != param_2[1]) break;
    param_1 = param_1 + 2;
    param_2 = param_2 + 2;
    if (bVar1 == 0) {
      return 0;
    }
  }
  return -(uint)bVar2 | 1;
}



int __cdecl FUN_10004d00(char *param_1)

{
  char *pcVar1;
  char cVar2;
  
  pcVar1 = param_1 + 1;
  do {
    cVar2 = *param_1;
    param_1 = param_1 + 1;
  } while (cVar2 != '\0');
  return (int)param_1 - (int)pcVar1;
}



float10 __cdecl FUN_10004d20(double param_1,uint param_2)

{
  uint uVar1;
  double dVar2;
  
  uVar1 = param_2;
  if ((int)param_2 < 0) {
    uVar1 = -param_2;
  }
  dVar2 = 1.0;
  while( true ) {
    if ((uVar1 & 1) != 0) {
      dVar2 = dVar2 * param_1;
    }
    uVar1 = uVar1 >> 1;
    if (uVar1 == 0) break;
    param_1 = param_1 * param_1;
  }
  if ((int)param_2 < 0) {
    return (float10)(1.0 / dVar2);
  }
  return (float10)dVar2;
}



undefined4 * __thiscall FUN_10004d80(void *this,char **param_1)

{
  char *pcVar1;
  int iVar2;
  
  *(undefined4 *)this = 0;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  if (param_1[3] == (char *)0x0) {
    iVar2 = FUN_10004d00("");
    FUN_10004ef0(this,&DAT_10019cb8,(void *)(iVar2 + 1));
    return (undefined4 *)this;
  }
  pcVar1 = *param_1;
  if (pcVar1 != (char *)0x0) {
    iVar2 = FUN_10004d00(pcVar1);
    FUN_10004ef0(this,pcVar1,(void *)(iVar2 + 1));
    return (undefined4 *)this;
  }
  FUN_10004ef0(this,(void *)0x0,(void *)0x0);
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_10004e00(void *this,char *param_1)

{
  int iVar1;
  
  *(undefined4 *)this = 0;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  if (param_1 != (char *)0x0) {
    iVar1 = FUN_10004d00(param_1);
    FUN_10004ef0(this,param_1,(void *)(iVar1 + 1));
    return (undefined4 *)this;
  }
  FUN_10004ef0(this,(void *)0x0,(void *)0x0);
  return (undefined4 *)this;
}



void __thiscall FUN_10004e60(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint uVar5;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar3 = *(uint *)((int)this + 4);
  uVar5 = param_1 + uVar3;
  if (iVar1 == 0) {
    if (uVar3 == 0) {
      uVar3 = 0x20;
      uVar2 = uVar5;
      if ((int)uVar5 < 0x21) goto LAB_10004ec3;
    }
    else {
      if ((int)uVar5 <= (int)uVar3) goto LAB_10004ec3;
      do {
        uVar3 = uVar3 * 2;
        uVar2 = uVar3;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
  else {
    uVar2 = ((int)(uVar5 - 1) / iVar1 + 1) * iVar1;
  }
  uVar3 = uVar2;
  if ((int)uVar3 < (int)uVar5) {
    if ((uVar3 == 0) && (0x7fffffff < uVar5)) {
      uVar3 = 0xffffffff;
    }
    else {
      do {
        uVar3 = (int)(uVar3 + uVar5) / 2;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
LAB_10004ec3:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar3;
  if (*this == 0) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar3);
    *(undefined4 *)this = uVar4;
    return;
  }
  uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this);
  *(undefined4 *)this = uVar4;
  return;
}



void __thiscall FUN_10004ef0(void *this,void *param_1,void *param_2)

{
  size_t _Size;
  void *_Dst;
  
  if (param_1 == (void *)0x0) {
    param_2 = (void *)0x0;
  }
  *(void **)((int)this + 0xc) = param_2;
  if (*(int *)((int)this + 4) < (int)param_2) {
    FUN_10004e60(this,(int)param_2 - *(int *)((int)this + 4));
    if (*(int *)((int)this + 4) < (int)param_2) {
      *(int *)((int)this + 0xc) = *(int *)((int)this + 4);
    }
  }
  _Size = *(size_t *)((int)this + 0xc);
  if (_Size != 0) {
                    // WARNING: Load size is inaccurate
    _Dst = *this;
    if ((_Dst < (void *)((int)param_1 + (int)param_2)) && (param_1 < (void *)((int)_Dst + _Size))) {
      FID_conflict__memcpy(_Dst,param_1,_Size);
      return;
    }
    FID_conflict__memcpy(_Dst,param_1,_Size);
  }
  return;
}



undefined4 * __thiscall
FUN_10004f60(void *this,undefined param_1,char *param_2,int param_3,int param_4)

{
  byte bVar1;
  char *pcVar2;
  int iVar3;
  int iVar4;
  
  *(undefined *)((int)this + 4) = param_1;
  *(undefined ***)this = CUtlCharConversion::vftable;
  *(char **)((int)this + 8) = param_2;
  *(int *)((int)this + 0x10) = param_3;
  iVar3 = FUN_10004d00(param_2);
  *(int *)((int)this + 0xc) = iVar3;
  *(undefined4 *)((int)this + 0x14) = 0;
  FUN_10006130((uint *)((int)this + 0x118),0,0x800);
  iVar3 = 0;
  if (0 < param_3) {
    do {
      bVar1 = *(byte *)(param_4 + iVar3 * 8);
      *(byte *)((int)this + iVar3 + 0x18) = bVar1;
      pcVar2 = *(char **)(param_4 + 4 + iVar3 * 8);
      *(char **)((int)this + (uint)bVar1 * 8 + 0x11c) = pcVar2;
      iVar4 = FUN_10004d00(pcVar2);
      *(int *)((int)this + (uint)bVar1 * 8 + 0x118) = iVar4;
      if (*(int *)((int)this + 0x14) < iVar4) {
        *(int *)((int)this + 0x14) = iVar4;
      }
      iVar3 = iVar3 + 1;
    } while (iVar3 < param_3);
  }
  return (undefined4 *)this;
}



void __thiscall FUN_10004ff0(void *this,byte *param_1,uint *param_2)

{
  *param_2 = (uint)(*(char *)(*param_1 + 0x918 + (int)this) != '\0');
  return;
}



uint __thiscall FUN_10005010(void *this,byte *param_1,undefined4 *param_2)

{
  uint uVar1;
  int iVar2;
  
  iVar2 = 0;
  if (0 < *(int *)((int)this + 0x10)) {
    do {
      uVar1 = FUN_10004cc0(param_1,*(byte **)((int)this +
                                             (uint)*(byte *)((int)this + iVar2 + 0x18) * 8 + 0x11c))
      ;
      if (uVar1 == 0) {
        *param_2 = *(undefined4 *)
                    ((int)this + (uint)*(byte *)(iVar2 + 0x18 + (int)this) * 8 + 0x118);
        return (uint)*(byte *)(iVar2 + 0x18 + (int)this);
      }
      iVar2 = iVar2 + 1;
    } while (iVar2 < *(int *)((int)this + 0x10));
  }
  *param_2 = 0;
  return (uint)param_2 & 0xffffff00;
}



uint FUN_10005070(undefined4 param_1,undefined4 *param_2)

{
  *param_2 = 0;
  return (uint)param_2 & 0xffffff00;
}



void FUN_10005090(void)

{
  int iVar1;
  
  if ((DAT_10034bf4 != 0) && (DAT_10045847 == '\0')) {
    FUN_100052c0();
    DAT_10045847 = '\x01';
  }
  if ((DAT_10034bb8 != (int *)0x0) && (DAT_10045846 == '\0')) {
    (**(code **)(*DAT_10034bb8 + 0x24))(&DAT_1004583c);
    DAT_10045846 = 1;
    for (iVar1 = DAT_1004586c; iVar1 != 0; iVar1 = *(int *)(iVar1 + 0xc)) {
      (**(code **)(*DAT_10034bb8 + 0x34))(iVar1);
    }
    return;
  }
  return;
}



void FUN_100050e0(void)

{
  if ((DAT_10034bb8 != (int *)0x0) && (DAT_10045846 != '\0')) {
    (**(code **)(*DAT_10034bb8 + 0x28))(&DAT_1004583c);
    DAT_10045846 = '\0';
  }
  return;
}



undefined4 * __thiscall FUN_10005110(void *this,int param_1,undefined4 param_2,undefined4 param_3)

{
  *(undefined4 *)this = 0;
  if (param_1 != 0) {
    FUN_10005190(this,param_1,param_2,param_3);
  }
  return (undefined4 *)this;
}



undefined4 * __fastcall FUN_10005140(undefined4 *param_1)

{
  *param_1 = 0;
  return param_1;
}



void __fastcall FUN_10005150(int **param_1)

{
  if ((*param_1 != (int *)0x0) && (DAT_10034bbc != 0)) {
    (**(code **)(**param_1 + 0x34))();
    *param_1 = (int *)0x0;
  }
  return;
}



void __fastcall FUN_10005170(int **param_1)

{
  if ((*param_1 != (int *)0x0) && (DAT_10034bbc != 0)) {
    (**(code **)(**param_1 + 0x2c))();
    *param_1 = (int *)0x0;
  }
  return;
}



void __thiscall FUN_10005190(void *this,undefined4 param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  int *piVar2;
  
  piVar2 = (int *)(**(code **)(*DAT_10034bbc + 0x150))(param_1,param_2,param_3,0);
  if (piVar2 != (int *)0x0) {
    (**(code **)(*piVar2 + 0xa8))();
  }
                    // WARNING: Load size is inaccurate
  piVar1 = *this;
  if (piVar1 != piVar2) {
    if ((piVar1 != (int *)0x0) && (DAT_10034bbc != (int *)0x0)) {
      (**(code **)(*piVar1 + 0x34))();
      *(undefined4 *)this = 0;
    }
    *(int **)this = piVar2;
    if (piVar2 != (int *)0x0) {
      (**(code **)(*piVar2 + 0x30))();
    }
  }
  return;
}



void __thiscall FUN_10005200(void *this,int *param_1)

{
  int *piVar1;
  
                    // WARNING: Load size is inaccurate
  piVar1 = *this;
  if (piVar1 != param_1) {
    if ((piVar1 != (int *)0x0) && (DAT_10034bbc != 0)) {
      (**(code **)(*piVar1 + 0x2c))();
      *(undefined4 *)this = 0;
    }
    *(int **)this = param_1;
    if (param_1 != (int *)0x0) {
      (**(code **)(*param_1 + 0x28))();
    }
  }
  return;
}



void __thiscall FUN_10005240(void *this,char param_1)

{
                    // WARNING: Load size is inaccurate
  if ((*this != (int *)0x0) && (DAT_10034bbc != 0)) {
    (**(code **)(**this + 0x34))();
    if (param_1 != '\0') {
                    // WARNING: Load size is inaccurate
      (**(code **)(**this + 200))();
    }
    *(undefined4 *)this = 0;
  }
  return;
}



void __thiscall FUN_10005280(void *this,char param_1)

{
                    // WARNING: Load size is inaccurate
  if ((*this != (int *)0x0) && (DAT_10034bbc != 0)) {
    (**(code **)(**this + 0x2c))();
    if (param_1 != '\0') {
                    // WARNING: Load size is inaccurate
      (**(code **)(**this + 100))();
    }
    *(undefined4 *)this = 0;
  }
  return;
}



void FUN_100052c0(void)

{
  int iVar1;
  
  iVar1 = 0;
  do {
    (**(code **)(*DAT_10034bf4 + 0x2c))((&DAT_10045850)[iVar1],iVar1);
    iVar1 = iVar1 + 1;
  } while (iVar1 < 5);
  return;
}



void FUN_10005320(void)

{
  return;
}



// Library Function - Single Match
//  __errcode
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

int __cdecl __errcode(uint param_1)

{
  int iStack8;
  
  if ((param_1 & 0x20) == 0) {
    if ((param_1 & 8) != 0) {
      return 1;
    }
    if ((param_1 & 4) == 0) {
      if ((param_1 & 1) == 0) {
        return (param_1 & 2) * 2;
      }
      iStack8 = 3;
    }
    else {
      iStack8 = 2;
    }
  }
  else {
    iStack8 = 5;
  }
  return iStack8;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __handle_exc
// 
// Library: Visual Studio 2019 Release

bool __cdecl __handle_exc(uint param_1,double *param_2,uint param_3)

{
  double dVar1;
  double dVar2;
  float10 fVar3;
  double dVar4;
  uint uVar5;
  int iVar6;
  uint uVar7;
  bool bVar8;
  float10 fVar9;
  float10 fVar10;
  uint local_10;
  byte bStack12;
  undefined uStack11;
  ushort uStack10;
  
  uVar5 = param_1;
  uVar7 = param_1 & 0x1f;
  if (((param_1 & 8) != 0) && ((param_3 & 1) != 0)) {
    __set_statfp(1);
    uVar7 = uVar5 & 0x17;
    goto LAB_100055d6;
  }
  if (((param_1 & 4) != 0) && ((param_3 & 4) != 0)) {
    __set_statfp(4);
    uVar7 = uVar5 & 0x1b;
    goto LAB_100055d6;
  }
  if (((param_1 & 1) == 0) || ((param_3 & 8) == 0)) {
    if (((param_1 & 2) != 0) && ((param_3 & 0x10) != 0)) {
      bVar8 = (param_1 & 0x10) != 0;
      if (*param_2 == 0.0) {
        bVar8 = true;
      }
      else {
        fVar9 = (float10)__decomp(SUB84(*param_2,0),(uint)((ulonglong)*param_2 >> 0x20),
                                  (int *)&param_1);
        param_1 = param_1 - 0x600;
        dVar2 = (double)fVar9;
        local_10 = SUB84(dVar2,0);
        bStack12 = (byte)((ulonglong)dVar2 >> 0x20);
        uStack11 = (undefined)((ulonglong)dVar2 >> 0x28);
        uStack10 = (ushort)((ulonglong)dVar2 >> 0x30);
        fVar3 = (float10)0;
        if ((int)param_1 < -0x432) {
          fVar10 = fVar3 * fVar9;
          bVar8 = true;
        }
        else {
          uStack10 = uStack10 & 0xf | 0x10;
          if ((int)param_1 < -0x3fd) {
            iVar6 = -0x3fd - param_1;
            do {
              if (((local_10 & 1) != 0) && (!bVar8)) {
                bVar8 = true;
              }
              local_10 = local_10 >> 1;
              if ((bStack12 & 1) != 0) {
                local_10 = local_10 | 0x80000000;
              }
              uVar7 = CONCAT22(uStack10,CONCAT11(uStack11,bStack12)) >> 1;
              bStack12 = (byte)uVar7;
              uStack11 = (undefined)(uVar7 >> 8);
              uStack10 = uStack10 >> 1;
              iVar6 = iVar6 + -1;
            } while (iVar6 != 0);
          }
          fVar10 = (float10)(double)CONCAT26(uStack10,CONCAT15(uStack11,CONCAT14(bStack12,local_10))
                                            );
          if ((ushort)((ushort)(fVar3 < fVar9) << 8 | (ushort)(fVar3 == fVar9) << 0xe) == 0) {
            fVar10 = -fVar10;
          }
        }
        *param_2 = (double)fVar10;
      }
      if (bVar8) {
        __set_statfp(0x10);
      }
      uVar7 = uVar5 & 0x1d;
    }
    goto LAB_100055d6;
  }
  __set_statfp(8);
  uVar7 = param_3 & 0xc00;
  dVar2 = _DAT_10033370;
  dVar4 = _DAT_10033370;
  if (uVar7 == 0) {
    dVar1 = *param_2;
joined_r0x100054bc:
    if (dVar1 <= 0.0) {
      dVar2 = -dVar4;
    }
    *param_2 = dVar2;
  }
  else {
    if (uVar7 == 0x400) {
      dVar1 = *param_2;
      dVar2 = _DAT_10033380;
      goto joined_r0x100054bc;
    }
    dVar4 = _DAT_10033380;
    if (uVar7 == 0x800) {
      dVar1 = *param_2;
      goto joined_r0x100054bc;
    }
    if (uVar7 == 0xc00) {
      dVar1 = *param_2;
      dVar2 = _DAT_10033380;
      goto joined_r0x100054bc;
    }
  }
  uVar7 = uVar5 & 0x1e;
LAB_100055d6:
  if (((uVar5 & 0x10) != 0) && ((param_3 & 0x20) != 0)) {
    __set_statfp(0x20);
    uVar7 = uVar7 & 0xffffffef;
  }
  return uVar7 == 0;
}



// Library Function - Single Match
//  __raise_exc
// 
// Library: Visual Studio 2019 Release

void __cdecl
__raise_exc(uint *param_1,uint *param_2,uint param_3,int param_4,undefined8 *param_5,
           undefined8 *param_6)

{
  FUN_1000561a(param_1,param_2,param_3,param_4,param_5,param_6,0);
  return;
}



void __cdecl
FUN_1000561a(uint *param_1,uint *param_2,uint param_3,int param_4,undefined8 *param_5,
            undefined8 *param_6,int param_7)

{
  uint *puVar1;
  undefined8 *puVar2;
  uint uVar3;
  DWORD dwExceptionCode;
  
  puVar1 = param_2;
  param_1[1] = 0;
  dwExceptionCode = 0xc000000d;
  param_1[2] = 0;
  param_1[3] = 0;
  if ((param_3 & 0x10) != 0) {
    dwExceptionCode = 0xc000008f;
    param_1[1] = param_1[1] | 1;
  }
  if ((param_3 & 2) != 0) {
    dwExceptionCode = 0xc0000093;
    param_1[1] = param_1[1] | 2;
  }
  if ((param_3 & 1) != 0) {
    dwExceptionCode = 0xc0000091;
    param_1[1] = param_1[1] | 4;
  }
  if ((param_3 & 4) != 0) {
    dwExceptionCode = 0xc000008e;
    param_1[1] = param_1[1] | 8;
  }
  if ((param_3 & 8) != 0) {
    dwExceptionCode = 0xc0000090;
    param_1[1] = param_1[1] | 0x10;
  }
  param_1[2] = param_1[2] ^ (~(*param_2 << 4) ^ param_1[2]) & 0x10;
  param_1[2] = param_1[2] ^ (~(*param_2 * 2) ^ param_1[2]) & 8;
  param_1[2] = param_1[2] ^ (~(*param_2 >> 1) ^ param_1[2]) & 4;
  param_1[2] = param_1[2] ^ (~(*param_2 >> 3) ^ param_1[2]) & 2;
  param_1[2] = param_1[2] ^ (~(*param_2 >> 5) ^ param_1[2]) & 1;
  uVar3 = FUN_10008e2f();
  puVar2 = param_6;
  if ((uVar3 & 1) != 0) {
    param_1[3] = param_1[3] | 0x10;
  }
  if ((uVar3 & 4) != 0) {
    param_1[3] = param_1[3] | 8;
  }
  if ((uVar3 & 8) != 0) {
    param_1[3] = param_1[3] | 4;
  }
  if ((uVar3 & 0x10) != 0) {
    param_1[3] = param_1[3] | 2;
  }
  if ((uVar3 & 0x20) != 0) {
    param_1[3] = param_1[3] | 1;
  }
  uVar3 = *puVar1 & 0xc00;
  if (uVar3 == 0) {
    *param_1 = *param_1 & 0xfffffffc;
  }
  else {
    if (uVar3 == 0x400) {
      uVar3 = *param_1 & 0xfffffffd | 1;
    }
    else {
      if (uVar3 != 0x800) {
        if (uVar3 == 0xc00) {
          *param_1 = *param_1 | 3;
        }
        goto LAB_1000577a;
      }
      uVar3 = *param_1 & 0xfffffffe | 2;
    }
    *param_1 = uVar3;
  }
LAB_1000577a:
  uVar3 = *puVar1 & 0x300;
  if (uVar3 == 0) {
    uVar3 = *param_1 & 0xffffffeb | 8;
LAB_100057b0:
    *param_1 = uVar3;
  }
  else {
    if (uVar3 == 0x200) {
      uVar3 = *param_1 & 0xffffffe7 | 4;
      goto LAB_100057b0;
    }
    if (uVar3 == 0x300) {
      *param_1 = *param_1 & 0xffffffe3;
    }
  }
  *param_1 = *param_1 ^ (param_4 << 5 ^ *param_1) & 0x1ffe0;
  param_1[8] = param_1[8] | 1;
  if (param_7 == 0) {
    param_1[8] = param_1[8] & 0xffffffe3 | 2;
    *(undefined8 *)(param_1 + 4) = *param_5;
    param_1[0x18] = param_1[0x18] | 1;
    param_1[0x18] = param_1[0x18] & 0xffffffe3 | 2;
    *(undefined8 *)(param_1 + 0x14) = *param_6;
  }
  else {
    param_1[8] = param_1[8] & 0xffffffe1;
    param_1[4] = *(uint *)param_5;
    param_1[0x18] = param_1[0x18] | 1;
    param_1[0x18] = param_1[0x18] & 0xffffffe1;
    param_1[0x14] = *(uint *)param_6;
  }
  FUN_10008d9b();
  RaiseException(dwExceptionCode,0,1,(ULONG_PTR *)&param_1);
  if ((*(byte *)(param_1 + 2) & 0x10) != 0) {
    *puVar1 = *puVar1 & 0xfffffffe;
  }
  if ((*(byte *)(param_1 + 2) & 8) != 0) {
    *puVar1 = *puVar1 & 0xfffffffb;
  }
  if ((*(byte *)(param_1 + 2) & 4) != 0) {
    *puVar1 = *puVar1 & 0xfffffff7;
  }
  if ((*(byte *)(param_1 + 2) & 2) != 0) {
    *puVar1 = *puVar1 & 0xffffffef;
  }
  if ((*(byte *)(param_1 + 2) & 1) != 0) {
    *puVar1 = *puVar1 & 0xffffffdf;
  }
  uVar3 = *param_1 & 3;
  if (uVar3 == 0) {
    *puVar1 = *puVar1 & 0xfffff3ff;
  }
  else {
    if (uVar3 == 1) {
      uVar3 = *puVar1 & 0xfffff7ff | 0x400;
    }
    else {
      if (uVar3 != 2) {
        if (uVar3 == 3) {
          *puVar1 = *puVar1 | 0xc00;
        }
        goto LAB_100058bb;
      }
      uVar3 = *puVar1 & 0xfffffbff | 0x800;
    }
    *puVar1 = uVar3;
  }
LAB_100058bb:
  uVar3 = *param_1 >> 2 & 7;
  if (uVar3 == 0) {
    uVar3 = *puVar1 & 0xfffff3ff | 0x300;
  }
  else {
    if (uVar3 != 1) {
      if (uVar3 == 2) {
        *puVar1 = *puVar1 & 0xfffff3ff;
      }
      goto LAB_100058e8;
    }
    uVar3 = *puVar1 & 0xfffff3ff | 0x200;
  }
  *puVar1 = uVar3;
LAB_100058e8:
  if (param_7 == 0) {
    *puVar2 = *(undefined8 *)(param_1 + 0x14);
  }
  else {
    *(uint *)puVar2 = param_1[0x14];
  }
  return;
}



// Library Function - Single Match
//  __set_errno_from_matherr
// 
// Library: Visual Studio 2019 Release

void __cdecl __set_errno_from_matherr(int param_1)

{
  int *piVar1;
  
  if (param_1 == 1) {
    piVar1 = __errno();
    *piVar1 = 0x21;
  }
  else if (param_1 - 2U < 2) {
    piVar1 = __errno();
    *piVar1 = 0x22;
    return;
  }
  return;
}



// Library Function - Single Match
//  __umatherr
// 
// Library: Visual Studio 2019 Release

float10 __cdecl __umatherr(int param_1,int param_2)

{
  int iVar1;
  undefined *puVar2;
  undefined4 in_stack_0000001c;
  undefined4 in_stack_00000020;
  undefined4 in_stack_00000024;
  
  puVar2 = (undefined *)0x0;
  iVar1 = 0;
  do {
    if ((&DAT_10033270)[iVar1 * 2] == param_2) {
      puVar2 = (&PTR_DAT_10033274)[iVar1 * 2];
      break;
    }
    iVar1 = iVar1 + 1;
  } while (iVar1 < 0x1d);
  if (puVar2 == (undefined *)0x0) {
    __ctrlfp(in_stack_00000024,0xffff);
    __set_errno_from_matherr(param_1);
  }
  else {
    __ctrlfp(in_stack_00000024,0xffff);
    iVar1 = FUN_10002220();
    if (iVar1 == 0) {
      __set_errno_from_matherr(param_1);
    }
  }
  return (float10)(double)CONCAT44(in_stack_00000020,in_stack_0000001c);
}



void FUN_100059cc(void)

{
  code *pcVar1;
  
  pcVar1 = (code *)DecodePointer(DAT_10045890);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)();
  }
  FUN_10008ed6(0,1);
  _abort();
  return;
}



PVOID __cdecl FUN_100059ee(PVOID param_1)

{
  PVOID pvVar1;
  
  pvVar1 = DecodePointer(DAT_10045890);
  DAT_10045890 = EncodePointer(param_1);
  return pvVar1;
}



void __cdecl FUN_10005a13(char *param_1,uint param_2,byte *param_3,int **param_4)

{
  FUN_10005a2e(param_1,param_2,param_3,(pthreadlocinfo *)0x0,param_4);
  return;
}



undefined4 __cdecl
FUN_10005a2e(char *param_1,uint param_2,byte *param_3,pthreadlocinfo *param_4,int **param_5)

{
  int *piVar1;
  undefined4 uVar2;
  int iVar3;
  char **ppcVar4;
  FILE local_24;
  
  local_24._ptr = (char *)0x0;
  ppcVar4 = (char **)&local_24._cnt;
  for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {
    *ppcVar4 = (char *)0x0;
    ppcVar4 = ppcVar4 + 1;
  }
  if (param_3 == (byte *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_100090a2();
    uVar2 = 0xffffffff;
  }
  else if ((param_2 == 0) || (param_1 != (char *)0x0)) {
    local_24._cnt = 0x7fffffff;
    if (param_2 < 0x80000000) {
      local_24._cnt = param_2;
    }
    local_24._flag = 0x42;
    local_24._base = param_1;
    local_24._ptr = param_1;
    uVar2 = FUN_1000922c(&local_24,param_3,param_4,param_5);
    if (param_1 != (char *)0x0) {
      local_24._cnt = local_24._cnt - 1;
      if (local_24._cnt < 0) {
        FUN_100090dd(0,&local_24);
      }
      else {
        *local_24._ptr = '\0';
      }
    }
  }
  else {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_100090a2();
    uVar2 = 0xffffffff;
  }
  return uVar2;
}



// WARNING: Control flow encountered bad instruction data
// Library Function - Multiple Matches With Different Base Names
//  _memcpy
//  _memmove
// 
// Libraries: Visual Studio 2012 Debug, Visual Studio 2012 Release

void * __cdecl FID_conflict__memcpy(void *_Dst,void *_Src,size_t _Size)

{
  undefined8 uVar1;
  undefined auVar2 [32];
  undefined auVar3 [32];
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uVar11;
  undefined4 uVar12;
  undefined4 uVar13;
  undefined4 uVar14;
  undefined4 uVar15;
  int iVar16;
  undefined8 *puVar17;
  void *pvVar18;
  uint uVar19;
  uint uVar20;
  int iVar21;
  undefined8 *puVar22;
  undefined *puVar23;
  undefined4 *puVar24;
  undefined4 *puVar25;
  undefined4 uVar26;
  undefined4 uVar27;
  undefined4 uVar28;
  
  if ((_Src < _Dst) && (_Dst < (void *)(_Size + (int)_Src))) {
    puVar25 = (undefined4 *)((_Size - 4) + (int)_Src);
    puVar24 = (undefined4 *)((_Size - 4) + (int)_Dst);
    if (((uint)puVar24 & 3) == 0) {
      uVar19 = _Size >> 2;
      if (uVar19 < 8) goto LAB_10005e90;
      for (; uVar19 != 0; uVar19 = uVar19 - 1) {
        *puVar24 = *puVar25;
        puVar25 = puVar25 + -1;
        puVar24 = puVar24 + -1;
      }
      switch(_Size & 3) {
      case 1:
        goto switchD_10005eb4_caseD_1;
      case 2:
        goto switchD_10005eb4_caseD_2;
      case 3:
        goto switchD_10005eb4_caseD_3;
      }
    }
    else {
      switch(_Size) {
      case 0:
        break;
      case 1:
switchD_10005eb4_caseD_1:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        return _Dst;
      case 2:
switchD_10005eb4_caseD_2:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        return _Dst;
      case 3:
switchD_10005eb4_caseD_3:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
        return _Dst;
      default:
        uVar20 = _Size - ((uint)puVar24 & 3);
        switch((uint)puVar24 & 3) {
        case 1:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          puVar25 = (undefined4 *)((int)puVar25 + -1);
          uVar19 = uVar20 >> 2;
          puVar24 = (undefined4 *)((int)puVar24 - 1);
          if (uVar19 < 8) {
LAB_10005e90:
                    // WARNING: Could not recover jumptable at 0x10005e92. Too many branches
                    // WARNING: Treating indirect jump as call
            pvVar18 = (void *)(*(code *)(&PTR_LAB_10005f64)[-uVar19])();
            return pvVar18;
          }
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_10005eb4_caseD_1;
          case 2:
            goto switchD_10005eb4_caseD_2;
          case 3:
            goto switchD_10005eb4_caseD_3;
          }
          break;
        case 2:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          puVar25 = (undefined4 *)((int)puVar25 + -2);
          puVar24 = (undefined4 *)((int)puVar24 - 2);
          if (uVar19 < 8) goto LAB_10005e90;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_10005eb4_caseD_1;
          case 2:
            goto switchD_10005eb4_caseD_2;
          case 3:
            goto switchD_10005eb4_caseD_3;
          }
          break;
        case 3:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
          puVar25 = (undefined4 *)((int)puVar25 + -3);
          puVar24 = (undefined4 *)((int)puVar24 - 3);
          if (uVar19 < 8) goto LAB_10005e90;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_10005eb4_caseD_1;
          case 2:
            goto switchD_10005eb4_caseD_2;
          case 3:
            goto switchD_10005eb4_caseD_3;
          }
        }
      }
    }
    return _Dst;
  }
  puVar23 = (undefined *)_Dst;
  if ((DAT_1004589c >> 1 & 1) != 0) {
                    // WARNING: Load size is inaccurate
    for (; _Size != 0; _Size = _Size - 1) {
      *puVar23 = *_Src;
      _Src = (undefined *)((int)_Src + 1);
      puVar23 = puVar23 + 1;
    }
    return _Dst;
  }
  puVar25 = (undefined4 *)_Dst;
  if (_Size < 0x80) {
LAB_10005ceb:
    if (((uint)_Dst & 3) != 0) {
LAB_10005d08:
      switch(_Size) {
      case 0:
        return _Dst;
      case 1:
        break;
      case 2:
        goto switchD_10005d20_caseD_2;
      case 3:
        goto switchD_10005d20_caseD_3;
      default:
        uVar20 = (_Size - 4) + ((uint)_Dst & 3);
        switch((uint)_Dst & 3) {
        case 0:
                    // WARNING: Bad instruction - Truncating control flow here
          halt_baddata();
        case 1:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 2) = *(undefined *)((int)_Src + 2);
          _Src = (undefined4 *)((int)_Src + 3);
          puVar25 = (undefined4 *)((int)_Dst + 3);
          if (7 < uVar19) {
                    // WARNING: Load size is inaccurate
            for (; uVar19 != 0; uVar19 = uVar19 - 1) {
              *puVar25 = *_Src;
              _Src = (undefined4 *)((int)_Src + 4);
              puVar25 = puVar25 + 1;
            }
            switch(uVar20 & 3) {
            case 0:
              return _Dst;
            case 2:
              goto switchD_10005d20_caseD_2;
            case 3:
              goto switchD_10005d20_caseD_3;
            }
            break;
          }
          goto LAB_10005d28;
        case 2:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          _Src = (undefined4 *)((int)_Src + 2);
          puVar25 = (undefined4 *)((int)_Dst + 2);
          if (uVar19 < 8) goto LAB_10005d28;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_10005d20_caseD_2;
          case 3:
            goto switchD_10005d20_caseD_3;
          }
          break;
        case 3:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          _Src = (undefined4 *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)_Dst + 1);
          if (uVar19 < 8) goto LAB_10005d28;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_10005d20_caseD_2;
          case 3:
            goto switchD_10005d20_caseD_3;
          }
        }
      }
      goto switchD_10005d20_caseD_1;
    }
  }
  else {
    if (((((uint)_Dst ^ (uint)_Src) & 0xf) == 0) && ((DAT_10033540 >> 1 & 1) != 0)) {
      if (((uint)_Src & 0xf) != 0) {
        uVar19 = 0x10 - ((uint)_Src & 0xf);
        _Size = _Size - uVar19;
        for (uVar20 = uVar19 & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          *(undefined *)puVar25 = *_Src;
          _Src = (void *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)puVar25 + 1);
        }
        for (uVar19 = uVar19 >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {
                    // WARNING: Load size is inaccurate
          *puVar25 = *_Src;
          _Src = (void *)((int)_Src + 4);
          puVar25 = puVar25 + 1;
        }
      }
      for (uVar20 = _Size >> 7; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
        uVar26 = *(undefined4 *)((int)_Src + 4);
        uVar27 = *(undefined4 *)((int)_Src + 8);
        uVar28 = *(undefined4 *)((int)_Src + 0xc);
        uVar4 = *(undefined4 *)((int)_Src + 0x10);
        uVar5 = *(undefined4 *)((int)_Src + 0x14);
        uVar6 = *(undefined4 *)((int)_Src + 0x18);
        uVar7 = *(undefined4 *)((int)_Src + 0x1c);
        uVar8 = *(undefined4 *)((int)_Src + 0x20);
        uVar9 = *(undefined4 *)((int)_Src + 0x24);
        uVar10 = *(undefined4 *)((int)_Src + 0x28);
        uVar11 = *(undefined4 *)((int)_Src + 0x2c);
        uVar12 = *(undefined4 *)((int)_Src + 0x30);
        uVar13 = *(undefined4 *)((int)_Src + 0x34);
        uVar14 = *(undefined4 *)((int)_Src + 0x38);
        uVar15 = *(undefined4 *)((int)_Src + 0x3c);
        *puVar25 = *_Src;
        puVar25[1] = uVar26;
        puVar25[2] = uVar27;
        puVar25[3] = uVar28;
        puVar25[4] = uVar4;
        puVar25[5] = uVar5;
        puVar25[6] = uVar6;
        puVar25[7] = uVar7;
        puVar25[8] = uVar8;
        puVar25[9] = uVar9;
        puVar25[10] = uVar10;
        puVar25[0xb] = uVar11;
        puVar25[0xc] = uVar12;
        puVar25[0xd] = uVar13;
        puVar25[0xe] = uVar14;
        puVar25[0xf] = uVar15;
        uVar26 = *(undefined4 *)((int)_Src + 0x44);
        uVar27 = *(undefined4 *)((int)_Src + 0x48);
        uVar28 = *(undefined4 *)((int)_Src + 0x4c);
        uVar4 = *(undefined4 *)((int)_Src + 0x50);
        uVar5 = *(undefined4 *)((int)_Src + 0x54);
        uVar6 = *(undefined4 *)((int)_Src + 0x58);
        uVar7 = *(undefined4 *)((int)_Src + 0x5c);
        uVar8 = *(undefined4 *)((int)_Src + 0x60);
        uVar9 = *(undefined4 *)((int)_Src + 100);
        uVar10 = *(undefined4 *)((int)_Src + 0x68);
        uVar11 = *(undefined4 *)((int)_Src + 0x6c);
        uVar12 = *(undefined4 *)((int)_Src + 0x70);
        uVar13 = *(undefined4 *)((int)_Src + 0x74);
        uVar14 = *(undefined4 *)((int)_Src + 0x78);
        uVar15 = *(undefined4 *)((int)_Src + 0x7c);
        puVar25[0x10] = *(undefined4 *)((int)_Src + 0x40);
        puVar25[0x11] = uVar26;
        puVar25[0x12] = uVar27;
        puVar25[0x13] = uVar28;
        puVar25[0x14] = uVar4;
        puVar25[0x15] = uVar5;
        puVar25[0x16] = uVar6;
        puVar25[0x17] = uVar7;
        puVar25[0x18] = uVar8;
        puVar25[0x19] = uVar9;
        puVar25[0x1a] = uVar10;
        puVar25[0x1b] = uVar11;
        puVar25[0x1c] = uVar12;
        puVar25[0x1d] = uVar13;
        puVar25[0x1e] = uVar14;
        puVar25[0x1f] = uVar15;
        _Src = (void *)((int)_Src + 0x80);
        puVar25 = puVar25 + 0x20;
      }
      if ((_Size & 0x7f) != 0) {
        for (uVar20 = (_Size & 0x7f) >> 4; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          uVar26 = *(undefined4 *)((int)_Src + 4);
          uVar27 = *(undefined4 *)((int)_Src + 8);
          uVar28 = *(undefined4 *)((int)_Src + 0xc);
          *puVar25 = *_Src;
          puVar25[1] = uVar26;
          puVar25[2] = uVar27;
          puVar25[3] = uVar28;
          _Src = (void *)((int)_Src + 0x10);
          puVar25 = puVar25 + 4;
        }
        if ((_Size & 0xf) != 0) {
          for (uVar20 = (_Size & 0xf) >> 2; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *puVar25 = *_Src;
            _Src = (void *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          for (uVar20 = _Size & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *(undefined *)puVar25 = *_Src;
            _Src = (void *)((int)_Src + 1);
            puVar25 = (undefined4 *)((int)puVar25 + 1);
          }
        }
      }
      return _Dst;
    }
    if ((DAT_1004589c & 1) == 0) goto LAB_10005ceb;
    if (((uint)_Dst & 3) != 0) goto LAB_10005d08;
    if (((uint)_Src & 3) == 0) {
      if (((uint)_Dst >> 2 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar26 = *_Src;
        _Size = _Size - 4;
        _Src = (void *)((int)_Src + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if (((uint)_Dst >> 3 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar1 = *_Src;
        _Size = _Size - 8;
        _Src = (void *)((int)_Src + 8);
        *(undefined8 *)_Dst = uVar1;
        _Dst = (void *)((int)_Dst + 8);
      }
      if (((uint)_Src & 7) == 0) {
                    // WARNING: Load size is inaccurate
        puVar17 = (undefined8 *)((int)_Src + -8);
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        do {
          puVar22 = puVar17;
          uVar5 = *(undefined4 *)(puVar22 + 4);
          uVar6 = *(undefined4 *)((int)puVar22 + 0x24);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(puVar22 + 2);
          uVar28 = *(undefined4 *)(puVar22 + 7);
          uVar4 = *(undefined4 *)((int)puVar22 + 0x3c);
          auVar3 = *(undefined (*) [32])(puVar22 + 4);
          *(undefined4 *)((int)_Dst + 8) = uVar26;
          *(undefined4 *)((int)_Dst + 0xc) = uVar27;
          *(undefined4 *)((int)_Dst + 0x10) = uVar5;
          *(undefined4 *)((int)_Dst + 0x14) = uVar6;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x40,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x40,0);
          _Dst = (void *)((int)_Dst + 0x30);
          puVar17 = puVar22 + 6;
          uVar26 = uVar28;
          uVar27 = uVar4;
        } while (0x2f < (int)_Size);
        puVar22 = puVar22 + 7;
      }
      else if (((uint)_Src >> 3 & 1) == 0) {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -4;
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        uVar28 = *(undefined4 *)((int)_Src + 8);
        do {
          iVar21 = iVar16;
          uVar7 = *(undefined4 *)(iVar21 + 0x20);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar4 = *(undefined4 *)(iVar21 + 0x34);
          uVar5 = *(undefined4 *)(iVar21 + 0x38);
          uVar6 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 4) = uVar26;
          *(undefined4 *)((int)_Dst + 8) = uVar27;
          *(undefined4 *)((int)_Dst + 0xc) = uVar28;
          *(undefined4 *)((int)_Dst + 0x10) = uVar7;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x20,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x20,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar4;
          uVar27 = uVar5;
          uVar28 = uVar6;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x34);
      }
      else {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -0xc;
        uVar26 = *_Src;
        do {
          iVar21 = iVar16;
          uVar28 = *(undefined4 *)(iVar21 + 0x20);
          uVar4 = *(undefined4 *)(iVar21 + 0x24);
          uVar5 = *(undefined4 *)(iVar21 + 0x28);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar27 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 0xc) = uVar26;
          *(undefined4 *)((int)_Dst + 0x10) = uVar28;
          *(undefined4 *)((int)_Dst + 0x14) = uVar4;
          *(undefined4 *)((int)_Dst + 0x18) = uVar5;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x60,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x60,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar27;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x3c);
      }
      for (; 0xf < (int)_Size; _Size = _Size - 0x10) {
        uVar26 = *(undefined4 *)puVar22;
        uVar27 = *(undefined4 *)((int)puVar22 + 4);
        uVar28 = *(undefined4 *)(puVar22 + 1);
        uVar4 = *(undefined4 *)((int)puVar22 + 0xc);
        puVar22 = puVar22 + 2;
        *(undefined4 *)_Dst = uVar26;
        *(undefined4 *)((int)_Dst + 4) = uVar27;
        *(undefined4 *)((int)_Dst + 8) = uVar28;
        *(undefined4 *)((int)_Dst + 0xc) = uVar4;
        _Dst = (void *)((int)_Dst + 0x10);
      }
      if ((_Size >> 2 & 1) != 0) {
        uVar26 = *(undefined4 *)puVar22;
        _Size = _Size - 4;
        puVar22 = (undefined8 *)((int)puVar22 + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if ((_Size >> 3 & 1) != 0) {
        _Size = _Size - 8;
        *(undefined8 *)_Dst = *puVar22;
      }
                    // WARNING: Could not recover jumptable at 0x10005ce9. Too many branches
                    // WARNING: Treating indirect jump as call
      pvVar18 = (void *)(*(code *)(&switchD_10005d20::switchdataD_10005e18)[_Size])();
      return pvVar18;
    }
  }
  uVar19 = _Size >> 2;
  if (uVar19 < 8) {
LAB_10005d28:
                    // WARNING: Could not recover jumptable at 0x10005d28. Too many branches
                    // WARNING: Treating indirect jump as call
    pvVar18 = (void *)(*(code *)(&PTR_LAB_10005dac)[uVar19])();
    return pvVar18;
  }
                    // WARNING: Load size is inaccurate
  for (; uVar19 != 0; uVar19 = uVar19 - 1) {
    *puVar25 = *_Src;
    _Src = (undefined4 *)((int)_Src + 4);
    puVar25 = puVar25 + 1;
  }
  switch(_Size & 3) {
  case 0:
    return _Dst;
  case 2:
switchD_10005d20_caseD_2:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    return _Dst;
  case 3:
switchD_10005d20_caseD_3:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    *(undefined *)((int)puVar25 + 2) = *(undefined *)((int)_Src + 2);
    return _Dst;
  }
switchD_10005d20_caseD_1:
                    // WARNING: Load size is inaccurate
  *(undefined *)puVar25 = *_Src;
  return _Dst;
}



void __fastcall FUN_10005dcc(int param_1,int param_2)

{
  int unaff_ESI;
  int unaff_EDI;
  
  *(undefined4 *)(unaff_EDI + -0x1c + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x1c + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x18 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x18 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x14 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x14 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x10 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x10 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0xc + param_1 * 4) = *(undefined4 *)(unaff_ESI + -0xc + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -8 + param_1 * 4) = *(undefined4 *)(unaff_ESI + -8 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -4 + param_1 * 4) = *(undefined4 *)(unaff_ESI + -4 + param_1 * 4);
                    // WARNING: Could not recover jumptable at 0x10005e0f. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)(&switchD_10005d20::switchdataD_10005e18)[param_2])();
  return;
}



void __fastcall FUN_10005f68(int param_1,int param_2)

{
  int unaff_ESI;
  int unaff_EDI;
  
  *(undefined4 *)(unaff_EDI + 0x1c + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x1c + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x18 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x18 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x14 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x14 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x10 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x10 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0xc + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0xc + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 8 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 8 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 4 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 4 + param_1 * 4);
                    // WARNING: Could not recover jumptable at 0x10005fab. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)(&switchD_10005eb4::switchdataD_10005fb4)[param_2])();
  return;
}



uint * __cdecl FUN_10006130(uint *param_1,byte param_2,uint param_3)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint *puVar4;
  
  if (param_3 == 0) {
    return param_1;
  }
  uVar1 = (uint)param_2;
  puVar4 = param_1;
  if ((DAT_1004589c >> 1 & 1) == 0) {
    if ((0x7f < (int)param_3) && ((DAT_10033540 >> 1 & 1) != 0)) {
      if (uVar1 == 0) {
        uVar1 = 0;
      }
      else {
        uVar1 = SUB164(CONCAT142(ZEXT214(0) & SUB1614((undefined  [16])0xffffffffff000000 >> 0x10,0)
                                 & SUB1614((undefined  [16])0xffffffffff00ffff >> 0x10,0),
                                 CONCAT11(param_2,param_2)),0);
        uVar1 = uVar1 | uVar1 << 0x10;
      }
      if (((uint)param_1 & 0xf) != 0) {
        uVar2 = 0x10 - ((uint)param_1 & 0xf);
        param_3 = param_3 - uVar2;
        for (uVar3 = uVar2 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {
          *(byte *)puVar4 = param_2;
          puVar4 = (uint *)((int)puVar4 + 1);
        }
        for (uVar2 = uVar2 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {
          *puVar4 = uVar1;
          puVar4 = puVar4 + 1;
        }
      }
      for (uVar3 = param_3 >> 7; uVar3 != 0; uVar3 = uVar3 - 1) {
        *puVar4 = uVar1;
        puVar4[1] = uVar1;
        puVar4[2] = uVar1;
        puVar4[3] = uVar1;
        puVar4[4] = uVar1;
        puVar4[5] = uVar1;
        puVar4[6] = uVar1;
        puVar4[7] = uVar1;
        puVar4[8] = uVar1;
        puVar4[9] = uVar1;
        puVar4[10] = uVar1;
        puVar4[0xb] = uVar1;
        puVar4[0xc] = uVar1;
        puVar4[0xd] = uVar1;
        puVar4[0xe] = uVar1;
        puVar4[0xf] = uVar1;
        puVar4[0x10] = uVar1;
        puVar4[0x11] = uVar1;
        puVar4[0x12] = uVar1;
        puVar4[0x13] = uVar1;
        puVar4[0x14] = uVar1;
        puVar4[0x15] = uVar1;
        puVar4[0x16] = uVar1;
        puVar4[0x17] = uVar1;
        puVar4[0x18] = uVar1;
        puVar4[0x19] = uVar1;
        puVar4[0x1a] = uVar1;
        puVar4[0x1b] = uVar1;
        puVar4[0x1c] = uVar1;
        puVar4[0x1d] = uVar1;
        puVar4[0x1e] = uVar1;
        puVar4[0x1f] = uVar1;
        puVar4 = puVar4 + 0x20;
      }
      if ((param_3 & 0x7f) != 0) {
        for (uVar3 = (param_3 & 0x7f) >> 4; uVar3 != 0; uVar3 = uVar3 - 1) {
          *puVar4 = uVar1;
          puVar4[1] = uVar1;
          puVar4[2] = uVar1;
          puVar4[3] = uVar1;
          puVar4 = puVar4 + 4;
        }
        if ((param_3 & 0xf) != 0) {
          for (uVar3 = (param_3 & 0xf) >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {
            *puVar4 = uVar1;
            puVar4 = puVar4 + 1;
          }
          for (uVar1 = param_3 & 3; uVar1 != 0; uVar1 = uVar1 - 1) {
            *(byte *)puVar4 = param_2;
            puVar4 = (uint *)((int)puVar4 + 1);
          }
        }
      }
      return param_1;
    }
    if (3 < param_3) {
      uVar2 = -(int)param_1 & 3;
      uVar3 = param_3;
      if (uVar2 != 0) {
        uVar3 = param_3 - uVar2;
        do {
          *(byte *)puVar4 = param_2;
          puVar4 = (uint *)((int)puVar4 + 1);
          uVar2 = uVar2 - 1;
        } while (uVar2 != 0);
      }
      uVar1 = uVar1 * 0x1010101;
      param_3 = uVar3 & 3;
      uVar3 = uVar3 >> 2;
      if (uVar3 != 0) {
        for (; uVar3 != 0; uVar3 = uVar3 - 1) {
          *puVar4 = uVar1;
          puVar4 = puVar4 + 1;
        }
        if (param_3 == 0) {
          return param_1;
        }
      }
    }
    do {
      *(char *)puVar4 = (char)uVar1;
      puVar4 = (uint *)((int)puVar4 + 1);
      param_3 = param_3 - 1;
    } while (param_3 != 0);
  }
  else {
    for (; param_3 != 0; param_3 = param_3 - 1) {
      *(byte *)puVar4 = param_2;
      puVar4 = (uint *)((int)puVar4 + 1);
    }
  }
  return param_1;
}



undefined4 FUN_100061c0(void)

{
  uint *Ptr;
  
  Ptr = FUN_10001770(0x20,4);
  DAT_100476f0 = EncodePointer(Ptr);
  if (Ptr == (uint *)0x0) {
    DAT_100476f4 = DAT_100476f0;
    return 0x18;
  }
  DAT_100476f4 = DAT_100476f0;
  *Ptr = 0;
  return 0;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

PVOID __cdecl FUN_100061ef(PVOID param_1)

{
  PVOID pvVar1;
  
  FUN_1000a383();
  pvVar1 = FUN_10006233(param_1);
  FUN_1000622d();
  return pvVar1;
}



void FUN_1000622d(void)

{
  FUN_1000a38c();
  return;
}



PVOID __cdecl FUN_10006233(PVOID param_1)

{
  PVOID *ppvVar1;
  PVOID *ppvVar2;
  uint uVar3;
  uint uVar4;
  PVOID pvVar5;
  int iVar6;
  
  ppvVar1 = (PVOID *)DecodePointer(DAT_100476f4);
  ppvVar2 = (PVOID *)DecodePointer(DAT_100476f0);
  if ((ppvVar2 < ppvVar1) || (iVar6 = (int)ppvVar2 - (int)ppvVar1, iVar6 + 4U < 4)) {
    return (PVOID)0x0;
  }
  uVar3 = FUN_100017d0(ppvVar1);
  if (uVar3 < iVar6 + 4U) {
    uVar4 = 0x800;
    if (uVar3 < 0x800) {
      uVar4 = uVar3;
    }
    if ((uVar4 + uVar3 < uVar3) ||
       (pvVar5 = (PVOID)FUN_100017f0(ppvVar1,uVar4 + uVar3), pvVar5 == (PVOID)0x0)) {
      if (uVar3 + 0x10 < uVar3) {
        return (PVOID)0x0;
      }
      pvVar5 = (PVOID)FUN_100017f0(ppvVar1,uVar3 + 0x10);
      if (pvVar5 == (PVOID)0x0) {
        return (PVOID)0x0;
      }
    }
    ppvVar2 = (PVOID *)((int)pvVar5 + (iVar6 >> 2) * 4);
    DAT_100476f4 = EncodePointer(pvVar5);
  }
  pvVar5 = EncodePointer(param_1);
  *ppvVar2 = pvVar5;
  DAT_100476f0 = EncodePointer(ppvVar2 + 1);
  return param_1;
}



int __cdecl FUN_100062eb(PVOID param_1)

{
  PVOID pvVar1;
  
  pvVar1 = FUN_100061ef(param_1);
  return (pvVar1 != (PVOID)0x0) - 1;
}



// Library Function - Single Match
//  ___libm_sse2_atanf
// 
// Library: Visual Studio

uint ___libm_sse2_atanf(void)

{
  uint uVar1;
  uint uVar2;
  undefined in_XMM0 [16];
  undefined auVar3 [16];
  
  uVar1 = (uint)SUB162(in_XMM0 >> 0x10,0);
  uVar2 = uVar1 & 0x7ff8;
  if (uVar2 - 0x3d00 < 0x22f9) {
    pinsrw(ZEXT816(0),0x4050,3);
    auVar3 = pinsrw(ZEXT816(0),0x4050,3);
    pinsrw(auVar3,uVar1 & 0x8000,3);
    return uVar1 & 0x8000;
  }
  if (uVar2 - 0x1f80 < 0x4080) {
    return uVar1;
  }
  if (uVar2 < 0x5f80) {
    uVar1 = 0x3f800001;
    if (uVar2 < 0x80) {
      uVar1 = SUB164(in_XMM0,0);
    }
    return uVar1;
  }
  if ((0x7f7f < uVar2) && ((SUB164(in_XMM0,0) & 0x7fffffff) != 0x7f800000)) {
    return uVar1;
  }
  pinsrw(ZEXT816(0),uVar1 & 0x8000,1);
  return uVar1 & 0x8000;
}



// Library Function - Single Match
//  ___libm_sse2_tanf
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017, Visual Studio 2019

ulonglong __fastcall ___libm_sse2_tanf(undefined4 param_1,undefined4 param_2)

{
  ushort uVar1;
  uint uVar2;
  float in_XMM0_Da;
  ulonglong uVar3;
  
  uVar1 = ((ushort)((uint)in_XMM0_Da >> 0x10) & 0x7fff) - 0x80;
  if (uVar1 < 0x4700) {
    uVar2 = (int)ROUND(in_XMM0_Da * 10.18592) + 0x1c7600U & 0x1f;
    return CONCAT44(uVar2 * 0x40,&DAT_1001a5e0 + uVar2 * 0x48);
  }
  if ((short)uVar1 < 0x4700) {
    return CONCAT44(param_2,(uint)uVar1);
  }
  if (((uint)in_XMM0_Da & 0x7f800000) != 0x7f800000) {
    uVar3 = FUN_1000a6d0(param_1,param_2,SUB84((double)in_XMM0_Da,0),
                         (int)((ulonglong)(double)in_XMM0_Da >> 0x20));
    return uVar3;
  }
  return CONCAT44(param_2,in_XMM0_Da) & 0xffffffff7f800000;
}



// Library Function - Single Match
//  public: virtual __thiscall type_info::~type_info(void)
// 
// Library: Visual Studio 2012 Release

void __thiscall type_info::_type_info(type_info *this)

{
  *(undefined ***)this = vftable;
  _Type_info_dtor(this);
  return;
}



// Library Function - Single Match
//  public: virtual void * __thiscall type_info::`scalar deleting destructor'(unsigned int)
// 
// Libraries: Visual Studio 2008 Release, Visual Studio 2010 Release, Visual Studio 2012 Release

void * __thiscall type_info::_scalar_deleting_destructor_(type_info *this,uint param_1)

{
  _type_info(this);
  if ((param_1 & 1) != 0) {
    FUN_10001730(this);
  }
  return this;
}



// Library Function - Single Match
//  __fpmath
// 
// Library: Visual Studio 2012 Release

void __cdecl __fpmath(int param_1)

{
  FUN_1000667a();
  if (param_1 != 0) {
    __setdefaultprecision();
  }
  return;
}



void FUN_1000667a(void)

{
  PTR_FUN_10033560 = __cfltcvt;
  PTR_FUN_10033564 = FUN_1000b1e9;
  PTR_FUN_10033568 = FUN_1000b27a;
  PTR_FUN_1003356c = FUN_1000b2d4;
  PTR_FUN_10033570 = __positive;
  PTR_FUN_10033574 = __cfltcvt;
  PTR_FUN_10033578 = __cfltcvt_l;
  PTR_FUN_1003357c = FUN_1000b292;
  PTR_FUN_10033580 = FUN_1000b1fa;
  PTR_FUN_10033584 = FUN_1000b2e5;
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_100066da(undefined4 param_1,int param_2,int param_3)

{
  bool bVar1;
  undefined3 extraout_var;
  undefined4 uVar2;
  int iVar3;
  uint *puVar4;
  DWORD DVar5;
  
  if (param_2 == 1) {
    bVar1 = FUN_100017a0();
    if (CONCAT31(extraout_var,bVar1) != 0) {
      iVar3 = FUN_1000b8c8();
      if (iVar3 != 0) {
        FUN_1000c442();
        DAT_10047700 = GetCommandLineA();
        DAT_10045888 = FUN_1000c013();
        iVar3 = FUN_1000b95b();
        if (-1 < iVar3) {
          iVar3 = FUN_1000bc61();
          if (-1 < iVar3) {
            iVar3 = FUN_1000be90();
            if (-1 < iVar3) {
              iVar3 = FUN_1000a25b(0);
              if (iVar3 == 0) {
                DAT_10045884 = DAT_10045884 + 1;
                goto LAB_10006841;
              }
            }
          }
          __ioterm();
        }
        FUN_1000b93e();
      }
      FUN_10005320();
    }
LAB_100066f7:
    uVar2 = 0;
  }
  else {
    if (param_2 == 0) {
      if (DAT_10045884 < 1) goto LAB_100066f7;
      DAT_10045884 = DAT_10045884 + -1;
      if (_DAT_100458c8 == 0) {
        __cexit();
      }
      FUN_1000a123();
      if (param_3 == 0) {
        __ioterm();
        FUN_1000b93e();
        FUN_10005320();
      }
      FUN_100067bc();
    }
    else if (param_2 == 2) {
      iVar3 = FUN_1000c0dd(DAT_10033598);
      if (iVar3 == 0) {
        puVar4 = FUN_10001770(1,0x3bc);
        if (puVar4 != (uint *)0x0) {
          iVar3 = FUN_1000c0fc(DAT_10033598,puVar4);
          if (iVar3 != 0) {
            FUN_1000b815((int)puVar4,0);
            DVar5 = GetCurrentThreadId();
            *puVar4 = DVar5;
            puVar4[1] = 0xffffffff;
            goto LAB_10006841;
          }
          FUN_10001730(puVar4);
        }
        goto LAB_100066f7;
      }
    }
    else if (param_2 == 3) {
      FUN_1000b758(0);
    }
LAB_10006841:
    uVar2 = 1;
  }
  return uVar2;
}



void FUN_100067bc(void)

{
  int unaff_ESI;
  
  if ((unaff_ESI == 0) && (DAT_10033598 != -1)) {
    FUN_1000b93e();
  }
  return;
}



void entry(undefined4 param_1,int param_2,int param_3)

{
  if (param_2 == 1) {
    ___security_init_cookie();
  }
  ___DllMainCRTStartup(param_1,param_2,param_3);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// Library Function - Single Match
//  ___DllMainCRTStartup
// 
// Library: Visual Studio 2012 Release

uint __cdecl ___DllMainCRTStartup(undefined4 param_1,int param_2,int param_3)

{
  int iVar1;
  uint uVar2;
  
  iVar1 = 1;
  if ((param_2 == 0) && (DAT_10045884 == 0)) {
LAB_10006975:
    uVar2 = 0;
  }
  else {
    if ((param_2 == 1) || (param_2 == 2)) {
      if (false) {
        iVar1 = (*(code *)0x0)(param_1,param_2,param_3);
      }
      if ((iVar1 == 0) || (iVar1 = FUN_100066da(param_1,param_2,param_3), iVar1 == 0))
      goto LAB_10006975;
    }
    uVar2 = FUN_1000c00d();
    if ((param_2 == 1) && (uVar2 == 0)) {
      FUN_1000c00d();
      FUN_100066da(param_1,0,param_3);
      if (false) {
        (*(code *)0x0)(param_1,0,param_3);
      }
    }
    if ((param_2 == 0) || (param_2 == 3)) {
      iVar1 = FUN_100066da(param_1,param_2,param_3);
      uVar2 = uVar2 & -(uint)(iVar1 != 0);
      if ((uVar2 != 0) && (false)) {
        uVar2 = (*(code *)0x0)(param_1,param_2,param_3);
      }
    }
  }
  return uVar2;
}



// Library Function - Single Match
//  ___DllXcptFilter
// 
// Library: Visual Studio 2012 Release

void __cdecl
___DllXcptFilter(undefined4 param_1,int param_2,int param_3,ulong param_4,
                _EXCEPTION_POINTERS *param_5)

{
  if (param_2 == 1) {
    FUN_100066da(param_1,0,param_3);
  }
  ___CppXcptFilter(param_4,param_5);
  return;
}



float10 FUN_100069c4(void)

{
  ushort in_FPUStatusWord;
  float10 in_ST0;
  float10 in_ST1;
  
  do {
    in_ST1 = in_ST1 - (in_ST1 / in_ST0) * in_ST0;
  } while ((in_FPUStatusWord & 0x400) != 0);
  return in_ST1;
}



// Library Function - Single Match
//  ___libm_sse2_powf
// 
// Library: Visual Studio

ulonglong ___libm_sse2_powf(void)

{
  ushort uVar1;
  float fVar2;
  uint uVar3;
  float fVar4;
  uint uVar5;
  int iVar6;
  float fVar7;
  float fVar8;
  undefined in_XMM0 [16];
  undefined auVar9 [16];
  float fVar10;
  double dVar11;
  undefined in_XMM1 [16];
  undefined auVar12 [16];
  longlong in_XMM3_Qa;
  float fVar14;
  double dVar15;
  uint uVar16;
  double dVar17;
  double dVar18;
  double dVar19;
  longlong lVar20;
  double dVar23;
  undefined auVar21 [16];
  longlong lVar24;
  int iVar25;
  undefined auVar13 [16];
  uint uVar22;
  
  auVar9 = in_XMM0 & ZEXT1216(ZEXT812(0xffffffff));
  auVar12 = in_XMM1 & ZEXT1216(ZEXT812(0xffffffff));
  fVar4 = SUB164(auVar9,0);
  fVar2 = (float)(uint)SUB162(auVar9 >> 0x10,0);
  dVar15 = (double)(SUB168(auVar9,0) << 0x1d | 0x3ff0000000000000);
  fVar10 = SUB164(auVar12,0);
  dVar11 = (double)fVar10;
  auVar13 = CONCAT88(SUB168(auVar12 >> 0x40,0),dVar11);
  fVar8 = fVar4;
  fVar14 = fVar4;
  if ((0x7f7fU - (int)fVar2 | (int)fVar2 - 0x80U) < 0x8000) {
    iVar6 = 0x3f3f;
    uVar5 = 0;
LAB_10006a51:
    uVar3 = ((uint)fVar2 & 0x7f) + 1 & 0xfe;
    dVar17 = (double)((ulonglong)*(double *)(&DAT_1001de50 + uVar3 * 4) & 0xfffffffffc000000);
    dVar15 = dVar15 * (*(double *)(&DAT_1001de50 + uVar3 * 4) - dVar17) +
             (dVar17 * dVar15 - 1.442695040888963);
    uVar22 = (uint)((ulonglong)dVar15 >> 0x20);
    dVar18 = (double)((ulonglong)dVar15 & 0xffffffff | (ulonglong)uVar22 << 0x20);
    dVar23 = SUB168(CONCAT412(uVar22,CONCAT48(SUB84(dVar15,0),dVar18)) >> 0x40,0);
    dVar19 = dVar18 * dVar18;
    dVar15 = (*(double *)(&DAT_1001dc40 + uVar3 * 4) + dVar15 +
              (double)((int)((ulonglong)(uint)fVar14 >> 0x10) - iVar6 >> 7) +
             dVar19 * -0.3465735902799726) * dVar11 * 32.0;
    dVar17 = (dVar15 + 6755399441055744.0) - 6755399441055744.0;
    uVar22 = (ushort)((ulonglong)dVar15 >> 0x30) & 0x7ff0;
    uVar3 = 0x41d0 - uVar22;
    if ((uVar22 - 0x3e60 | uVar3) < 0x80000000) {
      uVar3 = (uint)ROUND(dVar17);
      dVar11 = (dVar15 - dVar17) +
               dVar11 * 32.0 *
               ((dVar18 * 0.04616701971661669 + -0.08325612545013428) * dVar19 * dVar19 +
               dVar23 * 0.1601510046394005 * dVar23 * dVar23);
      uVar16 = (uint)((ulonglong)dVar11 >> 0x20);
      dVar15 = (double)((ulonglong)dVar11 & 0xffffffff | (ulonglong)uVar16 << 0x20);
      uVar22 = 0xfbf - uVar3 | uVar3 + 4000;
      if (uVar22 < 0x80000000) {
        pinsrw(ZEXT816(0),(uVar5 | 0x3ff0) + ((int)uVar3 >> 1 & 0xfffffff0U),3);
        return CONCAT44((int)uVar3 >> 1,uVar3) & 0xfffffff00000001f;
      }
      if (0x1fff < (int)uVar3) {
LAB_10006fe5:
        pinsrw(ZEXT816(0),uVar5 | 0x7f7f,1);
        return CONCAT44(uVar22,uVar3);
      }
      if (-0x2000 < (int)uVar3) {
        iVar6 = ((int)uVar3 >> 6) * 0x10;
        auVar12 = pinsrw(ZEXT816(0),(uVar5 | 0x3ff0) + iVar6,3);
        auVar9 = pinsrw(ZEXT816(0),((((int)uVar3 >> 5) - ((int)uVar3 >> 6)) + 0x3ff) * 0x10,3);
        return CONCAT44(iVar6,(uint)(float)((((double)((ulonglong)
                                                       (SUB168(CONCAT412(uVar16,CONCAT48(SUB84(
                                                  dVar11,0),dVar15)) >> 0x40,0) *
                                                  0.0002345961982022468 + 0.02166084939249829) &
                                                  0xffffffff00000000) +
                                             dVar15 * dVar15 *
                                             (dVar15 * 9.172562701824643e-09 + 1.693850972437182e-06
                                             )) * dVar11 * *(double *)
                                                            (&DAT_1001e060 + (uVar3 & 0x1f) * 8) *
                                                  SUB168(auVar12,0) +
                                            *(double *)(&DAT_1001e060 + (uVar3 & 0x1f) * 8) *
                                            SUB168(auVar12,0)) * SUB168(auVar9,0)) >> 0x10) &
               0xffffffff00007fff;
      }
LAB_10006ffc:
      pinsrw(ZEXT816(0),uVar5,1);
      return CONCAT44(uVar22,0x800000);
    }
    if (fVar4 == 1.0) goto LAB_10006ec8;
    if (((uint)fVar10 & 0x7fffffff) < 0x7f800000) {
      fVar7 = fVar4;
      if ((auVar12 & (undefined  [16])0x7fffffff) == (undefined  [16])0x0) {
LAB_10006f1c:
        if (fVar4 != 0.0) {
          fVar4 = (float)((uint)fVar4 & 0x7fffffff);
        }
        return CONCAT44(fVar7,fVar4);
      }
      uVar1 = (ushort)((ulonglong)dVar17 >> 0x30);
      uVar3 = (uint)uVar1;
      uVar22 = uVar3 & 0x7ff0;
      if (uVar22 < 0x3e61) {
        return (ulonglong)CONCAT24(uVar1,uVar3) & 0x7ff0ffffffff;
      }
      uVar3 = uVar3 & 0x8000;
      if (((ulonglong)dVar17 & 0x8000000000000000) == 0) goto LAB_10006fe5;
      goto LAB_10006ffc;
    }
  }
  else {
    uVar3 = (uint)((ulonglong)dVar11 >> 0x20);
    uVar5 = uVar3 & 0x7fffffff;
    if (uVar5 < 0x7ff00000) {
      fVar7 = (float)(SUB84(dVar11,0) | uVar5);
      if (fVar7 == 0.0) goto LAB_10006f1c;
      if ((uint)fVar4 < 0x7f800000) {
        uVar5 = 0;
LAB_10006ced:
        auVar9 = pinsrw(ZEXT816(0),0x5f80,1);
        fVar7 = fVar4 * SUB164(auVar9,0);
        if (((uint)fVar7 & 0x7fffffff) != 0) {
          fVar2 = (float)((uint)fVar7 >> 0x10);
          fVar14 = (float)((uint)fVar7 & 0x7fffffff);
          dVar15 = (double)((ulonglong)(uint)fVar7 << 0x1d | 0x3ff0000000000000);
          iVar6 = 0x5f3f;
          goto LAB_10006a51;
        }
      }
      else {
        auVar21 = ZEXT816((ulonglong)dVar11) | CONCAT88(in_XMM3_Qa << 0x34,0xfff0000000000000);
        auVar9 = pmaxsw(ZEXT1216(CONCAT48(((uint)((ulonglong)(SUB168(auVar9 >> 0x40,0) << 0x1d) >>
                                                 0x20) & (uint)((ulonglong)in_XMM3_Qa >> 0x20)) >>
                                          0x14,(ulonglong)((uVar5 >> 0x14) - 0x3f3))),
                        (undefined  [16])0x0);
        lVar20 = SUB168(auVar21,0) << SUB168(auVar9,0);
        lVar24 = SUB168(auVar21 >> 0x40,0) << SUB168(auVar9 >> 0x40,0);
        iVar6 = -(uint)((int)lVar24 == 0);
        iVar25 = -(uint)((int)((ulonglong)lVar24 >> 0x20) == 0);
        auVar9 = CONCAT412(iVar25,CONCAT48(iVar6,CONCAT44(-(uint)((int)((ulonglong)lVar20 >> 0x20)
                                                                 == 0),-(uint)((int)lVar20 == 0))));
        uVar5 = (uint)(ushort)((ushort)(SUB161(auVar9 >> 7,0) & 1) |
                               (ushort)(SUB161(auVar9 >> 0xf,0) & 1) << 1 |
                               (ushort)(SUB161(auVar9 >> 0x17,0) & 1) << 2 |
                               (ushort)(SUB161(auVar9 >> 0x1f,0) & 1) << 3 |
                               (ushort)(SUB161(auVar9 >> 0x27,0) & 1) << 4 |
                               (ushort)(SUB161(auVar9 >> 0x2f,0) & 1) << 5 |
                               (ushort)(SUB161(auVar9 >> 0x37,0) & 1) << 6 |
                              (ushort)(SUB161(auVar9 >> 0x3f,0) & 1) << 7);
        if (0x7f7fffff < ((uint)fVar4 & 0x7fffffff)) {
          uVar1 = (ushort)((ulonglong)dVar11 >> 0x30);
          if (fVar4 == INFINITY) {
            uVar3 = uVar1 & 0x8000;
            if ((auVar13 & (undefined  [16])0x8000000000000000) != (undefined  [16])0x0) {
              return CONCAT44(0x7f800000,(uint)uVar1) & 0xffffffff00008000;
            }
          }
          else {
            fVar8 = (float)((uint)fVar4 & 0x7fffffff);
            if (0x7f800000 < (uint)fVar8) goto LAB_10006cdc;
            if (uVar5 == 0xff) {
              lVar20 = (longlong)dVar11 << (ulonglong)(((uVar3 & 0x7fffffff) >> 0x14) - 0x3f4);
              iVar6 = -(uint)((int)lVar20 == 0);
              uVar3 = -(uint)((int)((ulonglong)lVar20 >> 0x20) == 0);
              if ((ushort)((ushort)((byte)(CONCAT44(uVar3,iVar6) >> 7) & 1) |
                           (ushort)((byte)(CONCAT44(uVar3,iVar6) >> 0xf) & 1) << 1 |
                           (ushort)((byte)(CONCAT44(uVar3,iVar6) >> 0x17) & 1) << 2 |
                           (ushort)((byte)(CONCAT44(uVar3,iVar6) >> 0x1f) & 1) << 3 |
                           (ushort)((byte)(uVar3 >> 7) & 1) << 4 |
                           (ushort)((byte)(uVar3 >> 0xf) & 1) << 5 |
                           (ushort)((byte)(uVar3 >> 0x17) & 1) << 6 |
                          (ushort)(byte)(uVar3 >> 0x1f) << 7) != 0xff) {
                fVar2 = (float)(uVar1 & 0x8000);
                if ((auVar13 & (undefined  [16])0x8000000000000000) == (undefined  [16])0x0) {
                  return CONCAT44(fVar4,(uint)uVar1) & 0x7fffffff00008000;
                }
                goto LAB_10006e02;
              }
            }
            uVar3 = uVar1 & 0x8000;
            if ((auVar13 & (undefined  [16])0x8000000000000000) != (undefined  [16])0x0) {
              return CONCAT44(fVar4,(uint)uVar1) & 0x7fffffff00008000;
            }
          }
          goto LAB_10006efe;
        }
        if (uVar5 == 0xff) {
          lVar20 = (longlong)dVar11 << (ulonglong)(((uVar3 & 0x7fffffff) >> 0x14) - 0x3f4);
          auVar9 = CONCAT412(-(uint)(iVar25 == 0),
                             CONCAT48(-(uint)(iVar6 == 0),
                                      CONCAT44(-(uint)((int)((ulonglong)lVar20 >> 0x20) ==
                                                      -0x80000000),-(uint)((int)lVar20 == 0))));
          uVar5 = (ushort)((ushort)(SUB161(auVar9 >> 7,0) & 1) |
                           (ushort)(SUB161(auVar9 >> 0xf,0) & 1) << 1 |
                           (ushort)(SUB161(auVar9 >> 0x17,0) & 1) << 2 |
                           (ushort)(SUB161(auVar9 >> 0x1f,0) & 1) << 3 |
                           (ushort)(SUB161(auVar9 >> 0x27,0) & 1) << 4 |
                           (ushort)(SUB161(auVar9 >> 0x2f,0) & 1) << 5 |
                           (ushort)(SUB161(auVar9 >> 0x37,0) & 1) << 6 |
                          (ushort)(SUB161(auVar9 >> 0x3f,0) & 1) << 7) + 0x7f01 & 0x8000;
          if (0x7fffff < ((uint)fVar4 & 0x7fffffff)) {
            iVar6 = 0xbf3f;
            goto LAB_10006a51;
          }
          goto LAB_10006ced;
        }
        fVar2 = fVar4;
        fVar7 = fVar4;
        if (fVar4 != -0.0) {
          return CONCAT44(fVar4,fVar4) & 0x7fffffffffffffff;
        }
      }
      if ((auVar12 & (undefined  [16])0x80000000) != (undefined  [16])0x0) {
        return CONCAT44((uint)fVar7 & uVar5 << 0x10,fVar2) | 0x7f80000000000000;
      }
      fVar8 = (float)((uint)fVar7 & uVar5 << 0x10);
      if (fVar8 == 0.0) {
        return (ulonglong)(uint)fVar2;
      }
LAB_10006e02:
      return CONCAT44(fVar8,fVar2);
    }
    fVar8 = (float)((uint)fVar4 & 0x7fffffff);
    if (0x7f800000 < (uint)fVar8) {
LAB_10006cdc:
      return CONCAT44(fVar4,fVar2) & 0x7fffffffffffffff;
    }
  }
  uVar3 = (uint)fVar10 & 0x7fffffff;
  if (0x7f800000 < uVar3) {
    return CONCAT44(fVar8,fVar10) & 0xffffffff7fffffff;
  }
  fVar8 = (float)((uint)fVar4 ^ 0xbf800000);
  if (fVar8 != 0.0) {
    if ((auVar12 & (undefined  [16])0x80000000) == (undefined  [16])0x0) {
      uVar3 = (uint)fVar4 >> 0x10 & 0x7f80;
      if (uVar3 < 0x3f80) {
        return CONCAT44(fVar4,(uint)fVar4 >> 0x10) & 0xffffffff00007f80 ^ 0xbf80000000000000;
      }
    }
    else {
      uVar3 = (uint)fVar4 & 0x7fffffff;
      if (0x3f7fffff < uVar3) {
        return CONCAT44(fVar4,fVar4) & 0xffffffff7fffffff ^ 0xbf80000000000000;
      }
    }
LAB_10006efe:
    return CONCAT44(fVar8,uVar3);
  }
LAB_10006ec8:
  return CONCAT44(fVar8,uVar3);
}



void ___sse2_sin2(void)

{
  ulonglong uVar1;
  int iVar2;
  int in_XMM0_Da;
  uint in_XMM0_Db;
  int in_XMM0_Dc;
  uint in_XMM0_Dd;
  double dStack128;
  double dStack120;
  uint uStack108;
  int iStack104;
  uint uStack100;
  undefined4 uStack96;
  uint uStack92;
  undefined4 uStack88;
  uint uStack84;
  
  iVar2 = movmskpd(&stack0x00000000,
                   CONCAT412(-(uint)(0x40ff4000 < (in_XMM0_Dd & 0x7fffffff)),
                             CONCAT48(-(uint)(0 < in_XMM0_Dc),
                                      CONCAT44(-(uint)(0x40ff4000 < (in_XMM0_Db & 0x7fffffff)),
                                               -(uint)(0 < in_XMM0_Da)))));
  if (iVar2 != 0) {
    uStack108 = in_XMM0_Db & 0x7fffffff;
    uStack100 = in_XMM0_Dd & 0x7fffffff;
    uStack92 = in_XMM0_Db & 0x80000000;
    uStack84 = in_XMM0_Dd & 0x80000000;
    uStack96 = 0;
    uStack88 = 0;
    uVar1 = CONCAT44(in_XMM0_Db,in_XMM0_Da) & 0x7fffffffffffffff;
    iStack104 = in_XMM0_Dc;
    ___common_sin_reduction_LA((int)uVar1,(uint)(uVar1 >> 0x20),&dStack128);
    ___common_sin_reduction_LA(iStack104,uStack100,&dStack120);
  }
  return;
}



// WARNING: This is an inlined function
// WARNING: Function: __alloca_probe replaced with injection: alloca_probe
// Library Function - Single Match
//  __alloca_probe_16
// 
// Library: Visual Studio

uint __alloca_probe_16(undefined1 param_1)

{
  uint in_EAX;
  uint uVar1;
  
  uVar1 = 4 - in_EAX & 0xf;
  return in_EAX + uVar1 | -(uint)CARRY4(in_EAX,uVar1);
}



// WARNING: This is an inlined function
// WARNING: Function: __alloca_probe replaced with injection: alloca_probe
// Library Function - Single Match
//  __alloca_probe_8
// 
// Library: Visual Studio

uint __alloca_probe_8(undefined1 param_1)

{
  uint in_EAX;
  uint uVar1;
  
  uVar1 = 4 - in_EAX & 7;
  return in_EAX + uVar1 | -(uint)CARRY4(in_EAX,uVar1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___libm_sse2_pow
// 
// Libraries: Visual Studio 2017 Debug, Visual Studio 2019 Debug

ulonglong ___libm_sse2_pow(void)

{
  ushort uVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  int iVar6;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  undefined4 uVar10;
  double dVar11;
  double dVar12;
  double dVar13;
  undefined in_XMM0 [16];
  uint in_XMM1_Da;
  uint in_XMM1_Db;
  double dVar14;
  uint in_XMM1_Dd;
  undefined auVar15 [16];
  ulonglong in_XMM2_Qa;
  longlong lVar16;
  undefined auVar17 [16];
  longlong lVar18;
  ulonglong in_XMM3_Qa;
  ulonglong uVar19;
  ulonglong uVar20;
  double dVar21;
  double dVar22;
  double dVar23;
  double dVar24;
  
  dVar11 = SUB168(in_XMM0,0);
  dVar12 = (double)((ulonglong)dVar11 >> 0x2c);
  uVar1 = SUB162(in_XMM0 >> 0x30,0);
  uVar3 = (SUB82(dVar12,0) & 0xff) + 1 & 0x1fe;
  dVar24 = (double)((ulonglong)dVar11 | 0x3ff0000000000000) * *(double *)(&DAT_10020590 + uVar3 * 4)
  ;
  dVar13 = *(double *)(&DAT_10020590 + uVar3 * 4);
  dVar23 = *(double *)(&DAT_100209a0 + uVar3 * 8);
  uVar7 = 0x7fef - uVar1;
  uVar3 = SUB164(in_XMM0,0);
  uVar9 = SUB164(in_XMM0 >> 0x20,0);
  dVar14 = dVar11;
  if ((uVar1 - 0x10 | uVar7) < 0x80000000) {
    uVar7 = 0;
    uVar8 = 0x3fe7f;
LAB_10007152:
    uVar4 = ((ushort)((ulonglong)dVar24 >> 0x26) & 0xff) + 1 & 0x1fe;
    dVar21 = (double)((ulonglong)dVar14 & 0xfffffffffffff | SUB168(_DAT_10023e30,0));
    dVar14 = (double)((ulonglong)dVar21 & 0xfffffffff8000000);
    in_XMM3_Qa = in_XMM3_Qa >> 0x1f;
    dVar21 = dVar21 - dVar14;
    uVar5 = ((ushort)((ulonglong)(dVar24 * *(double *)(&DAT_100211b0 + uVar4 * 4)) >> 0x1f) & 0x1ff)
            + 1 & 0x3fe;
    dVar22 = dVar13 * *(double *)(&DAT_100211b0 + uVar4 * 4) *
             *(double *)(&DAT_10021dd0 + uVar5 * 4);
    dVar24 = dVar24 * *(double *)(&DAT_100211b0 + uVar4 * 4) *
             *(double *)(&DAT_10021dd0 + uVar5 * 4);
    dVar13 = (double)((ulonglong)dVar22 & 0xfffffffff8000000);
    dVar22 = dVar22 - dVar13;
    dVar23 = dVar23 + *(double *)(&DAT_100215c0 + uVar4 * 8) +
             (double)(int)((longlong)dVar12 - (ulonglong)uVar8 >> 8) +
             *(double *)(&DAT_100225e0 + uVar5 * 8) + dVar24 + -1.442694902420044;
    uVar2 = (ushort)(in_XMM1_Db >> 0x10);
    uVar8 = (uint)(ushort)((ulonglong)dVar23 >> 0x30);
    dVar23 = dVar23 - ((((dVar24 - dVar13 * dVar14) - dVar14 * dVar22) - dVar13 * dVar21) -
                      dVar21 * dVar22);
    uVar4 = uVar2 & 0x7ff0;
    if (uVar4 < 0x7ff0) {
      iVar6 = (uVar4 - 0x3ff0) + (uVar8 & 0x7ff0);
      if (0x7fffffff < (0x40a0U - iVar6 | iVar6 - 0x3c70U)) {
        uVar3 = (ushort)((ulonglong)((double)CONCAT44(in_XMM1_Db,in_XMM1_Da) * dVar23) >> 0x30) &
                0x7ff0;
        uVar9 = uVar3 - 0x3c70;
        uVar3 = 0x40a0 - uVar3 | uVar9;
        if (0x7fffffff < uVar3) {
          if (0x7fffffff < uVar9) {
            return CONCAT44(uVar3,uVar9);
          }
          uVar9 = (uVar1 & 0x7ff0) - 0x3ff0;
          uVar3 = (uVar2 ^ uVar9) & 0x8000;
          if (uVar3 != 0) goto LAB_10007a86;
          goto LAB_10007aa3;
        }
      }
      auVar17 = pinsrw(ZEXT816(0),0x4060,3);
      uVar3 = (uint)ROUND((double)(CONCAT44(in_XMM1_Db,in_XMM1_Da) & 0xfffffffff8000000) *
                          (double)((ulonglong)dVar23 & 0xfffffffff8000000) * SUB168(auVar17,0));
      uVar9 = 0x1ff7f - uVar3 | uVar3 + 0x1e1ff;
      if (0 < (int)uVar9) {
        pinsrw(ZEXT816(0),0xbf80,3);
        return CONCAT44(0xbf80,(uVar3 & 0x7f) * 0x10);
      }
      if ((int)uVar3 < 1) {
        if ((int)uVar3 < -0x3fdff) {
LAB_10007a86:
          return CONCAT44(uVar9,uVar3);
        }
        uVar3 = (uVar3 & 0xffffff80) + 0x3fe80;
        uVar10 = 0;
      }
      else {
        if (0x3ffff < uVar3) {
LAB_10007aa3:
          pinsrw(ZEXT816(0),0xffef,3);
          return CONCAT44(uVar9,0xffef);
        }
        uVar3 = uVar3 - 0x80 & 0xffffff80;
        uVar10 = 0x3ff0;
      }
      uVar9 = ((int)-(uVar3 - 0x1ff80) >> 7) + 2;
      iVar6 = uVar9 + (uVar9 & 0x20);
      pinsrw(ZEXT816(0),0xbf80,3);
      pinsrw(ZEXT816(0),uVar10,3);
      if ((int)(uVar3 - 0x1ff80) < 1) {
        return CONCAT44(iVar6,0xbf80);
      }
      return CONCAT44(iVar6,0xbf80);
    }
    auVar17 = CONCAT88(in_XMM2_Qa,CONCAT44(in_XMM1_Db,in_XMM1_Da));
    if (uVar3 == 0) {
      uVar4 = uVar3;
      uVar8 = uVar9;
      if (uVar9 == 0x3ff00000) goto LAB_100078ce;
      if (uVar9 == 0xbff00000) {
        uVar19 = CONCAT44(in_XMM1_Db,in_XMM1_Da) & 0xfffffffffffff;
        uVar3 = -(uint)((int)((in_XMM3_Qa & in_XMM2_Qa) >> 0x20) == 0);
        auVar17 = CONCAT412(uVar3,CONCAT48(-(uint)((int)(in_XMM3_Qa & in_XMM2_Qa) == 0),
                                           CONCAT44(-(uint)((int)(uVar19 >> 0x20) == 0),
                                                    -(uint)((int)uVar19 == 0))));
        uVar4 = (uint)(ushort)((ushort)(SUB161(auVar17 >> 7,0) & 1) |
                               (ushort)(SUB161(auVar17 >> 0xf,0) & 1) << 1 |
                               (ushort)(SUB161(auVar17 >> 0x17,0) & 1) << 2 |
                               (ushort)(SUB161(auVar17 >> 0x1f,0) & 1) << 3 |
                               (ushort)(SUB161(auVar17 >> 0x27,0) & 1) << 4 |
                               (ushort)(SUB161(auVar17 >> 0x2f,0) & 1) << 5 |
                               (ushort)(SUB161(auVar17 >> 0x37,0) & 1) << 6 |
                               (ushort)(SUB161(auVar17 >> 0x3f,0) & 1) << 7 |
                               (ushort)(SUB161(auVar17 >> 0x47,0) & 1) << 8 |
                               (ushort)(SUB161(auVar17 >> 0x4f,0) & 1) << 9 |
                               (ushort)(SUB161(auVar17 >> 0x57,0) & 1) << 10 |
                               (ushort)(SUB161(auVar17 >> 0x5f,0) & 1) << 0xb |
                               (ushort)((byte)(uVar3 >> 7) & 1) << 0xc |
                               (ushort)((byte)(uVar3 >> 0xf) & 1) << 0xd |
                               (ushort)((byte)(uVar3 >> 0x17) & 1) << 0xe |
                              (ushort)(byte)(uVar3 >> 0x1f) << 0xf);
        if (uVar4 == 0xff) {
          return (ulonglong)dVar11 & 0xffffffff00000000 | 0xff;
        }
        goto LAB_1000789f;
      }
    }
  }
  else {
    auVar17 = CONCAT88(in_XMM2_Qa,CONCAT44(in_XMM1_Db,in_XMM1_Da));
    uVar8 = in_XMM1_Db & 0x7fffffff;
    uVar19 = in_XMM3_Qa >> 0x20;
    if (uVar8 < 0x7ff00000) {
      if ((in_XMM1_Da | uVar8) == 0) {
        return (ulonglong)dVar11 & 0x7fffffff00000000 | (ulonglong)(uVar3 | uVar9 & 0x7fffffff);
      }
      if ((int)uVar7 < 0) {
        uVar7 = 0x7fef - uVar7;
        auVar17 = auVar17 | CONCAT88(in_XMM3_Qa << 0x34,0xfff0000000000000);
        in_XMM3_Qa = 0;
        auVar15 = pmaxsw(ZEXT1216(CONCAT48((in_XMM1_Dd & (uint)uVar19) >> 0x14,
                                           (ulonglong)((uVar8 >> 0x14) - 0x3f3))),
                         (undefined  [16])0x0);
        lVar16 = SUB168(auVar17,0) << SUB168(auVar15,0);
        lVar18 = SUB168(auVar17 >> 0x40,0) << SUB168(auVar15 >> 0x40,0);
        uVar8 = -(uint)((int)((ulonglong)lVar18 >> 0x20) == 0);
        auVar17 = CONCAT412(uVar8,CONCAT48(-(uint)((int)lVar18 == 0),
                                           CONCAT44(-(uint)((int)((ulonglong)lVar16 >> 0x20) == 0),
                                                    -(uint)((int)lVar16 == 0))));
        uVar4 = (uint)(ushort)((ushort)(SUB161(auVar17 >> 7,0) & 1) |
                               (ushort)(SUB161(auVar17 >> 0xf,0) & 1) << 1 |
                               (ushort)(SUB161(auVar17 >> 0x17,0) & 1) << 2 |
                               (ushort)(SUB161(auVar17 >> 0x1f,0) & 1) << 3 |
                               (ushort)(SUB161(auVar17 >> 0x27,0) & 1) << 4 |
                               (ushort)(SUB161(auVar17 >> 0x2f,0) & 1) << 5 |
                               (ushort)(SUB161(auVar17 >> 0x37,0) & 1) << 6 |
                               (ushort)(SUB161(auVar17 >> 0x3f,0) & 1) << 7 |
                               (ushort)(SUB161(auVar17 >> 0x47,0) & 1) << 8 |
                               (ushort)(SUB161(auVar17 >> 0x4f,0) & 1) << 9 |
                               (ushort)(SUB161(auVar17 >> 0x57,0) & 1) << 10 |
                               (ushort)(SUB161(auVar17 >> 0x5f,0) & 1) << 0xb |
                               (ushort)((byte)(uVar8 >> 7) & 1) << 0xc |
                               (ushort)((byte)(uVar8 >> 0xf) & 1) << 0xd |
                               (ushort)((byte)(uVar8 >> 0x17) & 1) << 0xe |
                              (ushort)(byte)(uVar8 >> 0x1f) << 0xf);
        uVar8 = uVar7 & 0x7fff;
        uVar19 = SUB168(auVar17 >> 0x40,0);
        if (0x7fef < uVar8) {
          auVar17 = CONCAT412(0xffffffff,
                              CONCAT48(0xffffffff,
                                       CONCAT44(-(uint)((int)(((ulonglong)dVar11 & 0xfffffffffffff)
                                                             >> 0x20) == 0),
                                                -(uint)((int)((ulonglong)dVar11 & 0xfffffffffffff)
                                                       == 0))));
          uVar3 = uVar8;
          if ((ushort)((ushort)(SUB161(auVar17 >> 7,0) & 1) |
                       (ushort)(SUB161(auVar17 >> 0xf,0) & 1) << 1 |
                       (ushort)(SUB161(auVar17 >> 0x17,0) & 1) << 2 |
                       (ushort)(SUB161(auVar17 >> 0x1f,0) & 1) << 3 |
                       (ushort)(SUB161(auVar17 >> 0x27,0) & 1) << 4 |
                       (ushort)(SUB161(auVar17 >> 0x2f,0) & 1) << 5 |
                       (ushort)(SUB161(auVar17 >> 0x37,0) & 1) << 6 |
                      (ushort)(SUB161(auVar17 >> 0x3f,0) & 1) << 7) != 0xff) goto LAB_10007731;
          if ((in_XMM0 & (undefined  [16])0x8000000000000000) != (undefined  [16])0x0) {
            if (((uVar4 & 0xff) != 0xff) ||
               (lVar16 = CONCAT44(in_XMM1_Db,in_XMM1_Da) <<
                         (ulonglong)(((in_XMM1_Db & 0x7fffffff) >> 0x14) - 0x3f4),
               auVar17 = CONCAT412(0xffffffff,
                                   CONCAT48(0xffffffff,
                                            CONCAT44(-(uint)((int)((ulonglong)lVar16 >> 0x20) == 0),
                                                     -(uint)((int)lVar16 == 0)))),
               (ushort)((ushort)(SUB161(auVar17 >> 7,0) & 1) |
                        (ushort)(SUB161(auVar17 >> 0xf,0) & 1) << 1 |
                        (ushort)(SUB161(auVar17 >> 0x17,0) & 1) << 2 |
                        (ushort)(SUB161(auVar17 >> 0x1f,0) & 1) << 3 |
                        (ushort)(SUB161(auVar17 >> 0x27,0) & 1) << 4 |
                        (ushort)(SUB161(auVar17 >> 0x2f,0) & 1) << 5 |
                        (ushort)(SUB161(auVar17 >> 0x37,0) & 1) << 6 |
                       (ushort)(SUB161(auVar17 >> 0x3f,0) & 1) << 7) == 0xff)) {
              uVar3 = in_XMM1_Db >> 0x10 & 0x8000;
              if ((in_XMM1_Db & 0x80000000) != 0) {
                return CONCAT44(uVar7,in_XMM1_Db >> 0x10) & 0x7fff00008000;
              }
              goto LAB_10007893;
            }
            uVar4 = in_XMM1_Db >> 0x10 & 0x8000;
            if ((in_XMM1_Db & 0x80000000) == 0) {
              return CONCAT44(uVar7,in_XMM1_Db >> 0x10) & 0x7fff00008000;
            }
            goto LAB_100076d7;
          }
          uVar3 = in_XMM1_Db >> 0x10 & 0x8000;
          if ((in_XMM1_Db & 0x80000000) != 0) {
            return CONCAT44(uVar7,in_XMM1_Db >> 0x10) & 0x7fff00008000;
          }
          goto LAB_10007893;
        }
        if ((uVar4 & 0xff) == 0xff) {
          in_XMM3_Qa = 0;
          lVar16 = CONCAT44(in_XMM1_Db,in_XMM1_Da) <<
                   (ulonglong)(((in_XMM1_Db & 0x7fffffff) >> 0x14) - 0x3f4);
          lVar18 = uVar19 << (ulonglong)((SUB164(auVar15 >> 0x60,0) & 0x7fffffff) >> 0x14);
          auVar17 = CONCAT412(-(uint)((int)((ulonglong)lVar18 >> 0x20) == 0),
                              CONCAT48(-(uint)((int)lVar18 == 0),
                                       CONCAT44(-(uint)((int)((ulonglong)lVar16 >> 0x20) ==
                                                       -0x80000000),-(uint)((int)lVar16 == 0))));
          in_XMM2_Qa = SUB168(auVar17 >> 0x40,0);
          uVar7 = (ushort)((ushort)(SUB161(auVar17 >> 7,0) & 1) |
                           (ushort)(SUB161(auVar17 >> 0xf,0) & 1) << 1 |
                           (ushort)(SUB161(auVar17 >> 0x17,0) & 1) << 2 |
                           (ushort)(SUB161(auVar17 >> 0x1f,0) & 1) << 3 |
                           (ushort)(SUB161(auVar17 >> 0x27,0) & 1) << 4 |
                           (ushort)(SUB161(auVar17 >> 0x2f,0) & 1) << 5 |
                           (ushort)(SUB161(auVar17 >> 0x37,0) & 1) << 6 |
                          (ushort)(SUB161(auVar17 >> 0x3f,0) & 1) << 7) + 0x3ff01 & 0x40000;
          if (0xf < uVar8) {
            uVar8 = 0xbfe7f;
            in_XMM3_Qa = 0;
            goto LAB_10007152;
          }
          goto LAB_10007553;
        }
        uVar20 = (ulonglong)dVar11 >> 0x20;
        in_XMM2_Qa = uVar19 >> 0x20;
        uVar4 = uVar3 | uVar9 & 0x7fffffff;
        uVar7 = 0;
        dVar14 = dVar12;
        if (uVar4 != 0) {
          return (ulonglong)dVar11 & 0x7fffffff00000000 | (ulonglong)uVar4;
        }
LAB_100075d9:
        if ((uVar4 & 0x7fffffff) == 0) {
          uVar8 = in_XMM1_Db & 0x80000000;
          if (uVar8 != 0) {
            uVar4 = uVar4 & uVar7 << 0xd;
            return CONCAT44(uVar4,uVar4) | 0x7ff0000000000000;
          }
          uVar4 = uVar4 & uVar7 << 0xd;
          if (uVar4 == 0) {
            return ((ulonglong)in_XMM1_Db & 0x80000000) << 0x20;
          }
LAB_100076d7:
          return CONCAT44(uVar8,uVar4);
        }
      }
      else {
        uVar7 = 0;
LAB_10007553:
        auVar17 = pinsrw(ZEXT816(0),0x43f0,3);
        dVar24 = 2.225073858507201e-308;
        uVar20 = 0x3ff0000000000000;
        dVar14 = SUB168(auVar17,0) * dVar11;
        uVar4 = uVar9;
        if (uVar3 == 0) goto LAB_100075d9;
      }
      dVar12 = (double)(((ulonglong)dVar14 & 0x7fffffffffffffff) >> 0x2c);
      uVar8 = (SUB82(dVar12,0) & 0xff) + 1 & 0x1fe;
      dVar24 = (double)((ulonglong)dVar24 & (ulonglong)dVar14 | uVar20) *
               *(double *)(&DAT_10020590 + uVar8 * 4);
      dVar13 = *(double *)(&DAT_10020590 + uVar8 * 4);
      dVar23 = *(double *)(&DAT_100209a0 + uVar8 * 8);
      uVar8 = 0x43e7f;
      goto LAB_10007152;
    }
    uVar4 = uVar9 & 0x7fffffff;
    uVar7 = uVar9;
    uVar8 = uVar3;
    if ((0x7fefffff < uVar4) && ((0x7ff00000 < uVar4 || (uVar3 != 0)))) {
LAB_10007731:
      return CONCAT44(uVar3,uVar4);
    }
  }
  uVar19 = SUB168(auVar17,0) & 0xfffffffffffff;
  uVar20 = in_XMM3_Qa & SUB168(auVar17 >> 0x40,0);
  auVar15 = CONCAT412(-(uint)((int)(uVar20 >> 0x20) == 0),
                      CONCAT48(-(uint)((int)uVar20 == 0),
                               CONCAT44(-(uint)((int)(uVar19 >> 0x20) == 0),
                                        -(uint)((int)uVar19 == 0))));
  uVar4 = (uint)(ushort)((ushort)(SUB161(auVar15 >> 7,0) & 1) |
                         (ushort)(SUB161(auVar15 >> 0xf,0) & 1) << 1 |
                         (ushort)(SUB161(auVar15 >> 0x17,0) & 1) << 2 |
                         (ushort)(SUB161(auVar15 >> 0x1f,0) & 1) << 3 |
                         (ushort)(SUB161(auVar15 >> 0x27,0) & 1) << 4 |
                         (ushort)(SUB161(auVar15 >> 0x2f,0) & 1) << 5 |
                         (ushort)(SUB161(auVar15 >> 0x37,0) & 1) << 6 |
                        (ushort)(SUB161(auVar15 >> 0x3f,0) & 1) << 7);
  if (uVar4 != 0xff) {
LAB_1000789f:
    return CONCAT44(uVar8,uVar4);
  }
  uVar4 = SUB162(auVar17 >> 0x30,0) & 0x8000;
  uVar8 = uVar8 | uVar7 ^ 0xbff00000;
  if (uVar8 != 0) {
    if ((auVar17 & (undefined  [16])0x8000000000000000) == (undefined  [16])0x0) {
      uVar3 = uVar1 & 0x7ff0;
      if (uVar3 < 0x3ff0) {
        return CONCAT44(uVar8,(uint)uVar1) & 0xffffffff00007ff0;
      }
    }
    else {
      if (0x3fef < (uVar1 & 0x7ff0)) {
        return CONCAT44(uVar8,(uint)uVar1) & 0xffffffff00007ff0;
      }
      uVar8 = uVar9 & 0x7fffffff | uVar3;
      if (uVar8 == 0) {
        pinsrw(ZEXT816(0),0x3ff0,3);
        return 0x3ff0;
      }
    }
LAB_10007893:
    return CONCAT44(uVar8,uVar3);
  }
LAB_100078ce:
  return CONCAT44(uVar8,uVar4);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined8 ___sse2_pow2(void)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  undefined in_XMM0 [16];
  undefined auVar4 [12];
  double in_XMM1_Qa;
  double in_XMM1_Qb;
  double dVar5;
  double dVar6;
  undefined auVar7 [16];
  double dVar8;
  double dVar9;
  uint uVar13;
  double dVar10;
  double dVar11;
  double dVar12;
  double dVar14;
  double dVar15;
  undefined4 uVar17;
  undefined auVar16 [16];
  double dVar18;
  double dVar19;
  double dVar20;
  double dVar21;
  double dVar22;
  undefined8 uVar23;
  int iStack208;
  int iStack204;
  int iStack200;
  int iStack196;
  uint uStack192;
  uint uStack188;
  uint uStack184;
  uint uStack180;
  uint uStack96;
  
  auVar4 = SUB1612(in_XMM0 >> 0x20,0) & SUB1612(_DAT_1002a5b0 >> 0x20,0);
  auVar7 = ZEXT1216(auVar4) << 0x20;
  uVar3 = SUB124(auVar4,0) + 0x200;
  uStack96 = 0;
  uVar1 = uVar3 >> 10;
  uVar3 = (uint)(ushort)SUB168(CONCAT412(SUB164(auVar7 >> 0x60,0) + 0x200,
                                         CONCAT48(SUB164(auVar7 >> 0x40,0),
                                                  SUB128(CONCAT84(SUB168(auVar7 >> 0x40,0),uVar3),0)
                                                  << 0x20)) >> 0x6a,0);
  dVar11 = *(double *)(&DAT_10024590 + uVar1 * 8);
  dVar12 = *(double *)(&DAT_10024590 + uVar3 * 8);
  iVar2 = uVar1 * 0x10;
  auVar7 = in_XMM0 & _DAT_10024360 | _DAT_10024380;
  dVar15 = SUB168(auVar7 >> 0x40,0);
  uVar13 = (int)(SUB168(in_XMM0,0) + -0x3fe7fe0000000000 >> 0x34) + 0x41380000;
  dVar5 = SUB168(auVar7,0) * dVar11;
  dVar8 = dVar15 * dVar12;
  uVar1 = SUB162(in_XMM0 >> 0x30,0) + 0x7ffffff0;
  if (((int)uVar1 < -0x7fff8020) && ((int)(SUB162(in_XMM0 >> 0x70,0) + 0x7ffffff0) < -0x7fff8020)) {
    uVar17 = SUB84(*(double *)(&DAT_100265a0 + iVar2),0);
    dVar10 = ((double)((ulonglong)uVar13 << 0x20) - 1572864.0) + *(double *)(&DAT_100265a0 + iVar2);
    dVar14 = (SUB168(CONCAT412((int)(SUB168(in_XMM0 >> 0x40,0) + -0x3fe7fe0000000000 >> 0x34) +
                               0x41380000,ZEXT412(uVar13) << 0x20) >> 0x40,0) - 1572864.0) +
             SUB168(*(undefined (*) [16])(&DAT_100265a0 + uVar3 * 0x10),0);
    auVar16 = shufpd(CONCAT412(uVar17,CONCAT48(uVar17,*(undefined8 *)(&DAT_100265a8 + iVar2))),
                     *(undefined (*) [16])(&DAT_100265a0 + uVar3 * 0x10),2);
    dVar18 = SUB168(_DAT_100243b0 & auVar7,0);
    dVar19 = SUB168((_DAT_100243b0 & auVar7) >> 0x40,0);
    dVar6 = dVar5 + -1.442694902420044;
    dVar9 = dVar8 + -1.442694902420044;
    dVar18 = (dVar18 * dVar11 - dVar5) + (SUB168(auVar7,0) - dVar18) * dVar11;
    dVar20 = (dVar19 * dVar12 - dVar8) + (dVar15 - dVar19) * dVar12;
    dVar11 = dVar10 + dVar6;
    dVar5 = dVar14 + dVar9;
    dVar12 = dVar11 + dVar18;
    dVar15 = dVar5 + dVar20;
    dVar8 = dVar18 + dVar6;
    dVar21 = dVar20 + dVar9;
    dVar19 = dVar8 * dVar8;
    dVar22 = dVar21 * dVar21;
    uStack188 = (uint)((ulonglong)in_XMM1_Qa >> 0x20);
    if ((((uint)((ulonglong)dVar12 >> 0x20) & 0x7ff00000) + (uStack188 & 0x7ff00000) < 0x80900001)
       && (uStack180 = (uint)((ulonglong)in_XMM1_Qb >> 0x20),
          ((uint)((ulonglong)dVar15 >> 0x20) & 0x7ff00000) + (uStack180 & 0x7ff00000) < 0x80900001))
    {
      uStack192 = SUB84(in_XMM1_Qa,0);
      if (((uStack192 | uStack188 & 0x7fffffff) != 0) && ((uStack188 & 0x7fffffff) < 0x7ff00000)) {
        uStack184 = SUB84(in_XMM1_Qb,0);
        if (((uStack184 | uStack180 & 0x7fffffff) != 0) && ((uStack180 & 0x7fffffff) < 0x7ff00000))
        {
          dVar5 = (double)((ulonglong)in_XMM1_Qb & 0xfffffffff8000000) *
                  (double)((ulonglong)
                           (dVar15 + (dVar5 - dVar15) + dVar20 + (dVar14 - dVar5) + dVar9 +
                                     SUB168(auVar16 >> 0x40,0) +
                                     (((dVar22 * 0.01584364190639705 + 0.04616704187202374) * dVar22
                                      + 0.160151050752973) * dVar22 + 9.597935033233511e-08) *
                                     dVar21 + ((dVar22 * -0.02666713164981555 + -0.08325619496072671
                                               ) * dVar22 + -0.3465736568077919) * dVar22) &
                          0xfffffffff8000000) + 52776558133248.0;
          uVar3 = SUB84((double)((ulonglong)in_XMM1_Qa & 0xfffffffff8000000) *
                        (double)((ulonglong)
                                 (dVar12 + (dVar11 - dVar12) + dVar18 + (dVar10 - dVar11) + dVar6 +
                                           SUB168(auVar16,0) +
                                           (((dVar19 * 0.01584364190639705 + 0.04616704187202374) *
                                             dVar19 + 0.160151050752973) * dVar19 +
                                           9.597935033233511e-08) * dVar8 +
                                           ((dVar19 * -0.02666713164981555 + -0.08325619496072671) *
                                            dVar19 + -0.3465736568077919) * dVar19) &
                                0xfffffffff8000000) + 52776558133248.0,0);
          uVar1 = (uint)(ushort)((ulonglong)dVar5 >> 0x10) << 0x10;
          iVar2 = SUB84(dVar5,0);
          if (((int)uVar3 < 0x1ff80) &&
             (((iVar2 < 0x1ff80 && (-0x1e200 < (int)uVar3)) && (-0x1e200 < iVar2)))) {
            return CONCAT44(uVar1,(uVar3 & 0x7f) * 2);
          }
        }
      }
    }
  }
  else {
    iStack208 = SUB164(in_XMM0,0);
    iStack204 = SUB164(in_XMM0 >> 0x20,0);
    iStack200 = SUB164(in_XMM0 >> 0x40,0);
    iStack196 = SUB164(in_XMM0 >> 0x60,0);
    auVar7 = CONCAT412(-(uint)(iStack196 == 0),
                       CONCAT48(-(uint)(iStack200 == 0),
                                CONCAT44(-(uint)(iStack204 == 0),-(uint)(iStack208 == 0)))) &
             CONCAT88(-(ulonglong)(0.0 < in_XMM1_Qb),-(ulonglong)(0.0 < in_XMM1_Qa)) &
             CONCAT88(-(ulonglong)(in_XMM1_Qb <= INFINITY),-(ulonglong)(in_XMM1_Qa <= INFINITY)) &
             CONCAT412(-(uint)(iStack200 == 0),
                       CONCAT48(-(uint)(iStack196 == 0),
                                CONCAT44(-(uint)(iStack208 == 0),-(uint)(iStack204 == 0))));
    uVar1 = (uint)(ushort)((ushort)(SUB161(auVar7 >> 7,0) & 1) |
                           (ushort)(SUB161(auVar7 >> 0xf,0) & 1) << 1 |
                           (ushort)(SUB161(auVar7 >> 0x17,0) & 1) << 2 |
                           (ushort)(SUB161(auVar7 >> 0x1f,0) & 1) << 3 |
                           (ushort)(SUB161(auVar7 >> 0x27,0) & 1) << 4 |
                           (ushort)(SUB161(auVar7 >> 0x2f,0) & 1) << 5 |
                           (ushort)(SUB161(auVar7 >> 0x37,0) & 1) << 6 |
                           (ushort)(SUB161(auVar7 >> 0x3f,0) & 1) << 7 |
                           (ushort)(SUB161(auVar7 >> 0x47,0) & 1) << 8 |
                           (ushort)(SUB161(auVar7 >> 0x4f,0) & 1) << 9 |
                           (ushort)(SUB161(auVar7 >> 0x57,0) & 1) << 10 |
                           (ushort)(SUB161(auVar7 >> 0x5f,0) & 1) << 0xb |
                           (ushort)(SUB161(auVar7 >> 0x67,0) & 1) << 0xc |
                           (ushort)(SUB161(auVar7 >> 0x6f,0) & 1) << 0xd |
                           (ushort)(SUB161(auVar7 >> 0x77,0) & 1) << 0xe |
                          (ushort)SUB161(auVar7 >> 0x7f,0) << 0xf);
    uStack96 = uVar1;
  }
  if ((uStack96 & 0xf) == 0) {
    uVar23 = _pow_scalar();
    uVar1 = (uint)((ulonglong)uVar23 >> 0x20);
  }
  uVar23 = CONCAT44(uVar1,uStack96);
  if ((uStack96 & 0xf00) == 0) {
    uVar23 = _pow_scalar();
  }
                    // WARNING: Read-only address (ram,0x10024360) is written
                    // WARNING: Read-only address (ram,0x10024380) is written
                    // WARNING: Read-only address (ram,0x100243b0) is written
                    // WARNING: Read-only address (ram,0x1002a5b0) is written
  return uVar23;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void ___sse2_powf4(void)

{
  int iVar1;
  float in_XMM0_Da;
  uint uVar2;
  float in_XMM0_Db;
  undefined8 uVar3;
  float in_XMM0_Dc;
  float in_XMM0_Dd;
  double dVar4;
  double dVar5;
  undefined in_XMM1 [16];
  undefined8 uVar7;
  undefined auVar6 [16];
  double dVar8;
  double dVar9;
  double dVar10;
  undefined8 uVar11;
  double dVar12;
  double dVar13;
  double dVar14;
  double dVar15;
  undefined auVar16 [16];
  double dVar17;
  uint uVar19;
  double dVar18;
  float afStack256 [4];
  undefined auStack240 [8];
  int iStack232;
  int iStack228;
  double dStack224;
  double dStack216;
  double dStack208;
  undefined8 uStack200;
  float afStack192 [4];
  undefined auStack176 [16];
  double dStack160;
  double dStack152;
  double dStack144;
  double dStack136;
  undefined8 uStack128;
  undefined8 uStack120;
  
  uVar7 = SUB168(in_XMM1 >> 0x40,0);
  _auStack240 = _DAT_100488c0 & in_XMM1;
  uVar19 = (uint)((ulonglong)(double)in_XMM0_Db >> 0x20);
  auVar6 = CONCAT412(uVar19,CONCAT48(SUB84((double)in_XMM0_Db,0),(double)in_XMM0_Da)) &
           (undefined  [16])0xffffffffffffffff | _DAT_1004ba80;
  auVar16 = CONCAT412((int)((ulonglong)(double)in_XMM0_Dd >> 0x20),
                      CONCAT48(SUB84((double)in_XMM0_Dd,0),(double)in_XMM0_Dc)) &
            (undefined  [16])0xffffffffffffffff | _DAT_1004ba80;
  dVar4 = SUB168(auVar6,0);
  dVar8 = SUB168(auVar6 >> 0x40,0);
  uVar11 = CONCAT44((float)dVar8,(float)dVar4);
  dVar13 = SUB168(auVar16,0);
  dVar15 = SUB168(auVar16 >> 0x40,0);
  uVar3 = CONCAT44((float)dVar15,(float)dVar13);
  auVar16 = rcpps(CONCAT88(uVar7,uVar7),CONCAT88(uVar11,uVar11));
  auVar6 = rcpps(_DAT_1004ba80,CONCAT88(uVar3,uVar3));
  dVar12 = ((double)SUB164(auVar16,0) + 6755399441055744.0) - 6755399441055744.0;
  dVar14 = ((double)SUB164(auVar16 >> 0x20,0) + 6755399441055744.0) - 6755399441055744.0;
  dVar9 = ((double)SUB164(auVar6,0) + 6755399441055744.0) - 6755399441055744.0;
  dVar10 = ((double)(float)((ulonglong)(double)SUB164(auVar6,0) >> 0x20) + 6755399441055744.0) -
           6755399441055744.0;
  dVar5 = dVar4 * dVar12 - 1.0;
  dVar8 = dVar8 * dVar14 - 1.0;
  dStack224 = dVar13 * dVar9 - 1.0;
  dStack216 = dVar15 * dVar10 - 1.0;
  uVar2 = (uint)((ulonglong)dVar10 >> 0x28);
  dStack208 = *(double *)((uint)((ulonglong)dVar9 >> 0x28) + 0xfc42980);
  uStack200 = *(undefined8 *)(uVar2 + 0xfc42980);
  auVar6 = CONCAT412((int)(-(ulonglong)(724.0 < dVar14) >> 0x20),
                     ZEXT412((uint)(-(ulonglong)(724.0 < dVar12) >> 0x20) & 0x408ff800) << 0x20) &
           (undefined  [16])0xffffffffffffffff | _DAT_1004bcc0;
  dVar4 = ((double)(uint)((ulonglong)(double)in_XMM0_Dc >> 0x34) -
          (double)((ulonglong)((uint)(-(ulonglong)(724.0 < dVar9) >> 0x20) & 0x408ff800) << 0x20 |
                  SUB168(_DAT_1004bcc0,0))) * 0.6931471805599453;
  dVar9 = (dVar5 + (dVar5 * 0.3333333333330837 + -0.499999999999888) * dVar5 * dVar5 +
           *(double *)((uint)((ulonglong)dVar12 >> 0x28) + 0xfc42980) +
          ((double)(uint)((ulonglong)(double)in_XMM0_Da >> 0x34) - SUB168(auVar6,0)) *
          0.6931471805599453) * (double)SUB164(in_XMM1,0);
  dVar10 = (dVar8 + (dVar8 * 0.3333333333330837 + -0.499999999999888) * dVar8 * dVar8 +
            *(double *)((uint)((ulonglong)dVar14 >> 0x28) + 0xfc42980) +
           ((double)(uVar19 >> 0x14) - SUB168(auVar6 >> 0x40,0)) * 0.6931471805599453) *
           (double)SUB164(in_XMM1 >> 0x20,0);
  dVar17 = (dStack224 +
            (dStack224 * 0.3333333333330837 + -0.499999999999888) * dStack224 * dStack224 +
            dStack208 + dVar4) * (double)SUB164(in_XMM1 >> 0x40,0);
  dVar18 = (dStack216 +
            (dStack216 * 0.3333333333330837 + -0.499999999999888) * dStack216 * dStack216 +
            dStack208 + dVar4) * (double)SUB164(in_XMM1 >> 0x60,0);
  dVar13 = dVar9 * 2954.639443740597;
  dVar15 = dVar10 * 2954.639443740597;
  dVar4 = dVar17 * 2954.639443740597;
  dVar8 = dVar18 * 2954.639443740597;
  auStack176 = CONCAT412((int)((ulonglong)dVar8 >> 0x20),CONCAT48(SUB84(dVar8,0),dVar4));
  dVar12 = (dVar13 - 0.5) + 6755399441055744.0;
  dVar14 = (SUB168(CONCAT412((int)((ulonglong)dVar15 >> 0x20),CONCAT48(SUB84(dVar15,0),dVar13)) >>
                   0x40,0) - 0.5) + 6755399441055744.0;
  dVar5 = (dVar4 - 0.5) + 6755399441055744.0;
  dVar8 = (dVar8 - 0.5) + 6755399441055744.0;
  dStack160 = dVar12 - 6755399441055744.0;
  dStack152 = SUB168(CONCAT412((int)((ulonglong)dVar14 >> 0x20),CONCAT48(SUB84(dVar14,0),dVar12)) >>
                     0x40,0) - 6755399441055744.0;
  dStack144 = dVar5 - 6755399441055744.0;
  dStack136 = SUB168(CONCAT412((int)((ulonglong)dVar8 >> 0x20),CONCAT48(SUB84(dVar8,0),dVar5)) >>
                     0x40,0) - 6755399441055744.0;
  auStack240._4_4_ = SUB164(_auStack240 >> 0x20,0);
  iStack232 = SUB164(_auStack240 >> 0x40,0);
  iStack228 = SUB164(_auStack240 >> 0x60,0);
  auStack176._8_8_ = SUB168(auStack176 >> 0x40,0);
  auVar6 = CONCAT412((int)((ulonglong)dVar18 >> 0x20),
                     CONCAT48((int)((ulonglong)dVar17 >> 0x20),
                              (ulonglong)dVar10 & 0xffffffff00000000 | (ulonglong)dVar9 >> 0x20)) &
           _DAT_1004ff80;
  uVar2 = movmskps(uVar2,CONCAT412(-(uint)(-0x1000001 < (int)in_XMM0_Dd + 0x7f800000),
                                   CONCAT48(-(uint)(-0x1000001 < (int)in_XMM0_Dc + 0x7f800000),
                                            CONCAT44(-(uint)(-0x1000001 <
                                                            (int)in_XMM0_Db + 0x7f800000),
                                                     -(uint)(-0x1000001 <
                                                            (int)in_XMM0_Da + 0x7f800000)))) |
                         CONCAT412(-(uint)((int)in_XMM0_Dd + 0x7f800000 == -0x1000001),
                                   CONCAT48(-(uint)((int)in_XMM0_Dc + 0x7f800000 == -0x1000001),
                                            CONCAT44(-(uint)((int)in_XMM0_Db + 0x7f800000 ==
                                                            -0x1000001),
                                                     -(uint)((int)in_XMM0_Da + 0x7f800000 ==
                                                            -0x1000001)))) |
                         CONCAT412(-(uint)(0x7f800000 < iStack228),
                                   CONCAT48(-(uint)(0x7f800000 < iStack232),
                                            CONCAT44(-(uint)(0x7f800000 < auStack240._4_4_),
                                                     -(uint)(0x7f800000 < auStack240._0_4_)))) |
                         CONCAT412(-(uint)(iStack228 == 0x7f800000),
                                   CONCAT48(-(uint)(iStack232 == 0x7f800000),
                                            CONCAT44(-(uint)(auStack240._4_4_ == 0x7f800000),
                                                     -(uint)(auStack240._0_4_ == 0x7f800000)))) |
                         CONCAT412(-(uint)(0x4059fe36 < SUB164(auVar6 >> 0x60,0)),
                                   CONCAT48(-(uint)(0x4059fe36 < SUB164(auVar6 >> 0x40,0)),
                                            CONCAT44(-(uint)(0x4059fe36 < SUB164(auVar6 >> 0x20,0)),
                                                     -(uint)(0x4059fe36 < SUB164(auVar6,0))))));
  uStack128 = CONCAT44((float)(double)((longlong)
                                       ((dVar15 - dStack152) * 0.0003385080526823129 *
                                        *(double *)(&DAT_1004be00 + (SUB84(dVar14,0) & 0x7ff) * 8) +
                                       *(double *)(&DAT_1004be00 + (SUB84(dVar14,0) & 0x7ff) * 8)) +
                                      (((ulonglong)dVar14 >> 0xb) << 0x34)),
                       (float)(double)((longlong)
                                       ((dVar13 - dStack160) * 0.0003385080526823129 *
                                        *(double *)(&DAT_1004be00 + (SUB84(dVar12,0) & 0x7ff) * 8) +
                                       *(double *)(&DAT_1004be00 + (SUB84(dVar12,0) & 0x7ff) * 8)) +
                                      (((ulonglong)dVar12 >> 0xb) << 0x34)));
  uStack120 = CONCAT44((float)(double)((longlong)
                                       ((auStack176._8_8_ - dStack136) * 0.0003385080526823129 *
                                        *(double *)(&DAT_1004be00 + (SUB84(dVar8,0) & 0x7ff) * 8) +
                                       *(double *)(&DAT_1004be00 + (SUB84(dVar8,0) & 0x7ff) * 8)) +
                                      (((ulonglong)dVar8 >> 0xb) << 0x34)),
                       (float)(double)((longlong)
                                       ((dVar4 - dStack144) * 0.0003385080526823129 *
                                        *(double *)(&DAT_1004be00 + (SUB84(dVar5,0) & 0x7ff) * 8) +
                                       *(double *)(&DAT_1004be00 + (SUB84(dVar5,0) & 0x7ff) * 8)) +
                                      (((ulonglong)dVar5 >> 0xb) << 0x34)));
  if ((uVar2 != 0) && (uVar2 != 0)) {
    iVar1 = 0;
    do {
      if ((1 << ((byte)iVar1 & 0x1f) & uVar2) != 0) {
        ___common_spow_cout_rare
                  (afStack256 + iVar1,afStack192 + iVar1,(float *)((int)&uStack128 + iVar1 * 4));
      }
      iVar1 = iVar1 + 1;
    } while (iVar1 < 0x20);
  }
  return;
}



void __cdecl FUN_10007f03(char *param_1,int param_2)

{
  FUN_10007f21(FUN_1000e2ed,param_1,param_2,0,&stack0x0000000c);
  return;
}



undefined4 __cdecl
FUN_10007f21(undefined *param_1,char *param_2,int param_3,undefined4 param_4,undefined4 param_5)

{
  int *piVar1;
  undefined4 uVar2;
  size_t sVar3;
  int iVar4;
  size_t *psVar5;
  char *local_24;
  size_t local_20;
  char *local_1c;
  undefined4 local_18;
  
  local_24 = (char *)0x0;
  psVar5 = &local_20;
  for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {
    *psVar5 = 0;
    psVar5 = psVar5 + 1;
  }
  if ((param_2 == (char *)0x0) || (param_3 == 0)) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_100090a2();
    uVar2 = 0xffffffff;
  }
  else {
    sVar3 = _strlen(param_2);
    local_18 = 0x49;
    local_1c = param_2;
    local_24 = param_2;
    local_20 = 0x7fffffff;
    if (sVar3 < 0x80000000) {
      local_20 = sVar3;
    }
    uVar2 = (*(code *)param_1)(&local_24,param_3,param_4,param_5);
  }
  return uVar2;
}



// WARNING: This is an inlined function
// Library Function - Single Match
//  __chkstk
// 
// Library: Visual Studio

void __alloca_probe(void)

{
  undefined *in_EAX;
  undefined4 *puVar1;
  undefined4 *puVar2;
  undefined4 unaff_retaddr;
  undefined auStack4 [4];
  
  puVar2 = (undefined4 *)((int)&stack0x00000000 - (int)in_EAX & ~-(uint)(&stack0x00000000 < in_EAX))
  ;
  for (puVar1 = (undefined4 *)((uint)auStack4 & 0xfffff000); puVar2 < puVar1;
      puVar1 = puVar1 + -0x400) {
  }
  *puVar2 = unaff_retaddr;
  return;
}



// WARNING: Control flow encountered bad instruction data
// Library Function - Multiple Matches With Different Base Names
//  _memcpy
//  _memmove
// 
// Libraries: Visual Studio 2012 Debug, Visual Studio 2012 Release

void * __cdecl FID_conflict__memcpy(void *_Dst,void *_Src,size_t _Size)

{
  undefined8 uVar1;
  undefined auVar2 [32];
  undefined auVar3 [32];
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uVar11;
  undefined4 uVar12;
  undefined4 uVar13;
  undefined4 uVar14;
  undefined4 uVar15;
  int iVar16;
  undefined8 *puVar17;
  void *pvVar18;
  uint uVar19;
  uint uVar20;
  int iVar21;
  undefined8 *puVar22;
  undefined *puVar23;
  undefined4 *puVar24;
  undefined4 *puVar25;
  undefined4 uVar26;
  undefined4 uVar27;
  undefined4 uVar28;
  
  if ((_Src < _Dst) && (_Dst < (void *)(_Size + (int)_Src))) {
    puVar25 = (undefined4 *)((_Size - 4) + (int)_Src);
    puVar24 = (undefined4 *)((_Size - 4) + (int)_Dst);
    if (((uint)puVar24 & 3) == 0) {
      uVar19 = _Size >> 2;
      if (uVar19 < 8) goto LAB_10008380;
      for (; uVar19 != 0; uVar19 = uVar19 - 1) {
        *puVar24 = *puVar25;
        puVar25 = puVar25 + -1;
        puVar24 = puVar24 + -1;
      }
      switch(_Size & 3) {
      case 1:
        goto switchD_100083a4_caseD_1;
      case 2:
        goto switchD_100083a4_caseD_2;
      case 3:
        goto switchD_100083a4_caseD_3;
      }
    }
    else {
      switch(_Size) {
      case 0:
        break;
      case 1:
switchD_100083a4_caseD_1:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        return _Dst;
      case 2:
switchD_100083a4_caseD_2:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        return _Dst;
      case 3:
switchD_100083a4_caseD_3:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
        return _Dst;
      default:
        uVar20 = _Size - ((uint)puVar24 & 3);
        switch((uint)puVar24 & 3) {
        case 1:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          puVar25 = (undefined4 *)((int)puVar25 + -1);
          uVar19 = uVar20 >> 2;
          puVar24 = (undefined4 *)((int)puVar24 - 1);
          if (uVar19 < 8) {
LAB_10008380:
                    // WARNING: Could not recover jumptable at 0x10008382. Too many branches
                    // WARNING: Treating indirect jump as call
            pvVar18 = (void *)(*(code *)(&PTR_LAB_10008454)[-uVar19])();
            return pvVar18;
          }
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_100083a4_caseD_1;
          case 2:
            goto switchD_100083a4_caseD_2;
          case 3:
            goto switchD_100083a4_caseD_3;
          }
          break;
        case 2:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          puVar25 = (undefined4 *)((int)puVar25 + -2);
          puVar24 = (undefined4 *)((int)puVar24 - 2);
          if (uVar19 < 8) goto LAB_10008380;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_100083a4_caseD_1;
          case 2:
            goto switchD_100083a4_caseD_2;
          case 3:
            goto switchD_100083a4_caseD_3;
          }
          break;
        case 3:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
          puVar25 = (undefined4 *)((int)puVar25 + -3);
          puVar24 = (undefined4 *)((int)puVar24 - 3);
          if (uVar19 < 8) goto LAB_10008380;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_100083a4_caseD_1;
          case 2:
            goto switchD_100083a4_caseD_2;
          case 3:
            goto switchD_100083a4_caseD_3;
          }
        }
      }
    }
    return _Dst;
  }
  puVar23 = (undefined *)_Dst;
  if ((DAT_1004589c >> 1 & 1) != 0) {
                    // WARNING: Load size is inaccurate
    for (; _Size != 0; _Size = _Size - 1) {
      *puVar23 = *_Src;
      _Src = (undefined *)((int)_Src + 1);
      puVar23 = puVar23 + 1;
    }
    return _Dst;
  }
  puVar25 = (undefined4 *)_Dst;
  if (_Size < 0x80) {
LAB_100081db:
    if (((uint)_Dst & 3) != 0) {
LAB_100081f8:
      switch(_Size) {
      case 0:
        return _Dst;
      case 1:
        break;
      case 2:
        goto switchD_10008210_caseD_2;
      case 3:
        goto switchD_10008210_caseD_3;
      default:
        uVar20 = (_Size - 4) + ((uint)_Dst & 3);
        switch((uint)_Dst & 3) {
        case 0:
                    // WARNING: Bad instruction - Truncating control flow here
          halt_baddata();
        case 1:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 2) = *(undefined *)((int)_Src + 2);
          _Src = (undefined4 *)((int)_Src + 3);
          puVar25 = (undefined4 *)((int)_Dst + 3);
          if (7 < uVar19) {
                    // WARNING: Load size is inaccurate
            for (; uVar19 != 0; uVar19 = uVar19 - 1) {
              *puVar25 = *_Src;
              _Src = (undefined4 *)((int)_Src + 4);
              puVar25 = puVar25 + 1;
            }
            switch(uVar20 & 3) {
            case 0:
              return _Dst;
            case 2:
              goto switchD_10008210_caseD_2;
            case 3:
              goto switchD_10008210_caseD_3;
            }
            break;
          }
          goto LAB_10008218;
        case 2:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          _Src = (undefined4 *)((int)_Src + 2);
          puVar25 = (undefined4 *)((int)_Dst + 2);
          if (uVar19 < 8) goto LAB_10008218;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_10008210_caseD_2;
          case 3:
            goto switchD_10008210_caseD_3;
          }
          break;
        case 3:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          _Src = (undefined4 *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)_Dst + 1);
          if (uVar19 < 8) goto LAB_10008218;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_10008210_caseD_2;
          case 3:
            goto switchD_10008210_caseD_3;
          }
        }
      }
      goto switchD_10008210_caseD_1;
    }
  }
  else {
    if (((((uint)_Dst ^ (uint)_Src) & 0xf) == 0) && ((DAT_10033540 >> 1 & 1) != 0)) {
      if (((uint)_Src & 0xf) != 0) {
        uVar19 = 0x10 - ((uint)_Src & 0xf);
        _Size = _Size - uVar19;
        for (uVar20 = uVar19 & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          *(undefined *)puVar25 = *_Src;
          _Src = (void *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)puVar25 + 1);
        }
        for (uVar19 = uVar19 >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {
                    // WARNING: Load size is inaccurate
          *puVar25 = *_Src;
          _Src = (void *)((int)_Src + 4);
          puVar25 = puVar25 + 1;
        }
      }
      for (uVar20 = _Size >> 7; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
        uVar26 = *(undefined4 *)((int)_Src + 4);
        uVar27 = *(undefined4 *)((int)_Src + 8);
        uVar28 = *(undefined4 *)((int)_Src + 0xc);
        uVar4 = *(undefined4 *)((int)_Src + 0x10);
        uVar5 = *(undefined4 *)((int)_Src + 0x14);
        uVar6 = *(undefined4 *)((int)_Src + 0x18);
        uVar7 = *(undefined4 *)((int)_Src + 0x1c);
        uVar8 = *(undefined4 *)((int)_Src + 0x20);
        uVar9 = *(undefined4 *)((int)_Src + 0x24);
        uVar10 = *(undefined4 *)((int)_Src + 0x28);
        uVar11 = *(undefined4 *)((int)_Src + 0x2c);
        uVar12 = *(undefined4 *)((int)_Src + 0x30);
        uVar13 = *(undefined4 *)((int)_Src + 0x34);
        uVar14 = *(undefined4 *)((int)_Src + 0x38);
        uVar15 = *(undefined4 *)((int)_Src + 0x3c);
        *puVar25 = *_Src;
        puVar25[1] = uVar26;
        puVar25[2] = uVar27;
        puVar25[3] = uVar28;
        puVar25[4] = uVar4;
        puVar25[5] = uVar5;
        puVar25[6] = uVar6;
        puVar25[7] = uVar7;
        puVar25[8] = uVar8;
        puVar25[9] = uVar9;
        puVar25[10] = uVar10;
        puVar25[0xb] = uVar11;
        puVar25[0xc] = uVar12;
        puVar25[0xd] = uVar13;
        puVar25[0xe] = uVar14;
        puVar25[0xf] = uVar15;
        uVar26 = *(undefined4 *)((int)_Src + 0x44);
        uVar27 = *(undefined4 *)((int)_Src + 0x48);
        uVar28 = *(undefined4 *)((int)_Src + 0x4c);
        uVar4 = *(undefined4 *)((int)_Src + 0x50);
        uVar5 = *(undefined4 *)((int)_Src + 0x54);
        uVar6 = *(undefined4 *)((int)_Src + 0x58);
        uVar7 = *(undefined4 *)((int)_Src + 0x5c);
        uVar8 = *(undefined4 *)((int)_Src + 0x60);
        uVar9 = *(undefined4 *)((int)_Src + 100);
        uVar10 = *(undefined4 *)((int)_Src + 0x68);
        uVar11 = *(undefined4 *)((int)_Src + 0x6c);
        uVar12 = *(undefined4 *)((int)_Src + 0x70);
        uVar13 = *(undefined4 *)((int)_Src + 0x74);
        uVar14 = *(undefined4 *)((int)_Src + 0x78);
        uVar15 = *(undefined4 *)((int)_Src + 0x7c);
        puVar25[0x10] = *(undefined4 *)((int)_Src + 0x40);
        puVar25[0x11] = uVar26;
        puVar25[0x12] = uVar27;
        puVar25[0x13] = uVar28;
        puVar25[0x14] = uVar4;
        puVar25[0x15] = uVar5;
        puVar25[0x16] = uVar6;
        puVar25[0x17] = uVar7;
        puVar25[0x18] = uVar8;
        puVar25[0x19] = uVar9;
        puVar25[0x1a] = uVar10;
        puVar25[0x1b] = uVar11;
        puVar25[0x1c] = uVar12;
        puVar25[0x1d] = uVar13;
        puVar25[0x1e] = uVar14;
        puVar25[0x1f] = uVar15;
        _Src = (void *)((int)_Src + 0x80);
        puVar25 = puVar25 + 0x20;
      }
      if ((_Size & 0x7f) != 0) {
        for (uVar20 = (_Size & 0x7f) >> 4; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          uVar26 = *(undefined4 *)((int)_Src + 4);
          uVar27 = *(undefined4 *)((int)_Src + 8);
          uVar28 = *(undefined4 *)((int)_Src + 0xc);
          *puVar25 = *_Src;
          puVar25[1] = uVar26;
          puVar25[2] = uVar27;
          puVar25[3] = uVar28;
          _Src = (void *)((int)_Src + 0x10);
          puVar25 = puVar25 + 4;
        }
        if ((_Size & 0xf) != 0) {
          for (uVar20 = (_Size & 0xf) >> 2; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *puVar25 = *_Src;
            _Src = (void *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          for (uVar20 = _Size & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *(undefined *)puVar25 = *_Src;
            _Src = (void *)((int)_Src + 1);
            puVar25 = (undefined4 *)((int)puVar25 + 1);
          }
        }
      }
      return _Dst;
    }
    if ((DAT_1004589c & 1) == 0) goto LAB_100081db;
    if (((uint)_Dst & 3) != 0) goto LAB_100081f8;
    if (((uint)_Src & 3) == 0) {
      if (((uint)_Dst >> 2 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar26 = *_Src;
        _Size = _Size - 4;
        _Src = (void *)((int)_Src + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if (((uint)_Dst >> 3 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar1 = *_Src;
        _Size = _Size - 8;
        _Src = (void *)((int)_Src + 8);
        *(undefined8 *)_Dst = uVar1;
        _Dst = (void *)((int)_Dst + 8);
      }
      if (((uint)_Src & 7) == 0) {
                    // WARNING: Load size is inaccurate
        puVar17 = (undefined8 *)((int)_Src + -8);
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        do {
          puVar22 = puVar17;
          uVar5 = *(undefined4 *)(puVar22 + 4);
          uVar6 = *(undefined4 *)((int)puVar22 + 0x24);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(puVar22 + 2);
          uVar28 = *(undefined4 *)(puVar22 + 7);
          uVar4 = *(undefined4 *)((int)puVar22 + 0x3c);
          auVar3 = *(undefined (*) [32])(puVar22 + 4);
          *(undefined4 *)((int)_Dst + 8) = uVar26;
          *(undefined4 *)((int)_Dst + 0xc) = uVar27;
          *(undefined4 *)((int)_Dst + 0x10) = uVar5;
          *(undefined4 *)((int)_Dst + 0x14) = uVar6;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x40,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x40,0);
          _Dst = (void *)((int)_Dst + 0x30);
          puVar17 = puVar22 + 6;
          uVar26 = uVar28;
          uVar27 = uVar4;
        } while (0x2f < (int)_Size);
        puVar22 = puVar22 + 7;
      }
      else if (((uint)_Src >> 3 & 1) == 0) {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -4;
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        uVar28 = *(undefined4 *)((int)_Src + 8);
        do {
          iVar21 = iVar16;
          uVar7 = *(undefined4 *)(iVar21 + 0x20);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar4 = *(undefined4 *)(iVar21 + 0x34);
          uVar5 = *(undefined4 *)(iVar21 + 0x38);
          uVar6 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 4) = uVar26;
          *(undefined4 *)((int)_Dst + 8) = uVar27;
          *(undefined4 *)((int)_Dst + 0xc) = uVar28;
          *(undefined4 *)((int)_Dst + 0x10) = uVar7;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x20,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x20,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar4;
          uVar27 = uVar5;
          uVar28 = uVar6;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x34);
      }
      else {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -0xc;
        uVar26 = *_Src;
        do {
          iVar21 = iVar16;
          uVar28 = *(undefined4 *)(iVar21 + 0x20);
          uVar4 = *(undefined4 *)(iVar21 + 0x24);
          uVar5 = *(undefined4 *)(iVar21 + 0x28);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar27 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 0xc) = uVar26;
          *(undefined4 *)((int)_Dst + 0x10) = uVar28;
          *(undefined4 *)((int)_Dst + 0x14) = uVar4;
          *(undefined4 *)((int)_Dst + 0x18) = uVar5;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x60,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x60,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar27;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x3c);
      }
      for (; 0xf < (int)_Size; _Size = _Size - 0x10) {
        uVar26 = *(undefined4 *)puVar22;
        uVar27 = *(undefined4 *)((int)puVar22 + 4);
        uVar28 = *(undefined4 *)(puVar22 + 1);
        uVar4 = *(undefined4 *)((int)puVar22 + 0xc);
        puVar22 = puVar22 + 2;
        *(undefined4 *)_Dst = uVar26;
        *(undefined4 *)((int)_Dst + 4) = uVar27;
        *(undefined4 *)((int)_Dst + 8) = uVar28;
        *(undefined4 *)((int)_Dst + 0xc) = uVar4;
        _Dst = (void *)((int)_Dst + 0x10);
      }
      if ((_Size >> 2 & 1) != 0) {
        uVar26 = *(undefined4 *)puVar22;
        _Size = _Size - 4;
        puVar22 = (undefined8 *)((int)puVar22 + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if ((_Size >> 3 & 1) != 0) {
        _Size = _Size - 8;
        *(undefined8 *)_Dst = *puVar22;
      }
                    // WARNING: Could not recover jumptable at 0x100081d9. Too many branches
                    // WARNING: Treating indirect jump as call
      pvVar18 = (void *)(*(code *)(&switchD_10008210::switchdataD_10008308)[_Size])();
      return pvVar18;
    }
  }
  uVar19 = _Size >> 2;
  if (uVar19 < 8) {
LAB_10008218:
                    // WARNING: Could not recover jumptable at 0x10008218. Too many branches
                    // WARNING: Treating indirect jump as call
    pvVar18 = (void *)(*(code *)(&PTR_LAB_1000829c)[uVar19])();
    return pvVar18;
  }
                    // WARNING: Load size is inaccurate
  for (; uVar19 != 0; uVar19 = uVar19 - 1) {
    *puVar25 = *_Src;
    _Src = (undefined4 *)((int)_Src + 4);
    puVar25 = puVar25 + 1;
  }
  switch(_Size & 3) {
  case 0:
    return _Dst;
  case 2:
switchD_10008210_caseD_2:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    return _Dst;
  case 3:
switchD_10008210_caseD_3:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    *(undefined *)((int)puVar25 + 2) = *(undefined *)((int)_Src + 2);
    return _Dst;
  }
switchD_10008210_caseD_1:
                    // WARNING: Load size is inaccurate
  *(undefined *)puVar25 = *_Src;
  return _Dst;
}



void __fastcall FUN_100082bc(int param_1,int param_2)

{
  int unaff_ESI;
  int unaff_EDI;
  
  *(undefined4 *)(unaff_EDI + -0x1c + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x1c + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x18 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x18 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x14 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x14 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x10 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x10 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0xc + param_1 * 4) = *(undefined4 *)(unaff_ESI + -0xc + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -8 + param_1 * 4) = *(undefined4 *)(unaff_ESI + -8 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -4 + param_1 * 4) = *(undefined4 *)(unaff_ESI + -4 + param_1 * 4);
                    // WARNING: Could not recover jumptable at 0x100082ff. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)(&switchD_10008210::switchdataD_10008308)[param_2])();
  return;
}



void __fastcall FUN_10008458(int param_1,int param_2)

{
  int unaff_ESI;
  int unaff_EDI;
  
  *(undefined4 *)(unaff_EDI + 0x1c + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x1c + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x18 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x18 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x14 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x14 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x10 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x10 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0xc + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0xc + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 8 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 8 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 4 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 4 + param_1 * 4);
                    // WARNING: Could not recover jumptable at 0x1000849b. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)(&switchD_100083a4::switchdataD_100084a4)[param_2])();
  return;
}



pthreadlocinfo * __thiscall FUN_10008755(void *this,pthreadlocinfo *param_1)

{
  uint uVar1;
  _ptiddata p_Var2;
  pthreadlocinfo ptVar3;
  pthreadmbcinfo ptVar4;
  
  *(undefined *)((int)this + 0xc) = 0;
  if (param_1 == (pthreadlocinfo *)0x0) {
    p_Var2 = __getptd();
    *(_ptiddata *)((int)this + 8) = p_Var2;
    ptVar3 = p_Var2->ptlocinfo;
    *(pthreadlocinfo *)this = ptVar3;
    *(pthreadmbcinfo *)((int)this + 4) = p_Var2->ptmbcinfo;
    if ((ptVar3 != (pthreadlocinfo)PTR_DAT_10033c9c) && ((p_Var2->_ownlocale & DAT_10033d58) == 0))
    {
      ptVar3 = FUN_1000f755();
      *(pthreadlocinfo *)this = ptVar3;
    }
    if ((*(undefined **)((int)this + 4) != PTR_DAT_10033a3c) &&
       ((*(uint *)(*(int *)((int)this + 8) + 0x70) & DAT_10033d58) == 0)) {
      ptVar4 = FUN_1000fad7();
      *(pthreadmbcinfo *)((int)this + 4) = ptVar4;
    }
    uVar1 = *(uint *)(*(int *)((int)this + 8) + 0x70);
    if ((uVar1 & 2) == 0) {
      *(uint *)(*(int *)((int)this + 8) + 0x70) = uVar1 | 2;
      *(undefined *)((int)this + 0xc) = 1;
    }
  }
  else {
    *(pthreadlocinfo *)this = *param_1;
    *(pthreadlocinfo *)((int)this + 4) = param_1[1];
  }
  return (pthreadlocinfo *)this;
}



void __cdecl FUN_100087dd(int param_1)

{
  if ((param_1 != 0) && (*(int *)(param_1 + -8) == 0xdddd)) {
    FUN_10001730((int *)(param_1 + -8));
  }
  return;
}



ushort __cdecl FUN_100087fb(int param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  FUN_10008755(local_14,param_2);
  if (local_14[0]->mb_cur_max < 2) {
    uVar1 = local_14[0]->pctype[param_1] & 4;
  }
  else {
    uVar1 = FUN_1001070a(param_1,4,local_14);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar1;
}



ushort __cdecl FUN_1000884d(int param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  FUN_10008755(local_14,param_2);
  if (local_14[0]->mb_cur_max < 2) {
    uVar1 = local_14[0]->pctype[param_1] & 8;
  }
  else {
    uVar1 = FUN_1001070a(param_1,8,local_14);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar1;
}



ushort __cdecl FUN_1000889f(int param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  FUN_10008755(local_14,param_2);
  if (local_14[0]->mb_cur_max < 2) {
    uVar1 = local_14[0]->pctype[param_1] & 0x80;
  }
  else {
    uVar1 = FUN_1001070a(param_1,0x80,local_14);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _isdigit
// 
// Library: Visual Studio 2012 Release

int __cdecl _isdigit(int _C)

{
  ushort uVar1;
  undefined2 extraout_var;
  
  if (_DAT_10045b04 == 0) {
    return *(ushort *)(PTR_DAT_10033d30 + _C * 2) & 4;
  }
  uVar1 = FUN_100087fb(_C,(pthreadlocinfo *)0x0);
  return CONCAT22(extraout_var,uVar1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _isspace
// 
// Library: Visual Studio 2012 Release

int __cdecl _isspace(int _C)

{
  ushort uVar1;
  undefined2 extraout_var;
  
  if (_DAT_10045b04 == 0) {
    return *(ushort *)(PTR_DAT_10033d30 + _C * 2) & 8;
  }
  uVar1 = FUN_1000884d(_C,(pthreadlocinfo *)0x0);
  return CONCAT22(extraout_var,uVar1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _isxdigit
// 
// Library: Visual Studio 2012 Release

int __cdecl _isxdigit(int _C)

{
  ushort uVar1;
  undefined2 extraout_var;
  
  if (_DAT_10045b04 == 0) {
    return *(ushort *)(PTR_DAT_10033d30 + _C * 2) & 0x80;
  }
  uVar1 = FUN_1000889f(_C,(pthreadlocinfo *)0x0);
  return CONCAT22(extraout_var,uVar1);
}



uint __cdecl FUN_1000897a(uint param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  undefined2 extraout_var;
  uint uVar2;
  undefined2 extraout_var_00;
  int *piVar3;
  int iVar4;
  pthreadlocinfo local_1c [2];
  int local_14;
  char local_10;
  byte local_c;
  undefined local_b;
  CHAR local_8;
  CHAR local_7;
  undefined local_6;
  
  FUN_10008755(local_1c,param_2);
  if (param_1 < 0x100) {
    if (local_1c[0]->mb_cur_max < 2) {
      uVar2 = local_1c[0]->pctype[param_1] & 1;
    }
    else {
      uVar1 = FUN_1001070a(param_1,1,local_1c);
      uVar2 = CONCAT22(extraout_var,uVar1);
    }
    if (uVar2 == 0) {
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
    else {
      param_1 = (uint)local_1c[0]->pclmap[param_1];
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
  }
  else {
    if ((local_1c[0]->mb_cur_max < 2) ||
       (uVar1 = FUN_10008ae9((int)param_1 >> 8 & 0xff,local_1c),
       CONCAT22(extraout_var_00,uVar1) == 0)) {
      piVar3 = __errno();
      iVar4 = 1;
      *piVar3 = 0x2a;
      local_7 = '\0';
      local_8 = (CHAR)param_1;
    }
    else {
      local_6 = 0;
      iVar4 = 2;
      local_8 = (CHAR)(param_1 >> 8);
      local_7 = (CHAR)param_1;
    }
    iVar4 = FUN_10010ba9(local_1c,local_1c[0]->locale_name[2],0x100,&local_8,iVar4,(LPWSTR)&local_c,
                         3,local_1c[0]->lc_codepage,1);
    if (iVar4 == 0) {
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
    else if (iVar4 == 1) {
      param_1 = (uint)local_c;
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
    else {
      param_1 = (uint)CONCAT11(local_c,local_b);
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _tolower
// 
// Library: Visual Studio 2012 Release

int __cdecl _tolower(int _C)

{
  uint uVar1;
  
  if (_DAT_10045b04 == 0) {
    if (_C - 0x41U < 0x1a) {
      _C = _C + 0x20;
    }
    return _C;
  }
  uVar1 = FUN_1000897a(_C,(pthreadlocinfo *)0x0);
  return uVar1;
}



ushort __cdecl FUN_10008ae9(uint param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_10008755(local_14,param_2);
  uVar1 = *(ushort *)(*(int *)(local_14[0] + 0x90) + (param_1 & 0xff) * 2);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar1 & 0x8000;
}



void __cdecl FUN_10008b23(uint param_1)

{
  FUN_10008ae9(param_1,(pthreadlocinfo *)0x0);
  return;
}



// Library Function - Single Match
//  __allmul
// 
// Library: Visual Studio

ulonglong __allmul(uint param_1,uint param_2,uint param_3,uint param_4)

{
  if ((param_4 | param_2) == 0) {
    return (ulonglong)param_1 * (ulonglong)param_3;
  }
  return (ulonglong)param_1 * (ulonglong)param_3 & 0xffffffff |
         (ulonglong)
         ((int)((ulonglong)param_1 * (ulonglong)param_3 >> 0x20) +
         param_2 * param_3 + param_1 * param_4) << 0x20;
}



// Library Function - Single Match
//  __decomp
// 
// Library: Visual Studio 2019 Release

void __cdecl __decomp(int param_1,uint param_2,int *param_3)

{
  uint uVar1;
  double dVar2;
  ushort uVar3;
  int iVar4;
  
  dVar2 = (double)CONCAT17(param_2._3_1_,CONCAT16(param_2._2_1_,CONCAT24((ushort)param_2,param_1)));
  if (dVar2 == 0.0) {
    iVar4 = 0;
  }
  else if (((param_2 & 0x7ff00000) == 0) && (((param_2 & 0xfffff) != 0 || (param_1 != 0)))) {
    iVar4 = -0x3fd;
    if ((param_2 & 0x100000) == 0) {
      do {
        uVar1 = param_2 * 2;
        param_2._0_2_ = (ushort)uVar1;
        param_2 = uVar1;
        if (param_1 < 0) {
          param_2 = uVar1 | 1;
        }
        param_1 = param_1 * 2;
        iVar4 = iVar4 + -1;
      } while ((uVar1 & 0x100000) == 0);
      param_2 = uVar1 & 0xffff0000 | (uint)(ushort)param_2;
    }
    uVar3 = (ushort)(param_2 >> 0x10) & 0xffef;
    param_2._2_1_ = (undefined)uVar3;
    param_2._3_1_ = (byte)(uVar3 >> 8);
    if ((ushort)((ushort)(0.0 < dVar2) << 8 | (ushort)(dVar2 == 0.0) << 0xe) == 0) {
      param_2._3_1_ = param_2._3_1_ | 0x80;
    }
    __set_exp(CONCAT17(param_2._3_1_,CONCAT16(param_2._2_1_,CONCAT24((ushort)param_2,param_1))),0);
  }
  else {
    __set_exp((ulonglong)dVar2,0);
    iVar4 = (param_2 >> 0x14 & 0x7ff) - 0x3fe;
  }
  *param_3 = iVar4;
  return;
}



// Library Function - Single Match
//  __set_exp
// 
// Library: Visual Studio 2019 Release

float10 __cdecl __set_exp(ulonglong param_1,short param_2)

{
  double local_c;
  
  local_c = (double)(param_1 & 0xffffffffffff |
                    (ulonglong)(ushort)((param_2 + 0x3fe) * 0x10 | param_1._6_2_ & 0x800f) << 0x30);
  return (float10)local_c;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___set_fpsr_sse2
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release

void ___set_fpsr_sse2(uint param_1)

{
  return;
}



int FUN_10008d9b(void)

{
  short in_FPUStatusWord;
  
  return (int)in_FPUStatusWord;
}



// Library Function - Single Match
//  __ctrlfp
// 
// Library: Visual Studio 2019 Release

int __ctrlfp(undefined4 param_1,undefined4 param_2)

{
  short in_FPUControlWord;
  
  return (int)in_FPUControlWord;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __set_statfp
// 
// Library: Visual Studio 2019 Release

void __set_statfp(uint param_1)

{
  return;
}



int FUN_10008e2f(void)

{
  short in_FPUStatusWord;
  
  return (int)in_FPUStatusWord;
}



// Library Function - Single Match
//  ___doserrno
// 
// Library: Visual Studio 2012 Release

ulong * __cdecl ___doserrno(void)

{
  _ptiddata p_Var1;
  
  p_Var1 = __getptd_noexit();
  if (p_Var1 == (_ptiddata)0x0) {
    return (ulong *)&DAT_10033524;
  }
  return &p_Var1->_tdoserrno;
}



// Library Function - Multiple Matches With Different Base Names
//  ___acrt_errno_map_os_error
//  __dosmaperr
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

void __cdecl FID_conflict___dosmaperr(ulong param_1)

{
  ulong *puVar1;
  int iVar2;
  int *piVar3;
  
  puVar1 = ___doserrno();
  *puVar1 = param_1;
  iVar2 = FID_conflict____acrt_errno_from_os_error(param_1);
  piVar3 = __errno();
  *piVar3 = iVar2;
  return;
}



// Library Function - Single Match
//  __errno
// 
// Library: Visual Studio 2012 Release

int * __cdecl __errno(void)

{
  _ptiddata p_Var1;
  
  p_Var1 = __getptd_noexit();
  if (p_Var1 == (_ptiddata)0x0) {
    return (int *)&DAT_10033520;
  }
  return &p_Var1->_terrno;
}



// Library Function - Multiple Matches With Different Base Names
//  ___acrt_errno_from_os_error
//  __get_errno_from_oserr
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

int __cdecl FID_conflict____acrt_errno_from_os_error(ulong param_1)

{
  uint uVar1;
  
  uVar1 = 0;
  do {
    if (param_1 == (&DAT_100333b8)[uVar1 * 2]) {
      return (&DAT_100333bc)[uVar1 * 2];
    }
    uVar1 = uVar1 + 1;
  } while (uVar1 < 0x2d);
  if (param_1 - 0x13 < 0x12) {
    return 0xd;
  }
  return (-(uint)(0xe < param_1 - 0xbc) & 0xe) + 8;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __fastcall FUN_10008ec7(int param_1,undefined param_2,undefined param_3)

{
  code *pcVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  uint uVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar5;
  undefined4 extraout_EDX;
  undefined4 unaff_EBX;
  undefined4 unaff_EBP;
  undefined4 unaff_ESI;
  undefined4 unaff_EDI;
  undefined2 in_ES;
  undefined2 in_CS;
  undefined2 in_SS;
  undefined2 in_DS;
  undefined2 in_FS;
  undefined2 in_GS;
  byte bVar6;
  byte bVar7;
  byte in_AF;
  byte bVar8;
  byte bVar9;
  byte in_TF;
  byte in_IF;
  byte bVar10;
  byte in_NT;
  byte in_AC;
  byte in_VIF;
  byte in_VIP;
  byte in_ID;
  undefined8 uVar11;
  undefined4 unaff_retaddr;
  
  if (param_1 == DAT_1003352c) {
    return;
  }
  uVar4 = IsProcessorFeaturePresent(0x17);
  uVar11 = CONCAT44(extraout_EDX,uVar4);
  bVar6 = 0;
  bVar10 = 0;
  bVar9 = (int)uVar4 < 0;
  bVar8 = uVar4 == 0;
  bVar7 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;
  uVar5 = extraout_ECX;
  uVar2 = unaff_retaddr;
  uVar3 = unaff_EBP;
  if (!(bool)bVar8) {
    pcVar1 = (code *)swi(0x29);
    uVar11 = (*pcVar1)();
    uVar5 = extraout_ECX_00;
    uVar2 = unaff_retaddr;
    uVar3 = unaff_EBP;
  }
  _DAT_10045c0c = uVar3;
  _DAT_10045b14 = uVar2;
  _DAT_10045c18 =
       (uint)(in_NT & 1) * 0x4000 | (uint)(bVar10 & 1) * 0x800 | (uint)(in_IF & 1) * 0x200 |
       (uint)(in_TF & 1) * 0x100 | (uint)(bVar9 & 1) * 0x80 | (uint)(bVar8 & 1) * 0x40 |
       (uint)(in_AF & 1) * 0x10 | (uint)(bVar7 & 1) * 4 | (uint)(bVar6 & 1) |
       (uint)(in_ID & 1) * 0x200000 | (uint)(in_VIP & 1) * 0x100000 | (uint)(in_VIF & 1) * 0x80000 |
       (uint)(in_AC & 1) * 0x40000;
  _DAT_10045c1c = &param_3;
  _DAT_10045b58 = 0x10001;
  _DAT_10045b08 = 0xc0000409;
  _DAT_10045b0c = 1;
  _DAT_10045b18 = 1;
  DAT_10045b1c = 2;
  _DAT_10045be4 = in_GS;
  _DAT_10045be8 = in_FS;
  _DAT_10045bec = in_ES;
  _DAT_10045bf0 = in_DS;
  _DAT_10045bf4 = unaff_EDI;
  _DAT_10045bf8 = unaff_ESI;
  _DAT_10045bfc = unaff_EBX;
  _DAT_10045c04 = uVar5;
  DAT_10045c10 = _DAT_10045b14;
  _DAT_10045c14 = in_CS;
  _DAT_10045c20 = in_SS;
  ___raise_securityfailure((EXCEPTION_POINTERS *)&PTR_DAT_1002b1f8);
  _DAT_10045c00 = (undefined4)((ulonglong)uVar11 >> 0x20);
  _DAT_10045c08 = (undefined4)uVar11;
  return;
}



void __cdecl FUN_10008ed6(uint param_1,uint param_2)

{
  DAT_10033534 = ~param_2 & DAT_10033534 | param_1 & param_2;
  return;
}



// Library Function - Single Match
//  _abort
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release

void __cdecl _abort(void)

{
  code *pcVar1;
  int iVar2;
  BOOL BVar3;
  
  iVar2 = FUN_10010d28();
  if (iVar2 != 0) {
    FUN_10010d51(0x16);
  }
  if (((byte)DAT_10033534 & 2) != 0) {
    BVar3 = IsProcessorFeaturePresent(0x17);
    if (BVar3 != 0) {
      pcVar1 = (code *)swi(0x29);
      (*pcVar1)();
    }
    FUN_10008f45(3,0x40000015,1);
  }
  __exit(3);
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



void __cdecl FUN_10008f38(undefined4 param_1)

{
  DAT_10045890 = param_1;
  return;
}



void __cdecl FUN_10008f45(int param_1,DWORD param_2,DWORD param_3)

{
  uint uVar1;
  BOOL BVar2;
  LONG LVar3;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined uVar4;
  undefined uVar5;
  DWORD local_324;
  DWORD local_320 [19];
  undefined4 local_2d4;
  
  uVar1 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  if (param_1 != -1) {
    FUN_10011078();
  }
  local_324 = 0;
  FUN_10006130(local_320,0,0x4c);
  uVar5 = SUB41(&local_324,0);
  local_2d4 = 0x10001;
  local_324 = param_2;
  local_320[0] = param_3;
  BVar2 = IsDebuggerPresent();
  LVar3 = ___crtUnhandledException((EXCEPTION_POINTERS *)&stack0xfffffcd4);
  uVar4 = extraout_DL;
  if (((LVar3 == 0) && (BVar2 == 0)) && (param_1 != -1)) {
    FUN_10011078();
    uVar4 = extraout_DL_00;
  }
  FUN_10008ec7(uVar1 ^ (uint)&stack0xfffffffc,uVar4,uVar5);
  return;
}



void __cdecl FUN_1000906a(undefined4 param_1)

{
  DAT_10045894 = param_1;
  return;
}



// Library Function - Single Match
//  __invalid_parameter
// 
// Libraries: Visual Studio 2010 Release, Visual Studio 2012 Release

void __invalid_parameter(wchar_t *param_1,wchar_t *param_2,wchar_t *param_3,uint param_4,
                        uintptr_t param_5)

{
  code *UNRECOVERED_JUMPTABLE;
  
  UNRECOVERED_JUMPTABLE = (code *)DecodePointer(DAT_10045894);
  if (UNRECOVERED_JUMPTABLE != (code *)0x0) {
                    // WARNING: Could not recover jumptable at 0x1000908b. Too many branches
                    // WARNING: Treating indirect jump as call
    (*UNRECOVERED_JUMPTABLE)();
    return;
  }
  __invoke_watson(param_1,param_2,param_3,param_4,param_5);
  UNRECOVERED_JUMPTABLE = (code *)swi(3);
  (*UNRECOVERED_JUMPTABLE)();
  return;
}



void FUN_100090a2(void)

{
  __invalid_parameter((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
  return;
}



// Library Function - Single Match
//  __invoke_watson
// 
// Library: Visual Studio 2012 Release

void __cdecl
__invoke_watson(wchar_t *param_1,wchar_t *param_2,wchar_t *param_3,uint param_4,uintptr_t param_5)

{
  code *pcVar1;
  BOOL BVar2;
  
  BVar2 = IsProcessorFeaturePresent(0x17);
  if (BVar2 != 0) {
    pcVar1 = (code *)swi(0x29);
    (*pcVar1)();
  }
  FUN_10008f45(2,0xc0000417,1);
  ___crtTerminateProcess(0xc0000417);
  return;
}



uint __cdecl FUN_100090dd(uint param_1,FILE *param_2)

{
  uint uVar1;
  WCHAR *pWVar2;
  FILE *_File;
  byte bVar3;
  WCHAR *pWVar4;
  int *piVar5;
  undefined **ppuVar6;
  undefined3 extraout_var;
  undefined *puVar7;
  FILE *pFVar8;
  longlong lVar9;
  
  _File = param_2;
  pWVar4 = (WCHAR *)__fileno(param_2);
  uVar1 = _File->_flag;
  if ((uVar1 & 0x82) == 0) {
    piVar5 = __errno();
    *piVar5 = 9;
LAB_10009101:
    _File->_flag = _File->_flag | 0x20;
    return 0xffffffff;
  }
  if ((uVar1 & 0x40) != 0) {
    piVar5 = __errno();
    *piVar5 = 0x22;
    goto LAB_10009101;
  }
  pFVar8 = (FILE *)0x0;
  if ((uVar1 & 1) != 0) {
    _File->_cnt = 0;
    if ((uVar1 & 0x10) == 0) {
      _File->_flag = uVar1 | 0x20;
      return 0xffffffff;
    }
    _File->_ptr = _File->_base;
    _File->_flag = uVar1 & 0xfffffffe;
  }
  uVar1 = _File->_flag;
  _File->_cnt = 0;
  _File->_flag = uVar1 & 0xffffffef | 2;
  if (((uVar1 & 0x10c) == 0) &&
     (((ppuVar6 = FUN_1001111a(), _File != (FILE *)(ppuVar6 + 8) &&
       (ppuVar6 = FUN_1001111a(), _File != (FILE *)(ppuVar6 + 0x10))) ||
      (bVar3 = FUN_1001121a((uint)pWVar4), CONCAT31(extraout_var,bVar3) == 0)))) {
    __getbuf(_File);
  }
  if ((_File->_flag & 0x108U) == 0) {
    param_2 = (FILE *)0x1;
    pFVar8 = (FILE *)FUN_1001126e(pWVar4,(WCHAR *)&param_1,1);
  }
  else {
    pWVar2 = (WCHAR *)_File->_base;
    param_2 = (FILE *)(_File->_ptr + -(int)pWVar2);
    _File->_ptr = (char *)((int)pWVar2 + 1);
    _File->_cnt = _File->_bufsiz + -1;
    if ((int)param_2 < 1) {
      if ((pWVar4 == (WCHAR *)0xffffffff) || (pWVar4 == (WCHAR *)0xfffffffe)) {
        puVar7 = &DAT_100335a0;
      }
      else {
        puVar7 = (undefined *)(((uint)pWVar4 & 0x1f) * 0x40 + (&DAT_100458e0)[(int)pWVar4 >> 5]);
      }
      if (((puVar7[4] & 0x20) != 0) && (lVar9 = FUN_10011bc2((uint)pWVar4,0,0,2), lVar9 == -1))
      goto LAB_10009218;
    }
    else {
      pFVar8 = (FILE *)FUN_1001126e(pWVar4,pWVar2,(uint)param_2);
    }
    *_File->_base = (char)param_1;
  }
  if (pFVar8 == param_2) {
    return param_1 & 0xff;
  }
LAB_10009218:
  _File->_flag = _File->_flag | 0x20;
  return 0xffffffff;
}



void __cdecl FUN_1000922c(FILE *param_1,byte *param_2,pthreadlocinfo *param_3,int **param_4)

{
  byte bVar1;
  WCHAR WVar2;
  byte *pbVar3;
  ushort uVar4;
  uint uVar5;
  undefined2 extraout_var_00;
  int *piVar6;
  undefined3 extraout_var;
  code *pcVar7;
  char *pcVar8;
  byte *pbVar9;
  int iVar10;
  int *piVar11;
  int extraout_ECX;
  byte bVar12;
  byte extraout_DL;
  undefined *puVar13;
  uint uVar14;
  int *piVar15;
  char *pcVar16;
  bool bVar17;
  longlong lVar18;
  int **ppiVar19;
  undefined4 uVar20;
  pthreadlocinfo *pptVar21;
  undefined in_stack_fffffd7c;
  int *local_27c;
  int *local_278;
  pthreadlocinfo local_274 [2];
  int local_26c;
  char local_268;
  int local_264;
  undefined4 local_260;
  int *local_25c;
  int local_258;
  int *local_254;
  int local_250;
  uint local_24c;
  int local_248;
  int *local_244;
  char *local_240;
  int local_23c;
  int local_238;
  FILE *local_234;
  byte local_230;
  char local_22f;
  int *local_22c;
  char *local_228;
  int local_224;
  int **local_220;
  uint local_21c;
  byte local_215;
  byte *local_214;
  undefined local_210;
  undefined local_11 [9];
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  local_234 = param_1;
  local_214 = param_2;
  uVar14 = 0;
  local_220 = param_4;
  local_258 = 0;
  piVar15 = (int *)0x0;
  local_21c = 0;
  local_244 = (int *)0x0;
  local_22c = (int *)0x0;
  local_238 = 0;
  local_260 = 0;
  local_250 = 0;
  local_23c = 0;
  FUN_10008755(local_274,param_3);
  local_25c = __errno();
  if (local_234 != (FILE *)0x0) {
    if ((*(byte *)&local_234->_flag & 0x40) == 0) {
      uVar5 = __fileno(local_234);
      if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {
        puVar13 = &DAT_100335a0;
      }
      else {
        puVar13 = (undefined *)((uVar5 & 0x1f) * 0x40 + (&DAT_100458e0)[(int)uVar5 >> 5]);
      }
      if ((puVar13[0x24] & 0x7f) == 0) {
        if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {
          puVar13 = &DAT_100335a0;
        }
        else {
          puVar13 = (undefined *)((uVar5 & 0x1f) * 0x40 + (&DAT_100458e0)[(int)uVar5 >> 5]);
        }
        if ((puVar13[0x24] & 0x80) == 0) goto LAB_10009323;
      }
    }
    else {
LAB_10009323:
      if (local_214 != (byte *)0x0) {
        bVar12 = *local_214;
        local_228 = (char *)0x0;
        iVar10 = 0;
        local_224 = 0;
        local_248 = 0;
        local_254 = (int *)0x0;
        local_24c = local_24c & 0xffffff00 | (uint)bVar12;
        pbVar3 = local_214;
        while ((local_215 = bVar12, bVar12 != 0 && (local_214 = pbVar3 + 1, -1 < iVar10))) {
          if ((byte)(bVar12 - 0x20) < 0x59) {
            uVar5 = (int)*(char *)((int)&DAT_10023ea8 + (int)(char)bVar12) & 0xf;
          }
          else {
            uVar5 = 0;
          }
          local_248 = (int)(char)(&DAT_10023ec8)[uVar5 * 8 + local_248] >> 4;
          pbVar9 = local_214;
          switch(local_248) {
          case 0:
LAB_100095bf:
            local_23c = 0;
            uVar4 = FUN_10008ae9((uint)bVar12,local_274);
            if (CONCAT22(extraout_var_00,uVar4) != 0) {
              _write_char((byte)local_24c,local_234,&local_224);
              bVar12 = *local_214;
              local_214 = local_214 + 1;
              local_24c = local_24c & 0xffffff00 | (uint)bVar12;
              if (bVar12 == 0) goto LAB_10009d77;
            }
            _write_char((byte)local_24c,local_234,&local_224);
            pbVar9 = local_214;
            iVar10 = local_224;
            break;
          case 1:
            local_22c = (int *)0xffffffff;
            uVar14 = 0;
            local_260 = 0;
            local_250 = 0;
            local_244 = (int *)0x0;
            local_238 = 0;
            local_21c = 0;
            local_23c = 0;
            break;
          case 2:
            if (bVar12 == 0x20) {
              uVar14 = uVar14 | 2;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x23) {
              uVar14 = uVar14 | 0x80;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x2b) {
              uVar14 = uVar14 | 1;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x2d) {
              uVar14 = uVar14 | 4;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x30) {
              uVar14 = uVar14 | 8;
              local_21c = uVar14;
            }
            break;
          case 3:
            if (bVar12 == 0x2a) {
              local_244 = *local_220;
              local_220 = local_220 + 1;
              if ((int)local_244 < 0) {
                uVar14 = uVar14 | 4;
                local_244 = (int *)-(int)local_244;
                local_21c = uVar14;
              }
            }
            else {
              local_244 = (int *)((int)(char)bVar12 + (int)local_244 * 10 + -0x30);
              iVar10 = local_224;
            }
            break;
          case 4:
            local_22c = (int *)0x0;
            break;
          case 5:
            if (bVar12 == 0x2a) {
              local_22c = *local_220;
              local_220 = local_220 + 1;
              if ((int)local_22c < 0) {
                local_22c = (int *)0xffffffff;
              }
            }
            else {
              local_22c = (int *)((int)(char)bVar12 + (int)local_22c * 10 + -0x30);
              iVar10 = local_224;
            }
            break;
          case 6:
            if (bVar12 == 0x49) {
              bVar1 = *local_214;
              if ((bVar1 == 0x36) && (pbVar3[2] == 0x34)) {
                uVar14 = uVar14 | 0x8000;
                pbVar9 = pbVar3 + 3;
                local_21c = uVar14;
              }
              else if ((bVar1 == 0x33) && (pbVar3[2] == 0x32)) {
                uVar14 = uVar14 & 0xffff7fff;
                pbVar9 = pbVar3 + 3;
                local_21c = uVar14;
              }
              else if ((((bVar1 != 100) && (bVar1 != 0x69)) && (bVar1 != 0x6f)) &&
                      (((bVar1 != 0x75 && (bVar1 != 0x78)) && (bVar1 != 0x58)))) {
                local_248 = 0;
                goto LAB_100095bf;
              }
            }
            else if (bVar12 == 0x68) {
              uVar14 = uVar14 | 0x20;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x6c) {
              if (*local_214 == 0x6c) {
                uVar14 = uVar14 | 0x1000;
                pbVar9 = pbVar3 + 2;
                local_21c = uVar14;
              }
              else {
                uVar14 = uVar14 | 0x10;
                local_21c = uVar14;
              }
            }
            else if (bVar12 == 0x77) {
              uVar14 = uVar14 | 0x800;
              local_21c = uVar14;
            }
            break;
          case 7:
            if ((char)bVar12 < 'e') {
              if (bVar12 == 100) {
LAB_10009896:
                uVar14 = uVar14 | 0x40;
                local_21c = uVar14;
LAB_1000989f:
                local_228 = (char *)0xa;
LAB_100098a9:
                if (((uVar14 & 0x8000) == 0) && ((uVar14 & 0x1000) == 0)) {
                  if ((uVar14 & 0x20) == 0) {
                    if ((uVar14 & 0x40) == 0) {
                      piVar15 = *local_220;
                      piVar11 = (int *)0x0;
                      local_220 = local_220 + 1;
                      goto LAB_10009a80;
                    }
                    piVar15 = *local_220;
                  }
                  else if ((uVar14 & 0x40) == 0) {
                    piVar15 = (int *)(uint)*(ushort *)local_220;
                  }
                  else {
                    piVar15 = (int *)(int)*(short *)local_220;
                  }
                  piVar11 = (int *)((int)piVar15 >> 0x1f);
                  local_220 = local_220 + 1;
                }
                else {
                  piVar15 = *local_220;
                  piVar11 = local_220[1];
                  local_220 = local_220 + 2;
                }
LAB_10009a80:
                if ((((uVar14 & 0x40) != 0) && ((int)piVar11 < 1)) &&
                   (((int)piVar11 < 0 || (false)))) {
                  bVar17 = piVar15 != (int *)0x0;
                  piVar15 = (int *)-(int)piVar15;
                  piVar11 = (int *)-(int)((int)piVar11 + (uint)bVar17);
                  uVar14 = uVar14 | 0x100;
                  local_21c = uVar14;
                }
                if ((uVar14 & 0x9000) == 0) {
                  piVar11 = (int *)0x0;
                }
                lVar18 = CONCAT44(piVar11,piVar15);
                if ((int)local_22c < 0) {
                  local_22c = (int *)0x1;
                }
                else {
                  local_21c = uVar14 & 0xfffffff7;
                  if (0x200 < (int)local_22c) {
                    local_22c = (int *)0x200;
                  }
                }
                if (((uint)piVar15 | (uint)piVar11) == 0) {
                  local_238 = 0;
                }
                piVar11 = (int *)local_11;
                while( true ) {
                  piVar6 = (int *)((int)local_22c + -1);
                  if (((int)local_22c < 1) && (lVar18 == 0)) break;
                  local_22c = piVar6;
                  lVar18 = __aulldvrm((uint)lVar18,(uint)((ulonglong)lVar18 >> 0x20),(uint)local_228
                                      ,(int)local_228 >> 0x1f);
                  local_240 = (char *)lVar18;
                  iVar10 = extraout_ECX + 0x30;
                  if (0x39 < iVar10) {
                    iVar10 = iVar10 + local_258;
                  }
                  *(char *)piVar11 = (char)iVar10;
                  piVar11 = (int *)((int)piVar11 + -1);
                }
                local_228 = local_11 + -(int)piVar11;
                piVar15 = (int *)((int)piVar11 + 1);
                uVar14 = local_21c;
                local_22c = piVar6;
                if (((local_21c & 0x200) != 0) &&
                   ((local_228 == (char *)0x0 || (*(char *)piVar15 != '0')))) {
                  local_228 = local_11 + -(int)piVar11 + 1;
                  *(undefined *)piVar11 = 0x30;
                  piVar15 = piVar11;
                }
              }
              else if ((char)bVar12 < 'T') {
                if (bVar12 == 0x53) {
                  if ((uVar14 & 0x830) == 0) {
                    uVar14 = uVar14 | 0x800;
                    local_21c = uVar14;
                  }
                  goto LAB_100096e0;
                }
                if (bVar12 == 0x41) {
LAB_10009665:
                  local_260 = 1;
                  local_215 = bVar12 + 0x20;
LAB_10009678:
                  uVar5 = uVar14 | 0x40;
                  local_240 = (char *)0x200;
                  piVar6 = (int *)&local_210;
                  pcVar16 = local_240;
                  local_21c = uVar5;
                  if ((int)local_22c < 0) {
                    local_22c = (int *)0x6;
                  }
                  else if (local_22c == (int *)0x0) {
                    if (local_215 == 0x67) {
                      local_22c = (int *)0x1;
                    }
                  }
                  else {
                    if (0x200 < (int)local_22c) {
                      local_22c = (int *)0x200;
                    }
                    if (0xa3 < (int)local_22c) {
                      pcVar16 = (char *)((int)local_22c + 0x15d);
                      local_254 = (int *)FUN_100017b0(pcVar16);
                      piVar6 = local_254;
                      if (local_254 == (int *)0x0) {
                        local_22c = (int *)0xa3;
                        piVar6 = (int *)&local_210;
                        pcVar16 = local_240;
                      }
                    }
                  }
                  local_240 = pcVar16;
                  local_27c = *local_220;
                  local_278 = local_220[1];
                  pptVar21 = local_274;
                  iVar10 = (int)(char)local_215;
                  ppiVar19 = &local_27c;
                  piVar15 = piVar6;
                  pcVar16 = local_240;
                  piVar11 = local_22c;
                  uVar20 = local_260;
                  local_220 = local_220 + 2;
                  pcVar7 = (code *)DecodePointer(PTR_FUN_10033578);
                  (*pcVar7)(ppiVar19,piVar15,pcVar16,iVar10,piVar11,uVar20,pptVar21);
                  if (((uVar14 & 0x80) != 0) && (local_22c == (int *)0x0)) {
                    pptVar21 = local_274;
                    piVar15 = piVar6;
                    pcVar7 = (code *)DecodePointer(PTR_FUN_10033584);
                    (*pcVar7)(piVar15,pptVar21);
                  }
                  if ((local_215 == 0x67) && ((uVar14 & 0x80) == 0)) {
                    pptVar21 = local_274;
                    piVar15 = piVar6;
                    pcVar7 = (code *)DecodePointer(PTR_FUN_10033580);
                    (*pcVar7)(piVar15,pptVar21);
                  }
                  if (*(char *)piVar6 == '-') {
                    local_21c = uVar14 | 0x140;
                    uVar5 = local_21c;
                    piVar6 = (int *)((int)piVar6 + 1);
                  }
LAB_10009800:
                  piVar15 = piVar6;
                  uVar14 = uVar5;
                  local_228 = (char *)_strlen((char *)piVar15);
                }
                else if (bVar12 == 0x43) {
                  if ((uVar14 & 0x830) == 0) {
                    uVar14 = uVar14 | 0x800;
                    local_21c = uVar14;
                  }
LAB_10009759:
                  if ((uVar14 & 0x810) == 0) {
                    local_210 = *(undefined *)local_220;
                    local_228 = (char *)0x1;
                    local_220 = local_220 + 1;
                  }
                  else {
                    WVar2 = *(WCHAR *)local_220;
                    local_220 = local_220 + 1;
                    iVar10 = FUN_10011eb0((int *)&local_228,(uint *)&local_210,0x200,WVar2);
                    if (iVar10 != 0) {
                      local_250 = 1;
                    }
                  }
                  piVar15 = (int *)&local_210;
                }
                else if ((bVar12 == 0x45) || (bVar12 == 0x47)) goto LAB_10009665;
              }
              else {
                if (bVar12 == 0x58) goto LAB_100099f4;
                if (bVar12 == 0x5a) {
                  piVar11 = *local_220;
                  local_220 = local_220 + 1;
                  uVar5 = uVar14;
                  piVar6 = (int *)PTR_s__null__10033538;
                  if ((piVar11 == (int *)0x0) ||
                     (piVar15 = (int *)piVar11[1], piVar15 == (int *)0x0)) goto LAB_10009800;
                  local_228 = (char *)(int)*(WCHAR *)piVar11;
                  if ((uVar14 & 0x800) == 0) {
                    local_23c = 0;
                  }
                  else {
                    local_23c = 1;
                    local_228 = (char *)((int)local_228 / 2);
                  }
                }
                else {
                  if (bVar12 == 0x61) goto LAB_10009678;
                  if (bVar12 == 99) goto LAB_10009759;
                }
              }
LAB_10009b7d:
              if (local_250 == 0) {
                if ((uVar14 & 0x40) != 0) {
                  if ((uVar14 & 0x100) == 0) {
                    if ((uVar14 & 1) == 0) {
                      if ((uVar14 & 2) == 0) goto LAB_10009bc4;
                      local_230 = 0x20;
                    }
                    else {
                      local_230 = 0x2b;
                    }
                  }
                  else {
                    local_230 = 0x2d;
                  }
                  local_238 = 1;
                }
LAB_10009bc4:
                pcVar16 = (char *)((int)local_244 + (-local_238 - (int)local_228));
                if ((uVar14 & 0xc) == 0) {
                  _write_multi_char(0x20,(int)pcVar16,local_234,&local_224);
                }
                FUN_10009e20(&local_230,local_238,local_234,&local_224,local_25c);
                if (((uVar14 & 8) != 0) && ((uVar14 & 4) == 0)) {
                  _write_multi_char(0x30,(int)pcVar16,local_234,&local_224);
                }
                if ((local_23c == 0) || (pcVar8 = local_228, piVar11 = piVar15, (int)local_228 < 1))
                {
                  FUN_10009e20((byte *)piVar15,(int)local_228,local_234,&local_224,local_25c);
                }
                else {
                  do {
                    local_240 = pcVar8 + -1;
                    iVar10 = FUN_10011eb0(&local_264,(uint *)(local_11 + 1),6,*(WCHAR *)piVar11);
                    if ((iVar10 != 0) || (local_264 == 0)) {
                      local_224 = -1;
                      break;
                    }
                    FUN_10009e20(local_11 + 1,local_264,local_234,&local_224,local_25c);
                    pcVar8 = local_240;
                    piVar11 = (int *)((int)piVar11 + 2);
                  } while (local_240 != (char *)0x0);
                }
                if ((-1 < local_224) && ((uVar14 & 4) != 0)) {
                  _write_multi_char(0x20,(int)pcVar16,local_234,&local_224);
                }
              }
            }
            else {
              if ('p' < (char)bVar12) {
                if (bVar12 == 0x73) {
LAB_100096e0:
                  piVar11 = (int *)0x7fffffff;
                  if (local_22c != (int *)0xffffffff) {
                    piVar11 = local_22c;
                  }
                  piVar6 = *local_220;
                  local_220 = local_220 + 1;
                  piVar15 = piVar6;
                  if ((uVar14 & 0x810) == 0) {
                    if (piVar6 == (int *)0x0) {
                      piVar6 = (int *)PTR_s__null__10033538;
                      piVar15 = (int *)PTR_s__null__10033538;
                    }
                    for (; (piVar11 != (int *)0x0 &&
                           (piVar11 = (int *)((int)piVar11 + -1), *(char *)piVar6 != '\0'));
                        piVar6 = (int *)((int)piVar6 + 1)) {
                    }
                    local_228 = (char *)((int)piVar6 - (int)piVar15);
                  }
                  else {
                    if (piVar6 == (int *)0x0) {
                      piVar15 = (int *)PTR_DAT_1003353c;
                    }
                    local_23c = 1;
                    for (piVar6 = piVar15;
                        (piVar11 != (int *)0x0 &&
                        (piVar11 = (int *)((int)piVar11 + -1), *(WCHAR *)piVar6 != L'\0'));
                        piVar6 = (int *)((int)piVar6 + 2)) {
                    }
                    local_228 = (char *)((int)piVar6 - (int)piVar15 >> 1);
                  }
                  goto LAB_10009b7d;
                }
                if (bVar12 == 0x75) goto LAB_1000989f;
                if (bVar12 != 0x78) goto LAB_10009b7d;
                local_258 = 0x27;
LAB_10009a14:
                local_228 = (char *)0x10;
                if ((char)uVar14 < '\0') {
                  local_22f = (char)local_258 + 'Q';
                  local_230 = 0x30;
                  local_238 = 2;
                }
                goto LAB_100098a9;
              }
              if (bVar12 == 0x70) {
                local_22c = (int *)&DAT_00000008;
LAB_100099f4:
                local_258 = 7;
                goto LAB_10009a14;
              }
              if ((char)bVar12 < 'e') goto LAB_10009b7d;
              if ((char)bVar12 < 'h') goto LAB_10009678;
              if (bVar12 == 0x69) goto LAB_10009896;
              if (bVar12 != 0x6e) {
                if (bVar12 != 0x6f) goto LAB_10009b7d;
                local_228 = (char *)0x8;
                if ((char)uVar14 < '\0') {
                  uVar14 = uVar14 | 0x200;
                  local_21c = uVar14;
                }
                goto LAB_100098a9;
              }
              piVar11 = *local_220;
              local_220 = local_220 + 1;
              bVar17 = FUN_10011d77();
              if (CONCAT31(extraout_var,bVar17) == 0) goto LAB_10009d77;
              if ((uVar14 & 0x20) == 0) {
                *piVar11 = local_224;
              }
              else {
                *(WCHAR *)piVar11 = (WCHAR)local_224;
              }
              local_250 = 1;
            }
            pbVar9 = local_214;
            iVar10 = local_224;
            if (local_254 != (int *)0x0) {
              FUN_10001730(local_254);
              local_254 = (int *)0x0;
              pbVar9 = local_214;
              iVar10 = local_224;
            }
          }
          bVar12 = *pbVar9;
          local_24c = local_24c & 0xffffff00 | (uint)bVar12;
          pbVar3 = pbVar9;
        }
        goto LAB_10009d53;
      }
    }
  }
LAB_10009d77:
  piVar15 = __errno();
  *piVar15 = 0x16;
  FUN_100090a2();
  bVar12 = extraout_DL;
LAB_10009d53:
  if (local_268 != '\0') {
    *(uint *)(local_26c + 0x70) = *(uint *)(local_26c + 0x70) & 0xfffffffd;
  }
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,bVar12,in_stack_fffffd7c);
  return;
}



// Library Function - Single Match
//  _write_char
// 
// Library: Visual Studio 2019 Release

void __cdecl _write_char(byte param_1,FILE *param_2,int *param_3)

{
  int *piVar1;
  uint uVar2;
  
  if (((*(byte *)&param_2->_flag & 0x40) == 0) || (param_2->_base != (char *)0x0)) {
    piVar1 = &param_2->_cnt;
    *piVar1 = *piVar1 + -1;
    if (*piVar1 < 0) {
      uVar2 = FUN_100090dd((int)(char)param_1,param_2);
    }
    else {
      *param_2->_ptr = param_1;
      param_2->_ptr = param_2->_ptr + 1;
      uVar2 = (uint)param_1;
    }
    if (uVar2 == 0xffffffff) {
      *param_3 = -1;
      return;
    }
  }
  *param_3 = *param_3 + 1;
  return;
}



// Library Function - Single Match
//  _write_multi_char
// 
// Library: Visual Studio 2019 Release

void __cdecl _write_multi_char(byte param_1,int param_2,FILE *param_3,int *param_4)

{
  if (0 < param_2) {
    do {
      param_2 = param_2 + -1;
      _write_char(param_1,param_3,param_4);
      if (*param_4 == -1) {
        return;
      }
    } while (0 < param_2);
  }
  return;
}



void __cdecl FUN_10009e20(byte *param_1,int param_2,FILE *param_3,int *param_4,int *param_5)

{
  int iVar1;
  
  iVar1 = *param_5;
  if (((*(byte *)&param_3->_flag & 0x40) == 0) || (param_3->_base != (char *)0x0)) {
    *param_5 = 0;
    if (0 < param_2) {
      do {
        param_2 = param_2 + -1;
        _write_char(*param_1,param_3,param_4);
        param_1 = param_1 + 1;
        if (*param_4 == -1) {
          if (*param_5 != 0x2a) break;
          _write_char(0x3f,param_3,param_4);
        }
      } while (0 < param_2);
      if (*param_5 != 0) {
        return;
      }
    }
    *param_5 = iVar1;
  }
  else {
    *param_4 = *param_4 + param_2;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_10009e98(void)

{
  int *piVar1;
  uint *puVar2;
  int iVar3;
  BOOL BVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  
  _DAT_10045898 = 0;
  DAT_10033540 = DAT_10033540 | 1;
  BVar4 = IsProcessorFeaturePresent(10);
  uVar5 = DAT_10033540;
  if (BVar4 != 0) {
    _DAT_10045898 = 1;
    if (true) {
      piVar1 = (int *)cpuid_basic_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Version_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_cache_tlb_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_serial_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Deterministic_Cache_Parameters_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_MONITOR_MWAIT_Features_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Thermal_Power_Management_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Extended_Feature_Enumeration_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Direct_Cache_Access_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Architectural_Performance_Monitoring_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Extended_Topology_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Processor_Extended_States_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Quality_of_Service_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_brand_part1_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_brand_part2_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_brand_part3_info(0);
    }
    else {
      piVar1 = (int *)cpuid(0);
    }
    if (false) {
      puVar2 = (uint *)cpuid_basic_info(0);
    }
    else if (true) {
      puVar2 = (uint *)cpuid_Version_info(1);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_cache_tlb_info(2);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_serial_info(3);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Deterministic_Cache_Parameters_info(4);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_MONITOR_MWAIT_Features_info(5);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Thermal_Power_Management_info(6);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Extended_Feature_Enumeration_info(7);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Direct_Cache_Access_info(9);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Architectural_Performance_Monitoring_info(10);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Extended_Topology_info(0xb);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Processor_Extended_States_info(0xd);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Quality_of_Service_info(0xf);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_brand_part1_info(0x80000002);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_brand_part2_info(0x80000003);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_brand_part3_info(0x80000004);
    }
    else {
      puVar2 = (uint *)cpuid(1);
    }
    uVar6 = puVar2[3];
    if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&
       (((((uVar5 = *puVar2 & 0xfff3ff0, uVar5 == 0x106c0 || (uVar5 == 0x20660)) ||
          (uVar5 == 0x20670)) || ((uVar5 == 0x30650 || (uVar5 == 0x30660)))) || (uVar5 == 0x30670)))
       ) {
      DAT_1004589c = DAT_1004589c | 1;
    }
    if (*piVar1 < 7) {
      uVar7 = 0;
    }
    else {
      if (false) {
        iVar3 = cpuid_basic_info(0);
      }
      else if (false) {
        iVar3 = cpuid_Version_info(1);
      }
      else if (false) {
        iVar3 = cpuid_cache_tlb_info(2);
      }
      else if (false) {
        iVar3 = cpuid_serial_info(3);
      }
      else if (false) {
        iVar3 = cpuid_Deterministic_Cache_Parameters_info(4);
      }
      else if (false) {
        iVar3 = cpuid_MONITOR_MWAIT_Features_info(5);
      }
      else if (false) {
        iVar3 = cpuid_Thermal_Power_Management_info(6);
      }
      else if (true) {
        iVar3 = cpuid_Extended_Feature_Enumeration_info(7);
      }
      else if (false) {
        iVar3 = cpuid_Direct_Cache_Access_info(9);
      }
      else if (false) {
        iVar3 = cpuid_Architectural_Performance_Monitoring_info(10);
      }
      else if (false) {
        iVar3 = cpuid_Extended_Topology_info(0xb);
      }
      else if (false) {
        iVar3 = cpuid_Processor_Extended_States_info(0xd);
      }
      else if (false) {
        iVar3 = cpuid_Quality_of_Service_info(0xf);
      }
      else if (false) {
        iVar3 = cpuid_brand_part1_info(0x80000002);
      }
      else if (false) {
        iVar3 = cpuid_brand_part2_info(0x80000003);
      }
      else if (false) {
        iVar3 = cpuid_brand_part3_info(0x80000004);
      }
      else {
        iVar3 = cpuid(7);
      }
      uVar7 = *(uint *)(iVar3 + 4);
      if ((uVar7 & 0x200) != 0) {
        DAT_1004589c = DAT_1004589c | 2;
      }
    }
    uVar5 = DAT_10033540 | 2;
    if ((uVar6 & 0x100000) != 0) {
      _DAT_10045898 = 2;
      uVar5 = DAT_10033540 | 6;
      if (((uVar6 & 0x8000000) != 0) && ((uVar6 & 0x10000000) != 0)) {
        _DAT_10045898 = 3;
        uVar5 = DAT_10033540 | 0xe;
        if ((uVar7 & 0x20) != 0) {
          _DAT_10045898 = 5;
          uVar5 = DAT_10033540 | 0x2e;
        }
      }
    }
  }
  DAT_10033540 = uVar5;
  return 0;
}



void __cdecl FUN_1000a0d9(undefined4 param_1)

{
  BOOL BVar1;
  FARPROC pFVar2;
  HMODULE local_8;
  
  BVar1 = GetModuleHandleExW(0,L"mscoree.dll",&local_8);
  if (BVar1 != 0) {
    pFVar2 = GetProcAddress(local_8,"CorExitProcess");
    if (pFVar2 != (FARPROC)0x0) {
      (*pFVar2)(param_1);
    }
  }
  return;
}



// Library Function - Single Match
//  ___crtExitProcess
// 
// Library: Visual Studio 2012 Release

void __cdecl ___crtExitProcess(int param_1)

{
  FUN_1000a0d9(param_1);
                    // WARNING: Subroutine does not return
  ExitProcess(param_1);
}



void FUN_1000a123(void)

{
  int iVar1;
  PVOID pvVar2;
  int *piVar3;
  
  pvVar2 = DecodePointer(DAT_100476f4);
  for (piVar3 = DAT_100458b4; (piVar3 != (int *)0x0 && (*piVar3 != 0)); piVar3 = piVar3 + 1) {
    FUN_10001730(*piVar3);
  }
  FUN_10001730(DAT_100458b4);
  DAT_100458b4 = (int *)0x0;
  for (piVar3 = DAT_100458b0; (piVar3 != (int *)0x0 && (*piVar3 != 0)); piVar3 = piVar3 + 1) {
    FUN_10001730(*piVar3);
  }
  FUN_10001730(DAT_100458b0);
  DAT_100458b0 = (int *)0x0;
  FUN_10001730(DAT_100458ac);
  FUN_10001730(DAT_100458a8);
  DAT_100458ac = 0;
  DAT_100458a8 = 0;
  if ((pvVar2 != (PVOID)0xffffffff) && (DAT_100476f4 != (PVOID)0x0)) {
    FUN_10001730(pvVar2);
  }
  DAT_100476f4 = EncodePointer((PVOID)0xffffffff);
  if (DAT_100465d4 != 0) {
    FUN_10001730(DAT_100465d4);
    DAT_100465d4 = 0;
  }
  if (DAT_100465d8 != 0) {
    FUN_10001730(DAT_100465d8);
    DAT_100465d8 = 0;
  }
  LOCK();
  iVar1 = *(int *)PTR_DAT_10033a3c;
  *(int *)PTR_DAT_10033a3c = *(int *)PTR_DAT_10033a3c + -1;
  if ((iVar1 == 1) && ((undefined4 *)PTR_DAT_10033a3c != &DAT_10033818)) {
    FUN_10001730(PTR_DAT_10033a3c);
    PTR_DAT_10033a3c = (undefined *)&DAT_10033818;
  }
  return;
}



// Library Function - Single Match
//  __amsg_exit
// 
// Library: Visual Studio 2012 Release

void __cdecl __amsg_exit(int param_1)

{
  code *pcVar1;
  
  __FF_MSGBANNER();
  FUN_100120a8(param_1);
  __exit(0xff);
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



// Library Function - Single Match
//  __cexit
// 
// Library: Visual Studio 2012 Release

void __cdecl __cexit(void)

{
  _doexit(0,0,1);
  return;
}



int __cdecl FUN_1000a25b(int param_1)

{
  BOOL BVar1;
  int iVar2;
  
  if (true) {
    BVar1 = __IsNonwritableInCurrentImage((PBYTE)&PTR___fpmath_1001af50);
    if (BVar1 != 0) {
      __fpmath(param_1);
    }
  }
  FUN_1000b3c2();
  iVar2 = __initterm_e((undefined **)&DAT_1001915c,(undefined **)&DAT_10019174);
  if (iVar2 == 0) {
    FUN_100062eb(FUN_1000c462);
    FUN_1000a32b((undefined **)&DAT_10019120,(undefined **)&DAT_10019158);
    if (DAT_100476ec != (code *)0x0) {
      BVar1 = __IsNonwritableInCurrentImage((PBYTE)&DAT_100476ec);
      if (BVar1 != 0) {
        (*DAT_100476ec)(0,2,0);
      }
    }
    iVar2 = 0;
  }
  return iVar2;
}



// Library Function - Single Match
//  __exit
// 
// Library: Visual Studio 2012 Release

void __cdecl __exit(int _Code)

{
  _doexit(_Code,1,0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_1000a2f3(void)

{
  PVOID pvVar1;
  HMODULE hModule;
  FARPROC pFVar2;
  
  pvVar1 = EncodePointer((PVOID)0x0);
  FUN_100123f6(pvVar1);
  FUN_1000906a(pvVar1);
  FUN_10008f38(pvVar1);
  FUN_10010d35(pvVar1);
  FUN_100123e5();
  FUN_10012403(pvVar1);
  hModule = GetModuleHandleW(L"kernel32.dll");
  pFVar2 = GetProcAddress(hModule,"FlsAlloc");
  DAT_10047660 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"FlsFree");
  DAT_10047664 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"FlsGetValue");
  DAT_10047668 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"FlsSetValue");
  DAT_1004766c = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"InitializeCriticalSectionEx");
  DAT_10047670 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"CreateEventExW");
  _DAT_10047674 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"CreateSemaphoreExW");
  _DAT_10047678 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"SetThreadStackGuarantee");
  _DAT_1004767c = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"CreateThreadpoolTimer");
  _DAT_10047680 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"SetThreadpoolTimer");
  _DAT_10047684 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"WaitForThreadpoolTimerCallbacks");
  _DAT_10047688 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"CloseThreadpoolTimer");
  _DAT_1004768c = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"CreateThreadpoolWait");
  _DAT_10047690 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"SetThreadpoolWait");
  _DAT_10047694 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"CloseThreadpoolWait");
  _DAT_10047698 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"FlushProcessWriteBuffers");
  _DAT_1004769c = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"FreeLibraryWhenCallbackReturns");
  _DAT_100476a0 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"GetCurrentProcessorNumber");
  _DAT_100476a4 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"GetLogicalProcessorInformation");
  _DAT_100476a8 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"CreateSymbolicLinkW");
  _DAT_100476ac = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"SetDefaultDllDirectories");
  _DAT_100476b0 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"EnumSystemLocalesEx");
  _DAT_100476b8 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"CompareStringEx");
  _DAT_100476b4 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"GetDateFormatEx");
  _DAT_100476bc = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"GetLocaleInfoEx");
  _DAT_100476c0 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"GetTimeFormatEx");
  _DAT_100476c4 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"GetUserDefaultLocaleName");
  _DAT_100476c8 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"IsValidLocaleName");
  _DAT_100476cc = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"LCMapStringEx");
  DAT_100476d0 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"GetCurrentPackageId");
  DAT_100476d4 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"GetTickCount64");
  _DAT_100476d8 = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"GetFileInformationByHandleExW");
  _DAT_100476dc = (uint)pFVar2 ^ DAT_1003352c;
  pFVar2 = GetProcAddress(hModule,"SetFileInformationByHandleW");
  _DAT_100476e0 = (uint)pFVar2 ^ DAT_1003352c;
  return;
}



void __cdecl FUN_1000a32b(undefined **param_1,undefined **param_2)

{
  uint uVar1;
  uint uVar2;
  
  uVar1 = 0;
  uVar2 = ~-(uint)(param_2 < param_1) & (uint)((int)param_2 + (3 - (int)param_1)) >> 2;
  if (uVar2 != 0) {
    do {
      if ((code *)*param_1 != (code *)0x0) {
        (*(code *)*param_1)();
      }
      param_1 = (code **)param_1 + 1;
      uVar1 = uVar1 + 1;
    } while (uVar1 < uVar2);
  }
  return;
}



// Library Function - Single Match
//  __initterm_e
// 
// Libraries: Visual Studio 2008 Release, Visual Studio 2010 Release, Visual Studio 2012 Release

void __cdecl __initterm_e(undefined **param_1,undefined **param_2)

{
  int iVar1;
  
  iVar1 = 0;
  while ((param_1 < param_2 && (iVar1 == 0))) {
    if ((code *)*param_1 != (code *)0x0) {
      iVar1 = (*(code *)*param_1)();
    }
    param_1 = (code **)param_1 + 1;
  }
  return;
}



void FUN_1000a383(void)

{
  __lock(8);
  return;
}



void FUN_1000a38c(void)

{
  FUN_10012036(8);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _doexit
// 
// Library: Visual Studio 2012 Release

void __cdecl _doexit(int param_1,int param_2,int param_3)

{
  PVOID *ppvVar1;
  PVOID pvVar2;
  code *pcVar3;
  PVOID *ppvVar4;
  PVOID *ppvVar5;
  PVOID *ppvVar6;
  PVOID *local_20;
  
  __lock(8);
  pcVar3 = DecodePointer_exref;
  if (_DAT_100458a0 != 1) {
    _DAT_100458c8 = 1;
    DAT_100458c4 = (undefined)param_3;
    if (param_2 == 0) {
      local_20 = (PVOID *)DecodePointer(DAT_100476f4);
      if (local_20 != (PVOID *)0x0) {
        ppvVar1 = (PVOID *)DecodePointer(DAT_100476f0);
        ppvVar6 = ppvVar1;
        while (ppvVar1 = ppvVar1 + -1, local_20 <= ppvVar1) {
          pvVar2 = EncodePointer((PVOID)0x0);
          if (*ppvVar1 != pvVar2) {
            if (ppvVar1 < local_20) break;
            pcVar3 = (code *)(*pcVar3)(*ppvVar1);
            pvVar2 = EncodePointer((PVOID)0x0);
            *ppvVar1 = pvVar2;
            (*pcVar3)();
            pcVar3 = DecodePointer_exref;
            ppvVar4 = (PVOID *)DecodePointer(DAT_100476f4);
            ppvVar5 = (PVOID *)DecodePointer(DAT_100476f0);
            if ((local_20 != ppvVar4) || (ppvVar6 != ppvVar5)) {
              ppvVar1 = ppvVar5;
              local_20 = ppvVar4;
              ppvVar6 = ppvVar5;
            }
          }
        }
      }
      FUN_1000a32b((undefined **)&DAT_10019178,(undefined **)&DAT_10019188);
    }
    FUN_1000a32b((undefined **)&DAT_1001918c,(undefined **)&DAT_10019190);
  }
  FUN_1000a4af();
  if (param_3 != 0) {
    return;
  }
  _DAT_100458a0 = 1;
  FUN_10012036(8);
  ___crtExitProcess(param_1);
  if (false) {
    FUN_10012036(8);
  }
  return;
}



void FUN_1000a4af(void)

{
  int unaff_EBP;
  
  if (*(int *)(unaff_EBP + 0x10) != 0) {
    FUN_10012036(8);
  }
  return;
}



// WARNING: This is an inlined function
// WARNING: Unable to track spacebase fully for stack
// WARNING: Variable defined which should be unmapped: param_2
// Library Function - Single Match
//  __SEH_prolog4
// 
// Library: Visual Studio

void __cdecl __SEH_prolog4(undefined4 param_1,int param_2)

{
  int iVar1;
  undefined4 unaff_EBX;
  undefined4 unaff_ESI;
  undefined4 unaff_EDI;
  int *in_FS_OFFSET;
  undefined4 unaff_retaddr;
  uint auStack28 [5];
  undefined local_8 [8];
  
  iVar1 = -param_2;
  *(undefined4 *)((int)auStack28 + iVar1 + 0x10) = unaff_EBX;
  *(undefined4 *)((int)auStack28 + iVar1 + 0xc) = unaff_ESI;
  *(undefined4 *)((int)auStack28 + iVar1 + 8) = unaff_EDI;
  *(uint *)((int)auStack28 + iVar1 + 4) = DAT_1003352c ^ (uint)&param_2;
  *(undefined4 *)((int)auStack28 + iVar1) = unaff_retaddr;
  *in_FS_OFFSET = (int)local_8;
  return;
}



// WARNING: This is an inlined function
// Library Function - Single Match
//  __SEH_epilog4
// 
// Library: Visual Studio

void __SEH_epilog4(void)

{
  undefined4 *unaff_EBP;
  undefined4 *in_FS_OFFSET;
  undefined4 unaff_retaddr;
  
  *in_FS_OFFSET = unaff_EBP[-4];
  *unaff_EBP = unaff_retaddr;
  return;
}



undefined4 __cdecl FUN_1000a530(PEXCEPTION_RECORD param_1,PVOID param_2,undefined4 param_3)

{
  int iVar1;
  uint uVar2;
  code *pcVar3;
  BOOL BVar4;
  undefined4 uVar5;
  undefined in_DL;
  undefined extraout_DL;
  undefined uVar6;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined4 extraout_EDX;
  uint extraout_EDX_00;
  uint uVar7;
  undefined4 unaff_EDI;
  int *piVar8;
  undefined8 uVar9;
  undefined uVar10;
  PEXCEPTION_RECORD local_1c;
  undefined4 local_18;
  uint *local_14;
  undefined4 local_10;
  uint local_c;
  char local_5;
  
  local_5 = '\0';
  iVar1 = (int)param_2 + 0x10;
  piVar8 = (int *)(*(uint *)((int)param_2 + 8) ^ DAT_1003352c);
  local_10 = 1;
  if (*piVar8 != -2) {
    FUN_10008ec7(piVar8[1] + iVar1 ^ *(uint *)(*piVar8 + iVar1),in_DL,(char)unaff_EDI);
    in_DL = extraout_DL;
  }
  FUN_10008ec7(piVar8[3] + iVar1 ^ *(uint *)(piVar8[2] + iVar1),in_DL,(char)unaff_EDI);
  uVar10 = (undefined)unaff_EDI;
  if ((*(byte *)&param_1->ExceptionFlags & 0x66) == 0) {
    local_1c = param_1;
    local_18 = param_3;
    *(PEXCEPTION_RECORD **)((int)param_2 + -4) = &local_1c;
    local_c = *(uint *)((int)param_2 + 0xc);
    uVar5 = extraout_EDX;
    if (*(uint *)((int)param_2 + 0xc) == 0xfffffffe) {
      return local_10;
    }
    do {
      local_14 = (uint *)(piVar8 + local_c * 3 + 4);
      uVar2 = *local_14;
      if ((undefined *)piVar8[local_c * 3 + 5] != (undefined *)0x0) {
        uVar9 = __EH4_CallFilterFunc_8((undefined *)piVar8[local_c * 3 + 5]);
        uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);
        uVar10 = (undefined)unaff_EDI;
        uVar6 = (undefined)((ulonglong)uVar9 >> 0x20);
        local_5 = '\x01';
        if ((int)uVar9 < 0) {
          local_10 = 0;
          goto LAB_1000a66b;
        }
        if (0 < (int)uVar9) {
          if (((param_1->ExceptionCode == 0xe06d7363) && (DAT_100476e8 != (code *)0x0)) &&
             (BVar4 = __IsNonwritableInCurrentImage((PBYTE)&DAT_100476e8), BVar4 != 0)) {
            (*DAT_100476e8)(param_1,1);
          }
          __EH4_GlobalUnwind2_8(param_2,param_1);
          uVar7 = local_c;
          if (*(uint *)((int)param_2 + 0xc) != local_c) {
            __EH4_LocalUnwind_16((int)param_2,local_c,iVar1,&DAT_1003352c);
            uVar7 = extraout_EDX_00;
          }
          uVar6 = (undefined)uVar7;
          *(uint *)((int)param_2 + 0xc) = uVar2;
          if (*piVar8 != -2) {
            FUN_10008ec7(piVar8[1] + iVar1 ^ *(uint *)(*piVar8 + iVar1),uVar6,uVar10);
            uVar6 = extraout_DL_01;
          }
          FUN_10008ec7(piVar8[3] + iVar1 ^ *(uint *)(piVar8[2] + iVar1),uVar6,uVar10);
          __EH4_TransferToHandler_8((undefined *)local_14[2]);
          pcVar3 = (code *)swi(3);
          uVar5 = (*pcVar3)();
          return uVar5;
        }
      }
      uVar10 = (undefined)unaff_EDI;
      uVar6 = (undefined)uVar5;
      local_c = uVar2;
    } while (uVar2 != 0xfffffffe);
    if (local_5 == '\0') {
      return local_10;
    }
  }
  else {
    if (*(int *)((int)param_2 + 0xc) == -2) {
      return local_10;
    }
    __EH4_LocalUnwind_16((int)param_2,0xfffffffe,iVar1,&DAT_1003352c);
    uVar6 = extraout_DL_00;
  }
LAB_1000a66b:
  if (*piVar8 != -2) {
    FUN_10008ec7(piVar8[1] + iVar1 ^ *(uint *)(*piVar8 + iVar1),uVar6,uVar10);
  }
  FUN_10008ec7(piVar8[3] + iVar1 ^ *(uint *)(piVar8[2] + iVar1),(char)piVar8[2],uVar10);
  return local_10;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined8 __fastcall
FUN_1000a6d0(undefined4 param_1,undefined4 param_2,int param_3,undefined4 param_4)

{
  ushort uVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint extraout_EDX;
  int iVar5;
  bool bVar6;
  uint in_MXCSR;
  ushort in_FPUControlWord;
  ushort in_FPUStatusWord;
  unkbyte10 extraout_ST0;
  float10 fVar7;
  undefined4 unaff_retaddr;
  uint uVar8;
  
  bVar6 = _DAT_1004663c == 0;
  if (!bVar6) {
    bVar6 = (in_MXCSR & 0x7f80) == 0x1f80;
    if (bVar6) {
      bVar6 = (in_FPUControlWord & 0x7f) == 0x7f;
    }
    if (bVar6) {
      uVar1 = ((ushort)((uint)param_4 >> 0x10) & 0x7fff) + 0xc7e0;
      bVar6 = uVar1 == 0x8a8;
      if (uVar1 < 0x8a9) {
        iVar5 = ((int)ROUND((double)CONCAT44(param_4,param_3) * 10.1859163578813) + 0x72900U & 0x1f)
                * 0xb0;
        return CONCAT44(iVar5,&DAT_1002dce0 + iVar5);
      }
      if ((short)uVar1 < 0x8a9) {
        return CONCAT44(param_2,(uint)(uVar1 >> 4));
      }
    }
  }
  uVar2 = __fload_withFB(param_1,(int)&param_3);
  uVar8 = extraout_EDX & 0xffff0000 | (uint)in_FPUControlWord;
  if (bVar6) {
    if (((uVar2 & 0xfffff) == 0) && (param_3 == 0)) {
      uVar2 = 1;
    }
    else {
      uVar2 = __convertTOStoQNaN();
    }
    if (_DAT_10045880 == 0) {
      __startOneArgErrorHandling(&DAT_10033550,0x20,in_FPUControlWord,unaff_retaddr,param_3,param_4)
      ;
      return CONCAT44(uVar8,uVar2);
    }
  }
  else {
    fptan(extraout_ST0);
    fVar7 = (float10)1;
    uVar2 = uVar2 & 0xffff0000 | (uint)in_FPUStatusWord;
    if ((in_FPUStatusWord & 0x400) != 0) {
      do {
        fVar7 = fVar7 - (fVar7 / _DAT_1002f38a) * _DAT_1002f38a;
        uVar2 = uVar2 & 0xffff0000 | (uint)in_FPUStatusWord;
      } while ((in_FPUStatusWord & 0x400) != 0);
      fptan(fVar7);
    }
    if (_DAT_10045880 == 0) {
      uVar3 = uVar2 & 0xffff0000 | (uint)in_FPUControlWord;
      if (in_FPUControlWord != 0x27f) {
        if (((in_FPUControlWord & 0x20) != 0) &&
           (uVar3 = uVar2 & 0xffff0000 | (uint)in_FPUStatusWord, (in_FPUStatusWord & 0x20) != 0)) {
          uVar4 = 8;
          __startOneArgErrorHandling
                    (&DAT_10033550,0x20,in_FPUControlWord,unaff_retaddr,param_3,param_4);
          return CONCAT44(uVar8,uVar4);
        }
        uVar3 = uVar3 & 0xffff0020;
      }
      return CONCAT44(uVar8,uVar3);
    }
  }
  return CONCAT44(uVar8,uVar2);
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// Library Function - Single Match
//  private: static void __cdecl type_info::_Type_info_dtor(class type_info *)
// 
// Library: Visual Studio 2012 Release

void __cdecl type_info::_Type_info_dtor(type_info *param_1)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  
  __lock(0xe);
  piVar1 = DAT_100458d8;
  if (*(int *)(param_1 + 4) != 0) {
    piVar2 = (int *)&DAT_100458d4;
    do {
      piVar3 = piVar2;
      if (DAT_100458d8 == (int *)0x0) goto LAB_1000a8d1;
      piVar2 = DAT_100458d8;
    } while (*DAT_100458d8 != *(int *)(param_1 + 4));
    piVar3[1] = DAT_100458d8[1];
    FUN_10001730(piVar1);
LAB_1000a8d1:
    FUN_10001730(*(undefined4 *)(param_1 + 4));
    *(undefined4 *)(param_1 + 4) = 0;
  }
  FUN_1000a8f4();
  return;
}



void FUN_1000a8f4(void)

{
  FUN_10012036(0xe);
  return;
}



// Library Function - Single Match
//  __cfltcvt
// 
// Libraries: Visual Studio 2005 Release, Visual Studio 2008 Release, Visual Studio 2010 Release,
// Visual Studio 2012 Release

errno_t __cdecl
__cfltcvt(double *arg,char *buffer,size_t sizeInBytes,int format,int precision,int caps)

{
  errno_t eVar1;
  
  eVar1 = __cfltcvt_l(arg,buffer,sizeInBytes,format,precision,caps,(_locale_t)0x0);
  return eVar1;
}



// Library Function - Single Match
//  __cfltcvt_l
// 
// Libraries: Visual Studio 2005 Release, Visual Studio 2008 Release, Visual Studio 2010 Release,
// Visual Studio 2012 Release

errno_t __cdecl
__cfltcvt_l(double *arg,char *buffer,size_t sizeInBytes,int format,int precision,int caps,
           _locale_t plocinfo)

{
  errno_t eVar1;
  
  if ((format == 0x65) || (format == 0x45)) {
    eVar1 = FUN_1000ae6f((undefined4 *)arg,buffer,sizeInBytes,precision,caps,&plocinfo->locinfo);
  }
  else {
    if (format == 0x66) {
      eVar1 = FUN_1000b029((undefined4 *)arg,buffer,sizeInBytes,precision,&plocinfo->locinfo);
      return eVar1;
    }
    if ((format == 0x61) || (format == 0x41)) {
      eVar1 = FUN_1000a9a4((uint *)arg,buffer,sizeInBytes,precision,caps,&plocinfo->locinfo);
    }
    else {
      eVar1 = FUN_1000b0ea((undefined4 *)arg,buffer,sizeInBytes,precision,caps,&plocinfo->locinfo);
    }
  }
  return eVar1;
}



int __cdecl
FUN_1000a9a4(uint *param_1,undefined *param_2,uint param_3,uint param_4,int param_5,
            pthreadlocinfo *param_6)

{
  uint *puVar1;
  int *piVar2;
  uint uVar3;
  char *pcVar4;
  uint *puVar5;
  uint uVar6;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint uVar7;
  uint *puVar8;
  char *pcVar9;
  bool bVar10;
  ulonglong uVar11;
  undefined8 uVar12;
  int iVar13;
  int local_30 [2];
  int local_28;
  char local_24;
  uint local_1c;
  uint local_18;
  int local_14;
  uint *local_10;
  uint local_c;
  int local_8;
  
  local_c = 0x3ff;
  local_8 = 0x30;
  FUN_10008755(local_30,param_6);
  if ((int)param_4 < 0) {
    param_4 = 0;
  }
  if ((param_2 == (undefined *)0x0) || (param_3 == 0)) {
    piVar2 = __errno();
    iVar13 = 0x16;
  }
  else {
    *param_2 = 0;
    if (param_4 + 0xb < param_3) {
      local_18 = *param_1;
      if (((param_1[1] >> 0x14 & 0x7ff) == 0x7ff) && (true)) {
        uVar3 = 0xffffffff;
        if (param_3 != 0xffffffff) {
          uVar3 = param_3 - 2;
        }
        iVar13 = FUN_1000ad00(param_1,param_2 + 2,uVar3,param_4,0);
        if (iVar13 == 0) {
          if (param_2[2] == '-') {
            *param_2 = 0x2d;
            param_2 = param_2 + 1;
          }
          *param_2 = 0x30;
          param_2[1] = ((param_5 == 0) - 1U & 0xe0) + 0x78;
          pcVar4 = _strrchr(param_2 + 2,0x65);
          if (pcVar4 != (char *)0x0) {
            *pcVar4 = ((param_5 == 0) - 1U & 0xe0) + 0x70;
            pcVar4[3] = '\0';
          }
          iVar13 = 0;
        }
        else {
          *param_2 = 0;
        }
        goto LAB_1000acea;
      }
      if ((param_1[1] & 0x80000000) != 0) {
        *param_2 = 0x2d;
        param_2 = param_2 + 1;
      }
      *param_2 = 0x30;
      param_2[1] = ((param_5 == 0) - 1U & 0xe0) + 0x78;
      iVar13 = (-(uint)(param_5 != 0) & 0xffffffe0) + 0x27;
      if ((param_1[1] & 0x7ff00000) == 0) {
        param_2[2] = 0x30;
        if ((*param_1 | param_1[1] & 0xfffff) == 0) {
          local_c = 0;
        }
        else {
          local_c = 0x3fe;
        }
      }
      else {
        param_2[2] = 0x31;
      }
      local_10 = (uint *)(param_2 + 3);
      puVar8 = (uint *)(param_2 + 4);
      if (param_4 == 0) {
        *(char *)local_10 = '\0';
      }
      else {
        *(char *)local_10 = ***(char ***)(local_30[0] + 0x84);
      }
      local_1c = param_1[1] & 0xfffff;
      local_14 = iVar13;
      if ((local_1c != 0) || (*param_1 != 0)) {
        param_2 = (undefined *)0xf0000;
        do {
          if ((int)param_4 < 1) break;
          uVar11 = __aullshr((byte)local_8,param_1[1] & (uint)param_2);
          uVar3 = (uint)(ushort)((short)uVar11 + 0x30);
          if (0x39 < uVar3) {
            uVar3 = uVar3 + iVar13;
          }
          *(char *)puVar8 = (char)uVar3;
          puVar8 = (uint *)((int)puVar8 + 1);
          param_2 = (undefined *)((uint)param_2 >> 4);
          local_8 = local_8 + -4;
          param_4 = param_4 - 1;
        } while (-1 < (short)local_8);
        if ((-1 < (short)local_8) &&
           (uVar11 = __aullshr((byte)local_8,param_1[1] & (uint)param_2), puVar1 = puVar8,
           8 < (ushort)uVar11)) {
          while( true ) {
            puVar5 = (uint *)((int)puVar1 + -1);
            if ((*(char *)puVar5 != 'f') && (*(char *)puVar5 != 'F')) break;
            *(char *)puVar5 = '0';
            puVar1 = puVar5;
          }
          if (puVar5 == local_10) {
            *(char *)((int)puVar1 + -2) = *(char *)((int)puVar1 + -2) + '\x01';
          }
          else if (*(char *)puVar5 == '9') {
            *(char *)puVar5 = (char)local_14 + ':';
          }
          else {
            *(char *)puVar5 = *(char *)puVar5 + '\x01';
          }
        }
      }
      if (0 < (int)param_4) {
        FUN_10006130(puVar8,0x30,param_4);
        puVar8 = (uint *)((int)puVar8 + param_4);
      }
      if (*(char *)local_10 == '\0') {
        puVar8 = local_10;
      }
      *(byte *)puVar8 = ((param_5 == 0) - 1U & 0xe0) + 0x70;
      uVar11 = __aullshr(0x34,param_1[1]);
      uVar3 = (uint)(uVar11 & 0x7ff);
      uVar6 = uVar3 - local_c;
      uVar3 = (uint)(uVar3 < local_c);
      uVar7 = -uVar3;
      if ((uVar3 != 0) || ((uVar7 == 0 || uVar3 != 0 && (false)))) {
        *(char *)((int)puVar8 + 1) = '-';
        bVar10 = uVar6 != 0;
        uVar6 = -uVar6;
        uVar7 = -(uVar7 + bVar10);
      }
      else {
        *(char *)((int)puVar8 + 1) = '+';
      }
      pcVar9 = (char *)((int)puVar8 + 2);
      *pcVar9 = '0';
      pcVar4 = pcVar9;
      if (-1 < (int)uVar7) {
        if (((int)uVar7 < 1) && (uVar6 < 1000)) {
LAB_1000ac9b:
          if (((int)uVar7 < 0) || (((int)uVar7 < 1 && (uVar6 < 100)))) goto LAB_1000acba;
        }
        else {
          uVar12 = __alldvrm(uVar6,uVar7,1000,0);
          local_1c = (uint)((ulonglong)uVar12 >> 0x20);
          *pcVar9 = (char)uVar12 + '0';
          pcVar4 = (char *)((int)puVar8 + 3);
          uVar6 = extraout_ECX;
          if (pcVar4 == pcVar9) goto LAB_1000ac9b;
        }
        uVar12 = __alldvrm(uVar6,uVar7,100,0);
        local_1c = (uint)((ulonglong)uVar12 >> 0x20);
        *pcVar4 = (char)uVar12 + '0';
        pcVar4 = pcVar4 + 1;
        uVar6 = extraout_ECX_00;
      }
LAB_1000acba:
      if ((pcVar4 != pcVar9) || ((-1 < (int)uVar7 && ((0 < (int)uVar7 || (9 < uVar6)))))) {
        uVar12 = __alldvrm(uVar6,uVar7,10,0);
        *pcVar4 = (char)uVar12 + '0';
        pcVar4 = pcVar4 + 1;
        uVar6 = extraout_ECX_01;
      }
      iVar13 = 0;
      *pcVar4 = (char)uVar6 + '0';
      pcVar4[1] = '\0';
      goto LAB_1000acea;
    }
    piVar2 = __errno();
    iVar13 = 0x22;
  }
  *piVar2 = iVar13;
  FUN_100090a2();
LAB_1000acea:
  if (local_24 != '\0') {
    *(uint *)(local_28 + 0x70) = *(uint *)(local_28 + 0x70) & 0xfffffffd;
  }
  return iVar13;
}



void __cdecl
FUN_1000ad00(undefined4 *param_1,undefined *param_2,uint param_3,int param_4,int param_5)

{
  FUN_1000ae6f(param_1,param_2,param_3,param_4,param_5,(pthreadlocinfo *)0x0);
  return;
}



int __cdecl
FUN_1000ad1e(undefined *param_1,uint param_2,int param_3,int param_4,int *param_5,char param_6,
            pthreadlocinfo *param_7)

{
  code *pcVar1;
  int *piVar2;
  int iVar3;
  errno_t eVar4;
  int iVar5;
  undefined *puVar6;
  char *_Dst;
  int iVar7;
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_10008755(local_14,param_7);
  if ((param_1 == (undefined *)0x0) || (param_2 == 0)) {
    piVar2 = __errno();
    iVar7 = 0x16;
  }
  else {
    iVar7 = 0;
    iVar3 = param_3;
    if (param_3 < 1) {
      iVar3 = 0;
    }
    if (iVar3 + 9U < param_2) {
      if (param_6 != '\0') {
        __shift(param_1 + (*param_5 == 0x2d),(uint)(0 < param_3));
      }
      puVar6 = param_1;
      if (*param_5 == 0x2d) {
        *param_1 = 0x2d;
        puVar6 = param_1 + 1;
      }
      if (0 < param_3) {
        *puVar6 = puVar6[1];
        puVar6 = puVar6 + 1;
        *puVar6 = *(undefined *)**(undefined4 **)(local_14[0] + 0x84);
      }
      _Dst = puVar6 + (uint)(param_6 == '\0') + param_3;
      puVar6 = (undefined *)0xffffffff;
      if (param_2 != 0xffffffff) {
        puVar6 = param_1 + (param_2 - (int)_Dst);
      }
      eVar4 = _strcpy_s(_Dst,(rsize_t)puVar6,"e+000");
      if (eVar4 != 0) {
        __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
        pcVar1 = (code *)swi(3);
        iVar3 = (*pcVar1)();
        return iVar3;
      }
      if (param_4 != 0) {
        *_Dst = 'E';
      }
      if (*(char *)param_5[3] != '0') {
        iVar3 = param_5[1] + -1;
        if (iVar3 < 0) {
          iVar3 = -iVar3;
          _Dst[1] = '-';
        }
        if (99 < iVar3) {
          iVar5 = iVar3 / 100;
          iVar3 = iVar3 % 100;
          _Dst[2] = _Dst[2] + (char)iVar5;
        }
        if (9 < iVar3) {
          iVar5 = iVar3 / 10;
          iVar3 = iVar3 % 10;
          _Dst[3] = _Dst[3] + (char)iVar5;
        }
        _Dst[4] = _Dst[4] + (char)iVar3;
      }
      if (((DAT_10046618 & 1) != 0) && (_Dst[2] == '0')) {
        FID_conflict__memcpy(_Dst + 2,_Dst + 3,3);
      }
      goto LAB_1000ae4f;
    }
    piVar2 = __errno();
    iVar7 = 0x22;
  }
  *piVar2 = iVar7;
  FUN_100090a2();
LAB_1000ae4f:
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return iVar7;
}



void __cdecl
FUN_1000ae6f(undefined4 *param_1,undefined *param_2,uint param_3,int param_4,int param_5,
            pthreadlocinfo *param_6)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined uVar4;
  undefined uVar5;
  int in_stack_ffffffd0;
  char local_20 [24];
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  FUN_10012ccf(*param_1,param_1[1],(int *)&stack0xffffffd0,local_20,0x16);
  if (param_2 == (undefined *)0x0) {
    piVar1 = __errno();
    uVar5 = (undefined)in_stack_ffffffd0;
  }
  else {
    if (param_3 != 0) {
      uVar3 = 0xffffffff;
      if (param_3 != 0xffffffff) {
        uVar3 = (param_3 - (in_stack_ffffffd0 == 0x2d)) - (uint)(0 < param_4);
      }
      iVar2 = FUN_10012b57(param_2 + (uint)(0 < param_4) + (uint)(in_stack_ffffffd0 == 0x2d),uVar3,
                           param_4 + 1,(int)&stack0xffffffd0);
      uVar5 = (undefined)in_stack_ffffffd0;
      if (iVar2 == 0) {
        FUN_1000ad1e(param_2,param_3,param_4,param_5,(int *)&stack0xffffffd0,'\0',param_6);
        uVar4 = extraout_DL_01;
      }
      else {
        *param_2 = 0;
        uVar4 = extraout_DL_00;
      }
      goto LAB_1000af2c;
    }
    piVar1 = __errno();
    uVar5 = (undefined)in_stack_ffffffd0;
  }
  *piVar1 = 0x16;
  FUN_100090a2();
  uVar4 = extraout_DL;
LAB_1000af2c:
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,uVar4,uVar5);
  return;
}



undefined4 __cdecl
FUN_1000af3d(char *param_1,int param_2,uint param_3,int *param_4,char param_5,
            pthreadlocinfo *param_6)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  char *pcVar4;
  int local_18 [2];
  int local_10;
  char local_c;
  uint local_8;
  
  local_8 = param_4[1] - 1;
  FUN_10008755(local_18,param_6);
  if ((param_1 == (char *)0x0) || (param_2 == 0)) {
    piVar2 = __errno();
    uVar3 = 0x16;
    *piVar2 = 0x16;
    FUN_100090a2();
  }
  else {
    uVar3 = 0;
    if ((param_5 != '\0') && (local_8 == param_3)) {
      *(undefined2 *)(param_1 + (*param_4 == 0x2d) + local_8) = 0x30;
    }
    if (*param_4 == 0x2d) {
      *param_1 = '-';
      param_1 = param_1 + 1;
    }
    if (param_4[1] < 1) {
      __shift(param_1,1);
      *param_1 = '0';
      pcVar4 = param_1 + 1;
    }
    else {
      pcVar4 = param_1 + param_4[1];
    }
    if (0 < (int)param_3) {
      __shift(pcVar4,1);
      *pcVar4 = ***(char ***)(local_18[0] + 0x84);
      iVar1 = param_4[1];
      if (iVar1 < 0) {
        if (param_5 == '\0') {
          if (SBORROW4(param_3,-iVar1) == (int)(param_3 + iVar1) < 0) {
            param_3 = -iVar1;
          }
        }
        else {
          param_3 = -iVar1;
        }
        __shift(pcVar4 + 1,param_3);
        FUN_10006130((uint *)(pcVar4 + 1),0x30,param_3);
      }
    }
  }
  if (local_c != '\0') {
    *(uint *)(local_10 + 0x70) = *(uint *)(local_10 + 0x70) & 0xfffffffd;
  }
  return uVar3;
}



void __cdecl
FUN_1000b029(undefined4 *param_1,char *param_2,int param_3,uint param_4,pthreadlocinfo *param_5)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined uVar4;
  undefined uVar5;
  int in_stack_ffffffd0;
  int local_2c;
  char local_20 [24];
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  FUN_10012ccf(*param_1,param_1[1],(int *)&stack0xffffffd0,local_20,0x16);
  if (param_2 == (char *)0x0) {
    piVar1 = __errno();
    uVar5 = (undefined)in_stack_ffffffd0;
    *piVar1 = 0x16;
    FUN_100090a2();
    uVar4 = extraout_DL;
  }
  else if (param_3 == 0) {
    piVar1 = __errno();
    uVar5 = (undefined)in_stack_ffffffd0;
    *piVar1 = 0x16;
    FUN_100090a2();
    uVar4 = extraout_DL_00;
  }
  else {
    uVar3 = 0xffffffff;
    if (param_3 != -1) {
      uVar3 = param_3 - (uint)(in_stack_ffffffd0 == 0x2d);
    }
    iVar2 = FUN_10012b57(param_2 + (in_stack_ffffffd0 == 0x2d),uVar3,local_2c + param_4,
                         (int)&stack0xffffffd0);
    uVar5 = (undefined)in_stack_ffffffd0;
    if (iVar2 == 0) {
      FUN_1000af3d(param_2,param_3,param_4,(int *)&stack0xffffffd0,'\0',param_5);
      uVar4 = extraout_DL_02;
    }
    else {
      *param_2 = '\0';
      uVar4 = extraout_DL_01;
    }
  }
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,uVar4,uVar5);
  return;
}



void __cdecl
FUN_1000b0ea(undefined4 *param_1,char *param_2,uint param_3,uint param_4,int param_5,
            pthreadlocinfo *param_6)

{
  char *pcVar1;
  int *piVar2;
  uint uVar3;
  int iVar4;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined uVar5;
  char *pcVar6;
  bool bVar7;
  undefined uVar8;
  int in_stack_ffffffcc;
  int local_30;
  char local_20 [24];
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  FUN_10012ccf(*param_1,param_1[1],(int *)&stack0xffffffcc,local_20,0x16);
  if (param_2 == (char *)0x0) {
    piVar2 = __errno();
    uVar8 = (undefined)in_stack_ffffffcc;
    *piVar2 = 0x16;
    FUN_100090a2();
    uVar5 = extraout_DL;
  }
  else if (param_3 == 0) {
    piVar2 = __errno();
    uVar8 = (undefined)in_stack_ffffffcc;
    *piVar2 = 0x16;
    FUN_100090a2();
    uVar5 = extraout_DL_00;
  }
  else {
    bVar7 = in_stack_ffffffcc == 0x2d;
    uVar3 = 0xffffffff;
    if (param_3 != 0xffffffff) {
      uVar3 = param_3 - bVar7;
    }
    iVar4 = FUN_10012b57(param_2 + bVar7,uVar3,param_4,(int)&stack0xffffffcc);
    uVar8 = (undefined)in_stack_ffffffcc;
    if (iVar4 == 0) {
      if ((local_30 + -1 < -4) || ((int)param_4 <= local_30 + -1)) {
        FUN_1000ad1e(param_2,param_3,param_4,param_5,(int *)&stack0xffffffcc,'\x01',param_6);
        uVar5 = extraout_DL_03;
      }
      else {
        pcVar1 = param_2 + bVar7;
        if (false) {
          do {
            pcVar6 = pcVar1;
            pcVar1 = pcVar6 + 1;
          } while (*pcVar6 != '\0');
          pcVar6[-1] = '\0';
        }
        FUN_1000af3d(param_2,param_3,param_4,(int *)&stack0xffffffcc,'\x01',param_6);
        uVar5 = extraout_DL_02;
      }
    }
    else {
      *param_2 = '\0';
      uVar5 = extraout_DL_01;
    }
  }
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,uVar5,uVar8);
  return;
}



void __cdecl FUN_1000b1e9(char *param_1)

{
  FUN_1000b1fa(param_1,(pthreadlocinfo *)0x0);
  return;
}



void __cdecl FUN_1000b1fa(char *param_1,pthreadlocinfo *param_2)

{
  char cVar1;
  char *pcVar2;
  int local_14 [2];
  int local_c;
  char local_8;
  char *pcVar3;
  
  FUN_10008755(local_14,param_2);
  cVar1 = *param_1;
  if (cVar1 != '\0') {
    do {
      if (cVar1 == ***(char ***)(local_14[0] + 0x84)) break;
      param_1 = param_1 + 1;
      cVar1 = *param_1;
    } while (cVar1 != '\0');
  }
  if (*param_1 != '\0') {
    do {
      param_1 = param_1 + 1;
      cVar1 = *param_1;
      pcVar2 = param_1;
      if ((cVar1 == '\0') || (cVar1 == 'e')) break;
    } while (cVar1 != 'E');
    do {
      pcVar3 = pcVar2;
      pcVar2 = pcVar3 + -1;
    } while (*pcVar2 == '0');
    if (*pcVar2 == ***(char ***)(local_14[0] + 0x84)) {
      pcVar2 = pcVar3 + -2;
    }
    do {
      cVar1 = *param_1;
      pcVar2 = pcVar2 + 1;
      param_1 = param_1 + 1;
      *pcVar2 = cVar1;
    } while (cVar1 != '\0');
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



void __cdecl FUN_1000b27a(uint param_1,uint *param_2,char *param_3)

{
  FUN_1000b292(param_1,param_2,param_3,(pthreadlocinfo *)0x0);
  return;
}



void __cdecl FUN_1000b292(uint param_1,uint *param_2,char *param_3,pthreadlocinfo *param_4)

{
  uint local_c;
  uint local_8;
  
  if (param_1 == 0) {
    FUN_100108ed(&param_1,param_3,param_4);
    *param_2 = param_1;
  }
  else {
    FUN_1001085f(&local_c,param_3,param_4);
    *param_2 = local_c;
    param_2[1] = local_8;
  }
  return;
}



void __cdecl FUN_1000b2d4(byte *param_1)

{
  FUN_1000b2e5(param_1,(pthreadlocinfo *)0x0);
  return;
}



void __cdecl FUN_1000b2e5(byte *param_1,pthreadlocinfo *param_2)

{
  byte bVar1;
  int iVar2;
  byte bVar3;
  bool bVar4;
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_10008755(local_14,param_2);
  iVar2 = _tolower((int)(char)*param_1);
  bVar4 = iVar2 == 0x65;
  while (!bVar4) {
    param_1 = param_1 + 1;
    iVar2 = _isdigit((uint)*param_1);
    bVar4 = iVar2 == 0;
  }
  iVar2 = _tolower((int)(char)*param_1);
  if (iVar2 == 0x78) {
    param_1 = param_1 + 2;
  }
  bVar3 = *param_1;
  *param_1 = ***(byte ***)(local_14[0] + 0x84);
  do {
    param_1 = param_1 + 1;
    bVar1 = *param_1;
    *param_1 = bVar3;
    bVar3 = bVar1;
  } while (*param_1 != 0);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



// Library Function - Single Match
//  __positive
// 
// Library: Visual Studio 2012 Release

int __cdecl __positive(double *arg)

{
  if (0.0 < *arg != (*arg == 0.0)) {
    return 1;
  }
  return 0;
}



// Library Function - Single Match
//  __shift
// 
// Library: Visual Studio 2012 Release

void __cdecl __shift(char *param_1,int param_2)

{
  size_t sVar1;
  
  if (param_2 != 0) {
    sVar1 = _strlen(param_1);
    FID_conflict__memcpy(param_1 + param_2,param_1,sVar1 + 1);
  }
  return;
}



// Library Function - Single Match
//  __setdefaultprecision
// 
// Library: Visual Studio 2012 Release

void __setdefaultprecision(void)

{
  code *pcVar1;
  errno_t eVar2;
  
  eVar2 = __controlfp_s((uint *)0x0,0x10000,0x30000);
  if (eVar2 == 0) {
    return;
  }
  __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



void FUN_1000b3c2(void)

{
  PVOID pvVar1;
  uint uVar2;
  
  uVar2 = 0;
  do {
    pvVar1 = EncodePointer(*(PVOID *)((int)&PTR_FUN_10033560 + uVar2));
    *(PVOID *)((int)&PTR_FUN_10033560 + uVar2) = pvVar1;
    uVar2 = uVar2 + 4;
  } while (uVar2 < 0x28);
  return;
}



// Library Function - Single Match
//  __CIsqrt
// 
// Library: Visual Studio

undefined8 __CIsqrt(void)

{
  undefined4 extraout_ECX;
  uint extraout_EDX;
  float10 in_ST0;
  undefined8 uVar1;
  double dVar2;
  
  dVar2 = (double)in_ST0;
  FUN_10012868(SUB84(dVar2,0),(uint)((ulonglong)dVar2 >> 0x20));
  uVar1 = FID_conflict_start(extraout_ECX,extraout_EDX,SUB84(dVar2,0),
                             (uint)((ulonglong)dVar2 >> 0x20));
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Multiple Matches With Different Base Names
//  __sqrt_common
//  start
// 
// Library: Visual Studio

undefined8 __fastcall FID_conflict_start(undefined4 param_1,uint param_2,int param_3,uint param_4)

{
  uint uVar1;
  uint uVar2;
  undefined4 uVar3;
  bool in_ZF;
  ushort in_FPUControlWord;
  ushort in_FPUStatusWord;
  undefined4 unaff_retaddr;
  uint uVar4;
  
  uVar4 = param_2 & 0xffff0000 | (uint)in_FPUControlWord;
  if (in_ZF) {
    if (((param_4 & 0xfffff) != 0) || (param_3 != 0)) {
      uVar1 = __convertTOStoQNaN();
      goto LAB_1000b48b;
    }
    uVar1 = param_4 & 0x80000000;
    if (uVar1 != 0) goto LAB_1000b47e;
  }
  else {
    uVar1 = param_4;
    if (in_FPUControlWord != 0x27f) {
      uVar1 = __load_CW(uVar4);
    }
    if (((uVar1 & 0x80000000) != 0) &&
       ((((uVar1 & 0x7ff00000) != 0 || ((uVar1 & 0xfffff) != 0)) || (param_3 != 0)))) {
LAB_1000b47e:
      uVar1 = 1;
LAB_1000b48b:
      if (_DAT_10045880 == 0) {
        __startOneArgErrorHandling(&DAT_10033590,5,(ushort)uVar4,unaff_retaddr,param_3,param_4);
        return CONCAT44(uVar4,uVar1);
      }
      goto LAB_1001287e;
    }
  }
  if (_DAT_10045880 == 0) {
    uVar2 = uVar1 & 0xffff0000 | uVar4 & 0xffff;
    if ((short)(uVar4 & 0xffff) != 0x27f) {
      if (((uVar4 & 0x20) != 0) &&
         (uVar2 = uVar1 & 0xffff0000 | (uint)in_FPUStatusWord, (in_FPUStatusWord & 0x20) != 0)) {
        uVar3 = 8;
        __startOneArgErrorHandling(&DAT_10033590,5,(ushort)uVar4,unaff_retaddr,param_3,param_4);
        return CONCAT44(uVar4,uVar3);
      }
      uVar2 = uVar2 & 0xffff0020;
    }
    return CONCAT44(uVar4,uVar2);
  }
LAB_1001287e:
  return CONCAT44(uVar4,uVar1);
}



_ptiddata __cdecl FUN_1000b4aa(int param_1,void *param_2)

{
  int *piVar1;
  code *pcVar2;
  void *pvVar3;
  _ptiddata p_Var4;
  int *piVar5;
  int iVar6;
  
  p_Var4 = __getptd_noexit();
  if (p_Var4 != (_ptiddata)0x0) {
    piVar1 = (int *)p_Var4->_pxcptacttab;
    piVar5 = piVar1;
    do {
      if (*piVar5 == param_1) break;
      piVar5 = piVar5 + 3;
    } while (piVar5 < piVar1 + 0x24);
    if ((piVar1 + 0x24 <= piVar5) || (*piVar5 != param_1)) {
      piVar5 = (int *)0x0;
    }
    if ((piVar5 == (int *)0x0) || (pcVar2 = (code *)piVar5[2], pcVar2 == (code *)0x0)) {
      p_Var4 = (_ptiddata)0x0;
    }
    else if (pcVar2 == (code *)0x5) {
      piVar5[2] = 0;
      p_Var4 = (_ptiddata)0x1;
    }
    else if (pcVar2 == (code *)0x1) {
      p_Var4 = (_ptiddata)0xffffffff;
    }
    else {
      pvVar3 = p_Var4->_tpxcptinfoptrs;
      p_Var4->_tpxcptinfoptrs = param_2;
      if (piVar5[1] == 8) {
        iVar6 = 0x24;
        do {
          *(undefined4 *)(iVar6 + 8 + (int)p_Var4->_pxcptacttab) = 0;
          iVar6 = iVar6 + 0xc;
        } while (iVar6 < 0x90);
        iVar6 = p_Var4->_tfpecode;
        if (*piVar5 == -0x3fffff72) {
          p_Var4->_tfpecode = 0x83;
        }
        else if (*piVar5 == -0x3fffff70) {
          p_Var4->_tfpecode = 0x81;
        }
        else if (*piVar5 == -0x3fffff6f) {
          p_Var4->_tfpecode = 0x84;
        }
        else if (*piVar5 == -0x3fffff6d) {
          p_Var4->_tfpecode = 0x85;
        }
        else if (*piVar5 == -0x3fffff73) {
          p_Var4->_tfpecode = 0x82;
        }
        else if (*piVar5 == -0x3fffff71) {
          p_Var4->_tfpecode = 0x86;
        }
        else if (*piVar5 == -0x3fffff6e) {
          p_Var4->_tfpecode = 0x8a;
        }
        else if (*piVar5 == -0x3ffffd4b) {
          p_Var4->_tfpecode = 0x8d;
        }
        else if (*piVar5 == -0x3ffffd4c) {
          p_Var4->_tfpecode = 0x8e;
        }
        (*pcVar2)(8,p_Var4->_tfpecode);
        p_Var4->_tfpecode = iVar6;
      }
      else {
        piVar5[2] = 0;
        (*pcVar2)(piVar5[1]);
      }
      p_Var4->_tpxcptinfoptrs = pvVar3;
      p_Var4 = (_ptiddata)0xffffffff;
    }
  }
  return p_Var4;
}



// Library Function - Single Match
//  ___CppXcptFilter
// 
// Library: Visual Studio 2012 Release

int __cdecl ___CppXcptFilter(ulong _ExceptionNum,_EXCEPTION_POINTERS *_ExceptionPtr)

{
  _ptiddata p_Var1;
  
  if (_ExceptionNum == 0xe06d7363) {
    p_Var1 = FUN_1000b4aa(-0x1f928c9d,_ExceptionPtr);
    return (int)p_Var1;
  }
  return 0;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

void FUN_1000b623(int param_1)

{
  int *piVar1;
  int iVar2;
  
  if (param_1 != 0) {
    if (*(int *)(param_1 + 0x24) != 0) {
      FUN_10001730(*(undefined4 *)(param_1 + 0x24));
    }
    if (*(int *)(param_1 + 0x2c) != 0) {
      FUN_10001730(*(undefined4 *)(param_1 + 0x2c));
    }
    if (*(int *)(param_1 + 0x34) != 0) {
      FUN_10001730(*(undefined4 *)(param_1 + 0x34));
    }
    if (*(int *)(param_1 + 0x3c) != 0) {
      FUN_10001730(*(undefined4 *)(param_1 + 0x3c));
    }
    if (*(int *)(param_1 + 0x40) != 0) {
      FUN_10001730(*(undefined4 *)(param_1 + 0x40));
    }
    if (*(int *)(param_1 + 0x44) != 0) {
      FUN_10001730(*(undefined4 *)(param_1 + 0x44));
    }
    if (*(int *)(param_1 + 0x48) != 0) {
      FUN_10001730(*(undefined4 *)(param_1 + 0x48));
    }
    if (*(undefined **)(param_1 + 0x5c) != &DAT_10023f58) {
      FUN_10001730(*(undefined4 *)(param_1 + 0x5c));
    }
    __lock(0xd);
    piVar1 = *(int **)(param_1 + 0x68);
    if (piVar1 != (int *)0x0) {
      LOCK();
      iVar2 = *piVar1;
      *piVar1 = iVar2 + -1;
      if ((iVar2 + -1 == 0) && (piVar1 != &DAT_10033818)) {
        FUN_10001730(piVar1);
      }
    }
    FUN_1000b743();
    __lock(0xc);
    piVar1 = *(int **)(param_1 + 0x6c);
    if (piVar1 != (int *)0x0) {
      FUN_1000f6b5(piVar1);
      if (((piVar1 != (int *)PTR_DAT_10033c9c) && (piVar1 != (int *)&DAT_10033ca0)) &&
         (*piVar1 == 0)) {
        FUN_1000f55b((int)piVar1);
      }
    }
    FUN_1000b74f();
    FUN_10001730(param_1);
  }
  return;
}



void FUN_1000b743(void)

{
  FUN_10012036(0xd);
  return;
}



void FUN_1000b74f(void)

{
  FUN_10012036(0xc);
  return;
}



void __cdecl FUN_1000b758(int param_1)

{
  if (DAT_10033598 != 0xffffffff) {
    if (param_1 == 0) {
      param_1 = FUN_1000c0dd(DAT_10033598);
    }
    FUN_1000c0fc(DAT_10033598,(LPVOID)0x0);
    FUN_1000b623(param_1);
  }
  return;
}



// Library Function - Single Match
//  __getptd
// 
// Library: Visual Studio 2012 Release

_ptiddata __cdecl __getptd(void)

{
  _ptiddata p_Var1;
  
  p_Var1 = __getptd_noexit();
  if (p_Var1 == (_ptiddata)0x0) {
    __amsg_exit(0x10);
  }
  return p_Var1;
}



// Library Function - Single Match
//  __getptd_noexit
// 
// Library: Visual Studio 2012 Release

_ptiddata __cdecl __getptd_noexit(void)

{
  DWORD dwErrCode;
  _ptiddata p_Var1;
  int iVar2;
  DWORD DVar3;
  
  dwErrCode = GetLastError();
  p_Var1 = (_ptiddata)FUN_1000c0dd(DAT_10033598);
  if (p_Var1 == (_ptiddata)0x0) {
    p_Var1 = (_ptiddata)FUN_10001770(1,0x3bc);
    if (p_Var1 != (_ptiddata)0x0) {
      iVar2 = FUN_1000c0fc(DAT_10033598,p_Var1);
      if (iVar2 == 0) {
        FUN_10001730(p_Var1);
        p_Var1 = (_ptiddata)0x0;
      }
      else {
        FUN_1000b815((int)p_Var1,0);
        DVar3 = GetCurrentThreadId();
        p_Var1->_thandle = 0xffffffff;
        p_Var1->_tid = DVar3;
      }
    }
  }
  SetLastError(dwErrCode);
  return p_Var1;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

void __cdecl FUN_1000b815(int param_1,int param_2)

{
  *(undefined **)(param_1 + 0x5c) = &DAT_10023f58;
  *(undefined4 *)(param_1 + 8) = 0;
  *(undefined4 *)(param_1 + 0x14) = 1;
  *(undefined4 *)(param_1 + 0x70) = 1;
  *(undefined2 *)(param_1 + 0xb8) = 0x43;
  *(undefined2 *)(param_1 + 0x1be) = 0x43;
  *(undefined4 **)(param_1 + 0x68) = &DAT_10033818;
  *(undefined4 *)(param_1 + 0x3b8) = 0;
  __lock(0xd);
  LOCK();
  **(int **)(param_1 + 0x68) = **(int **)(param_1 + 0x68) + 1;
  FUN_1000b8b6();
  __lock(0xc);
  *(int *)(param_1 + 0x6c) = param_2;
  if (param_2 == 0) {
    *(undefined **)(param_1 + 0x6c) = PTR_DAT_10033c9c;
  }
  FUN_1000f4c6(*(int **)(param_1 + 0x6c));
  FUN_1000b8bf();
  return;
}



void FUN_1000b8b6(void)

{
  FUN_10012036(0xd);
  return;
}



void FUN_1000b8bf(void)

{
  FUN_10012036(0xc);
  return;
}



undefined4 FUN_1000b8c8(void)

{
  int iVar1;
  uint *puVar2;
  DWORD DVar3;
  
  FUN_1000a2f3();
  iVar1 = FUN_10011ffd();
  if (iVar1 != 0) {
    DAT_10033598 = FUN_1000c0a0(FUN_1000b623);
    if (DAT_10033598 != 0xffffffff) {
      puVar2 = FUN_10001770(1,0x3bc);
      if (puVar2 != (uint *)0x0) {
        iVar1 = FUN_1000c0fc(DAT_10033598,puVar2);
        if (iVar1 != 0) {
          FUN_1000b815((int)puVar2,0);
          DVar3 = GetCurrentThreadId();
          puVar2[1] = 0xffffffff;
          *puVar2 = DVar3;
          return 1;
        }
      }
      FUN_1000b93e();
      return 0;
    }
  }
  FUN_1000b93e();
  return 0;
}



void FUN_1000b93e(void)

{
  LPCRITICAL_SECTION lpCriticalSection;
  LPCRITICAL_SECTION *pp_Var1;
  LPCRITICAL_SECTION *pp_Var2;
  
  if (DAT_10033598 != 0xffffffff) {
    FUN_1000c0be(DAT_10033598);
    DAT_10033598 = 0xffffffff;
  }
  pp_Var1 = (LPCRITICAL_SECTION *)&DAT_10033fe8;
  pp_Var2 = (LPCRITICAL_SECTION *)&DAT_10033fe8;
  do {
    lpCriticalSection = *pp_Var2;
    if ((lpCriticalSection != (LPCRITICAL_SECTION)0x0) && (pp_Var2[1] != (LPCRITICAL_SECTION)0x1)) {
      DeleteCriticalSection(lpCriticalSection);
      FUN_10001730(lpCriticalSection);
      *pp_Var2 = (LPCRITICAL_SECTION)0x0;
    }
    pp_Var2 = pp_Var2 + 2;
  } while ((int)pp_Var2 < 0x10034108);
  do {
    if ((*pp_Var1 != (LPCRITICAL_SECTION)0x0) && (pp_Var1[1] == (LPCRITICAL_SECTION)0x1)) {
      DeleteCriticalSection(*pp_Var1);
    }
    pp_Var1 = pp_Var1 + 2;
  } while ((int)pp_Var1 < 0x10034108);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 FUN_1000b95b(void)

{
  HANDLE hFile;
  uint uVar1;
  byte bVar2;
  undefined4 uVar3;
  DWORD DVar4;
  HANDLE pvVar5;
  HANDLE *ppvVar6;
  int iVar7;
  _STARTUPINFOW local_78;
  int local_34;
  uint local_30;
  HANDLE *local_2c;
  HANDLE *local_28;
  HANDLE *local_24;
  HANDLE local_20;
  undefined local_14 [8];
  undefined4 uStack12;
  undefined *local_8;
  
  local_8 = &DAT_10031d90;
  uStack12 = 0x1000b967;
  __lock(0xb);
  local_8 = (undefined *)0x0;
  local_28 = (HANDLE *)FUN_10001770(0x20,0x40);
  if (local_28 == (HANDLE *)0x0) {
    __local_unwind4(&DAT_1003352c,(int)local_14,0xfffffffe);
    uVar3 = 0xffffffff;
  }
  else {
    DAT_100476e4 = (HANDLE)0x20;
    DAT_100458e0 = local_28;
    for (; local_28 < DAT_100458e0 + 0x200; local_28 = local_28 + 0x10) {
      *(undefined2 *)(local_28 + 1) = 0xa00;
      *local_28 = (HANDLE)0xffffffff;
      local_28[2] = (HANDLE)0x0;
      *(byte *)(local_28 + 9) = *(byte *)(local_28 + 9) & 0x80;
      *(byte *)(local_28 + 9) = *(byte *)(local_28 + 9) & 0x7f;
      *(undefined2 *)((int)local_28 + 0x25) = 0xa0a;
      local_28[0xe] = (HANDLE)0x0;
      *(undefined *)(local_28 + 0xd) = 0;
    }
    GetStartupInfoW(&local_78);
    if ((local_78.cbReserved2 != 0) && ((HANDLE *)local_78.lpReserved2 != (HANDLE *)0x0)) {
      local_20 = *(HANDLE *)local_78.lpReserved2;
      local_2c = (HANDLE *)((int)local_78.lpReserved2 + 4);
      local_24 = (HANDLE *)((int)local_2c + (int)local_20);
      if (0x7ff < (int)local_20) {
        local_20 = (HANDLE)0x800;
      }
      local_34 = 1;
      while (iVar7 = local_34, (int)DAT_100476e4 < (int)local_20) {
        local_28 = (HANDLE *)FUN_10001770(0x20,0x40);
        if (local_28 == (HANDLE *)0x0) {
          local_20 = DAT_100476e4;
          break;
        }
        (&DAT_100458e0)[iVar7] = local_28;
        DAT_100476e4 = (HANDLE)((int)DAT_100476e4 + 0x20);
        for (; local_28 < (HANDLE *)((int)(&DAT_100458e0)[iVar7] + 0x800);
            local_28 = local_28 + 0x10) {
          *(undefined2 *)(local_28 + 1) = 0xa00;
          *local_28 = (HANDLE)0xffffffff;
          local_28[2] = (HANDLE)0x0;
          *(byte *)(local_28 + 9) = *(byte *)(local_28 + 9) & 0x80;
          *(undefined2 *)((int)local_28 + 0x25) = 0xa0a;
          local_28[0xe] = (HANDLE)0x0;
          *(undefined *)(local_28 + 0xd) = 0;
        }
        local_34 = iVar7 + 1;
      }
      local_30 = 0;
      pvVar5 = local_20;
      while (uVar1 = local_30, (int)local_30 < (int)pvVar5) {
        hFile = *local_24;
        if ((((hFile != (HANDLE)0xffffffff) && (hFile != (HANDLE)0xfffffffe)) &&
            ((*(byte *)local_2c & 1) != 0)) &&
           (((*(byte *)local_2c & 8) != 0 ||
            (DVar4 = GetFileType(hFile), pvVar5 = local_20, DVar4 != 0)))) {
          ppvVar6 = (HANDLE *)((uVar1 & 0x1f) * 0x40 + (int)(&DAT_100458e0)[(int)uVar1 >> 5]);
          *ppvVar6 = *local_24;
          *(byte *)(ppvVar6 + 1) = *(byte *)local_2c;
          local_28 = ppvVar6;
          FUN_1000c11e((LPCRITICAL_SECTION)(ppvVar6 + 3),4000,0);
          ppvVar6[2] = (HANDLE)((int)ppvVar6[2] + 1);
          pvVar5 = local_20;
        }
        local_2c = (HANDLE *)((int)local_2c + 1);
        local_24 = local_24 + 1;
        local_30 = uVar1 + 1;
      }
    }
    for (iVar7 = 0; local_30 = iVar7, iVar7 < 3; iVar7 = iVar7 + 1) {
      ppvVar6 = DAT_100458e0 + iVar7 * 0x10;
      local_28 = ppvVar6;
      if ((*ppvVar6 == (HANDLE)0xffffffff) || (*ppvVar6 == (HANDLE)0xfffffffe)) {
        *(undefined *)(ppvVar6 + 1) = 0x81;
        if (iVar7 == 0) {
          DVar4 = 0xfffffff6;
        }
        else {
          DVar4 = 0xfffffff5 - (iVar7 != 1);
        }
        local_20 = GetStdHandle(DVar4);
        if (((local_20 == (HANDLE)0xffffffff) || (local_20 == (HANDLE)0x0)) ||
           (DVar4 = GetFileType(local_20), DVar4 == 0)) {
          *(byte *)(ppvVar6 + 1) = *(byte *)(ppvVar6 + 1) | 0x40;
          *ppvVar6 = (HANDLE)0xfffffffe;
          if (DAT_10047640 != 0) {
            *(undefined4 *)(*(int *)(DAT_10047640 + iVar7 * 4) + 0x10) = 0xfffffffe;
          }
        }
        else {
          *ppvVar6 = local_20;
          if ((DVar4 & 0xff) == 2) {
            bVar2 = *(byte *)(ppvVar6 + 1) | 0x40;
LAB_1000bbbb:
            *(byte *)(ppvVar6 + 1) = bVar2;
          }
          else if ((DVar4 & 0xff) == 3) {
            bVar2 = *(byte *)(ppvVar6 + 1) | 8;
            goto LAB_1000bbbb;
          }
          FUN_1000c11e((LPCRITICAL_SECTION)(ppvVar6 + 3),4000,0);
          ppvVar6[2] = (HANDLE)((int)ppvVar6[2] + 1);
        }
      }
      else {
        *(byte *)(ppvVar6 + 1) = *(byte *)(ppvVar6 + 1) | 0x80;
      }
    }
    local_8 = (undefined *)0xfffffffe;
    FUN_1000bc06();
    uVar3 = 0;
  }
  return uVar3;
}



void FUN_1000bc06(void)

{
  FUN_10012036(0xb);
  return;
}



// Library Function - Single Match
//  __ioterm
// 
// Library: Visual Studio 2012 Release

void __cdecl __ioterm(void)

{
  uint uVar1;
  LPCRITICAL_SECTION p_Var2;
  uint *puVar3;
  LPCRITICAL_SECTION lpCriticalSection;
  
  puVar3 = &DAT_100458e0;
  do {
    uVar1 = *puVar3;
    if (uVar1 != 0) {
      if (uVar1 < uVar1 + 0x800) {
        lpCriticalSection = (LPCRITICAL_SECTION)(uVar1 + 0xc);
        do {
          if (lpCriticalSection[-1].SpinCount != 0) {
            DeleteCriticalSection(lpCriticalSection);
          }
          p_Var2 = lpCriticalSection + 2;
          lpCriticalSection = (LPCRITICAL_SECTION)&lpCriticalSection[2].LockSemaphore;
        } while (&p_Var2->LockCount < (undefined *)(*puVar3 + 0x800));
      }
      FUN_10001730(*puVar3);
      *puVar3 = 0;
    }
    puVar3 = puVar3 + 1;
  } while ((int)puVar3 < 0x100459e0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_1000bc61(void)

{
  uint uVar1;
  uint uVar2;
  byte **ppbVar3;
  byte *pbVar4;
  uint local_c;
  uint local_8;
  
  if (_DAT_100476f8 == 0) {
    FUN_1000f820();
  }
  DAT_10045ae4 = 0;
  GetModuleFileNameA((HMODULE)0x0,&DAT_100459e0,0x104);
  _DAT_100458b8 = &DAT_100459e0;
  if ((DAT_10047700 == (byte *)0x0) || (pbVar4 = DAT_10047700, *DAT_10047700 == 0)) {
    pbVar4 = &DAT_100459e0;
  }
  FUN_1000bd14(pbVar4,(byte **)0x0,(byte *)0x0,(int *)&local_8,(int *)&local_c);
  uVar2 = local_8;
  if ((((local_8 < 0x3fffffff) && (local_c != 0xffffffff)) &&
      (uVar1 = local_c + local_8 * 4, local_c <= uVar1)) &&
     (ppbVar3 = (byte **)FUN_100017b0(uVar1), ppbVar3 != (byte **)0x0)) {
    FUN_1000bd14(pbVar4,ppbVar3,(byte *)(ppbVar3 + uVar2),(int *)&local_8,(int *)&local_c);
    _DAT_100458a4 = local_8 - 1;
    DAT_100458a8 = ppbVar3;
    return 0;
  }
  return 0xffffffff;
}



void __cdecl FUN_1000bd14(byte *param_1,byte **param_2,byte *param_3,int *param_4,int *param_5)

{
  bool bVar1;
  bool bVar2;
  byte bVar3;
  int iVar4;
  uint uVar5;
  byte *pbVar6;
  byte *pbVar7;
  
  *param_5 = 0;
  *param_4 = 1;
  if (param_2 != (byte **)0x0) {
    *param_2 = param_3;
    param_2 = param_2 + 1;
  }
  bVar2 = false;
  do {
    if (*param_1 == 0x22) {
      bVar2 = !bVar2;
      pbVar6 = param_1 + 1;
      bVar3 = 0x22;
    }
    else {
      *param_5 = *param_5 + 1;
      if (param_3 != (byte *)0x0) {
        *param_3 = *param_1;
        param_3 = param_3 + 1;
      }
      bVar3 = *param_1;
      pbVar6 = param_1 + 1;
      iVar4 = FUN_10012f1f((uint)bVar3);
      if (iVar4 != 0) {
        *param_5 = *param_5 + 1;
        if (param_3 != (byte *)0x0) {
          *param_3 = *pbVar6;
          param_3 = param_3 + 1;
        }
        pbVar6 = param_1 + 2;
      }
      if (bVar3 == 0) {
        pbVar6 = pbVar6 + -1;
        goto LAB_1000bda5;
      }
    }
    param_1 = pbVar6;
  } while ((bVar2) || ((bVar3 != 0x20 && (bVar3 != 9))));
  if (param_3 != (byte *)0x0) {
    param_3[-1] = 0;
  }
LAB_1000bda5:
  bVar2 = false;
  while (pbVar7 = pbVar6, *pbVar6 != 0) {
    for (; (*pbVar7 == 0x20 || (*pbVar7 == 9)); pbVar7 = pbVar7 + 1) {
    }
    if (*pbVar7 == 0) break;
    if (param_2 != (byte **)0x0) {
      *param_2 = param_3;
      param_2 = param_2 + 1;
    }
    *param_4 = *param_4 + 1;
    while( true ) {
      bVar1 = true;
      uVar5 = 0;
      for (; *pbVar7 == 0x5c; pbVar7 = pbVar7 + 1) {
        uVar5 = uVar5 + 1;
      }
      pbVar6 = pbVar7;
      if (*pbVar7 == 0x22) {
        if (((uVar5 & 1) == 0) && ((!bVar2 || (pbVar6 = pbVar7 + 1, *pbVar6 != 0x22)))) {
          bVar1 = false;
          bVar2 = !bVar2;
          pbVar6 = pbVar7;
        }
        uVar5 = uVar5 >> 1;
      }
      while (uVar5 != 0) {
        uVar5 = uVar5 - 1;
        if (param_3 != (byte *)0x0) {
          *param_3 = 0x5c;
          param_3 = param_3 + 1;
        }
        *param_5 = *param_5 + 1;
      }
      bVar3 = *pbVar6;
      if ((bVar3 == 0) || ((!bVar2 && ((bVar3 == 0x20 || (bVar3 == 9)))))) break;
      if (bVar1) {
        iVar4 = FUN_10012f1f((int)(char)bVar3);
        if (param_3 == (byte *)0x0) {
          if (iVar4 != 0) {
            pbVar6 = pbVar6 + 1;
            *param_5 = *param_5 + 1;
          }
        }
        else {
          if (iVar4 != 0) {
            *param_3 = *pbVar6;
            param_3 = param_3 + 1;
            pbVar6 = pbVar6 + 1;
            *param_5 = *param_5 + 1;
          }
          *param_3 = *pbVar6;
          param_3 = param_3 + 1;
        }
        *param_5 = *param_5 + 1;
      }
      pbVar7 = pbVar6 + 1;
    }
    if (param_3 != (byte *)0x0) {
      *param_3 = 0;
      param_3 = param_3 + 1;
    }
    *param_5 = *param_5 + 1;
  }
  if (param_2 != (byte **)0x0) {
    *param_2 = (byte *)0x0;
  }
  *param_4 = *param_4 + 1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_1000be90(void)

{
  rsize_t _SizeInBytes;
  char cVar1;
  code *pcVar2;
  size_t sVar3;
  uint *_Dst;
  errno_t eVar4;
  undefined4 uVar5;
  char *pcVar6;
  int iVar7;
  uint **ppuVar8;
  
  if (_DAT_100476f8 == 0) {
    FUN_1000f820();
  }
  iVar7 = 0;
  pcVar6 = DAT_10045888;
  if (DAT_10045888 != (char *)0x0) {
    for (; *pcVar6 != '\0'; pcVar6 = pcVar6 + sVar3 + 1) {
      if (*pcVar6 != '=') {
        iVar7 = iVar7 + 1;
      }
      sVar3 = _strlen(pcVar6);
    }
    DAT_100458b0 = (uint **)FUN_10001770(iVar7 + 1,4);
    if (DAT_100458b0 != (uint **)0x0) {
      cVar1 = *DAT_10045888;
      ppuVar8 = DAT_100458b0;
      pcVar6 = DAT_10045888;
      do {
        if (cVar1 == '\0') {
          FUN_10001730(DAT_10045888);
          DAT_10045888 = (char *)0x0;
          *ppuVar8 = (uint *)0x0;
          _DAT_100476fc = 1;
          return 0;
        }
        sVar3 = _strlen(pcVar6);
        _SizeInBytes = sVar3 + 1;
        if (*pcVar6 != '=') {
          _Dst = FUN_10001770(_SizeInBytes,1);
          *ppuVar8 = _Dst;
          if (_Dst == (uint *)0x0) {
            FUN_10001730(DAT_100458b0);
            DAT_100458b0 = (uint **)0x0;
            return 0xffffffff;
          }
          eVar4 = _strcpy_s((char *)_Dst,_SizeInBytes,pcVar6);
          if (eVar4 != 0) {
            __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
            pcVar2 = (code *)swi(3);
            uVar5 = (*pcVar2)();
            return uVar5;
          }
          ppuVar8 = ppuVar8 + 1;
        }
        pcVar6 = pcVar6 + _SizeInBytes;
        cVar1 = *pcVar6;
      } while( true );
    }
  }
  return 0xffffffff;
}



// Library Function - Single Match
//  ___security_init_cookie
// 
// Library: Visual Studio 2015 Release

void __cdecl ___security_init_cookie(void)

{
  DWORD DVar1;
  uint local_18;
  uint local_14;
  _FILETIME local_10;
  uint local_8;
  
  local_10.dwLowDateTime = 0;
  local_10.dwHighDateTime = 0;
  if ((DAT_1003352c == 0xbb40e64e) || ((DAT_1003352c & 0xffff0000) == 0)) {
    GetSystemTimeAsFileTime(&local_10);
    local_8 = local_10.dwHighDateTime ^ local_10.dwLowDateTime;
    DVar1 = GetCurrentThreadId();
    local_8 = local_8 ^ DVar1;
    DVar1 = GetCurrentProcessId();
    local_8 = local_8 ^ DVar1;
    QueryPerformanceCounter((LARGE_INTEGER *)&local_18);
    DAT_1003352c = local_14 ^ local_18 ^ local_8 ^ (uint)&local_8;
    if (DAT_1003352c == 0xbb40e64e) {
      DAT_1003352c = 0xbb40e64f;
    }
    else if ((DAT_1003352c & 0xffff0000) == 0) {
      DAT_1003352c = DAT_1003352c | (DAT_1003352c | 0x4711) << 0x10;
    }
    DAT_10033530 = ~DAT_1003352c;
  }
  else {
    DAT_10033530 = ~DAT_1003352c;
  }
  return;
}



undefined4 FUN_1000c00d(void)

{
  return 1;
}



LPSTR FUN_1000c013(void)

{
  WCHAR WVar1;
  LPWCH lpWideCharStr;
  LPSTR lpMultiByteStr;
  int iVar2;
  WCHAR *pWVar3;
  int cchWideChar;
  WCHAR *pWVar4;
  
  lpWideCharStr = GetEnvironmentStringsW();
  lpMultiByteStr = (LPSTR)0x0;
  if (lpWideCharStr != (LPWCH)0x0) {
    WVar1 = *lpWideCharStr;
    pWVar3 = lpWideCharStr;
    while (WVar1 != L'\0') {
      do {
        pWVar4 = pWVar3;
        pWVar3 = pWVar4 + 1;
      } while (*pWVar3 != L'\0');
      pWVar3 = pWVar4 + 2;
      WVar1 = *pWVar3;
    }
    cchWideChar = ((int)pWVar3 - (int)lpWideCharStr >> 1) + 1;
    iVar2 = WideCharToMultiByte(0,0,lpWideCharStr,cchWideChar,(LPSTR)0x0,0,(LPCSTR)0x0,(LPBOOL)0x0);
    if ((iVar2 == 0) || (lpMultiByteStr = (LPSTR)FUN_100017b0(iVar2), lpMultiByteStr == (LPSTR)0x0))
    {
      FreeEnvironmentStringsW(lpWideCharStr);
      lpMultiByteStr = (LPSTR)0x0;
    }
    else {
      iVar2 = WideCharToMultiByte(0,0,lpWideCharStr,cchWideChar,lpMultiByteStr,iVar2,(LPCSTR)0x0,
                                  (LPBOOL)0x0);
      if (iVar2 == 0) {
        FUN_10001730(lpMultiByteStr);
        lpMultiByteStr = (LPSTR)0x0;
      }
      FreeEnvironmentStringsW(lpWideCharStr);
    }
  }
  return lpMultiByteStr;
}



void __cdecl FUN_1000c0a0(undefined4 param_1)

{
  if ((code *)(DAT_10047660 ^ DAT_1003352c) != (code *)0x0) {
    (*(code *)(DAT_10047660 ^ DAT_1003352c))(param_1);
    return;
  }
                    // WARNING: Could not recover jumptable at 0x1000c0b8. Too many branches
                    // WARNING: Treating indirect jump as call
  TlsAlloc();
  return;
}



void __cdecl FUN_1000c0be(DWORD param_1)

{
  if ((code *)(DAT_10047664 ^ DAT_1003352c) != (code *)0x0) {
    (*(code *)(DAT_10047664 ^ DAT_1003352c))();
    return;
  }
  TlsFree(param_1);
  return;
}



void __cdecl FUN_1000c0dd(DWORD param_1)

{
  if ((code *)(DAT_10047668 ^ DAT_1003352c) != (code *)0x0) {
    (*(code *)(DAT_10047668 ^ DAT_1003352c))();
    return;
  }
  TlsGetValue(param_1);
  return;
}



void __cdecl FUN_1000c0fc(DWORD param_1,LPVOID param_2)

{
  if ((code *)(DAT_1004766c ^ DAT_1003352c) != (code *)0x0) {
    (*(code *)(DAT_1004766c ^ DAT_1003352c))();
    return;
  }
  TlsSetValue(param_1,param_2);
  return;
}



undefined4 __cdecl FUN_1000c11e(LPCRITICAL_SECTION param_1,DWORD param_2,undefined4 param_3)

{
  undefined4 uVar1;
  
  if ((code *)(DAT_10047670 ^ DAT_1003352c) != (code *)0x0) {
    uVar1 = (*(code *)(DAT_10047670 ^ DAT_1003352c))(param_1,param_2,param_3);
    return uVar1;
  }
  InitializeCriticalSectionAndSpinCount(param_1,param_2);
  return 1;
}



bool FUN_1000c14c(void)

{
  int iVar1;
  int iVar2;
  undefined4 local_8;
  
  iVar1 = DAT_100335e0;
  if (DAT_100335e0 < 0) {
    local_8 = 0;
    iVar1 = 0;
    if (((code *)(DAT_100476d4 ^ DAT_1003352c) != (code *)0x0) &&
       (iVar2 = (*(code *)(DAT_100476d4 ^ DAT_1003352c))(&local_8,0), iVar2 == 0x7a)) {
      iVar1 = 1;
    }
  }
  DAT_100335e0 = iVar1;
  return 0 < DAT_100335e0;
}



// Library Function - Single Match
//  ___crtTerminateProcess
// 
// Library: Visual Studio 2012 Release

void __cdecl ___crtTerminateProcess(UINT uExitCode)

{
  HANDLE hProcess;
  
  hProcess = GetCurrentProcess();
  TerminateProcess(hProcess,uExitCode);
  return;
}



// Library Function - Single Match
//  ___crtUnhandledException
// 
// Library: Visual Studio 2012 Release

LONG __cdecl ___crtUnhandledException(EXCEPTION_POINTERS *exceptionInfo)

{
  LONG LVar1;
  
  SetUnhandledExceptionFilter((LPTOP_LEVEL_EXCEPTION_FILTER)0x0);
  LVar1 = UnhandledExceptionFilter(exceptionInfo);
  return LVar1;
}



void FUN_1000c442(void)

{
  code **ppcVar1;
  
  for (ppcVar1 = (code **)&DAT_10031c74; ppcVar1 < &DAT_10031c74; ppcVar1 = ppcVar1 + 1) {
    if (*ppcVar1 != (code *)0x0) {
      (**ppcVar1)();
    }
  }
  return;
}



void FUN_1000c462(void)

{
  code **ppcVar1;
  
  for (ppcVar1 = (code **)&DAT_10031c7c; ppcVar1 < &DAT_10031c7c; ppcVar1 = ppcVar1 + 1) {
    if (*ppcVar1 != (code *)0x0) {
      (**ppcVar1)();
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __cintrindisp2
// 
// Library: Visual Studio

void __fastcall __cintrindisp2(undefined4 param_1,int param_2)

{
  __trandisp2(param_1,param_2);
  cintrinexit();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __cintrindisp1
// 
// Library: Visual Studio

void __fastcall __cintrindisp1(undefined4 param_1,int param_2)

{
  __trandisp1(param_1,param_2);
  cintrinexit();
  return;
}



// Library Function - Single Match
//  __ctrandisp2
// 
// Libraries: Visual Studio 2010, Visual Studio 2012, Visual Studio 2015, Visual Studio 2019

void __cdecl __ctrandisp2(uint param_1,int param_2,uint param_3,int param_4)

{
  undefined4 extraout_ECX;
  int extraout_EDX;
  
  __fload(param_1,param_2);
  __fload(param_3,param_4);
  __trandisp2(extraout_ECX,extraout_EDX);
  FUN_1000c54c();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_1000c54c(void)

{
  char cVar1;
  ushort uVar2;
  int unaff_EBP;
  ushort in_FPUStatusWord;
  float10 in_ST0;
  
  *(byte *)(unaff_EBP + -0x2c8) = *(byte *)(unaff_EBP + -0x2c8) & 0xfe;
  if (_DAT_10045880 != 0) {
    return;
  }
  *(double *)(unaff_EBP + -0x2d0) = (double)in_ST0;
  cVar1 = *(char *)(unaff_EBP + -0x90);
  if (cVar1 != '\0') {
    if (cVar1 == -1) {
      uVar2 = *(ushort *)(unaff_EBP + -0x2ca) & 0x7ff0;
    }
    else {
      if (cVar1 != -2) {
        if (cVar1 == '\0') {
          return;
        }
        *(int *)(unaff_EBP + -0x8e) = (int)cVar1;
        goto LAB_1000c638;
      }
      uVar2 = *(ushort *)(unaff_EBP + -0x2ca) & 0x7ff0;
      if (uVar2 == 0) {
        *(undefined4 *)(unaff_EBP + -0x8e) = 4;
        in_ST0 = (float10)fscale(in_ST0,(float10)1536.0);
        if (ABS(in_ST0) < (float10)2.225073858507201e-308) {
          in_ST0 = in_ST0 * (float10)0.0;
        }
        goto LAB_1000c638;
      }
    }
    if (uVar2 == 0x7ff0) {
      *(undefined4 *)(unaff_EBP + -0x8e) = 3;
      in_ST0 = (float10)fscale(in_ST0,(float10)-1536.0);
      if ((float10)1.797693134862316e+308 < ABS(in_ST0)) {
        in_ST0 = in_ST0 * (float10)INFINITY;
      }
      goto LAB_1000c638;
    }
  }
  if ((*(ushort *)(unaff_EBP + -0xa4) & 0x20) != 0) {
    return;
  }
  if ((in_FPUStatusWord & 0x20) == 0) {
    return;
  }
  *(undefined4 *)(unaff_EBP + -0x8e) = 8;
LAB_1000c638:
  *(int *)(unaff_EBP + -0x8a) = *(int *)(unaff_EBP + -0x94) + 1;
  if ((*(byte *)(unaff_EBP + -0x2c8) & 1) == 0) {
    *(undefined4 *)(unaff_EBP + -0x86) = *(undefined4 *)(unaff_EBP + 8);
    *(undefined4 *)(unaff_EBP + -0x82) = *(undefined4 *)(unaff_EBP + 0xc);
    if (*(char *)(*(int *)(unaff_EBP + -0x94) + 0xd) != '\x01') {
      *(undefined4 *)(unaff_EBP + -0x7e) = *(undefined4 *)(unaff_EBP + 0x10);
      *(undefined4 *)(unaff_EBP + -0x7a) = *(undefined4 *)(unaff_EBP + 0x14);
    }
  }
  *(double *)(unaff_EBP + -0x76) = (double)in_ST0;
  __87except((int)*(char *)(*(int *)(unaff_EBP + -0x94) + 0xe),(int *)(unaff_EBP + -0x8e),
             (ushort *)(unaff_EBP + -0xa4));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  cintrinexit
// 
// Library: Visual Studio 2019 Release

void cintrinexit(void)

{
  char cVar1;
  ushort uVar2;
  int unaff_EBP;
  ushort in_FPUStatusWord;
  float10 in_ST0;
  
  if (_DAT_10045880 != 0) {
    return;
  }
  *(double *)(unaff_EBP + -0x2d0) = (double)in_ST0;
  cVar1 = *(char *)(unaff_EBP + -0x90);
  if (cVar1 != '\0') {
    if (cVar1 == -1) {
      uVar2 = *(ushort *)(unaff_EBP + -0x2ca) & 0x7ff0;
    }
    else {
      if (cVar1 != -2) {
        if (cVar1 == '\0') {
          return;
        }
        *(int *)(unaff_EBP + -0x8e) = (int)cVar1;
        goto LAB_1000c638;
      }
      uVar2 = *(ushort *)(unaff_EBP + -0x2ca) & 0x7ff0;
      if (uVar2 == 0) {
        *(undefined4 *)(unaff_EBP + -0x8e) = 4;
        in_ST0 = (float10)fscale(in_ST0,(float10)1536.0);
        if (ABS(in_ST0) < (float10)2.225073858507201e-308) {
          in_ST0 = in_ST0 * (float10)0.0;
        }
        goto LAB_1000c638;
      }
    }
    if (uVar2 == 0x7ff0) {
      *(undefined4 *)(unaff_EBP + -0x8e) = 3;
      in_ST0 = (float10)fscale(in_ST0,(float10)-1536.0);
      if ((float10)1.797693134862316e+308 < ABS(in_ST0)) {
        in_ST0 = in_ST0 * (float10)INFINITY;
      }
      goto LAB_1000c638;
    }
  }
  if ((*(ushort *)(unaff_EBP + -0xa4) & 0x20) != 0) {
    return;
  }
  if ((in_FPUStatusWord & 0x20) == 0) {
    return;
  }
  *(undefined4 *)(unaff_EBP + -0x8e) = 8;
LAB_1000c638:
  *(int *)(unaff_EBP + -0x8a) = *(int *)(unaff_EBP + -0x94) + 1;
  if ((*(byte *)(unaff_EBP + -0x2c8) & 1) == 0) {
    *(undefined4 *)(unaff_EBP + -0x86) = *(undefined4 *)(unaff_EBP + 8);
    *(undefined4 *)(unaff_EBP + -0x82) = *(undefined4 *)(unaff_EBP + 0xc);
    if (*(char *)(*(int *)(unaff_EBP + -0x94) + 0xd) != '\x01') {
      *(undefined4 *)(unaff_EBP + -0x7e) = *(undefined4 *)(unaff_EBP + 0x10);
      *(undefined4 *)(unaff_EBP + -0x7a) = *(undefined4 *)(unaff_EBP + 0x14);
    }
  }
  *(double *)(unaff_EBP + -0x76) = (double)in_ST0;
  __87except((int)*(char *)(*(int *)(unaff_EBP + -0x94) + 0xe),(int *)(unaff_EBP + -0x8e),
             (ushort *)(unaff_EBP + -0xa4));
  return;
}



// Library Function - Single Match
//  __ctrandisp1
// 
// Library: Visual Studio

void __cdecl __ctrandisp1(uint param_1,int param_2)

{
  undefined4 extraout_ECX;
  int extraout_EDX;
  
  __fload(param_1,param_2);
  __trandisp1(extraout_ECX,extraout_EDX);
  FUN_1000c54c();
  return;
}



// Library Function - Single Match
//  __fload
// 
// Library: Visual Studio

float10 __cdecl __fload(uint param_1,int param_2)

{
  float10 fVar1;
  
  if ((param_2._2_2_ & 0x7ff0) == 0x7ff0) {
    fVar1 = (float10)(CONCAT28(param_2._2_2_,CONCAT44(param_2 << 0xb | param_1 >> 0x15,param_1)) |
                     0x7fff);
  }
  else {
    fVar1 = (float10)(double)CONCAT26(param_2._2_2_,CONCAT24((undefined2)param_2,param_1));
  }
  return fVar1;
}



// Library Function - Single Match
//  __trandisp1
// 
// Library: Visual Studio

void __fastcall __trandisp1(undefined4 param_1,int param_2)

{
  float10 fVar1;
  byte bVar2;
  undefined2 uVar3;
  int unaff_EBP;
  float10 in_ST0;
  
  if (*(char *)(param_2 + 0xe) == '\x05') {
    uVar3 = (undefined2)
            CONCAT31((uint3)((byte)((uint)*(ushort *)(unaff_EBP + -0xa4) >> 8) & 0xfe | 2),0x3f);
  }
  else {
    uVar3 = 0x133f;
  }
  *(undefined2 *)(unaff_EBP + -0xa2) = uVar3;
  fVar1 = (float10)0;
  *(int *)(unaff_EBP + -0x94) = param_2;
  *(ushort *)(unaff_EBP + -0xa0) =
       (ushort)(in_ST0 < fVar1) << 9 | (ushort)(in_ST0 != fVar1) << 10 |
       (ushort)(in_ST0 == fVar1) << 0xe;
  *(undefined *)(unaff_EBP + -0x90) = 0;
  bVar2 = (char)(*(char *)(unaff_EBP + -0x9f) << 1) >> 1;
                    // WARNING: Could not recover jumptable at 0x1000c775. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(param_2 + (char)(&DAT_1002432c)[(byte)((bVar2 & 7) << 1 | (char)bVar2 < '\0')] + 0x10
              ))();
  return;
}



// Library Function - Single Match
//  __trandisp2
// 
// Libraries: Visual Studio 2010 Debug, Visual Studio 2010 Release, Visual Studio 2012 Debug, Visual
// Studio 2012 Release

void __fastcall __trandisp2(undefined4 param_1,int param_2)

{
  float10 fVar1;
  char cVar2;
  byte bVar3;
  undefined2 uVar4;
  int unaff_EBP;
  float10 in_ST0;
  float10 in_ST1;
  
  if (*(char *)(param_2 + 0xe) == '\x05') {
    uVar4 = (undefined2)
            CONCAT31((uint3)((byte)((uint)*(ushort *)(unaff_EBP + -0xa4) >> 8) & 0xfe | 2),0x3f);
  }
  else {
    uVar4 = 0x133f;
  }
  *(undefined2 *)(unaff_EBP + -0xa2) = uVar4;
  fVar1 = (float10)0;
  *(int *)(unaff_EBP + -0x94) = param_2;
  *(ushort *)(unaff_EBP + -0xa0) =
       (ushort)(in_ST0 < fVar1) << 9 | (ushort)(in_ST0 != fVar1) << 10 |
       (ushort)(in_ST0 == fVar1) << 0xe;
  *(undefined *)(unaff_EBP + -0x90) = 0;
  fVar1 = (float10)0;
  *(ushort *)(unaff_EBP + -0xa0) =
       (ushort)(in_ST1 < fVar1) << 9 | (ushort)(in_ST1 != fVar1) << 10 |
       (ushort)(in_ST1 == fVar1) << 0xe;
  bVar3 = (char)(*(char *)(unaff_EBP + -0x9f) << 1) >> 1;
  cVar2 = (char)(*(char *)(unaff_EBP + -0x9f) << 1) >> 1;
                    // WARNING: Could not recover jumptable at 0x1000c801. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(param_2 + (char)((&DAT_1002432c)[(byte)(cVar2 << 1 | cVar2 < '\0') & 0xf] |
                               (&DAT_1002432c)[(byte)((bVar3 & 7) << 1 | (char)bVar3 < '\0')] << 2)
              + 0x10))();
  return;
}



float10 FUN_1000c814(void)

{
  return (float10)0;
}



float10 FUN_1000c84d(void)

{
  int unaff_EBP;
  float10 in_ST0;
  unkbyte10 in_ST1;
  
  *(unkbyte10 *)(unaff_EBP + -0x9e) = in_ST1;
  if ((*(byte *)(unaff_EBP + -0x97) & 0x40) == 0) {
    *(undefined *)(unaff_EBP + -0x90) = 1;
  }
  else {
    *(undefined *)(unaff_EBP + -0x90) = 7;
  }
  return *(float10 *)(unaff_EBP + -0x9e) + in_ST0;
}



float10 FUN_1000c877(void)

{
  float10 fVar1;
  int unaff_EBP;
  unkbyte10 in_ST0;
  float10 fVar2;
  float10 in_ST1;
  
  *(unkbyte10 *)(unaff_EBP + -0x9e) = in_ST0;
  fVar1 = *(float10 *)(unaff_EBP + -0x9e);
  fVar2 = fVar1;
  if ((*(byte *)(unaff_EBP + -0x97) & 0x40) != 0) {
    *(float10 *)(unaff_EBP + -0x9e) = in_ST1;
    fVar2 = *(float10 *)(unaff_EBP + -0x9e);
    in_ST1 = fVar1;
    if ((*(byte *)(unaff_EBP + -0x97) & 0x40) != 0) {
      *(undefined *)(unaff_EBP + -0x90) = 7;
      goto LAB_1000c8b3;
    }
  }
  *(undefined *)(unaff_EBP + -0x90) = 1;
LAB_1000c8b3:
  return fVar2 + in_ST1;
}



undefined1 (*) [10] __cdecl FUN_1000c8b6(undefined1 (*__return_storage_ptr__) [10])

{
  undefined1 (*in_EAX) [10];
  int unaff_EBP;
  
  if (*(char *)(unaff_EBP + -0x90) < '\x01') {
    *(undefined *)(unaff_EBP + -0x90) = 1;
  }
  return in_EAX;
}



// Library Function - Single Match
//  ___sse2_sin2
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017

void ___sse2_sin2(void)

{
  ulonglong uVar1;
  int iVar2;
  int in_XMM0_Da;
  uint in_XMM0_Db;
  int in_XMM0_Dc;
  uint in_XMM0_Dd;
  double local_80;
  double dStack120;
  uint uStack108;
  int iStack104;
  uint uStack100;
  undefined4 local_60;
  uint uStack92;
  undefined4 uStack88;
  uint uStack84;
  
  iVar2 = movmskpd(&stack0x00000000,
                   CONCAT412(-(uint)(0x40ff4000 < (in_XMM0_Dd & 0x7fffffff)),
                             CONCAT48(-(uint)(0 < in_XMM0_Dc),
                                      CONCAT44(-(uint)(0x40ff4000 < (in_XMM0_Db & 0x7fffffff)),
                                               -(uint)(0 < in_XMM0_Da)))));
  if (iVar2 != 0) {
    uStack108 = in_XMM0_Db & 0x7fffffff;
    uStack100 = in_XMM0_Dd & 0x7fffffff;
    uStack92 = in_XMM0_Db & 0x80000000;
    uStack84 = in_XMM0_Dd & 0x80000000;
    local_60 = 0;
    uStack88 = 0;
    uVar1 = CONCAT44(in_XMM0_Db,in_XMM0_Da) & 0x7fffffffffffffff;
    iStack104 = in_XMM0_Dc;
    ___common_sin_reduction_LA((int)uVar1,(uint)(uVar1 >> 0x20),&local_80);
    ___common_sin_reduction_LA(iStack104,uStack100,&dStack120);
  }
  return;
}



// Library Function - Single Match
//  _TestInt
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release, Visual Studio 2017 Debug, Visual
// Studio 2017 Release

int __cdecl _TestInt(uint param_1,uint param_2)

{
  byte bVar1;
  int iVar2;
  uint uVar3;
  
  uVar3 = param_2 & 0x7fffffff;
  if ((uVar3 | param_1) == 0) {
    return 2;
  }
  if (uVar3 + 0xc0100000 < 0x40000000) {
    if (0x433fffff < uVar3) {
      return 2;
    }
    iVar2 = (int)((param_2 & 0x7ff00000) + 0xc0100000) >> 0x14;
    bVar1 = (byte)iVar2;
    if (iVar2 < 0x15) {
      if (((uVar3 << (bVar1 & 0x1f)) << 0xc | param_1) == 0) {
        return 1 - ((int)~(uVar3 << (bVar1 + 0xb & 0x1f)) >> 0x1f);
      }
    }
    else {
      uVar3 = param_1 << (bVar1 + 0xb & 0x1f);
      if ((uVar3 & 0x7fffffff) == 0) {
        return 1 - ((int)~uVar3 >> 0x1f);
      }
    }
  }
  return 0;
}



// Library Function - Single Match
//  __vmldPow_HA_scalar
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release, Visual Studio 2017 Debug, Visual
// Studio 2017 Release

float10 __cdecl __vmldPow_HA_scalar(uint param_1,uint param_2,uint param_3,uint param_4)

{
  bool bVar1;
  bool bVar2;
  bool bVar3;
  bool bVar4;
  bool bVar5;
  uint uVar6;
  byte bVar7;
  int iVar8;
  uint uVar9;
  uint uVar10;
  uint uVar11;
  bool bVar12;
  double dVar13;
  
  uVar10 = param_2 & 0x7fffffff;
  uVar9 = param_4 & 0x7fffffff;
  uVar11 = param_4 & 0x80000000;
  bVar4 = uVar10 == 0x7ff00000 && param_1 == 0;
  bVar3 = uVar9 == 0x7ff00000 && param_3 == 0;
  if ((param_4 & 0x7ff00000) == 0x7ff00000) {
    bVar1 = uVar9 != 0x7ff00000 || param_3 != 0;
  }
  else {
    bVar1 = false;
  }
  bVar12 = (uVar10 | param_1) == 0;
  bVar5 = uVar10 == 0x3ff00000 && param_1 == 0;
  uVar6 = param_4 & 0x7fffffff;
  if ((param_3 | uVar6) == 0) {
LAB_1000cf09:
    iVar8 = 2;
  }
  else {
    if (0x3fffffff < uVar6 + 0xc0100000) goto LAB_1000cee8;
    if (0x433fffff < uVar6) goto LAB_1000cf09;
    iVar8 = (int)((param_4 & 0x7ff00000) + 0xc0100000) >> 0x14;
    bVar7 = (byte)iVar8;
    if (iVar8 < 0x15) {
      if (((uVar6 << (bVar7 & 0x1f)) << 0xc | param_3) == 0) {
        iVar8 = 1 - ((int)~(uVar6 << (bVar7 + 0xb & 0x1f)) >> 0x1f);
      }
      else {
LAB_1000cee8:
        iVar8 = 0;
      }
    }
    else {
      uVar6 = param_3 << (bVar7 + 0xb & 0x1f);
      if ((uVar6 & 0x7fffffff) != 0) goto LAB_1000cee8;
      iVar8 = 1 - ((int)~uVar6 >> 0x1f);
    }
  }
  if ((uVar10 < 0x3ff00001) && ((uVar10 != 0x3ff00000 || (param_1 == 0)))) {
    bVar2 = false;
  }
  else {
    bVar2 = true;
  }
  if ((uVar9 | param_3) == 0) {
    return (float10)1.0;
  }
  if ((param_2 & 0x80000000) == 0) {
    if (bVar5) {
      return (float10)1.0;
    }
  }
  else if ((bVar5) && (bVar3)) {
    return (float10)1.0;
  }
  if ((param_2 & 0x7ff00000) == 0x7ff00000 && (uVar10 != 0x7ff00000 || param_1 != 0)) {
    return (float10)(double)CONCAT44(param_2,param_1);
  }
  if (bVar1) {
    return (float10)(double)CONCAT44(param_4,param_3);
  }
  if (((bVar12) && (uVar11 != 0)) && (bVar3)) {
    __raise_zerodivide();
    return (float10)INFINITY;
  }
  if (bVar2) {
    if (uVar11 == 0) {
      if (bVar3) {
        return (float10)INFINITY;
      }
    }
    else if (bVar3) {
      return (float10)0.0;
    }
  }
  if (uVar10 < 0x3ff00000) {
    if (uVar11 == 0) {
      if (bVar3) {
        return (float10)0.0;
      }
    }
    else if (bVar3) {
      return (float10)INFINITY;
    }
  }
  if ((param_2 & 0x80000000) == 0) {
    if (bVar4) {
      if (uVar11 == 0) {
        dVar13 = INFINITY;
      }
      else {
        dVar13 = 0.0;
      }
      return (float10)dVar13;
    }
    if (!bVar12) goto LAB_1000d185;
    if (uVar11 != 0) {
      if (iVar8 == 1) {
        __raise_zerodivide();
        return (float10)INFINITY;
      }
      goto LAB_1000d11b;
    }
  }
  else {
    if (bVar4) {
      if (uVar11 == 0) {
        dVar13 = -INFINITY;
        if (iVar8 != 1) {
          dVar13 = INFINITY;
        }
        return (float10)dVar13;
      }
      dVar13 = 0.0;
      if (iVar8 == 1) {
        dVar13 = -0.0;
      }
      return (float10)dVar13;
    }
    if ((!(bool)(bVar3 | bVar1)) && (iVar8 == 0)) {
      if (!bVar12) {
        __raise_invalid();
        return (float10)-NAN;
      }
    }
    else if (!bVar12) goto LAB_1000d185;
    if (uVar11 != 0) {
      if (iVar8 == 1) {
        __raise_zerodivide();
        return (float10)-INFINITY;
      }
LAB_1000d11b:
      __raise_zerodivide();
      return (float10)INFINITY;
    }
    if (iVar8 == 1) {
      return (float10)-0.0;
    }
  }
  if (!(bool)(bVar3 | bVar1)) {
    return (float10)0.0;
  }
LAB_1000d185:
  return (float10)0.0;
}



// Library Function - Single Match
//  __raise_zerodivide
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release, Visual Studio 2017 Debug, Visual
// Studio 2017 Release

void __raise_zerodivide(void)

{
  return;
}



// WARNING: Unable to track spacebase fully for stack
// WARNING: Heritage AFTER dead removal. Example location: s0xfffffff4 : 0x1000d98f
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// WARNING: Restarted to delay deadcode elimination for space: stack
// Library Function - Single Match
//  _pow_scalar
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release, Visual Studio 2017 Debug, Visual
// Studio 2017 Release

undefined8 _pow_scalar(void)

{
  uint uVar1;
  int iVar2;
  double in_XMM0_Qa;
  double dVar3;
  ulonglong in_XMM1_Qa;
  double dVar4;
  double dVar5;
  double dVar6;
  double dVar7;
  undefined auVar8 [16];
  int iStack204;
  double local_c0;
  uint local_b0;
  uint uStack172;
  uint local_a8;
  uint uStack164;
  uint uStack92;
  undefined4 uStack12;
  undefined4 uStack4;
  
  iStack204 = 0;
  local_c0 = 1.0;
  uStack164 = (uint)(in_XMM1_Qa >> 0x20);
  local_a8 = (uint)in_XMM1_Qa;
  local_b0 = SUB84(in_XMM0_Qa,0);
  uStack172 = (uint)((ulonglong)in_XMM0_Qa >> 0x20);
  if (((local_a8 | uStack164 & 0x7fffffff) != 0) && ((uStack164 & 0x7fffffff) < 0x7ff00000)) {
    if (-0x200001 < (int)(uStack172 + 0x7ff00000)) {
      if ((0x7fefffff < (uStack172 & 0x7fffffff)) || ((local_b0 | uStack172 & 0x7fffffff) == 0))
      goto LAB_1000d8d8;
      if (uStack172 < 0x100000) {
        in_XMM0_Qa = in_XMM0_Qa * 4503599627370496.0;
        iStack204 = 0x34;
      }
      else {
        uVar1 = _TestInt(local_a8,uStack164);
        if (uVar1 == 0) goto LAB_1000d8d8;
        in_XMM0_Qa = (double)((ulonglong)in_XMM0_Qa ^ SUB168(_DAT_100244f0,0));
        if ((uVar1 & 1) != 0) {
          local_c0 = -1.0;
        }
        if ((uStack172 & 0x7fffffff) < 0x100001) {
          in_XMM0_Qa = in_XMM0_Qa * 4503599627370496.0;
          iStack204 = 0x34;
        }
      }
    }
    uVar1 = ((uint)((ulonglong)in_XMM0_Qa >> 0x20) & 0xffe00) + 0x200 >> 10;
    dVar5 = (double)((ulonglong)in_XMM0_Qa & SUB168(_DAT_10024360,0) | SUB168(_DAT_10024380,0));
    dVar4 = *(double *)(&DAT_10024590 + uVar1 * 8);
    dVar6 = ((double)((ulonglong)
                      (((int)((longlong)in_XMM0_Qa + -0x3fe7fe0000000000 >> 0x34) - iStack204) +
                      0x41380000) << 0x20) - 1572864.0) + *(double *)(&DAT_100265a0 + uVar1 * 0x10);
    dVar3 = dVar4 * dVar5 + -1.442694902420044;
    dVar4 = ((double)((ulonglong)dVar5 & 0xfffffffff8000000) * dVar4 - dVar4 * dVar5) +
            (dVar5 - (double)((ulonglong)dVar5 & 0xfffffffff8000000)) * dVar4;
    dVar7 = dVar6 + dVar3;
    dVar5 = dVar4 + dVar3;
    uStack92 = (uint)((ulonglong)dVar7 >> 0x20);
    if ((uStack92 & 0x7ff00000) + (uStack164 & 0x7ff00000) < 0x80900001) {
      dVar4 = (double)(in_XMM1_Qa & SUB168(_DAT_100243b0,0)) *
              (double)((ulonglong)
                       (dVar7 + dVar4 +
                       (dVar7 - (dVar7 + dVar4)) + dVar4 + (dVar6 - dVar7) + dVar3 +
                       *(double *)(&DAT_100265a8 + uVar1 * 0x10) +
                       ((((((dVar5 * 0.01584364190639705 + -0.02666713164981555) * dVar5 +
                           0.04616704187202374) * dVar5 + -0.08325619496072671) * dVar5 +
                         0.160151050752973) * dVar5 + -0.3465736568077919) * dVar5 +
                       9.597935033233511e-08) * dVar5) & SUB168(_DAT_100243b0,0)) + 52776558133248.0
      ;
      uVar1 = SUB84(dVar4,0);
      if (((((int)uVar1 < 0x20080) && ((int)uVar1 < 0x1ff80)) && (-0x21a00 < (int)uVar1)) &&
         ((int)uVar1 < -0x1e1ff)) {
        auVar8 = ZEXT816((ulonglong)
                         (local_c0 * 3.851859888774472e-34 *
                          *(double *)(&DAT_1002a5d0 + (uVar1 & 0x7f) * 0x10) *
                         (double)((ulonglong)
                                  ((int)((ulonglong)(((longlong)dVar4 << 0x2d) + 0x6f0000000000000)
                                        >> 0x20) + 0x3ff00000) << 0x20 & SUB168(_DAT_100243d0,0))))
                 & _DAT_10024530;
        movmskpd((uVar1 & 0x7f) * 2,
                 CONCAT412(-(uint)(0x100000 < SUB164(auVar8 >> 0x60,0)),
                           CONCAT48(-(uint)(0 < SUB164(auVar8 >> 0x40,0)),
                                    CONCAT44(-(uint)(0x100000 < SUB164(auVar8 >> 0x20,0)),
                                             -(uint)(0 < SUB164(auVar8,0))))));
      }
      goto LAB_1000d98c;
    }
    auVar8 = ZEXT816(in_XMM1_Qa);
    iVar2 = _TestInt(local_a8,uStack164);
    if ((uStack164 ^ uStack92) < 0x80000000) {
      if (uStack172 < 0x80000000) goto LAB_1000d98c;
      if (iVar2 != 0) {
        pinsrw(auVar8,iVar2,0);
        goto LAB_1000d98c;
      }
    }
    else {
      if (uStack172 < 0x80000000) goto LAB_1000d98c;
      if (iVar2 != 0) {
        pinsrw(auVar8,iVar2,0);
        goto LAB_1000d98c;
      }
    }
  }
LAB_1000d8d8:
  __vmldPow_HA_scalar(local_b0,uStack172,local_a8,uStack164);
LAB_1000d98c:
  return CONCAT44(uStack12,uStack4);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___sse2_pow2
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017

undefined8 ___sse2_pow2(void)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  undefined in_XMM0 [16];
  undefined auVar4 [12];
  double in_XMM1_Qa;
  double in_XMM1_Qb;
  double dVar5;
  double dVar6;
  undefined auVar7 [16];
  double dVar8;
  double dVar9;
  uint uVar13;
  double dVar10;
  double dVar11;
  double dVar12;
  double dVar14;
  double dVar15;
  undefined4 uVar17;
  undefined auVar16 [16];
  double dVar18;
  double dVar19;
  double dVar20;
  double dVar21;
  double dVar22;
  undefined8 uVar23;
  int local_d0;
  int iStack204;
  int iStack200;
  int iStack196;
  uint local_c0;
  uint uStack188;
  uint uStack184;
  uint uStack180;
  uint local_60;
  
  auVar4 = SUB1612(in_XMM0 >> 0x20,0) & SUB1612(_DAT_1002a5b0 >> 0x20,0);
  auVar7 = ZEXT1216(auVar4) << 0x20;
  uVar3 = SUB124(auVar4,0) + 0x200;
  local_60 = 0;
  uVar1 = uVar3 >> 10;
  uVar3 = (uint)(ushort)SUB168(CONCAT412(SUB164(auVar7 >> 0x60,0) + 0x200,
                                         CONCAT48(SUB164(auVar7 >> 0x40,0),
                                                  SUB128(CONCAT84(SUB168(auVar7 >> 0x40,0),uVar3),0)
                                                  << 0x20)) >> 0x6a,0);
  dVar11 = *(double *)(&DAT_10024590 + uVar1 * 8);
  dVar12 = *(double *)(&DAT_10024590 + uVar3 * 8);
  iVar2 = uVar1 * 0x10;
  auVar7 = in_XMM0 & _DAT_10024360 | _DAT_10024380;
  dVar15 = SUB168(auVar7 >> 0x40,0);
  uVar13 = (int)(SUB168(in_XMM0,0) + -0x3fe7fe0000000000 >> 0x34) + 0x41380000;
  dVar5 = SUB168(auVar7,0) * dVar11;
  dVar8 = dVar15 * dVar12;
  uVar1 = SUB162(in_XMM0 >> 0x30,0) + 0x7ffffff0;
  if (((int)uVar1 < -0x7fff8020) && ((int)(SUB162(in_XMM0 >> 0x70,0) + 0x7ffffff0) < -0x7fff8020)) {
    uVar17 = SUB84(*(double *)(&DAT_100265a0 + iVar2),0);
    dVar10 = ((double)((ulonglong)uVar13 << 0x20) - 1572864.0) + *(double *)(&DAT_100265a0 + iVar2);
    dVar14 = (SUB168(CONCAT412((int)(SUB168(in_XMM0 >> 0x40,0) + -0x3fe7fe0000000000 >> 0x34) +
                               0x41380000,ZEXT412(uVar13) << 0x20) >> 0x40,0) - 1572864.0) +
             SUB168(*(undefined (*) [16])(&DAT_100265a0 + uVar3 * 0x10),0);
    auVar16 = shufpd(CONCAT412(uVar17,CONCAT48(uVar17,*(undefined8 *)(&DAT_100265a8 + iVar2))),
                     *(undefined (*) [16])(&DAT_100265a0 + uVar3 * 0x10),2);
    dVar18 = SUB168(_DAT_100243b0 & auVar7,0);
    dVar19 = SUB168((_DAT_100243b0 & auVar7) >> 0x40,0);
    dVar6 = dVar5 + -1.442694902420044;
    dVar9 = dVar8 + -1.442694902420044;
    dVar18 = (dVar18 * dVar11 - dVar5) + (SUB168(auVar7,0) - dVar18) * dVar11;
    dVar20 = (dVar19 * dVar12 - dVar8) + (dVar15 - dVar19) * dVar12;
    dVar11 = dVar10 + dVar6;
    dVar5 = dVar14 + dVar9;
    dVar12 = dVar11 + dVar18;
    dVar15 = dVar5 + dVar20;
    dVar8 = dVar18 + dVar6;
    dVar21 = dVar20 + dVar9;
    dVar19 = dVar8 * dVar8;
    dVar22 = dVar21 * dVar21;
    uStack188 = (uint)((ulonglong)in_XMM1_Qa >> 0x20);
    if ((((uint)((ulonglong)dVar12 >> 0x20) & 0x7ff00000) + (uStack188 & 0x7ff00000) < 0x80900001)
       && (uStack180 = (uint)((ulonglong)in_XMM1_Qb >> 0x20),
          ((uint)((ulonglong)dVar15 >> 0x20) & 0x7ff00000) + (uStack180 & 0x7ff00000) < 0x80900001))
    {
      local_c0 = SUB84(in_XMM1_Qa,0);
      if (((local_c0 | uStack188 & 0x7fffffff) != 0) && ((uStack188 & 0x7fffffff) < 0x7ff00000)) {
        uStack184 = SUB84(in_XMM1_Qb,0);
        if (((uStack184 | uStack180 & 0x7fffffff) != 0) && ((uStack180 & 0x7fffffff) < 0x7ff00000))
        {
          dVar5 = (double)((ulonglong)in_XMM1_Qb & 0xfffffffff8000000) *
                  (double)((ulonglong)
                           (dVar15 + (dVar5 - dVar15) + dVar20 + (dVar14 - dVar5) + dVar9 +
                                     SUB168(auVar16 >> 0x40,0) +
                                     (((dVar22 * 0.01584364190639705 + 0.04616704187202374) * dVar22
                                      + 0.160151050752973) * dVar22 + 9.597935033233511e-08) *
                                     dVar21 + ((dVar22 * -0.02666713164981555 + -0.08325619496072671
                                               ) * dVar22 + -0.3465736568077919) * dVar22) &
                          0xfffffffff8000000) + 52776558133248.0;
          uVar3 = SUB84((double)((ulonglong)in_XMM1_Qa & 0xfffffffff8000000) *
                        (double)((ulonglong)
                                 (dVar12 + (dVar11 - dVar12) + dVar18 + (dVar10 - dVar11) + dVar6 +
                                           SUB168(auVar16,0) +
                                           (((dVar19 * 0.01584364190639705 + 0.04616704187202374) *
                                             dVar19 + 0.160151050752973) * dVar19 +
                                           9.597935033233511e-08) * dVar8 +
                                           ((dVar19 * -0.02666713164981555 + -0.08325619496072671) *
                                            dVar19 + -0.3465736568077919) * dVar19) &
                                0xfffffffff8000000) + 52776558133248.0,0);
          uVar1 = (uint)(ushort)((ulonglong)dVar5 >> 0x10) << 0x10;
          iVar2 = SUB84(dVar5,0);
          if (((int)uVar3 < 0x1ff80) &&
             (((iVar2 < 0x1ff80 && (-0x1e200 < (int)uVar3)) && (-0x1e200 < iVar2)))) {
            return CONCAT44(uVar1,(uVar3 & 0x7f) * 2);
          }
        }
      }
    }
  }
  else {
    local_d0 = SUB164(in_XMM0,0);
    iStack204 = SUB164(in_XMM0 >> 0x20,0);
    iStack200 = SUB164(in_XMM0 >> 0x40,0);
    iStack196 = SUB164(in_XMM0 >> 0x60,0);
    auVar7 = CONCAT412(-(uint)(iStack196 == 0),
                       CONCAT48(-(uint)(iStack200 == 0),
                                CONCAT44(-(uint)(iStack204 == 0),-(uint)(local_d0 == 0)))) &
             CONCAT88(-(ulonglong)(0.0 < in_XMM1_Qb),-(ulonglong)(0.0 < in_XMM1_Qa)) &
             CONCAT88(-(ulonglong)(in_XMM1_Qb <= INFINITY),-(ulonglong)(in_XMM1_Qa <= INFINITY)) &
             CONCAT412(-(uint)(iStack200 == 0),
                       CONCAT48(-(uint)(iStack196 == 0),
                                CONCAT44(-(uint)(local_d0 == 0),-(uint)(iStack204 == 0))));
    uVar1 = (uint)(ushort)((ushort)(SUB161(auVar7 >> 7,0) & 1) |
                           (ushort)(SUB161(auVar7 >> 0xf,0) & 1) << 1 |
                           (ushort)(SUB161(auVar7 >> 0x17,0) & 1) << 2 |
                           (ushort)(SUB161(auVar7 >> 0x1f,0) & 1) << 3 |
                           (ushort)(SUB161(auVar7 >> 0x27,0) & 1) << 4 |
                           (ushort)(SUB161(auVar7 >> 0x2f,0) & 1) << 5 |
                           (ushort)(SUB161(auVar7 >> 0x37,0) & 1) << 6 |
                           (ushort)(SUB161(auVar7 >> 0x3f,0) & 1) << 7 |
                           (ushort)(SUB161(auVar7 >> 0x47,0) & 1) << 8 |
                           (ushort)(SUB161(auVar7 >> 0x4f,0) & 1) << 9 |
                           (ushort)(SUB161(auVar7 >> 0x57,0) & 1) << 10 |
                           (ushort)(SUB161(auVar7 >> 0x5f,0) & 1) << 0xb |
                           (ushort)(SUB161(auVar7 >> 0x67,0) & 1) << 0xc |
                           (ushort)(SUB161(auVar7 >> 0x6f,0) & 1) << 0xd |
                           (ushort)(SUB161(auVar7 >> 0x77,0) & 1) << 0xe |
                          (ushort)SUB161(auVar7 >> 0x7f,0) << 0xf);
    local_60 = uVar1;
  }
  if ((local_60 & 0xf) == 0) {
    uVar23 = _pow_scalar();
    uVar1 = (uint)((ulonglong)uVar23 >> 0x20);
  }
  uVar23 = CONCAT44(uVar1,local_60);
  if ((local_60 & 0xf00) == 0) {
    uVar23 = _pow_scalar();
  }
                    // WARNING: Read-only address (ram,0x10024360) is written
                    // WARNING: Read-only address (ram,0x10024380) is written
                    // WARNING: Read-only address (ram,0x100243b0) is written
                    // WARNING: Read-only address (ram,0x1002a5b0) is written
  return uVar23;
}



// Library Function - Single Match
//  __raise_invalid
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release, Visual Studio 2017 Debug, Visual
// Studio 2017 Release

void __raise_invalid(void)

{
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___sse2_powf4
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release, Visual Studio 2017 Debug, Visual
// Studio 2017 Release

void ___sse2_powf4(void)

{
  int iVar1;
  float in_XMM0_Da;
  uint uVar2;
  float in_XMM0_Db;
  undefined8 uVar3;
  float in_XMM0_Dc;
  float in_XMM0_Dd;
  double dVar4;
  double dVar5;
  undefined in_XMM1 [16];
  undefined8 uVar7;
  undefined auVar6 [16];
  double dVar8;
  double dVar9;
  double dVar10;
  undefined8 uVar11;
  double dVar12;
  double dVar13;
  double dVar14;
  double dVar15;
  undefined auVar16 [16];
  double dVar17;
  uint uVar19;
  double dVar18;
  float local_100 [4];
  undefined local_f0 [8];
  int iStack232;
  int iStack228;
  double local_e0;
  double dStack216;
  double local_d0;
  undefined8 uStack200;
  float local_c0 [4];
  undefined local_b0 [16];
  double local_a0;
  double dStack152;
  double local_90;
  double dStack136;
  undefined8 local_80;
  undefined8 uStack120;
  
  uVar7 = SUB168(in_XMM1 >> 0x40,0);
  _local_f0 = _DAT_100488c0 & in_XMM1;
  uVar19 = (uint)((ulonglong)(double)in_XMM0_Db >> 0x20);
  auVar6 = CONCAT412(uVar19,CONCAT48(SUB84((double)in_XMM0_Db,0),(double)in_XMM0_Da)) &
           (undefined  [16])0xffffffffffffffff | _DAT_1004ba80;
  auVar16 = CONCAT412((int)((ulonglong)(double)in_XMM0_Dd >> 0x20),
                      CONCAT48(SUB84((double)in_XMM0_Dd,0),(double)in_XMM0_Dc)) &
            (undefined  [16])0xffffffffffffffff | _DAT_1004ba80;
  dVar4 = SUB168(auVar6,0);
  dVar8 = SUB168(auVar6 >> 0x40,0);
  uVar11 = CONCAT44((float)dVar8,(float)dVar4);
  dVar13 = SUB168(auVar16,0);
  dVar15 = SUB168(auVar16 >> 0x40,0);
  uVar3 = CONCAT44((float)dVar15,(float)dVar13);
  auVar16 = rcpps(CONCAT88(uVar7,uVar7),CONCAT88(uVar11,uVar11));
  auVar6 = rcpps(_DAT_1004ba80,CONCAT88(uVar3,uVar3));
  dVar12 = ((double)SUB164(auVar16,0) + 6755399441055744.0) - 6755399441055744.0;
  dVar14 = ((double)SUB164(auVar16 >> 0x20,0) + 6755399441055744.0) - 6755399441055744.0;
  dVar9 = ((double)SUB164(auVar6,0) + 6755399441055744.0) - 6755399441055744.0;
  dVar10 = ((double)(float)((ulonglong)(double)SUB164(auVar6,0) >> 0x20) + 6755399441055744.0) -
           6755399441055744.0;
  dVar5 = dVar4 * dVar12 - 1.0;
  dVar8 = dVar8 * dVar14 - 1.0;
  local_e0 = dVar13 * dVar9 - 1.0;
  dStack216 = dVar15 * dVar10 - 1.0;
  uVar2 = (uint)((ulonglong)dVar10 >> 0x28);
  local_d0 = *(double *)((uint)((ulonglong)dVar9 >> 0x28) + 0xfc42980);
  uStack200 = *(undefined8 *)(uVar2 + 0xfc42980);
  auVar6 = CONCAT412((int)(-(ulonglong)(724.0 < dVar14) >> 0x20),
                     ZEXT412((uint)(-(ulonglong)(724.0 < dVar12) >> 0x20) & 0x408ff800) << 0x20) &
           (undefined  [16])0xffffffffffffffff | _DAT_1004bcc0;
  dVar4 = ((double)(uint)((ulonglong)(double)in_XMM0_Dc >> 0x34) -
          (double)((ulonglong)((uint)(-(ulonglong)(724.0 < dVar9) >> 0x20) & 0x408ff800) << 0x20 |
                  SUB168(_DAT_1004bcc0,0))) * 0.6931471805599453;
  dVar9 = (dVar5 + (dVar5 * 0.3333333333330837 + -0.499999999999888) * dVar5 * dVar5 +
           *(double *)((uint)((ulonglong)dVar12 >> 0x28) + 0xfc42980) +
          ((double)(uint)((ulonglong)(double)in_XMM0_Da >> 0x34) - SUB168(auVar6,0)) *
          0.6931471805599453) * (double)SUB164(in_XMM1,0);
  dVar10 = (dVar8 + (dVar8 * 0.3333333333330837 + -0.499999999999888) * dVar8 * dVar8 +
            *(double *)((uint)((ulonglong)dVar14 >> 0x28) + 0xfc42980) +
           ((double)(uVar19 >> 0x14) - SUB168(auVar6 >> 0x40,0)) * 0.6931471805599453) *
           (double)SUB164(in_XMM1 >> 0x20,0);
  dVar17 = (local_e0 + (local_e0 * 0.3333333333330837 + -0.499999999999888) * local_e0 * local_e0 +
            local_d0 + dVar4) * (double)SUB164(in_XMM1 >> 0x40,0);
  dVar18 = (dStack216 +
            (dStack216 * 0.3333333333330837 + -0.499999999999888) * dStack216 * dStack216 + local_d0
           + dVar4) * (double)SUB164(in_XMM1 >> 0x60,0);
  dVar13 = dVar9 * 2954.639443740597;
  dVar15 = dVar10 * 2954.639443740597;
  dVar4 = dVar17 * 2954.639443740597;
  dVar8 = dVar18 * 2954.639443740597;
  local_b0 = CONCAT412((int)((ulonglong)dVar8 >> 0x20),CONCAT48(SUB84(dVar8,0),dVar4));
  dVar12 = (dVar13 - 0.5) + 6755399441055744.0;
  dVar14 = (SUB168(CONCAT412((int)((ulonglong)dVar15 >> 0x20),CONCAT48(SUB84(dVar15,0),dVar13)) >>
                   0x40,0) - 0.5) + 6755399441055744.0;
  dVar5 = (dVar4 - 0.5) + 6755399441055744.0;
  dVar8 = (dVar8 - 0.5) + 6755399441055744.0;
  local_a0 = dVar12 - 6755399441055744.0;
  dStack152 = SUB168(CONCAT412((int)((ulonglong)dVar14 >> 0x20),CONCAT48(SUB84(dVar14,0),dVar12)) >>
                     0x40,0) - 6755399441055744.0;
  local_90 = dVar5 - 6755399441055744.0;
  dStack136 = SUB168(CONCAT412((int)((ulonglong)dVar8 >> 0x20),CONCAT48(SUB84(dVar8,0),dVar5)) >>
                     0x40,0) - 6755399441055744.0;
  local_f0._4_4_ = SUB164(_local_f0 >> 0x20,0);
  iStack232 = SUB164(_local_f0 >> 0x40,0);
  iStack228 = SUB164(_local_f0 >> 0x60,0);
  local_b0._8_8_ = SUB168(local_b0 >> 0x40,0);
  auVar6 = CONCAT412((int)((ulonglong)dVar18 >> 0x20),
                     CONCAT48((int)((ulonglong)dVar17 >> 0x20),
                              (ulonglong)dVar10 & 0xffffffff00000000 | (ulonglong)dVar9 >> 0x20)) &
           _DAT_1004ff80;
  uVar2 = movmskps(uVar2,CONCAT412(-(uint)(-0x1000001 < (int)in_XMM0_Dd + 0x7f800000),
                                   CONCAT48(-(uint)(-0x1000001 < (int)in_XMM0_Dc + 0x7f800000),
                                            CONCAT44(-(uint)(-0x1000001 <
                                                            (int)in_XMM0_Db + 0x7f800000),
                                                     -(uint)(-0x1000001 <
                                                            (int)in_XMM0_Da + 0x7f800000)))) |
                         CONCAT412(-(uint)((int)in_XMM0_Dd + 0x7f800000 == -0x1000001),
                                   CONCAT48(-(uint)((int)in_XMM0_Dc + 0x7f800000 == -0x1000001),
                                            CONCAT44(-(uint)((int)in_XMM0_Db + 0x7f800000 ==
                                                            -0x1000001),
                                                     -(uint)((int)in_XMM0_Da + 0x7f800000 ==
                                                            -0x1000001)))) |
                         CONCAT412(-(uint)(0x7f800000 < iStack228),
                                   CONCAT48(-(uint)(0x7f800000 < iStack232),
                                            CONCAT44(-(uint)(0x7f800000 < local_f0._4_4_),
                                                     -(uint)(0x7f800000 < local_f0._0_4_)))) |
                         CONCAT412(-(uint)(iStack228 == 0x7f800000),
                                   CONCAT48(-(uint)(iStack232 == 0x7f800000),
                                            CONCAT44(-(uint)(local_f0._4_4_ == 0x7f800000),
                                                     -(uint)(local_f0._0_4_ == 0x7f800000)))) |
                         CONCAT412(-(uint)(0x4059fe36 < SUB164(auVar6 >> 0x60,0)),
                                   CONCAT48(-(uint)(0x4059fe36 < SUB164(auVar6 >> 0x40,0)),
                                            CONCAT44(-(uint)(0x4059fe36 < SUB164(auVar6 >> 0x20,0)),
                                                     -(uint)(0x4059fe36 < SUB164(auVar6,0))))));
  local_80 = CONCAT44((float)(double)((longlong)
                                      ((dVar15 - dStack152) * 0.0003385080526823129 *
                                       *(double *)(&DAT_1004be00 + (SUB84(dVar14,0) & 0x7ff) * 8) +
                                      *(double *)(&DAT_1004be00 + (SUB84(dVar14,0) & 0x7ff) * 8)) +
                                     (((ulonglong)dVar14 >> 0xb) << 0x34)),
                      (float)(double)((longlong)
                                      ((dVar13 - local_a0) * 0.0003385080526823129 *
                                       *(double *)(&DAT_1004be00 + (SUB84(dVar12,0) & 0x7ff) * 8) +
                                      *(double *)(&DAT_1004be00 + (SUB84(dVar12,0) & 0x7ff) * 8)) +
                                     (((ulonglong)dVar12 >> 0xb) << 0x34)));
  uStack120 = CONCAT44((float)(double)((longlong)
                                       ((local_b0._8_8_ - dStack136) * 0.0003385080526823129 *
                                        *(double *)(&DAT_1004be00 + (SUB84(dVar8,0) & 0x7ff) * 8) +
                                       *(double *)(&DAT_1004be00 + (SUB84(dVar8,0) & 0x7ff) * 8)) +
                                      (((ulonglong)dVar8 >> 0xb) << 0x34)),
                       (float)(double)((longlong)
                                       ((dVar4 - local_90) * 0.0003385080526823129 *
                                        *(double *)(&DAT_1004be00 + (SUB84(dVar5,0) & 0x7ff) * 8) +
                                       *(double *)(&DAT_1004be00 + (SUB84(dVar5,0) & 0x7ff) * 8)) +
                                      (((ulonglong)dVar5 >> 0xb) << 0x34)));
  if ((uVar2 != 0) && (uVar2 != 0)) {
    iVar1 = 0;
    do {
      if ((1 << ((byte)iVar1 & 0x1f) & uVar2) != 0) {
        ___common_spow_cout_rare
                  (local_100 + iVar1,local_c0 + iVar1,(float *)((int)&local_80 + iVar1 * 4));
      }
      iVar1 = iVar1 + 1;
    } while (iVar1 < 0x20);
  }
  return;
}



// Library Function - Single Match
//  _strlen
// 
// Library: Visual Studio

size_t __cdecl _strlen(char *_Str)

{
  char cVar1;
  uint uVar2;
  uint *puVar3;
  uint *puVar4;
  
  uVar2 = (uint)_Str & 3;
  puVar3 = (uint *)_Str;
  while (uVar2 != 0) {
    cVar1 = *(char *)puVar3;
    puVar3 = (uint *)((int)puVar3 + 1);
    if (cVar1 == '\0') goto LAB_1000e223;
    uVar2 = (uint)puVar3 & 3;
  }
  do {
    do {
      puVar4 = puVar3;
      puVar3 = puVar4 + 1;
    } while (((*puVar4 ^ 0xffffffff ^ *puVar4 + 0x7efefeff) & 0x81010100) == 0);
    uVar2 = *puVar4;
    if ((char)uVar2 == '\0') {
      return (int)puVar4 - (int)_Str;
    }
    if ((char)(uVar2 >> 8) == '\0') {
      return (size_t)((int)puVar4 + (1 - (int)_Str));
    }
    if ((uVar2 & 0xff0000) == 0) {
      return (size_t)((int)puVar4 + (2 - (int)_Str));
    }
  } while ((uVar2 & 0xff000000) != 0);
LAB_1000e223:
  return (size_t)((int)puVar3 + (-1 - (int)_Str));
}



undefined4 __cdecl
FUN_1000e24b(size_t param_1,size_t *param_2,uint **param_3,uint *param_4,undefined4 *param_5)

{
  size_t sVar1;
  uint *puVar2;
  undefined4 uVar3;
  
  sVar1 = *param_2;
  if (param_1 == sVar1) {
    if (*param_3 == param_4) {
      puVar2 = FUN_10001770(sVar1,2);
      *param_3 = puVar2;
      if (puVar2 != (uint *)0x0) {
        *param_5 = 1;
        FID_conflict__memcpy(*param_3,param_4,*param_2);
LAB_1000e2a1:
        *param_2 = *param_2 << 1;
        goto LAB_1000e2a3;
      }
    }
    else {
      puVar2 = FUN_10001810(*param_3,sVar1,2);
      if (puVar2 != (uint *)0x0) {
        *param_3 = puVar2;
        goto LAB_1000e2a1;
      }
    }
    uVar3 = 0;
  }
  else {
LAB_1000e2a3:
    uVar3 = 1;
  }
  return uVar3;
}



uint __cdecl FUN_1000e2aa(byte param_1)

{
  int iVar1;
  uint uVar2;
  
  iVar1 = _isdigit((uint)param_1);
  uVar2 = (uint)(char)param_1;
  if (iVar1 == 0) {
    uVar2 = (uVar2 & 0xffffffdf) - 7;
  }
  return uVar2;
}



// Library Function - Single Match
//  __inc
// 
// Library: Visual Studio 2012 Release

uint __cdecl __inc(FILE *param_1)

{
  int *piVar1;
  uint uVar2;
  
  piVar1 = &param_1->_cnt;
  *piVar1 = *piVar1 + -1;
  if (*piVar1 < 0) {
    uVar2 = FUN_100148a0(param_1);
  }
  else {
    uVar2 = (uint)(byte)*param_1->_ptr;
    param_1->_ptr = param_1->_ptr + 1;
  }
  return uVar2;
}



// WARNING: Could not reconcile some variable overlaps

void __cdecl FUN_1000e2ed(FILE *param_1,byte *param_2,pthreadlocinfo *param_3,int **param_4)

{
  byte bVar1;
  FILE *pFVar2;
  int *piVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  code *pcVar7;
  int iVar8;
  uint uVar9;
  byte extraout_DL;
  byte extraout_DL_00;
  byte extraout_DL_01;
  byte extraout_DL_02;
  byte extraout_DL_03;
  byte extraout_DL_04;
  byte extraout_DL_05;
  byte extraout_DL_06;
  byte extraout_DL_07;
  byte extraout_DL_08;
  byte extraout_DL_09;
  byte extraout_DL_10;
  byte bVar10;
  byte extraout_DL_11;
  byte extraout_DL_12;
  byte extraout_DL_13;
  byte extraout_DL_14;
  byte extraout_DL_15;
  byte bVar11;
  undefined *puVar12;
  uint extraout_EDX;
  uint extraout_EDX_00;
  uint extraout_EDX_01;
  uint extraout_EDX_02;
  uint extraout_EDX_03;
  uint extraout_EDX_04;
  uint extraout_EDX_05;
  uint extraout_EDX_06;
  uint extraout_EDX_07;
  uint extraout_EDX_08;
  uint extraout_EDX_09;
  uint extraout_EDX_10;
  uint extraout_EDX_11;
  uint extraout_EDX_12;
  uint extraout_EDX_13;
  uint extraout_EDX_14;
  uint extraout_EDX_15;
  uint extraout_EDX_16;
  uint extraout_EDX_17;
  uint extraout_EDX_18;
  uint extraout_EDX_19;
  uint extraout_EDX_20;
  uint extraout_EDX_21;
  char cVar13;
  char cVar15;
  uint uVar14;
  int iVar16;
  size_t sVar17;
  size_t sVar18;
  uint uVar19;
  byte *pbVar20;
  byte *pbVar21;
  bool bVar22;
  ulonglong uVar23;
  longlong lVar24;
  uint *puVar25;
  undefined uVar26;
  pthreadlocinfo in_stack_fffffe00;
  int local_1f8;
  char local_1f4;
  int **local_1f0;
  int **local_1ec;
  undefined4 local_1e8;
  byte local_1e4;
  undefined local_1e3;
  int local_1e0;
  size_t local_1dc;
  int local_1d8;
  int local_1d4;
  int local_1d0;
  uint local_1cc;
  int *local_1c8;
  int local_1c4;
  uint local_1c0;
  byte *local_1bc;
  uint *local_1b8;
  byte local_1b1;
  uint local_1b0;
  char local_1aa;
  byte local_1a9;
  uint local_1a8;
  uint local_1a4;
  int local_1a0;
  char local_19a;
  char local_199;
  FILE *local_198;
  int local_194;
  uint local_190;
  char local_18c;
  char local_18b;
  char local_18a;
  char local_189;
  uint local_188 [88];
  uint local_28 [2];
  undefined local_1d;
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  uVar14 = 0;
  local_1ec = param_4;
  local_1b8 = local_188;
  local_198 = param_1;
  local_1dc = 0x15e;
  local_1d8 = 0;
  local_1cc = 0;
  local_1b0 = 0;
  local_1e8 = 0;
  local_1a4 = 0;
  local_1f0 = (int **)0x0;
  if ((param_2 == (byte *)0x0) || (param_1 == (FILE *)0x0)) {
    piVar3 = __errno();
    uVar26 = SUB41(in_stack_fffffe00,0);
    *piVar3 = 0x16;
    FUN_100090a2();
    lVar24 = CONCAT44(local_1b0,local_1cc);
    bVar11 = extraout_DL;
    goto LAB_1000f42c;
  }
  if ((*(byte *)&param_1->_flag & 0x40) == 0) {
    uVar4 = __fileno(param_1);
    if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {
      puVar12 = &DAT_100335a0;
    }
    else {
      puVar12 = (undefined *)((uVar4 & 0x1f) * 0x40 + (&DAT_100458e0)[(int)uVar4 >> 5]);
    }
    if ((puVar12[0x24] & 0x7f) == 0) {
      if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {
        puVar12 = &DAT_100335a0;
      }
      else {
        puVar12 = (undefined *)((uVar4 & 0x1f) * 0x40 + (&DAT_100458e0)[(int)uVar4 >> 5]);
      }
      if ((puVar12[0x24] & 0x80) == 0) goto LAB_1000e3ee;
    }
    piVar3 = __errno();
    uVar26 = SUB41(in_stack_fffffe00,0);
    *piVar3 = 0x16;
    FUN_100090a2();
    lVar24 = CONCAT44(local_1b0,local_1cc);
    bVar11 = extraout_DL_00;
    goto LAB_1000f42c;
  }
LAB_1000e3ee:
  FUN_10008755(&stack0xfffffe00,param_3);
  lVar24 = CONCAT44(local_1b0,local_1cc);
  bVar10 = *param_2;
  iVar16 = 0;
  local_18b = '\0';
  local_194 = 0;
  local_1a0 = 0;
  local_1d4 = 0;
  bVar11 = extraout_DL_01;
  if (bVar10 == 0) {
LAB_1000f416:
    uVar26 = SUB41(in_stack_fffffe00,0);
  }
  else {
LAB_1000e422:
    iVar5 = _isspace((uint)bVar10);
    pFVar2 = local_198;
    local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
    local_1cc = (uint)lVar24;
    if (iVar5 != 0) {
      local_1a0 = iVar16 + -1;
      uVar4 = __whiteout(&local_1a0,local_198);
      local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
      local_1cc = (uint)lVar24;
      pbVar20 = param_2;
      if (uVar4 != 0xffffffff) {
        FUN_100149c1(uVar4,pFVar2);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
      }
      do {
        pbVar20 = pbVar20 + 1;
        iVar16 = _isspace((uint)*pbVar20);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
      } while (iVar16 != 0);
      local_194 = local_1a0;
      iVar16 = local_1a0;
      bVar11 = extraout_DL_02;
      goto LAB_1000f3ad;
    }
    if (*param_2 == 0x25) {
      if (param_2[1] == 0x25) {
        if ((true) && (param_2[1] == 0x25)) {
          param_2 = param_2 + 1;
        }
        goto LAB_1000f346;
      }
      local_1d0 = 0;
      uVar4 = 0;
      local_1b1 = 0;
      uVar14 = 0x100;
      local_1c0 = 0;
      local_1c4 = 0;
      local_1a9 = 0;
      local_1aa = '\0';
      local_18a = '\0';
      local_19a = '\0';
      local_189 = '\0';
      local_1e0 = 0;
      do {
        pbVar21 = param_2 + 1;
        local_1c8 = (int *)(uint)*pbVar21;
        iVar16 = _isdigit((int)local_1c8);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        pbVar20 = pbVar21;
        if (iVar16 == 0) {
          cVar13 = (char)uVar14;
          cVar15 = (char)(uVar14 >> 8);
          if ((int)local_1c8 < 0x4f) {
            if (local_1c8 != (int *)0x4e) {
              if (local_1c8 == (int *)0x2a) {
                local_18a = local_18a + '\x01';
              }
              else if (local_1c8 != (int *)0x46) {
                if (local_1c8 == (int *)0x49) {
                  bVar11 = param_2[2];
                  if ((bVar11 == 0x36) && (pbVar20 = param_2 + 3, *pbVar20 == 0x34))
                  goto LAB_1000e59a;
                  if ((((bVar11 != 0x33) || (pbVar20 = param_2 + 3, *pbVar20 != 0x32)) &&
                      (pbVar20 = pbVar21, bVar11 != 100)) &&
                     (((bVar11 != 0x69 && (bVar11 != 0x6f)) &&
                      ((bVar11 != 0x78 && (bVar11 != 0x58)))))) goto LAB_1000e60d;
                }
                else if (local_1c8 == (int *)0x4c) {
                  uVar14 = (uint)CONCAT11(cVar15 + '\x01',cVar13);
                }
                else {
LAB_1000e60d:
                  uVar14 = uVar14 & 0xffffff00 | (uint)(byte)(cVar13 + 1);
                  pbVar20 = pbVar21;
                }
              }
            }
          }
          else if (local_1c8 == (int *)0x68) {
            uVar14 = (uint)CONCAT11(cVar15 + -1,cVar13);
            local_189 = local_189 + -1;
          }
          else {
            if (local_1c8 == (int *)0x6c) {
              pbVar20 = param_2 + 2;
              if (*pbVar20 == 0x6c) {
LAB_1000e59a:
                local_1e0 = local_1e0 + 1;
                lVar24 = 0;
                goto LAB_1000e50c;
              }
              uVar14 = (uint)CONCAT11(cVar15 + '\x01',cVar13);
            }
            else if (local_1c8 != (int *)0x77) goto LAB_1000e60d;
            local_189 = local_189 + '\x01';
            pbVar20 = pbVar21;
          }
        }
        else {
          local_1c4 = local_1c4 + 1;
          uVar4 = ((int)local_1c8 - 0x30U) + uVar4 * 10;
        }
LAB_1000e50c:
        param_2 = pbVar20;
      } while ((char)uVar14 == '\0');
      local_199 = (char)(uVar14 >> 8);
      if (local_18a == '\0') {
        local_1f0 = local_1ec;
        local_1c8 = *local_1ec;
        local_1ec = local_1ec + 1;
      }
      else {
        local_1c8 = (int *)0x0;
      }
      local_18c = '\0';
      if ((local_189 == '\0') && ((*pbVar20 == 0x53 || (local_189 = -1, *pbVar20 == 0x43)))) {
        local_189 = '\x01';
      }
      local_1a8 = *pbVar20 | 0x20;
      iVar16 = local_194;
      local_1bc = pbVar20;
      local_190 = uVar4;
      if (local_1a8 != 0x6e) {
        if ((local_1a8 == 99) || (local_1a8 == 0x7b)) {
          iVar16 = local_194 + 1;
          local_1a0 = iVar16;
          local_194 = iVar16;
          uVar14 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          bVar11 = extraout_DL_04;
        }
        else {
          uVar14 = __whiteout(&local_1a0,local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          local_194 = local_1a0;
          iVar16 = local_1a0;
          bVar11 = extraout_DL_03;
        }
        local_1a4 = uVar14;
        if (uVar14 == 0xffffffff) goto LAB_1000f3e8;
      }
      pFVar2 = local_198;
      uVar14 = local_1a4;
      uVar4 = local_190;
      if ((local_1c4 != 0) && (local_190 == 0)) goto LAB_1000f3d5;
      if ((int)local_1a8 < 0x70) {
        if (local_1a8 == 0x6f) {
LAB_1000efdd:
          if (local_1a4 == 0x2d) {
            local_1aa = '\x01';
          }
          else {
            cVar13 = local_18c;
            if (local_1a4 != 0x2b) goto LAB_1000f02e;
          }
          local_190 = local_190 - 1;
          if ((local_190 == 0) && (local_1c4 != 0)) {
            uVar4 = local_190;
            cVar13 = '\x01';
          }
          else {
            iVar16 = iVar16 + 1;
            local_1a0 = iVar16;
            local_194 = iVar16;
            local_1a4 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_13;
            cVar13 = local_18c;
          }
          goto LAB_1000f02e;
        }
        if (local_1a8 == 99) {
          if (local_1c4 == 0) {
            local_190 = local_190 + 1;
            local_1c4 = 1;
          }
LAB_1000eb3f:
          pbVar21 = local_1bc;
          if ('\0' < local_189) {
            local_19a = '\x01';
          }
LAB_1000eb50:
          local_1bc = pbVar21;
          piVar3 = local_1c8;
          local_1a0 = local_194 + -1;
          local_194 = local_1a0;
          uVar9 = local_1a8;
          if (uVar14 != 0xffffffff) {
            FUN_100149c1(uVar14,local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar9 = local_1a8;
          }
          do {
            if ((local_1c4 != 0) &&
               (uVar4 = local_190 - 1, bVar22 = local_190 == 0, local_190 = uVar4, bVar22))
            goto LAB_1000ef85;
            local_1a0 = local_194 + 1;
            local_194 = local_1a0;
            uVar14 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_07;
            local_1a4 = uVar14;
            if (uVar14 == 0xffffffff) goto LAB_1000ef5f;
            bVar11 = (byte)uVar14;
            if (uVar9 != 99) {
              if (uVar9 == 0x73) {
                if ((8 < (int)uVar14) && ((int)uVar14 < 0xe)) goto LAB_1000ef5f;
                if (uVar14 != 0x20) goto LAB_1000ec1d;
              }
              if ((uVar9 != 0x7b) ||
                 (uVar4 = 1 << (bVar11 & 7),
                 ((int)(char)(*(byte *)((int)local_28 + ((int)uVar14 >> 3)) ^ local_1a9) & uVar4) ==
                 0)) goto LAB_1000ef5f;
            }
LAB_1000ec1d:
            if (local_18a == '\0') {
              if (local_19a == '\0') {
                *(byte *)local_1c8 = bVar11;
                local_1c8 = (int *)((int)local_1c8 + 1);
              }
              else {
                local_1e4 = bVar11;
                iVar16 = FUN_10008b23(uVar14 & 0xff);
                local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
                local_1cc = (uint)lVar24;
                if (iVar16 != 0) {
                  local_1a0 = local_194 + 1;
                  local_194 = local_1a0;
                  uVar4 = __inc(local_198);
                  local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
                  local_1cc = (uint)lVar24;
                  local_1e3 = (undefined)uVar4;
                }
                local_1e8 = 0x3f;
                FUN_10014aa1((LPWSTR)&local_1e8,&local_1e4,in_stack_fffffe00->mb_cur_max,
                             (pthreadlocinfo *)&stack0xfffffe00);
                local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
                local_1cc = (uint)lVar24;
                *(undefined2 *)local_1c8 = (undefined2)local_1e8;
                local_1c8 = (int *)((int)local_1c8 + 2);
              }
            }
            else {
              piVar3 = (int *)((int)piVar3 + 1);
            }
          } while( true );
        }
        if (local_1a8 == 100) goto LAB_1000efdd;
        if ((int)local_1a8 < 0x65) {
LAB_1000ece8:
          if (*pbVar20 != local_1a4) goto LAB_1000f3d5;
          local_18b = local_18b + -1;
          if (local_18a == '\0') {
            local_1ec = local_1f0;
          }
          goto LAB_1000eb16;
        }
        if (0x67 < (int)local_1a8) {
          if (local_1a8 == 0x69) {
            local_1a8 = 100;
            goto LAB_1000ee03;
          }
          if (local_1a8 != 0x6e) goto LAB_1000ece8;
          if (local_18a != '\0') goto LAB_1000eb16;
          goto LAB_1000f2f8;
        }
        sVar17 = 0;
        if (local_1a4 == 0x2d) {
          sVar17 = 1;
          *(undefined *)local_1b8 = 0x2d;
LAB_1000e774:
          local_190 = local_190 - 1;
          iVar16 = local_194 + 1;
          local_1a4 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
        }
        else {
          iVar16 = local_194;
          if (local_1a4 == 0x2b) goto LAB_1000e774;
        }
        uVar14 = local_1a4;
        if (local_1c4 == 0) {
          local_190 = 0xffffffff;
        }
        iVar5 = _isdigit(local_1a4 & 0xff);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        uVar4 = extraout_EDX;
        while ((iVar5 != 0 &&
               (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22))) {
          local_1c0 = local_1c0 + 1;
          *(byte *)(sVar17 + (int)local_1b8) = (byte)uVar14;
          sVar17 = sVar17 + 1;
          iVar5 = FUN_1000e24b(sVar17,&local_1dc,&local_1b8,local_188,&local_1d8);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          bVar11 = extraout_DL_05;
          if (iVar5 == 0) goto LAB_1000f3e8;
          iVar16 = iVar16 + 1;
          uVar14 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          local_1a4 = uVar14;
          iVar5 = _isdigit(uVar14 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_00;
        }
        local_1a9 = *in_stack_fffffe00->lconv->decimal_point;
        if ((local_1a9 == (byte)uVar14) &&
           (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22)) {
          uVar14 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          *(byte *)(sVar17 + (int)local_1b8) = local_1a9;
          sVar17 = sVar17 + 1;
          local_1a4 = uVar14;
          iVar5 = FUN_1000e24b(sVar17,&local_1dc,&local_1b8,local_188,&local_1d8);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          bVar11 = extraout_DL_06;
          if (iVar5 == 0) goto LAB_1000f3e8;
          iVar5 = _isdigit(uVar14 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_01;
          while ((iVar16 = iVar16 + 1, iVar5 != 0 &&
                 (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22))) {
            local_1c0 = local_1c0 + 1;
            *(char *)(sVar17 + (int)local_1b8) = (char)uVar14;
            sVar17 = sVar17 + 1;
            iVar5 = FUN_1000e24b(sVar17,&local_1dc,&local_1b8,local_188,&local_1d8);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            bVar11 = extraout_DL_07;
            if (iVar5 == 0) goto LAB_1000f3e8;
            uVar14 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            local_1a4 = uVar14;
            iVar5 = _isdigit(uVar14 & 0xff);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_02;
          }
        }
        if ((local_1c0 != 0) &&
           (((uVar14 == 0x65 || (uVar14 == 0x45)) &&
            (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22)))) {
          *(undefined *)(sVar17 + (int)local_1b8) = 0x65;
          sVar18 = sVar17 + 1;
          iVar5 = FUN_1000e24b(sVar18,&local_1dc,&local_1b8,local_188,&local_1d8);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          bVar11 = extraout_DL_08;
          if (iVar5 == 0) goto LAB_1000f3e8;
          uVar14 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          iVar5 = iVar16 + 1;
          local_1a4 = uVar14;
          if (uVar14 == 0x2d) {
            *(undefined *)(sVar18 + (int)local_1b8) = 0x2d;
            sVar18 = sVar17 + 2;
            iVar6 = FUN_1000e24b(sVar18,&local_1dc,&local_1b8,local_188,&local_1d8);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            bVar11 = extraout_DL_09;
            if (iVar6 == 0) goto LAB_1000f3e8;
LAB_1000e9ed:
            sVar17 = sVar18;
            if (local_190 == 0) {
              local_190 = 0;
            }
            else {
              local_190 = local_190 - 1;
              uVar14 = __inc(local_198);
              local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
              local_1cc = (uint)lVar24;
              iVar5 = iVar16 + 2;
              local_1a4 = uVar14;
            }
          }
          else {
            sVar17 = sVar18;
            if (uVar14 == 0x2b) goto LAB_1000e9ed;
          }
          iVar16 = iVar5;
          iVar5 = _isdigit(uVar14 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_03;
          while ((iVar5 != 0 &&
                 (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22))) {
            local_1c0 = local_1c0 + 1;
            *(char *)(sVar17 + (int)local_1b8) = (char)uVar14;
            sVar17 = sVar17 + 1;
            iVar5 = FUN_1000e24b(sVar17,&local_1dc,&local_1b8,local_188,&local_1d8);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            bVar11 = extraout_DL_10;
            if (iVar5 == 0) goto LAB_1000f3e8;
            iVar16 = iVar16 + 1;
            uVar14 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            local_1a4 = uVar14;
            iVar5 = _isdigit(uVar14 & 0xff);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_04;
          }
        }
        local_1a0 = iVar16 + -1;
        local_194 = local_1a0;
        if (uVar14 != 0xffffffff) {
          FUN_100149c1(uVar14,local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_05;
        }
        bVar11 = (byte)uVar4;
        if (local_1c0 != 0) {
          pbVar20 = local_1bc;
          if (local_18a == '\0') {
            puVar12 = &stack0xfffffe00;
            local_1d4 = local_1d4 + 1;
            *(undefined *)(sVar17 + (int)local_1b8) = 0;
            iVar16 = local_199 + -1;
            piVar3 = local_1c8;
            puVar25 = local_1b8;
            pcVar7 = (code *)DecodePointer(PTR_FUN_1003357c);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            (*pcVar7)(iVar16,piVar3,puVar25,puVar12);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_06;
            pbVar20 = local_1bc;
          }
          goto LAB_1000eb16;
        }
        goto LAB_1000f3e8;
      }
      if (local_1a8 == 0x70) {
        local_199 = '\x01';
        goto LAB_1000efdd;
      }
      if (local_1a8 == 0x73) goto LAB_1000eb3f;
      if (local_1a8 == 0x75) goto LAB_1000efdd;
      if (local_1a8 != 0x78) {
        if (local_1a8 != 0x7b) goto LAB_1000ece8;
        if ('\0' < local_189) {
          local_19a = '\x01';
        }
        pbVar21 = pbVar20 + 1;
        if (*pbVar21 == 0x5e) {
          pbVar21 = pbVar20 + 2;
          local_1a9 = 0xff;
        }
        FUN_10006130(local_28,0,0x20);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        bVar11 = local_1b1;
        if (*pbVar21 == 0x5d) {
          local_1d = 0x20;
          pbVar21 = pbVar21 + 1;
          bVar11 = 0x5d;
        }
        while (bVar10 = *pbVar21, bVar10 != 0x5d) {
          if (((bVar10 == 0x2d) && (bVar11 != 0)) && (bVar1 = pbVar21[1], bVar1 != 0x5d)) {
            local_1bc = pbVar21 + 2;
            bVar10 = bVar1;
            if (bVar11 < bVar1) {
              bVar10 = bVar11;
              bVar11 = bVar1;
            }
            uVar4 = (uint)bVar11 << 8;
            if (bVar10 < bVar11) {
              uVar19 = (uint)bVar10;
              uVar4 = (uint)CONCAT11(bVar11,bVar11 - bVar10);
              uVar9 = (uint)(byte)(bVar11 - bVar10);
              do {
                uVar4 = uVar4 & 0xffffff00;
                pbVar20 = (byte *)((int)local_28 + (uVar19 >> 3));
                *pbVar20 = *pbVar20 | '\x01' << ((byte)uVar19 & 7);
                uVar19 = uVar19 + 1;
                uVar9 = uVar9 - 1;
              } while (uVar9 != 0);
            }
            pbVar20 = (byte *)((int)local_28 + (uVar4 >> 0xb));
            *pbVar20 = *pbVar20 | '\x01' << ((byte)(uVar4 >> 8) & 7);
            pbVar21 = local_1bc;
            bVar11 = 0;
          }
          else {
            pbVar20 = (byte *)((int)local_28 + (uint)(bVar10 >> 3));
            *pbVar20 = *pbVar20 | '\x01' << (bVar10 & 7);
            pbVar21 = pbVar21 + 1;
            bVar11 = bVar10;
            local_1b1 = bVar10;
          }
        }
        if (true) goto LAB_1000eb50;
        goto LAB_1000f3e8;
      }
LAB_1000ee03:
      if (local_1a4 == 0x2d) {
        local_1aa = '\x01';
LAB_1000ee16:
        local_190 = local_190 - 1;
        if ((local_190 == 0) && (local_1c4 != 0)) {
          local_18c = '\x01';
          uVar4 = local_190;
        }
        else {
          iVar16 = iVar16 + 1;
          local_1a0 = iVar16;
          local_194 = iVar16;
          local_1a4 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_09;
        }
      }
      else if (local_1a4 == 0x2b) goto LAB_1000ee16;
      cVar13 = local_18c;
      if (local_1a4 == 0x30) {
        iVar5 = iVar16 + 1;
        local_1a0 = iVar5;
        local_194 = iVar5;
        local_1a4 = __inc(pFVar2);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        if (((char)local_1a4 == 'x') || ((char)local_1a4 == 'X')) {
          iVar16 = iVar16 + 2;
          local_1a0 = iVar16;
          local_194 = iVar16;
          local_1a4 = __inc(pFVar2);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          if ((local_1c4 != 0) && (local_190 = local_190 - 2, (int)local_190 < 1)) {
            local_18c = local_18c + '\x01';
          }
          local_1a8 = 0x78;
          uVar4 = extraout_EDX_11;
          cVar13 = local_18c;
        }
        else {
          local_1c0 = 1;
          uVar4 = extraout_EDX_08;
          if (local_1a8 == 0x78) {
            local_1a0 = iVar16;
            local_194 = iVar16;
            if (local_1a4 != 0xffffffff) {
              FUN_100149c1(local_1a4,pFVar2);
              local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
              local_1cc = (uint)lVar24;
              uVar4 = extraout_EDX_10;
            }
            local_1a4 = 0x30;
            cVar13 = local_18c;
          }
          else {
            if ((local_1c4 != 0) && (local_190 = local_190 - 1, local_190 == 0)) {
              local_18c = local_18c + '\x01';
            }
            local_1a8 = 0x6f;
            iVar16 = iVar5;
            cVar13 = local_18c;
          }
        }
      }
LAB_1000f02e:
      uVar9 = local_1a8;
      uVar14 = local_1a4;
      if (local_1e0 == 0) {
        if (cVar13 == '\0') {
          while ((uVar14 = local_1a4, local_1a8 != 0x78 && (local_1a8 != 0x70))) {
            iVar5 = _isdigit(local_1a4 & 0xff);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_17;
            if (iVar5 == 0) goto LAB_1000f287;
            if (local_1a8 == 0x6f) {
              if (0x37 < (int)uVar14) goto LAB_1000f287;
              local_1d0 = local_1d0 << 3;
            }
            else {
              local_1d0 = local_1d0 * 10;
            }
LAB_1000f233:
            local_1c0 = local_1c0 + 1;
            local_1d0 = local_1d0 + -0x30 + uVar14;
            if ((local_1c4 != 0) && (local_190 = local_190 - 1, uVar9 = local_1a8, local_190 == 0))
            goto LAB_1000f2b5;
            iVar16 = iVar16 + 1;
            local_1a0 = iVar16;
            local_194 = iVar16;
            local_1a4 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
          }
          iVar5 = _isxdigit(local_1a4 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_18;
          if (iVar5 != 0) {
            local_1d0 = local_1d0 << 4;
            uVar14 = FUN_1000e2aa((byte)uVar14);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_19;
            local_1a4 = uVar14;
            goto LAB_1000f233;
          }
LAB_1000f287:
          uVar9 = local_1a8;
          local_1a0 = iVar16 + -1;
          local_194 = local_1a0;
          if (uVar14 != 0xffffffff) {
            FUN_100149c1(uVar14,local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_20;
          }
        }
LAB_1000f2b5:
        if (local_1aa != '\0') {
          local_1d0 = -local_1d0;
        }
      }
      else {
        if (cVar13 == '\0') {
          while ((uVar14 = local_1a4, local_1a8 != 0x78 && (local_1a8 != 0x70))) {
            iVar5 = _isdigit(local_1a4 & 0xff);
            uVar9 = local_1a8;
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_14;
            if (iVar5 == 0) goto LAB_1000f15e;
            if (local_1a8 == 0x6f) {
              if (0x37 < (int)uVar14) goto LAB_1000f15e;
              uVar23 = lVar24 << 3;
            }
            else {
              uVar23 = __allmul(local_1cc,local_1b0,10,0);
              local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
              local_1cc = (uint)lVar24;
            }
LAB_1000f0fb:
            local_1c0 = local_1c0 + 1;
            uVar4 = (int)(uVar14 - 0x30) >> 0x1f;
            lVar24 = uVar23 + (longlong)(int)(uVar14 - 0x30);
            if ((local_1c4 != 0) && (local_190 = local_190 - 1, local_190 == 0)) goto LAB_1000f192;
            iVar16 = iVar16 + 1;
            local_1a0 = iVar16;
            local_194 = iVar16;
            local_1a4 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
          }
          iVar5 = _isxdigit(local_1a4 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_15;
          if (iVar5 != 0) {
            uVar23 = lVar24 << 4;
            uVar14 = FUN_1000e2aa((byte)uVar14);
            local_1b0 = (uint)(uVar23 >> 0x20);
            local_1cc = (uint)uVar23;
            uVar9 = local_1a8;
            local_1a4 = uVar14;
            goto LAB_1000f0fb;
          }
LAB_1000f15e:
          uVar9 = local_1a8;
          local_1a0 = iVar16 + -1;
          local_194 = local_1a0;
          if (uVar14 != 0xffffffff) {
            FUN_100149c1(uVar14,local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_16;
          }
        }
LAB_1000f192:
        if (local_1aa != '\0') {
          lVar24 = CONCAT44(-((int)((ulonglong)lVar24 >> 0x20) + (uint)((int)lVar24 != 0)),
                            -(int)lVar24);
        }
      }
      bVar11 = (byte)uVar4;
      if ((-(uint)(uVar9 != 0x46) & local_1c0) == 0) goto LAB_1000f3e8;
      pbVar20 = local_1bc;
      if (local_18a == '\0') {
        local_1d4 = local_1d4 + 1;
        iVar16 = local_1d0;
LAB_1000f2f8:
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        if (local_1e0 == 0) {
          if (local_199 == '\0') {
            *(short *)local_1c8 = (short)iVar16;
          }
          else {
            *local_1c8 = iVar16;
          }
        }
        else {
          *local_1c8 = local_1cc;
          local_1c8[1] = local_1b0;
        }
      }
LAB_1000eb16:
      bVar11 = (byte)uVar4;
      local_18b = local_18b + '\x01';
      pbVar20 = pbVar20 + 1;
      iVar16 = local_194;
      iVar5 = local_1a0;
      iVar6 = local_194;
LAB_1000f39d:
      local_194 = iVar6;
      local_1a0 = iVar5;
      if ((uVar14 == 0xffffffff) && ((*pbVar20 != 0x25 || (pbVar20[1] != 0x6e)))) goto LAB_1000f3e8;
LAB_1000f3ad:
      bVar10 = *pbVar20;
      param_2 = pbVar20;
      if (bVar10 == 0) goto LAB_1000f3e8;
      goto LAB_1000e422;
    }
LAB_1000f346:
    iVar16 = iVar16 + 1;
    local_1a0 = iVar16;
    local_194 = iVar16;
    uVar14 = __inc(local_198);
    local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
    local_1cc = (uint)lVar24;
    pbVar20 = param_2 + 1;
    uVar4 = extraout_EDX_21;
    local_1a4 = uVar14;
    if (*param_2 == uVar14) {
      iVar8 = FUN_10008b23(uVar14 & 0xff);
      local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
      local_1cc = (uint)lVar24;
      bVar11 = extraout_DL_11;
      iVar5 = local_1a0;
      iVar6 = local_194;
      if (iVar8 != 0) {
        uVar4 = __inc(local_198);
        pFVar2 = local_198;
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        bVar10 = *pbVar20;
        pbVar20 = param_2 + 2;
        bVar11 = extraout_DL_12;
        iVar5 = iVar16;
        iVar6 = iVar16;
        if (bVar10 != uVar4) {
          if (uVar4 != 0xffffffff) {
            FUN_100149c1(uVar4,local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            bVar11 = extraout_DL_13;
          }
          goto joined_r0x1000f3d8;
        }
      }
      goto LAB_1000f39d;
    }
LAB_1000f3d5:
    bVar11 = (byte)uVar4;
    uVar14 = local_1a4;
    pFVar2 = local_198;
joined_r0x1000f3d8:
    if (uVar14 != 0xffffffff) {
      FUN_100149c1(uVar14,pFVar2);
      local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
      local_1cc = (uint)lVar24;
      bVar11 = extraout_DL_14;
    }
LAB_1000f3e8:
    if (local_1d8 == 1) {
      FUN_10001730(local_1b8);
      local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
      local_1cc = (uint)lVar24;
      bVar11 = extraout_DL_15;
    }
    uVar26 = SUB41(in_stack_fffffe00,0);
    if (((uVar14 != 0xffffffff) || (local_1d4 != 0)) || (local_18b != '\0')) goto LAB_1000f416;
  }
  if (local_1f4 != '\0') {
    *(uint *)(local_1f8 + 0x70) = *(uint *)(local_1f8 + 0x70) & 0xfffffffd;
  }
LAB_1000f42c:
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,bVar11,uVar26);
  local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
  local_1cc = (uint)lVar24;
  return;
LAB_1000ef5f:
  local_1a0 = local_194 + -1;
  local_194 = local_1a0;
  if (uVar14 != 0xffffffff) {
    FUN_100149c1(uVar14,local_198);
    local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
    local_1cc = (uint)lVar24;
    uVar4 = extraout_EDX_12;
  }
LAB_1000ef85:
  bVar11 = (byte)uVar4;
  if (piVar3 == local_1c8) goto LAB_1000f3e8;
  pbVar20 = local_1bc;
  if ((local_18a == '\0') && (local_1d4 = local_1d4 + 1, uVar9 != 99)) {
    if (local_19a == '\0') {
      *(undefined *)local_1c8 = 0;
    }
    else {
      *(undefined2 *)local_1c8 = 0;
    }
  }
  goto LAB_1000eb16;
}



// Library Function - Single Match
//  __whiteout
// 
// Library: Visual Studio 2012 Release

uint __cdecl __whiteout(int *param_1,FILE *param_2)

{
  uint uVar1;
  int iVar2;
  
  do {
    *param_1 = *param_1 + 1;
    uVar1 = __inc(param_2);
    if (uVar1 == 0xffffffff) {
      return 0xffffffff;
    }
    iVar2 = _isspace(uVar1 & 0xff);
  } while (iVar2 != 0);
  return uVar1;
}



// Library Function - Single Match
//  _wcscpy_s
// 
// Library: Visual Studio 2012 Release

errno_t __cdecl _wcscpy_s(wchar_t *_Dst,rsize_t _SizeInWords,wchar_t *_Src)

{
  wchar_t wVar1;
  int *piVar2;
  int iVar3;
  
  if ((_Dst != (wchar_t *)0x0) && (_SizeInWords != 0)) {
    if (_Src != (wchar_t *)0x0) {
      iVar3 = (int)_Dst - (int)_Src;
      do {
        wVar1 = *_Src;
        *(wchar_t *)(iVar3 + (int)_Src) = wVar1;
        _Src = _Src + 1;
        if (wVar1 == L'\0') break;
        _SizeInWords = _SizeInWords - 1;
      } while (_SizeInWords != 0);
      if (_SizeInWords != 0) {
        return 0;
      }
      *_Dst = L'\0';
      piVar2 = __errno();
      iVar3 = 0x22;
      goto LAB_1000f48f;
    }
    *_Dst = L'\0';
  }
  piVar2 = __errno();
  iVar3 = 0x16;
LAB_1000f48f:
  *piVar2 = iVar3;
  FUN_100090a2();
  return iVar3;
}



void __cdecl FUN_1000f4c6(int *param_1)

{
  int *piVar1;
  int iVar2;
  int **ppiVar3;
  
  LOCK();
  *param_1 = *param_1 + 1;
  piVar1 = (int *)param_1[0x1e];
  if (piVar1 != (int *)0x0) {
    LOCK();
    *piVar1 = *piVar1 + 1;
  }
  piVar1 = (int *)param_1[0x20];
  if (piVar1 != (int *)0x0) {
    LOCK();
    *piVar1 = *piVar1 + 1;
  }
  piVar1 = (int *)param_1[0x1f];
  if (piVar1 != (int *)0x0) {
    LOCK();
    *piVar1 = *piVar1 + 1;
  }
  piVar1 = (int *)param_1[0x22];
  if (piVar1 != (int *)0x0) {
    LOCK();
    *piVar1 = *piVar1 + 1;
  }
  ppiVar3 = (int **)(param_1 + 7);
  iVar2 = 6;
  do {
    if ((ppiVar3[-2] != (int *)&DAT_10033b34) && (piVar1 = *ppiVar3, piVar1 != (int *)0x0)) {
      LOCK();
      *piVar1 = *piVar1 + 1;
    }
    if ((ppiVar3[-3] != (int *)0x0) && (piVar1 = ppiVar3[-1], piVar1 != (int *)0x0)) {
      LOCK();
      *piVar1 = *piVar1 + 1;
    }
    ppiVar3 = ppiVar3 + 4;
    iVar2 = iVar2 + -1;
  } while (iVar2 != 0);
  LOCK();
  *(int *)(param_1[0x27] + 0xb0) = *(int *)(param_1[0x27] + 0xb0) + 1;
  return;
}



void __cdecl FUN_1000f55b(int param_1)

{
  int *piVar1;
  undefined **ppuVar2;
  int iVar3;
  undefined4 *puVar4;
  int **ppiVar5;
  
  iVar3 = param_1;
  if ((((*(undefined ***)(param_1 + 0x84) != (undefined **)0x0) &&
       (*(undefined ***)(param_1 + 0x84) != &PTR_DAT_10034118)) &&
      (*(int **)(param_1 + 0x78) != (int *)0x0)) && (**(int **)(param_1 + 0x78) == 0)) {
    piVar1 = *(int **)(param_1 + 0x80);
    if ((piVar1 != (int *)0x0) && (*piVar1 == 0)) {
      FUN_10001730(piVar1);
      FID_conflict____acrt_locale_free_monetary(*(int *)(param_1 + 0x84));
    }
    piVar1 = *(int **)(param_1 + 0x7c);
    if ((piVar1 != (int *)0x0) && (*piVar1 == 0)) {
      FUN_10001730(piVar1);
      FID_conflict____free_lconv_num(*(int **)(param_1 + 0x84));
    }
    FUN_10001730(*(undefined4 *)(param_1 + 0x78));
    FUN_10001730(*(undefined4 *)(param_1 + 0x84));
  }
  if ((*(int **)(param_1 + 0x88) != (int *)0x0) && (**(int **)(param_1 + 0x88) == 0)) {
    FUN_10001730(*(int *)(param_1 + 0x8c) + -0xfe);
    FUN_10001730(*(int *)(param_1 + 0x94) + -0x80);
    FUN_10001730(*(int *)(param_1 + 0x98) + -0x80);
    FUN_10001730(*(undefined4 *)(param_1 + 0x88));
  }
  ppuVar2 = *(undefined ***)(param_1 + 0x9c);
  if ((ppuVar2 != &PTR_DAT_10033b38) && (ppuVar2[0x2c] == (undefined *)0x0)) {
    ___free_lc_time(ppuVar2);
    FUN_10001730(*(undefined4 *)(param_1 + 0x9c));
  }
  puVar4 = (undefined4 *)(param_1 + 0xa0);
  param_1 = 6;
  ppiVar5 = (int **)(iVar3 + 0x1c);
  do {
    if (((ppiVar5[-2] != (int *)&DAT_10033b34) && (piVar1 = *ppiVar5, piVar1 != (int *)0x0)) &&
       (*piVar1 == 0)) {
      FUN_10001730(piVar1);
      FUN_10001730(*puVar4);
    }
    if (((ppiVar5[-3] != (int *)0x0) && (piVar1 = ppiVar5[-1], piVar1 != (int *)0x0)) &&
       (*piVar1 == 0)) {
      FUN_10001730(piVar1);
    }
    puVar4 = puVar4 + 1;
    ppiVar5 = ppiVar5 + 4;
    param_1 = param_1 + -1;
  } while (param_1 != 0);
  FUN_10001730(iVar3);
  return;
}



int * __cdecl FUN_1000f6b5(int *param_1)

{
  int *piVar1;
  int **ppiVar2;
  int iVar3;
  
  if (param_1 != (int *)0x0) {
    LOCK();
    *param_1 = *param_1 + -1;
    piVar1 = (int *)param_1[0x1e];
    if (piVar1 != (int *)0x0) {
      LOCK();
      *piVar1 = *piVar1 + -1;
    }
    piVar1 = (int *)param_1[0x20];
    if (piVar1 != (int *)0x0) {
      LOCK();
      *piVar1 = *piVar1 + -1;
    }
    piVar1 = (int *)param_1[0x1f];
    if (piVar1 != (int *)0x0) {
      LOCK();
      *piVar1 = *piVar1 + -1;
    }
    piVar1 = (int *)param_1[0x22];
    if (piVar1 != (int *)0x0) {
      LOCK();
      *piVar1 = *piVar1 + -1;
    }
    ppiVar2 = (int **)(param_1 + 7);
    iVar3 = 6;
    do {
      if ((ppiVar2[-2] != (int *)&DAT_10033b34) && (piVar1 = *ppiVar2, piVar1 != (int *)0x0)) {
        LOCK();
        *piVar1 = *piVar1 + -1;
      }
      if ((ppiVar2[-3] != (int *)0x0) && (piVar1 = ppiVar2[-1], piVar1 != (int *)0x0)) {
        LOCK();
        *piVar1 = *piVar1 + -1;
      }
      ppiVar2 = ppiVar2 + 4;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
    LOCK();
    *(int *)(param_1[0x27] + 0xb0) = *(int *)(param_1[0x27] + 0xb0) + -1;
  }
  return param_1;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

pthreadlocinfo FUN_1000f755(void)

{
  _ptiddata p_Var1;
  pthreadlocinfo ptVar2;
  
  p_Var1 = __getptd();
  if (((p_Var1->_ownlocale & DAT_10033d58) == 0) || (p_Var1->ptlocinfo == (pthreadlocinfo)0x0)) {
    __lock(0xc);
    ptVar2 = (pthreadlocinfo)
             __updatetlocinfoEx_nolock((int **)&p_Var1->ptlocinfo,(int *)PTR_DAT_10033c9c);
    FUN_1000f7cc();
  }
  else {
    p_Var1 = __getptd();
    ptVar2 = p_Var1->ptlocinfo;
  }
  if (ptVar2 == (pthreadlocinfo)0x0) {
    __amsg_exit(0x20);
  }
  return ptVar2;
}



void FUN_1000f7cc(void)

{
  FUN_10012036(0xc);
  return;
}



// Library Function - Single Match
//  __updatetlocinfoEx_nolock
// 
// Libraries: Visual Studio 2010 Release, Visual Studio 2012 Release, Visual Studio 2019 Release

int * __cdecl __updatetlocinfoEx_nolock(int **param_1,int *param_2)

{
  int *piVar1;
  
  if ((param_2 == (int *)0x0) || (param_1 == (int **)0x0)) {
    param_2 = (int *)0x0;
  }
  else {
    piVar1 = *param_1;
    if (piVar1 != param_2) {
      *param_1 = param_2;
      FUN_1000f4c6(param_2);
      if (((piVar1 != (int *)0x0) && (FUN_1000f6b5(piVar1), *piVar1 == 0)) &&
         (piVar1 != (int *)&DAT_10033ca0)) {
        FUN_1000f55b((int)piVar1);
      }
    }
  }
  return param_2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_1000f820(void)

{
  if (_DAT_100476f8 == 0) {
    FUN_1000fb7d(0xfffffffd);
    _DAT_100476f8 = 1;
  }
  return 0;
}



// Library Function - Single Match
//  wchar_t const * __cdecl CPtoLocaleName(int)
// 
// Library: Visual Studio 2012 Release

wchar_t * __cdecl CPtoLocaleName(int param_1)

{
  if (param_1 == 0x3a4) {
    return (wchar_t *)L"ja-JP";
  }
  if (param_1 == 0x3a8) {
    return (wchar_t *)L"zh-CN";
  }
  if (param_1 == 0x3b5) {
    return (wchar_t *)L"ko-KR";
  }
  if (param_1 != 0x3b6) {
    return (wchar_t *)0x0;
  }
  return (wchar_t *)L"zh-TW";
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

UINT __cdecl FUN_1000f878(UINT param_1)

{
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_10008755(local_14,(pthreadlocinfo *)0x0);
  _DAT_10045b00 = 0;
  if (param_1 == 0xfffffffe) {
    _DAT_10045b00 = 1;
    param_1 = GetOEMCP();
  }
  else if (param_1 == 0xfffffffd) {
    _DAT_10045b00 = 1;
    param_1 = GetACP();
  }
  else if (param_1 == 0xfffffffc) {
    _DAT_10045b00 = 1;
    param_1 = *(UINT *)(local_14[0] + 4);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return param_1;
}



void __cdecl FUN_1000f8e6(int param_1)

{
  int iVar1;
  undefined *puVar2;
  uint *puVar3;
  
  puVar3 = (uint *)(param_1 + 0x18);
  FUN_10006130(puVar3,0,0x101);
  *(undefined4 *)(param_1 + 4) = 0;
  *(undefined4 *)(param_1 + 8) = 0;
  *(undefined4 *)(param_1 + 0x21c) = 0;
  iVar1 = 0x101;
  *(undefined4 *)(param_1 + 0xc) = 0;
  *(undefined4 *)(param_1 + 0x10) = 0;
  *(undefined4 *)(param_1 + 0x14) = 0;
  do {
    *(undefined *)puVar3 = *(undefined *)(((int)&DAT_10033818 - param_1) + (int)puVar3);
    puVar3 = (uint *)((int)puVar3 + 1);
    iVar1 = iVar1 + -1;
  } while (iVar1 != 0);
  puVar2 = (undefined *)(param_1 + 0x119);
  iVar1 = 0x100;
  do {
    *puVar2 = puVar2[(int)&DAT_10033818 - param_1];
    puVar2 = puVar2 + 1;
    iVar1 = iVar1 + -1;
  } while (iVar1 != 0);
  return;
}



// Library Function - Single Match
//  void __cdecl setSBUpLow(struct __crt_multibyte_data *)
// 
// Library: Visual Studio 2015 Release

void __cdecl setSBUpLow(__crt_multibyte_data *param_1)

{
  byte bVar1;
  __crt_multibyte_data _Var2;
  BOOL BVar3;
  uint uVar4;
  BYTE *pBVar5;
  char extraout_DL;
  char cVar6;
  __crt_multibyte_data *p_Var7;
  int in_stack_fffffadc;
  _cpinfo local_51c;
  WORD local_508 [256];
  WCHAR local_308 [128];
  WCHAR local_208 [128];
  CHAR local_108 [256];
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  BVar3 = GetCPInfo(*(UINT *)(param_1 + 4),&local_51c);
  if (BVar3 == 0) {
    uVar4 = 0;
    in_stack_fffffadc = -0x61 - (int)(param_1 + 0x119);
    do {
      p_Var7 = param_1 + uVar4 + 0x119;
      if (p_Var7 + in_stack_fffffadc + 0x20 < (__crt_multibyte_data *)0x1a) {
        param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x10);
        _Var2 = (__crt_multibyte_data)((char)uVar4 + ' ');
LAB_1000faaf:
        *p_Var7 = _Var2;
      }
      else {
        if (p_Var7 + in_stack_fffffadc < (__crt_multibyte_data *)0x1a) {
          param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x20);
          _Var2 = (__crt_multibyte_data)((char)uVar4 + -0x20);
          goto LAB_1000faaf;
        }
        *p_Var7 = (__crt_multibyte_data)0x0;
      }
      cVar6 = (char)param_1 + '\x19';
      uVar4 = uVar4 + 1;
    } while (uVar4 < 0x100);
  }
  else {
    uVar4 = 0;
    do {
      local_108[uVar4] = (CHAR)uVar4;
      uVar4 = uVar4 + 1;
    } while (uVar4 < 0x100);
    pBVar5 = local_51c.LeadByte;
    local_108[0] = ' ';
    while (local_51c.LeadByte[0] != 0) {
      bVar1 = pBVar5[1];
      for (uVar4 = (uint)local_51c.LeadByte[0]; (uVar4 <= bVar1 && (uVar4 < 0x100));
          uVar4 = uVar4 + 1) {
        local_108[uVar4] = ' ';
      }
      pBVar5 = pBVar5 + 2;
      local_51c.LeadByte[0] = *pBVar5;
    }
    FUN_10015189((pthreadlocinfo *)0x0,1,local_108,0x100,local_508,*(UINT *)(param_1 + 4),0);
    FUN_10010ba9((pthreadlocinfo *)0x0,*(wchar_t **)(param_1 + 0x21c),0x100,local_108,0x100,
                 local_208,0x100,*(UINT *)(param_1 + 4),0);
    FUN_10010ba9((pthreadlocinfo *)0x0,*(wchar_t **)(param_1 + 0x21c),0x200,local_108,0x100,
                 local_308,0x100,*(UINT *)(param_1 + 4),0);
    uVar4 = 0;
    do {
      if ((local_508[uVar4] & 1) == 0) {
        if ((local_508[uVar4] & 2) != 0) {
          param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x20);
          _Var2 = *(__crt_multibyte_data *)((int)local_308 + uVar4);
          goto LAB_1000fa56;
        }
        param_1[uVar4 + 0x119] = (__crt_multibyte_data)0x0;
      }
      else {
        param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x10);
        _Var2 = *(__crt_multibyte_data *)((int)local_208 + uVar4);
LAB_1000fa56:
        param_1[uVar4 + 0x119] = _Var2;
      }
      uVar4 = uVar4 + 1;
      cVar6 = extraout_DL;
    } while (uVar4 < 0x100);
  }
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,cVar6,(char)in_stack_fffffadc);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

pthreadmbcinfo FUN_1000fad7(void)

{
  int iVar1;
  _ptiddata p_Var2;
  pthreadmbcinfo ptVar3;
  
  p_Var2 = __getptd();
  if (((p_Var2->_ownlocale & DAT_10033d58) == 0) || (p_Var2->ptlocinfo == (pthreadlocinfo)0x0)) {
    __lock(0xd);
    ptVar3 = p_Var2->ptmbcinfo;
    if (ptVar3 != (pthreadmbcinfo)PTR_DAT_10033a3c) {
      if (ptVar3 != (pthreadmbcinfo)0x0) {
        LOCK();
        iVar1 = ptVar3->refcount + -1;
        ptVar3->refcount = iVar1;
        if ((iVar1 == 0) && (ptVar3 != (pthreadmbcinfo)&DAT_10033818)) {
          FUN_10001730(ptVar3);
        }
      }
      p_Var2->ptmbcinfo = (pthreadmbcinfo)PTR_DAT_10033a3c;
      ptVar3 = (pthreadmbcinfo)PTR_DAT_10033a3c;
      LOCK();
      *(int *)PTR_DAT_10033a3c = *(int *)PTR_DAT_10033a3c + 1;
    }
    FUN_1000fb74();
  }
  else {
    ptVar3 = p_Var2->ptmbcinfo;
  }
  if (ptVar3 == (pthreadmbcinfo)0x0) {
    __amsg_exit(0x20);
  }
  return ptVar3;
}



void FUN_1000fb74(void)

{
  FUN_10012036(0xd);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int __cdecl FUN_1000fb7d(UINT param_1)

{
  _ptiddata p_Var1;
  UINT UVar2;
  pthreadmbcinfo ptVar3;
  int *piVar4;
  int iVar5;
  pthreadmbcinfo ptVar6;
  int iVar7;
  int iVar8;
  pthreadmbcinfo ptVar9;
  
  iVar8 = -1;
  p_Var1 = __getptd();
  FUN_1000fad7();
  ptVar3 = p_Var1->ptmbcinfo;
  UVar2 = FUN_1000f878(param_1);
  if (UVar2 == ptVar3->mbcodepage) {
    iVar8 = 0;
  }
  else {
    ptVar3 = (pthreadmbcinfo)FUN_100017b0(0x220);
    if (ptVar3 != (pthreadmbcinfo)0x0) {
      ptVar6 = p_Var1->ptmbcinfo;
      ptVar9 = ptVar3;
      for (iVar8 = 0x88; iVar8 != 0; iVar8 = iVar8 + -1) {
        ptVar9->refcount = ptVar6->refcount;
        ptVar6 = (pthreadmbcinfo)&ptVar6->mbcodepage;
        ptVar9 = (pthreadmbcinfo)&ptVar9->mbcodepage;
      }
      iVar7 = 0;
      ptVar3->refcount = 0;
      iVar8 = FUN_1000fd25(UVar2,(__crt_multibyte_data *)ptVar3);
      if (iVar8 == 0) {
        LOCK();
        iVar5 = p_Var1->ptmbcinfo->refcount + -1;
        p_Var1->ptmbcinfo->refcount = iVar5;
        if ((iVar5 == 0) && (p_Var1->ptmbcinfo != (pthreadmbcinfo)&DAT_10033818)) {
          FUN_10001730(p_Var1->ptmbcinfo);
        }
        p_Var1->ptmbcinfo = ptVar3;
        LOCK();
        ptVar3->refcount = ptVar3->refcount + 1;
        if (((*(byte *)&p_Var1->_ownlocale & 2) == 0) && (((byte)DAT_10033d58 & 1) == 0)) {
          __lock(0xd);
          _DAT_10045ae8 = ptVar3->mbcodepage;
          _DAT_10045aec = ptVar3->ismbcodepage;
          _DAT_10045afc = ptVar3->mblocalename;
          for (iVar5 = 0; iVar5 < 5; iVar5 = iVar5 + 1) {
            (&DAT_10045af0)[iVar5] = ptVar3->mbulinfo[iVar5];
          }
          for (iVar5 = 0; iVar5 < 0x101; iVar5 = iVar5 + 1) {
            (&DAT_10033610)[iVar5] = ptVar3->mbctype[iVar5];
          }
          for (; iVar7 < 0x100; iVar7 = iVar7 + 1) {
            (&DAT_10033718)[iVar7] = ptVar3->mbcasemap[iVar7];
          }
          LOCK();
          iVar7 = *(int *)PTR_DAT_10033a3c;
          *(int *)PTR_DAT_10033a3c = iVar7 + -1;
          if ((iVar7 + -1 == 0) && ((undefined4 *)PTR_DAT_10033a3c != &DAT_10033818)) {
            FUN_10001730(PTR_DAT_10033a3c);
          }
          LOCK();
          PTR_DAT_10033a3c = (undefined *)ptVar3;
          ptVar3->refcount = ptVar3->refcount + 1;
          FUN_1000fcef();
        }
      }
      else if (iVar8 == -1) {
        if (ptVar3 != (pthreadmbcinfo)&DAT_10033818) {
          FUN_10001730(ptVar3);
        }
        piVar4 = __errno();
        *piVar4 = 0x16;
      }
    }
  }
  return iVar8;
}



void FUN_1000fcef(void)

{
  FUN_10012036(0xd);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_1000fd25(UINT param_1,__crt_multibyte_data *param_2)

{
  byte bVar1;
  undefined2 uVar2;
  UINT CodePage;
  uint uVar3;
  BOOL BVar4;
  BYTE *pBVar5;
  __crt_multibyte_data *p_Var6;
  wchar_t *pwVar7;
  byte *pbVar8;
  int iVar9;
  byte *pbVar10;
  undefined2 *puVar11;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined extraout_DL_04;
  undefined uVar12;
  undefined2 *puVar13;
  uint uVar14;
  undefined uVar15;
  int in_stack_ffffffdc;
  int local_20;
  _cpinfo local_1c;
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  CodePage = FUN_1000f878(param_1);
  uVar15 = (undefined)in_stack_ffffffdc;
  if (CodePage != 0) {
    uVar14 = 0;
    uVar3 = 0;
    local_20 = 0;
LAB_1000fd61:
    if (*(UINT *)((int)&DAT_10033a40 + uVar3) != CodePage) goto code_r0x1000fd6d;
    FUN_10006130((uint *)(param_2 + 0x18),0,0x101);
    in_stack_ffffffdc = local_20 * 0x30;
    pbVar8 = &DAT_10033a50 + in_stack_ffffffdc;
    do {
      bVar1 = *pbVar8;
      pbVar10 = pbVar8;
      while ((bVar1 != 0 && (bVar1 = pbVar10[1], bVar1 != 0))) {
        for (uVar3 = (uint)*pbVar10; (uVar3 <= bVar1 && (uVar3 < 0x100)); uVar3 = uVar3 + 1) {
          param_2[uVar3 + 0x19] =
               (__crt_multibyte_data)((byte)param_2[uVar3 + 0x19] | (&DAT_10033a38)[uVar14]);
          bVar1 = pbVar10[1];
        }
        pbVar10 = pbVar10 + 2;
        bVar1 = *pbVar10;
      }
      uVar14 = uVar14 + 1;
      pbVar8 = pbVar8 + 8;
    } while (uVar14 < 4);
    *(UINT *)(param_2 + 4) = CodePage;
    *(undefined4 *)(param_2 + 8) = 1;
    pwVar7 = CPtoLocaleName(CodePage);
    *(wchar_t **)(param_2 + 0x21c) = pwVar7;
    puVar11 = (undefined2 *)(param_2 + 0xc);
    puVar13 = (undefined2 *)(&DAT_10033a44 + in_stack_ffffffdc);
    iVar9 = 6;
    do {
      uVar2 = *puVar13;
      puVar13 = puVar13 + 1;
      *puVar11 = uVar2;
      puVar11 = puVar11 + 1;
      iVar9 = iVar9 + -1;
    } while (iVar9 != 0);
    goto LAB_1000fef6;
  }
  FUN_1000f8e6((int)param_2);
  uVar12 = extraout_DL_00;
LAB_1000ff00:
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,uVar12,uVar15);
  return;
code_r0x1000fd6d:
  local_20 = local_20 + 1;
  uVar3 = uVar3 + 0x30;
  if (0xef < uVar3) goto code_r0x1000fd7b;
  goto LAB_1000fd61;
code_r0x1000fd7b:
  uVar12 = extraout_DL;
  if ((CodePage != 65000) && (CodePage != 0xfde9)) {
    BVar4 = IsValidCodePage(CodePage & 0xffff);
    uVar15 = (undefined)in_stack_ffffffdc;
    uVar12 = extraout_DL_01;
    if (BVar4 != 0) {
      BVar4 = GetCPInfo(CodePage,&local_1c);
      uVar15 = (undefined)in_stack_ffffffdc;
      if (BVar4 == 0) {
        uVar12 = extraout_DL_02;
        if (_DAT_10045b00 != 0) {
          FUN_1000f8e6((int)param_2);
          uVar12 = extraout_DL_03;
        }
      }
      else {
        FUN_10006130((uint *)(param_2 + 0x18),0,0x101);
        *(UINT *)(param_2 + 4) = CodePage;
        *(undefined4 *)(param_2 + 0x21c) = 0;
        if (local_1c.MaxCharSize < 2) {
          *(undefined4 *)(param_2 + 8) = 0;
        }
        else {
          pBVar5 = local_1c.LeadByte;
          while ((local_1c.LeadByte[0] != 0 && (bVar1 = pBVar5[1], bVar1 != 0))) {
            for (uVar3 = (uint)*pBVar5; uVar3 <= bVar1; uVar3 = uVar3 + 1) {
              param_2[uVar3 + 0x19] = (__crt_multibyte_data)((byte)param_2[uVar3 + 0x19] | 4);
            }
            pBVar5 = pBVar5 + 2;
            local_1c.LeadByte[0] = *pBVar5;
          }
          p_Var6 = param_2 + 0x1a;
          iVar9 = 0xfe;
          do {
            *p_Var6 = (__crt_multibyte_data)((byte)*p_Var6 | 8);
            p_Var6 = p_Var6 + 1;
            iVar9 = iVar9 + -1;
          } while (iVar9 != 0);
          pwVar7 = CPtoLocaleName(*(int *)(param_2 + 4));
          *(wchar_t **)(param_2 + 0x21c) = pwVar7;
          *(undefined4 *)(param_2 + 8) = 1;
        }
        *(undefined4 *)(param_2 + 0xc) = 0;
        *(undefined4 *)(param_2 + 0x10) = 0;
        *(undefined4 *)(param_2 + 0x14) = 0;
LAB_1000fef6:
        uVar15 = (undefined)in_stack_ffffffdc;
        setSBUpLow(param_2);
        uVar12 = extraout_DL_04;
      }
    }
  }
  goto LAB_1000ff00;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

void FUN_1000ff10(void)

{
  if (PTR_DAT_10033c9c != &DAT_10033ca0) {
    __lock(0xc);
    PTR_DAT_10033c9c =
         (undefined *)__updatetlocinfoEx_nolock((int **)&PTR_DAT_10033c9c,(int *)&DAT_10033ca0);
    FUN_1000ff59();
  }
  return;
}



void FUN_1000ff59(void)

{
  FUN_10012036(0xc);
  return;
}



void __cdecl
FUN_1000ff62(ushort *param_1,char **param_2,char *param_3,int param_4,int param_5,int param_6,
            int param_7,int *param_8)

{
  char cVar1;
  uint uVar2;
  bool bVar3;
  bool bVar4;
  bool bVar5;
  ushort uVar6;
  ushort uVar7;
  ushort uVar8;
  ushort uVar9;
  int iVar10;
  int *piVar11;
  uint uVar12;
  int iVar13;
  ushort uVar14;
  undefined **ppuVar15;
  undefined **ppuVar16;
  undefined4 extraout_EDX;
  char *pcVar17;
  undefined **ppuVar18;
  ushort *puVar19;
  undefined4 uVar20;
  ushort uVar21;
  int iVar22;
  uint uVar23;
  uint uVar24;
  ushort *puVar25;
  undefined4 uVar26;
  ushort uVar27;
  char *pcVar28;
  int iVar29;
  uint uVar30;
  int local_70;
  uint local_6c;
  undefined **local_68;
  char local_59;
  int local_58;
  char *local_54;
  uint local_50;
  undefined2 local_4c;
  undefined2 uStack74;
  undefined2 uStack72;
  undefined2 uStack70;
  undefined *local_44;
  undefined4 local_40;
  ushort uStack60;
  undefined2 uStack58;
  ushort uStack56;
  ushort uStack54;
  byte local_30;
  undefined uStack47;
  ushort uStack46;
  ushort local_2c [4];
  char local_24 [23];
  char local_d;
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  local_70 = 1;
  iVar10 = 0;
  uVar6 = 0;
  pcVar28 = local_24;
  local_50 = 0;
  bVar3 = false;
  bVar5 = false;
  bVar4 = false;
  local_58 = 0;
  if (param_8 != (int *)0x0) {
    local_54 = param_3;
    for (; (((cVar1 = *param_3, cVar1 == ' ' || (cVar1 == '\t')) || (cVar1 == '\n')) ||
           (cVar1 == '\r')); param_3 = param_3 + 1) {
    }
LAB_1000ffe2:
    pcVar17 = param_3;
    iVar22 = 0;
    local_59 = *pcVar17;
    param_3 = pcVar17 + 1;
    if (false) goto switchD_1000fff1_caseD_a;
    switch(iVar10) {
    case 0:
      if (8 < (byte)(local_59 - 0x31U)) {
        if (local_59 == ***(char ***)(*param_8 + 0x84)) {
LAB_10010016:
          iVar10 = 5;
        }
        else if (local_59 == '+') {
          iVar10 = 2;
          uVar6 = 0;
        }
        else if (local_59 == '-') {
          iVar10 = 2;
          uVar6 = 0x8000;
        }
        else {
          if (local_59 != '0') goto LAB_100102be;
LAB_10010030:
          iVar10 = 1;
        }
        goto LAB_1000ffe2;
      }
      break;
    case 1:
      bVar3 = true;
      if (8 < (byte)(local_59 - 0x31U)) {
        if (local_59 == ***(char ***)(*param_8 + 0x84)) goto LAB_10010068;
        if ((local_59 != '+') && (local_59 != '-')) {
          if (local_59 != '0') goto LAB_1001007b;
          goto LAB_10010030;
        }
        goto LAB_1001009c;
      }
      break;
    case 2:
      if (8 < (byte)(local_59 - 0x31U)) {
        if (local_59 == ***(char ***)(*param_8 + 0x84)) goto LAB_10010016;
        pcVar17 = local_54;
        if (local_59 == '0') goto LAB_10010030;
        goto LAB_100102c2;
      }
      break;
    case 3:
      while (('/' < local_59 && (local_59 < ':'))) {
        if (local_50 < 0x19) {
          local_50 = local_50 + 1;
          *pcVar28 = local_59 + -0x30;
          pcVar28 = pcVar28 + 1;
        }
        else {
          local_58 = local_58 + 1;
        }
        local_59 = *param_3;
        param_3 = param_3 + 1;
      }
      if (local_59 != ***(char ***)(*param_8 + 0x84)) {
        if ((local_59 == '+') || (local_59 == '-')) goto LAB_1001009c;
LAB_1001007b:
        bVar3 = true;
        iVar22 = 0;
        if (('C' < local_59) && ((local_59 < 'F' || ((byte)(local_59 + 0x9cU) < 2))))
        goto LAB_10010095;
        goto LAB_100102be;
      }
LAB_10010068:
      bVar3 = true;
      iVar10 = 4;
      goto LAB_1000ffe2;
    case 4:
      bVar3 = true;
      bVar5 = true;
      if (local_50 == 0) {
        while (local_59 == '0') {
          local_58 = local_58 + -1;
          local_59 = *param_3;
          param_3 = param_3 + 1;
        }
      }
      while (('/' < local_59 && (local_59 < ':'))) {
        if (local_50 < 0x19) {
          local_50 = local_50 + 1;
          *pcVar28 = local_59 + -0x30;
          pcVar28 = pcVar28 + 1;
          local_58 = local_58 + -1;
        }
        local_59 = *param_3;
        param_3 = param_3 + 1;
      }
      iVar22 = 0;
      if ((local_59 == '+') || (local_59 == '-')) {
LAB_1001009c:
        bVar3 = true;
        iVar10 = 0xb;
        param_3 = param_3 + -1;
      }
      else {
        if ((local_59 < 'D') || (('E' < local_59 && (1 < (byte)(local_59 + 0x9cU))))) {
          pcVar17 = param_3 + -1;
          goto LAB_100102c2;
        }
LAB_10010095:
        bVar3 = true;
        iVar10 = 6;
      }
      goto LAB_1000ffe2;
    case 5:
      bVar5 = true;
      pcVar17 = local_54;
      if ((byte)(local_59 - 0x30U) < 10) {
        iVar10 = 4;
        goto LAB_10010001;
      }
      goto LAB_100102c2;
    case 6:
      local_54 = pcVar17 + -1;
      if ((byte)(local_59 - 0x31U) < 9) goto LAB_100101df;
      if (local_59 == '+') goto LAB_10010210;
      if (local_59 == '-') {
        iVar10 = 7;
        local_70 = -1;
      }
      else {
LAB_100101f5:
        pcVar17 = local_54;
        if (local_59 != '0') goto LAB_100102c2;
        iVar10 = 8;
      }
      goto LAB_1000ffe2;
    case 7:
      if (8 < (byte)(local_59 - 0x31U)) goto LAB_100101f5;
      goto LAB_100101df;
    case 8:
      bVar4 = true;
      while (local_59 == '0') {
        local_59 = *param_3;
        param_3 = param_3 + 1;
      }
      if ((byte)(local_59 - 0x31U) < 9) {
LAB_100101df:
        iVar10 = 9;
        goto LAB_10010001;
      }
      goto LAB_100102be;
    case 9:
      iVar22 = 0;
      bVar4 = true;
      goto LAB_100102a0;
    default:
      goto switchD_1000fff1_caseD_a;
    case 0xb:
      if (param_7 != 0) {
        local_54 = pcVar17;
        if (local_59 == '+') {
LAB_10010210:
          iVar10 = 7;
        }
        else {
          if (local_59 != '-') goto LAB_100102c2;
          local_70 = -1;
          iVar10 = 7;
        }
        goto LAB_1000ffe2;
      }
      iVar10 = 10;
      param_3 = pcVar17;
switchD_1000fff1_caseD_a:
      pcVar17 = param_3;
      if (iVar10 != 10) goto LAB_1000ffe2;
      goto LAB_100102c2;
    }
    iVar10 = 3;
LAB_10010001:
    param_3 = param_3 + -1;
    goto LAB_1000ffe2;
  }
  piVar11 = __errno();
  *piVar11 = 0x16;
  FUN_100090a2();
  uVar20 = extraout_EDX;
  goto LAB_100106c9;
LAB_100102a0:
  if ((local_59 < '0') || ('9' < local_59)) goto LAB_100102b9;
  iVar22 = local_59 + -0x30 + iVar22 * 10;
  if (iVar22 < 0x1451) {
    local_59 = *param_3;
    param_3 = param_3 + 1;
    goto LAB_100102a0;
  }
  iVar22 = 0x1451;
LAB_100102b9:
  while (('/' < local_59 && (local_59 < ':'))) {
    local_59 = *param_3;
    param_3 = param_3 + 1;
  }
LAB_100102be:
  pcVar17 = param_3 + -1;
LAB_100102c2:
  *param_2 = pcVar17;
  if (bVar3) {
    if (0x18 < local_50) {
      if ('\x04' < local_d) {
        local_d = local_d + '\x01';
      }
      pcVar28 = pcVar28 + -1;
      local_58 = local_58 + 1;
      local_50 = 0x18;
    }
    if (local_50 == 0) {
      uVar14 = 0;
      uVar21 = 0;
      uVar26 = 0;
      uVar20 = 0;
    }
    else {
      pcVar28 = pcVar28 + -1;
      cVar1 = *pcVar28;
      while (cVar1 == '\0') {
        local_50 = local_50 - 1;
        local_58 = local_58 + 1;
        pcVar28 = pcVar28 + -1;
        cVar1 = *pcVar28;
      }
      FUN_10015df0(local_24,local_50,&local_40);
      if (local_70 < 0) {
        iVar22 = -iVar22;
      }
      uVar23 = iVar22 + local_58;
      if (!bVar4) {
        uVar23 = uVar23 + param_5;
      }
      if (!bVar5) {
        uVar23 = uVar23 - param_6;
      }
      if (0x1450 < (int)uVar23) {
        uVar21 = 0x7fff;
        uVar26 = 0x80000000;
        goto LAB_100106af;
      }
      if ((int)uVar23 < -0x1450) {
        uVar14 = 0;
        uVar21 = 0;
        uVar26 = 0;
        uVar20 = 0;
      }
      else {
        ppuVar18 = &PTR_DAT_10034148;
        if (uVar23 != 0) {
          if ((int)uVar23 < 0) {
            uVar23 = -uVar23;
            ppuVar18 = (undefined **)0x100342a8;
          }
          if (param_4 == 0) {
            local_40._0_2_ = 0;
          }
LAB_10010668:
          do {
            iVar10 = 0;
            if (uVar23 == 0) break;
            ppuVar18 = ppuVar18 + 0x15;
            uVar24 = (int)uVar23 >> 3;
            uVar12 = uVar23 & 7;
            uVar23 = uVar24;
            if (uVar12 != 0) {
              ppuVar15 = ppuVar18 + uVar12 * 3;
              ppuVar16 = ppuVar15;
              if (0x7fff < *(ushort *)ppuVar15) {
                ppuVar16 = (undefined **)&local_4c;
                local_4c = SUB42(*ppuVar15,0);
                uStack74 = (undefined2)((uint)*ppuVar15 >> 0x10);
                uStack72 = SUB42(ppuVar15[1],0);
                uStack70 = (undefined2)((uint)ppuVar15[1] >> 0x10);
                local_44 = ppuVar15[2];
                iVar22 = CONCAT22(uStack72,uStack74) + -1;
                uStack74 = (undefined2)iVar22;
                uStack72 = (undefined2)((uint)iVar22 >> 0x10);
              }
              uVar14 = (*(ushort *)((int)ppuVar16 + 10) ^ uStack54) & 0x8000;
              local_30 = 0;
              uStack47 = 0;
              uStack46 = 0;
              uVar9 = uStack54 & 0x7fff;
              local_2c[0] = 0;
              uVar27 = *(ushort *)((int)ppuVar16 + 10) & 0x7fff;
              uVar21 = uVar27 + uVar9;
              local_2c[1] = uStack46;
              local_2c[2] = local_2c[0];
              local_2c[3] = uStack46;
              if (((uVar9 < 0x7fff) && (uVar27 < 0x7fff)) && (uVar21 < 0xbffe)) {
                uVar7 = local_2c[0];
                uVar8 = uStack46;
                if (0x3fbf < uVar21) {
                  if (((uVar9 == 0) &&
                      (uVar21 = uVar21 + 1, (CONCAT22(uStack54,uStack56) & 0x7fffffff) == 0)) &&
                     ((CONCAT22(uStack58,uStack60) == 0 &&
                      (CONCAT22(local_40._2_2_,(ushort)local_40) == 0)))) {
                    uStack54 = 0;
                    goto LAB_10010668;
                  }
                  if (((uVar27 != 0) || (uVar21 = uVar21 + 1, ((uint)ppuVar16[2] & 0x7fffffff) != 0)
                      ) || ((ppuVar16[1] != (undefined *)0x0 ||
                            (uVar7 = local_2c[0], uVar8 = uStack46, *ppuVar16 != (undefined *)0x0)))
                     ) {
                    puVar19 = local_2c;
                    local_6c = 5;
                    iVar22 = iVar10;
                    do {
                      if (0 < (int)local_6c) {
                        puVar25 = (ushort *)((int)&local_40 + iVar22 * 2);
                        local_68 = ppuVar16 + 2;
                        iVar29 = local_6c;
                        do {
                          uVar12 = (uint)*puVar25 * (uint)*(ushort *)local_68 +
                                   *(int *)(puVar19 + -2);
                          if ((uVar12 < *(uint *)(puVar19 + -2)) ||
                             (iVar13 = iVar10, uVar12 < (uint)*puVar25 * (uint)*(ushort *)local_68))
                          {
                            iVar13 = 1;
                          }
                          *(uint *)(puVar19 + -2) = uVar12;
                          if (iVar13 != 0) {
                            *puVar19 = *puVar19 + 1;
                          }
                          local_68 = (undefined **)((int)local_68 + -2);
                          puVar25 = puVar25 + 1;
                          iVar29 = iVar29 + -1;
                        } while (0 < iVar29);
                      }
                      puVar19 = puVar19 + 1;
                      iVar22 = iVar22 + 1;
                      local_6c = local_6c + -1;
                    } while (0 < (int)local_6c);
                    local_54 = (char *)CONCAT22(local_2c[3],local_2c[2]);
                    uVar21 = uVar21 + 0xc002;
                    uVar12 = CONCAT22(uStack46,CONCAT11(uStack47,local_30));
                    if ((short)uVar21 < 1) {
LAB_10010537:
                      uVar21 = uVar21 - 1;
                      if (-1 < (short)uVar21) goto LAB_100105a0;
                      local_6c = (uint)(ushort)-uVar21;
                      uVar21 = 0;
                      uVar24 = (uint)local_54;
                      do {
                        if ((local_30 & 1) != 0) {
                          iVar10 = iVar10 + 1;
                        }
                        uVar2 = CONCAT22(local_2c[1],local_2c[0]);
                        local_2c[1] = local_2c[1] >> 1 | (ushort)((uVar24 << 0x1f) >> 0x10);
                        uVar30 = uVar12 >> 1;
                        local_54 = (char *)(uVar24 >> 1);
                        uVar12 = uVar30 | uVar2 << 0x1f;
                        local_6c = local_6c - 1;
                        local_2c[2] = (ushort)local_54;
                        local_2c[3] = (ushort)(uVar24 >> 0x11);
                        local_2c[0] = (ushort)(uVar2 >> 1);
                        local_30 = (byte)uVar30;
                        uStack47 = (undefined)(uVar30 >> 8);
                        uStack46 = (ushort)(uVar12 >> 0x10);
                        uVar24 = (uint)local_54;
                      } while (local_6c != 0);
                      if (iVar10 == 0) goto LAB_100105a0;
                      uVar9 = (ushort)uVar30 | 1;
                      local_30 = (byte)uVar9;
                      uVar12 = uVar30 | 1;
                    }
                    else {
                      do {
                        if ((int)local_54 < 0) break;
                        iVar22 = CONCAT22(local_2c[1],local_2c[0]) * 2;
                        uVar9 = local_2c[1] >> 0xf;
                        local_2c[0] = (ushort)iVar22 | (ushort)(uVar12 >> 0x1f);
                        uVar12 = uVar12 * 2;
                        local_2c[1] = (ushort)((uint)iVar22 >> 0x10);
                        uVar24 = (int)local_54 * 2;
                        local_30 = (byte)uVar12;
                        uStack47 = (undefined)(uVar12 >> 8);
                        uStack46 = (ushort)(uVar12 >> 0x10);
                        local_54 = (char *)(uVar24 | uVar9);
                        uVar21 = uVar21 - 1;
                        local_2c[2] = (ushort)local_54;
                        local_2c[3] = (ushort)(uVar24 >> 0x10);
                      } while (0 < (short)uVar21);
                      if ((short)uVar21 < 1) goto LAB_10010537;
LAB_100105a0:
                      uVar9 = CONCAT11(uStack47,local_30);
                    }
                    if ((0x8000 < uVar9) || ((uVar12 & 0x1ffff) == 0x18000)) {
                      if (CONCAT22(local_2c[0],uStack46) == -1) {
                        uStack46 = 0;
                        local_2c[0] = 0;
                        if (CONCAT22(local_2c[2],local_2c[1]) == -1) {
                          local_2c[1] = 0;
                          local_2c[2] = 0;
                          if (local_2c[3] == 0xffff) {
                            local_2c[3] = 0x8000;
                            uVar21 = uVar21 + 1;
                          }
                          else {
                            local_2c[3] = local_2c[3] + 1;
                          }
                        }
                        else {
                          iVar10 = CONCAT22(local_2c[2],local_2c[1]) + 1;
                          local_2c[1] = (ushort)iVar10;
                          local_2c[2] = (ushort)((uint)iVar10 >> 0x10);
                        }
                        local_54 = (char *)CONCAT22(local_2c[3],local_2c[2]);
                      }
                      else {
                        iVar10 = CONCAT22(local_2c[0],uStack46) + 1;
                        uStack46 = (ushort)iVar10;
                        local_2c[0] = (ushort)((uint)iVar10 >> 0x10);
                      }
                    }
                    if (uVar21 < 0x7fff) {
                      local_40._0_2_ = uStack46;
                      local_40._2_2_ = local_2c[0];
                      uStack60 = local_2c[1];
                      uStack58 = SUB42(local_54,0);
                      uStack56 = (ushort)((uint)local_54 >> 0x10);
                      uStack54 = uVar21 | uVar14;
                    }
                    else {
                      uStack60 = 0;
                      uStack58 = 0;
                      local_40._0_2_ = 0;
                      local_40._2_2_ = 0;
                      iVar10 = ((uVar14 == 0) - 1 & 0x80000000) + 0x7fff8000;
                      uStack56 = (ushort)iVar10;
                      uStack54 = (ushort)((uint)iVar10 >> 0x10);
                    }
                    goto LAB_10010668;
                  }
                }
              }
              else {
                iVar10 = ((uVar14 == 0) - 1 & 0x80000000) + 0x7fff8000;
                uStack56 = (ushort)iVar10;
                uStack54 = (ushort)((uint)iVar10 >> 0x10);
                uVar7 = uStack56;
                uVar8 = uStack54;
              }
              uStack54 = uVar8;
              uStack56 = uVar7;
              uStack60 = 0;
              uStack58 = 0;
              local_40._0_2_ = 0;
              local_40._2_2_ = 0;
            }
          } while( true );
        }
        uVar20 = CONCAT22(uStack60,local_40._2_2_);
        uVar26 = CONCAT22(uStack56,uStack58);
        uVar21 = uStack54;
        uVar14 = (ushort)local_40;
      }
    }
  }
  else {
    uVar21 = 0;
    uVar26 = 0;
LAB_100106af:
    uVar14 = 0;
    uVar20 = 0;
  }
  param_1[5] = uVar21 | uVar6;
  *param_1 = uVar14;
  *(undefined4 *)(param_1 + 1) = uVar20;
  *(undefined4 *)(param_1 + 3) = uVar26;
LAB_100106c9:
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,(char)uVar20,(char)param_1);
  return;
}



ushort __cdecl FUN_1001070a(int param_1,ushort param_2,pthreadlocinfo *param_3)

{
  ushort uVar1;
  undefined2 extraout_var;
  int iVar2;
  pthreadlocinfo local_1c [2];
  int local_14;
  char local_10;
  CHAR local_c;
  CHAR local_b;
  undefined local_a;
  ushort local_8 [2];
  
  FUN_10008755(local_1c,param_3);
  if (param_1 + 1U < 0x101) {
    local_8[0] = local_1c[0]->pctype[param_1];
  }
  else {
    uVar1 = FUN_10008ae9(param_1 >> 8 & 0xff,local_1c);
    if (CONCAT22(extraout_var,uVar1) == 0) {
      local_b = '\0';
      iVar2 = 1;
      local_c = (CHAR)param_1;
    }
    else {
      local_a = 0;
      iVar2 = 2;
      local_c = (CHAR)((uint)param_1 >> 8);
      local_b = (CHAR)param_1;
    }
    iVar2 = FUN_10015189(local_1c,1,&local_c,iVar2,local_8,local_1c[0]->lc_codepage,1);
    if (iVar2 == 0) {
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
      return 0;
    }
  }
  if (local_10 != '\0') {
    *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
  }
  return local_8[0] & param_2;
}



void __cdecl FUN_100107bb(uint *param_1,char *param_2,pthreadlocinfo *param_3,char **param_4)

{
  undefined extraout_DL;
  undefined in_stack_ffffffd0;
  int local_28;
  char local_24;
  char *local_1c;
  uint *local_18;
  ushort local_14 [6];
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  local_18 = param_1;
  FUN_10008755(&stack0xffffffd0,param_3);
  FUN_1000ff62(local_14,&local_1c,param_2,0,0,0,0,(int *)&stack0xffffffd0);
  if (param_4 != (char **)0x0) {
    *param_4 = local_1c;
  }
  FUN_1001587e(local_14,local_18);
  if (local_24 != '\0') {
    *(uint *)(local_28 + 0x70) = *(uint *)(local_28 + 0x70) & 0xfffffffd;
  }
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,extraout_DL,in_stack_ffffffd0);
  return;
}



void __cdecl FUN_1001085f(uint *param_1,char *param_2,pthreadlocinfo *param_3)

{
  undefined extraout_DL;
  undefined in_stack_ffffffd4;
  int local_24;
  char local_20;
  char *local_1c;
  undefined4 local_18;
  ushort local_14 [6];
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  FUN_10008755(&stack0xffffffd4,param_3);
  local_18 = FUN_1000ff62(local_14,&local_1c,param_2,0,0,0,0,(int *)&stack0xffffffd4);
  FUN_1001530c(local_14,param_1);
  if (local_20 != '\0') {
    *(uint *)(local_24 + 0x70) = *(uint *)(local_24 + 0x70) & 0xfffffffd;
  }
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,extraout_DL,in_stack_ffffffd4);
  return;
}



void __cdecl FUN_100108ed(uint *param_1,char *param_2,pthreadlocinfo *param_3)

{
  FUN_100107bb(param_1,param_2,param_3,(char **)0x0);
  return;
}



// Library Function - Single Match
//  __aulldvrm
// 
// Library: Visual Studio

undefined8 __aulldvrm(uint param_1,uint param_2,uint param_3,uint param_4)

{
  ulonglong uVar1;
  longlong lVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  
  uVar3 = param_1;
  uVar8 = param_4;
  uVar6 = param_2;
  uVar9 = param_3;
  if (param_4 == 0) {
    uVar3 = param_2 / param_3;
    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) /
                 (ulonglong)param_3);
  }
  else {
    do {
      uVar5 = uVar8 >> 1;
      uVar9 = uVar9 >> 1 | (uint)((uVar8 & 1) != 0) << 0x1f;
      uVar7 = uVar6 >> 1;
      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) << 0x1f;
      uVar8 = uVar5;
      uVar6 = uVar7;
    } while (uVar5 != 0);
    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar9;
    iVar4 = (int)uVar1;
    lVar2 = (ulonglong)param_3 * (uVar1 & 0xffffffff);
    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);
    uVar8 = uVar3 + iVar4 * param_4;
    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar8)) ||
       ((param_2 <= uVar8 && (param_1 < (uint)lVar2)))) {
      iVar4 = iVar4 + -1;
    }
    uVar3 = 0;
  }
  return CONCAT44(uVar3,iVar4);
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe

void __cdecl
FUN_100109a5(int *param_1,wchar_t *param_2,uint param_3,LPCSTR param_4,int param_5,LPWSTR param_6,
            int param_7,UINT param_8,int param_9)

{
  uint uVar1;
  char *pcVar2;
  int iVar3;
  uint uVar4;
  undefined4 *lpWideCharStr;
  uint cchWideChar;
  undefined4 *puVar5;
  int iVar6;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined uVar7;
  undefined uVar8;
  uint uVar9;
  
  uVar1 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  pcVar2 = param_4;
  iVar6 = param_5;
  if (0 < param_5) {
    do {
      iVar6 = iVar6 + -1;
      if (*pcVar2 == '\0') goto LAB_100109d1;
      pcVar2 = pcVar2 + 1;
    } while (iVar6 != 0);
    iVar6 = -1;
LAB_100109d1:
    iVar3 = (param_5 - iVar6) + -1;
    iVar6 = param_5 - iVar6;
    if (param_5 <= iVar3) {
      iVar6 = iVar3;
    }
  }
  if (param_8 == 0) {
    param_8 = *(UINT *)(*param_1 + 4);
  }
  uVar4 = MultiByteToWideChar(param_8,(uint)(param_9 != 0) * 8 + 1,param_4,iVar6,(LPWSTR)0x0,0);
  uVar7 = extraout_DL;
  if (uVar4 != 0) {
    if ((((int)uVar4 < 1) || (uVar7 = (undefined)(0xffffffe0 % uVar4), 0xffffffe0 / uVar4 < 2)) ||
       (uVar4 * 2 + 8 <= uVar4 * 2)) {
      lpWideCharStr = (undefined4 *)0x0;
    }
    else {
      uVar9 = uVar4 * 2 + 8;
      if (uVar9 < 0x401) {
        puVar5 = (undefined4 *)&stack0xffffffe8;
        lpWideCharStr = (undefined4 *)&stack0xffffffe8;
        if (&stack0x00000000 != (undefined *)0x18) {
LAB_10010a72:
          lpWideCharStr = puVar5 + 2;
        }
      }
      else {
        lpWideCharStr = (undefined4 *)FUN_100017b0(uVar9);
        uVar7 = extraout_DL_00;
        if (lpWideCharStr != (undefined4 *)0x0) {
          *lpWideCharStr = 0xdddd;
          puVar5 = lpWideCharStr;
          goto LAB_10010a72;
        }
      }
    }
    if (lpWideCharStr != (undefined4 *)0x0) {
      iVar6 = MultiByteToWideChar(param_8,1,param_4,iVar6,(LPWSTR)lpWideCharStr,uVar4);
      uVar9 = uVar4;
      if ((iVar6 != 0) &&
         (cchWideChar = FUN_10010fbe(param_2,param_3,(LPCWSTR)lpWideCharStr,uVar4,(LPWSTR)0x0,0),
         cchWideChar != 0)) {
        if ((param_3 & 0x400) == 0) {
          if ((((int)cchWideChar < 1) || (0xffffffe0 / cchWideChar < 2)) ||
             (cchWideChar * 2 + 8 <= cchWideChar * 2)) {
            puVar5 = (undefined4 *)0x0;
LAB_10010b47:
            if (puVar5 != (undefined4 *)0x0) {
              iVar6 = FUN_10010fbe(param_2,param_3,(LPCWSTR)lpWideCharStr,uVar9,(LPWSTR)puVar5,
                                   cchWideChar);
              if (iVar6 != 0) {
                if (param_7 == 0) {
                  param_7 = 0;
                  param_6 = (LPWSTR)0x0;
                }
                WideCharToMultiByte(param_8,0,(LPCWSTR)puVar5,cchWideChar,(LPSTR)param_6,param_7,
                                    (LPCSTR)0x0,(LPBOOL)0x0);
              }
              FUN_100087dd((int)puVar5);
            }
          }
          else {
            uVar4 = cchWideChar * 2 + 8;
            if (uVar4 < 0x401) {
              puVar5 = (undefined4 *)&stack0xffffffe8;
              if (&stack0x00000000 != (undefined *)0x18) {
LAB_10010b40:
                puVar5 = puVar5 + 2;
                goto LAB_10010b47;
              }
            }
            else {
              puVar5 = (undefined4 *)FUN_100017b0(uVar4);
              if (puVar5 != (undefined4 *)0x0) {
                *puVar5 = 0xdddd;
                goto LAB_10010b40;
              }
            }
          }
        }
        else if ((param_7 != 0) && ((int)cchWideChar <= param_7)) {
          FUN_10010fbe(param_2,param_3,(LPCWSTR)lpWideCharStr,uVar4,param_6,param_7);
        }
      }
      uVar8 = (undefined)uVar9;
      FUN_100087dd((int)lpWideCharStr);
      uVar7 = extraout_DL_01;
      goto LAB_10010b95;
    }
  }
  uVar8 = (undefined)uVar4;
LAB_10010b95:
  FUN_10008ec7(uVar1 ^ (uint)&stack0xfffffffc,uVar7,uVar8);
  return;
}



void __cdecl
FUN_10010ba9(pthreadlocinfo *param_1,wchar_t *param_2,uint param_3,LPCSTR param_4,int param_5,
            LPWSTR param_6,int param_7,UINT param_8,int param_9)

{
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_10008755(local_14,param_1);
  FUN_100109a5(local_14,param_2,param_3,param_4,param_5,param_6,param_7,param_8,param_9);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___raise_securityfailure
// 
// Library: Visual Studio 2012 Release

void __cdecl ___raise_securityfailure(EXCEPTION_POINTERS *param_1)

{
  _DAT_10045e24 = IsDebuggerPresent();
  FUN_10011078();
  ___crtUnhandledException(param_1);
  if (_DAT_10045e24 == 0) {
    FUN_10011078();
  }
  ___crtTerminateProcess(0xc0000409);
  return;
}



void FUN_10010d28(void)

{
  DecodePointer(DAT_10045e30);
  return;
}



void __cdecl FUN_10010d35(undefined4 param_1)

{
  DAT_10045e28 = param_1;
  DAT_10045e2c = param_1;
  DAT_10045e30 = param_1;
  DAT_10045e34 = param_1;
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_10010d51(int param_1)

{
  bool bVar1;
  uint uVar2;
  int *piVar3;
  PVOID Ptr;
  code *pcVar4;
  code *pcVar5;
  int iVar6;
  _ptiddata p_Var7;
  int local_34;
  void *local_30;
  code **local_20;
  
  local_30 = (void *)0x0;
  local_34 = 0;
  bVar1 = false;
  p_Var7 = (_ptiddata)0x0;
  if (param_1 < 0xc) {
    if (param_1 != 0xb) {
      if (param_1 == 2) {
        local_20 = (code **)&DAT_10045e28;
        Ptr = DAT_10045e28;
        goto LAB_10010e10;
      }
      if (param_1 != 4) {
        if (param_1 == 6) goto LAB_10010de8;
        if (param_1 != 8) goto LAB_10010dd6;
      }
    }
    p_Var7 = __getptd_noexit();
    if (p_Var7 == (_ptiddata)0x0) {
      return 0xffffffff;
    }
    uVar2 = FUN_10010f0c(param_1,(uint)p_Var7->_pxcptacttab);
    local_20 = (code **)(uVar2 + 8);
    pcVar4 = *local_20;
  }
  else {
    if (param_1 == 0xf) {
      local_20 = (code **)&DAT_10045e34;
      Ptr = DAT_10045e34;
    }
    else if (param_1 == 0x15) {
      local_20 = (code **)&DAT_10045e2c;
      Ptr = DAT_10045e2c;
    }
    else {
      if (param_1 != 0x16) {
LAB_10010dd6:
        piVar3 = __errno();
        *piVar3 = 0x16;
        FUN_100090a2();
        return 0xffffffff;
      }
LAB_10010de8:
      local_20 = (code **)&DAT_10045e30;
      Ptr = DAT_10045e30;
    }
LAB_10010e10:
    bVar1 = true;
    pcVar4 = (code *)DecodePointer(Ptr);
  }
  if (pcVar4 == (code *)0x1) {
    return 0;
  }
  if (pcVar4 == (code *)0x0) {
    __exit(3);
  }
  if (bVar1) {
    __lock(0);
  }
  if (((param_1 == 8) || (param_1 == 0xb)) || (param_1 == 4)) {
    local_30 = p_Var7->_tpxcptinfoptrs;
    p_Var7->_tpxcptinfoptrs = (void *)0x0;
    if (param_1 == 8) {
      local_34 = p_Var7->_tfpecode;
      p_Var7->_tfpecode = 0x8c;
      goto LAB_10010e6f;
    }
  }
  else {
LAB_10010e6f:
    if (param_1 == 8) {
      for (iVar6 = 3; iVar6 < 0xc; iVar6 = iVar6 + 1) {
        *(undefined4 *)((int)p_Var7->_pxcptacttab + iVar6 * 0xc + 8) = 0;
      }
      goto LAB_10010eae;
    }
  }
  pcVar5 = (code *)EncodePointer((PVOID)0x0);
  *local_20 = pcVar5;
LAB_10010eae:
  FUN_10010ed2();
  if (param_1 == 8) {
    (*pcVar4)(8,p_Var7->_tfpecode);
  }
  else {
    (*pcVar4)(param_1);
    if ((param_1 != 0xb) && (param_1 != 4)) {
      return 0;
    }
  }
  p_Var7->_tpxcptinfoptrs = local_30;
  if (param_1 == 8) {
    p_Var7->_tfpecode = local_34;
  }
  return 0;
}



void FUN_10010ed2(void)

{
  int unaff_EBX;
  
  if (unaff_EBX != 0) {
    FUN_10012036(0);
  }
  return;
}



uint __cdecl FUN_10010f0c(int param_1,uint param_2)

{
  uint uVar1;
  
  uVar1 = param_2;
  do {
    if (*(int *)(uVar1 + 4) == param_1) break;
    uVar1 = uVar1 + 0xc;
  } while (uVar1 < param_2 + 0x90);
  if ((param_2 + 0x90 <= uVar1) || (*(int *)(uVar1 + 4) != param_1)) {
    uVar1 = 0;
  }
  return uVar1;
}



// Library Function - Multiple Matches With Different Base Names
//  int __cdecl GetTableIndexFromLocaleName(wchar_t const *)
//  int __cdecl ATL::_AtlGetTableIndexFromLocaleName(wchar_t const *)
//  _GetTableIndexFromLocaleName
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release

undefined4 __cdecl FID_conflict_GetTableIndexFromLocaleName(wchar_t *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = 0;
  iVar2 = 0xe3;
  do {
    iVar3 = (iVar2 + iVar4) / 2;
    iVar1 = __wcsnicmp(param_1,*(wchar_t **)(&UNK_1002b920 + iVar3 * 8),0x55);
    if (iVar1 == 0) {
      return *(undefined4 *)(&UNK_1002b924 + iVar3 * 8);
    }
    if (iVar1 < 0) {
      iVar2 = iVar3 + -1;
    }
    else {
      iVar4 = iVar3 + 1;
    }
  } while (iVar4 <= iVar2);
  return 0xffffffff;
}



// Library Function - Multiple Matches With Different Base Names
//  unsigned long __cdecl ATL::_AtlDownlevelLocaleNameToLCID(wchar_t const *)
//  ___acrt_DownlevelLocaleNameToLCID
//  ___crtDownlevelLocaleNameToLCID
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release

undefined4 __cdecl FID_conflict__AtlDownlevelLocaleNameToLCID(wchar_t *param_1)

{
  uint uVar1;
  
  if (param_1 != (wchar_t *)0x0) {
    uVar1 = FID_conflict_GetTableIndexFromLocaleName(param_1);
    if ((-1 < (int)uVar1) && (uVar1 < 0xe4)) {
      return *(undefined4 *)(&DAT_1002b200 + uVar1 * 8);
    }
  }
  return 0;
}



void __cdecl
FUN_10010fbe(wchar_t *param_1,DWORD param_2,LPCWSTR param_3,int param_4,LPWSTR param_5,int param_6)

{
  LCID Locale;
  
  if ((code *)(DAT_100476d0 ^ DAT_1003352c) != (code *)0x0) {
    (*(code *)(DAT_100476d0 ^ DAT_1003352c))(param_1,param_2,param_3,param_4,param_5,param_6,0,0,0);
    return;
  }
  Locale = FID_conflict__AtlDownlevelLocaleNameToLCID(param_1);
  LCMapStringW(Locale,param_2,param_3,param_4,param_5,param_6);
  return;
}



// Library Function - Single Match
//  __wcsnicmp
// 
// Library: Visual Studio 2019 Release

int __cdecl __wcsnicmp(wchar_t *_Str1,wchar_t *_Str2,size_t _MaxCount)

{
  wchar_t wVar1;
  int iVar2;
  wchar_t wVar3;
  
  iVar2 = 0;
  if (_MaxCount != 0) {
    iVar2 = (int)_Str1 - (int)_Str2;
    do {
      wVar3 = *(wchar_t *)(iVar2 + (int)_Str2);
      if ((0x40 < (ushort)wVar3) && ((ushort)wVar3 < 0x5b)) {
        wVar3 = wVar3 + L' ';
      }
      wVar1 = *_Str2;
      if ((0x40 < (ushort)wVar1) && ((ushort)wVar1 < 0x5b)) {
        wVar1 = wVar1 + L' ';
      }
      _Str2 = _Str2 + 1;
      _MaxCount = _MaxCount - 1;
    } while (((_MaxCount != 0) && (wVar3 != L'\0')) && (wVar3 == wVar1));
    iVar2 = (uint)(ushort)wVar3 - (uint)(ushort)wVar1;
  }
  return iVar2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_10011078(void)

{
  _DAT_10047648 = 0;
  return;
}



undefined4 FUN_10011080(void)

{
  undefined **ppuVar1;
  int iVar2;
  
  iVar2 = 0x14;
  if (DAT_10047644 == 0) {
    iVar2 = 0x200;
  }
  else if (0x13 < DAT_10047644) goto LAB_1001109f;
  DAT_10047644 = iVar2;
LAB_1001109f:
  DAT_10047640 = FUN_10001770(DAT_10047644,4);
  if (DAT_10047640 == (uint *)0x0) {
    DAT_10047644 = 0x14;
    DAT_10047640 = FUN_10001770(0x14,4);
    if (DAT_10047640 == (uint *)0x0) {
      return 0x1a;
    }
  }
  iVar2 = 0;
  ppuVar1 = &PTR_DAT_10033d68;
  do {
    *(undefined ***)(iVar2 + (int)DAT_10047640) = ppuVar1;
    ppuVar1 = ppuVar1 + 8;
    iVar2 = iVar2 + 4;
  } while ((int)ppuVar1 < 0x10033fe8);
  return 0;
}



void FUN_100110f3(void)

{
  FUN_10016117();
  if (DAT_100458c4 != '\0') {
    FUN_10015fd0();
  }
  FUN_10001730(DAT_10047640);
  DAT_10047640 = 0;
  return;
}



undefined ** FUN_1001111a(void)

{
  return &PTR_DAT_10033d68;
}



// Library Function - Single Match
//  __lock_file
// 
// Library: Visual Studio 2012 Release

void __cdecl __lock_file(FILE *_File)

{
  if ((_File < &PTR_DAT_10033d68) || ((FILE *)&DAT_10033fc8 < _File)) {
    EnterCriticalSection((LPCRITICAL_SECTION)(_File + 1));
  }
  else {
    __lock(((int)&_File[-0x8019ec]._bufsiz >> 5) + 0x10);
    _File->_flag = _File->_flag | 0x8000;
  }
  return;
}



// Library Function - Single Match
//  __lock_file2
// 
// Library: Visual Studio 2012 Release

void __cdecl __lock_file2(int _Index,void *_File)

{
  if (_Index < 0x14) {
    __lock(_Index + 0x10);
    *(uint *)((int)_File + 0xc) = *(uint *)((int)_File + 0xc) | 0x8000;
    return;
  }
  EnterCriticalSection((LPCRITICAL_SECTION)((int)_File + 0x20));
  return;
}



// Library Function - Single Match
//  __unlock_file
// 
// Libraries: Visual Studio 2008 Release, Visual Studio 2010 Release, Visual Studio 2012 Release

void __cdecl __unlock_file(FILE *_File)

{
  if (((FILE *)0x10033d67 < _File) && (_File < (FILE *)0x10033fc9)) {
    _File->_flag = _File->_flag & 0xffff7fff;
    FUN_10012036(((int)&_File[-0x8019ec]._bufsiz >> 5) + 0x10);
    return;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)(_File + 1));
  return;
}



// Library Function - Single Match
//  __unlock_file2
// 
// Library: Visual Studio 2012 Release

void __cdecl __unlock_file2(int _Index,void *_File)

{
  if (_Index < 0x14) {
    *(uint *)((int)_File + 0xc) = *(uint *)((int)_File + 0xc) & 0xffff7fff;
    FUN_10012036(_Index + 0x10);
    return;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)((int)_File + 0x20));
  return;
}



// Library Function - Single Match
//  __fileno
// 
// Library: Visual Studio 2012 Release

int __cdecl __fileno(FILE *_File)

{
  int *piVar1;
  
  if (_File == (FILE *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_100090a2();
    return -1;
  }
  return _File->_file;
}



byte __cdecl FUN_1001121a(uint param_1)

{
  int *piVar1;
  
  if (param_1 == 0xfffffffe) {
    piVar1 = __errno();
    *piVar1 = 9;
  }
  else {
    if ((-1 < (int)param_1) && (param_1 < DAT_100476e4)) {
      return *(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + (param_1 & 0x1f) * 0x40) & 0x40;
    }
    piVar1 = __errno();
    *piVar1 = 9;
    FUN_100090a2();
  }
  return 0;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_1001126e(WCHAR *param_1,WCHAR *param_2,uint param_3)

{
  ulong *puVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  
  if (param_1 == (WCHAR *)0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    if (((int)param_1 < 0) || (DAT_100476e4 <= param_1)) {
      puVar1 = ___doserrno();
      *puVar1 = 0;
    }
    else {
      iVar4 = ((uint)param_1 & 0x1f) * 0x40;
      if ((*(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + iVar4) & 1) != 0) {
        FUN_10016204((uint)param_1);
        if ((*(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + iVar4) & 1) == 0) {
          piVar2 = __errno();
          *piVar2 = 9;
          puVar1 = ___doserrno();
          *puVar1 = 0;
          uVar3 = 0xffffffff;
        }
        else {
          uVar3 = FUN_1001135d(param_1,param_2,param_3);
        }
        FUN_10011335();
        return uVar3;
      }
      puVar1 = ___doserrno();
      *puVar1 = 0;
    }
    piVar2 = __errno();
    *piVar2 = 9;
    FUN_100090a2();
  }
  return 0xffffffff;
}



void FUN_10011335(void)

{
  uint unaff_ESI;
  
  FUN_1001637f(unaff_ESI);
  return;
}



// WARNING: Function: __alloca_probe replaced with injection: alloca_probe

void __cdecl FUN_1001135d(WCHAR *param_1,WCHAR *param_2,uint param_3)

{
  char cVar1;
  WCHAR WVar2;
  byte bVar3;
  wint_t wVar4;
  ulong *puVar5;
  int *piVar6;
  undefined3 extraout_var;
  _ptiddata p_Var7;
  BOOL BVar8;
  int iVar9;
  uint uVar10;
  DWORD DVar11;
  undefined in_DL;
  undefined extraout_DL;
  WCHAR *extraout_EDX;
  WCHAR *pWVar12;
  WCHAR *extraout_EDX_00;
  WCHAR *extraout_EDX_01;
  WCHAR *extraout_EDX_02;
  WCHAR *extraout_EDX_03;
  WCHAR *extraout_EDX_04;
  WCHAR *extraout_EDX_05;
  WCHAR *extraout_EDX_06;
  WCHAR *extraout_EDX_07;
  WCHAR *extraout_EDX_08;
  WCHAR *extraout_EDX_09;
  WCHAR *extraout_EDX_10;
  WCHAR *extraout_EDX_11;
  char cVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  DWORD DVar16;
  WCHAR *pWVar17;
  undefined8 uVar18;
  uint uVar19;
  undefined uVar20;
  UINT in_stack_ffffe50c;
  uint local_1aec;
  char local_1ae5;
  WCHAR *local_1ae4;
  WCHAR *local_1ae0;
  int local_1adc;
  WCHAR *local_1ad8;
  WCHAR *local_1ad4;
  DWORD local_1ad0;
  WCHAR *local_1acc;
  WCHAR *local_1ac8;
  WCHAR *local_1ac4;
  int local_1ac0;
  WCHAR local_1abc [854];
  WCHAR local_1410 [852];
  CHAR local_d68 [3416];
  char local_10;
  char local_f;
  uint local_8;
  
  uVar20 = (undefined)in_stack_ffffe50c;
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  local_1ac0 = 0;
  pWVar15 = (WCHAR *)0x0;
  local_1acc = param_1;
  DVar16 = 0;
  local_1ad4 = param_2;
  local_1ac4 = (WCHAR *)0x0;
  if (param_3 == 0) goto LAB_10011bb2;
  if (param_2 == (WCHAR *)0x0) {
    puVar5 = ___doserrno();
    *puVar5 = 0;
    piVar6 = __errno();
    *piVar6 = 0x16;
    FUN_100090a2();
    in_DL = extraout_DL;
    goto LAB_10011bb2;
  }
  local_1adc = (int)param_1 >> 5;
  local_1ae0 = (WCHAR *)(((uint)param_1 & 0x1f) * 0x40);
  cVar13 = (char)(*(char *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc] + 0x24) * '\x02') >> 1;
  if (((cVar13 == '\x02') || (cVar13 == '\x01')) && ((~param_3 & 1) == 0)) {
    puVar5 = ___doserrno();
    *puVar5 = 0;
    piVar6 = __errno();
    *piVar6 = 0x16;
    FUN_100090a2();
    pWVar12 = extraout_EDX;
  }
  else {
    if ((*(byte *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc] + 4) & 0x20) != 0) {
      FUN_10011cbe((uint)param_1,0,0,2);
    }
    bVar3 = FUN_1001121a((uint)local_1acc);
    if ((CONCAT31(extraout_var,bVar3) == 0) ||
       ((*(byte *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc] + 4) & 0x80) == 0)) {
LAB_100117a0:
      if ((*(byte *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc] + 4) & 0x80) == 0) {
        BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc]),local_1ad4,
                          param_3,(LPDWORD)&local_1ae4,(LPOVERLAPPED)0x0);
        if (BVar8 == 0) {
LAB_10011793:
          DVar16 = GetLastError();
          pWVar12 = extraout_EDX_03;
        }
        else {
          pWVar12 = extraout_EDX_09;
          pWVar15 = local_1ae4;
          DVar16 = 0;
        }
        goto LAB_100118b0;
      }
      local_1ad0 = 0;
      if (cVar13 == '\0') {
        local_1acc = local_1ad4;
        if (param_3 == 0) goto LAB_10011b72;
        do {
          pWVar17 = local_1410;
          local_1ac8 = (WCHAR *)0x0;
          uVar19 = (int)local_1acc - (int)local_1ad4;
          do {
            if (param_3 <= uVar19) break;
            local_1ae5 = *(char *)local_1acc;
            local_1acc = (WCHAR *)((int)local_1acc + 1);
            uVar19 = uVar19 + 1;
            if (local_1ae5 == '\n') {
              local_1ac0 = local_1ac0 + 1;
              *(char *)pWVar17 = '\r';
              pWVar17 = (WCHAR *)((int)pWVar17 + 1);
              local_1ac8 = (WCHAR *)((int)local_1ac8 + 1);
            }
            *(char *)pWVar17 = local_1ae5;
            pWVar17 = (WCHAR *)((int)pWVar17 + 1);
            local_1ac8 = (WCHAR *)((int)local_1ac8 + 1);
          } while (local_1ac8 < (WCHAR *)0x13ff);
          BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc]),local_1410,
                            (int)pWVar17 - (int)local_1410,(LPDWORD)&local_1ae4,(LPOVERLAPPED)0x0);
          if (BVar8 == 0) goto LAB_10011793;
          pWVar15 = (WCHAR *)((int)pWVar15 + (int)local_1ae4);
          pWVar12 = extraout_EDX_04;
          DVar16 = local_1ad0;
        } while (((int)pWVar17 - (int)local_1410 <= (int)local_1ae4) &&
                (pWVar12 = local_1acc, (uint)((int)local_1acc - (int)local_1ad4) < param_3));
        goto LAB_100118b0;
      }
      if (cVar13 == '\x02') {
        pWVar17 = local_1ad4;
        if (param_3 != 0) {
          do {
            local_1aec = 0;
            pWVar14 = local_1410;
            uVar10 = (int)pWVar17 - (int)local_1ad4;
            uVar19 = 0;
            do {
              if (param_3 <= uVar10) break;
              WVar2 = *pWVar17;
              uVar10 = uVar10 + 2;
              pWVar17 = pWVar17 + 1;
              if (WVar2 == L'\n') {
                local_1ac0 = local_1ac0 + 2;
                *pWVar14 = L'\r';
                pWVar14 = pWVar14 + 1;
                uVar19 = uVar19 + 2;
              }
              *pWVar14 = WVar2;
              uVar19 = uVar19 + 2;
              pWVar14 = pWVar14 + 1;
            } while (uVar19 < 0x13fe);
            local_1ac8 = pWVar17;
            BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc]),local_1410,
                              (int)pWVar14 - (int)local_1410,(LPDWORD)&local_1ae4,(LPOVERLAPPED)0x0)
            ;
            pWVar15 = local_1ac4;
            if (BVar8 == 0) goto LAB_10011793;
            pWVar15 = (WCHAR *)((int)local_1ac4 + (int)local_1ae4);
            pWVar12 = extraout_EDX_06;
            DVar16 = local_1ad0;
            local_1ac4 = pWVar15;
          } while (((int)pWVar14 - (int)local_1410 <= (int)local_1ae4) &&
                  (pWVar17 = local_1ac8, pWVar12 = local_1ad4,
                  (uint)((int)local_1ac8 - (int)local_1ad4) < param_3));
          goto LAB_100118b0;
        }
      }
      else {
        local_1acc = local_1ad4;
        if (param_3 != 0) {
          do {
            local_1aec = 0;
            pWVar15 = local_1abc;
            uVar10 = (int)local_1acc - (int)local_1ad4;
            uVar19 = 0;
            do {
              if (param_3 <= uVar10) break;
              WVar2 = *local_1acc;
              uVar10 = uVar10 + 2;
              local_1acc = local_1acc + 1;
              if (WVar2 == L'\n') {
                *pWVar15 = L'\r';
                pWVar15 = pWVar15 + 1;
                uVar19 = uVar19 + 2;
              }
              *pWVar15 = WVar2;
              uVar19 = uVar19 + 2;
              pWVar15 = pWVar15 + 1;
            } while (uVar19 < 0x6a8);
            local_1ac8 = (WCHAR *)WideCharToMultiByte(0xfde9,0,local_1abc,
                                                      ((int)pWVar15 - (int)local_1abc) / 2,local_d68
                                                      ,0xd55,(LPCSTR)0x0,(LPBOOL)0x0);
            pWVar15 = local_1ac4;
            DVar16 = local_1ad0;
            if (local_1ac8 == (WCHAR *)0x0) goto LAB_10011793;
            local_1ac4 = (WCHAR *)0x0;
            do {
              BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc]),
                                local_d68 + (int)local_1ac4,(int)local_1ac8 - (int)local_1ac4,
                                (LPDWORD)&local_1ae4,(LPOVERLAPPED)0x0);
              if (BVar8 == 0) {
                DVar16 = GetLastError();
                pWVar12 = extraout_EDX_08;
                local_1ad0 = DVar16;
                break;
              }
              local_1ac4 = (WCHAR *)((int)local_1ac4 + (int)local_1ae4);
              pWVar12 = extraout_EDX_07;
            } while ((int)local_1ac4 < (int)local_1ac8);
          } while (((int)local_1ac8 <= (int)local_1ac4) &&
                  (pWVar15 = (WCHAR *)((int)local_1acc - (int)local_1ad4), pWVar12 = local_1ad4,
                  local_1ac4 = pWVar15, pWVar15 < param_3));
          goto LAB_100118b0;
        }
      }
LAB_10011b72:
      uVar20 = (undefined)in_stack_ffffe50c;
      if (((*(byte *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc] + 4) & 0x40) == 0) ||
         (pWVar12 = local_1ad4, *(char *)local_1ad4 != '\x1a')) {
        piVar6 = __errno();
        *piVar6 = 0x1c;
        puVar5 = ___doserrno();
        *puVar5 = 0;
        pWVar12 = extraout_EDX_11;
      }
    }
    else {
      p_Var7 = __getptd();
      local_1ac8 = (WCHAR *)(uint)(p_Var7->ptlocinfo->locale_name[2] == (wchar_t *)0x0);
      BVar8 = GetConsoleMode(*(HANDLE *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc]),&local_1aec)
      ;
      if ((BVar8 == 0) || ((local_1ac8 != (WCHAR *)0x0 && (cVar13 == '\0')))) goto LAB_100117a0;
      in_stack_ffffe50c = GetConsoleCP();
      DVar11 = 0;
      local_1acc = (WCHAR *)0x0;
      local_1ad0 = 0;
      local_1ad8 = local_1ad4;
      if (param_3 == 0) goto LAB_10011b72;
      pWVar12 = (WCHAR *)0x0;
      local_1ac4 = (WCHAR *)0x0;
      pWVar17 = local_1ad4;
      pWVar14 = pWVar15;
      do {
        local_1ac8 = (WCHAR *)0x0;
        pWVar15 = pWVar14;
        if (cVar13 == '\0') {
          cVar1 = *(char *)pWVar17;
          local_1aec = (uint)(cVar1 == '\n');
          local_1ac8 = (WCHAR *)(&DAT_100458e0)[local_1adc];
          if (*(int *)((int)(local_1ae0 + 0x1c) + (int)local_1ac8) == 0) {
            iVar9 = FUN_10008b23((int)cVar1);
            if (iVar9 == 0) {
              uVar19 = 1;
              pWVar12 = local_1ad8;
              goto LAB_100115bc;
            }
            if ((char *)((int)local_1ad4 + (param_3 - (int)local_1ad8)) < (char *)0x2) {
              *(char *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc] + 0x34) = *(char *)local_1ad8;
              *(undefined4 *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc] + 0x38) = 1;
              pWVar12 = local_1ae0;
              pWVar15 = (WCHAR *)((int)pWVar14 + 1);
              break;
            }
            uVar18 = FUN_10014b96((LPWSTR)&local_1ad0,(byte *)local_1ad8,2);
            pWVar12 = (WCHAR *)((ulonglong)uVar18 >> 0x20);
            if ((int)uVar18 == -1) break;
            local_1ad8 = (WCHAR *)((int)local_1ad8 + 1);
            local_1ac4 = (WCHAR *)((int)local_1ac4 + 1);
          }
          else {
            local_10 = *(char *)((int)(local_1ae0 + 0x1a) + (int)local_1ac8);
            uVar19 = 2;
            *(undefined4 *)((int)(local_1ae0 + 0x1c) + (int)local_1ac8) = 0;
            pWVar12 = (WCHAR *)&local_10;
            local_f = cVar1;
LAB_100115bc:
            uVar18 = FUN_10014b96((LPWSTR)&local_1ad0,(byte *)pWVar12,uVar19);
            pWVar12 = (WCHAR *)((ulonglong)uVar18 >> 0x20);
            if ((int)uVar18 == -1) break;
          }
          local_1ad8 = (WCHAR *)((int)local_1ad8 + 1);
          local_1ac4 = (WCHAR *)((int)local_1ac4 + 1);
          local_1ac8 = (WCHAR *)WideCharToMultiByte(in_stack_ffffe50c,0,(LPCWSTR)&local_1ad0,1,
                                                    &local_10,5,(LPCSTR)0x0,(LPBOOL)0x0);
          pWVar12 = extraout_EDX_00;
          if (local_1ac8 == (WCHAR *)0x0) break;
          BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc]),&local_10,
                            (DWORD)local_1ac8,(LPDWORD)&local_1acc,(LPOVERLAPPED)0x0);
          if (BVar8 == 0) goto LAB_10011793;
          pWVar15 = (WCHAR *)((int)local_1ac4 + local_1ac0);
          pWVar12 = extraout_EDX_01;
          if ((int)local_1acc < (int)local_1ac8) break;
          pWVar17 = local_1ad8;
          DVar11 = local_1ad0;
          pWVar12 = local_1ac4;
          if (local_1aec != 0) {
            local_10 = '\r';
            BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_100458e0)[local_1adc]),&local_10,1
                              ,(LPDWORD)&local_1acc,(LPOVERLAPPED)0x0);
            if (BVar8 == 0) goto LAB_10011793;
            pWVar12 = extraout_EDX_02;
            if ((int)local_1acc < 1) break;
            local_1ac0 = local_1ac0 + 1;
            pWVar15 = (WCHAR *)((int)pWVar15 + 1);
            pWVar17 = local_1ad8;
            DVar11 = local_1ad0;
            pWVar12 = local_1ac4;
          }
        }
        else {
          if ((cVar13 == '\x01') || (cVar13 == '\x02')) {
            DVar11 = (DWORD)(ushort)*pWVar17;
            local_1ac8 = (WCHAR *)(uint)(*pWVar17 == L'\n');
            pWVar17 = pWVar17 + 1;
            pWVar12 = local_1ac4 + 1;
            local_1ad8 = pWVar17;
            local_1ad0 = DVar11;
            local_1ac4 = pWVar12;
          }
          if ((cVar13 == '\x01') || (cVar13 == '\x02')) {
            wVar4 = __putwch_nolock((wchar_t)DVar11);
            if (wVar4 != (wint_t)local_1ad0) goto LAB_10011793;
            pWVar15 = pWVar14 + 1;
            pWVar17 = local_1ad8;
            DVar11 = local_1ad0;
            pWVar12 = local_1ac4;
            if (local_1ac8 != (WCHAR *)0x0) {
              local_1ad0 = 0xd;
              wVar4 = __putwch_nolock(L'\r');
              if (wVar4 != (wint_t)local_1ad0) goto LAB_10011793;
              pWVar15 = (WCHAR *)((int)pWVar14 + 3);
              local_1ac0 = local_1ac0 + 1;
              pWVar17 = local_1ad8;
              DVar11 = local_1ad0;
              pWVar12 = local_1ac4;
            }
          }
        }
        pWVar14 = pWVar15;
      } while (pWVar12 < param_3);
LAB_100118b0:
      uVar20 = (undefined)in_stack_ffffe50c;
      if (pWVar15 == (WCHAR *)0x0) {
        if (DVar16 == 0) goto LAB_10011b72;
        if (DVar16 == 5) {
          piVar6 = __errno();
          *piVar6 = 9;
          puVar5 = ___doserrno();
          *puVar5 = 5;
          pWVar12 = extraout_EDX_05;
        }
        else {
          FID_conflict___dosmaperr(DVar16);
          pWVar12 = extraout_EDX_10;
        }
      }
    }
  }
  in_DL = SUB41(pWVar12,0);
LAB_10011bb2:
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,in_DL,uVar20);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined8 __cdecl FUN_10011bc2(uint param_1,undefined4 param_2,undefined4 param_3,DWORD param_4)

{
  ulong *puVar1;
  int *piVar2;
  int iVar3;
  undefined8 uVar4;
  
  if (param_1 == 0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    if ((-1 < (int)param_1) && (param_1 < DAT_100476e4)) {
      iVar3 = (param_1 & 0x1f) * 0x40;
      if ((*(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + iVar3) & 1) != 0) {
        FUN_10016204(param_1);
        if ((*(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + iVar3) & 1) == 0) {
          piVar2 = __errno();
          *piVar2 = 9;
          puVar1 = ___doserrno();
          *puVar1 = 0;
          uVar4 = 0xffffffffffffffff;
        }
        else {
          uVar4 = FUN_10011cbe(param_1,param_2,param_3,param_4);
        }
        FUN_10011c94();
        return uVar4;
      }
    }
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
    FUN_100090a2();
  }
  return 0xffffffffffffffff;
}



void FUN_10011c94(void)

{
  uint unaff_EDI;
  
  FUN_1001637f(unaff_EDI);
  return;
}



undefined8 __cdecl FUN_10011cbe(uint param_1,undefined4 param_2,undefined4 param_3,DWORD param_4)

{
  byte *pbVar1;
  HANDLE hFile;
  int *piVar2;
  BOOL BVar3;
  DWORD DVar4;
  undefined4 local_c;
  undefined4 local_8;
  
  hFile = (HANDLE)FUN_10016318(param_1);
  if (hFile == (HANDLE)0xffffffff) {
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    BVar3 = SetFilePointerEx(hFile,CONCAT44(param_3,param_2),(PLARGE_INTEGER)&local_c,param_4);
    if (BVar3 != 0) {
      pbVar1 = (byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + (param_1 & 0x1f) * 0x40);
      *pbVar1 = *pbVar1 & 0xfd;
      goto LAB_10011d2b;
    }
    DVar4 = GetLastError();
    FID_conflict___dosmaperr(DVar4);
  }
  local_c = 0xffffffff;
  local_8 = 0xffffffff;
LAB_10011d2b:
  return CONCAT44(local_8,local_c);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __getbuf
// 
// Library: Visual Studio 2012 Release

void __cdecl __getbuf(FILE *_File)

{
  char *pcVar1;
  
  _DAT_10045e40 = _DAT_10045e40 + 1;
  pcVar1 = (char *)FUN_100017b0(0x1000);
  _File->_base = pcVar1;
  if (pcVar1 == (char *)0x0) {
    _File->_flag = _File->_flag | 4;
    _File->_base = (char *)&_File->_charbuf;
    _File->_bufsiz = 2;
  }
  else {
    _File->_flag = _File->_flag | 8;
    _File->_bufsiz = 0x1000;
  }
  _File->_cnt = 0;
  _File->_ptr = _File->_base;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool FUN_10011d77(void)

{
  return _DAT_10045e44 == (DAT_1003352c | 1);
}



int __cdecl
FUN_10011d8c(int *param_1,uint *param_2,uint param_3,WCHAR param_4,pthreadlocinfo *param_5)

{
  uint *lpMultiByteStr;
  uint cbMultiByte;
  int *piVar1;
  int iVar2;
  DWORD DVar3;
  int iVar4;
  int local_14 [2];
  int local_c;
  char local_8;
  
  cbMultiByte = param_3;
  lpMultiByteStr = param_2;
  if ((param_2 == (uint *)0x0) && (param_3 != 0)) {
    if (param_1 != (int *)0x0) {
      *param_1 = 0;
    }
    return 0;
  }
  if (param_1 != (int *)0x0) {
    *param_1 = -1;
  }
  if (0x7fffffff < param_3) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_100090a2();
    return 0x16;
  }
  FUN_10008755(local_14,param_5);
  iVar4 = 0;
  if (*(int *)(local_14[0] + 0xa8) == 0) {
    if ((ushort)param_4 < 0x100) {
      if (lpMultiByteStr != (uint *)0x0) {
        if (cbMultiByte == 0) goto LAB_10011e9c;
        *(char *)lpMultiByteStr = (char)param_4;
      }
      if (param_1 != (int *)0x0) {
        *param_1 = 1;
      }
      goto LAB_10011e1f;
    }
    if ((lpMultiByteStr != (uint *)0x0) && (cbMultiByte != 0)) {
      FUN_10006130(lpMultiByteStr,0,cbMultiByte);
    }
  }
  else {
    param_2 = (uint *)0x0;
    iVar2 = WideCharToMultiByte(*(UINT *)(local_14[0] + 4),0,&param_4,1,(LPSTR)lpMultiByteStr,
                                cbMultiByte,(LPCSTR)0x0,(LPBOOL)&param_2);
    if (iVar2 == 0) {
      DVar3 = GetLastError();
      if (DVar3 == 0x7a) {
        if ((lpMultiByteStr != (uint *)0x0) && (cbMultiByte != 0)) {
          FUN_10006130(lpMultiByteStr,0,cbMultiByte);
        }
LAB_10011e9c:
        piVar1 = __errno();
        iVar4 = 0x22;
        *piVar1 = 0x22;
        FUN_100090a2();
        goto LAB_10011e1f;
      }
    }
    else if (param_2 == (uint *)0x0) {
      if (param_1 != (int *)0x0) {
        *param_1 = iVar2;
      }
      goto LAB_10011e1f;
    }
  }
  piVar1 = __errno();
  *piVar1 = 0x2a;
  piVar1 = __errno();
  iVar4 = *piVar1;
LAB_10011e1f:
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return iVar4;
}



void __cdecl FUN_10011eb0(int *param_1,uint *param_2,uint param_3,WCHAR param_4)

{
  FUN_10011d8c(param_1,param_2,param_3,param_4,(pthreadlocinfo *)0x0);
  return;
}



// Library Function - Single Match
//  __lock
// 
// Library: Visual Studio 2012 Release

void __cdecl __lock(int _File)

{
  int iVar1;
  
  if ((&DAT_10033fe8)[_File * 2] == 0) {
    iVar1 = FUN_10011f53(_File);
    if (iVar1 == 0) {
      __amsg_exit(0x11);
    }
  }
  EnterCriticalSection((LPCRITICAL_SECTION)(&DAT_10033fe8)[_File * 2]);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 __cdecl FUN_10011f53(int param_1)

{
  LPCRITICAL_SECTION p_Var1;
  int *piVar2;
  
  if (_DAT_10033000 == 0) {
    __FF_MSGBANNER();
    FUN_100120a8(0x1e);
    ___crtExitProcess(0xff);
  }
  if ((&DAT_10033fe8)[param_1 * 2] == 0) {
    p_Var1 = (LPCRITICAL_SECTION)FUN_100017b0(0x18);
    if (p_Var1 == (LPCRITICAL_SECTION)0x0) {
      piVar2 = __errno();
      *piVar2 = 0xc;
      return 0;
    }
    __lock(10);
    if ((&DAT_10033fe8)[param_1 * 2] == 0) {
      FUN_1000c11e(p_Var1,4000,0);
      (&DAT_10033fe8)[param_1 * 2] = p_Var1;
    }
    else {
      FUN_10001730(p_Var1);
    }
    FUN_10011ff3();
  }
  return 1;
}



void FUN_10011ff3(void)

{
  FUN_10012036(10);
  return;
}



undefined4 FUN_10011ffd(void)

{
  LPCRITICAL_SECTION *pp_Var1;
  LPCRITICAL_SECTION p_Var2;
  
  pp_Var1 = (LPCRITICAL_SECTION *)&DAT_10033fe8;
  p_Var2 = (LPCRITICAL_SECTION)&DAT_10045e48;
  do {
    if (pp_Var1[1] == (LPCRITICAL_SECTION)0x1) {
      *pp_Var1 = p_Var2;
      p_Var2 = p_Var2 + 1;
      FUN_1000c11e(*pp_Var1,4000,0);
    }
    pp_Var1 = pp_Var1 + 2;
  } while ((int)pp_Var1 < 0x10034108);
  return 1;
}



void __cdecl FUN_10012036(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(&DAT_10033fe8)[param_1 * 2]);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __FF_MSGBANNER
// 
// Library: Visual Studio 2012 Release

void __cdecl __FF_MSGBANNER(void)

{
  int iVar1;
  
  iVar1 = __set_error_mode(3);
  if (iVar1 != 1) {
    iVar1 = __set_error_mode(3);
    if (iVar1 != 0) {
      return;
    }
    if (_DAT_10045f98 != 1) {
      return;
    }
  }
  FUN_100120a8(0xfc);
  FUN_100120a8(0xff);
  return;
}



// Library Function - Single Match
//  __GET_RTERRMSG
// 
// Library: Visual Studio 2012 Release

wchar_t * __cdecl __GET_RTERRMSG(int param_1)

{
  uint uVar1;
  
  uVar1 = 0;
  do {
    if (param_1 == (&DAT_1002d278)[uVar1 * 2]) {
      return (wchar_t *)(&PTR_u_R6002___floating_point_support_n_1002d27c)[uVar1 * 2];
    }
    uVar1 = uVar1 + 1;
  } while (uVar1 < 0x17);
  return (wchar_t *)0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_100120a8(int param_1)

{
  code *pcVar1;
  wchar_t *_Src;
  int iVar2;
  errno_t eVar3;
  DWORD DVar4;
  size_t sVar5;
  HANDLE hFile;
  uint uVar6;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined uVar7;
  LPDWORD lpNumberOfBytesWritten;
  LPOVERLAPPED lpOverlapped;
  undefined in_stack_fffffe00;
  char local_1fc [500];
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  _Src = __GET_RTERRMSG(param_1);
  uVar7 = extraout_DL;
  if (_Src != (wchar_t *)0x0) {
    iVar2 = __set_error_mode(3);
    if ((iVar2 == 1) || ((iVar2 = __set_error_mode(3), iVar2 == 0 && (_DAT_10045f98 == 1)))) {
      hFile = GetStdHandle(0xfffffff4);
      uVar7 = extraout_DL_02;
      if ((hFile != (HANDLE)0x0) && (hFile != (HANDLE)0xffffffff)) {
        uVar6 = 0;
        do {
          local_1fc[uVar6] = *(char *)(_Src + uVar6);
          if (_Src[uVar6] == L'\0') break;
          uVar6 = uVar6 + 1;
        } while (uVar6 < 500);
        lpOverlapped = (LPOVERLAPPED)0x0;
        lpNumberOfBytesWritten = (LPDWORD)&stack0xfffffe00;
        local_1fc[499] = 0;
        sVar5 = _strlen(local_1fc);
        WriteFile(hFile,local_1fc,sVar5,lpNumberOfBytesWritten,lpOverlapped);
        uVar7 = extraout_DL_03;
      }
    }
    else {
      uVar7 = extraout_DL_00;
      if (param_1 != 0xfc) {
        eVar3 = _wcscpy_s((wchar_t *)&DAT_10045fa0,0x314,L"Runtime Error!\n\nProgram: ");
        if (eVar3 == 0) {
          _DAT_100461da = 0;
          DVar4 = GetModuleFileNameW((HMODULE)0x0,(LPWSTR)&DAT_10045fd2,0x104);
          if ((DVar4 != 0) ||
             (eVar3 = _wcscpy_s((wchar_t *)&DAT_10045fd2,0x2fb,L"<program name unknown>"),
             eVar3 == 0)) {
            sVar5 = _wcslen((wchar_t *)&DAT_10045fd2);
            if (0x3c < sVar5 + 1) {
              sVar5 = _wcslen((wchar_t *)&DAT_10045fd2);
              iVar2 = FUN_1001524e((short *)(&DAT_10045f5c + sVar5 * 2),
                                   0x2fb - ((int)(sVar5 * 2 + -0x76) >> 1),(short *)&DAT_1002dc7c,3)
              ;
              if (iVar2 != 0) goto LAB_1001225a;
            }
            eVar3 = _wcscat_s((wchar_t *)&DAT_10045fa0,0x314,L"\n\n");
            if ((eVar3 == 0) && (eVar3 = _wcscat_s((wchar_t *)&DAT_10045fa0,0x314,_Src), eVar3 == 0)
               ) {
              FUN_10016428((LPCWSTR)&DAT_10045fa0,L"Microsoft Visual C++ Runtime Library",0x12010);
              uVar7 = extraout_DL_01;
              goto LAB_1001224a;
            }
          }
        }
LAB_1001225a:
        __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
        pcVar1 = (code *)swi(3);
        (*pcVar1)();
        return;
      }
    }
  }
LAB_1001224a:
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,uVar7,in_stack_fffffe00);
  return;
}



// Library Function - Single Match
//  __FindPESection
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release

PIMAGE_SECTION_HEADER __cdecl __FindPESection(PBYTE pImageBase,DWORD_PTR rva)

{
  int iVar1;
  PIMAGE_SECTION_HEADER p_Var2;
  uint uVar3;
  
  uVar3 = 0;
  iVar1 = *(int *)(pImageBase + 0x3c);
  p_Var2 = (PIMAGE_SECTION_HEADER)
           (pImageBase + *(ushort *)(pImageBase + iVar1 + 0x14) + 0x18 + iVar1);
  if (*(ushort *)(pImageBase + iVar1 + 6) != 0) {
    do {
      if ((p_Var2->VirtualAddress <= rva) && (rva < p_Var2->Misc + p_Var2->VirtualAddress)) {
        return p_Var2;
      }
      uVar3 = uVar3 + 1;
      p_Var2 = p_Var2 + 1;
    } while (uVar3 < *(ushort *)(pImageBase + iVar1 + 6));
  }
  return (PIMAGE_SECTION_HEADER)0x0;
}



// Library Function - Single Match
//  __IsNonwritableInCurrentImage
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2019 Release

BOOL __cdecl __IsNonwritableInCurrentImage(PBYTE pTarget)

{
  uint uVar1;
  BOOL BVar2;
  PIMAGE_SECTION_HEADER p_Var3;
  int **in_FS_OFFSET;
  int *local_14;
  code *pcStack16;
  uint local_c;
  undefined4 local_8;
  
  pcStack16 = FUN_1000a530;
  local_14 = *in_FS_OFFSET;
  local_c = DAT_1003352c ^ 0x10031eb0;
  *in_FS_OFFSET = (int *)&local_14;
  local_8 = 0;
  BVar2 = __ValidateImageBase((PBYTE)&IMAGE_DOS_HEADER_10000000);
  if (BVar2 != 0) {
    p_Var3 = __FindPESection((PBYTE)&IMAGE_DOS_HEADER_10000000,(DWORD_PTR)(pTarget + -0x10000000));
    if (p_Var3 != (PIMAGE_SECTION_HEADER)0x0) {
      uVar1 = p_Var3->Characteristics;
      *in_FS_OFFSET = local_14;
      return ~(uVar1 >> 0x1f) & 1;
    }
  }
  *in_FS_OFFSET = local_14;
  return 0;
}



// Library Function - Single Match
//  __ValidateImageBase
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release

BOOL __cdecl __ValidateImageBase(PBYTE pImageBase)

{
  uint uVar1;
  
  if (*(short *)pImageBase != 0x5a4d) {
    return 0;
  }
  uVar1 = 0;
  if (*(int *)(pImageBase + *(int *)(pImageBase + 0x3c)) == 0x4550) {
    uVar1 = (uint)(*(short *)((int)(pImageBase + *(int *)(pImageBase + 0x3c)) + 0x18) == 0x10b);
  }
  return uVar1;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4

void FUN_100123b1(void)

{
  code *pcVar1;
  _ptiddata p_Var2;
  
  p_Var2 = __getptd();
  if ((code *)p_Var2->_terminate != (code *)0x0) {
    (*(code *)p_Var2->_terminate)();
  }
  _abort();
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_100123e5(void)

{
  _DAT_100465c8 = EncodePointer(FUN_100123b1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_100123f6(undefined4 param_1)

{
  _DAT_100465cc = param_1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_10012403(undefined4 param_1)

{
  _DAT_100465d0 = param_1;
  return;
}



// Library Function - Single Match
//  __local_unwind4
// 
// Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual
// Studio 2019 Release

void __cdecl __local_unwind4(uint *param_1,int param_2,uint param_3)

{
  undefined4 *puVar1;
  uint uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  code *pcStack36;
  uint local_20;
  uint uStack28;
  int iStack24;
  uint *puStack20;
  
  puStack20 = param_1;
  iStack24 = param_2;
  uStack28 = param_3;
  pcStack36 = FUN_100124a0;
  uStack40 = *in_FS_OFFSET;
  local_20 = DAT_1003352c ^ (uint)&uStack40;
  *in_FS_OFFSET = &uStack40;
  while( true ) {
    uVar2 = *(uint *)(param_2 + 0xc);
    if ((uVar2 == 0xfffffffe) || ((param_3 != 0xfffffffe && (uVar2 <= param_3)))) break;
    puVar1 = (undefined4 *)((*(uint *)(param_2 + 8) ^ *param_1) + 0x10 + uVar2 * 0xc);
    *(undefined4 *)(param_2 + 0xc) = *puVar1;
    if (puVar1[1] == 0) {
      __NLG_Notify(0x101);
      FUN_10016744();
    }
  }
  *in_FS_OFFSET = uStack40;
  return;
}



undefined4 __fastcall
FUN_100124a0(undefined4 param_1,undefined param_2,int param_3,uint param_4,undefined4 param_5,
            uint *param_6)

{
  undefined4 uVar1;
  int iVar2;
  undefined1 unaff_retaddr;
  
  uVar1 = 1;
  if ((*(uint *)(param_3 + 4) & 6) != 0) {
    iVar2 = FUN_10008ec7(*(uint *)(param_4 + 8) ^ param_4,param_2,unaff_retaddr);
    __local_unwind4(*(uint **)(iVar2 + 0x14),*(int *)(iVar2 + 0x10),*(uint *)(iVar2 + 0xc));
    *param_6 = param_4;
    uVar1 = 3;
  }
  return uVar1;
}



void FUN_100124e6(int param_1)

{
  __local_unwind4(*(uint **)(param_1 + 0x28),*(int *)(param_1 + 0x18),*(uint *)(param_1 + 0x1c));
  return;
}



void FUN_100124e7(undefined4 param_1,int param_2)

{
  __local_unwind4(*(uint **)(param_2 + 0x28),*(int *)(param_2 + 0x18),*(uint *)(param_2 + 0x1c));
  return;
}



// Library Function - Single Match
//  @_EH4_CallFilterFunc@8
// 
// Library: Visual Studio

void __fastcall __EH4_CallFilterFunc_8(undefined *param_1)

{
  (*(code *)param_1)();
  return;
}



// Library Function - Single Match
//  @_EH4_TransferToHandler@8
// 
// Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual
// Studio 2019 Release

void __fastcall __EH4_TransferToHandler_8(undefined *UNRECOVERED_JUMPTABLE)

{
  __NLG_Notify(1);
                    // WARNING: Could not recover jumptable at 0x10012530. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)UNRECOVERED_JUMPTABLE)();
  return;
}



// Library Function - Single Match
//  @_EH4_GlobalUnwind2@8
// 
// Libraries: Visual Studio 2010, Visual Studio 2012, Visual Studio 2015

void __fastcall __EH4_GlobalUnwind2_8(PVOID param_1,PEXCEPTION_RECORD param_2)

{
  RtlUnwind(param_1,(PVOID)0x10012546,param_2,(PVOID)0x0);
  return;
}



// Library Function - Single Match
//  @_EH4_LocalUnwind@16
// 
// Library: Visual Studio

void __fastcall __EH4_LocalUnwind_16(int param_1,uint param_2,undefined4 param_3,uint *param_4)

{
  __local_unwind4(param_4,param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_10012562(void)

{
  _DAT_1004663c = IsProcessorFeaturePresent(10);
  return 0;
}



undefined8 __fastcall FUN_10012580(undefined4 param_1,undefined4 param_2)

{
  float10 in_ST0;
  undefined8 uVar1;
  
  uVar1 = FUN_1001259e(param_1,param_2,SUB84((double)in_ST0,0),
                       (int)((ulonglong)(double)in_ST0 >> 0x20));
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined8 __fastcall
FUN_1001259e(undefined4 param_1,undefined4 param_2,int param_3,undefined4 param_4)

{
  ushort uVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint extraout_EDX;
  int iVar5;
  bool bVar6;
  ushort in_FPUControlWord;
  ushort in_FPUStatusWord;
  unkbyte10 extraout_ST0;
  float10 fVar7;
  double in_XMM0_Qa;
  undefined4 unaff_retaddr;
  uint uVar8;
  
  uVar1 = ((ushort)((ulonglong)in_XMM0_Qa >> 0x30) & 0x7fff) + 0xc7e0;
  bVar6 = uVar1 == 0x8a8;
  if (uVar1 < 0x8a9) {
    iVar5 = ((int)ROUND(in_XMM0_Qa * 10.1859163578813) + 0x72900U & 0x1f) * 0xb0;
    return CONCAT44(iVar5,&DAT_1002dce0 + iVar5);
  }
  if ((short)uVar1 < 0x8a9) {
    return CONCAT44(param_2,(uint)(uVar1 >> 4));
  }
  uVar2 = __fload_withFB(param_1,(int)&param_3);
  uVar8 = extraout_EDX & 0xffff0000 | (uint)in_FPUControlWord;
  if (bVar6) {
    if (((uVar2 & 0xfffff) == 0) && (param_3 == 0)) {
      uVar2 = 1;
    }
    else {
      uVar2 = __convertTOStoQNaN();
    }
    if (_DAT_10045880 == 0) {
      __startOneArgErrorHandling(&DAT_10033550,0x20,in_FPUControlWord,unaff_retaddr,param_3,param_4)
      ;
      return CONCAT44(uVar8,uVar2);
    }
  }
  else {
    fptan(extraout_ST0);
    fVar7 = (float10)1;
    uVar2 = uVar2 & 0xffff0000 | (uint)in_FPUStatusWord;
    if ((in_FPUStatusWord & 0x400) != 0) {
      do {
        fVar7 = fVar7 - (fVar7 / _DAT_1002f38a) * _DAT_1002f38a;
        uVar2 = uVar2 & 0xffff0000 | (uint)in_FPUStatusWord;
      } while ((in_FPUStatusWord & 0x400) != 0);
      fptan(fVar7);
    }
    if (_DAT_10045880 == 0) {
      uVar3 = uVar2 & 0xffff0000 | (uint)in_FPUControlWord;
      if (in_FPUControlWord != 0x27f) {
        if (((in_FPUControlWord & 0x20) != 0) &&
           (uVar3 = uVar2 & 0xffff0000 | (uint)in_FPUStatusWord, (in_FPUStatusWord & 0x20) != 0)) {
          uVar4 = 8;
          __startOneArgErrorHandling
                    (&DAT_10033550,0x20,in_FPUControlWord,unaff_retaddr,param_3,param_4);
          return CONCAT44(uVar8,uVar4);
        }
        uVar3 = uVar3 & 0xffff0020;
      }
      return CONCAT44(uVar8,uVar3);
    }
  }
  return CONCAT44(uVar8,uVar2);
}



// Library Function - Single Match
//  __load_CW
// 
// Library: Visual Studio

void __load_CW(undefined4 param_1)

{
  return;
}



// Library Function - Single Match
//  __convertTOStoQNaN
// 
// Library: Visual Studio

undefined4 __convertTOStoQNaN(void)

{
  uint in_EAX;
  
  if ((in_EAX & 0x80000) != 0) {
    return 7;
  }
  return 1;
}



// Library Function - Single Match
//  __fload_withFB
// 
// Library: Visual Studio

uint __fastcall __fload_withFB(undefined4 param_1,int param_2)

{
  uint uVar1;
  
  uVar1 = *(uint *)(param_2 + 4) & 0x7ff00000;
  if (uVar1 != 0x7ff00000) {
    return uVar1;
  }
  return *(uint *)(param_2 + 4);
}



uint __cdecl FUN_10012868(undefined4 param_1,uint param_2)

{
  if ((param_2 & 0x7ff00000) != 0x7ff00000) {
    return param_2 & 0x7ff00000;
  }
  return param_2;
}



float10 __fastcall
FUN_10012970(undefined4 param_1,int param_2,ushort param_3,undefined4 param_4,undefined4 param_5,
            undefined4 param_6,undefined4 param_7,undefined4 param_8)

{
  float10 in_ST0;
  int local_24;
  undefined4 uStack32;
  undefined4 uStack28;
  undefined4 uStack24;
  undefined4 local_14;
  undefined4 local_10;
  double dStack12;
  
  local_14 = param_7;
  local_10 = param_8;
  dStack12 = (double)in_ST0;
  uStack28 = param_5;
  uStack24 = param_6;
  uStack32 = param_1;
  __87except(param_2,&local_24,&param_3);
  return (float10)dStack12;
}



// Library Function - Single Match
//  __startOneArgErrorHandling
// 
// Library: Visual Studio 2019 Release

float10 __fastcall
__startOneArgErrorHandling
          (undefined4 param_1,int param_2,ushort param_3,undefined4 param_4,undefined4 param_5,
          undefined4 param_6)

{
  float10 in_ST0;
  int local_24;
  undefined4 local_20;
  undefined4 local_1c;
  undefined4 local_18;
  double local_c;
  
  local_c = (double)in_ST0;
  local_1c = param_5;
  local_18 = param_6;
  local_20 = param_1;
  __87except(param_2,&local_24,&param_3);
  return (float10)local_c;
}



// Library Function - Single Match
//  _strcpy_s
// 
// Library: Visual Studio 2012 Release

errno_t __cdecl _strcpy_s(char *_Dst,rsize_t _SizeInBytes,char *_Src)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  
  if ((_Dst != (char *)0x0) && (_SizeInBytes != 0)) {
    if (_Src != (char *)0x0) {
      iVar3 = (int)_Dst - (int)_Src;
      do {
        cVar1 = *_Src;
        _Src[iVar3] = cVar1;
        _Src = _Src + 1;
        if (cVar1 == '\0') break;
        _SizeInBytes = _SizeInBytes - 1;
      } while (_SizeInBytes != 0);
      if (_SizeInBytes != 0) {
        return 0;
      }
      *_Dst = '\0';
      piVar2 = __errno();
      iVar3 = 0x22;
      goto LAB_100129e5;
    }
    *_Dst = '\0';
  }
  piVar2 = __errno();
  iVar3 = 0x16;
LAB_100129e5:
  *piVar2 = iVar3;
  FUN_100090a2();
  return iVar3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _strrchr
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017, Visual Studio 2019

char * __cdecl _strrchr(char *_Str,int _Ch)

{
  uint uVar1;
  undefined (*pauVar2) [16];
  uint uVar3;
  int iVar4;
  char *pcVar5;
  char *pcVar6;
  undefined (*pauVar7) [16];
  undefined auVar8 [16];
  undefined auVar10 [16];
  char cVar13;
  char cVar14;
  char cVar15;
  char cVar16;
  char cVar17;
  char cVar18;
  char cVar19;
  undefined auVar12 [16];
  byte bVar9;
  byte bVar11;
  
  if (_DAT_10045898 != 0) {
    if (_DAT_10045898 < 2) {
      auVar12 = pshuflw(ZEXT216(CONCAT11((char)_Ch,(char)_Ch)),
                        ZEXT216(CONCAT11((char)_Ch,(char)_Ch)),0);
      uVar1 = -1 << (sbyte)((uint)_Str & 0xf);
      pcVar6 = _Str + -((uint)_Str & 0xf);
      pcVar5 = (char *)0x0;
      while( true ) {
        bVar11 = -(pcVar6[0xf] == '\0');
        auVar10 = CONCAT115(bVar11,CONCAT114(-(pcVar6[0xe] == '\0'),
                                             CONCAT113(-(pcVar6[0xd] == '\0'),
                                                       CONCAT112(-(pcVar6[0xc] == '\0'),
                                                                 CONCAT111(-(pcVar6[0xb] == '\0'),
                                                                           CONCAT110(-(pcVar6[10] ==
                                                                                      '\0'),CONCAT19
                                                  (-(pcVar6[9] == '\0'),
                                                   CONCAT18(-(pcVar6[8] == '\0'),
                                                            CONCAT17(-(pcVar6[7] == '\0'),
                                                                     CONCAT16(-(pcVar6[6] == '\0'),
                                                                              CONCAT15(-(pcVar6[5]
                                                                                        == '\0'),
                                                                                       CONCAT14(-(
                                                  pcVar6[4] == '\0'),
                                                  CONCAT13(-(pcVar6[3] == '\0'),
                                                           CONCAT12(-(pcVar6[2] == '\0'),
                                                                    CONCAT11(-(pcVar6[1] == '\0'),
                                                                             -(*pcVar6 == '\0'))))))
                                                  ))))))))));
        cVar13 = SUB161(auVar12 >> 8,0);
        cVar14 = SUB161(auVar12 >> 0x10,0);
        cVar15 = SUB161(auVar12 >> 0x18,0);
        cVar16 = SUB161(auVar12 >> 0x20,0);
        cVar17 = SUB161(auVar12 >> 0x28,0);
        cVar18 = SUB161(auVar12 >> 0x30,0);
        cVar19 = SUB161(auVar12 >> 0x38,0);
        bVar9 = -(pcVar6[0xf] == cVar19);
        auVar8 = CONCAT115(bVar9,CONCAT114(-(pcVar6[0xe] == cVar18),
                                           CONCAT113(-(pcVar6[0xd] == cVar17),
                                                     CONCAT112(-(pcVar6[0xc] == cVar16),
                                                               CONCAT111(-(pcVar6[0xb] == cVar15),
                                                                         CONCAT110(-(pcVar6[10] ==
                                                                                    cVar14),CONCAT19
                                                  (-(pcVar6[9] == cVar13),
                                                   CONCAT18(-(pcVar6[8] == SUB161(auVar12,0)),
                                                            CONCAT17(-(pcVar6[7] == cVar19),
                                                                     CONCAT16(-(pcVar6[6] == cVar18)
                                                                              ,CONCAT15(-(pcVar6[5]
                                                                                         == cVar17),
                                                                                        CONCAT14(-(
                                                  pcVar6[4] == cVar16),
                                                  CONCAT13(-(pcVar6[3] == cVar15),
                                                           CONCAT12(-(pcVar6[2] == cVar14),
                                                                    CONCAT11(-(pcVar6[1] == cVar13),
                                                                             -(*pcVar6 ==
                                                                              SUB161(auVar12,0))))))
                                                  )))))))))));
        uVar3 = (ushort)((ushort)(SUB161(auVar10 >> 7,0) & 1) |
                         (ushort)(SUB161(auVar10 >> 0xf,0) & 1) << 1 |
                         (ushort)(SUB161(auVar10 >> 0x17,0) & 1) << 2 |
                         (ushort)(SUB161(auVar10 >> 0x1f,0) & 1) << 3 |
                         (ushort)(SUB161(auVar10 >> 0x27,0) & 1) << 4 |
                         (ushort)(SUB161(auVar10 >> 0x2f,0) & 1) << 5 |
                         (ushort)(SUB161(auVar10 >> 0x37,0) & 1) << 6 |
                         (ushort)(SUB161(auVar10 >> 0x3f,0) & 1) << 7 |
                         (ushort)(SUB161(auVar10 >> 0x47,0) & 1) << 8 |
                         (ushort)(SUB161(auVar10 >> 0x4f,0) & 1) << 9 |
                         (ushort)(SUB161(auVar10 >> 0x57,0) & 1) << 10 |
                         (ushort)(SUB161(auVar10 >> 0x5f,0) & 1) << 0xb |
                         (ushort)(SUB161(auVar10 >> 0x67,0) & 1) << 0xc |
                         (ushort)(SUB161(auVar10 >> 0x6f,0) & 1) << 0xd |
                         (ushort)(SUB161(auVar10 >> 0x77,0) & 1) << 0xe |
                        (ushort)(bVar11 >> 7) << 0xf) & uVar1;
        if (uVar3 != 0) break;
        uVar1 = (ushort)((ushort)(SUB161(auVar8 >> 7,0) & 1) |
                         (ushort)(SUB161(auVar8 >> 0xf,0) & 1) << 1 |
                         (ushort)(SUB161(auVar8 >> 0x17,0) & 1) << 2 |
                         (ushort)(SUB161(auVar8 >> 0x1f,0) & 1) << 3 |
                         (ushort)(SUB161(auVar8 >> 0x27,0) & 1) << 4 |
                         (ushort)(SUB161(auVar8 >> 0x2f,0) & 1) << 5 |
                         (ushort)(SUB161(auVar8 >> 0x37,0) & 1) << 6 |
                         (ushort)(SUB161(auVar8 >> 0x3f,0) & 1) << 7 |
                         (ushort)(SUB161(auVar8 >> 0x47,0) & 1) << 8 |
                         (ushort)(SUB161(auVar8 >> 0x4f,0) & 1) << 9 |
                         (ushort)(SUB161(auVar8 >> 0x57,0) & 1) << 10 |
                         (ushort)(SUB161(auVar8 >> 0x5f,0) & 1) << 0xb |
                         (ushort)(SUB161(auVar8 >> 0x67,0) & 1) << 0xc |
                         (ushort)(SUB161(auVar8 >> 0x6f,0) & 1) << 0xd |
                         (ushort)(SUB161(auVar8 >> 0x77,0) & 1) << 0xe | (ushort)(bVar9 >> 7) << 0xf
                        ) & uVar1;
        iVar4 = 0x1f;
        if (uVar1 != 0) {
          for (; uVar1 >> iVar4 == 0; iVar4 = iVar4 + -1) {
          }
        }
        if (uVar1 != 0) {
          pcVar5 = pcVar6 + iVar4;
        }
        uVar1 = 0xffffffff;
        pcVar6 = pcVar6 + 0x10;
      }
      uVar1 = (uVar3 * 2 & uVar3 * -2) - 1 &
              (ushort)((ushort)(SUB161(auVar8 >> 7,0) & 1) |
                       (ushort)(SUB161(auVar8 >> 0xf,0) & 1) << 1 |
                       (ushort)(SUB161(auVar8 >> 0x17,0) & 1) << 2 |
                       (ushort)(SUB161(auVar8 >> 0x1f,0) & 1) << 3 |
                       (ushort)(SUB161(auVar8 >> 0x27,0) & 1) << 4 |
                       (ushort)(SUB161(auVar8 >> 0x2f,0) & 1) << 5 |
                       (ushort)(SUB161(auVar8 >> 0x37,0) & 1) << 6 |
                       (ushort)(SUB161(auVar8 >> 0x3f,0) & 1) << 7 |
                       (ushort)(SUB161(auVar8 >> 0x47,0) & 1) << 8 |
                       (ushort)(SUB161(auVar8 >> 0x4f,0) & 1) << 9 |
                       (ushort)(SUB161(auVar8 >> 0x57,0) & 1) << 10 |
                       (ushort)(SUB161(auVar8 >> 0x5f,0) & 1) << 0xb |
                       (ushort)(SUB161(auVar8 >> 0x67,0) & 1) << 0xc |
                       (ushort)(SUB161(auVar8 >> 0x6f,0) & 1) << 0xd |
                       (ushort)(SUB161(auVar8 >> 0x77,0) & 1) << 0xe | (ushort)(bVar9 >> 7) << 0xf)
              & uVar1;
      iVar4 = 0x1f;
      if (uVar1 != 0) {
        for (; uVar1 >> iVar4 == 0; iVar4 = iVar4 + -1) {
        }
      }
      pcVar6 = pcVar6 + iVar4;
      if (uVar1 == 0) {
        pcVar6 = pcVar5;
      }
      return pcVar6;
    }
    uVar1 = _Ch & 0xff;
    if (uVar1 == 0) {
      pcVar5 = (char *)((uint)_Str & 0xfffffff0);
      auVar12 = CONCAT115(-(pcVar5[0xf] == '\0'),
                          CONCAT114(-(pcVar5[0xe] == '\0'),
                                    CONCAT113(-(pcVar5[0xd] == '\0'),
                                              CONCAT112(-(pcVar5[0xc] == '\0'),
                                                        CONCAT111(-(pcVar5[0xb] == '\0'),
                                                                  CONCAT110(-(pcVar5[10] == '\0'),
                                                                            CONCAT19(-(pcVar5[9] ==
                                                                                      '\0'),CONCAT18
                                                  (-(pcVar5[8] == '\0'),
                                                   CONCAT17(-(pcVar5[7] == '\0'),
                                                            CONCAT16(-(pcVar5[6] == '\0'),
                                                                     CONCAT15(-(pcVar5[5] == '\0'),
                                                                              CONCAT14(-(pcVar5[4]
                                                                                        == '\0'),
                                                                                       CONCAT13(-(
                                                  pcVar5[3] == '\0'),
                                                  CONCAT12(-(pcVar5[2] == '\0'),
                                                           CONCAT11(-(pcVar5[1] == '\0'),
                                                                    -(*pcVar5 == '\0')))))))))))))))
                         );
      uVar1 = (uint)(ushort)((ushort)(SUB161(auVar12 >> 7,0) & 1) |
                             (ushort)(SUB161(auVar12 >> 0xf,0) & 1) << 1 |
                             (ushort)(SUB161(auVar12 >> 0x17,0) & 1) << 2 |
                             (ushort)(SUB161(auVar12 >> 0x1f,0) & 1) << 3 |
                             (ushort)(SUB161(auVar12 >> 0x27,0) & 1) << 4 |
                             (ushort)(SUB161(auVar12 >> 0x2f,0) & 1) << 5 |
                             (ushort)(SUB161(auVar12 >> 0x37,0) & 1) << 6 |
                             (ushort)(SUB161(auVar12 >> 0x3f,0) & 1) << 7 |
                             (ushort)(SUB161(auVar12 >> 0x47,0) & 1) << 8 |
                             (ushort)(SUB161(auVar12 >> 0x4f,0) & 1) << 9 |
                             (ushort)(SUB161(auVar12 >> 0x57,0) & 1) << 10 |
                             (ushort)(SUB161(auVar12 >> 0x5f,0) & 1) << 0xb |
                             (ushort)(SUB161(auVar12 >> 0x67,0) & 1) << 0xc |
                             (ushort)(SUB161(auVar12 >> 0x6f,0) & 1) << 0xd |
                             (ushort)(SUB161(auVar12 >> 0x77,0) & 1) << 0xe |
                            (ushort)((byte)-(pcVar5[0xf] == '\0') >> 7) << 0xf) &
              -1 << ((byte)_Str & 0xf);
      while (uVar1 == 0) {
        pcVar6 = pcVar5 + 0x1f;
        auVar12 = CONCAT115(-(*pcVar6 == '\0'),
                            CONCAT114(-(pcVar5[0x1e] == '\0'),
                                      CONCAT113(-(pcVar5[0x1d] == '\0'),
                                                CONCAT112(-(pcVar5[0x1c] == '\0'),
                                                          CONCAT111(-(pcVar5[0x1b] == '\0'),
                                                                    CONCAT110(-(pcVar5[0x1a] == '\0'
                                                                               ),CONCAT19(-(pcVar5[
                                                  0x19] == '\0'),
                                                  CONCAT18(-(pcVar5[0x18] == '\0'),
                                                           CONCAT17(-(pcVar5[0x17] == '\0'),
                                                                    CONCAT16(-(pcVar5[0x16] == '\0')
                                                                             ,CONCAT15(-(pcVar5[0x15
                                                  ] == '\0'),
                                                  CONCAT14(-(pcVar5[0x14] == '\0'),
                                                           CONCAT13(-(pcVar5[0x13] == '\0'),
                                                                    CONCAT12(-(pcVar5[0x12] == '\0')
                                                                             ,CONCAT11(-(pcVar5[0x11
                                                  ] == '\0'),-(pcVar5[0x10] == '\0'))))))))))))))));
        pcVar5 = pcVar5 + 0x10;
        uVar1 = (uint)(ushort)((ushort)(SUB161(auVar12 >> 7,0) & 1) |
                               (ushort)(SUB161(auVar12 >> 0xf,0) & 1) << 1 |
                               (ushort)(SUB161(auVar12 >> 0x17,0) & 1) << 2 |
                               (ushort)(SUB161(auVar12 >> 0x1f,0) & 1) << 3 |
                               (ushort)(SUB161(auVar12 >> 0x27,0) & 1) << 4 |
                               (ushort)(SUB161(auVar12 >> 0x2f,0) & 1) << 5 |
                               (ushort)(SUB161(auVar12 >> 0x37,0) & 1) << 6 |
                               (ushort)(SUB161(auVar12 >> 0x3f,0) & 1) << 7 |
                               (ushort)(SUB161(auVar12 >> 0x47,0) & 1) << 8 |
                               (ushort)(SUB161(auVar12 >> 0x4f,0) & 1) << 9 |
                               (ushort)(SUB161(auVar12 >> 0x57,0) & 1) << 10 |
                               (ushort)(SUB161(auVar12 >> 0x5f,0) & 1) << 0xb |
                               (ushort)(SUB161(auVar12 >> 0x67,0) & 1) << 0xc |
                               (ushort)(SUB161(auVar12 >> 0x6f,0) & 1) << 0xd |
                               (ushort)(SUB161(auVar12 >> 0x77,0) & 1) << 0xe |
                              (ushort)((byte)-(*pcVar6 == '\0') >> 7) << 0xf);
      }
      iVar4 = 0;
      if (uVar1 != 0) {
        for (; (uVar1 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {
        }
      }
      pauVar2 = (undefined (*) [16])(pcVar5 + iVar4);
    }
    else {
      pauVar2 = (undefined (*) [16])0x0;
      uVar3 = (uint)_Str & 0xf;
      while (uVar3 != 0) {
        if ((byte)*_Str == uVar1) {
          pauVar2 = (undefined (*) [16])_Str;
        }
        if ((byte)*_Str == 0) {
          return (char *)pauVar2;
        }
        _Str = _Str + 1;
        uVar3 = (uint)_Str & 0xf;
      }
      do {
        pauVar7 = (undefined (*) [16])((int)_Str + 0x10);
        iVar4 = pcmpistri(ZEXT416(uVar1),*(undefined (*) [16])_Str,0x40);
        if ((undefined (*) [16])0xffffffef < _Str) {
          pauVar2 = (undefined (*) [16])(_Str + iVar4);
        }
        _Str = (char *)pauVar7;
      } while (pauVar7 != (undefined (*) [16])0x0);
    }
    return (char *)pauVar2;
  }
  iVar4 = -1;
  do {
    pcVar5 = _Str;
    if (iVar4 == 0) break;
    iVar4 = iVar4 + -1;
    pcVar5 = _Str + 1;
    cVar13 = *_Str;
    _Str = pcVar5;
  } while (cVar13 != '\0');
  iVar4 = -(iVar4 + 1);
  pcVar5 = pcVar5 + -1;
  do {
    pcVar6 = pcVar5;
    if (iVar4 == 0) break;
    iVar4 = iVar4 + -1;
    pcVar6 = pcVar5 + -1;
    cVar13 = *pcVar5;
    pcVar5 = pcVar6;
  } while ((char)_Ch != cVar13);
  pcVar6 = pcVar6 + 1;
  if (*pcVar6 != (char)_Ch) {
    pcVar6 = (char *)0x0;
  }
  return pcVar6;
}



int __cdecl FUN_10012b57(char *param_1,uint param_2,int param_3,int param_4)

{
  char *_Str;
  int *piVar1;
  char *pcVar2;
  size_t sVar3;
  char cVar4;
  char *pcVar5;
  int iVar6;
  
  pcVar5 = *(char **)(param_4 + 0xc);
  if ((param_1 == (char *)0x0) || (param_2 == 0)) {
    piVar1 = __errno();
    iVar6 = 0x16;
  }
  else {
    *param_1 = '\0';
    iVar6 = param_3;
    if (param_3 < 1) {
      iVar6 = 0;
    }
    if (iVar6 + 1U < param_2) {
      *param_1 = '0';
      _Str = param_1 + 1;
      pcVar2 = _Str;
      if (0 < param_3) {
        do {
          cVar4 = *pcVar5;
          if (cVar4 == '\0') {
            cVar4 = '0';
          }
          else {
            pcVar5 = pcVar5 + 1;
          }
          *pcVar2 = cVar4;
          pcVar2 = pcVar2 + 1;
          param_3 = param_3 + -1;
        } while (0 < param_3);
      }
      *pcVar2 = '\0';
      if ((-1 < param_3) && ('4' < *pcVar5)) {
        while (pcVar2 = pcVar2 + -1, *pcVar2 == '9') {
          *pcVar2 = '0';
        }
        *pcVar2 = *pcVar2 + '\x01';
      }
      if (*param_1 == '1') {
        *(int *)(param_4 + 4) = *(int *)(param_4 + 4) + 1;
      }
      else {
        sVar3 = _strlen(_Str);
        FID_conflict__memcpy(param_1,_Str,sVar3 + 1);
      }
      return 0;
    }
    piVar1 = __errno();
    iVar6 = 0x22;
  }
  *piVar1 = iVar6;
  FUN_100090a2();
  return iVar6;
}



void __cdecl FUN_10012c07(uint *param_1,uint *param_2)

{
  uint uVar1;
  ushort uVar2;
  ushort uVar3;
  uint uVar4;
  uint uVar5;
  ushort uVar6;
  
  uVar4 = 0x80000000;
  uVar1 = *param_2;
  uVar6 = *(ushort *)((int)param_2 + 6) & 0x8000;
  uVar2 = *(ushort *)((int)param_2 + 6) >> 4;
  uVar3 = uVar2 & 0x7ff;
  if ((uVar2 & 0x7ff) == 0) {
    if (((param_2[1] & 0xfffff) == 0) && (uVar1 == 0)) {
      param_1[1] = 0;
      *param_1 = 0;
      *(ushort *)(param_1 + 2) = uVar6;
      return;
    }
    uVar3 = uVar3 + 0x3c01;
    uVar4 = 0;
  }
  else if (uVar3 == 0x7ff) {
    uVar3 = 0x7fff;
  }
  else {
    uVar3 = uVar3 + 0x3c00;
  }
  uVar5 = uVar1 >> 0x15 | (param_2[1] & 0xfffff) << 0xb | uVar4;
  param_1[1] = uVar5;
  *param_1 = uVar1 << 0xb;
  if (uVar4 == 0) {
    do {
      uVar3 = uVar3 - 1;
      uVar5 = uVar5 * 2 | *param_1 >> 0x1f;
      *param_1 = *param_1 * 2;
    } while (-1 < (int)uVar5);
    param_1[1] = uVar5;
  }
  *(ushort *)(param_1 + 2) = uVar6 | uVar3;
  return;
}



void __cdecl
FUN_10012ccf(uint param_1,undefined4 param_2,int *param_3,char *param_4,rsize_t param_5)

{
  code *pcVar1;
  int *piVar2;
  char *_Dst;
  int iVar3;
  errno_t eVar4;
  undefined extraout_DL;
  undefined uVar5;
  uint in_stack_ffffffcc;
  uint uStack48;
  ushort uStack44;
  short local_24;
  char local_22;
  char local_20 [24];
  uint local_8;
  
  _Dst = param_4;
  piVar2 = param_3;
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  FUN_10012c07((uint *)&stack0xffffffcc,&param_1);
  iVar3 = FUN_10016747(in_stack_ffffffcc,uStack48,uStack44,0x11,0,&local_24);
  uVar5 = (undefined)in_stack_ffffffcc;
  piVar2[2] = iVar3;
  *piVar2 = (int)local_22;
  piVar2[1] = (int)local_24;
  eVar4 = _strcpy_s(_Dst,param_5,local_20);
  if (eVar4 == 0) {
    piVar2[3] = (int)_Dst;
    FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,extraout_DL,uVar5);
    return;
  }
  __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



// Library Function - Single Match
//  __alldvrm
// 
// Library: Visual Studio

undefined8 __alldvrm(uint param_1,uint param_2,uint param_3,uint param_4)

{
  ulonglong uVar1;
  longlong lVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  bool bVar10;
  char cVar11;
  uint uVar9;
  
  cVar11 = (int)param_2 < 0;
  if ((bool)cVar11) {
    bVar10 = param_1 != 0;
    param_1 = -param_1;
    param_2 = -(uint)bVar10 - param_2;
  }
  if ((int)param_4 < 0) {
    cVar11 = cVar11 + '\x01';
    bVar10 = param_3 != 0;
    param_3 = -param_3;
    param_4 = -(uint)bVar10 - param_4;
  }
  uVar3 = param_1;
  uVar5 = param_3;
  uVar6 = param_2;
  uVar9 = param_4;
  if (param_4 == 0) {
    uVar3 = param_2 / param_3;
    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) /
                 (ulonglong)param_3);
  }
  else {
    do {
      uVar8 = uVar9 >> 1;
      uVar5 = uVar5 >> 1 | (uint)((uVar9 & 1) != 0) << 0x1f;
      uVar7 = uVar6 >> 1;
      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) << 0x1f;
      uVar6 = uVar7;
      uVar9 = uVar8;
    } while (uVar8 != 0);
    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar5;
    iVar4 = (int)uVar1;
    lVar2 = (ulonglong)param_3 * (uVar1 & 0xffffffff);
    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);
    uVar5 = uVar3 + iVar4 * param_4;
    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar5)) ||
       ((param_2 <= uVar5 && (param_1 < (uint)lVar2)))) {
      iVar4 = iVar4 + -1;
    }
    uVar3 = 0;
  }
  if (cVar11 == '\x01') {
    bVar10 = iVar4 != 0;
    iVar4 = -iVar4;
    uVar3 = -(uint)bVar10 - uVar3;
  }
  return CONCAT44(uVar3,iVar4);
}



// Library Function - Single Match
//  __aullshr
// 
// Library: Visual Studio

ulonglong __fastcall __aullshr(byte param_1,uint param_2)

{
  uint in_EAX;
  
  if (0x3f < param_1) {
    return 0;
  }
  if (param_1 < 0x20) {
    return CONCAT44(param_2 >> (param_1 & 0x1f),
                    in_EAX >> (param_1 & 0x1f) | param_2 << 0x20 - (param_1 & 0x1f));
  }
  return (ulonglong)(param_2 >> (param_1 & 0x1f));
}



// Library Function - Single Match
//  __controlfp_s
// 
// Library: Visual Studio 2012 Release

errno_t __cdecl __controlfp_s(uint *_CurrentState,uint _NewValue,uint _Mask)

{
  int *piVar1;
  uint uVar2;
  errno_t eVar3;
  
  uVar2 = _Mask & 0xfff7ffff;
  if ((_NewValue & uVar2 & 0xfcf0fce0) == 0) {
    if (_CurrentState == (uint *)0x0) {
      FUN_100171c4(_NewValue,uVar2);
    }
    else {
      uVar2 = FUN_100171c4(_NewValue,uVar2);
      *_CurrentState = uVar2;
    }
    eVar3 = 0;
  }
  else {
    if (_CurrentState != (uint *)0x0) {
      uVar2 = FUN_100171c4(0,0);
      *_CurrentState = uVar2;
    }
    piVar1 = __errno();
    eVar3 = 0x16;
    *piVar1 = 0x16;
    FUN_100090a2();
  }
  return eVar3;
}



void FUN_10012ebc(void)

{
  __amsg_exit(2);
  return;
}



undefined4 __cdecl FUN_10012ec5(pthreadlocinfo *param_1,uint param_2,uint param_3,byte param_4)

{
  uint uVar1;
  undefined4 uVar2;
  int local_14;
  int local_10;
  int local_c;
  char local_8;
  
  FUN_10008755(&local_14,param_1);
  if ((*(byte *)(local_10 + 0x19 + (param_2 & 0xff)) & param_4) == 0) {
    uVar2 = 0;
    if (param_3 == 0) {
      uVar1 = 0;
    }
    else {
      uVar1 = *(ushort *)(*(int *)(local_14 + 0x90) + (param_2 & 0xff) * 2) & param_3;
    }
    if (uVar1 == 0) goto LAB_10012f0b;
  }
  uVar2 = 1;
LAB_10012f0b:
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar2;
}



void __cdecl FUN_10012f1f(uint param_1)

{
  FUN_10012ec5((pthreadlocinfo *)0x0,param_1,0,4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __87except
// 
// Library: Visual Studio 2019 Release

void __cdecl __87except(int param_1,int *param_2,ushort *param_3)

{
  bool bVar1;
  undefined3 extraout_var;
  int iVar2;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined uVar3;
  uint uVar4;
  undefined in_stack_ffffff68;
  uint local_94;
  uint local_90 [12];
  undefined8 local_60;
  uint local_50;
  uint local_14;
  
  local_14 = DAT_1003352c ^ (uint)&stack0xfffffff0;
  local_94 = (uint)*param_3;
  iVar2 = *param_2;
  if (iVar2 == 1) {
LAB_10012f9b:
    uVar4 = 8;
  }
  else if (iVar2 == 2) {
    uVar4 = 4;
  }
  else if (iVar2 == 3) {
    uVar4 = 0x11;
  }
  else if (iVar2 == 4) {
    uVar4 = 0x12;
  }
  else {
    if (iVar2 == 5) goto LAB_10012f9b;
    if (iVar2 == 7) {
      *param_2 = 1;
      goto LAB_10012ffd;
    }
    if (iVar2 != 8) goto LAB_10012ffd;
    uVar4 = 0x10;
  }
  bVar1 = __handle_exc(uVar4,(double *)(param_2 + 6),local_94);
  if (CONCAT31(extraout_var,bVar1) == 0) {
    if (((param_1 == 0x10) || (param_1 == 0x16)) || (param_1 == 0x1d)) {
      local_60 = *(undefined8 *)(param_2 + 4);
      local_50 = local_50 & 0xffffffe3 | 3;
    }
    else {
      local_50 = local_50 & 0xfffffffe;
    }
    __raise_exc(local_90,&local_94,uVar4,param_1,(undefined8 *)(param_2 + 2),
                (undefined8 *)(param_2 + 6));
  }
LAB_10012ffd:
  __ctrlfp(local_94,0xffff);
  if (((*param_2 == 8) || (_DAT_10033528 != 0)) ||
     (iVar2 = FUN_10002220(), uVar3 = extraout_DL, iVar2 == 0)) {
    __set_errno_from_matherr(*param_2);
    uVar3 = extraout_DL_00;
  }
  FUN_10008ec7(local_14 ^ (uint)&stack0xfffffff0,uVar3,in_stack_ffffff68);
  return;
}



undefined8 __fastcall FUN_10013040(undefined4 param_1,undefined4 param_2)

{
  float10 in_ST0;
  undefined8 uVar1;
  
  uVar1 = FUN_1001305e(param_1,param_2,SUB84((double)in_ST0,0),
                       (int)((ulonglong)(double)in_ST0 >> 0x20));
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined8 __fastcall
FUN_1001305e(undefined4 param_1,undefined4 param_2,int param_3,undefined4 param_4)

{
  ushort uVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  undefined4 uVar5;
  uint extraout_EDX;
  int iVar6;
  bool bVar7;
  ushort in_FPUControlWord;
  ushort in_FPUStatusWord;
  unkbyte10 extraout_ST0;
  float10 fVar8;
  undefined in_XMM0 [16];
  undefined4 unaff_retaddr;
  uint uVar9;
  
  uVar1 = SUB162(in_XMM0 >> 0x30,0);
  uVar2 = (uVar1 & 0x7fff) + 0xcfd0;
  bVar7 = uVar2 == 0x10c5;
  if (uVar2 < 0x10c6) {
    iVar6 = ((int)ROUND(SUB168(in_XMM0,0) * 10.1859163578813) + 0x1c7610U & 0x3f) * 0x20;
    return CONCAT44(iVar6,&DAT_1002fb10 + iVar6);
  }
  if ((short)uVar2 < 0x10c6) {
    uVar3 = (uint)(uVar1 & 0x7fff);
    pinsrw(in_XMM0,uVar3,3);
    return CONCAT44(param_2,uVar3);
  }
  uVar3 = __fload_withFB(param_1,(int)&param_3);
  uVar9 = extraout_EDX & 0xffff0000 | (uint)in_FPUControlWord;
  if (bVar7) {
    if (((uVar3 & 0xfffff) == 0) && (param_3 == 0)) {
      uVar3 = 1;
    }
    else {
      uVar3 = __convertTOStoQNaN();
    }
    if (_DAT_10045880 == 0) {
      __startOneArgErrorHandling(&DAT_100335f0,0x12,in_FPUControlWord,unaff_retaddr,param_3,param_4)
      ;
      return CONCAT44(uVar9,uVar3);
    }
  }
  else {
    fVar8 = (float10)fcos(extraout_ST0);
    uVar3 = uVar3 & 0xffff0000 | (uint)in_FPUStatusWord;
    if ((in_FPUStatusWord & 0x400) != 0) {
      do {
        fVar8 = fVar8 - (fVar8 / _DAT_1002f38a) * _DAT_1002f38a;
        uVar3 = uVar3 & 0xffff0000 | (uint)in_FPUStatusWord;
      } while ((in_FPUStatusWord & 0x400) != 0);
      fcos(fVar8);
    }
    if (_DAT_10045880 == 0) {
      uVar4 = uVar3 & 0xffff0000 | (uint)in_FPUControlWord;
      if (in_FPUControlWord != 0x27f) {
        if (((in_FPUControlWord & 0x20) != 0) &&
           (uVar4 = uVar3 & 0xffff0000 | (uint)in_FPUStatusWord, (in_FPUStatusWord & 0x20) != 0)) {
          uVar5 = 8;
          __startOneArgErrorHandling
                    (&DAT_100335f0,0x12,in_FPUControlWord,unaff_retaddr,param_3,param_4);
          return CONCAT44(uVar9,uVar5);
        }
        uVar4 = uVar4 & 0xffff0020;
      }
      return CONCAT44(uVar9,uVar4);
    }
  }
  return CONCAT44(uVar9,uVar3);
}



undefined8 __fastcall FUN_100131f0(undefined4 param_1,undefined4 param_2)

{
  float10 in_ST0;
  undefined8 uVar1;
  
  uVar1 = FUN_1001320e(param_1,param_2,SUB84((double)in_ST0,0),
                       (int)((ulonglong)(double)in_ST0 >> 0x20));
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined8 __fastcall
FUN_1001320e(undefined4 param_1,undefined4 param_2,int param_3,undefined4 param_4)

{
  ushort uVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint extraout_EDX;
  int iVar5;
  bool bVar6;
  ushort in_FPUControlWord;
  ushort in_FPUStatusWord;
  unkbyte10 extraout_ST0;
  float10 fVar7;
  double in_XMM0_Qa;
  undefined4 unaff_retaddr;
  uint uVar8;
  
  uVar1 = ((ushort)((ulonglong)in_XMM0_Qa >> 0x30) & 0x7fff) + 0xcfd0;
  bVar6 = uVar1 == 0x10c5;
  if (uVar1 < 0x10c6) {
    iVar5 = ((int)ROUND(in_XMM0_Qa * 10.1859163578813) + 0x1c7600U & 0x3f) * 0x20;
    return CONCAT44(iVar5,&DAT_100303c0 + iVar5);
  }
  if ((short)uVar1 < 0x10c6) {
    uVar1 = uVar1 >> 4;
    if (uVar1 == 0xcfd) {
      return CONCAT44(param_2,(uint)uVar1);
    }
    return CONCAT44(param_2,(uint)uVar1);
  }
  uVar2 = __fload_withFB(param_1,(int)&param_3);
  uVar8 = extraout_EDX & 0xffff0000 | (uint)in_FPUControlWord;
  if (bVar6) {
    if (((uVar2 & 0xfffff) == 0) && (param_3 == 0)) {
      uVar2 = 1;
    }
    else {
      uVar2 = __convertTOStoQNaN();
    }
    if (_DAT_10045880 == 0) {
      __startOneArgErrorHandling(&DAT_10033600,0x1e,in_FPUControlWord,unaff_retaddr,param_3,param_4)
      ;
      return CONCAT44(uVar8,uVar2);
    }
  }
  else {
    fVar7 = (float10)fsin(extraout_ST0);
    uVar2 = uVar2 & 0xffff0000 | (uint)in_FPUStatusWord;
    if ((in_FPUStatusWord & 0x400) != 0) {
      do {
        fVar7 = fVar7 - (fVar7 / _DAT_1002f38a) * _DAT_1002f38a;
        uVar2 = uVar2 & 0xffff0000 | (uint)in_FPUStatusWord;
      } while ((in_FPUStatusWord & 0x400) != 0);
      fsin(fVar7);
    }
    if (_DAT_10045880 == 0) {
      uVar3 = uVar2 & 0xffff0000 | (uint)in_FPUControlWord;
      if (in_FPUControlWord != 0x27f) {
        if (((in_FPUControlWord & 0x20) != 0) &&
           (uVar3 = uVar2 & 0xffff0000 | (uint)in_FPUStatusWord, (in_FPUStatusWord & 0x20) != 0)) {
          uVar4 = 8;
          __startOneArgErrorHandling
                    (&DAT_10033600,0x1e,in_FPUControlWord,unaff_retaddr,param_3,param_4);
          return CONCAT44(uVar8,uVar4);
        }
        uVar3 = uVar3 & 0xffff0020;
      }
      return CONCAT44(uVar8,uVar3);
    }
  }
  return CONCAT44(uVar8,uVar2);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___common_sin_reduction_LA
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017

int __cdecl ___common_sin_reduction_LA(undefined4 param_1,uint param_2,double *param_3)

{
  double *pdVar1;
  double *pdVar2;
  int iVar3;
  uint uVar4;
  float10 fVar5;
  float10 fVar6;
  float10 fVar7;
  float10 fVar8;
  longlong lVar9;
  double dVar10;
  byte bVar11;
  uint local_30;
  uint uStack44;
  float10 local_28;
  
  if ((int)param_2 < 0x7ff00000) {
    if (param_2 < 0x40ff4000) {
      uVar4 = (int)ROUND(_DAT_10048770 * (float10)(double)CONCAT44(param_2,param_1)) + 1U &
              0xfffffffe;
      fVar5 = (float10)uVar4;
      local_28 = ((((float10)(double)CONCAT44(param_2,param_1) - (float10)1.570796325802803 * fVar5)
                  - (float10)9.920935739593517e-10 * fVar5) - (float10)5.721188709663575e-18 * fVar5
                 ) - (float10)1.644625693632426e-26 * fVar5;
    }
    else {
      uVar4 = param_2 >> 0x14 & 0x7ff;
      fVar6 = (float10)(double)CONCAT44(param_2 + 0xf3800000,param_1);
      iVar3 = (int)(uVar4 - 0x41c) / 0x19;
      fVar5 = (float10)((unkuint10)fVar6 & 0xffffffc000000000);
      fVar7 = fVar6 - fVar5;
      if ((int)(iVar3 * -0x19 + -0x41c + uVar4) < 0x11) {
        local_28 = _DAT_10048730;
      }
      else {
        pdVar1 = (double *)(&DAT_10048400 + iVar3);
        pdVar2 = (double *)(&DAT_10048408 + iVar3);
        iVar3 = iVar3 + 1;
        local_28 = (float10)*pdVar2 * fVar5 + fVar7 * (float10)*pdVar1;
        local_28 = local_28 - (float10)((unkuint10)local_28 & 0xffffffc000000000);
      }
      fVar8 = (float10)(double)(&DAT_10048408)[iVar3] * fVar7 +
              (float10)(double)(&DAT_10048410)[iVar3] * fVar5;
      local_28 = local_28 +
                 fVar5 * (float10)(double)(&DAT_10048408)[iVar3] +
                 (float10)(double)(&DAT_10048400)[iVar3] * fVar7;
      dVar10 = (double)(local_28 + fVar8);
      uStack44 = (uint)((ulonglong)dVar10 >> 0x20);
      bVar11 = 0x33 - (char)(uStack44 >> 0x14);
      local_30 = SUB84(dVar10,0);
      lVar9 = ___common_srl(local_30,uStack44,bVar11);
      uVar4 = (uint)(lVar9 + 1) & 0xfffffffe;
      dVar10 = (double)___common_sll(uVar4,(int)((ulonglong)(lVar9 + 1) >> 0x20),bVar11);
      fVar6 = (float10)((unkuint10)fVar6 & 0xffffffc000000000);
      local_28 = _DAT_10048760 *
                 ((float10)(double)(&DAT_10048438)[iVar3] * fVar6 +
                  fVar7 * (float10)(double)(&DAT_10048430)[iVar3] +
                 (float10)(double)(&DAT_10048430)[iVar3] * fVar6 +
                 (float10)(double)(&DAT_10048428)[iVar3] * fVar7 +
                 (float10)(double)(&DAT_10048420)[iVar3] * fVar7 +
                 (float10)(double)(&DAT_10048428)[iVar3] * fVar6 +
                 (float10)(double)(&DAT_10048420)[iVar3] * fVar6 +
                 (float10)(double)(&DAT_10048418)[iVar3] * fVar7 +
                 (float10)(double)(&DAT_10048410)[iVar3] * fVar7 +
                 (float10)(double)(&DAT_10048418)[iVar3] * fVar6 +
                 fVar8 + (local_28 - (float10)dVar10));
    }
    *param_3 = (double)local_28;
    return uVar4 << 0x1e;
  }
  *(undefined4 *)param_3 = 0xffffffff;
  *(undefined4 *)((int)param_3 + 4) = 0x7fffffff;
  return 0;
}



// Library Function - Single Match
//  ___common_srl
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017

undefined8 __cdecl ___common_srl(uint param_1,int param_2,byte param_3)

{
  int iVar1;
  
  iVar1 = param_2 >> 0x1f;
  if (0x3f < param_3) {
    return CONCAT44(iVar1,iVar1);
  }
  if (param_3 < 0x20) {
    return CONCAT44(param_2 >> (param_3 & 0x1f),
                    param_1 >> (param_3 & 0x1f) | param_2 << 0x20 - (param_3 & 0x1f));
  }
  return CONCAT44(iVar1,param_2 >> (param_3 & 0x1f));
}



// Library Function - Single Match
//  ___common_sll
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017

longlong __cdecl ___common_sll(uint param_1,int param_2,byte param_3)

{
  if (0x3f < param_3) {
    return 0;
  }
  if (param_3 < 0x20) {
    return CONCAT44(param_2 << (param_3 & 0x1f) | param_1 >> 0x20 - (param_3 & 0x1f),
                    param_1 << (param_3 & 0x1f));
  }
  return (ulonglong)(param_1 << (param_3 & 0x1f)) << 0x20;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___common_cos_reduction_LA
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017

uint __cdecl ___common_cos_reduction_LA(undefined4 param_1,uint param_2,double *param_3)

{
  double *pdVar1;
  double *pdVar2;
  int iVar3;
  uint uVar4;
  float10 fVar5;
  float10 fVar6;
  float10 fVar7;
  float10 fVar8;
  undefined8 uVar9;
  double dVar10;
  byte bVar11;
  uint local_30;
  uint uStack44;
  float10 local_28;
  
  if ((int)param_2 < 0x7ff00000) {
    if (param_2 < 0x40ff4000) {
      uVar4 = (int)ROUND(_DAT_10048770 * (float10)(double)CONCAT44(param_2,param_1)) | 1;
      fVar5 = (float10)uVar4;
      local_28 = ((((float10)(double)CONCAT44(param_2,param_1) - (float10)1.570796325802803 * fVar5)
                  - (float10)9.920935739593517e-10 * fVar5) - (float10)5.721188709663575e-18 * fVar5
                 ) - (float10)1.644625693632426e-26 * fVar5;
    }
    else {
      uVar4 = param_2 >> 0x14 & 0x7ff;
      fVar6 = (float10)(double)CONCAT44(param_2 + 0xf3800000,param_1);
      iVar3 = (int)(uVar4 - 0x41c) / 0x19;
      fVar5 = (float10)((unkuint10)fVar6 & 0xffffffc000000000);
      fVar7 = fVar6 - fVar5;
      if ((int)(iVar3 * -0x19 + -0x41c + uVar4) < 0x11) {
        local_28 = _DAT_10048740;
      }
      else {
        pdVar1 = (double *)(&DAT_10048400 + iVar3);
        pdVar2 = (double *)(&DAT_10048408 + iVar3);
        iVar3 = iVar3 + 1;
        local_28 = (float10)*pdVar2 * fVar5 + fVar7 * (float10)*pdVar1;
        local_28 = local_28 - (float10)((unkuint10)local_28 & 0xffffffc000000000);
      }
      fVar8 = (float10)(double)(&DAT_10048408)[iVar3] * fVar7 +
              (float10)(double)(&DAT_10048410)[iVar3] * fVar5;
      local_28 = local_28 +
                 fVar5 * (float10)(double)(&DAT_10048408)[iVar3] +
                 (float10)(double)(&DAT_10048400)[iVar3] * fVar7;
      dVar10 = (double)(local_28 + fVar8);
      uStack44 = (uint)((ulonglong)dVar10 >> 0x20);
      bVar11 = 0x33 - (char)(uStack44 >> 0x14);
      local_30 = SUB84(dVar10,0);
      uVar9 = ___common_srl(local_30,uStack44,bVar11);
      uVar4 = (uint)uVar9 | 1;
      dVar10 = (double)___common_sll(uVar4,(int)((ulonglong)uVar9 >> 0x20),bVar11);
      fVar6 = (float10)((unkuint10)fVar6 & 0xffffffc000000000);
      local_28 = _DAT_10048760 *
                 ((float10)(double)(&DAT_10048438)[iVar3] * fVar6 +
                  fVar7 * (float10)(double)(&DAT_10048430)[iVar3] +
                 (float10)(double)(&DAT_10048430)[iVar3] * fVar6 +
                 (float10)(double)(&DAT_10048428)[iVar3] * fVar7 +
                 (float10)(double)(&DAT_10048420)[iVar3] * fVar7 +
                 (float10)(double)(&DAT_10048428)[iVar3] * fVar6 +
                 (float10)(double)(&DAT_10048420)[iVar3] * fVar6 +
                 (float10)(double)(&DAT_10048418)[iVar3] * fVar7 +
                 (float10)(double)(&DAT_10048410)[iVar3] * fVar7 +
                 (float10)(double)(&DAT_10048418)[iVar3] * fVar6 +
                 fVar8 + (local_28 - (float10)dVar10));
    }
    *param_3 = (double)local_28;
    return ~(uVar4 << 0x1e) & 0x80000000;
  }
  *(undefined4 *)param_3 = 0xffffffff;
  *(undefined4 *)((int)param_3 + 4) = 0x7fffffff;
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___common_pi04_reduction_LA
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017

int __cdecl ___common_pi04_reduction_LA(undefined4 param_1,uint param_2,double *param_3)

{
  double *pdVar1;
  double *pdVar2;
  uint uVar3;
  int iVar4;
  float10 fVar5;
  float10 fVar6;
  float10 fVar7;
  float10 fVar8;
  longlong lVar9;
  double dVar10;
  byte bVar11;
  uint local_40;
  uint uStack60;
  float10 local_38;
  
  if ((int)param_2 < 0x7ff00000) {
    if (param_2 < 0x40ff4000) {
      uVar3 = (int)ROUND(_DAT_100487b0 * (float10)(double)CONCAT44(param_2,param_1)) + 1U &
              0xfffffffe;
      fVar5 = (float10)uVar3;
      local_38 = ((((float10)(double)CONCAT44(param_2,param_1) - (float10)0.7853981629014015 * fVar5
                   ) - (float10)4.960467869796759e-10 * fVar5) -
                 (float10)2.860594354831787e-18 * fVar5) - fVar5 * (float10)8.223128468162129e-27;
    }
    else {
      uVar3 = param_2 >> 0x14 & 0x7ff;
      fVar6 = (float10)(double)CONCAT44(param_2 + 0xf3800000,param_1);
      iVar4 = (int)(uVar3 - 0x41c) / 0x19;
      fVar5 = (float10)((unkuint10)fVar6 & 0xffffffc000000000);
      fVar7 = fVar6 - fVar5;
      if ((int)(iVar4 * -0x19 + -0x41c + uVar3) < 0x11) {
        local_38 = _DAT_10048750;
      }
      else {
        pdVar1 = (double *)(&DAT_100485a0 + iVar4);
        pdVar2 = (double *)(&DAT_100485a8 + iVar4);
        iVar4 = iVar4 + 1;
        local_38 = (float10)*pdVar2 * fVar5 + fVar7 * (float10)*pdVar1;
        local_38 = local_38 - (float10)((unkuint10)local_38 & 0xffffffc000000000);
      }
      fVar8 = fVar5 * (float10)(double)(&DAT_100485b0)[iVar4] +
              fVar7 * (float10)(double)(&DAT_100485a8)[iVar4];
      local_38 = local_38 +
                 fVar5 * (float10)(double)(&DAT_100485a8)[iVar4] +
                 (float10)(double)(&DAT_100485a0)[iVar4] * fVar7;
      dVar10 = (double)(local_38 + fVar8);
      uStack60 = (uint)((ulonglong)dVar10 >> 0x20);
      bVar11 = 0x33 - (char)(uStack60 >> 0x14);
      local_40 = SUB84(dVar10,0);
      lVar9 = ___common_srl(local_40,uStack60,bVar11);
      uVar3 = (uint)(lVar9 + 1) & 0xfffffffe;
      dVar10 = (double)___common_sll(uVar3,(int)((ulonglong)(lVar9 + 1) >> 0x20),bVar11);
      fVar6 = (float10)((unkuint10)fVar6 & 0xffffffc000000000);
      local_38 = (fVar6 * (float10)(double)(&DAT_100485d0)[iVar4] +
                  (float10)(double)(&DAT_100485c8)[iVar4] * fVar7 +
                  fVar6 * (float10)(double)(&DAT_100485c8)[iVar4] +
                  (float10)(double)(&DAT_100485c0)[iVar4] * fVar7 +
                  fVar6 * (float10)(double)(&DAT_100485c0)[iVar4] +
                  (float10)(double)(&DAT_100485b8)[iVar4] * fVar7 +
                  (float10)(double)(&DAT_100485b0)[iVar4] * fVar7 +
                  (float10)(double)(&DAT_100485b8)[iVar4] * fVar6 +
                  (local_38 - (float10)dVar10) + fVar8 +
                 (float10)(double)(&DAT_100485d0)[iVar4] * fVar7 +
                 fVar6 * (float10)(double)(&DAT_100485d8)[iVar4]) * _DAT_100487a0;
    }
    iVar4 = (int)uVar3 >> 1;
    if ((false) || (_DAT_100487a0 < local_38)) {
      iVar4 = iVar4 + -3;
      local_38 = local_38 - _DAT_10048760;
    }
    *param_3 = (double)local_38;
    return iVar4;
  }
  *(undefined4 *)param_3 = 0xffffffff;
  *(undefined4 *)((int)param_3 + 4) = 0x7fffffff;
  return 0;
}



// WARNING: Could not reconcile some variable overlaps
// Library Function - Single Match
//  ___common_spow_cout_rare
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release, Visual Studio 2017 Debug, Visual
// Studio 2017 Release

undefined4 __cdecl ___common_spow_cout_rare(float *param_1,float *param_2,float *param_3)

{
  float fVar1;
  uint uVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  uint uVar6;
  uint uVar7;
  bool bVar8;
  bool bVar9;
  bool bVar10;
  float fVar11;
  float fVar12;
  float fVar13;
  float fVar14;
  float fVar15;
  float fVar16;
  float fVar17;
  float fVar18;
  float fVar19;
  float fVar20;
  float local_38;
  undefined4 local_30;
  undefined4 local_28;
  byte bStack29;
  float local_1c;
  undefined4 local_18;
  
  fVar1 = *param_1;
  fVar11 = *param_2;
  local_18 = *param_2;
  local_38 = *param_1;
  fVar14 = fVar1;
  if ((true) && (fVar1 == 0.0)) {
    local_38 = fVar1 + fVar1;
    fVar14 = local_38;
  }
  fVar12 = fVar11;
  if ((true) && (fVar11 == 0.0)) {
    local_18 = fVar11 + fVar11;
    fVar12 = local_18;
  }
  bVar8 = ((uint)local_38 & 0x7fffff) != 0;
  bVar9 = ((uint)local_18 & 0x7fffff) != 0;
  uVar6 = ((uint)local_18 >> 0x10 & 0x7f80) >> 7;
  bVar10 = uVar6 == 0xff;
  uVar2 = (uint)fVar12 & 0x7fffffff;
  uVar7 = ((uint)local_38 >> 0x10 & 0x7f80) >> 7;
  uVar4 = -((int)local_38 >> 0x1f);
  if (uVar2 + 0xc0800000 < 0x40000000) {
    if (0x4b7fffff < uVar2) {
      local_30 = 2;
      goto LAB_10013e37;
    }
    uVar2 = uVar2 << ((byte)(((uint)fVar12 & 0x7f800000) + 0x800000 >> 0x17) & 0x1f);
    if ((uVar2 & 0x7fffff) == 0) {
      local_30 = 2;
      if ((uVar2 & 0xffffff) == 0x800000) {
        local_30 = 1;
      }
      goto LAB_10013e37;
    }
  }
  local_30 = 0;
LAB_10013e37:
  if ((((uVar4 == 0) && (uVar7 == 0x7f)) && (!bVar8)) || ((uVar6 == 0 && (!bVar9)))) {
    bStack29 = (byte)((uint)(fVar14 + fVar12) >> 0x18);
    local_1c = (float)CONCAT13(bStack29 & 0x80 | 0x3f,0x800000);
    *param_3 = local_1c * local_1c;
    return 0;
  }
  if ((bVar8 && uVar7 == 0xff) || (bVar9 && bVar10)) {
    *param_3 = fVar1 + fVar11;
    return 0;
  }
  if ((true) && (fVar14 == 0.0)) {
    if ((int)local_18 < 0) {
      *param_3 = *(float *)(&DAT_100505cc + (local_30 & uVar4) * 4) / (fVar14 * fVar14);
      return 1;
    }
    *param_3 = *(float *)(&DAT_100505cc + (local_30 & uVar4) * 4) * fVar14 * fVar14;
    return 0;
  }
  if (((true) && (fVar14 == -1.0)) && ((local_30 != 0 || (bVar10)))) {
    *param_3 = *(float *)(&DAT_100505cc + (local_30 & 1) * 4);
    return 0;
  }
  if ((uVar7 != 0xff) && (!bVar10)) {
    if ((fVar14 <= 0.0) && (local_30 == 0)) {
      *param_3 = -NAN;
      return 1;
    }
    local_38 = (float)((uint)fVar14 & 0x7fffffff);
    fVar1 = *(float *)(&DAT_100505cc + (local_30 & uVar4) * 4);
    if (uVar7 == 0) {
      iVar3 = -0x40;
      local_38 = local_38 * 1.844674e+19;
    }
    else {
      iVar3 = 0;
    }
    local_28 = (float)((uint)local_38 & 0x807fffff | 0x3f800000);
    uVar4 = ((uint)local_38 & 0x780000) + 0x80000 >> 0x14;
    fVar11 = (float)(((int)(((((uint)local_38 >> 0x10 & 0x7f80) >> 7) << 0x17 |
                            (uint)local_38 & 0x7fffff) + 0xc0c80000) >> 0x17) + iVar3);
    fVar12 = *(float *)(&DAT_10050024 + uVar4 * 8) + fVar11;
    fVar14 = local_28 * *(float *)(&DAT_10050000 + uVar4 * 4);
    uVar2 = ((uint)fVar14 & 0x1e0000) + 0x20000 >> 0x12;
    fVar17 = fVar12 + *(float *)(&DAT_10050090 + uVar2 * 8);
    fVar14 = fVar14 * *(float *)(&DAT_1005006c + uVar2 * 4);
    uVar7 = ((uint)fVar14 & 0x7c000) + 0x4000 >> 0xf;
    fVar19 = fVar17 + *(float *)(&DAT_1005011c + uVar7 * 8);
    fVar16 = *(float *)(&DAT_10050000 + uVar4 * 4) * *(float *)(&DAT_1005006c + uVar2 * 4) *
             *(float *)(&DAT_100500d8 + uVar7 * 4);
    fVar14 = fVar14 * *(float *)(&DAT_100500d8 + uVar7 * 4);
    fVar13 = fVar14 - 1.441406;
    fVar18 = local_28 * 4097.0 - (local_28 * 4097.0 - local_28);
    fVar20 = fVar16 * 4097.0 - (fVar16 * 4097.0 - fVar16);
    fVar15 = fVar13 + fVar19;
    fVar14 = (local_28 - fVar18) * (fVar16 - fVar20) +
             (fVar18 * fVar20 - fVar14) + fVar20 * (local_28 - fVar18) + fVar18 * (fVar16 - fVar20);
    uVar6 = uVar6 + (((uint)fVar15 >> 0x10 & 0x7f80) >> 7);
    if (0x108 < uVar6) {
      local_30._3_1_ = (byte)((uint)fVar15 >> 0x18);
      *param_3 = *(float *)(&DAT_100505c0 + (uint)(byte)((local_18._3_1_ ^ local_30._3_1_) >> 7) * 4
                           ) *
                 *(float *)(&DAT_100505c0 + (uint)(byte)((local_18._3_1_ ^ local_30._3_1_) >> 7) * 4
                           ) * fVar1;
      return 0;
    }
    if (uVar6 < 0xc1) {
      *param_3 = fVar1 * 1.0;
      return 0;
    }
    fVar16 = fVar13 + fVar14;
    fVar11 = *(float *)(&DAT_10050024 + uVar4 * 8) + (fVar11 - fVar12) +
             (fVar12 - fVar17) + *(float *)(&DAT_10050090 + uVar2 * 8) +
             (fVar17 - fVar19) + *(float *)(&DAT_1005011c + uVar7 * 8) +
             *(float *)(&DAT_10050028 + uVar4 * 8) + *(float *)(&DAT_10050094 + uVar2 * 8) +
             *(float *)(&DAT_10050120 + uVar7 * 8) + fVar14 + (fVar19 - fVar15) + fVar13;
    fVar16 = (((fVar16 * -0.08355451 + 0.1605812) * fVar16 + -0.3471936) * fVar16 + 0.0008941205) *
             fVar16;
    fVar18 = fVar15 + fVar16;
    fVar12 = fVar11 + fVar18;
    fVar13 = fVar12 * 4097.0 - (fVar12 * 4097.0 - fVar12);
    fVar14 = local_18 * 4097.0 - (local_18 * 4097.0 - local_18);
    fVar17 = fVar14 * fVar13 + 98304.0;
    fVar14 = ((fVar18 - fVar12) + fVar11 + (fVar15 - fVar18) + fVar16) * local_18 +
             (local_18 - fVar14) * (fVar12 - fVar13) + fVar14 * (fVar12 - fVar13) +
             fVar13 * (local_18 - fVar14) + (fVar14 * fVar13 - (fVar17 - 98304.0));
    fVar11 = *(float *)(&DAT_100501a4 + ((uint)fVar17 & 0x7f) * 8);
    iVar3 = ((int)fVar17 << 10) >> 0x11;
    fVar14 = ((fVar14 * 0.05550411 + 0.2402265) * fVar14 + 0.6931472) * fVar14 * fVar11 +
             *(float *)(&DAT_100501a8 + ((uint)fVar17 & 0x7f) * 8);
    fVar12 = fVar14 + fVar11;
    local_28._2_2_ = (ushort)((uint)fVar12 >> 0x10);
    iVar5 = (((local_28._2_2_ & 0x7f80) >> 7) - 0x7f) + iVar3;
    if (0x7f < iVar5) {
      *param_3 = fVar1 * INFINITY;
      return 0;
    }
    if (-0x7f < iVar5) {
      local_28 = (float)((uint)fVar12 & 0xffff |
                        (uint)(ushort)(local_28._2_2_ & 0x807f |
                                      (ushort)((iVar5 + 0x7fU & 0xff) << 7)) << 0x10);
      *param_3 = local_28 * fVar1;
      return 0;
    }
    if (-0x89 < iVar5) {
      fVar13 = fVar12 * 4097.0 - (fVar12 * 4097.0 - fVar12);
      local_38 = (float)((iVar3 + 0xbfU & 0xff) << 0x17);
      *param_3 = fVar1 * (fVar13 * local_38 * 5.421011e-20 +
                          ((fVar11 - fVar12) + fVar14 + (fVar12 - fVar13)) * local_38 * 5.421011e-20
                         + 0.0);
      return 0;
    }
    if (-0xa0 < iVar5) {
      local_38 = (float)((iVar3 + 0xbfU & 0xff) << 0x17);
      *param_3 = fVar1 * 5.421011e-20 * fVar12 * local_38 + 0.0;
      return 0;
    }
    *param_3 = fVar1 * 0.0;
    return 0;
  }
  if (0x7e < uVar7) {
    if ((int)local_18 < 0) {
      *param_3 = *(float *)(&DAT_100505e8 + (local_30 & uVar4) * 4);
      return 0;
    }
    *param_3 = fVar12 * fVar14 * fVar14 * *(float *)(&DAT_100505cc + (local_30 & uVar4) * 4);
    return 0;
  }
  if ((int)local_18 < 0) {
    *param_3 = fVar12 * fVar12;
    return 0;
  }
  *param_3 = 0.0;
  return 0;
}



uint __cdecl FUN_100148a0(FILE *param_1)

{
  byte bVar1;
  int *piVar2;
  uint uVar3;
  uint uVar4;
  int iVar5;
  undefined *puVar6;
  LPWSTR pWVar7;
  
  if (param_1 == (FILE *)0x0) {
    piVar2 = __errno();
    *piVar2 = 0x16;
    FUN_100090a2();
  }
  else {
    uVar4 = param_1->_flag;
    if (((uVar4 & 0x83) != 0) && ((uVar4 & 0x40) == 0)) {
      if ((uVar4 & 2) == 0) {
        param_1->_flag = uVar4 | 1;
        if ((uVar4 & 0x10c) == 0) {
          __getbuf(param_1);
        }
        else {
          param_1->_ptr = param_1->_base;
        }
        uVar4 = param_1->_bufsiz;
        pWVar7 = (LPWSTR)param_1->_base;
        uVar3 = __fileno(param_1);
        uVar4 = FUN_1001755d(uVar3,pWVar7,uVar4);
        param_1->_cnt = uVar4;
        if ((uVar4 != 0) && (uVar4 != 0xffffffff)) {
          if ((*(byte *)&param_1->_flag & 0x82) == 0) {
            iVar5 = __fileno(param_1);
            if ((iVar5 == -1) || (iVar5 = __fileno(param_1), iVar5 == -2)) {
              puVar6 = &DAT_100335a0;
            }
            else {
              iVar5 = __fileno(param_1);
              uVar4 = __fileno(param_1);
              puVar6 = (undefined *)((uVar4 & 0x1f) * 0x40 + (&DAT_100458e0)[iVar5 >> 5]);
            }
            if ((puVar6[4] & 0x82) == 0x82) {
              param_1->_flag = param_1->_flag | 0x2000;
            }
          }
          if (((param_1->_bufsiz == 0x200) && ((*(byte *)&param_1->_flag & 8) != 0)) &&
             ((param_1->_flag & 0x400U) == 0)) {
            param_1->_bufsiz = 0x1000;
          }
          param_1->_cnt = param_1->_cnt + -1;
          bVar1 = *param_1->_ptr;
          param_1->_ptr = param_1->_ptr + 1;
          return (uint)bVar1;
        }
        param_1->_flag = param_1->_flag | (-(uint)(uVar4 != 0) & 0x10) + 0x10;
        param_1->_cnt = 0;
      }
      else {
        param_1->_flag = uVar4 | 0x20;
      }
    }
  }
  return 0xffffffff;
}



uint __cdecl FUN_100149c1(uint param_1,FILE *param_2)

{
  char *pcVar1;
  uint uVar2;
  int *piVar3;
  undefined *puVar4;
  
  if ((*(byte *)&param_2->_flag & 0x40) == 0) {
    uVar2 = __fileno(param_2);
    if ((uVar2 == 0xffffffff) || (uVar2 == 0xfffffffe)) {
      puVar4 = &DAT_100335a0;
    }
    else {
      puVar4 = (undefined *)((uVar2 & 0x1f) * 0x40 + (&DAT_100458e0)[(int)uVar2 >> 5]);
    }
    if ((puVar4[0x24] & 0x7f) == 0) {
      if ((uVar2 == 0xffffffff) || (uVar2 == 0xfffffffe)) {
        puVar4 = &DAT_100335a0;
      }
      else {
        puVar4 = (undefined *)((uVar2 & 0x1f) * 0x40 + (&DAT_100458e0)[(int)uVar2 >> 5]);
      }
      if ((puVar4[0x24] & 0x80) == 0) goto LAB_10014a42;
    }
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_100090a2();
  }
  else {
LAB_10014a42:
    if ((param_1 != 0xffffffff) &&
       (((*(byte *)&param_2->_flag & 1) != 0 ||
        (((*(byte *)&param_2->_flag & 0x80) != 0 && ((*(byte *)&param_2->_flag & 2) == 0)))))) {
      if (param_2->_base == (char *)0x0) {
        __getbuf(param_2);
      }
      if (param_2->_ptr == param_2->_base) {
        if (param_2->_cnt != 0) {
          return 0xffffffff;
        }
        param_2->_ptr = param_2->_ptr + 1;
      }
      param_2->_ptr = param_2->_ptr + -1;
      pcVar1 = param_2->_ptr;
      if ((*(byte *)&param_2->_flag & 0x40) == 0) {
        *pcVar1 = (char)param_1;
      }
      else if (*pcVar1 != (char)param_1) {
        param_2->_ptr = pcVar1 + 1;
        return 0xffffffff;
      }
      param_2->_cnt = param_2->_cnt + 1;
      param_2->_flag = param_2->_flag & 0xffffffefU | 1;
      return param_1 & 0xff;
    }
  }
  return 0xffffffff;
}



undefined4 __cdecl FUN_10014aa1(LPWSTR param_1,byte *param_2,uint param_3,pthreadlocinfo *param_4)

{
  uint uVar1;
  ushort uVar2;
  undefined2 extraout_var;
  int iVar3;
  int *piVar4;
  int iVar5;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  if ((param_2 == (byte *)0x0) || (param_3 == 0)) {
    return 0;
  }
  if (*param_2 == 0) {
    if (param_1 == (LPWSTR)0x0) {
      return 0;
    }
    *param_1 = L'\0';
    return 0;
  }
  FUN_10008755(local_14,param_4);
  if (local_14[0]->locale_name[2] == (wchar_t *)0x0) {
    if (param_1 != (LPWSTR)0x0) {
      *param_1 = (ushort)*param_2;
    }
    iVar5 = 1;
    goto LAB_10014b81;
  }
  uVar2 = FUN_10008ae9((uint)*param_2,local_14);
  if (CONCAT22(extraout_var,uVar2) == 0) {
    iVar5 = 1;
    iVar3 = MultiByteToWideChar(local_14[0]->lc_codepage,9,(LPCSTR)param_2,1,param_1,
                                (uint)(param_1 != (LPWSTR)0x0));
    if (iVar3 != 0) goto LAB_10014b81;
LAB_10014b73:
    piVar4 = __errno();
    iVar5 = -1;
    *piVar4 = 0x2a;
  }
  else {
    if (local_14[0]->mb_cur_max < 2) {
LAB_10014b40:
      uVar1 = local_14[0]->mb_cur_max;
LAB_10014b43:
      if ((param_3 < uVar1) || (param_2[1] == 0)) goto LAB_10014b73;
    }
    else {
      uVar1 = local_14[0]->mb_cur_max;
      if ((int)param_3 < local_14[0]->mb_cur_max) goto LAB_10014b43;
      iVar5 = MultiByteToWideChar(local_14[0]->lc_codepage,9,(LPCSTR)param_2,local_14[0]->mb_cur_max
                                  ,param_1,(uint)(param_1 != (LPWSTR)0x0));
      if (iVar5 == 0) goto LAB_10014b40;
    }
    iVar5 = local_14[0]->mb_cur_max;
  }
LAB_10014b81:
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
    return iVar5;
  }
  return iVar5;
}



void __cdecl FUN_10014b96(LPWSTR param_1,byte *param_2,uint param_3)

{
  FUN_10014aa1(param_1,param_2,param_3,(pthreadlocinfo *)0x0);
  return;
}



// Library Function - Multiple Matches With Different Base Names
//  ___acrt_locale_free_monetary
//  ___free_lconv_mon
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

void __cdecl FID_conflict____acrt_locale_free_monetary(int param_1)

{
  if (param_1 != 0) {
    if (*(undefined **)(param_1 + 0xc) != PTR_DAT_10034124) {
      FUN_10001730(*(undefined **)(param_1 + 0xc));
    }
    if (*(undefined **)(param_1 + 0x10) != PTR_DAT_10034128) {
      FUN_10001730(*(undefined **)(param_1 + 0x10));
    }
    if (*(undefined **)(param_1 + 0x14) != PTR_DAT_1003412c) {
      FUN_10001730(*(undefined **)(param_1 + 0x14));
    }
    if (*(undefined **)(param_1 + 0x18) != PTR_DAT_10034130) {
      FUN_10001730(*(undefined **)(param_1 + 0x18));
    }
    if (*(undefined **)(param_1 + 0x1c) != PTR_DAT_10034134) {
      FUN_10001730(*(undefined **)(param_1 + 0x1c));
    }
    if (*(undefined **)(param_1 + 0x20) != PTR_DAT_10034138) {
      FUN_10001730(*(undefined **)(param_1 + 0x20));
    }
    if (*(undefined **)(param_1 + 0x24) != PTR_DAT_1003413c) {
      FUN_10001730(*(undefined **)(param_1 + 0x24));
    }
    if (*(undefined **)(param_1 + 0x38) != PTR_DAT_10034150) {
      FUN_10001730(*(undefined **)(param_1 + 0x38));
    }
    if (*(undefined **)(param_1 + 0x3c) != PTR_DAT_10034154) {
      FUN_10001730(*(undefined **)(param_1 + 0x3c));
    }
    if (*(undefined **)(param_1 + 0x40) != PTR_DAT_10034158) {
      FUN_10001730(*(undefined **)(param_1 + 0x40));
    }
    if (*(undefined **)(param_1 + 0x44) != PTR_DAT_1003415c) {
      FUN_10001730(*(undefined **)(param_1 + 0x44));
    }
    if (*(undefined **)(param_1 + 0x48) != PTR_DAT_10034160) {
      FUN_10001730(*(undefined **)(param_1 + 0x48));
    }
    if (*(undefined **)(param_1 + 0x4c) != PTR_DAT_10034164) {
      FUN_10001730(*(undefined **)(param_1 + 0x4c));
    }
  }
  return;
}



// Library Function - Multiple Matches With Different Base Names
//  ___acrt_locale_free_numeric
//  ___free_lconv_num
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

void __cdecl FID_conflict____free_lconv_num(int *param_1)

{
  if (param_1 != (int *)0x0) {
    if ((undefined *)*param_1 != PTR_DAT_10034118) {
      FUN_10001730((undefined *)*param_1);
    }
    if ((undefined *)param_1[1] != PTR_DAT_1003411c) {
      FUN_10001730((undefined *)param_1[1]);
    }
    if ((undefined *)param_1[2] != PTR_DAT_10034120) {
      FUN_10001730((undefined *)param_1[2]);
    }
    if ((undefined *)param_1[0xc] != PTR_DAT_10034148) {
      FUN_10001730((undefined *)param_1[0xc]);
    }
    if ((undefined *)param_1[0xd] != PTR_DAT_1003414c) {
      FUN_10001730((undefined *)param_1[0xd]);
    }
  }
  return;
}



// Library Function - Single Match
//  ___free_lc_time
// 
// Library: Visual Studio 2012 Release

void __cdecl ___free_lc_time(undefined4 *param_1)

{
  if (param_1 != (undefined4 *)0x0) {
    FUN_10001730(param_1[1]);
    FUN_10001730(param_1[2]);
    FUN_10001730(param_1[3]);
    FUN_10001730(param_1[4]);
    FUN_10001730(param_1[5]);
    FUN_10001730(param_1[6]);
    FUN_10001730(*param_1);
    FUN_10001730(param_1[8]);
    FUN_10001730(param_1[9]);
    FUN_10001730(param_1[10]);
    FUN_10001730(param_1[0xb]);
    FUN_10001730(param_1[0xc]);
    FUN_10001730(param_1[0xd]);
    FUN_10001730(param_1[7]);
    FUN_10001730(param_1[0xe]);
    FUN_10001730(param_1[0xf]);
    FUN_10001730(param_1[0x10]);
    FUN_10001730(param_1[0x11]);
    FUN_10001730(param_1[0x12]);
    FUN_10001730(param_1[0x13]);
    FUN_10001730(param_1[0x14]);
    FUN_10001730(param_1[0x15]);
    FUN_10001730(param_1[0x16]);
    FUN_10001730(param_1[0x17]);
    FUN_10001730(param_1[0x18]);
    FUN_10001730(param_1[0x19]);
    FUN_10001730(param_1[0x1a]);
    FUN_10001730(param_1[0x1b]);
    FUN_10001730(param_1[0x1c]);
    FUN_10001730(param_1[0x1d]);
    FUN_10001730(param_1[0x1e]);
    FUN_10001730(param_1[0x1f]);
    FUN_10001730(param_1[0x20]);
    FUN_10001730(param_1[0x21]);
    FUN_10001730(param_1[0x22]);
    FUN_10001730(param_1[0x23]);
    FUN_10001730(param_1[0x24]);
    FUN_10001730(param_1[0x25]);
    FUN_10001730(param_1[0x26]);
    FUN_10001730(param_1[0x27]);
    FUN_10001730(param_1[0x28]);
    FUN_10001730(param_1[0x29]);
    FUN_10001730(param_1[0x2a]);
    FUN_10001730(param_1[0x2e]);
    FUN_10001730(param_1[0x2f]);
    FUN_10001730(param_1[0x30]);
    FUN_10001730(param_1[0x31]);
    FUN_10001730(param_1[0x32]);
    FUN_10001730(param_1[0x33]);
    FUN_10001730(param_1[0x2d]);
    FUN_10001730(param_1[0x35]);
    FUN_10001730(param_1[0x36]);
    FUN_10001730(param_1[0x37]);
    FUN_10001730(param_1[0x38]);
    FUN_10001730(param_1[0x39]);
    FUN_10001730(param_1[0x3a]);
    FUN_10001730(param_1[0x34]);
    FUN_10001730(param_1[0x3b]);
    FUN_10001730(param_1[0x3c]);
    FUN_10001730(param_1[0x3d]);
    FUN_10001730(param_1[0x3e]);
    FUN_10001730(param_1[0x3f]);
    FUN_10001730(param_1[0x40]);
    FUN_10001730(param_1[0x41]);
    FUN_10001730(param_1[0x42]);
    FUN_10001730(param_1[0x43]);
    FUN_10001730(param_1[0x44]);
    FUN_10001730(param_1[0x45]);
    FUN_10001730(param_1[0x46]);
    FUN_10001730(param_1[0x47]);
    FUN_10001730(param_1[0x48]);
    FUN_10001730(param_1[0x49]);
    FUN_10001730(param_1[0x4a]);
    FUN_10001730(param_1[0x4b]);
    FUN_10001730(param_1[0x4c]);
    FUN_10001730(param_1[0x4d]);
    FUN_10001730(param_1[0x4e]);
    FUN_10001730(param_1[0x4f]);
    FUN_10001730(param_1[0x50]);
    FUN_10001730(param_1[0x51]);
    FUN_10001730(param_1[0x52]);
    FUN_10001730(param_1[0x53]);
    FUN_10001730(param_1[0x54]);
    FUN_10001730(param_1[0x55]);
    FUN_10001730(param_1[0x56]);
    FUN_10001730(param_1[0x57]);
    FUN_10001730(param_1[0x58]);
  }
  return;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe

void __cdecl
FUN_10015091(int *param_1,DWORD param_2,LPCSTR param_3,int param_4,LPWORD param_5,UINT param_6,
            int param_7)

{
  uint uVar1;
  uint uVar2;
  uint cchWideChar;
  undefined4 *puVar3;
  int cchSrc;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined uVar4;
  undefined extraout_DL_01;
  uint *lpWideCharStr;
  
  uVar2 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  if (param_6 == 0) {
    param_6 = *(UINT *)(*param_1 + 4);
  }
  cchWideChar = MultiByteToWideChar(param_6,(uint)(param_7 != 0) * 8 + 1,param_3,param_4,(LPWSTR)0x0
                                    ,0);
  uVar4 = extraout_DL;
  if (cchWideChar == 0) goto LAB_10015175;
  if ((((int)cchWideChar < 1) || (0x7ffffff0 < cchWideChar)) ||
     (cchWideChar * 2 + 8 <= cchWideChar * 2)) {
    lpWideCharStr = (uint *)0x0;
  }
  else {
    uVar1 = cchWideChar * 2 + 8;
    if (uVar1 < 0x401) {
      puVar3 = (undefined4 *)&stack0xffffffec;
      if (&stack0x00000000 == (undefined *)0x14) goto LAB_10015175;
    }
    else {
      puVar3 = (undefined4 *)FUN_100017b0(uVar1);
      uVar4 = extraout_DL_00;
      if (puVar3 == (undefined4 *)0x0) goto LAB_10015175;
      *puVar3 = 0xdddd;
    }
    lpWideCharStr = puVar3 + 2;
  }
  if (lpWideCharStr != (uint *)0x0) {
    FUN_10006130(lpWideCharStr,0,cchWideChar * 2);
    cchSrc = MultiByteToWideChar(param_6,1,param_3,param_4,(LPWSTR)lpWideCharStr,cchWideChar);
    if (cchSrc != 0) {
      GetStringTypeW(param_2,(LPCWSTR)lpWideCharStr,cchSrc,param_5);
    }
    FUN_100087dd((int)lpWideCharStr);
    uVar4 = extraout_DL_01;
  }
LAB_10015175:
  FUN_10008ec7(uVar2 ^ (uint)&stack0xfffffffc,uVar4,(char)uVar2);
  return;
}



void __cdecl
FUN_10015189(pthreadlocinfo *param_1,DWORD param_2,LPCSTR param_3,int param_4,LPWORD param_5,
            UINT param_6,int param_7)

{
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_10008755(local_14,param_1);
  FUN_10015091(local_14,param_2,param_3,param_4,param_5,param_6,param_7);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



// Library Function - Single Match
//  _wcscat_s
// 
// Library: Visual Studio 2012 Release

errno_t __cdecl _wcscat_s(wchar_t *_Dst,rsize_t _SizeInWords,wchar_t *_Src)

{
  wchar_t wVar1;
  int *piVar2;
  wchar_t *pwVar3;
  int iVar4;
  int iStack16;
  
  if ((_Dst != (wchar_t *)0x0) && (_SizeInWords != 0)) {
    pwVar3 = _Dst;
    if (_Src != (wchar_t *)0x0) {
      do {
        if (*pwVar3 == L'\0') break;
        pwVar3 = pwVar3 + 1;
        _SizeInWords = _SizeInWords - 1;
      } while (_SizeInWords != 0);
      if (_SizeInWords != 0) {
        iVar4 = (int)pwVar3 - (int)_Src;
        do {
          wVar1 = *_Src;
          *(wchar_t *)(iVar4 + (int)_Src) = wVar1;
          _Src = _Src + 1;
          if (wVar1 == L'\0') break;
          _SizeInWords = _SizeInWords - 1;
        } while (_SizeInWords != 0);
        if (_SizeInWords != 0) {
          return 0;
        }
        *_Dst = L'\0';
        piVar2 = __errno();
        iStack16 = 0x22;
        goto LAB_100151ef;
      }
    }
    *_Dst = L'\0';
  }
  piVar2 = __errno();
  iStack16 = 0x16;
LAB_100151ef:
  *piVar2 = iStack16;
  FUN_100090a2();
  return iStack16;
}



// Library Function - Single Match
//  _wcslen
// 
// Libraries: Visual Studio 2010 Release, Visual Studio 2012 Release, Visual Studio 2015 Release,
// Visual Studio 2019 Release

size_t __cdecl _wcslen(wchar_t *_Str)

{
  wchar_t wVar1;
  wchar_t *pwVar2;
  
  pwVar2 = _Str;
  do {
    wVar1 = *pwVar2;
    pwVar2 = pwVar2 + 1;
  } while (wVar1 != L'\0');
  return ((int)pwVar2 - (int)_Str >> 1) - 1;
}



int __cdecl FUN_1001524e(short *param_1,int param_2,short *param_3,int param_4)

{
  short sVar1;
  int *piVar2;
  int iVar3;
  short *psVar4;
  int iVar5;
  
  if (param_4 == 0) {
    if (param_1 == (short *)0x0) {
      if (param_2 == 0) {
        return 0;
      }
    }
    else {
LAB_1001526d:
      if (param_2 != 0) {
        if (param_4 == 0) {
          *param_1 = 0;
          return 0;
        }
        if (param_3 != (short *)0x0) {
          iVar5 = param_2;
          if (param_4 == -1) {
            iVar3 = (int)param_1 - (int)param_3;
            do {
              sVar1 = *param_3;
              *(short *)(iVar3 + (int)param_3) = sVar1;
              param_3 = param_3 + 1;
              if (sVar1 == 0) break;
              iVar5 = iVar5 + -1;
            } while (iVar5 != 0);
          }
          else {
            psVar4 = param_1;
            do {
              sVar1 = *(short *)(((int)param_3 - (int)param_1) + (int)psVar4);
              *psVar4 = sVar1;
              psVar4 = psVar4 + 1;
              if ((sVar1 == 0) || (iVar5 = iVar5 + -1, iVar5 == 0)) break;
              param_4 = param_4 + -1;
            } while (param_4 != 0);
            if (param_4 == 0) {
              *psVar4 = 0;
            }
          }
          if (iVar5 != 0) {
            return 0;
          }
          if (param_4 == -1) {
            param_1[param_2 + -1] = 0;
            return 0x50;
          }
          *param_1 = 0;
          piVar2 = __errno();
          iVar5 = 0x22;
          goto LAB_10015292;
        }
        *param_1 = 0;
      }
    }
  }
  else if (param_1 != (short *)0x0) goto LAB_1001526d;
  piVar2 = __errno();
  iVar5 = 0x16;
LAB_10015292:
  *piVar2 = iVar5;
  FUN_100090a2();
  return iVar5;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_1001530c(ushort *param_1,uint *param_2)

{
  ushort uVar1;
  ushort uVar2;
  byte bVar3;
  bool bVar4;
  bool bVar5;
  int iVar6;
  uint uVar7;
  byte bVar8;
  uint uVar9;
  uint *puVar10;
  uint uVar11;
  uint *puVar12;
  int iVar13;
  int iVar14;
  int iVar15;
  uint uVar16;
  uint uVar17;
  int local_38;
  uint local_24;
  uint local_14 [4];
  
  local_14[3] = DAT_1003352c ^ (uint)&stack0xfffffffc;
  uVar1 = param_1[5];
  iVar14 = 0;
  uVar11 = uVar1 & 0x7fff;
  uVar16 = *(uint *)(param_1 + 3);
  puVar12 = (uint *)(uVar11 - 0x3fff);
  local_14[0] = uVar16;
  uVar17 = *(uint *)(param_1 + 1);
  local_14[1] = uVar17;
  uVar2 = *param_1;
  local_14[2] = (uint)uVar2 << 0x10;
  bVar3 = (byte)DAT_10034180;
  if (puVar12 == (uint *)0xffffc001) {
    iVar15 = 0;
    iVar14 = 0;
    do {
      if (local_14[iVar14] != 0) {
        local_14[0] = 0;
        local_14[1] = 0;
        local_14[2] = 0;
        goto LAB_10015381;
      }
      iVar14 = iVar14 + 1;
    } while (iVar14 < 3);
  }
  else {
    iVar6 = DAT_1003417c + -1;
    bVar5 = false;
    iVar15 = (int)((DAT_1003417c >> 0x1f & 0x1fU) + DAT_1003417c) >> 5;
    bVar8 = 0x1f - ((byte)DAT_1003417c & 0x1f);
    if ((local_14[iVar15] & 1 << (bVar8 & 0x1f)) != 0) {
      uVar7 = local_14[iVar15] & ~(-1 << (bVar8 & 0x1f));
      iVar13 = iVar15;
      while (uVar7 == 0) {
        iVar13 = iVar13 + 1;
        if (2 < iVar13) goto LAB_10015481;
        uVar7 = local_14[iVar13];
      }
      iVar13 = (int)((iVar6 >> 0x1f & 0x1fU) + iVar6) >> 5;
      bVar5 = false;
      uVar7 = 1 << (0x1f - ((byte)iVar6 & 0x1f) & 0x1f);
      uVar9 = uVar7 + local_14[iVar13];
      bVar4 = false;
      if ((uVar9 < local_14[iVar13]) || (uVar9 < uVar7)) {
        bVar4 = true;
        bVar5 = true;
      }
      local_14[iVar13] = uVar9;
      while ((iVar13 = iVar13 + -1, -1 < iVar13 && (bVar4))) {
        bVar4 = false;
        bVar5 = false;
        uVar7 = local_14[iVar13] + 1;
        if ((uVar7 < local_14[iVar13]) || (uVar7 == 0)) {
          bVar4 = true;
          bVar5 = true;
        }
        local_14[iVar13] = uVar7;
      }
    }
LAB_10015481:
    local_14[iVar15] = local_14[iVar15] & -1 << (bVar8 & 0x1f);
    iVar15 = iVar15 + 1;
    if (iVar15 < 3) {
      puVar10 = local_14 + iVar15;
      for (iVar13 = 3 - iVar15; iVar13 != 0; iVar13 = iVar13 + -1) {
        *puVar10 = 0;
        puVar10 = puVar10 + 1;
      }
    }
    puVar10 = puVar12;
    if (bVar5) {
      puVar10 = (uint *)(uVar11 - 0x3ffe);
    }
    if ((int)puVar10 < (int)DAT_10034178 - DAT_1003417c) {
      local_14[0] = 0;
      local_14[1] = 0;
      local_14[2] = 0;
      puVar12 = DAT_10034178;
    }
    else {
      if ((int)DAT_10034178 < (int)puVar10) {
        if ((int)puVar10 < _DAT_10034174) {
          local_14[0] = local_14[0] & 0x7fffffff;
          iVar15 = DAT_10034188 + (int)puVar10;
          iVar14 = (int)(DAT_10034180 + (DAT_10034180 >> 0x1f & 0x1fU)) >> 5;
          bVar8 = bVar3 & 0x1f;
          local_24 = 0;
          iVar6 = 0;
          do {
            uVar16 = local_14[iVar6] >> bVar8 | local_24;
            local_24 = (local_14[iVar6] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
            local_14[iVar6] = uVar16;
            iVar6 = iVar6 + 1;
          } while (iVar6 < 3);
          puVar12 = local_14 + (2 - iVar14);
          iVar6 = 2;
          do {
            if (iVar6 < iVar14) {
              local_14[iVar6] = 0;
            }
            else {
              local_14[iVar6] = *puVar12;
            }
            puVar12 = puVar12 + -1;
            iVar6 = iVar6 + -1;
          } while (-1 < iVar6);
        }
        else {
          local_14[1] = 0;
          local_14[2] = 0;
          local_14[0] = 0x80000000;
          iVar15 = (int)(DAT_10034180 + (DAT_10034180 >> 0x1f & 0x1fU)) >> 5;
          bVar8 = bVar3 & 0x1f;
          local_24 = 0;
          do {
            uVar16 = local_14[iVar14] >> bVar8 | local_24;
            local_24 = (local_14[iVar14] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
            local_14[iVar14] = uVar16;
            iVar14 = iVar14 + 1;
          } while (iVar14 < 3);
          puVar12 = local_14 + (2 - iVar15);
          iVar14 = 2;
          do {
            if (iVar14 < iVar15) {
              local_14[iVar14] = 0;
            }
            else {
              local_14[iVar14] = *puVar12;
            }
            puVar12 = puVar12 + -1;
            iVar14 = iVar14 + -1;
          } while (-1 < iVar14);
          iVar15 = DAT_10034188 + _DAT_10034174;
        }
        goto LAB_10015832;
      }
      iVar13 = (int)DAT_10034178 - (int)puVar12;
      local_14[0] = uVar16;
      iVar15 = (int)(iVar13 + (iVar13 >> 0x1f & 0x1fU)) >> 5;
      local_14[1] = uVar17;
      local_14[2] = (uint)uVar2 << 0x10;
      bVar8 = (byte)iVar13 & 0x1f;
      local_24 = 0;
      do {
        uVar16 = local_14[iVar14] >> bVar8 | local_24;
        local_24 = (local_14[iVar14] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
        local_14[iVar14] = uVar16;
        iVar14 = iVar14 + 1;
      } while (iVar14 < 3);
      puVar12 = local_14 + (2 - iVar15);
      iVar14 = 2;
      do {
        if (iVar14 < iVar15) {
          local_14[iVar14] = 0;
        }
        else {
          local_14[iVar14] = *puVar12;
        }
        puVar12 = puVar12 + -1;
        iVar14 = iVar14 + -1;
      } while (-1 < iVar14);
      iVar14 = (int)((DAT_1003417c >> 0x1f & 0x1fU) + DAT_1003417c) >> 5;
      bVar8 = 0x1f - ((byte)DAT_1003417c & 0x1f);
      if ((local_14[iVar14] & 1 << (bVar8 & 0x1f)) != 0) {
        uVar16 = local_14[iVar14] & ~(-1 << (bVar8 & 0x1f));
        iVar15 = iVar14;
        while (uVar16 == 0) {
          iVar15 = iVar15 + 1;
          if (2 < iVar15) goto LAB_1001563c;
          uVar16 = local_14[iVar15];
        }
        iVar15 = (int)((iVar6 >> 0x1f & 0x1fU) + iVar6) >> 5;
        uVar16 = 1 << (0x1f - ((byte)iVar6 & 0x1f) & 0x1f);
        bVar5 = false;
        uVar17 = uVar16 + local_14[iVar15];
        if ((uVar17 < local_14[iVar15]) || (uVar17 < uVar16)) {
          bVar5 = true;
        }
        local_14[iVar15] = uVar17;
        while ((iVar15 = iVar15 + -1, -1 < iVar15 && (bVar5))) {
          bVar5 = false;
          uVar16 = local_14[iVar15] + 1;
          if ((uVar16 < local_14[iVar15]) || (uVar16 == 0)) {
            bVar5 = true;
          }
          local_14[iVar15] = uVar16;
        }
      }
LAB_1001563c:
      local_14[iVar14] = local_14[iVar14] & -1 << (bVar8 & 0x1f);
      iVar14 = iVar14 + 1;
      if (iVar14 < 3) {
        puVar12 = local_14 + iVar14;
        for (iVar15 = 3 - iVar14; iVar15 != 0; iVar15 = iVar15 + -1) {
          *puVar12 = 0;
          puVar12 = puVar12 + 1;
        }
      }
      iVar15 = DAT_10034180 + 1;
      iVar14 = (int)(iVar15 + (iVar15 >> 0x1f & 0x1fU)) >> 5;
      bVar8 = (byte)iVar15 & 0x1f;
      local_24 = 0;
      local_38 = 0;
      do {
        uVar16 = local_14[local_38];
        local_14[local_38] = uVar16 >> bVar8 | local_24;
        local_24 = (uVar16 & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
        local_38 = local_38 + 1;
      } while (local_38 < 3);
      puVar12 = local_14 + (2 - iVar14);
      iVar15 = 2;
      do {
        if (iVar15 < iVar14) {
          local_14[iVar15] = 0;
        }
        else {
          local_14[iVar15] = *puVar12;
        }
        puVar12 = puVar12 + -1;
        iVar15 = iVar15 + -1;
      } while (-1 < iVar15);
    }
LAB_10015381:
    iVar15 = 0;
  }
LAB_10015832:
  uVar16 = iVar15 << (0x1f - bVar3 & 0x1f) | -(uint)((uVar1 & 0x8000) != 0) & 0x80000000 |
           local_14[0];
  if (DAT_10034184 == 0x40) {
    param_2[1] = uVar16;
    *param_2 = local_14[1];
  }
  else if (DAT_10034184 == 0x20) {
    *param_2 = uVar16;
  }
  FUN_10008ec7(local_14[3] ^ (uint)&stack0xfffffffc,(char)puVar12,0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_1001587e(ushort *param_1,uint *param_2)

{
  ushort uVar1;
  ushort uVar2;
  byte bVar3;
  bool bVar4;
  bool bVar5;
  int iVar6;
  uint uVar7;
  byte bVar8;
  uint uVar9;
  uint *puVar10;
  uint uVar11;
  uint *puVar12;
  int iVar13;
  int iVar14;
  int iVar15;
  uint uVar16;
  uint uVar17;
  int local_38;
  uint local_24;
  uint local_14 [4];
  
  local_14[3] = DAT_1003352c ^ (uint)&stack0xfffffffc;
  uVar1 = param_1[5];
  iVar14 = 0;
  uVar11 = uVar1 & 0x7fff;
  uVar16 = *(uint *)(param_1 + 3);
  puVar12 = (uint *)(uVar11 - 0x3fff);
  local_14[0] = uVar16;
  uVar17 = *(uint *)(param_1 + 1);
  local_14[1] = uVar17;
  uVar2 = *param_1;
  local_14[2] = (uint)uVar2 << 0x10;
  bVar3 = (byte)DAT_10034198;
  if (puVar12 == (uint *)0xffffc001) {
    iVar15 = 0;
    iVar14 = 0;
    do {
      if (local_14[iVar14] != 0) {
        local_14[0] = 0;
        local_14[1] = 0;
        local_14[2] = 0;
        goto LAB_100158f3;
      }
      iVar14 = iVar14 + 1;
    } while (iVar14 < 3);
  }
  else {
    iVar6 = DAT_10034194 + -1;
    bVar5 = false;
    iVar15 = (int)((DAT_10034194 >> 0x1f & 0x1fU) + DAT_10034194) >> 5;
    bVar8 = 0x1f - ((byte)DAT_10034194 & 0x1f);
    if ((local_14[iVar15] & 1 << (bVar8 & 0x1f)) != 0) {
      uVar7 = local_14[iVar15] & ~(-1 << (bVar8 & 0x1f));
      iVar13 = iVar15;
      while (uVar7 == 0) {
        iVar13 = iVar13 + 1;
        if (2 < iVar13) goto LAB_100159f3;
        uVar7 = local_14[iVar13];
      }
      iVar13 = (int)((iVar6 >> 0x1f & 0x1fU) + iVar6) >> 5;
      bVar5 = false;
      uVar7 = 1 << (0x1f - ((byte)iVar6 & 0x1f) & 0x1f);
      uVar9 = uVar7 + local_14[iVar13];
      bVar4 = false;
      if ((uVar9 < local_14[iVar13]) || (uVar9 < uVar7)) {
        bVar4 = true;
        bVar5 = true;
      }
      local_14[iVar13] = uVar9;
      while ((iVar13 = iVar13 + -1, -1 < iVar13 && (bVar4))) {
        bVar4 = false;
        bVar5 = false;
        uVar7 = local_14[iVar13] + 1;
        if ((uVar7 < local_14[iVar13]) || (uVar7 == 0)) {
          bVar4 = true;
          bVar5 = true;
        }
        local_14[iVar13] = uVar7;
      }
    }
LAB_100159f3:
    local_14[iVar15] = local_14[iVar15] & -1 << (bVar8 & 0x1f);
    iVar15 = iVar15 + 1;
    if (iVar15 < 3) {
      puVar10 = local_14 + iVar15;
      for (iVar13 = 3 - iVar15; iVar13 != 0; iVar13 = iVar13 + -1) {
        *puVar10 = 0;
        puVar10 = puVar10 + 1;
      }
    }
    puVar10 = puVar12;
    if (bVar5) {
      puVar10 = (uint *)(uVar11 - 0x3ffe);
    }
    if ((int)puVar10 < (int)DAT_10034190 - DAT_10034194) {
      local_14[0] = 0;
      local_14[1] = 0;
      local_14[2] = 0;
      puVar12 = DAT_10034190;
    }
    else {
      if ((int)DAT_10034190 < (int)puVar10) {
        if ((int)puVar10 < _DAT_1003418c) {
          local_14[0] = local_14[0] & 0x7fffffff;
          iVar15 = DAT_100341a0 + (int)puVar10;
          iVar14 = (int)(DAT_10034198 + (DAT_10034198 >> 0x1f & 0x1fU)) >> 5;
          bVar8 = bVar3 & 0x1f;
          local_24 = 0;
          iVar6 = 0;
          do {
            uVar16 = local_14[iVar6] >> bVar8 | local_24;
            local_24 = (local_14[iVar6] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
            local_14[iVar6] = uVar16;
            iVar6 = iVar6 + 1;
          } while (iVar6 < 3);
          puVar12 = local_14 + (2 - iVar14);
          iVar6 = 2;
          do {
            if (iVar6 < iVar14) {
              local_14[iVar6] = 0;
            }
            else {
              local_14[iVar6] = *puVar12;
            }
            puVar12 = puVar12 + -1;
            iVar6 = iVar6 + -1;
          } while (-1 < iVar6);
        }
        else {
          local_14[1] = 0;
          local_14[2] = 0;
          local_14[0] = 0x80000000;
          iVar15 = (int)(DAT_10034198 + (DAT_10034198 >> 0x1f & 0x1fU)) >> 5;
          bVar8 = bVar3 & 0x1f;
          local_24 = 0;
          do {
            uVar16 = local_14[iVar14] >> bVar8 | local_24;
            local_24 = (local_14[iVar14] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
            local_14[iVar14] = uVar16;
            iVar14 = iVar14 + 1;
          } while (iVar14 < 3);
          puVar12 = local_14 + (2 - iVar15);
          iVar14 = 2;
          do {
            if (iVar14 < iVar15) {
              local_14[iVar14] = 0;
            }
            else {
              local_14[iVar14] = *puVar12;
            }
            puVar12 = puVar12 + -1;
            iVar14 = iVar14 + -1;
          } while (-1 < iVar14);
          iVar15 = DAT_100341a0 + _DAT_1003418c;
        }
        goto LAB_10015da4;
      }
      iVar13 = (int)DAT_10034190 - (int)puVar12;
      local_14[0] = uVar16;
      iVar15 = (int)(iVar13 + (iVar13 >> 0x1f & 0x1fU)) >> 5;
      local_14[1] = uVar17;
      local_14[2] = (uint)uVar2 << 0x10;
      bVar8 = (byte)iVar13 & 0x1f;
      local_24 = 0;
      do {
        uVar16 = local_14[iVar14] >> bVar8 | local_24;
        local_24 = (local_14[iVar14] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
        local_14[iVar14] = uVar16;
        iVar14 = iVar14 + 1;
      } while (iVar14 < 3);
      puVar12 = local_14 + (2 - iVar15);
      iVar14 = 2;
      do {
        if (iVar14 < iVar15) {
          local_14[iVar14] = 0;
        }
        else {
          local_14[iVar14] = *puVar12;
        }
        puVar12 = puVar12 + -1;
        iVar14 = iVar14 + -1;
      } while (-1 < iVar14);
      iVar14 = (int)((DAT_10034194 >> 0x1f & 0x1fU) + DAT_10034194) >> 5;
      bVar8 = 0x1f - ((byte)DAT_10034194 & 0x1f);
      if ((local_14[iVar14] & 1 << (bVar8 & 0x1f)) != 0) {
        uVar16 = local_14[iVar14] & ~(-1 << (bVar8 & 0x1f));
        iVar15 = iVar14;
        while (uVar16 == 0) {
          iVar15 = iVar15 + 1;
          if (2 < iVar15) goto LAB_10015bae;
          uVar16 = local_14[iVar15];
        }
        iVar15 = (int)((iVar6 >> 0x1f & 0x1fU) + iVar6) >> 5;
        uVar16 = 1 << (0x1f - ((byte)iVar6 & 0x1f) & 0x1f);
        bVar5 = false;
        uVar17 = uVar16 + local_14[iVar15];
        if ((uVar17 < local_14[iVar15]) || (uVar17 < uVar16)) {
          bVar5 = true;
        }
        local_14[iVar15] = uVar17;
        while ((iVar15 = iVar15 + -1, -1 < iVar15 && (bVar5))) {
          bVar5 = false;
          uVar16 = local_14[iVar15] + 1;
          if ((uVar16 < local_14[iVar15]) || (uVar16 == 0)) {
            bVar5 = true;
          }
          local_14[iVar15] = uVar16;
        }
      }
LAB_10015bae:
      local_14[iVar14] = local_14[iVar14] & -1 << (bVar8 & 0x1f);
      iVar14 = iVar14 + 1;
      if (iVar14 < 3) {
        puVar12 = local_14 + iVar14;
        for (iVar15 = 3 - iVar14; iVar15 != 0; iVar15 = iVar15 + -1) {
          *puVar12 = 0;
          puVar12 = puVar12 + 1;
        }
      }
      iVar15 = DAT_10034198 + 1;
      iVar14 = (int)(iVar15 + (iVar15 >> 0x1f & 0x1fU)) >> 5;
      bVar8 = (byte)iVar15 & 0x1f;
      local_24 = 0;
      local_38 = 0;
      do {
        uVar16 = local_14[local_38];
        local_14[local_38] = uVar16 >> bVar8 | local_24;
        local_24 = (uVar16 & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
        local_38 = local_38 + 1;
      } while (local_38 < 3);
      puVar12 = local_14 + (2 - iVar14);
      iVar15 = 2;
      do {
        if (iVar15 < iVar14) {
          local_14[iVar15] = 0;
        }
        else {
          local_14[iVar15] = *puVar12;
        }
        puVar12 = puVar12 + -1;
        iVar15 = iVar15 + -1;
      } while (-1 < iVar15);
    }
LAB_100158f3:
    iVar15 = 0;
  }
LAB_10015da4:
  uVar16 = iVar15 << (0x1f - bVar3 & 0x1f) | -(uint)((uVar1 & 0x8000) != 0) & 0x80000000 |
           local_14[0];
  if (DAT_1003419c == 0x40) {
    param_2[1] = uVar16;
    *param_2 = local_14[1];
  }
  else if (DAT_1003419c == 0x20) {
    *param_2 = uVar16;
  }
  FUN_10008ec7(local_14[3] ^ (uint)&stack0xfffffffc,(char)puVar12,0);
  return;
}



void __cdecl FUN_10015df0(char *param_1,int param_2,uint *param_3)

{
  uint uVar1;
  bool bVar2;
  uint *puVar3;
  short sVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  uint *puVar9;
  uint uVar10;
  uint uVar11;
  uint local_10;
  uint local_c;
  
  puVar3 = param_3;
  *param_3 = 0;
  param_3[1] = 0;
  param_3[2] = 0;
  if (param_2 != 0) {
    param_3 = (uint *)0x0;
    local_10 = 0;
    local_c = 0;
    do {
      uVar7 = *puVar3;
      uVar6 = puVar3[1];
      uVar10 = puVar3[2];
      uVar1 = local_10 * 4;
      uVar8 = ((int)param_3 * 2 | local_10 >> 0x1f) * 2 | local_10 * 2 >> 0x1f;
      *puVar3 = uVar1;
      uVar11 = (local_c * 2 | (uint)param_3 >> 0x1f) * 2 | (uint)((int)param_3 * 2) >> 0x1f;
      puVar3[1] = uVar8;
      uVar5 = uVar7 + uVar1;
      puVar3[2] = uVar11;
      bVar2 = false;
      if ((uVar5 < uVar1) || (uVar5 < uVar7)) {
        bVar2 = true;
      }
      *puVar3 = uVar5;
      uVar7 = uVar8;
      if (bVar2) {
        bVar2 = false;
        uVar7 = uVar8 + 1;
        if ((uVar7 < uVar8) || (uVar7 == 0)) {
          bVar2 = true;
        }
        puVar3[1] = uVar7;
        if (bVar2) {
          uVar11 = uVar11 + 1;
          puVar3[2] = uVar11;
        }
      }
      bVar2 = false;
      uVar1 = uVar7 + uVar6;
      if ((uVar1 < uVar7) || (uVar1 < uVar6)) {
        bVar2 = true;
      }
      puVar3[1] = uVar1;
      if (bVar2) {
        uVar11 = uVar11 + 1;
        puVar3[2] = uVar11;
      }
      uVar7 = uVar5 * 2;
      puVar9 = (uint *)(uVar1 * 2 | uVar5 >> 0x1f);
      local_c = (uVar11 + uVar10) * 2 | uVar1 >> 0x1f;
      *puVar3 = uVar7;
      puVar3[1] = (uint)puVar9;
      puVar3[2] = local_c;
      local_10 = uVar7 + (int)*param_1;
      if ((local_10 < uVar7) || (local_10 < (uint)(int)*param_1)) {
        bVar2 = true;
      }
      else {
        bVar2 = false;
      }
      *puVar3 = local_10;
      param_3 = puVar9;
      if (bVar2) {
        bVar2 = false;
        param_3 = (uint *)((int)puVar9 + 1);
        if ((param_3 < puVar9) || (param_3 == (uint *)0x0)) {
          bVar2 = true;
        }
        puVar3[1] = (uint)param_3;
        if (bVar2) {
          local_c = local_c + 1;
          puVar3[2] = local_c;
        }
      }
      param_2 = param_2 + -1;
      puVar3[1] = (uint)param_3;
      param_1 = param_1 + 1;
      puVar3[2] = local_c;
    } while (param_2 != 0);
  }
  sVar4 = 0x404e;
  if (puVar3[2] == 0) {
    uVar7 = puVar3[1];
    sVar4 = 0x404e;
    do {
      uVar6 = uVar7 << 0x10 | *puVar3 >> 0x10;
      uVar10 = uVar7 >> 0x10;
      sVar4 = sVar4 + -0x10;
      *puVar3 = *puVar3 << 0x10;
      uVar7 = uVar6;
    } while (uVar10 == 0);
    puVar3[1] = uVar6;
    puVar3[2] = uVar10;
  }
  uVar7 = puVar3[2];
  if ((uVar7 & 0x8000) == 0) {
    uVar6 = *puVar3;
    uVar10 = puVar3[1];
    do {
      uVar5 = uVar10 * 2 | uVar6 >> 0x1f;
      uVar1 = uVar7 * 2;
      uVar7 = uVar1 | uVar10 >> 0x1f;
      sVar4 = sVar4 + -1;
      uVar6 = uVar6 * 2;
      uVar10 = uVar5;
    } while ((uVar1 & 0x8000) == 0);
    *puVar3 = uVar6;
    puVar3[1] = uVar5;
    puVar3[2] = uVar7;
  }
  *(short *)((int)puVar3 + 10) = sVar4;
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

int FUN_10015fd0(void)

{
  FILE *pFVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = 0;
  __lock(1);
  for (iVar3 = 3; iVar3 < DAT_10047644; iVar3 = iVar3 + 1) {
    pFVar1 = *(FILE **)(DAT_10047640 + iVar3 * 4);
    if (pFVar1 != (FILE *)0x0) {
      if ((*(byte *)&pFVar1->_flag & 0x83) != 0) {
        iVar2 = FUN_10017e6e(pFVar1);
        if (iVar2 != -1) {
          iVar4 = iVar4 + 1;
        }
      }
      if (0x13 < iVar3) {
        DeleteCriticalSection((LPCRITICAL_SECTION)(*(int *)(DAT_10047640 + iVar3 * 4) + 0x20));
        FUN_10001730(*(undefined4 *)(DAT_10047640 + iVar3 * 4));
        *(undefined4 *)(DAT_10047640 + iVar3 * 4) = 0;
      }
    }
  }
  FUN_10016064();
  return iVar4;
}



void FUN_10016064(void)

{
  FUN_10012036(1);
  return;
}



int __cdecl FUN_1001606d(FILE *param_1)

{
  int iVar1;
  uint uVar2;
  DWORD DVar3;
  
  if (param_1 == (FILE *)0x0) {
    iVar1 = _flsall(0);
  }
  else {
    iVar1 = FUN_100160b3(param_1);
    if (iVar1 == 0) {
      if ((param_1->_flag & 0x4000U) == 0) {
        iVar1 = 0;
      }
      else {
        uVar2 = __fileno(param_1);
        DVar3 = FUN_10017ee5(uVar2);
        iVar1 = -(uint)(DVar3 != 0);
      }
    }
    else {
      iVar1 = -1;
    }
  }
  return iVar1;
}



undefined4 __cdecl FUN_100160b3(FILE *param_1)

{
  WCHAR *pWVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  WCHAR *pWVar5;
  
  uVar3 = 0;
  if (((((byte)param_1->_flag & 3) == 2) && ((param_1->_flag & 0x108U) != 0)) &&
     (uVar4 = (int)param_1->_ptr - (int)param_1->_base, 0 < (int)uVar4)) {
    pWVar5 = (WCHAR *)param_1->_base;
    uVar2 = uVar4;
    pWVar1 = (WCHAR *)__fileno(param_1);
    uVar2 = FUN_1001126e(pWVar1,pWVar5,uVar2);
    if (uVar2 == uVar4) {
      if ((char)param_1->_flag < '\0') {
        param_1->_flag = param_1->_flag & 0xfffffffd;
      }
    }
    else {
      param_1->_flag = param_1->_flag | 0x20;
      uVar3 = 0xffffffff;
    }
  }
  param_1->_cnt = 0;
  param_1->_ptr = param_1->_base;
  return uVar3;
}



void FUN_10016117(void)

{
  _flsall(1);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// Library Function - Single Match
//  _flsall
// 
// Library: Visual Studio 2012 Release

int __cdecl _flsall(int param_1)

{
  void *_File;
  FILE *pFVar1;
  int iVar2;
  int _Index;
  int iVar3;
  int local_28;
  
  iVar3 = 0;
  local_28 = 0;
  __lock(1);
  for (_Index = 0; _Index < DAT_10047644; _Index = _Index + 1) {
    _File = *(void **)(DAT_10047640 + _Index * 4);
    if ((_File != (void *)0x0) && ((*(byte *)((int)_File + 0xc) & 0x83) != 0)) {
      __lock_file2(_Index,_File);
      pFVar1 = *(FILE **)(DAT_10047640 + _Index * 4);
      if ((*(byte *)&pFVar1->_flag & 0x83) != 0) {
        if (param_1 == 1) {
          iVar2 = FUN_1001606d(pFVar1);
          if (iVar2 != -1) {
            iVar3 = iVar3 + 1;
          }
        }
        else if ((param_1 == 0) && ((*(byte *)&pFVar1->_flag & 2) != 0)) {
          iVar2 = FUN_1001606d(pFVar1);
          if (iVar2 == -1) {
            local_28 = -1;
          }
        }
      }
      FUN_100161c8();
    }
  }
  FUN_100161fb();
  if (param_1 != 1) {
    iVar3 = local_28;
  }
  return iVar3;
}



void FUN_100161c8(void)

{
  int unaff_ESI;
  
  __unlock_file2(unaff_ESI,*(void **)(DAT_10047640 + unaff_ESI * 4));
  return;
}



void FUN_100161fb(void)

{
  FUN_10012036(1);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_10016204(uint param_1)

{
  int iVar1;
  
  iVar1 = (param_1 & 0x1f) * 0x40 + (&DAT_100458e0)[(int)param_1 >> 5];
  if (*(int *)(iVar1 + 8) == 0) {
    __lock(10);
    if (*(int *)(iVar1 + 8) == 0) {
      FUN_1000c11e((LPCRITICAL_SECTION)(iVar1 + 0xc),4000,0);
      *(int *)(iVar1 + 8) = *(int *)(iVar1 + 8) + 1;
    }
    FUN_10016289();
  }
  EnterCriticalSection
            ((LPCRITICAL_SECTION)
             ((&DAT_100458e0)[(int)param_1 >> 5] + 0xc + (param_1 & 0x1f) * 0x40));
  return 1;
}



void FUN_10016289(void)

{
  FUN_10012036(10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 __cdecl FUN_10016292(uint param_1)

{
  int *piVar1;
  ulong *puVar2;
  int iVar3;
  DWORD nStdHandle;
  
  if ((-1 < (int)param_1) && (param_1 < DAT_100476e4)) {
    iVar3 = (param_1 & 0x1f) * 0x40;
    if (((*(byte *)(iVar3 + 4 + (&DAT_100458e0)[(int)param_1 >> 5]) & 1) != 0) &&
       (*(int *)(iVar3 + (&DAT_100458e0)[(int)param_1 >> 5]) != -1)) {
      if (_DAT_10045f98 == 1) {
        if (param_1 == 0) {
          nStdHandle = 0xfffffff6;
        }
        else if (param_1 == 1) {
          nStdHandle = 0xfffffff5;
        }
        else {
          if (param_1 != 2) goto LAB_100162ef;
          nStdHandle = 0xfffffff4;
        }
        SetStdHandle(nStdHandle,(HANDLE)0x0);
      }
LAB_100162ef:
      *(undefined4 *)(iVar3 + (&DAT_100458e0)[(int)param_1 >> 5]) = 0xffffffff;
      return 0;
    }
  }
  piVar1 = __errno();
  *piVar1 = 9;
  puVar2 = ___doserrno();
  *puVar2 = 0;
  return 0xffffffff;
}



undefined4 __cdecl FUN_10016318(uint param_1)

{
  ulong *puVar1;
  int *piVar2;
  int iVar3;
  
  if (param_1 == 0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    if ((-1 < (int)param_1) && (param_1 < DAT_100476e4)) {
      iVar3 = (param_1 & 0x1f) * 0x40;
      if ((*(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + iVar3) & 1) != 0) {
        return *(undefined4 *)((&DAT_100458e0)[(int)param_1 >> 5] + iVar3);
      }
    }
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
    FUN_100090a2();
  }
  return 0xffffffff;
}



void __cdecl FUN_1001637f(uint param_1)

{
  LeaveCriticalSection
            ((LPCRITICAL_SECTION)
             ((&DAT_100458e0)[(int)param_1 >> 5] + (param_1 & 0x1f) * 0x40 + 0xc));
  return;
}



// Library Function - Single Match
//  __putwch_nolock
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release

wint_t __cdecl __putwch_nolock(wchar_t _WCh)

{
  BOOL BVar1;
  DWORD local_8;
  
  if (DAT_10034580 == (HANDLE)0xfffffffe) {
    ___dcrt_lowio_initialize_console_output();
  }
  if ((DAT_10034580 == (HANDLE)0xffffffff) ||
     (BVar1 = WriteConsoleW(DAT_10034580,&_WCh,1,&local_8,(LPVOID)0x0), BVar1 == 0)) {
    _WCh = L'\xffff';
  }
  return _WCh;
}



// Library Function - Single Match
//  __set_error_mode
// 
// Library: Visual Studio 2012 Release

int __cdecl __set_error_mode(int _Mode)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = DAT_10046624;
  if (_Mode < 0) {
LAB_10016413:
    piVar2 = __errno();
    *piVar2 = 0x16;
    FUN_100090a2();
    return -1;
  }
  if (_Mode < 3) {
    DAT_10046624 = _Mode;
  }
  else if (_Mode != 3) goto LAB_10016413;
  return iVar1;
}



void __cdecl FUN_10016428(LPCWSTR param_1,undefined4 param_2,uint param_3)

{
  bool bVar1;
  PVOID pvVar2;
  undefined3 extraout_var;
  HMODULE hModule;
  DWORD DVar3;
  FARPROC pFVar4;
  BOOL BVar5;
  code *pcVar6;
  code *pcVar7;
  int iVar8;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined extraout_DL_04;
  undefined extraout_DL_05;
  undefined extraout_DL_06;
  undefined uVar9;
  int iVar10;
  undefined in_stack_ffffffd8;
  undefined local_14 [8];
  byte local_c;
  uint local_8;
  
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  iVar10 = 0;
  pvVar2 = EncodePointer((PVOID)0x0);
  bVar1 = FUN_1000c14c();
  if (DAT_10046628 == (PVOID)0x0) {
    hModule = LoadLibraryExW(L"USER32.DLL",(HANDLE)0x0,0x800);
    if (((hModule == (HMODULE)0x0) &&
        ((DVar3 = GetLastError(), uVar9 = extraout_DL, DVar3 != 0x57 ||
         (hModule = LoadLibraryExW(L"USER32.DLL",(HANDLE)0x0,0), uVar9 = extraout_DL_00,
         hModule == (HMODULE)0x0)))) ||
       (pFVar4 = GetProcAddress(hModule,"MessageBoxW"), uVar9 = extraout_DL_01,
       pFVar4 == (FARPROC)0x0)) goto LAB_100165fd;
    DAT_10046628 = EncodePointer(pFVar4);
    pFVar4 = GetProcAddress(hModule,"GetActiveWindow");
    DAT_1004662c = EncodePointer(pFVar4);
    pFVar4 = GetProcAddress(hModule,"GetLastActivePopup");
    DAT_10046630 = EncodePointer(pFVar4);
    pFVar4 = GetProcAddress(hModule,"GetUserObjectInformationW");
    DAT_10046638 = EncodePointer(pFVar4);
    if (DAT_10046638 != (PVOID)0x0) {
      pFVar4 = GetProcAddress(hModule,"GetProcessWindowStation");
      DAT_10046634 = EncodePointer(pFVar4);
    }
  }
  BVar5 = IsDebuggerPresent();
  if (BVar5 == 0) {
    if (CONCAT31(extraout_var,bVar1) != 0) {
      DecodePointer(DAT_10046628);
      uVar9 = extraout_DL_04;
      goto LAB_100165fd;
    }
  }
  else {
    uVar9 = extraout_DL_02;
    if (param_1 != (LPCWSTR)0x0) {
      OutputDebugStringW(param_1);
      uVar9 = extraout_DL_03;
    }
    if (CONCAT31(extraout_var,bVar1) != 0) goto LAB_100165fd;
  }
  if ((DAT_10046634 == pvVar2) || (DAT_10046638 == pvVar2)) {
LAB_100165b3:
    if ((((DAT_1004662c != pvVar2) &&
         (pcVar6 = (code *)DecodePointer(DAT_1004662c), pcVar6 != (code *)0x0)) &&
        (iVar10 = (*pcVar6)(), iVar10 != 0)) &&
       ((DAT_10046630 != pvVar2 &&
        (pcVar6 = (code *)DecodePointer(DAT_10046630), pcVar6 != (code *)0x0)))) {
      iVar10 = (*pcVar6)(iVar10);
    }
  }
  else {
    pcVar6 = (code *)DecodePointer(DAT_10046634);
    pcVar7 = (code *)DecodePointer(DAT_10046638);
    if (((pcVar6 == (code *)0x0) || (pcVar7 == (code *)0x0)) ||
       (((iVar8 = (*pcVar6)(), iVar8 != 0 &&
         (iVar8 = (*pcVar7)(iVar8,1,local_14,0xc,&stack0xffffffd8), iVar8 != 0)) &&
        ((local_c & 1) != 0)))) goto LAB_100165b3;
    param_3 = param_3 | 0x200000;
  }
  pcVar6 = (code *)DecodePointer(DAT_10046628);
  uVar9 = extraout_DL_05;
  if (pcVar6 != (code *)0x0) {
    (*pcVar6)(iVar10,param_1,param_2,param_3);
    uVar9 = extraout_DL_06;
  }
LAB_100165fd:
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,uVar9,in_stack_ffffffd8);
  return;
}



// Library Function - Single Match
//  __global_unwind2
// 
// Library: Visual Studio

void __cdecl __global_unwind2(PVOID param_1)

{
  RtlUnwind(param_1,(PVOID)0x10016628,(PEXCEPTION_RECORD)0x0,(PVOID)0x0);
  return;
}



undefined4 __fastcall
FUN_10016630(undefined4 param_1,undefined param_2,int param_3,undefined4 param_4,undefined4 param_5,
            undefined4 *param_6,uint param_7)

{
  undefined4 uVar1;
  int iVar2;
  undefined1 unaff_retaddr;
  
  uVar1 = 1;
  if ((*(uint *)(param_3 + 4) & 6) != 0) {
    iVar2 = FUN_10008ec7(*(uint *)(param_7 - 4) ^ param_7,param_2,unaff_retaddr);
    __local_unwind2(*(int *)(iVar2 + 0x24),*(uint *)(iVar2 + 0x28));
    *param_6 = param_4;
    uVar1 = 3;
  }
  return uVar1;
}



// Library Function - Single Match
//  __local_unwind2
// 
// Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual
// Studio 2019 Release

void __cdecl __local_unwind2(int param_1,uint param_2)

{
  uint uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 local_20;
  code *pcStack28;
  undefined4 local_18;
  int iStack20;
  
  iStack20 = param_1;
  pcStack28 = FUN_10016630;
  local_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &local_20;
  while( true ) {
    uVar1 = *(uint *)(param_1 + 0xc);
    if ((uVar1 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar1 <= param_2)))) break;
    local_18 = *(undefined4 *)(*(int *)(param_1 + 8) + uVar1 * 0xc);
    *(undefined4 *)(param_1 + 0xc) = local_18;
    if (*(int *)(*(int *)(param_1 + 8) + 4 + uVar1 * 0xc) == 0) {
      __NLG_Notify(0x101);
      FUN_10016744();
    }
  }
  *in_FS_OFFSET = local_20;
  return;
}



// Library Function - Single Match
//  __NLG_Notify
// 
// Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual
// Studio 2019 Release

void __NLG_Notify(ulong param_1)

{
  undefined4 in_EAX;
  undefined4 unaff_EBP;
  
  DAT_10034474 = in_EAX;
  DAT_10034478 = param_1;
  DAT_1003447c = unaff_EBP;
  return;
}



void FUN_10016744(void)

{
  code *in_EAX;
  
  (*in_EAX)();
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __cdecl
FUN_10016747(int param_1,uint param_2,ushort param_3,int param_4,byte param_5,short *param_6)

{
  short *psVar1;
  code *pcVar2;
  ushort uVar3;
  errno_t eVar4;
  ushort *puVar5;
  uint uVar6;
  char cVar7;
  ushort uVar8;
  undefined **ppuVar9;
  int iVar10;
  undefined **ppuVar11;
  uint uVar12;
  ushort *puVar13;
  short *psVar14;
  short sVar15;
  uint uVar16;
  uint extraout_EDX;
  uint extraout_EDX_00;
  uint uVar17;
  int iVar18;
  uint uVar19;
  ushort uVar20;
  ushort uVar21;
  undefined **ppuVar22;
  ushort *puVar23;
  int iVar24;
  int iVar25;
  uint uVar26;
  bool bVar27;
  char *pcVar28;
  undefined uVar29;
  ushort *in_stack_ffffff74;
  int local_7c;
  short *local_5c;
  int local_58;
  uint local_54;
  int local_50;
  int local_4c;
  uint local_48;
  uint local_44;
  ushort local_40;
  undefined2 uStack62;
  undefined2 uStack60;
  undefined2 uStack58;
  undefined *local_38;
  undefined4 local_34;
  undefined4 local_30;
  ushort local_2c;
  undefined2 uStack42;
  ushort local_24;
  undefined4 uStack34;
  undefined4 uStack30;
  undefined local_1a;
  byte bStack25;
  byte local_14;
  undefined uStack19;
  ushort uStack18;
  ushort local_10 [4];
  uint local_8;
  
  uVar29 = SUB41(in_stack_ffffff74,0);
  local_8 = DAT_1003352c ^ (uint)&stack0xfffffffc;
  uVar16 = param_3 & 0x8000;
  local_34 = 0xcccccccc;
  uVar21 = param_3 & 0x7fff;
  local_30 = 0xcccccccc;
  local_2c = 0xcccc;
  uStack42 = 0x3ffb;
  sVar15 = (short)uVar16;
  if (sVar15 == 0) {
    *(undefined *)(param_6 + 1) = 0x20;
  }
  else {
    *(undefined *)(param_6 + 1) = 0x2d;
  }
  if (uVar21 == 0) {
    if ((param_2 == 0) && (param_1 == 0)) {
      *(undefined *)((int)param_6 + 3) = 1;
      *param_6 = 0;
      *(byte *)(param_6 + 1) = ((sVar15 != -0x8000) - 1U & 0xd) + 0x20;
      param_6[2] = 0x30;
      param_1 = CONCAT22(uStack34._2_2_,(ushort)uStack34);
      goto LAB_100170c4;
    }
  }
  else if (uVar21 == 0x7fff) {
    *param_6 = 1;
    if (((param_2 == 0x80000000) && (param_1 == 0)) || ((param_2 & 0x40000000) != 0)) {
      if ((sVar15 == 0) || (param_2 != 0xc0000000)) {
        if ((param_2 != 0x80000000) || (param_1 != 0)) goto LAB_10016857;
        pcVar28 = "1#INF";
      }
      else {
        if (param_1 != 0) {
LAB_10016857:
          pcVar28 = "1#QNAN";
          goto LAB_1001685c;
        }
        pcVar28 = "1#IND";
      }
      eVar4 = _strcpy_s((char *)(param_6 + 2),0x16,pcVar28);
      if (eVar4 != 0) goto LAB_1001710e;
      *(undefined *)((int)param_6 + 3) = 5;
      uVar16 = extraout_EDX;
    }
    else {
      pcVar28 = "1#SNAN";
LAB_1001685c:
      eVar4 = _strcpy_s((char *)(param_6 + 2),0x16,pcVar28);
      if (eVar4 != 0) {
LAB_1001710e:
        __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
        pcVar2 = (code *)swi(3);
        (*pcVar2)();
        return;
      }
      *(undefined *)((int)param_6 + 3) = 6;
      uVar16 = extraout_EDX_00;
    }
    param_1 = CONCAT22(uStack34._2_2_,(ushort)uStack34);
    goto LAB_100170c4;
  }
  uStack30._0_2_ = (undefined2)param_2;
  uStack30._2_2_ = (ushort)(param_2 >> 0x10);
  ppuVar22 = &PTR_DAT_10034148;
  local_1a = (undefined)uVar21;
  bStack25 = (byte)(uVar21 >> 8);
  local_5c = (short *)0x5;
  local_4c._0_2_ =
       (short)((uint)uVar21 * 0x4d10 + -0x134312f4 +
               ((uint)(uVar21 >> 8) + (param_2 >> 0x18) * 2) * 0x4d >> 0x10);
  uStack34._0_2_ = (ushort)param_1;
  uStack34._2_2_ = (ushort)((uint)param_1 >> 0x10);
  local_24 = 0;
  uVar16 = (uint)(short)local_4c;
  bVar27 = -uVar16 == 0;
  if (bVar27) {
LAB_10016c17:
    uVar16 = CONCAT22((undefined2)uStack30,uStack34._2_2_);
    uVar19 = param_1 << 0x10;
  }
  else {
    local_48 = -uVar16;
    if (0 < (int)uVar16) {
      ppuVar22 = (undefined **)0x100342a8;
      bVar27 = uVar16 == 0;
      local_48 = uVar16;
    }
    if (bVar27) goto LAB_10016c17;
    uVar19 = param_1 << 0x10;
    uVar16 = CONCAT22((undefined2)uStack30,uStack34._2_2_);
    local_44 = uVar19;
    do {
      uStack30._2_2_ = (ushort)(param_2 >> 0x10);
      iVar24 = 0;
      uVar12 = (int)local_48 >> 3;
      ppuVar22 = ppuVar22 + 0x15;
      if ((local_48 & 7) != 0) {
        ppuVar11 = ppuVar22 + (local_48 & 7) * 3;
        ppuVar9 = ppuVar11;
        if (0x7fff < *(ushort *)ppuVar11) {
          ppuVar9 = (undefined **)&local_40;
          local_40 = (ushort)*ppuVar11;
          uStack62 = (undefined2)((uint)*ppuVar11 >> 0x10);
          uStack60 = SUB42(ppuVar11[1],0);
          uStack58 = (undefined2)((uint)ppuVar11[1] >> 0x10);
          local_38 = ppuVar11[2];
          iVar25 = CONCAT22(uStack60,uStack62) + -1;
          uStack62 = (undefined2)iVar25;
          uStack60 = (undefined2)((uint)iVar25 >> 0x10);
        }
        uVar20 = *(ushort *)((int)ppuVar9 + 10) & 0x7fff;
        uVar3 = CONCAT11(bStack25,local_1a) & 0x7fff;
        uVar21 = (*(ushort *)((int)ppuVar9 + 10) ^ CONCAT11(bStack25,local_1a)) & 0x8000;
        uVar8 = uVar3 + uVar20;
        local_14 = 0;
        uStack19 = 0;
        uStack18 = 0;
        local_10[0] = 0;
        local_10[1] = uStack18;
        local_10[2] = local_10[0];
        local_10[3] = uStack18;
        if (((uVar3 < 0x7fff) && (uVar20 < 0x7fff)) && (uVar8 < 0xbffe)) {
          if (uVar8 < 0x3fc0) {
LAB_100169aa:
            local_1a = 0;
            bStack25 = 0;
            uStack30._2_2_ = local_10[0];
            goto LAB_10016bf7;
          }
          if (((uVar3 == 0) &&
              (uVar8 = uVar8 + 1,
              (CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_)) & 0x7fffffff) == 0)) &&
             ((uVar16 == 0 && (local_44 == 0)))) {
            local_1a = 0;
            bStack25 = 0;
            uVar19 = local_44;
            goto LAB_10016c07;
          }
          if (((uVar20 == 0) && (uVar8 = uVar8 + 1, ((uint)ppuVar9[2] & 0x7fffffff) == 0)) &&
             ((ppuVar9[1] == (undefined *)0x0 && (*ppuVar9 == (undefined *)0x0))))
          goto LAB_100169aa;
          puVar13 = local_10;
          local_54 = 5;
          iVar25 = iVar24;
          do {
            if (0 < (int)local_54) {
              in_stack_ffffff74 = &local_24 + iVar25;
              ppuVar11 = ppuVar9 + 2;
              iVar18 = local_54;
              do {
                uVar16 = *(uint *)(puVar13 + -2) +
                         (uint)*in_stack_ffffff74 * (uint)*(ushort *)ppuVar11;
                if ((uVar16 < *(uint *)(puVar13 + -2)) ||
                   (iVar10 = iVar24, uVar16 < (uint)*in_stack_ffffff74 * (uint)*(ushort *)ppuVar11))
                {
                  iVar10 = 1;
                }
                *(uint *)(puVar13 + -2) = uVar16;
                if (iVar10 != 0) {
                  *puVar13 = *puVar13 + 1;
                }
                in_stack_ffffff74 = in_stack_ffffff74 + 1;
                ppuVar11 = (undefined **)((int)ppuVar11 + -2);
                iVar18 = iVar18 + -1;
              } while (0 < iVar18);
            }
            puVar13 = puVar13 + 1;
            iVar25 = iVar25 + 1;
            local_54 = local_54 + -1;
          } while (0 < (int)local_54);
          local_44 = CONCAT22(local_10[3],local_10[2]);
          uVar8 = uVar8 + 0xc002;
          uVar16 = CONCAT22(uStack18,CONCAT11(uStack19,local_14));
          if ((short)uVar8 < 1) {
LAB_10016ae6:
            uVar8 = uVar8 - 1;
            if (-1 < (short)uVar8) goto LAB_10016b57;
            local_54 = (uint)(ushort)-uVar8;
            uVar8 = 0;
            uVar19 = local_44;
            do {
              if ((local_14 & 1) != 0) {
                iVar24 = iVar24 + 1;
              }
              uVar26 = CONCAT22(local_10[1],local_10[0]);
              local_10[1] = local_10[1] >> 1 | (ushort)((uVar19 << 0x1f) >> 0x10);
              uVar17 = uVar16 >> 1;
              local_44 = uVar19 >> 1;
              uVar16 = uVar17 | uVar26 << 0x1f;
              local_54 = local_54 - 1;
              local_10[2] = (ushort)local_44;
              local_10[3] = (ushort)(uVar19 >> 0x11);
              local_10[0] = (ushort)(uVar26 >> 1);
              local_14 = (byte)uVar17;
              uStack19 = (undefined)(uVar17 >> 8);
              uStack18 = (ushort)(uVar16 >> 0x10);
              uVar19 = local_44;
            } while (local_54 != 0);
            if (iVar24 == 0) goto LAB_10016b57;
            uVar3 = (ushort)uVar17 | 1;
            local_14 = (byte)uVar3;
            uVar16 = uVar17 | 1;
          }
          else {
            do {
              if ((int)local_44 < 0) break;
              iVar25 = CONCAT22(local_10[1],local_10[0]) * 2;
              uVar3 = local_10[1] >> 0xf;
              local_10[0] = (ushort)iVar25 | (ushort)(uVar16 >> 0x1f);
              uVar16 = uVar16 * 2;
              local_10[1] = (ushort)((uint)iVar25 >> 0x10);
              uVar19 = local_44 * 2;
              local_14 = (byte)uVar16;
              uStack19 = (undefined)(uVar16 >> 8);
              uStack18 = (ushort)(uVar16 >> 0x10);
              local_44 = uVar19 | uVar3;
              uVar8 = uVar8 - 1;
              local_10[2] = (ushort)local_44;
              local_10[3] = (ushort)(uVar19 >> 0x10);
            } while (0 < (short)uVar8);
            if ((short)uVar8 < 1) goto LAB_10016ae6;
LAB_10016b57:
            uVar3 = CONCAT11(uStack19,local_14);
          }
          if ((0x8000 < uVar3) || ((uVar16 & 0x1ffff) == 0x18000)) {
            if (CONCAT22(local_10[0],uStack18) == -1) {
              uStack18 = 0;
              local_10[0] = 0;
              if (CONCAT22(local_10[2],local_10[1]) == -1) {
                local_10[1] = 0;
                local_10[2] = 0;
                if (local_10[3] == 0xffff) {
                  local_10[3] = 0x8000;
                  uVar8 = uVar8 + 1;
                }
                else {
                  local_10[3] = local_10[3] + 1;
                }
              }
              else {
                iVar24 = CONCAT22(local_10[2],local_10[1]) + 1;
                local_10[1] = (ushort)iVar24;
                local_10[2] = (ushort)((uint)iVar24 >> 0x10);
              }
              local_44 = CONCAT22(local_10[3],local_10[2]);
            }
            else {
              iVar24 = CONCAT22(local_10[0],uStack18) + 1;
              uStack18 = (ushort)iVar24;
              local_10[0] = (ushort)((uint)iVar24 >> 0x10);
            }
          }
          if (0x7ffe < uVar8) goto LAB_10016be0;
          bStack25 = (byte)(uVar8 >> 8) | (byte)(uVar21 >> 8);
          local_24 = uStack18;
          uStack34._0_2_ = local_10[0];
          uStack34._2_2_ = local_10[1];
          uVar19 = CONCAT22(local_10[0],uStack18);
          uStack30._0_2_ = (undefined2)local_44;
          uStack30._2_2_ = (ushort)(local_44 >> 0x10);
          uVar16 = CONCAT22((undefined2)uStack30,local_10[1]);
          local_1a = (undefined)uVar8;
        }
        else {
LAB_10016be0:
          iVar24 = ((uVar21 == 0) - 1 & 0x80000000) + 0x7fff8000;
          uStack30._2_2_ = (ushort)iVar24;
          local_1a = (undefined)((uint)iVar24 >> 0x10);
          bStack25 = (byte)((uint)iVar24 >> 0x18);
LAB_10016bf7:
          uVar16 = 0;
          local_24 = 0;
          uStack34._0_2_ = 0;
          uStack34._2_2_ = 0;
          uStack30._0_2_ = 0;
          uVar19 = uVar16;
        }
        param_2 = CONCAT22(uStack30._2_2_,(undefined2)uStack30);
        param_1 = CONCAT22(uStack34._2_2_,(ushort)uStack34);
        local_44 = uVar19;
      }
LAB_10016c07:
      uVar29 = SUB41(in_stack_ffffff74,0);
      local_48 = uVar12;
    } while (uVar12 != 0);
  }
  uStack30._2_2_ = (ushort)(param_2 >> 0x10);
  uVar12 = CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_));
  uStack30 = param_2;
  if (0x3ffe < (ushort)(uVar12 >> 0x10)) {
    local_4c._0_2_ = (short)local_4c + 1;
    local_7c = 0;
    local_14 = 0;
    uStack19 = 0;
    uStack18 = 0;
    local_10[0] = 0;
    local_10[1] = 0;
    local_10[2] = 0;
    local_10[3] = 0;
    uVar12 = uVar12 >> 0x10 & 0x7fff;
    local_50 = uVar12 + 0x3ffb;
    if (((0x7ffe < (ushort)uVar12) || (false)) || (0xbffd < (ushort)local_50)) {
LAB_10016eb5:
      iVar24 = (((bStack25 & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;
      uStack30._2_2_ = (ushort)iVar24;
      local_1a = (undefined)((uint)iVar24 >> 0x10);
      bStack25 = (byte)((uint)iVar24 >> 0x18);
    }
    else {
      if (0x3fbf < (ushort)local_50) {
        if ((((ushort)uVar12 == 0) &&
            (local_50 = uVar12 + 0x3ffc,
            (CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_)) & 0x7fffffff) == 0)) &&
           ((uVar16 == 0 && (uVar19 == 0)))) {
          local_1a = 0;
          bStack25 = 0;
          goto LAB_10016ed0;
        }
        if (((false) && (local_50 = local_50 + 1, false)) && ((false && (false))))
        goto LAB_10016c92;
        puVar13 = local_10;
        local_54 = 0;
        do {
          if (0 < (int)local_5c) {
            puVar5 = &local_2c;
            puVar23 = &local_24 + local_54;
            iVar24 = (int)local_5c;
            do {
              uVar16 = *(uint *)(puVar13 + -2) + (uint)*puVar5 * (uint)*puVar23;
              if ((uVar16 < *(uint *)(puVar13 + -2)) || (uVar16 < (uint)*puVar5 * (uint)*puVar23)) {
                bVar27 = true;
              }
              else {
                bVar27 = false;
              }
              *(uint *)(puVar13 + -2) = uVar16;
              if (bVar27) {
                *puVar13 = *puVar13 + 1;
              }
              puVar23 = puVar23 + 1;
              puVar5 = puVar5 + -1;
              iVar24 = iVar24 + -1;
            } while (0 < iVar24);
          }
          puVar13 = puVar13 + 1;
          local_54 = local_54 + 1;
          local_5c = (short *)((int)local_5c + -1);
        } while (0 < (int)local_5c);
        uStack30 = CONCAT22(local_10[3],local_10[2]);
        local_50 = local_50 + 0xc002;
        if ((short)local_50 < 1) {
          uVar16 = CONCAT22(uStack18,CONCAT11(uStack19,local_14));
LAB_10016e09:
          uVar21 = (ushort)(local_50 + 0xffff);
          if (-1 < (short)uVar21) goto LAB_10016dae;
          local_5c = (short *)(-(local_50 + 0xffff) & 0xffff);
          uVar21 = uVar21 + (short)local_5c;
          do {
            uVar19 = uStack30;
            if ((local_14 & 1) != 0) {
              local_7c = local_7c + 1;
            }
            uVar12 = CONCAT22(local_10[1],local_10[0]);
            uVar26 = uVar16 >> 1;
            local_10[1] = local_10[1] >> 1 | (ushort)((uVar19 << 0x1f) >> 0x10);
            uVar16 = uVar26 | uVar12 << 0x1f;
            uStack30 = uVar19 >> 1;
            local_5c = (short *)((int)local_5c - 1);
            local_10[0] = (ushort)(uVar12 >> 1);
            local_14 = (byte)uVar26;
            uStack19 = (undefined)(uVar26 >> 8);
            uStack18 = (ushort)(uVar16 >> 0x10);
          } while (local_5c != (short *)0x0);
          local_10[2] = (ushort)uStack30;
          local_10[3] = (ushort)(uVar19 >> 0x11);
          if (local_7c == 0) goto LAB_10016dae;
          uVar8 = (ushort)uVar26 | 1;
          local_14 = (byte)uVar8;
          uVar16 = uVar26 | 1;
        }
        else {
          uVar16 = CONCAT22(uStack18,CONCAT11(uStack19,local_14));
          do {
            if ((int)uStack30 < 0) break;
            iVar24 = CONCAT22(local_10[1],local_10[0]) * 2;
            uVar21 = local_10[1] >> 0xf;
            local_10[0] = (ushort)iVar24 | (ushort)(uVar16 >> 0x1f);
            uVar19 = uStack30 * 2;
            local_10[1] = (ushort)((uint)iVar24 >> 0x10);
            uVar16 = uVar16 * 2;
            local_14 = (byte)uVar16;
            uStack19 = (undefined)(uVar16 >> 8);
            uStack18 = (ushort)(uVar16 >> 0x10);
            uStack30 = uVar19 | uVar21;
            local_50 = local_50 + 0xffff;
            local_10[2] = (ushort)uStack30;
            local_10[3] = (ushort)(uVar19 >> 0x10);
          } while (0 < (short)local_50);
          uVar21 = (ushort)local_50;
          if ((short)uVar21 < 1) goto LAB_10016e09;
LAB_10016dae:
          uVar8 = CONCAT11(uStack19,local_14);
        }
        if ((0x8000 < uVar8) || ((uVar16 & 0x1ffff) == 0x18000)) {
          if (CONCAT22(local_10[0],uStack18) == -1) {
            uStack18 = 0;
            local_10[0] = 0;
            if (CONCAT22(local_10[2],local_10[1]) == -1) {
              local_10[1] = uStack18;
              local_10[2] = local_10[0];
              if (local_10[3] == 0xffff) {
                uVar21 = uVar21 + 1;
                local_10[3] = 0x8000;
              }
              else {
                local_10[3] = local_10[3] + 1;
              }
            }
            else {
              iVar24 = CONCAT22(local_10[2],local_10[1]) + 1;
              local_10[1] = (ushort)iVar24;
              local_10[2] = (ushort)((uint)iVar24 >> 0x10);
            }
            uStack30 = CONCAT22(local_10[3],local_10[2]);
          }
          else {
            iVar24 = CONCAT22(local_10[0],uStack18) + 1;
            uStack18 = (ushort)iVar24;
            local_10[0] = (ushort)((uint)iVar24 >> 0x10);
          }
        }
        if (uVar21 < 0x7fff) {
          bStack25 = (byte)(uVar21 >> 8) | bStack25 & 0x80;
          local_24 = uStack18;
          param_1 = CONCAT22(local_10[1],local_10[0]);
          uVar16 = CONCAT22((undefined2)uStack30,local_10[1]);
          uVar19 = CONCAT22(local_10[0],uStack18);
          local_1a = (undefined)uVar21;
          goto LAB_10016ed0;
        }
        goto LAB_10016eb5;
      }
LAB_10016c92:
      uStack30._2_2_ = 0;
      local_1a = 0;
      bStack25 = 0;
    }
    uVar16 = 0;
    uVar19 = uVar16;
    uStack30 = param_2 & 0xffff | (uint)uStack30._2_2_ << 0x10;
  }
LAB_10016ed0:
  uStack30._2_2_ = (ushort)(uStack30 >> 0x10);
  *param_6 = (short)local_4c;
  if ((param_5 & 1) == 0) {
    local_4c = param_4;
LAB_10016f1b:
    if (0x15 < local_4c) {
      local_4c = 0x15;
    }
    iVar24 = (CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_)) >> 0x10) - 0x3ffe;
    uVar12 = (uint)uStack30._2_2_;
    iVar25 = 8;
    do {
      uVar6 = uVar19 >> 0x1f;
      uVar26 = uVar16 * 2;
      uVar17 = uVar12 * 2;
      uVar19 = uVar19 * 2;
      uVar12 = uVar17 | uVar16 >> 0x1f;
      uVar16 = uVar26 | uVar6;
      local_24 = (ushort)uVar19;
      uStack34._0_2_ = (ushort)(uVar19 >> 0x10);
      uStack30._2_2_ = (ushort)uVar12;
      local_1a = (undefined)(uVar17 >> 0x10);
      bStack25 = (byte)(uVar17 >> 0x18);
      iVar25 = iVar25 + -1;
    } while (iVar25 != 0);
    uStack34._2_2_ = (ushort)uVar16;
    uStack30._0_2_ = (undefined2)(uVar26 >> 0x10);
    local_48 = uVar12;
    local_44 = uVar19;
    if ((iVar24 < 0) && (uVar26 = -iVar24 & 0xff, uVar26 != 0)) {
      do {
        uVar6 = uVar19 >> 1;
        uVar19 = uVar6 | uVar16 << 0x1f;
        uVar17 = uVar16 >> 1;
        local_48 = uVar12 >> 1;
        uVar16 = uVar17 | uVar12 << 0x1f;
        uVar26 = uVar26 - 1;
        uStack30._2_2_ = (ushort)local_48;
        local_1a = (undefined)(local_48 >> 0x10);
        bStack25 = (byte)(uVar12 >> 0x19);
        local_24 = (ushort)uVar6;
        uStack34._0_2_ = (ushort)(uVar19 >> 0x10);
        uVar12 = local_48;
      } while (0 < (int)uVar26);
      uStack34._2_2_ = (ushort)uVar17;
      uStack30._0_2_ = (undefined2)(uVar16 >> 0x10);
      local_44 = uVar19;
    }
    local_58 = local_4c + 1;
    psVar1 = param_6 + 2;
    local_5c = psVar1;
    if (0 < local_58) {
      while( true ) {
        local_40 = local_24;
        uStack62 = (ushort)uStack34;
        uStack60 = uStack34._2_2_;
        uStack58 = (undefined2)uStack30;
        local_38 = (undefined *)CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_));
        uVar19 = (uVar16 * 2 | local_44 >> 0x1f) * 2 | local_44 * 2 >> 0x1f;
        uVar12 = (local_48 * 2 | uVar16 >> 0x1f) * 2 | uVar16 * 2 >> 0x1f;
        uVar16 = CONCAT22((ushort)uStack34,local_24) + local_44 * 4;
        if ((uVar16 < local_44 * 4) ||
           (uVar26 = uVar19, uVar16 < CONCAT22((ushort)uStack34,local_24))) {
          uVar26 = uVar19 + 1;
          if ((uVar26 < uVar19) || (bVar27 = false, uVar26 == 0)) {
            bVar27 = true;
          }
          if (bVar27) {
            uVar12 = uVar12 + 1;
          }
        }
        uVar19 = CONCAT22((undefined2)uStack30,uStack34._2_2_) + uVar26;
        if ((uVar19 < uVar26) || (uVar19 < CONCAT22((undefined2)uStack30,uStack34._2_2_))) {
          uVar12 = uVar12 + 1;
        }
        local_44 = uVar16 * 2;
        local_24 = (ushort)local_44;
        uStack34._0_2_ = (ushort)(local_44 >> 0x10);
        uVar16 = uVar19 * 2 | uVar16 >> 0x1f;
        uVar12 = (int)(local_38 + uVar12) * 2;
        uStack34._2_2_ = (ushort)uVar16;
        uStack30._0_2_ = (undefined2)(uVar19 * 2 >> 0x10);
        uStack30._2_2_ = (ushort)uVar12 | (ushort)(uVar19 >> 0x1f);
        local_1a = (undefined)(uVar12 >> 0x10);
        *(char *)local_5c = (char)(uVar12 >> 0x18) + '0';
        local_5c = (short *)((int)local_5c + 1);
        local_58 = local_58 + -1;
        bStack25 = 0;
        if (local_58 < 1) break;
        local_48 = uVar12 & 0xffffff | uVar19 >> 0x1f;
      }
    }
    param_1 = CONCAT22(uStack34._2_2_,(ushort)uStack34);
    psVar14 = local_5c + -1;
    if (*(char *)((int)local_5c + -1) < '5') {
      for (; (psVar1 <= psVar14 && (*(char *)psVar14 == '0'));
          psVar14 = (short *)((int)psVar14 + -1)) {
      }
      if (psVar14 < psVar1) {
        *param_6 = 0;
        *(byte *)(param_6 + 1) = ((sVar15 != -0x8000) - 1U & 0xd) + 0x20;
        *(undefined *)((int)param_6 + 3) = 1;
        *(char *)psVar1 = '0';
        goto LAB_10016f10;
      }
    }
    else {
      for (; (psVar1 <= psVar14 && (*(char *)psVar14 == '9'));
          psVar14 = (short *)((int)psVar14 + -1)) {
        *(char *)psVar14 = '0';
      }
      if (psVar14 < psVar1) {
        psVar14 = (short *)((int)psVar14 + 1);
        *param_6 = *param_6 + 1;
      }
      *(char *)psVar14 = *(char *)psVar14 + '\x01';
    }
    cVar7 = ((char)psVar14 - (char)param_6) + -3;
    *(char *)((int)param_6 + 3) = cVar7;
    *(undefined *)(cVar7 + 4 + (int)param_6) = 0;
  }
  else {
    local_4c = param_4 + (short)local_4c;
    if (0 < local_4c) goto LAB_10016f1b;
    *param_6 = 0;
    *(byte *)(param_6 + 1) = ((sVar15 != -0x8000) - 1U & 0xd) + 0x20;
    *(undefined *)((int)param_6 + 3) = 1;
    *(undefined *)(param_6 + 2) = 0x30;
LAB_10016f10:
    *(undefined *)((int)param_6 + 5) = 0;
  }
LAB_100170c4:
  uStack34 = param_1;
  FUN_10008ec7(local_8 ^ (uint)&stack0xfffffffc,(char)uVar16,uVar29);
  return;
}



// Library Function - Single Match
//  ___hw_cw_sse2
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2019 Release

uint __cdecl ___hw_cw_sse2(uint param_1)

{
  uint uVar1;
  uint uVar2;
  
  uVar1 = 0;
  if ((param_1 & 0x10) != 0) {
    uVar1 = 0x80;
  }
  if ((param_1 & 8) != 0) {
    uVar1 = uVar1 | 0x200;
  }
  if ((param_1 & 4) != 0) {
    uVar1 = uVar1 | 0x400;
  }
  if ((param_1 & 2) != 0) {
    uVar1 = uVar1 | 0x800;
  }
  if ((param_1 & 1) != 0) {
    uVar1 = uVar1 | 0x1000;
  }
  if ((param_1 & 0x80000) != 0) {
    uVar1 = uVar1 | 0x100;
  }
  uVar2 = param_1 & 0x300;
  if (uVar2 != 0) {
    if (uVar2 == 0x100) {
      uVar1 = uVar1 | 0x2000;
    }
    else if (uVar2 == 0x200) {
      uVar1 = uVar1 | 0x4000;
    }
    else if (uVar2 == 0x300) {
      uVar1 = uVar1 | 0x6000;
    }
  }
  uVar2 = param_1 & 0x3000000;
  if (uVar2 == 0x1000000) {
    uVar1 = uVar1 | 0x8040;
  }
  else {
    if (uVar2 == 0x2000000) {
      return uVar1 | 0x40;
    }
    if (uVar2 == 0x3000000) {
      return uVar1 | 0x8000;
    }
  }
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint __cdecl FUN_100171c4(uint param_1,uint param_2)

{
  uint uVar1;
  uint uVar2;
  ushort uVar3;
  uint uVar4;
  uint in_MXCSR;
  ushort in_FPUControlWord;
  
  uVar1 = 0;
  if ((in_FPUControlWord & 1) != 0) {
    uVar1 = 0x10;
  }
  if ((in_FPUControlWord & 4) != 0) {
    uVar1 = uVar1 | 8;
  }
  if ((in_FPUControlWord & 8) != 0) {
    uVar1 = uVar1 | 4;
  }
  if ((in_FPUControlWord & 0x10) != 0) {
    uVar1 = uVar1 | 2;
  }
  if ((in_FPUControlWord & 0x20) != 0) {
    uVar1 = uVar1 | 1;
  }
  if ((in_FPUControlWord & 2) != 0) {
    uVar1 = uVar1 | 0x80000;
  }
  uVar3 = in_FPUControlWord & 0xc00;
  if ((in_FPUControlWord & 0xc00) != 0) {
    if (uVar3 == 0x400) {
      uVar1 = uVar1 | 0x100;
    }
    else if (uVar3 == 0x800) {
      uVar1 = uVar1 | 0x200;
    }
    else if (uVar3 == 0xc00) {
      uVar1 = uVar1 | 0x300;
    }
  }
  if ((in_FPUControlWord & 0x300) == 0) {
    uVar1 = uVar1 | 0x20000;
  }
  else if ((in_FPUControlWord & 0x300) == 0x200) {
    uVar1 = uVar1 | 0x10000;
  }
  if ((in_FPUControlWord & 0x1000) != 0) {
    uVar1 = uVar1 | 0x40000;
  }
  uVar4 = ~param_2 & uVar1 | param_1 & param_2;
  if (uVar4 != uVar1) {
    uVar1 = __hw_cw(uVar4);
    uVar4 = 0;
    if ((uVar1 & 1) != 0) {
      uVar4 = 0x10;
    }
    if ((uVar1 & 4) != 0) {
      uVar4 = uVar4 | 8;
    }
    if ((uVar1 & 8) != 0) {
      uVar4 = uVar4 | 4;
    }
    if ((uVar1 & 0x10) != 0) {
      uVar4 = uVar4 | 2;
    }
    if ((uVar1 & 0x20) != 0) {
      uVar4 = uVar4 | 1;
    }
    if ((uVar1 & 2) != 0) {
      uVar4 = uVar4 | 0x80000;
    }
    uVar2 = uVar1 & 0xc00;
    if (uVar2 != 0) {
      if (uVar2 == 0x400) {
        uVar4 = uVar4 | 0x100;
      }
      else if (uVar2 == 0x800) {
        uVar4 = uVar4 | 0x200;
      }
      else if (uVar2 == 0xc00) {
        uVar4 = uVar4 | 0x300;
      }
    }
    if ((uVar1 & 0x300) == 0) {
      uVar4 = uVar4 | 0x20000;
    }
    else if ((uVar1 & 0x300) == 0x200) {
      uVar4 = uVar4 | 0x10000;
    }
    if ((uVar1 & 0x1000) != 0) {
      uVar4 = uVar4 | 0x40000;
    }
  }
  uVar1 = uVar4;
  if (0 < _DAT_10045898) {
    uVar2 = 0;
    if ((char)in_MXCSR < '\0') {
      uVar2 = 0x10;
    }
    if ((in_MXCSR & 0x200) != 0) {
      uVar2 = uVar2 | 8;
    }
    if ((in_MXCSR & 0x400) != 0) {
      uVar2 = uVar2 | 4;
    }
    if ((in_MXCSR & 0x800) != 0) {
      uVar2 = uVar2 | 2;
    }
    if ((in_MXCSR & 0x1000) != 0) {
      uVar2 = uVar2 | 1;
    }
    if ((in_MXCSR & 0x100) != 0) {
      uVar2 = uVar2 | 0x80000;
    }
    uVar1 = in_MXCSR & 0x6000;
    if (uVar1 != 0) {
      if (uVar1 == 0x2000) {
        uVar2 = uVar2 | 0x100;
      }
      else if (uVar1 == 0x4000) {
        uVar2 = uVar2 | 0x200;
      }
      else if (uVar1 == 0x6000) {
        uVar2 = uVar2 | 0x300;
      }
    }
    uVar1 = in_MXCSR & 0x8040;
    if (uVar1 == 0x40) {
      uVar2 = uVar2 | 0x2000000;
    }
    else if (uVar1 == 0x8000) {
      uVar2 = uVar2 | 0x3000000;
    }
    else if (uVar1 == 0x8040) {
      uVar2 = uVar2 | 0x1000000;
    }
    uVar1 = ~(param_2 & 0x308031f) & uVar2 | param_2 & 0x308031f & param_1;
    if (uVar1 != uVar2) {
      uVar1 = ___hw_cw_sse2(uVar1);
      ___set_fpsr_sse2(uVar1);
      uVar2 = 0;
      if ((char)in_MXCSR < '\0') {
        uVar2 = 0x10;
      }
      if ((in_MXCSR & 0x200) != 0) {
        uVar2 = uVar2 | 8;
      }
      if ((in_MXCSR & 0x400) != 0) {
        uVar2 = uVar2 | 4;
      }
      if ((in_MXCSR & 0x800) != 0) {
        uVar2 = uVar2 | 2;
      }
      if ((in_MXCSR & 0x1000) != 0) {
        uVar2 = uVar2 | 1;
      }
      if ((in_MXCSR & 0x100) != 0) {
        uVar2 = uVar2 | 0x80000;
      }
      uVar1 = in_MXCSR & 0x6000;
      if (uVar1 != 0) {
        if (uVar1 == 0x2000) {
          uVar2 = uVar2 | 0x100;
        }
        else if (uVar1 == 0x4000) {
          uVar2 = uVar2 | 0x200;
        }
        else if (uVar1 == 0x6000) {
          uVar2 = uVar2 | 0x300;
        }
      }
      uVar1 = in_MXCSR & 0x8040;
      if (uVar1 == 0x40) {
        uVar2 = uVar2 | 0x2000000;
      }
      else if (uVar1 == 0x8000) {
        uVar2 = uVar2 | 0x3000000;
      }
      else if (uVar1 == 0x8040) {
        uVar2 = uVar2 | 0x1000000;
      }
    }
    uVar1 = uVar2 | uVar4;
    if (((uVar2 ^ uVar4) & 0x8031f) != 0) {
      uVar1 = uVar1 | 0x80000000;
    }
  }
  return uVar1;
}



// Library Function - Single Match
//  __hw_cw
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2019 Release

uint __cdecl __hw_cw(uint param_1)

{
  uint uVar1;
  uint uVar2;
  
  uVar1 = (uint)((param_1 & 0x10) != 0);
  if ((param_1 & 8) != 0) {
    uVar1 = uVar1 | 4;
  }
  if ((param_1 & 4) != 0) {
    uVar1 = uVar1 | 8;
  }
  if ((param_1 & 2) != 0) {
    uVar1 = uVar1 | 0x10;
  }
  if ((param_1 & 1) != 0) {
    uVar1 = uVar1 | 0x20;
  }
  if ((param_1 & 0x80000) != 0) {
    uVar1 = uVar1 | 2;
  }
  uVar2 = param_1 & 0x300;
  if (uVar2 != 0) {
    if (uVar2 == 0x100) {
      uVar1 = uVar1 | 0x400;
    }
    else if (uVar2 == 0x200) {
      uVar1 = uVar1 | 0x800;
    }
    else if (uVar2 == 0x300) {
      uVar1 = uVar1 | 0xc00;
    }
  }
  if ((param_1 & 0x30000) == 0) {
    uVar1 = uVar1 | 0x300;
  }
  else if ((param_1 & 0x30000) == 0x10000) {
    uVar1 = uVar1 | 0x200;
  }
  if ((param_1 & 0x40000) != 0) {
    uVar1 = uVar1 | 0x1000;
  }
  return uVar1;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

uint __cdecl FUN_1001755d(uint param_1,LPWSTR param_2,uint param_3)

{
  ulong *puVar1;
  int *piVar2;
  uint uVar3;
  int iVar4;
  
  if (param_1 == 0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
    return 0xffffffff;
  }
  if (((int)param_1 < 0) || (DAT_100476e4 <= param_1)) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
  }
  else {
    iVar4 = (param_1 & 0x1f) * 0x40;
    if ((*(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + iVar4) & 1) != 0) {
      if (param_3 < 0x80000000) {
        FUN_10016204(param_1);
        if ((*(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + iVar4) & 1) == 0) {
          piVar2 = __errno();
          *piVar2 = 9;
          puVar1 = ___doserrno();
          *puVar1 = 0;
          uVar3 = 0xffffffff;
        }
        else {
          uVar3 = FUN_10017671(param_1,param_2,param_3);
        }
        FUN_10017649();
        return uVar3;
      }
      puVar1 = ___doserrno();
      *puVar1 = 0;
      piVar2 = __errno();
      *piVar2 = 0x16;
      goto LAB_10017663;
    }
    puVar1 = ___doserrno();
    *puVar1 = 0;
  }
  piVar2 = __errno();
  *piVar2 = 9;
LAB_10017663:
  FUN_100090a2();
  return 0xffffffff;
}



void FUN_10017649(void)

{
  uint unaff_ESI;
  
  FUN_1001637f(unaff_ESI);
  return;
}



// WARNING: Could not reconcile some variable overlaps

uint __cdecl FUN_10017671(uint param_1,LPWSTR param_2,uint param_3)

{
  byte *pbVar1;
  char cVar2;
  undefined uVar3;
  char cVar4;
  byte bVar5;
  WCHAR WVar6;
  ulong *puVar7;
  int *piVar8;
  undefined3 extraout_var;
  BOOL BVar9;
  ulong uVar10;
  DWORD DVar11;
  int iVar12;
  int iVar13;
  uint uVar14;
  uint nNumberOfBytesToRead;
  LPWSTR pWVar15;
  LPWSTR pWVar16;
  uint uVar17;
  LPWSTR pWVar18;
  WCHAR *pWVar19;
  bool bVar20;
  undefined8 uVar21;
  WCHAR *local_24;
  LPWSTR local_20;
  uint local_1c;
  uint local_18;
  LPWSTR local_14;
  int local_10;
  undefined2 local_c;
  char local_5;
  
  uVar17 = 0;
  local_1c = 0xfffffffe;
  local_24 = (WCHAR *)0x0;
  if (param_1 == 0xfffffffe) {
    puVar7 = ___doserrno();
    *puVar7 = 0;
    piVar8 = __errno();
    *piVar8 = 9;
    return 0xffffffff;
  }
  if ((-1 < (int)param_1) && (param_1 < DAT_100476e4)) {
    local_10 = (int)param_1 >> 5;
    iVar13 = (param_1 & 0x1f) * 0x40;
    bVar5 = *(byte *)((&DAT_100458e0)[local_10] + 4 + iVar13);
    if ((bVar5 & 1) != 0) {
      if (param_3 < 0x80000000) {
        if ((param_3 == 0) || ((bVar5 & 2) != 0)) {
          return 0;
        }
        if (param_2 != (LPWSTR)0x0) {
          cVar4 = (char)(*(char *)((&DAT_100458e0)[local_10] + 0x24 + iVar13) * '\x02') >> 1;
          if (cVar4 == '\x01') {
            if ((~param_3 & 1) == 0) goto LAB_10017717;
            uVar14 = param_3 >> 1;
            if (uVar14 < 4) {
              uVar14 = 4;
            }
            local_14 = (LPWSTR)FUN_100017b0(uVar14);
            if (local_14 == (LPWSTR)0x0) {
              piVar8 = __errno();
              *piVar8 = 0xc;
              puVar7 = ___doserrno();
              *puVar7 = 8;
              return 0xffffffff;
            }
            uVar21 = FUN_10011cbe(param_1,0,0,1);
            iVar12 = (&DAT_100458e0)[local_10];
            *(int *)(iVar12 + 0x28 + iVar13) = (int)uVar21;
            *(int *)(iVar12 + 0x2c + iVar13) = (int)((ulonglong)uVar21 >> 0x20);
          }
          else {
            uVar14 = param_3;
            if (cVar4 == '\x02') {
              if ((~param_3 & 1) == 0) goto LAB_10017717;
              uVar14 = param_3 & 0xfffffffe;
            }
            local_14 = param_2;
          }
          nNumberOfBytesToRead = uVar14;
          local_20 = local_14;
          if ((((*(byte *)((&DAT_100458e0)[local_10] + 4 + iVar13) & 0x48) != 0) &&
              (cVar2 = *(char *)((&DAT_100458e0)[local_10] + 5 + iVar13), cVar2 != '\n')) &&
             (uVar14 != 0)) {
            *(char *)local_14 = cVar2;
            local_20 = (LPWSTR)((int)local_14 + 1);
            uVar17 = 1;
            nNumberOfBytesToRead = uVar14 - 1;
            *(undefined *)((&DAT_100458e0)[local_10] + 5 + iVar13) = 10;
            if (((cVar4 != '\0') &&
                (cVar2 = *(char *)((&DAT_100458e0)[local_10] + 0x25 + iVar13), cVar2 != '\n')) &&
               (nNumberOfBytesToRead != 0)) {
              *(char *)local_20 = cVar2;
              local_20 = local_14 + 1;
              nNumberOfBytesToRead = uVar14 - 2;
              uVar17 = 2;
              *(undefined *)((&DAT_100458e0)[local_10] + 0x25 + iVar13) = 10;
              if (((cVar4 == '\x01') &&
                  (cVar2 = *(char *)((&DAT_100458e0)[local_10] + 0x26 + iVar13), cVar2 != '\n')) &&
                 (nNumberOfBytesToRead != 0)) {
                *(char *)local_20 = cVar2;
                local_20 = (LPWSTR)((int)local_14 + 3);
                nNumberOfBytesToRead = uVar14 - 3;
                uVar17 = 3;
                *(undefined *)((&DAT_100458e0)[local_10] + 0x26 + iVar13) = 10;
              }
            }
          }
          bVar5 = FUN_1001121a(param_1);
          if ((((CONCAT31(extraout_var,bVar5) == 0) ||
               ((*(byte *)((&DAT_100458e0)[local_10] + 4 + iVar13) & 0x80) == 0)) ||
              (local_24 = (WCHAR *)GetConsoleMode(*(HANDLE *)((&DAT_100458e0)[local_10] + iVar13),
                                                  (LPDWORD)&local_24), local_24 == (WCHAR *)0x0)) ||
             (cVar4 != '\x02')) {
            BVar9 = ReadFile(*(HANDLE *)((&DAT_100458e0)[local_10] + iVar13),local_20,
                             nNumberOfBytesToRead,&local_18,(LPOVERLAPPED)0x0);
            if (((BVar9 != 0) && (-1 < (int)local_18)) && (local_18 <= nNumberOfBytesToRead))
            goto LAB_100178fe;
            uVar10 = GetLastError();
            if (uVar10 != 5) {
              if (uVar10 == 0x6d) {
                uVar14 = 0;
                goto LAB_10017b73;
              }
              goto LAB_100178a9;
            }
            piVar8 = __errno();
            *piVar8 = 9;
            puVar7 = ___doserrno();
            *puVar7 = 5;
          }
          else {
            BVar9 = ReadConsoleW(*(HANDLE *)((&DAT_100458e0)[local_10] + iVar13),local_20,
                                 nNumberOfBytesToRead >> 1,&local_18,
                                 (PCONSOLE_READCONSOLE_CONTROL)0x0);
            if (BVar9 != 0) {
              local_18 = local_18 * 2;
LAB_100178fe:
              uVar17 = uVar17 + local_18;
              iVar12 = (&DAT_100458e0)[local_10];
              bVar5 = *(byte *)(iVar12 + 4 + iVar13);
              uVar14 = local_1c;
              if (-1 < (char)bVar5) goto LAB_10017b73;
              if (cVar4 == '\x02') {
                if (local_24 == (WCHAR *)0x0) {
                  if ((local_18 == 0) || (*local_14 != L'\n')) {
                    bVar5 = bVar5 & 0xfb;
                  }
                  else {
                    bVar5 = bVar5 | 4;
                  }
                  *(byte *)(iVar12 + 4 + iVar13) = bVar5;
                  local_24 = (WCHAR *)((int)local_14 + uVar17);
                  iVar12 = local_10;
                  pWVar15 = local_14;
                  pWVar19 = local_14;
                  if (local_14 < local_24) {
                    do {
                      WVar6 = *pWVar19;
                      if (WVar6 == L'\x1a') {
                        bVar5 = *(byte *)((&DAT_100458e0)[iVar12] + 4 + iVar13);
                        if ((bVar5 & 0x40) == 0) {
                          *(byte *)((&DAT_100458e0)[iVar12] + 4 + iVar13) = bVar5 | 2;
                        }
                        else {
                          *pWVar15 = *pWVar19;
                          pWVar15 = pWVar15 + 1;
                        }
                        break;
                      }
                      if (WVar6 == L'\r') {
                        if (pWVar19 < local_24 + -1) {
                          if (pWVar19[1] != L'\n') {
                            *pWVar15 = L'\r';
                            iVar12 = local_10;
                            goto LAB_10017c88;
                          }
                          pWVar19 = pWVar19 + 2;
                          *pWVar15 = L'\n';
LAB_10017d6a:
                          pWVar15 = pWVar15 + 1;
                          iVar12 = local_10;
                        }
                        else {
                          pWVar19 = pWVar19 + 1;
                          BVar9 = ReadFile(*(HANDLE *)((&DAT_100458e0)[iVar12] + iVar13),&local_c,2,
                                           &local_18,(LPOVERLAPPED)0x0);
                          if (((BVar9 == 0) && (DVar11 = GetLastError(), DVar11 != 0)) ||
                             (local_18 == 0)) {
                            *pWVar15 = L'\r';
                            pWVar15 = pWVar15 + 1;
                            iVar12 = local_10;
                          }
                          else {
                            iVar12 = local_10;
                            if ((*(byte *)((&DAT_100458e0)[local_10] + 4 + iVar13) & 0x48) == 0) {
                              if ((pWVar15 == local_14) && (local_c == 10)) {
                                *pWVar15 = L'\n';
                                pWVar15 = pWVar15 + 1;
                              }
                              else {
                                FUN_10011cbe(param_1,0xfffffffe,0xffffffff,1);
                                iVar12 = local_10;
                                if (local_c != 10) {
                                  *pWVar15 = L'\r';
                                  goto LAB_10017d6a;
                                }
                              }
                            }
                            else if (local_c == 10) {
                              *pWVar15 = L'\n';
                              pWVar15 = pWVar15 + 1;
                            }
                            else {
                              *pWVar15 = L'\r';
                              pWVar15 = pWVar15 + 1;
                              *(undefined *)((&DAT_100458e0)[local_10] + 5 + iVar13) =
                                   (undefined)local_c;
                              *(undefined *)((&DAT_100458e0)[local_10] + 0x25 + iVar13) =
                                   local_c._1_1_;
                              *(undefined *)((&DAT_100458e0)[local_10] + 0x26 + iVar13) = 10;
                            }
                          }
                        }
                      }
                      else {
                        *pWVar15 = WVar6;
LAB_10017c88:
                        pWVar15 = pWVar15 + 1;
                        pWVar19 = pWVar19 + 1;
                      }
                    } while (pWVar19 < local_24);
                  }
                  uVar17 = (int)pWVar15 - (int)local_14;
                  uVar14 = local_1c;
                }
                else {
                  pWVar15 = local_14;
                  pWVar19 = local_14;
                  while (pWVar15 < local_14 + (int)uVar17 / 2) {
                    WVar6 = *pWVar15;
                    if (WVar6 == L'\x1a') {
                      pbVar1 = (byte *)((&DAT_100458e0)[local_10] + 4 + iVar13);
                      *pbVar1 = *pbVar1 | 2;
                      break;
                    }
                    if (WVar6 == L'\r') {
                      if (pWVar15 < local_14 + (int)uVar17 / 2 + -1) {
                        pWVar15 = pWVar15 + 1;
                        WVar6 = L'\n';
                        if (*pWVar15 != L'\n') {
                          WVar6 = L'\r';
                        }
                        *pWVar19 = WVar6;
                        pWVar19 = pWVar19 + 1;
                      }
                    }
                    else {
                      *pWVar19 = WVar6;
                      pWVar19 = pWVar19 + 1;
                      pWVar15 = pWVar15 + 1;
                    }
                  }
                  uVar17 = (int)pWVar19 - (int)local_14 & 0xfffffffe;
                }
                goto LAB_10017b73;
              }
              if ((local_18 == 0) || (*(char *)local_14 != '\n')) {
                bVar5 = bVar5 & 0xfb;
              }
              else {
                bVar5 = bVar5 | 4;
              }
              *(byte *)(iVar12 + 4 + iVar13) = bVar5;
              local_24 = local_14;
              local_20 = (LPWSTR)((int)local_14 + uVar17);
              iVar12 = local_10;
              pWVar15 = local_14;
              pWVar16 = local_14;
              if (local_14 < local_20) {
                do {
                  cVar2 = *(char *)pWVar16;
                  if (cVar2 == '\x1a') {
                    bVar5 = *(byte *)((&DAT_100458e0)[iVar12] + 4 + iVar13);
                    if ((bVar5 & 0x40) == 0) {
                      *(byte *)((&DAT_100458e0)[iVar12] + 4 + iVar13) = bVar5 | 2;
                    }
                    else {
                      *(undefined *)pWVar15 = *(undefined *)pWVar16;
                      pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                    }
                    break;
                  }
                  if (cVar2 == '\r') {
                    if (pWVar16 < (LPWSTR)((int)local_20 + -1)) {
                      pWVar18 = (LPWSTR)((int)pWVar16 + 1);
                      if (*(char *)pWVar18 == '\n') {
                        pWVar18 = pWVar16 + 1;
                        *(undefined *)pWVar15 = 10;
LAB_10017a30:
                        pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                      }
                      else {
                        *(undefined *)pWVar15 = 0xd;
                        pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                      }
                    }
                    else {
                      pWVar18 = (LPWSTR)((int)pWVar16 + 1);
                      BVar9 = ReadFile(*(HANDLE *)((&DAT_100458e0)[iVar12] + iVar13),&local_5,1,
                                       &local_18,(LPOVERLAPPED)0x0);
                      if (((BVar9 == 0) && (DVar11 = GetLastError(), DVar11 != 0)) ||
                         (local_18 == 0)) {
                        *(undefined *)pWVar15 = 0xd;
                        pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                        iVar12 = local_10;
                      }
                      else {
                        iVar12 = local_10;
                        if ((*(byte *)((&DAT_100458e0)[local_10] + 4 + iVar13) & 0x48) == 0) {
                          if ((pWVar15 == local_14) && (local_5 == '\n')) {
                            *(undefined *)pWVar15 = 10;
                            pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                          }
                          else {
                            FUN_10011cbe(param_1,0xffffffff,0xffffffff,1);
                            iVar12 = local_10;
                            if (local_5 != '\n') {
                              *(undefined *)pWVar15 = 0xd;
                              goto LAB_10017a30;
                            }
                          }
                        }
                        else if (local_5 == '\n') {
                          *(undefined *)pWVar15 = 10;
                          pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                        }
                        else {
                          *(undefined *)pWVar15 = 0xd;
                          pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                          *(char *)((&DAT_100458e0)[local_10] + 5 + iVar13) = local_5;
                        }
                      }
                    }
                  }
                  else {
                    *(char *)pWVar15 = cVar2;
                    pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                    pWVar18 = (LPWSTR)((int)pWVar16 + 1);
                  }
                  pWVar16 = pWVar18;
                } while (pWVar18 < local_20);
              }
              uVar17 = (int)pWVar15 - (int)local_14;
              uVar14 = local_1c;
              if ((cVar4 != '\x01') || (uVar17 == 0)) goto LAB_10017b73;
              bVar5 = *(byte *)(LPWSTR)((int)pWVar15 + -1);
              if ((char)bVar5 < '\0') {
                iVar12 = 1;
                cVar4 = (&DAT_10034480)[bVar5];
                pWVar15 = (LPWSTR)((int)pWVar15 + -1);
                while (((cVar4 == '\0' && (iVar12 < 5)) && (local_14 <= pWVar15))) {
                  pWVar15 = (LPWSTR)((int)pWVar15 + -1);
                  iVar12 = iVar12 + 1;
                  cVar4 = (&DAT_10034480)[*(byte *)pWVar15];
                }
                if ((char)(&DAT_10034480)[*(byte *)pWVar15] == 0) {
                  piVar8 = __errno();
                  *piVar8 = 0x2a;
                  goto LAB_100178b0;
                }
                if ((char)(&DAT_10034480)[*(byte *)pWVar15] + 1 == iVar12) {
                  pWVar15 = (LPWSTR)((int)pWVar15 + iVar12);
                }
                else if ((*(byte *)((&DAT_100458e0)[local_10] + 4 + iVar13) & 0x48) == 0) {
                  FUN_10011cbe(param_1,-iVar12,-iVar12 >> 0x1f,1);
                }
                else {
                  pWVar16 = (LPWSTR)((int)pWVar15 + 1);
                  *(undefined *)((&DAT_100458e0)[local_10] + 5 + iVar13) = *(undefined *)pWVar15;
                  if (1 < iVar12) {
                    uVar3 = *(undefined *)pWVar16;
                    pWVar16 = pWVar15 + 1;
                    *(undefined *)((&DAT_100458e0)[local_10] + 0x25 + iVar13) = uVar3;
                  }
                  if (iVar12 == 3) {
                    uVar3 = *(undefined *)pWVar16;
                    pWVar16 = (LPWSTR)((int)pWVar16 + 1);
                    *(undefined *)((&DAT_100458e0)[local_10] + 0x26 + iVar13) = uVar3;
                  }
                  pWVar15 = (LPWSTR)((int)pWVar16 - iVar12);
                }
              }
              uVar14 = (int)pWVar15 - (int)local_14;
              uVar17 = MultiByteToWideChar(0xfde9,0,(LPCSTR)local_14,uVar14,param_2,param_3 >> 1);
              if (uVar17 != 0) {
                bVar20 = uVar17 != uVar14;
                uVar17 = uVar17 * 2;
                *(uint *)((&DAT_100458e0)[local_10] + 0x30 + iVar13) = (uint)bVar20;
                uVar14 = local_1c;
                goto LAB_10017b73;
              }
            }
            uVar10 = GetLastError();
LAB_100178a9:
            FID_conflict___dosmaperr(uVar10);
          }
LAB_100178b0:
          uVar14 = 0xffffffff;
LAB_10017b73:
          if (local_14 != param_2) {
            FUN_10001730(local_14);
          }
          if (uVar14 != 0xfffffffe) {
            return uVar14;
          }
          return uVar17;
        }
LAB_10017717:
        puVar7 = ___doserrno();
        *puVar7 = 0;
      }
      else {
        puVar7 = ___doserrno();
        *puVar7 = 0;
      }
      piVar8 = __errno();
      *piVar8 = 0x16;
      goto LAB_10017df3;
    }
  }
  puVar7 = ___doserrno();
  *puVar7 = 0;
  piVar8 = __errno();
  *piVar8 = 9;
LAB_10017df3:
  FUN_100090a2();
  return 0xffffffff;
}



// Library Function - Single Match
//  __fclose_nolock
// 
// Library: Visual Studio 2012 Release

int __cdecl __fclose_nolock(FILE *_File)

{
  int *piVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = -1;
  if (_File == (FILE *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_100090a2();
    iVar4 = -1;
  }
  else {
    if ((*(byte *)&_File->_flag & 0x83) != 0) {
      iVar4 = FUN_100160b3(_File);
      __freebuf(_File);
      uVar2 = __fileno(_File);
      iVar3 = FUN_10018005(uVar2);
      if (iVar3 < 0) {
        iVar4 = -1;
      }
      else if (_File->_tmpfname != (char *)0x0) {
        FUN_10001730(_File->_tmpfname);
        _File->_tmpfname = (char *)0x0;
      }
    }
    _File->_flag = 0;
  }
  return iVar4;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

int __cdecl FUN_10017e6e(FILE *param_1)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = -1;
  if (param_1 == (FILE *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_100090a2();
  }
  else if ((*(byte *)&param_1->_flag & 0x40) == 0) {
    __lock_file(param_1);
    iVar2 = __fclose_nolock(param_1);
    FUN_10017edd();
  }
  else {
    param_1->_flag = 0;
  }
  return iVar2;
}



void FUN_10017edd(void)

{
  FILE *unaff_ESI;
  
  __unlock_file(unaff_ESI);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

DWORD __cdecl FUN_10017ee5(uint param_1)

{
  int *piVar1;
  HANDLE hFile;
  BOOL BVar2;
  ulong *puVar3;
  int iVar4;
  DWORD DVar5;
  
  DVar5 = 0;
  if (param_1 == 0xfffffffe) {
    piVar1 = __errno();
    *piVar1 = 9;
  }
  else {
    if ((-1 < (int)param_1) && (param_1 < DAT_100476e4)) {
      iVar4 = (param_1 & 0x1f) * 0x40;
      if ((*(byte *)(iVar4 + 4 + (&DAT_100458e0)[(int)param_1 >> 5]) & 1) != 0) {
        FUN_10016204(param_1);
        if ((*(byte *)(iVar4 + 4 + (&DAT_100458e0)[(int)param_1 >> 5]) & 1) != 0) {
          hFile = (HANDLE)FUN_10016318(param_1);
          BVar2 = FlushFileBuffers(hFile);
          if (BVar2 == 0) {
            DVar5 = GetLastError();
          }
          if (DVar5 == 0) goto LAB_10017f97;
          puVar3 = ___doserrno();
          *puVar3 = DVar5;
        }
        piVar1 = __errno();
        *piVar1 = 9;
        DVar5 = 0xffffffff;
LAB_10017f97:
        FUN_10017fad();
        return DVar5;
      }
    }
    piVar1 = __errno();
    *piVar1 = 9;
    FUN_100090a2();
  }
  return 0xffffffff;
}



void FUN_10017fad(void)

{
  uint unaff_EDI;
  
  FUN_1001637f(unaff_EDI);
  return;
}



void FUN_10017fce(void)

{
  if ((DAT_10034580 != (HANDLE)0xffffffff) && (DAT_10034580 != (HANDLE)0xfffffffe)) {
    CloseHandle(DAT_10034580);
  }
  return;
}



// Library Function - Single Match
//  ___dcrt_lowio_initialize_console_output
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release

void ___dcrt_lowio_initialize_console_output(void)

{
  DAT_10034580 = CreateFileW(L"CONOUT$",0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_10018005(uint param_1)

{
  ulong *puVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  
  if (param_1 == 0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    if (((int)param_1 < 0) || (DAT_100476e4 <= param_1)) {
      puVar1 = ___doserrno();
      *puVar1 = 0;
    }
    else {
      iVar4 = (param_1 & 0x1f) * 0x40;
      if ((*(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + iVar4) & 1) != 0) {
        FUN_10016204(param_1);
        if ((*(byte *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + iVar4) & 1) == 0) {
          piVar2 = __errno();
          *piVar2 = 9;
          uVar3 = 0xffffffff;
        }
        else {
          uVar3 = FUN_100180e0(param_1);
        }
        FUN_100180b8();
        return uVar3;
      }
      puVar1 = ___doserrno();
      *puVar1 = 0;
    }
    piVar2 = __errno();
    *piVar2 = 9;
    FUN_100090a2();
  }
  return 0xffffffff;
}



void FUN_100180b8(void)

{
  uint unaff_ESI;
  
  FUN_1001637f(unaff_ESI);
  return;
}



undefined4 __cdecl FUN_100180e0(uint param_1)

{
  int iVar1;
  int iVar2;
  HANDLE hObject;
  BOOL BVar3;
  DWORD DVar4;
  undefined4 uVar5;
  
  iVar1 = FUN_10016318(param_1);
  if (iVar1 != -1) {
    if (((param_1 == 1) && ((*(byte *)(DAT_100458e0 + 0x84) & 1) != 0)) ||
       ((param_1 == 2 && ((*(byte *)(DAT_100458e0 + 0x44) & 1) != 0)))) {
      iVar1 = FUN_10016318(2);
      iVar2 = FUN_10016318(1);
      if (iVar2 == iVar1) goto LAB_10018144;
    }
    hObject = (HANDLE)FUN_10016318(param_1);
    BVar3 = CloseHandle(hObject);
    if (BVar3 == 0) {
      DVar4 = GetLastError();
      goto LAB_10018146;
    }
  }
LAB_10018144:
  DVar4 = 0;
LAB_10018146:
  FUN_10016292(param_1);
  *(undefined *)((&DAT_100458e0)[(int)param_1 >> 5] + 4 + (param_1 & 0x1f) * 0x40) = 0;
  if (DVar4 == 0) {
    uVar5 = 0;
  }
  else {
    FID_conflict___dosmaperr(DVar4);
    uVar5 = 0xffffffff;
  }
  return uVar5;
}



// Library Function - Single Match
//  __freebuf
// 
// Library: Visual Studio 2012 Release

void __cdecl __freebuf(FILE *_File)

{
  if (((*(byte *)&_File->_flag & 0x83) != 0) && ((*(byte *)&_File->_flag & 8) != 0)) {
    FUN_10001730(_File->_base);
    _File->_flag = _File->_flag & 0xfffffbf7;
    _File->_ptr = (char *)0x0;
    _File->_base = (char *)0x0;
    _File->_cnt = 0;
  }
  return;
}



BOOL IsProcessorFeaturePresent(DWORD ProcessorFeature)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x100181aa. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsProcessorFeaturePresent(ProcessorFeature);
  return BVar1;
}



void RtlUnwind(PVOID TargetFrame,PVOID TargetIp,PEXCEPTION_RECORD ExceptionRecord,PVOID ReturnValue)

{
                    // WARNING: Could not recover jumptable at 0x100181b0. Too many branches
                    // WARNING: Treating indirect jump as call
  RtlUnwind(TargetFrame,TargetIp,ExceptionRecord,ReturnValue);
  return;
}



void FUN_100181c0(void)

{
  FUN_10001910((undefined4 *)&DAT_100348e0);
  return;
}



void FUN_100181d0(void)

{
  FUN_10003b10(&DAT_10034a70);
  return;
}



void FUN_100181e0(void)

{
  FUN_10003b10(&DAT_10034a18);
  return;
}



void FUN_100181f0(void)

{
  FUN_10003b10(&DAT_100349c0);
  return;
}



void FUN_10018200(void)

{
  FUN_10003b00(&DAT_10034ac8);
  return;
}



void FUN_10018210(void)

{
  FUN_10003b00(&DAT_10034978);
  return;
}



void FUN_10018220(void)

{
  FUN_10003b00(&DAT_1003499c);
  return;
}



void FUN_10018230(void)

{
  FUN_10003b10(&DAT_10034af0);
  return;
}



void FUN_10018240(void)

{
  PTR_vftable_100331b8 = (undefined *)ConVar::vftable;
  PTR_vftable_100331d0 = (undefined *)ConVar::vftable;
  if (DAT_100331dc != 0) {
    FUN_10001730(DAT_100331dc);
    DAT_100331dc = 0;
  }
  FUN_10003aa0((int *)&DAT_100331fc);
  PTR_vftable_100331b8 = (undefined *)ConCommandBase::vftable;
  return;
}


