#include "tacint_mapkit.exe.h"



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00401220(void)

{
  uint uVar1;
  float10 fVar2;
  double dVar3;
  undefined4 uVar4;
  
  uVar4 = 0;
  DAT_004475c4 = (char *)FUN_00403c30(2);
  FID_conflict__memcpy(DAT_004475c4,PTR_DAT_004475c0,DAT_004475c8);
  uVar1 = FUN_00421bb0(&PTR_vftable_004475a0,DAT_004475c4);
  if ((char)uVar1 == '\0') {
    fVar2 = FUN_0041db20(DAT_004475c4);
    dVar3 = (double)fVar2;
    DAT_004475cc = (float)fVar2;
    if (((uint)DAT_004475cc & 0x7f800000) == 0x7f800000) {
      Warning("ConVar(%s) defined with infinite float value (%s)\n",&DAT_0043b3d2,DAT_004475c4,dVar3
              ,uVar4);
      DAT_004475cc = 3.402823e+38;
    }
    _DAT_004475d0 = (int)dVar3;
  }
  _DAT_004475b0 = PTR_DAT_00447598;
  DAT_004475a8 = 0;
  _DAT_004475ac = &DAT_0043b3d2;
  _DAT_004475b4 = 0;
  _DAT_004475a4 = DAT_00456f50;
  DAT_00456f50 = &PTR_vftable_004475a0;
  if (DAT_00456f54 != 0) {
    (**(code **)(PTR_vftable_004475a0 + 0x2c))();
  }
  PTR_vftable_004475a0 = (undefined *)CEmptyConVar::vftable;
  PTR_vftable_004475b8 = (undefined *)CEmptyConVar::vftable;
  FUN_00427063(FUN_0043a930);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00401340(void)

{
  FUN_00422320(&DAT_00457a90,0x7f,"\"",1,(int)&DAT_00447658);
  _DAT_00457a90 = CUtlNoEscConversion::vftable;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00401370(void)

{
  byte **ppbVar1;
  byte *pbVar2;
  undefined **ppuVar3;
  
  FUN_00422320(&DAT_00457070,0x5c,"\"",0xb,(int)&DAT_00447600);
  _DAT_00457070 = CUtlCStringConversion::vftable;
  FUN_00427870((uint *)&DAT_00457988,0,0x100);
  ppuVar3 = &PTR_DAT_00447604;
  do {
    pbVar2 = *ppuVar3;
    ppbVar1 = ppuVar3 + -1;
    ppuVar3 = ppuVar3 + 2;
    (&DAT_00457988)[*pbVar2] = *(undefined *)ppbVar1;
  } while ((int)ppuVar3 < 0x44765c);
  return;
}



void FUN_004013d0(void)

{
  FUN_00427063(FUN_0043a980);
  return;
}



int __fastcall FUN_004016ee(undefined4 param_1,uint param_2)

{
  int iVar1;
  int in_EAX;
  
  if (param_2 == 0) {
    return in_EAX;
  }
  iVar1 = 0x1f;
  if (param_2 != 0) {
    for (; param_2 >> iVar1 == 0; iVar1 = iVar1 + -1) {
    }
  }
  return 0x20 - iVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 * __cdecl FUN_004017b0(undefined4 *param_1,byte *param_2)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = param_1;
  param_1 = (undefined4 *)((uint)param_1 & 0xffffff);
  *puVar1 = CFmtStrN<256,0>::vftable;
  *(undefined *)(puVar1 + 1) = 0;
  iVar2 = FUN_0041e240((char *)((int)puVar1 + 5),0xff,param_2,(int **)&stack0x0000000c,
                       (char *)((int)&param_1 + 3));
  *(undefined *)(puVar1 + 0x41) = 0;
  if (((param_1._3_1_ != '\0') && (*(char *)(puVar1 + 1) == '\0')) && (_DAT_00449eec < 5)) {
    Warning("FmtStrVSNPrintf truncated to %d without QUIET_TRUNCATION specified!\n",0x100);
    _DAT_00449eec = _DAT_00449eec + 1;
  }
  puVar1[0x42] = iVar2;
  return puVar1;
}



undefined * __fastcall FUN_00401830(undefined *param_1)

{
  *param_1 = 1;
  *(undefined4 *)(param_1 + 4) = 0;
  *(undefined4 *)(param_1 + 8) = 0;
  return param_1;
}



undefined4 * __fastcall FUN_00401850(undefined4 *param_1)

{
  *param_1 = 0;
  *(undefined2 *)(param_1 + 1) = 0x100;
  *(undefined2 *)((int)param_1 + 7) = 0;
  return param_1;
}



uint __cdecl FUN_00401870(char *param_1,uint param_2)

{
  int *piVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  char *pcVar5;
  HMODULE hModule;
  uint uVar6;
  bool bVar7;
  char local_108;
  byte local_107 [259];
  
  bVar7 = DAT_00449ee8 != '\0';
  *param_1 = '\0';
  if (bVar7) {
    piVar1 = (int *)CommandLine();
    piVar2 = (int *)CommandLine();
    iVar4 = *piVar2;
    uVar3 = (**(code **)(*piVar1 + 0x24))("-game",0);
    iVar4 = (**(code **)(iVar4 + 0x24))("-vproject",uVar3);
    if (iVar4 == 0) {
      pcVar5 = FUN_0042618f("VProject");
      if (pcVar5 == (char *)0x0) goto LAB_004018ca;
    }
    iVar4 = FUN_0041dfc0(param_1,param_2,(byte *)"%s%c..%cbin");
    return CONCAT31((int3)((uint)iVar4 >> 8),1);
  }
  pcVar5 = param_1;
  uVar6 = param_2;
  hModule = GetModuleHandleA((LPCSTR)0x0);
  pcVar5 = (char *)GetModuleFileNameA(hModule,pcVar5,uVar6);
  if (pcVar5 == (char *)0x0) {
LAB_004018ca:
    return (uint)pcVar5 & 0xffffff00;
  }
  FUN_0041d9d0(param_1);
  FUN_0041d790(param_1,'\\');
  FUN_0041d800(param_1,4,&local_108,0x104);
  if (local_108 == '\\') {
    uVar6 = FUN_0041e3a0(local_107,&DAT_0043b420);
    if (uVar6 == 0) goto LAB_00401977;
  }
  FUN_0041e120(param_1,"\\",param_2,0xffffffff);
  FUN_0041e120(param_1,"bin",param_2,0xffffffff);
  uVar6 = FUN_0041d790(param_1,'\\');
LAB_00401977:
  return CONCAT31((int3)(uVar6 >> 8),1);
}



undefined4 __cdecl FUN_00401980(char *param_1,uint param_2,undefined *param_3)

{
  undefined4 uVar1;
  char local_108 [260];
  
  *param_3 = 0;
  uVar1 = FUN_00401870(local_108,0x104);
  if ((char)uVar1 == '\0') {
    uVar1 = FUN_00401c70('\0',3,(byte *)"FileSystem_GetExecutableDir failed.");
    return uVar1;
  }
  FUN_0041dfc0(param_1,param_2,(byte *)"%s%cfilesystem_stdio.dll");
  return 0;
}



void __cdecl FUN_004019e0(int param_1)

{
  char cVar1;
  
  cVar1 = (**(code **)(**(int **)(param_1 + 8) + 0x24))();
  if (cVar1 != '\0') {
    FUN_00401c70('\0',3,(byte *)"Should not be using filesystem_steam anymore!");
    return;
  }
  FUN_00401a20(*(int **)(param_1 + 8));
  return;
}



undefined4 __cdecl FUN_00401a20(int *param_1)

{
  undefined4 uVar1;
  char local_108 [260];
  
  (**(code **)(*param_1 + 0x38))("EXECUTABLE_PATH");
  uVar1 = FUN_00401870(local_108,0x104);
  if ((char)uVar1 == '\0') {
    uVar1 = FUN_00401c70('\0',3,(byte *)"FileSystem_GetExecutableDir failed.");
    return uVar1;
  }
  (**(code **)(*param_1 + 0x2c))(local_108,"EXECUTABLE_PATH",1);
  uVar1 = FUN_00401870(local_108,0x104);
  if ((char)uVar1 != '\0') {
    FUN_0041d9d0(local_108);
    (**(code **)(*param_1 + 0x2c))(local_108,"BASE_PATH",1);
    return 0;
  }
  uVar1 = FUN_00401c70('\0',3,(byte *)"FileSystem_GetBaseDir failed.");
  return uVar1;
}



void __cdecl FUN_00401ae0(undefined4 param_1)

{
  DAT_00447000 = param_1;
  return;
}



undefined4 __cdecl FUN_00401af0(int param_1)

{
  byte local_128 [292];
  
  FUN_0041e1d0((char *)(param_1 + 9),(int)"tacint",0x200);
  FUN_0041dfc0((char *)local_128,0x124,(byte *)"%s=%s");
  FUN_0042620f(local_128);
  return 0;
}



void __thiscall FUN_00401b50(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint uVar5;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar3 = *(uint *)((int)this + 4);
  uVar5 = param_1 + uVar3;
  if (iVar1 == 0) {
    if (uVar3 == 0) {
      uVar3 = 0x20;
      uVar2 = uVar5;
      if ((int)uVar5 < 0x21) goto LAB_00401bb3;
    }
    else {
      if ((int)uVar5 <= (int)uVar3) goto LAB_00401bb3;
      do {
        uVar3 = uVar3 * 2;
        uVar2 = uVar3;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
  else {
    uVar2 = ((int)(uVar5 - 1) / iVar1 + 1) * iVar1;
  }
  uVar3 = uVar2;
  if ((int)uVar3 < (int)uVar5) {
    if ((uVar3 == 0) && (0x7fffffff < uVar5)) {
      uVar3 = 0xffffffff;
    }
    else {
      do {
        uVar3 = (int)(uVar3 + uVar5) / 2;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
LAB_00401bb3:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar3;
  if (*this == 0) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar3);
    *(undefined4 *)this = uVar4;
    return;
  }
  uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this);
  *(undefined4 *)this = uVar4;
  return;
}



void __fastcall FUN_00401be0(int param_1)

{
  *(undefined *)(param_1 + 4) = 0;
  return;
}



void FUN_00401bf0(void)

{
  char local_114 [260];
  char *local_10;
  char *local_c;
  undefined4 local_8;
  
  FUN_00401870(local_114,0x104);
  FUN_0041d620(local_114,0x104,'\\');
  FUN_0041e120(local_114,"vconfig.exe",0x104,0xffffffff);
  local_10 = local_114;
  local_c = "-allowdebug";
  local_8 = 0;
  __spawnv(1,local_114,&local_10);
  return;
}



undefined4 __cdecl FUN_00401c70(char param_1,undefined4 param_2,byte *param_3)

{
  int *piVar1;
  int iVar2;
  int *piVar3;
  undefined4 uVar4;
  
  FUN_0041e200(&DAT_00449de8,0x100,param_3,(int **)&stack0x00000010);
  Warning(&DAT_0043b450,&DAT_00449de8);
  if ((param_1 != '\0') && (DAT_00447000 == 1)) {
    piVar1 = (int *)CommandLine();
    iVar2 = (**(code **)(*piVar1 + 0x2c))("-NoVConfig");
    if (iVar2 == 0) {
      piVar1 = (int *)CommandLine();
      piVar3 = (int *)CommandLine();
      iVar2 = *piVar3;
      uVar4 = (**(code **)(*piVar1 + 0x24))("-game",0);
      iVar2 = (**(code **)(iVar2 + 0x24))("-vproject",uVar4);
      if (iVar2 == 0) {
        FUN_00401bf0();
      }
    }
  }
  if ((DAT_00447000 == 0) || (DAT_00447000 == 1)) {
    Error(&DAT_0043b450,&DAT_00449de8);
  }
  return param_2;
}



undefined * __fastcall FUN_00401d20(undefined *param_1)

{
  *param_1 = 0;
  *(code **)(param_1 + 0x108) = FUN_00401eb0;
  *(undefined4 *)(param_1 + 0x10c) = 0;
  *(undefined4 *)(param_1 + 0x110) = 0;
  *(undefined4 *)(param_1 + 0x114) = 0;
  *(undefined4 *)(param_1 + 0x118) = 0xffffffff;
  *(undefined4 *)(param_1 + 0x11c) = 0;
  *(undefined4 *)(param_1 + 0x120) = 0xffffffff;
  *(undefined4 *)(param_1 + 0x124) = 0xffffffff;
  *(undefined4 *)(param_1 + 0x128) = *(undefined4 *)(param_1 + 0x10c);
  FUN_004214b0((undefined4 *)(param_1 + 300));
  FUN_004214b0((undefined4 *)(param_1 + 0x13c));
  FUN_004214d0(param_1 + 300,"reslists");
  return param_1;
}



void __fastcall FUN_00401db0(int param_1)

{
  FUN_004035c0(param_1);
  *(undefined4 *)(param_1 + 0x18) = 0xffffffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined4 *)(param_1 + 0x1c) = 0xffffffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  return;
}



void __fastcall FUN_00401e20(int param_1)

{
  *(undefined4 *)(param_1 + 0x148) = 0;
  if (-1 < *(int *)(param_1 + 0x144)) {
    if (*(int *)(param_1 + 0x13c) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 0x13c));
      *(undefined4 *)(param_1 + 0x13c) = 0;
    }
    *(undefined4 *)(param_1 + 0x140) = 0;
  }
  *(undefined4 *)(param_1 + 0x138) = 0;
  if (-1 < *(int *)(param_1 + 0x134)) {
    if (*(int *)(param_1 + 300) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 300));
      *(undefined4 *)(param_1 + 300) = 0;
    }
    *(undefined4 *)(param_1 + 0x130) = 0;
  }
  FUN_00401db0(param_1 + 0x108);
  return;
}



bool __cdecl FUN_00401eb0(undefined4 *param_1,undefined4 *param_2)

{
  byte *pbVar1;
  byte *pbVar2;
  uint uVar3;
  
  pbVar1 = FUN_00421550(param_2);
  pbVar2 = FUN_00421550(param_1);
  if (pbVar2 == (byte *)0x0) {
    return false;
  }
  if (pbVar1 == (byte *)0x0) {
    return true;
  }
  uVar3 = FUN_0041e3a0(pbVar2,pbVar1);
  return (int)uVar3 < 0;
}



uint __fastcall FUN_00401ef0(void *param_1)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  code *pcVar4;
  uint uVar5;
  float10 fVar6;
  float10 fVar7;
  char *pcVar8;
  undefined4 uVar9;
  char *pcVar10;
  char *local_84;
  char *local_80;
  char *local_7c;
  char *local_78;
  char *local_74;
  char *local_70;
  char *local_6c;
  char *local_68;
  char *local_64;
  char *local_60;
  char *local_5c;
  char *local_58;
  char *local_54;
  char *local_50;
  char *local_4c;
  char *local_48;
  char *local_44;
  char *local_40;
  char *local_3c;
  char *local_38;
  char *local_34;
  char *local_30;
  char *local_2c;
  char *local_28;
  char *local_24;
  char *local_20;
  char *local_1c;
  char *local_18;
  undefined1 *local_14;
  undefined1 *local_10;
  double local_c;
  
  COM_TimestampedLog("CSourceAppSystemGroup::Create()");
  fVar6 = (float10)Plat_FloatTime();
  local_c = (double)fVar6;
  piVar2 = (int *)FUN_00405c80(param_1,(int)"VFileSystem017");
  (**(code **)piVar2[1])(DAT_0044a670);
  (**(code **)(*piVar2 + 0x19c))(FUN_004021f0);
  CoInitialize((LPVOID)0x0);
  piVar2 = (int *)CommandLine();
  iVar3 = (**(code **)(*piVar2 + 0xc))("-edit",0);
  local_84 = "engine_mapkit.dll";
  pcVar10 = "fixapi2_AppSystem001";
  local_80 = "VCvarQuery001";
  uVar9 = 0;
  pcVar8 = "fixapi2_AppSystem001";
  *(bool *)((int)param_1 + 0x16c) = iVar3 != 0;
  local_7c = "filesystem_stdio.dll";
  local_78 = "QueuedLoaderVersion001";
  local_74 = "inputsystem.dll";
  local_70 = "InputSystemVersion001";
  local_6c = "vphysics.dll";
  local_68 = "VPhysics031";
  local_64 = "materialsystem.dll";
  local_60 = "VMaterialSystem080";
  local_5c = "datacache.dll";
  local_58 = "VDataCache003";
  local_54 = "datacache.dll";
  local_50 = "MDLCache004";
  local_4c = "datacache.dll";
  local_48 = "VStudioDataCache005";
  local_44 = "studiorender.dll";
  local_40 = "VStudioRender026";
  local_3c = "soundemittersystem.dll";
  local_38 = "VSoundEmitter003";
  local_34 = "vguimatsurface.dll";
  local_30 = "VGUI_Surface031";
  local_2c = "vgui2.dll";
  local_28 = "VGUI_ivgui008";
  local_24 = "engine_mapkit.dll";
  local_20 = "VENGINE_LAUNCHER_API_VERSION004";
  local_1c = "mediaplayer.dll";
  local_18 = "MediaPlayer001";
  local_14 = &DAT_0043b3d2;
  local_10 = &DAT_0043b3d2;
  pcVar4 = (code *)FUN_0041e5c0();
  iVar3 = (*pcVar4)(pcVar8,uVar9);
  FUN_00405840(param_1,iVar3,pcVar10);
  piVar2 = (int *)FUN_00405880(param_1,&local_84);
  if ((char)piVar2 == '\0') goto LAB_00402067;
  uVar5 = FUN_004062b0(param_1,"sourcevr.dll");
  if (uVar5 != 0xffffffff) {
    FUN_00405740(param_1,uVar5,"SourceVirtualReality001");
  }
  piVar2 = (int *)CommandLine();
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-tools");
  if (iVar3 == 0) {
LAB_004020b1:
    piVar2 = (int *)CommandLine();
    iVar3 = (**(code **)(*piVar2 + 0x2c))(&DAT_0043b8f0);
    if (iVar3 != 0) goto LAB_004020c3;
  }
  else {
    piVar2 = (int *)CommandLine();
    iVar3 = (**(code **)(*piVar2 + 0x2c))("-nop4");
    if (iVar3 != 0) goto LAB_004020b1;
LAB_004020c3:
    cVar1 = Plat_NoPerforce();
    if (cVar1 == '\0') {
      uVar5 = FUN_004062b0(param_1,"p4lib.dll");
      iVar3 = FUN_00405740(param_1,uVar5,"VP4002");
      if (iVar3 == 0) {
        piVar2 = (int *)CommandLine();
        piVar2 = (int *)(**(code **)(*piVar2 + 0x2c))("-steam");
        if (piVar2 == (int *)0x0) goto LAB_00402067;
      }
    }
  }
  uVar5 = FUN_004062b0(param_1,"vstdlib.dll");
  piVar2 = (int *)FUN_00405740(param_1,uVar5,"VProcessUtils002");
  if (piVar2 != (int *)0x0) {
    piVar2 = (int *)CommandLine();
    iVar3 = (**(code **)(*piVar2 + 0x2c))(&DAT_0043b930);
    if (iVar3 != 0) {
      uVar5 = FUN_004062b0(param_1,"datacache.dll");
      piVar2 = (int *)FUN_00405740(param_1,uVar5,"VResourceAccessControl001");
      if (piVar2 == (int *)0x0) goto LAB_00402067;
    }
    piVar2 = (int *)FUN_00405c80(param_1,(int)"VMaterialSystem080");
    if (piVar2 != (int *)0x0) {
      DAT_0044a074 = FUN_00405c80(param_1,(int)"VENGINE_LAUNCHER_API_VERSION004");
      (**(code **)(*piVar2 + 0x28))("shaderapidx9.dll");
      fVar7 = (float10)Plat_FloatTime();
      fVar6 = (float10)local_c;
      local_c = (double)(fVar7 - fVar6);
      uVar9 = COM_TimestampedLog("CSourceAppSystemGroup::Create() - Took %.4f secs to load libraries and get factories."
                                 ,(double)(float)(fVar7 - fVar6));
      return CONCAT31((int3)((uint)uVar9 >> 8),1);
    }
  }
LAB_00402067:
  return (uint)piVar2 & 0xffffff00;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_004021c0(void)

{
  DAT_0044a074 = 0;
  DAT_0044a81c = 0;
  _DAT_0044a078 = 0;
  _DAT_00449f04 = 0;
                    // WARNING: Could not recover jumptable at 0x004021e8. Too many branches
                    // WARNING: Treating indirect jump as call
  CoUninitialize();
  return;
}



void FUN_004021f0(void)

{
  return;
}



undefined * __thiscall FUN_00402200(void *this,undefined4 param_1)

{
  char cVar1;
  int iVar2;
  undefined *puVar3;
  
  puVar3 = *(undefined **)((int)this + 0x10);
  if (puVar3 == (undefined *)0xffffffff) {
    return (undefined *)0xffffffff;
  }
  do {
    iVar2 = (int)puVar3 * 0x20;
                    // WARNING: Load size is inaccurate
    cVar1 = (**this)(param_1,*(int *)((int)this + 4) + 0x10 + iVar2);
    if (cVar1 == '\0') {
                    // WARNING: Load size is inaccurate
      cVar1 = (**this)(*(int *)((int)this + 4) + 0x10 + iVar2,param_1);
      if (cVar1 == '\0') {
        return puVar3;
      }
      puVar3 = *(undefined **)(*(int *)((int)this + 4) + 4 + iVar2);
    }
    else {
      puVar3 = *(undefined **)(iVar2 + *(int *)((int)this + 4));
    }
  } while (puVar3 != (undefined *)0xffffffff);
  return (undefined *)0xffffffff;
}



void __thiscall FUN_00402270(void *this,undefined4 param_1,undefined **param_2,undefined *param_3)

{
  undefined *puVar1;
  char cVar2;
  int iVar3;
  
  puVar1 = *(undefined **)((int)this + 0x10);
  *param_2 = (undefined *)0xffffffff;
  *param_3 = 0;
  while (puVar1 != (undefined *)0xffffffff) {
    *param_2 = puVar1;
    iVar3 = (int)puVar1 * 0x20;
                    // WARNING: Load size is inaccurate
    cVar2 = (**this)(param_1,*(int *)((int)this + 4) + 0x10 + iVar3);
    if (cVar2 == '\0') {
      *param_3 = 0;
      puVar1 = *(undefined **)(*(int *)((int)this + 4) + 4 + iVar3);
    }
    else {
      *param_3 = 1;
      puVar1 = *(undefined **)(iVar3 + *(int *)((int)this + 4));
    }
  }
  return;
}



uint * FUN_004022d0(void)

{
  void *this;
  uint *this_00;
  
  this = (void *)FUN_0041ec00(0x24);
  if (this != (void *)0x0) {
    this_00 = FUN_0041eb80(this,&DAT_0043b3d2);
    FUN_00420fb0(this_00,"steamworks",1);
    return this_00;
  }
  FUN_00420fb0((void *)0x0,"steamworks",1);
  return (uint *)0x0;
}



uint FUN_00402320(void)

{
  DWORD DVar1;
  uint uVar2;
  
  DAT_00449f08 = CreateMutexA((LPSECURITY_ATTRIBUTES)0x0,0,"tacint_singleton_mutex");
  DVar1 = WaitForSingleObject(DAT_00449f08,0);
  if ((DVar1 != 0) && (DVar1 != 0x80)) {
    uVar2 = CloseHandle(DAT_00449f08);
    return uVar2 & 0xffffff00;
  }
  return CONCAT31((int3)(DVar1 >> 8),1);
}



void __thiscall FUN_00402360(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar2 = *(uint *)((int)this + 4);
  uVar4 = param_1 + uVar2;
  if (iVar1 == 0) {
    if (uVar2 == 0) {
      uVar2 = 1;
      if (1 < (int)uVar4) {
        uVar2 = uVar4;
      }
    }
    else {
      if ((int)uVar4 <= (int)uVar2) goto LAB_004023c3;
      do {
        uVar2 = uVar2 * 2;
      } while ((int)uVar2 < (int)uVar4);
    }
  }
  else {
    uVar2 = ((int)(uVar4 - 1) / iVar1 + 1) * iVar1;
  }
  if ((int)uVar2 < (int)uVar4) {
    if ((uVar2 == 0) && (0x7fffffff < uVar4)) {
      uVar2 = 0xffffffff;
    }
    else {
      do {
        uVar2 = (int)(uVar2 + uVar4) / 2;
      } while ((int)uVar2 < (int)uVar4);
    }
  }
LAB_004023c3:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar2;
  if (*this == 0) {
    uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar2 << 5);
    *(undefined4 *)this = uVar3;
    return;
  }
  uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this);
  *(undefined4 *)this = uVar3;
  return;
}



void __fastcall FUN_00402400(undefined *param_1)

{
  char *lpBuffer;
  int *piVar1;
  int iVar2;
  undefined4 *puVar3;
  char local_31c [260];
  char local_218 [260];
  undefined4 local_114 [2];
  char local_10c [260];
  int local_8;
  
  piVar1 = (int *)CommandLine();
  iVar2 = (**(code **)(*piVar1 + 0xc))("-edit",0);
  if (iVar2 == 0) {
    piVar1 = (int *)CommandLine();
    iVar2 = (**(code **)(*piVar1 + 0xc))("-makereslists",0);
    if (iVar2 != 0) {
      *param_1 = 1;
      local_8 = 0;
      piVar1 = (int *)CommandLine();
      iVar2 = (**(code **)(*piVar1 + 0xc))("-reslistdir",&local_8);
      if ((iVar2 != 0) && (local_8 != 0)) {
        FUN_0041e1d0(local_10c,local_8,0x104);
        FUN_0041dae0(local_10c);
        FUN_0041e460(local_10c);
        FUN_0041d790(local_10c,'\\');
        iVar2 = FUN_0041e440(local_10c);
        if (0 < iVar2) {
          FUN_004214d0(param_1 + 300,local_10c);
        }
      }
      piVar1 = (int *)CommandLine();
      (**(code **)(*piVar1 + 0x24))("-game","tacint");
      FUN_0041dfc0(local_218,0x104,(byte *)"%s/%s");
      FUN_0041d790(local_218,'\\');
      FUN_0041e460(local_218);
      FUN_004214d0(param_1 + 0x13c,local_218);
      FUN_00421550((undefined4 *)(param_1 + 300));
      FUN_00421550((undefined4 *)(param_1 + 0x13c));
      FUN_0041dfc0(local_31c,0x104,(byte *)"%s\\%s");
      (**(code **)(*DAT_0044a80c + 0x54))(local_31c,&DAT_0043b3fc);
      (**(code **)(*DAT_0044a80c + 0x114))(FUN_00403070);
      piVar1 = (int *)CommandLine();
      iVar2 = (**(code **)(*piVar1 + 0x2c))("-startmap");
      if (iVar2 == 0) {
        piVar1 = (int *)CommandLine();
        iVar2 = (**(code **)(*piVar1 + 0x2c))("-startstage");
        if (iVar2 == 0) {
          FUN_004035c0((int)(param_1 + 0x108));
          FUN_00421550((undefined4 *)(param_1 + 300));
          FUN_00421550((undefined4 *)(param_1 + 0x13c));
          puVar3 = FUN_004017b0(local_114,(byte *)"%s\\%s\\%s");
          (**(code **)(*DAT_0044a80c + 0x4c))((int)puVar3 + 5,&DAT_0043b3fc);
        }
      }
      lpBuffer = param_1 + 1;
      GetCurrentDirectoryA(0x104,lpBuffer);
      FUN_0041e120(lpBuffer,"\\",0x104,1);
      __strlwr(lpBuffer);
    }
  }
  return;
}



uint __thiscall FUN_00402630(void *this,int param_1,char param_2)

{
  uint uVar1;
  undefined4 *puVar2;
  
  uVar1 = FUN_004032c0((int)this);
  puVar2 = (undefined4 *)(uVar1 * 0x20 + *(int *)((int)this + 4));
  puVar2[2] = param_1;
  puVar2[1] = 0xffffffff;
  *puVar2 = 0xffffffff;
  puVar2[3] = 0;
  if (param_1 == -1) {
    *(uint *)((int)this + 0x10) = uVar1;
    FUN_004026c0(this,uVar1);
    *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 1;
    return uVar1;
  }
  if (param_2 != '\0') {
    *(uint *)(param_1 * 0x20 + *(int *)((int)this + 4)) = uVar1;
    FUN_004026c0(this,uVar1);
    *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 1;
    return uVar1;
  }
  *(uint *)(param_1 * 0x20 + 4 + *(int *)((int)this + 4)) = uVar1;
  FUN_004026c0(this,uVar1);
  *(int *)((int)this + 0x14) = *(int *)((int)this + 0x14) + 1;
  return uVar1;
}



void __thiscall FUN_004026c0(void *this,int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  if (param_1 != *(int *)((int)this + 0x10)) {
    while (param_1 != -1) {
      iVar3 = *(int *)((int)this + 4);
      iVar1 = *(int *)(param_1 * 0x20 + 8 + iVar3);
      if ((iVar1 == -1) || (*(int *)(iVar1 * 0x20 + 0xc + iVar3) != 0)) break;
      if (iVar1 == -1) {
        iVar4 = -1;
LAB_00402723:
        iVar2 = -1;
      }
      else {
        iVar4 = *(int *)(iVar1 * 0x20 + 8 + iVar3);
        if (iVar4 == -1) goto LAB_00402723;
        iVar2 = *(int *)(iVar4 * 0x20 + iVar3);
      }
      if (iVar2 == iVar1) {
        if (iVar4 != -1) {
          iVar2 = *(int *)(iVar4 * 0x20 + 4 + iVar3);
          if ((iVar2 != -1) && (iVar2 = iVar2 * 0x20, *(int *)(iVar2 + 0xc + iVar3) == 0)) {
            *(undefined4 *)(iVar1 * 0x20 + 0xc + iVar3) = 1;
            *(undefined4 *)(iVar2 + 0xc + *(int *)((int)this + 4)) = 1;
            *(undefined4 *)(iVar4 * 0x20 + 0xc + *(int *)((int)this + 4)) = 0;
            param_1 = iVar4;
            goto LAB_004028a8;
          }
        }
        if (iVar1 == -1) {
          iVar3 = -1;
        }
        else {
          iVar3 = *(int *)(iVar1 * 0x20 + 4 + iVar3);
        }
        iVar2 = iVar1;
        if (iVar3 == param_1) {
          FUN_00403690(this,iVar1);
          if (iVar1 == -1) {
            iVar2 = -1;
          }
          else {
            iVar2 = *(int *)(iVar1 * 0x20 + 8 + *(int *)((int)this + 4));
            if (iVar2 != -1) {
              iVar4 = *(int *)(iVar2 * 0x20 + 8 + *(int *)((int)this + 4));
              param_1 = iVar1;
              goto LAB_004027c5;
            }
          }
          iVar4 = -1;
          param_1 = iVar1;
        }
LAB_004027c5:
        *(undefined4 *)(iVar2 * 0x20 + 0xc + *(int *)((int)this + 4)) = 1;
        *(undefined4 *)(iVar4 * 0x20 + 0xc + *(int *)((int)this + 4)) = 0;
        FUN_004037b0(this,iVar4);
      }
      else {
        if (iVar4 != -1) {
          iVar2 = *(int *)(iVar4 * 0x20 + iVar3);
          if ((iVar2 != -1) && (iVar2 = iVar2 * 0x20, *(int *)(iVar2 + 0xc + iVar3) == 0)) {
            *(undefined4 *)(iVar1 * 0x20 + 0xc + iVar3) = 1;
            *(undefined4 *)(iVar2 + 0xc + *(int *)((int)this + 4)) = 1;
            *(undefined4 *)(iVar4 * 0x20 + 0xc + *(int *)((int)this + 4)) = 0;
            param_1 = iVar4;
            goto LAB_004028a8;
          }
        }
        if (iVar1 == -1) {
          iVar3 = -1;
        }
        else {
          iVar3 = *(int *)(iVar1 * 0x20 + iVar3);
        }
        iVar2 = iVar1;
        if (iVar3 == param_1) {
          FUN_004037b0(this,iVar1);
          if (iVar1 == -1) {
            iVar2 = -1;
          }
          else {
            iVar2 = *(int *)(iVar1 * 0x20 + 8 + *(int *)((int)this + 4));
            if (iVar2 != -1) {
              iVar4 = *(int *)(iVar2 * 0x20 + 8 + *(int *)((int)this + 4));
              param_1 = iVar1;
              goto LAB_00402882;
            }
          }
          iVar4 = -1;
          param_1 = iVar1;
        }
LAB_00402882:
        *(undefined4 *)(iVar2 * 0x20 + 0xc + *(int *)((int)this + 4)) = 1;
        *(undefined4 *)(iVar4 * 0x20 + 0xc + *(int *)((int)this + 4)) = 0;
        FUN_00403690(this,iVar4);
      }
LAB_004028a8:
      if (param_1 == *(int *)((int)this + 0x10)) break;
    }
  }
  *(undefined4 *)(*(int *)((int)this + 0x10) * 0x20 + 0xc + *(int *)((int)this + 4)) = 1;
  return;
}



undefined4 __cdecl FUN_004028d0(undefined4 param_1)

{
  char cVar1;
  LPSTR pCVar2;
  int *piVar3;
  HMODULE pHVar4;
  undefined4 uVar5;
  HANDLE hProcess;
  int iVar6;
  LSTATUS LVar7;
  DWORD DVar8;
  int iVar9;
  char local_314 [264];
  undefined local_20c [32];
  undefined **local_1ec;
  int local_1e8;
  undefined4 local_1e4;
  int local_1e0;
  undefined4 local_1dc;
  int local_1d8;
  int local_1d4;
  undefined4 local_1d0;
  int local_1cc;
  undefined4 local_1c8;
  int local_1c4;
  int local_1c0;
  undefined4 local_1bc;
  int local_1b8;
  undefined4 local_1b4;
  int local_1b0;
  undefined local_1ac [4];
  int local_1a8;
  undefined4 local_1a4;
  int local_1a0;
  undefined2 local_198;
  undefined2 local_196;
  BYTE local_180 [260];
  int local_7c;
  int local_78;
  undefined4 local_74;
  int local_70;
  undefined4 local_6c;
  int local_68;
  int local_64;
  undefined4 local_60;
  int local_5c;
  undefined4 local_58;
  int local_54;
  int local_50;
  undefined4 local_4c;
  int local_48;
  undefined4 local_44;
  int local_40;
  undefined local_3c [4];
  int local_38;
  undefined4 local_34;
  int local_30;
  undefined2 local_28;
  undefined2 local_26;
  DWORD local_c;
  HKEY local_8;
  
  FUN_00406b90(param_1);
  LoggingSystem_RegisterLoggingListener(&PTR_vftable_00447008);
  cVar1 = Plat_VerifyHardwareKeyPrompt();
  if (cVar1 == '\0') {
    return 0xffffffff;
  }
  pCVar2 = GetCommandLineA();
  piVar3 = (int *)CommandLine();
  (**(code **)(*piVar3 + 4))(pCVar2);
  DVar8 = 0x104;
  pCVar2 = &DAT_0044a398;
  pHVar4 = GetModuleHandleA((LPCSTR)0x0);
  GetModuleFileNameA(pHVar4,pCVar2,DVar8);
  iVar9 = 0x103;
  pCVar2 = GetCommandLineA();
  FUN_0041e1d0(&DAT_0044a290,(int)pCVar2,iVar9);
  FUN_0041e1d0(local_314,(int)&DAT_0044a290,0x104);
  piVar3 = (int *)CommandLine();
  (**(code **)(*piVar3 + 0x14))("+mat_hdr_level");
  FUN_004039f0();
  pHVar4 = GetModuleHandleA("GameOverlayRenderer.dll");
  if (pHVar4 == (HMODULE)0x0) {
    iVar9 = SteamAPI_GetSteamInstallPath();
    if (iVar9 != 0) {
      FUN_0041d690(iVar9,"GameOverlayRenderer.dll",(char *)local_180,0x104);
      LoadLibraryA((LPCSTR)local_180);
    }
  }
  piVar3 = (int *)CommandLine();
  (**(code **)(*piVar3 + 0x14))("-game");
  piVar3 = (int *)CommandLine();
  (**(code **)(*piVar3 + 0x14))("-defaultgamedir");
  iVar9 = WSAStartup(2,(LPWSADATA)local_20c);
  if (iVar9 != 0) {
    Msg("Warning! Failed to start Winsock via WSAStartup = 0x%x.\n",iVar9);
  }
  uVar5 = FUN_00402320();
  if ((char)uVar5 == '\0') {
    return 0xffffffff;
  }
  piVar3 = (int *)CommandLine();
  iVar9 = (**(code **)(*piVar3 + 0xc))(&DAT_0043ba40,0);
  if (iVar9 == 0) {
    piVar3 = (int *)CommandLine();
    iVar9 = (**(code **)(*piVar3 + 0xc))("-high",0);
    if (iVar9 == 0) goto LAB_00402a42;
    DVar8 = 0x80;
  }
  else {
    DVar8 = 0x40;
  }
  hProcess = GetCurrentProcess();
  SetPriorityClass(hProcess,DVar8);
LAB_00402a42:
  FUN_00427467(&DAT_0044a080);
  piVar3 = (int *)CommandLine();
  iVar9 = (**(code **)(*piVar3 + 0xc))("-buildcubemaps",0);
  if (iVar9 != 0) {
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0x18))("-nosound",0);
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0x18))("-nomusic",0);
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0x18))("-noasync",0);
  }
  piVar3 = (int *)CommandLine();
  iVar9 = (**(code **)(*piVar3 + 0xc))("-leakcheck",0);
  DAT_0044a060 = iVar9 != 0;
  do {
    FUN_00405710(&local_1ec,0);
    local_1ec = CSourceAppSystemGroup::vftable;
    FUN_00406a00(&local_7c,&local_1ec);
    iVar9 = FUN_00406590(&local_7c);
    iVar6 = FUN_00405dc0((int)&local_7c);
    if (iVar6 == 4) {
      cVar1 = iVar9 == 2;
      if ((bool)cVar1) goto LAB_00402b14;
LAB_00402afd:
      cVar1 = (**(code **)(*(int *)PTR_DAT_00447010 + 0x10))();
      if (cVar1 == '\0') goto LAB_00402b14;
    }
    else {
      if (iVar9 != 4) goto LAB_00402afd;
      cVar1 = '\x01';
LAB_00402b14:
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))(&DAT_0043ba90);
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))(&DAT_0043ba94);
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("-width");
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("-height");
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))(&DAT_0043baa8);
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("-startwindowed");
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("-windowed");
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("-window");
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("-full");
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("-fullscreen");
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("-dxlevel");
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("-autoconfig");
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x14))("+mat_hdr_level");
    }
    FUN_00403550(local_3c);
    FUN_0040e600((int)local_3c);
    local_28 = 0xffff;
    if (-1 < local_30) {
      if (local_38 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_38);
        local_38 = 0;
      }
      local_34 = 0;
    }
    local_26 = 0xffff;
    if (-1 < local_30) {
      if (local_38 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_38);
        local_38 = 0;
      }
      local_34 = 0;
    }
    local_44 = 0;
    if (-1 < local_48) {
      if (local_50 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_50);
        local_50 = 0;
      }
      local_4c = 0;
    }
    local_40 = local_50;
    if (-1 < local_48) {
      if (local_50 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_50);
        local_50 = 0;
      }
      local_4c = 0;
    }
    local_58 = 0;
    if (-1 < local_5c) {
      if (local_64 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_64);
        local_64 = 0;
      }
      local_60 = 0;
    }
    local_54 = local_64;
    if (-1 < local_5c) {
      if (local_64 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_64);
        local_64 = 0;
      }
      local_60 = 0;
    }
    local_6c = 0;
    if (-1 < local_70) {
      if (local_78 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_78);
        local_78 = 0;
      }
      local_74 = 0;
    }
    local_68 = local_78;
    if (-1 < local_70) {
      if (local_78 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_78);
        local_78 = 0;
      }
      local_74 = 0;
    }
    FUN_00403550(local_1ac);
    FUN_0040e600((int)local_1ac);
    local_198 = 0xffff;
    if (-1 < local_1a0) {
      if (local_1a8 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_1a8);
        local_1a8 = 0;
      }
      local_1a4 = 0;
    }
    local_196 = 0xffff;
    if (-1 < local_1a0) {
      if (local_1a8 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_1a8);
        local_1a8 = 0;
      }
      local_1a4 = 0;
    }
    local_1b4 = 0;
    if (-1 < local_1b8) {
      if (local_1c0 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_1c0);
        local_1c0 = 0;
      }
      local_1bc = 0;
    }
    local_1b0 = local_1c0;
    if (-1 < local_1b8) {
      if (local_1c0 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_1c0);
        local_1c0 = 0;
      }
      local_1bc = 0;
    }
    local_1c8 = 0;
    if (-1 < local_1cc) {
      if (local_1d4 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_1d4);
        local_1d4 = 0;
      }
      local_1d0 = 0;
    }
    local_1c4 = local_1d4;
    if (-1 < local_1cc) {
      if (local_1d4 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_1d4);
        local_1d4 = 0;
      }
      local_1d0 = 0;
    }
    local_1dc = 0;
    if (-1 < local_1e0) {
      if (local_1e8 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_1e8);
        local_1e8 = 0;
      }
      local_1e4 = 0;
    }
    local_1d8 = local_1e8;
    if ((-1 < local_1e0) && (local_1e8 != 0)) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_1e8);
    }
    if (cVar1 == '\0') {
      iVar9 = WSACleanup();
      if (iVar9 != 0) {
        Msg("Warning! Failed to complete WSACleanup = 0x%x.\n",iVar9);
      }
      if (DAT_00449f08 != (HANDLE)0x0) {
        ReleaseMutex(DAT_00449f08);
        CloseHandle(DAT_00449f08);
        DAT_00449f08 = (HANDLE)0x0;
      }
      LVar7 = RegOpenKeyExA((HKEY)0x80000001,"Software\\Valve\\Source",0,0xf003f,&local_8);
      if (LVar7 == 0) {
        local_c = 0x104;
        LVar7 = RegQueryValueExA(local_8,"Relaunch URL",(LPDWORD)0x0,(LPDWORD)0x0,local_180,&local_c
                                );
        if (LVar7 == 0) {
          ShellExecuteA((HWND)0x0,"open",(LPCSTR)local_180,(LPCSTR)0x0,(LPCSTR)0x0,5);
          RegDeleteValueA(local_8,"Relaunch URL");
        }
        RegCloseKey(local_8);
      }
      return 0;
    }
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00402ff0(int *param_1,LPCSTR param_2)

{
  char cVar1;
  
  if ((param_1[2] == 1) && (*param_1 == _DAT_0044a064)) {
    MessageBoxA((HWND)0x0,param_2,"Warning!",0x1010);
    return;
  }
  if (param_1[2] == 2) {
    cVar1 = ShouldUseNewAssertDialog();
    if (cVar1 == '\0') {
      MessageBoxA((HWND)0x0,param_2,"Assert!",0x1010);
      return;
    }
  }
  if (param_1[2] == 3) {
    MessageBoxA((HWND)0x0,param_2,"Error!",0x1010);
  }
  return;
}



void __cdecl FUN_00403070(char *param_1)

{
  FUN_00403090(&DAT_00449f10,param_1);
  return;
}



void __thiscall FUN_00403090(void *this,char *param_1)

{
  char *pcVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  void *this_00;
  char local_11c [260];
  char *local_18 [2];
  int local_10;
  undefined4 local_c;
  undefined *local_8;
  
  pcVar1 = param_1;
                    // WARNING: Load size is inaccurate
  if (*this != '\0') {
    FUN_00421450(local_18,param_1);
    param_1 = FUN_00402200((void *)((int)this + 0x108),local_18);
    local_c = 0;
    if ((-1 < local_10) && (local_18[0] != (char *)0x0)) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_18[0]);
    }
    if (param_1 == (char *)0xffffffff) {
      FUN_00421450(local_18,pcVar1);
      local_8 = (undefined *)0xffffffff;
      param_1 = (char *)((uint)param_1 & 0xffffff00);
      FUN_00402270((void *)((int)this + 0x108),local_18,&local_8,(undefined *)&param_1);
      uVar2 = FUN_00402630((void *)((int)this + 0x108),(int)local_8,(char)param_1);
      this_00 = (void *)(*(int *)((int)this + 0x10c) + 0x10 + uVar2 * 0x20);
      if (this_00 != (void *)0x0) {
        FUN_004213d0(this_00,local_18);
      }
      local_c = 0;
      if ((-1 < local_10) && (local_18[0] != (char *)0x0)) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_18[0]);
      }
      iVar3 = FUN_0041e000(pcVar1,&DAT_0044a080);
      if (iVar3 != 0) {
        iVar4 = FUN_0041e440(&DAT_0044a080);
        FUN_0041e1d0(local_11c,iVar4 + 1 + iVar3,0x104);
        FUN_0041e460(local_11c);
        FUN_0041d790(local_11c,'\\');
        FUN_004031d0(this,local_11c);
      }
    }
  }
  return;
}



void __thiscall FUN_004031d0(void *this,char *param_1)

{
  int iVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  undefined4 local_110 [67];
  
  FUN_00421550((undefined4 *)((int)this + 300));
  FUN_00421550((undefined4 *)((int)this + 0x13c));
  puVar2 = FUN_004017b0(local_110,(byte *)"%s\\%s\\%s");
  iVar3 = (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x24))
                    ((int)puVar2 + 5,&DAT_0043b640,&DAT_0043b3fc);
  if (iVar3 != 0) {
    (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x20))(&DAT_0043b644,1,iVar3);
    iVar1 = *(int *)(DAT_0044a80c + 4);
    iVar5 = iVar3;
    iVar4 = FUN_0041e440(param_1);
    (**(code **)(iVar1 + 0x20))(param_1,iVar4,iVar5);
    (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x20))(&DAT_0043b648,2,iVar3);
    (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x28))(iVar3);
  }
  return;
}



void FUN_004032a0(void)

{
  (**(code **)(*DAT_0044a074 + 0x40))(&PTR_vftable_00447004);
                    // WARNING: Could not recover jumptable at 0x004032b8. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(*DAT_0044a074 + 0x28))();
  return;
}



uint __fastcall FUN_004032c0(int param_1)

{
  uint uVar1;
  uint uVar2;
  undefined4 *puVar3;
  uint local_8;
  
  local_8 = *(uint *)(param_1 + 0x18);
  if (local_8 == 0xffffffff) {
    uVar1 = *(uint *)(param_1 + 8);
    if (*(uint *)(param_1 + 0x1c) < uVar1) {
      uVar2 = *(int *)(param_1 + 0x1c) + 1;
      local_8 = 0xffffffff;
      if (uVar2 < uVar1) {
        local_8 = uVar2;
      }
    }
    else {
      local_8 = (uVar1 != 0) - 1;
    }
    if (uVar1 <= local_8) {
      FUN_00402360((void *)(param_1 + 4),1);
      uVar1 = *(uint *)(param_1 + 8);
      if (*(uint *)(param_1 + 0x1c) < uVar1) {
        uVar2 = *(int *)(param_1 + 0x1c) + 1;
        local_8 = 0xffffffff;
        if (uVar2 < uVar1) {
          local_8 = uVar2;
        }
      }
      else {
        local_8 = (uVar1 != 0) - 1;
      }
      if (uVar1 <= local_8) {
        Error("CUtlRBTree overflow!\n");
      }
    }
    *(uint *)(param_1 + 0x1c) = local_8;
  }
  else {
    *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(local_8 * 0x20 + 4 + *(int *)(param_1 + 4));
  }
  puVar3 = (undefined4 *)(local_8 * 0x20 + *(int *)(param_1 + 4) + 0x10);
  if (puVar3 != (undefined4 *)0x0) {
    FUN_004214b0(puVar3);
  }
  *(undefined4 *)(param_1 + 0x20) = *(undefined4 *)(param_1 + 4);
  return local_8;
}



void FUN_00403380(void)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  FUN_004038d0(&DAT_00449f10);
  (**(code **)(*(int *)PTR_DAT_00447010 + 4))();
  FUN_004021f0();
  FUN_00425270();
  FUN_00421910();
  iVar1 = DAT_0044aa6c;
  iVar3 = DAT_0044aa68 + -1;
  DAT_0044aa68 = iVar3;
  if ((-1 < iVar3) && (iVar2 = 0, 0 < DAT_0044aa6c)) {
    do {
      if ((&DAT_0044a8c4)[iVar2 * 2] == iVar3) {
        *(undefined4 *)(&DAT_0044a8c0)[iVar2 * 2] = 0;
      }
      iVar2 = iVar2 + 1;
    } while (iVar2 < iVar1);
  }
  return;
}



uint __fastcall FUN_004033b0(int param_1)

{
  code **ppcVar1;
  uint uVar2;
  int *piVar3;
  undefined4 uVar4;
  char *local_238;
  undefined local_234;
  undefined2 local_233;
  undefined local_231;
  undefined local_22f [515];
  undefined4 local_2c;
  undefined1 *local_28;
  char *local_24;
  char *local_20;
  int local_1c;
  undefined local_18;
  undefined local_14 [4];
  undefined *local_10;
  int *local_c;
  undefined *local_8;
  
  local_8 = FUN_00405dd0();
  thunk_FUN_0041cbe0(&local_8,1);
  FUN_00421870(0,(undefined **)0x0);
  FUN_00425220();
  uVar2 = FUN_004021f0();
  if ((DAT_0044a80c != (int *)0x0) && (DAT_0044a81c != (int *)0x0)) {
    FUN_00401850(&local_238);
    local_233 = 0;
    local_231 = (**(code **)(*DAT_0044a80c + 0x24))();
    local_234 = 1;
    local_238 = "tacint";
    uVar2 = FUN_00401af0((int)&local_238);
    if (uVar2 == 0) {
      FUN_00401830(local_14);
      local_c = DAT_0044a80c;
      local_14[0] = *(undefined *)(param_1 + 0x16c);
      local_10 = local_22f;
      uVar2 = FUN_004019e0((int)local_14);
      if (uVar2 == 0) {
        (**(code **)(*local_c + 0x2c))("tacint","PLATFORM",1);
        piVar3 = (int *)CommandLine();
        ppcVar1 = *(code ***)PTR_DAT_00447010;
        uVar4 = (**(code **)(*piVar3 + 0x24))("-game","tacint");
        (**ppcVar1)(&DAT_0044a080,uVar4);
        (**(code **)(*(int *)PTR_DAT_00447010 + 0xc))();
        FUN_00402400(&DAT_00449f10);
        if (*(char *)(param_1 + 0x16c) != '\0') {
          (**(code **)(*DAT_0044a81c + 0x114))();
        }
        local_2c = FUN_00406ae0();
        local_18 = DAT_00449f0c;
        local_28 = &DAT_0044a080;
        local_24 = "tacint";
        local_20 = "tacint";
        local_1c = param_1;
        uVar2 = (**(code **)(*DAT_0044a074 + 0x24))(&local_2c);
        return uVar2;
      }
    }
  }
  return uVar2 & 0xffffff00;
}



void __fastcall FUN_00403550(void *param_1)

{
  ushort uVar1;
  ushort uVar2;
  uint uVar3;
  
  uVar1 = *(ushort *)((int)param_1 + 0x10);
  do {
    uVar2 = uVar1;
    if (uVar2 == 0xffff) break;
    uVar1 = *(ushort *)(*(int *)((int)param_1 + 4) + (uint)uVar2 * 0x10);
  } while (uVar1 != 0xffff);
  uVar3 = (uint)uVar2;
  while (uVar2 != 0xffff) {
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))
              (*(undefined4 *)(*(int *)((int)param_1 + 4) + 8 + uVar3 * 0x10));
    uVar3 = FUN_004090b0(param_1,uVar3);
    uVar3 = uVar3 & 0xffff;
    uVar2 = (ushort)uVar3;
  }
  FUN_0040e600((int)param_1);
  return;
}



void __fastcall FUN_004035c0(int param_1)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  uint uVar6;
  
  uVar2 = *(uint *)(param_1 + 0x1c);
  if (uVar2 != 0xffffffff) {
    uVar3 = *(uint *)(param_1 + 8);
    if (uVar3 != 0) {
      uVar6 = 0;
      do {
        if ((uVar6 < uVar3) && ((int)uVar6 <= (int)uVar2)) {
          if (uVar6 == 0xffffffff) {
            uVar2 = 0xffffffff;
          }
          else {
            uVar2 = *(uint *)(uVar6 * 0x20 + *(int *)(param_1 + 4));
          }
          if (uVar2 != uVar6) {
            iVar4 = uVar6 * 0x20;
            iVar5 = *(int *)(param_1 + 4) + iVar4;
            *(undefined4 *)(iVar5 + 0x1c) = 0;
            if (-1 < *(int *)(iVar5 + 0x18)) {
              if (*(int *)(iVar5 + 0x10) != 0) {
                (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(undefined4 *)(iVar5 + 0x10));
                *(undefined4 *)(iVar5 + 0x10) = 0;
              }
              *(undefined4 *)(iVar5 + 0x14) = 0;
            }
            *(undefined4 *)(iVar4 + 4 + *(int *)(param_1 + 4)) = *(undefined4 *)(param_1 + 0x18);
            *(uint *)(iVar4 + *(int *)(param_1 + 4)) = uVar6;
            *(uint *)(param_1 + 0x18) = uVar6;
          }
        }
        uVar2 = *(uint *)(param_1 + 0x1c);
        if (uVar6 == uVar2) break;
        uVar3 = *(uint *)(param_1 + 8);
        uVar1 = uVar6 + 1;
        uVar6 = 0xffffffff;
        if (uVar1 < uVar3) {
          uVar6 = uVar1;
        }
      } while (uVar6 != 0xffffffff);
    }
    *(undefined4 *)(param_1 + 0x10) = 0xffffffff;
    *(undefined4 *)(param_1 + 0x14) = 0;
  }
  return;
}



void __thiscall FUN_00403690(void *this,int param_1)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  undefined4 local_8;
  
  if (param_1 == -1) {
    iVar4 = -1;
LAB_004036c1:
    uVar2 = 0xffffffff;
  }
  else {
    iVar4 = *(int *)(param_1 * 0x20 + 4 + *(int *)((int)this + 4));
    if (iVar4 == -1) goto LAB_004036c1;
    uVar2 = *(undefined4 *)(iVar4 * 0x20 + *(int *)((int)this + 4));
  }
  iVar3 = param_1 * 0x20;
  *(undefined4 *)(*(int *)((int)this + 4) + 4 + iVar3) = uVar2;
  if (iVar4 != -1) {
    iVar1 = *(int *)(iVar4 * 0x20 + *(int *)((int)this + 4));
    if (iVar1 != -1) {
      *(int *)(iVar1 * 0x20 + 8 + *(int *)((int)this + 4)) = param_1;
    }
    if (param_1 == -1) {
      local_8 = 0xffffffff;
    }
    else {
      local_8 = *(undefined4 *)(*(int *)((int)this + 4) + 8 + iVar3);
    }
    *(undefined4 *)(*(int *)((int)this + 4) + 8 + iVar4 * 0x20) = local_8;
  }
  if (param_1 == *(int *)((int)this + 0x10)) {
    *(int *)((int)this + 0x10) = iVar4;
    goto LAB_00403788;
  }
  if (param_1 == -1) {
LAB_00403738:
    iVar1 = -1;
  }
  else {
    iVar1 = *(int *)(*(int *)((int)this + 4) + 8 + iVar3);
    if (iVar1 == -1) goto LAB_00403738;
    iVar1 = *(int *)(iVar1 * 0x20 + *(int *)((int)this + 4));
  }
  if (iVar1 == param_1) {
    if (param_1 == -1) {
      *(int *)(*(int *)((int)this + 4) + -0x20) = iVar4;
    }
    else {
      *(int *)(*(int *)(*(int *)((int)this + 4) + 8 + iVar3) * 0x20 + *(int *)((int)this + 4)) =
           iVar4;
    }
  }
  else if (param_1 == -1) {
    *(int *)(*(int *)((int)this + 4) + -0x1c) = iVar4;
  }
  else {
    *(int *)(*(int *)(*(int *)((int)this + 4) + 8 + iVar3) * 0x20 + 4 + *(int *)((int)this + 4)) =
         iVar4;
  }
LAB_00403788:
  *(int *)(iVar4 * 0x20 + *(int *)((int)this + 4)) = param_1;
  if (param_1 != -1) {
    *(int *)(*(int *)((int)this + 4) + 8 + iVar3) = iVar4;
  }
  return;
}



void __thiscall FUN_004037b0(void *this,int param_1)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  undefined4 local_8;
  
  if (param_1 == -1) {
    iVar4 = -1;
LAB_004037e1:
    uVar2 = 0xffffffff;
  }
  else {
    iVar4 = *(int *)(param_1 * 0x20 + *(int *)((int)this + 4));
    if (iVar4 == -1) goto LAB_004037e1;
    uVar2 = *(undefined4 *)(iVar4 * 0x20 + 4 + *(int *)((int)this + 4));
  }
  iVar3 = param_1 * 0x20;
  *(undefined4 *)(iVar3 + *(int *)((int)this + 4)) = uVar2;
  if (iVar4 != -1) {
    iVar1 = *(int *)(iVar4 * 0x20 + 4 + *(int *)((int)this + 4));
    if (iVar1 != -1) {
      *(int *)(iVar1 * 0x20 + 8 + *(int *)((int)this + 4)) = param_1;
    }
    if (param_1 == -1) {
      local_8 = 0xffffffff;
    }
    else {
      local_8 = *(undefined4 *)(*(int *)((int)this + 4) + 8 + iVar3);
    }
    *(undefined4 *)(*(int *)((int)this + 4) + 8 + iVar4 * 0x20) = local_8;
  }
  if (param_1 == *(int *)((int)this + 0x10)) {
    *(int *)((int)this + 0x10) = iVar4;
    goto LAB_004038a9;
  }
  if (param_1 == -1) {
LAB_00403859:
    iVar1 = -1;
  }
  else {
    iVar1 = *(int *)(*(int *)((int)this + 4) + 8 + iVar3);
    if (iVar1 == -1) goto LAB_00403859;
    iVar1 = *(int *)(iVar1 * 0x20 + 4 + *(int *)((int)this + 4));
  }
  if (iVar1 == param_1) {
    if (param_1 == -1) {
      *(int *)(*(int *)((int)this + 4) + -0x1c) = iVar4;
    }
    else {
      *(int *)(*(int *)(*(int *)((int)this + 4) + 8 + iVar3) * 0x20 + 4 + *(int *)((int)this + 4)) =
           iVar4;
    }
  }
  else if (param_1 == -1) {
    *(int *)(*(int *)((int)this + 4) + -0x20) = iVar4;
  }
  else {
    *(int *)(*(int *)(*(int *)((int)this + 4) + 8 + iVar3) * 0x20 + *(int *)((int)this + 4)) = iVar4
    ;
  }
LAB_004038a9:
  *(int *)(iVar4 * 0x20 + 4 + *(int *)((int)this + 4)) = param_1;
  if (param_1 != -1) {
    *(int *)(*(int *)((int)this + 4) + 8 + iVar3) = iVar4;
  }
  return;
}



void __fastcall FUN_004038d0(char *param_1)

{
  int *piVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 local_114 [68];
  
  if (*param_1 != '\0') {
    *param_1 = '\0';
    piVar1 = (int *)CommandLine();
    iVar2 = (**(code **)(*piVar1 + 0xc))("-makereslists",0);
    if (iVar2 != 0) {
      (**(code **)(*DAT_0044a80c + 0x118))(FUN_00403070);
    }
    FUN_00421550((undefined4 *)(param_1 + 300));
    FUN_00421550((undefined4 *)(param_1 + 0x13c));
    puVar3 = FUN_004017b0(local_114,(byte *)"%s\\%s\\%s");
    FUN_00405250((int)puVar3 + 5,&DAT_0043b3fc);
    FUN_00421550((undefined4 *)(param_1 + 300));
    FUN_00421550((undefined4 *)(param_1 + 0x13c));
    puVar3 = FUN_004017b0(local_114,(byte *)"%s\\%s\\%s");
    FUN_00405250((int)puVar3 + 5,&DAT_0043b3fc);
    FUN_004035c0((int)(param_1 + 0x108));
    *(undefined4 *)(param_1 + 0x120) = 0xffffffff;
    if (-1 < *(int *)(param_1 + 0x114)) {
      if (*(int *)(param_1 + 0x10c) != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 0x10c));
        *(undefined4 *)(param_1 + 0x10c) = 0;
      }
      *(undefined4 *)(param_1 + 0x110) = 0;
    }
    *(undefined4 *)(param_1 + 0x124) = 0xffffffff;
  }
  return;
}



void FUN_004039f0(void)

{
  char cVar1;
  HMODULE hModule;
  char *pcVar2;
  int *piVar3;
  char *pcVar4;
  LPSTR lpFilename;
  DWORD DVar5;
  
  DVar5 = 0x104;
  lpFilename = &DAT_0044a080;
  DAT_0044a080 = 0;
  hModule = GetModuleHandleA((LPCSTR)0x0);
  DVar5 = GetModuleFileNameA(hModule,lpFilename,DVar5);
  if (DVar5 != 0) {
    pcVar2 = _strrchr(&DAT_0044a080,0x5c);
    if (*pcVar2 != '\0') {
      pcVar2[1] = '\0';
    }
    pcVar2 = &DAT_0044a080;
    do {
      pcVar4 = pcVar2;
      pcVar2 = pcVar4 + 1;
    } while (*pcVar4 != '\0');
    if ((0 < (int)(pcVar4 + -0x44a080)) && ((pcVar4[-1] == '\\' || (pcVar4[-1] == '/')))) {
      pcVar4[-1] = '\0';
    }
    FUN_0041da10(&DAT_0044a080,0x104);
  }
  piVar3 = (int *)CommandLine();
  pcVar2 = (char *)(**(code **)(*piVar3 + 0xc))("-basedir",0);
  if (pcVar2 != (char *)0x0) {
    pcVar4 = pcVar2;
    do {
      cVar1 = *pcVar4;
      pcVar4 = pcVar4 + 1;
      pcVar4[(int)&DAT_0044a07f - (int)pcVar2] = cVar1;
    } while (cVar1 != '\0');
  }
  FUN_0041e460(&DAT_0044a080);
  FUN_0041d790(&DAT_0044a080,'\\');
  return;
}



undefined ** FUN_00403ac0(void)

{
  return &PTR_vftable_00447004;
}



undefined1 * __cdecl FUN_00403ad0(char *param_1)

{
  char cVar1;
  char *pcVar2;
  int iVar3;
  char *pcVar4;
  char local_108 [260];
  
  pcVar2 = param_1;
  do {
    cVar1 = *pcVar2;
    pcVar2 = pcVar2 + 1;
    pcVar2[(int)(local_108 + (-1 - (int)param_1))] = cVar1;
  } while (cVar1 != '\0');
  pcVar2 = _strrchr(local_108,0x5c);
  if (pcVar2 != (char *)0x0) {
    pcVar2[1] = '\0';
  }
  iVar3 = 0;
  do {
    cVar1 = local_108[iVar3];
    (&DAT_0044a4a0)[iVar3] = cVar1;
    iVar3 = iVar3 + 1;
  } while (cVar1 != '\0');
  pcVar2 = &DAT_0044a4a0;
  do {
    pcVar4 = pcVar2;
    pcVar2 = pcVar4 + 1;
  } while (*pcVar4 != '\0');
  if ((pcVar4 != &DAT_0044a4a0) && ((pcVar4[-1] == '\\' || (pcVar4[-1] == '/')))) {
    pcVar4[-1] = '\0';
  }
  return &DAT_0044a4a0;
}



// WARNING: Function: __alloca_probe replaced with injection: alloca_probe

undefined4 FUN_00403b60(HMODULE param_1)

{
  DWORD DVar1;
  undefined4 uVar2;
  byte local_1108 [4095];
  undefined local_109;
  CHAR local_108 [256];
  undefined4 uStack8;
  
  uStack8 = 0x403b6d;
  FUN_0042618f("PATH");
  DVar1 = GetModuleFileNameA(param_1,local_108,0x104);
  if (DVar1 == 0) {
    MessageBoxA((HWND)0x0,"Failed calling GetModuleFileName","Launcher Error",0);
    return 0;
  }
  FUN_00403ad0(local_108);
  FUN_004276f9((char *)local_1108,0x1000,(byte *)"PATH=%s\\;%s");
  local_109 = 0;
  FUN_0042620f(local_1108);
  uVar2 = FUN_004028d0(param_1);
  return uVar2;
}



void __cdecl FUN_00403c10(undefined4 param_1)

{
  (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1);
  return;
}



void __cdecl FUN_00403c30(undefined4 param_1)

{
  (**(code **)(**(int **)g_pMemAlloc_exref + 4))(param_1);
  return;
}



void FUN_00403c50(void)

{
  code *pcVar1;
  char cVar2;
  
  cVar2 = Plat_IsInDebugSession();
  if (cVar2 != '\0') {
    pcVar1 = (code *)swi(3);
    (*pcVar1)();
    return;
  }
  WriteMiniDump();
  Plat_ExitProcess(1);
  return;
}



bool FUN_00403c70(void)

{
  return *(int *)g_pMemAlloc_exref != 0;
}



void __cdecl FUN_00403c80(undefined4 param_1)

{
  (**(code **)(**(int **)g_pMemAlloc_exref + 0x20))(param_1);
  return;
}



void __cdecl FUN_00403ca0(undefined4 param_1,undefined4 param_2)

{
  (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(param_1,param_2);
  return;
}



uint * __cdecl FUN_00403cc0(undefined4 param_1,int param_2,int param_3)

{
  uint *puVar1;
  
  puVar1 = (uint *)(**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(param_1,param_2 * param_3);
  FUN_00427870(puVar1,0,param_2 * param_3);
  return puVar1;
}



void * __cdecl FUN_00403cf0(char *param_1)

{
  char cVar1;
  char *pcVar2;
  void *_Dst;
  
  pcVar2 = param_1;
  do {
    cVar1 = *pcVar2;
    pcVar2 = pcVar2 + 1;
  } while (cVar1 != '\0');
  _Dst = (void *)(**(code **)(**(int **)g_pMemAlloc_exref + 4))(pcVar2 + (1 - (int)(param_1 + 1)));
  if (_Dst != (void *)0x0) {
    FID_conflict__memcpy(_Dst,param_1,(size_t)(pcVar2 + (1 - (int)(param_1 + 1))));
  }
  return _Dst;
}



uint * __cdecl FUN_00403d40(int param_1,int param_2)

{
  uint *puVar1;
  
  puVar1 = (uint *)(**(code **)(**(int **)g_pMemAlloc_exref + 4))(param_1 * param_2);
  FUN_00427870(puVar1,0,param_1 * param_2);
  return puVar1;
}



undefined4 * __fastcall FUN_00403d70(undefined4 *param_1)

{
  *param_1 = CResListGenerator::vftable;
  *(undefined2 *)(param_1 + 1) = 0;
  *(undefined *)((int)param_1 + 6) = 0;
  FUN_004214b0(param_1 + 2);
  FUN_004214b0(param_1 + 6);
  FUN_004214b0(param_1 + 10);
  FUN_004214b0(param_1 + 0xe);
  FUN_004214b0(param_1 + 0x12);
  FUN_004214b0(param_1 + 0x16);
  FUN_004214b0(param_1 + 0x1a);
  FUN_004214b0(param_1 + 0x1e);
  param_1[0x22] = 0;
  param_1[0x23] = 0;
  param_1[0x24] = 0;
  param_1[0x25] = 0;
  param_1[0x26] = 0;
  param_1[0x27] = param_1[0x23];
  param_1[0x28] = 0;
  param_1[0x29] = 0;
  param_1[0x2a] = 0;
  param_1[0x2b] = 0;
  param_1[0x2c] = param_1[0x28];
  param_1[0x2d] = 0;
  FUN_004214d0(param_1 + 0xe,"reslists");
  FUN_004214d0(param_1 + 0x12,"reslists_work");
  return param_1;
}



void __fastcall FUN_00403e70(int *param_1)

{
  int iVar1;
  
  FUN_00405020(param_1);
  if (-1 < param_1[2]) {
    if (*param_1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*param_1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  iVar1 = *param_1;
  param_1[4] = iVar1;
  if (-1 < param_1[2]) {
    if (iVar1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  return;
}



void __fastcall FUN_00403ed0(int *param_1)

{
  int iVar1;
  
  FUN_00405090(param_1);
  if (-1 < param_1[2]) {
    if (*param_1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*param_1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  iVar1 = *param_1;
  param_1[4] = iVar1;
  if (-1 < param_1[2]) {
    if (iVar1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  return;
}



void __fastcall FUN_00403f30(int param_1)

{
  FUN_00403e70((int *)(param_1 + 0xa0));
  FUN_00403ed0((int *)(param_1 + 0x8c));
  *(undefined4 *)(param_1 + 0x84) = 0;
  if (-1 < *(int *)(param_1 + 0x80)) {
    if (*(int *)(param_1 + 0x78) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 0x78));
      *(undefined4 *)(param_1 + 0x78) = 0;
    }
    *(undefined4 *)(param_1 + 0x7c) = 0;
  }
  *(undefined4 *)(param_1 + 0x74) = 0;
  if (-1 < *(int *)(param_1 + 0x70)) {
    if (*(int *)(param_1 + 0x68) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 0x68));
      *(undefined4 *)(param_1 + 0x68) = 0;
    }
    *(undefined4 *)(param_1 + 0x6c) = 0;
  }
  *(undefined4 *)(param_1 + 100) = 0;
  if (-1 < *(int *)(param_1 + 0x60)) {
    if (*(int *)(param_1 + 0x58) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 0x58));
      *(undefined4 *)(param_1 + 0x58) = 0;
    }
    *(undefined4 *)(param_1 + 0x5c) = 0;
  }
  *(undefined4 *)(param_1 + 0x54) = 0;
  if (-1 < *(int *)(param_1 + 0x50)) {
    if (*(int *)(param_1 + 0x48) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 0x48));
      *(undefined4 *)(param_1 + 0x48) = 0;
    }
    *(undefined4 *)(param_1 + 0x4c) = 0;
  }
  *(undefined4 *)(param_1 + 0x44) = 0;
  if (-1 < *(int *)(param_1 + 0x40)) {
    if (*(int *)(param_1 + 0x38) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 0x38));
      *(undefined4 *)(param_1 + 0x38) = 0;
    }
    *(undefined4 *)(param_1 + 0x3c) = 0;
  }
  *(undefined4 *)(param_1 + 0x34) = 0;
  if (-1 < *(int *)(param_1 + 0x30)) {
    if (*(int *)(param_1 + 0x28) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 0x28));
      *(undefined4 *)(param_1 + 0x28) = 0;
    }
    *(undefined4 *)(param_1 + 0x2c) = 0;
  }
  *(undefined4 *)(param_1 + 0x24) = 0;
  if (-1 < *(int *)(param_1 + 0x20)) {
    if (*(int *)(param_1 + 0x18) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 0x18));
      *(undefined4 *)(param_1 + 0x18) = 0;
    }
    *(undefined4 *)(param_1 + 0x1c) = 0;
  }
  *(undefined4 *)(param_1 + 0x14) = 0;
  if (-1 < *(int *)(param_1 + 0x10)) {
    if (*(int *)(param_1 + 8) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 8));
      *(undefined4 *)(param_1 + 8) = 0;
    }
    *(undefined4 *)(param_1 + 0xc) = 0;
  }
  return;
}



void __fastcall FUN_004040d0(int *param_1)

{
  if (-1 < param_1[2]) {
    if (*param_1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*param_1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  return;
}



void __fastcall FUN_00404100(int *param_1)

{
  param_1[3] = 0;
  if (-1 < param_1[2]) {
    if (*param_1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*param_1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  return;
}



void __fastcall FUN_00404140(int *param_1)

{
  param_1[7] = 0;
  if (-1 < param_1[6]) {
    if (param_1[4] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[4]);
      param_1[4] = 0;
    }
    param_1[5] = 0;
  }
  param_1[3] = 0;
  if (-1 < param_1[2]) {
    if (*param_1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*param_1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  return;
}



void __fastcall FUN_004041b0(int param_1)

{
  undefined4 *puVar1;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  int iVar2;
  int iVar3;
  undefined4 local_214 [67];
  char local_108 [260];
  
  FUN_00421550((undefined4 *)(param_1 + 0x38));
  FUN_00421550((undefined4 *)(param_1 + 0x28));
  FUN_0041dfc0(local_108,0x104,(byte *)"%s\\%s");
  (**(code **)(*DAT_0044a80c + 0x54))(local_108,&DAT_0043b3fc);
  FUN_00404270(param_1,extraout_DL,"all.lst");
  FUN_00404270(param_1,extraout_DL_00,"engine.lst");
  iVar2 = 0;
  if (0 < *(int *)(param_1 + 0xac)) {
    iVar3 = 0;
    do {
      FUN_00421550((undefined4 *)(*(int *)(param_1 + 0xa0) + iVar3));
      puVar1 = FUN_004017b0(local_214,(byte *)"%s.lst");
      FUN_00404270(param_1,extraout_DL_01,(int)puVar1 + 5);
      iVar2 = iVar2 + 1;
      iVar3 = iVar3 + 0x10;
    } while (iVar2 < *(int *)(param_1 + 0xac));
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __fastcall FUN_00404270(int param_1,undefined param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 *puVar2;
  void *pvVar3;
  int iVar4;
  undefined4 local_148 [2];
  char local_140 [260];
  char *local_3c;
  undefined4 local_38;
  int local_34;
  undefined4 local_30;
  undefined4 *local_2c;
  undefined4 *local_28;
  undefined local_24 [8];
  int iStack28;
  int iStack24;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_14 = 0;
  _local_24 = ZEXT816(0);
  local_c = 0;
  local_8 = param_1;
  if (0 < *(int *)(param_1 + 0x98)) {
    local_28 = (undefined4 *)(param_1 + 0x48);
    local_24._0_4_ = 0;
    local_2c = (undefined4 *)(param_1 + 0x28);
    iStack24 = 0;
    local_10 = 0;
    iVar4 = iStack24;
    do {
      FUN_00421550((undefined4 *)(*(int *)(local_8 + 0x8c) + local_10));
      FUN_00421550(local_28);
      FUN_00421550(local_2c);
      FUN_0041dfc0(local_140,0x104,(byte *)"%s\\%s\\%s\\%s");
      FUN_00421450(&local_3c,local_140);
      iStack24 = iVar4;
      if (local_24._4_4_ < iVar4 + 1) {
        FUN_00404440(local_24,(iVar4 - local_24._4_4_) + 1);
      }
      iStack24 = iStack24 + 1;
      iVar1 = (iStack24 - iVar4) + -1;
      local_14 = local_24._0_4_;
      if (0 < iVar1) {
        pvVar3 = (void *)(iVar4 * 0x10 + local_24._0_4_);
        FID_conflict__memcpy((void *)((int)pvVar3 + 0x10),pvVar3,iVar1 * 0x10);
      }
      pvVar3 = (void *)(iVar4 * 0x10 + local_24._0_4_);
      if (pvVar3 != (void *)0x0) {
        FUN_004213d0(pvVar3,&local_3c);
      }
      local_30 = 0;
      if (-1 < local_34) {
        if (local_3c != (char *)0x0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_3c);
          local_3c = (char *)0x0;
        }
        local_38 = 0;
      }
      local_c = local_c + 1;
      local_10 = local_10 + 0x20;
      iVar4 = iStack24;
    } while (local_c < *(int *)(local_8 + 0x98));
  }
  FUN_00421550((undefined4 *)(local_8 + 0x38));
  FUN_00421550((undefined4 *)(local_8 + 0x28));
  puVar2 = FUN_004017b0(local_148,(byte *)"%s\\%s\\%s");
  FUN_00404ea0((int *)local_24,(int)puVar2 + 5,&DAT_0043b3fc);
  FUN_00405020((int *)local_24);
  if (((-1 < iStack28) && (local_24._0_4_ != 0)) &&
     ((**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_24._0_4_), false)) {
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
  }
  return;
}



void __thiscall FUN_00404440(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint uVar5;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar3 = *(uint *)((int)this + 4);
  uVar5 = param_1 + uVar3;
  if (iVar1 == 0) {
    if (uVar3 == 0) {
      uVar3 = 2;
      uVar2 = uVar5;
      if ((int)uVar5 < 3) goto LAB_004044a3;
    }
    else {
      if ((int)uVar5 <= (int)uVar3) goto LAB_004044a3;
      do {
        uVar3 = uVar3 * 2;
        uVar2 = uVar3;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
  else {
    uVar2 = ((int)(uVar5 - 1) / iVar1 + 1) * iVar1;
  }
  uVar3 = uVar2;
  if ((int)uVar3 < (int)uVar5) {
    if ((uVar3 == 0) && (0x7fffffff < uVar5)) {
      uVar3 = 0xffffffff;
    }
    else {
      do {
        uVar3 = (int)(uVar3 + uVar5) / 2;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
LAB_004044a3:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar3;
  if (*this == 0) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar3 << 4);
    *(undefined4 *)this = uVar4;
    return;
  }
  uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this);
  *(undefined4 *)this = uVar4;
  return;
}



void __thiscall FUN_004044e0(void *this,char *param_1,char *param_2)

{
  int *piVar1;
  int iVar2;
  char local_108 [260];
  
  if (*(char *)((int)this + 4) == '\0') {
    *(undefined *)((int)this + 4) = 1;
    FUN_004214d0((void *)((int)this + 8),param_1);
    FUN_004214d0((void *)((int)this + 0x18),param_2);
    FUN_00421550((undefined4 *)((int)this + 0x18));
    FUN_00421550((undefined4 *)((int)this + 8));
    FUN_0041dfc0(local_108,0x104,(byte *)"%s/%s");
    FUN_0041d790(local_108,'\\');
    FUN_0041e460(local_108);
    FUN_004214d0((void *)((int)this + 0x28),local_108);
    param_1 = (char *)0x0;
    piVar1 = (int *)CommandLine();
    iVar2 = (**(code **)(*piVar1 + 0xc))("-makereslists",&param_1);
    if ((iVar2 != 0) && (param_1 != (char *)0x0)) {
      FUN_004045b0(this,local_108,param_1);
    }
  }
  return;
}



uint __thiscall FUN_004045b0(void *this,undefined4 param_1,char *param_2)

{
  byte bVar1;
  code *pcVar2;
  char cVar3;
  uint uVar4;
  void *pvVar5;
  uint *this_00;
  char *pcVar6;
  undefined1 *puVar7;
  int *piVar8;
  int iVar9;
  int *piVar10;
  undefined4 uVar11;
  uint *this_01;
  int iVar12;
  char local_288 [512];
  char local_88 [32];
  char *local_68 [2];
  int local_60;
  int local_38 [4];
  char *local_28 [4];
  char *local_18 [4];
  char *local_8;
  
  if ((*param_2 == '+') || (*param_2 == '-')) {
    uVar4 = Msg("CResListGenerator: Falling back to legacy reslists system.\n");
    return uVar4 & 0xffffff00;
  }
  FUN_0041dfc0(local_288,0x200,(byte *)"%s/%s");
  FUN_004221a0(local_68,0,0,0);
  cVar3 = (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x58))(local_288,&DAT_0043b3fc,local_68,0,0,0);
  if (cVar3 == '\0') {
    uVar4 = Error("Unable to load \'%s\'\n",local_288);
    if ((-1 < local_60) && (local_68[0] != (char *)0x0)) {
      uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_68[0]);
    }
    return uVar4 & 0xffffff00;
  }
  pvVar5 = (void *)FUN_0041ec00(0x24);
  if (pvVar5 == (void *)0x0) {
    this_00 = (uint *)0x0;
  }
  else {
    this_00 = FUN_0041eb80(pvVar5,"reslists");
  }
  uVar4 = FUN_0041f9d0((uint *)"reslists",local_68[0],0,0,(int *)0x0);
  if ((char)uVar4 == '\0') {
    Error("Unable to parse keyvalues from \'%s\'\n",local_288);
    FUN_00421390((int)this_00);
    uVar4 = FUN_004040d0((int *)local_68);
    return uVar4 & 0xffffff00;
  }
  pcVar6 = (char *)FUN_0041f250(this_00,"maplist",(uint)"maplist.txt");
  FUN_00421450(local_38,pcVar6);
  piVar10 = (int *)((int)this + 0xa0);
  FUN_00421550(local_38);
  FUN_00404b40(param_1,piVar10);
  if (*(int *)((int)this + 0xac) < 1) {
    puVar7 = FUN_00421550(local_38);
    Error("Maplist file \'%s\' empty or missing!!!\n",puVar7);
    FUN_00421390((int)this_00);
    FUN_00404100(local_38);
    uVar4 = FUN_004040d0((int *)local_68);
    return uVar4 & 0xffffff00;
  }
  param_2 = (char *)0x0;
  piVar8 = (int *)CommandLine();
  iVar9 = (**(code **)(*piVar8 + 0xc))("-reslistmap",&param_2);
  if ((iVar9 != 0) && (param_2 != (char *)0x0)) {
    FUN_00404fe0(piVar10);
    FUN_004214b0(local_18);
    FUN_004214d0(local_18,param_2);
    iVar9 = *(int *)((int)this + 0xac);
    if (*(int *)((int)this + 0xa4) < iVar9 + 1) {
      FUN_00404440(piVar10,(iVar9 - *(int *)((int)this + 0xa4)) + 1);
    }
    *(int *)((int)this + 0xac) = *(int *)((int)this + 0xac) + 1;
    iVar12 = (*(int *)((int)this + 0xac) - iVar9) + -1;
    *(int *)((int)this + 0xb0) = *piVar10;
    if (0 < iVar12) {
      pvVar5 = (void *)(iVar9 * 0x10 + *piVar10);
      FID_conflict__memcpy((void *)((int)pvVar5 + 0x10),pvVar5,iVar12 * 0x10);
    }
    pvVar5 = (void *)(iVar9 * 0x10 + *piVar10);
    if (pvVar5 != (void *)0x0) {
      FUN_004213d0(pvVar5,local_18);
    }
    FUN_00404100((int *)local_18);
  }
  piVar10 = (int *)CommandLine();
  uVar11 = (**(code **)(*piVar10 + 0x20))("-startstage",0);
  *(undefined4 *)((int)this + 0x88) = uVar11;
  local_8 = (char *)0x0;
  piVar10 = (int *)CommandLine();
  (**(code **)(*piVar10 + 0xc))("-startmap",&local_8);
  if (local_8 != (char *)0x0) {
    FUN_004214d0((void *)((int)this + 0x78),local_8);
  }
  piVar10 = (int *)CommandLine();
  (**(code **)(*piVar10 + 0x14))("-startstage");
  piVar10 = (int *)CommandLine();
  (**(code **)(*piVar10 + 0x14))("-makereslists");
  piVar10 = (int *)CommandLine();
  (**(code **)(*piVar10 + 0x14))("-reslistdir");
  piVar10 = (int *)CommandLine();
  (**(code **)(*piVar10 + 0x14))("-norebuildaudio");
  piVar10 = (int *)CommandLine();
  (**(code **)(*piVar10 + 0x14))("-startmap");
  piVar10 = (int *)CommandLine();
  pcVar6 = (char *)(**(code **)(*piVar10 + 8))();
  FUN_004214d0((void *)((int)this + 0x68),pcVar6);
  if (local_8 != (char *)0x0) {
    piVar10 = (int *)CommandLine();
    puVar7 = FUN_00421550((undefined4 *)((int)this + 0x78));
    (**(code **)(*piVar10 + 0x18))("-startmap",puVar7);
  }
  pcVar6 = (char *)FUN_0041f250(this_00,"basecommandline",(uint)&DAT_0043b3d2);
  FUN_004214d0((void *)((int)this + 0x58),pcVar6);
  puVar7 = FUN_00421550((undefined4 *)((int)this + 0x38));
  pcVar6 = (char *)FUN_0041f250(this_00,"finaldir",(uint)puVar7);
  FUN_004214d0((void *)((int)this + 0x38),pcVar6);
  puVar7 = FUN_00421550((undefined4 *)((int)this + 0x48));
  pcVar6 = (char *)FUN_0041f250(this_00,"workdir",(uint)puVar7);
  FUN_004214d0((void *)((int)this + 0x48),pcVar6);
  uVar4 = FUN_0041f130(this_00,"xbox",0);
  *(bool *)((int)this + 6) = uVar4 != 0;
  FUN_0041dfc0(local_88,0x20,&DAT_0043bddc);
  this_01 = FUN_0041ee00(this_00,local_88,0);
  while (this_01 != (uint *)0x0) {
    FUN_004214b0(local_28);
    FUN_004214b0(local_18);
    pcVar6 = (char *)FUN_0041f250(this_01,"subdir",(uint)&DAT_0043b3d2);
    FUN_004214d0(local_28,pcVar6);
    pcVar6 = (char *)FUN_0041f250(this_01,"addcommands",(uint)&DAT_0043b3d2);
    FUN_004214d0(local_18,pcVar6);
    iVar9 = FUN_00421560((int)local_28);
    if (iVar9 < 1) {
      Error("%s: failed to specify \'subdir\' for item %s\n",local_288,local_88);
    }
    else {
      FUN_00404aa0((void *)((int)this + 0x8c),*(int *)((int)this + 0x98),local_28);
    }
    FUN_00404140((int *)local_28);
    FUN_0041dfc0(local_88,0x20,&DAT_0043bddc);
    this_01 = FUN_0041ee00(this_00,local_88,0);
  }
  iVar12 = *(int *)((int)this + 0x98) + -1;
  *(bool *)((int)this + 5) = 0 < *(int *)((int)this + 0x98);
  iVar9 = *(int *)((int)this + 0x88);
  if (iVar9 < 0) {
    iVar9 = 0;
  }
  else if (iVar12 < iVar9) {
    iVar9 = iVar12;
  }
  *(int *)((int)this + 0x88) = iVar9;
  piVar10 = (int *)CommandLine();
  iVar9 = (**(code **)(*piVar10 + 0xc))("-collate",0);
  if (iVar9 == 0) {
    FUN_00421390((int)this_00);
    bVar1 = *(byte *)((int)this + 5);
    FUN_00404100(local_38);
    uVar4 = FUN_004040d0((int *)local_68);
    return uVar4 & 0xffffff00 | (uint)bVar1;
  }
  FUN_004041b0((int)this);
  *(undefined *)((int)this + 5) = 0;
  _exit(-1);
  pcVar2 = (code *)swi(3);
  uVar4 = (*pcVar2)();
  return uVar4;
}



int __thiscall FUN_00404aa0(void *this,int param_1,char **param_2)

{
  void *pvVar1;
  int iVar2;
  
  if (*(int *)((int)this + 4) < *(int *)((int)this + 0xc) + 1) {
    FUN_00402360(this,(*(int *)((int)this + 0xc) - *(int *)((int)this + 4)) + 1);
  }
  *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
                    // WARNING: Load size is inaccurate
  iVar2 = (*(int *)((int)this + 0xc) - param_1) + -1;
  *(int *)((int)this + 0x10) = *this;
  if (0 < iVar2) {
    pvVar1 = (void *)(param_1 * 0x20 + *this);
    FID_conflict__memcpy((void *)((int)pvVar1 + 0x20),pvVar1,iVar2 * 0x20);
  }
                    // WARNING: Load size is inaccurate
  pvVar1 = (void *)(param_1 * 0x20 + *this);
  if (pvVar1 != (void *)0x0) {
    FUN_004213d0(pvVar1,param_2);
    FUN_004213d0((void *)((int)pvVar1 + 0x10),param_2 + 4);
  }
  return param_1;
}



undefined __fastcall FUN_00404b20(int param_1)

{
  if ((*(char *)(param_1 + 4) != '\0') && (*(char *)(param_1 + 5) != '\0')) {
    return 1;
  }
  return 0;
}



void FUN_00404b40(undefined4 param_1,int *param_2)

{
  char cVar1;
  int iVar2;
  void *pvVar3;
  int iVar4;
  char local_348 [511];
  char local_149 [261];
  int local_44 [2];
  int local_3c;
  char *local_14;
  undefined4 local_10;
  int local_c;
  undefined4 local_8;
  
  FUN_0041dfc0(local_348,0x200,(byte *)"%s/%s");
  FUN_004221a0(local_44,0,0,1);
  cVar1 = (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x58))(local_348,&DAT_0043b3fc,local_44,0,0,0);
  if (cVar1 == '\0') {
    Error("Unable to maplist file %s\n",local_348);
  }
  else {
    FUN_00422a50(local_44,local_149 + 1,0x104);
    while (local_149[1] != '\0') {
      while (((iVar2 = FUN_0041e440(local_149 + 1), 0 < iVar2 && (local_149[iVar2] == '\n')) ||
             (local_149[iVar2] == '\r'))) {
        local_149[iVar2] = '\0';
      }
      FUN_004214b0(&local_14);
      FUN_004214d0(&local_14,local_149 + 1);
      iVar2 = param_2[3];
      if (param_2[1] < iVar2 + 1) {
        FUN_00404440(param_2,(iVar2 - param_2[1]) + 1);
      }
      param_2[3] = param_2[3] + 1;
      iVar4 = (param_2[3] - iVar2) + -1;
      param_2[4] = *param_2;
      if (0 < iVar4) {
        pvVar3 = (void *)(iVar2 * 0x10 + *param_2);
        FID_conflict__memcpy((void *)((int)pvVar3 + 0x10),pvVar3,iVar4 * 0x10);
      }
      pvVar3 = (void *)(iVar2 * 0x10 + *param_2);
      if (pvVar3 != (void *)0x0) {
        FUN_004213d0(pvVar3,&local_14);
      }
      local_8 = 0;
      if (-1 < local_c) {
        if (local_14 != (char *)0x0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_14);
          local_14 = (char *)0x0;
        }
        local_10 = 0;
      }
      FUN_00422a50(local_44,local_149 + 1,0x104);
    }
  }
  if ((-1 < local_3c) && (local_44[0] != 0)) {
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_44[0]);
  }
  return;
}



void __cdecl FUN_00404d00(void *param_1,undefined4 param_2,undefined4 param_3)

{
  char cVar1;
  int iVar2;
  undefined4 *puVar3;
  byte *pbVar4;
  undefined *puVar5;
  uint uVar6;
  void *this;
  undefined4 local_35c [67];
  uint local_250 [64];
  byte local_150 [260];
  int local_4c [2];
  int local_44;
  char *local_1c;
  undefined4 local_18;
  int local_14;
  undefined4 local_10;
  uint local_c;
  undefined *local_8;
  
  FUN_004221a0(local_4c,0,0,1);
  cVar1 = (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x58))(param_2,param_3,local_4c,0,0,0);
  if (cVar1 != '\0') {
    FUN_00423420(local_250,"");
    iVar2 = FUN_00422bd0(local_4c,(int)local_250,local_150,0x104,1);
    while (0 < iVar2) {
      FUN_0041e460((char *)local_150);
      FUN_0041d790((char *)local_150,'\\');
      FUN_004214b0(&local_1c);
      pbVar4 = local_150;
      if (local_150[0] != 0x22) {
        puVar3 = FUN_004017b0(local_35c,&DAT_0043bbc4);
        pbVar4 = (byte *)((int)puVar3 + 5);
      }
      FUN_004214d0(&local_1c,(char *)pbVar4);
      puVar5 = FUN_00402200(param_1,&local_1c);
      if (puVar5 == (undefined *)0xffffffff) {
        local_c = local_c & 0xffffff00;
        local_8 = puVar5;
        FUN_00402270(param_1,&local_1c,&local_8,(undefined *)&local_c);
        uVar6 = FUN_00402630(param_1,(int)local_8,(char)local_c);
        this = (void *)(*(int *)((int)param_1 + 4) + 0x10 + uVar6 * 0x20);
        if (this != (void *)0x0) {
          FUN_004213d0(this,&local_1c);
        }
      }
      local_10 = 0;
      if (-1 < local_14) {
        if (local_1c != (char *)0x0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_1c);
          local_1c = (char *)0x0;
        }
        local_18 = 0;
      }
      iVar2 = FUN_00422bd0(local_4c,(int)local_250,local_150,0x104,1);
    }
  }
  if ((-1 < local_44) && (local_4c[0] != 0)) {
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_4c[0]);
  }
  return;
}



void __cdecl FUN_00404ea0(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined1 *puVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  code *local_28;
  int local_24;
  undefined4 uStack32;
  int iStack28;
  undefined4 uStack24;
  undefined4 local_14;
  undefined4 uStack16;
  undefined4 uStack12;
  undefined4 uStack8;
  
  local_24 = 0;
  uStack32 = 0;
  iStack28 = 0;
  uStack24 = 0xffffffff;
  iVar3 = 0;
  local_28 = FUN_00401eb0;
  local_14 = 0;
  uStack16 = 0xffffffff;
  uStack12 = 0xffffffff;
  uStack8 = 0;
  if (0 < param_1[3]) {
    iVar2 = 0;
    do {
      uVar4 = param_3;
      puVar1 = FUN_00421550((undefined4 *)(*param_1 + iVar2));
      FUN_00404d00(&local_28,puVar1,uVar4);
      iVar3 = iVar3 + 1;
      iVar2 = iVar2 + 0x10;
    } while (iVar3 < param_1[3]);
  }
  FUN_00405130(&local_28,param_2,param_3);
  FUN_004035c0((int)&local_28);
  if (((-1 < iStack28) && (local_24 != 0)) &&
     ((**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_24), false)) {
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
  }
  return;
}



int __thiscall FUN_00404f50(void *this,int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if (param_1 == -1) {
    iVar1 = -1;
  }
  else {
    iVar1 = *(int *)((int)this + 4);
    iVar3 = *(int *)(param_1 * 0x20 + 4 + iVar1);
    if (iVar3 != -1) {
      do {
        iVar2 = iVar3;
        if (iVar2 == -1) {
          return -1;
        }
        iVar3 = *(int *)(iVar2 * 0x20 + iVar1);
      } while (iVar3 != -1);
      return iVar2;
    }
    iVar1 = *(int *)(param_1 * 0x20 + 8 + iVar1);
  }
  do {
    iVar3 = iVar1;
    if (param_1 == -1) {
LAB_00404faf:
      iVar1 = -1;
    }
    else {
      iVar1 = *(int *)(param_1 * 0x20 + 8 + *(int *)((int)this + 4));
      if (iVar1 == -1) goto LAB_00404faf;
      iVar1 = *(int *)(iVar1 * 0x20 + 4 + *(int *)((int)this + 4));
    }
    if (iVar1 != param_1) {
      return iVar3;
    }
    if (iVar3 == -1) {
      return -1;
    }
    iVar1 = *(int *)(iVar3 * 0x20 + 8 + *(int *)((int)this + 4));
    param_1 = iVar3;
  } while( true );
}



void __fastcall FUN_00404fe0(int *param_1)

{
  FUN_00405020(param_1);
  if (-1 < param_1[2]) {
    if (*param_1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*param_1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  param_1[4] = *param_1;
  return;
}



void __fastcall FUN_00405020(int *param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  
  iVar3 = param_1[3] + -1;
  if (-1 < iVar3) {
    iVar1 = iVar3 * 0x10;
    do {
      piVar2 = (int *)(*param_1 + iVar1);
      piVar2[3] = 0;
      if (-1 < piVar2[2]) {
        if (*piVar2 != 0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*piVar2);
          *piVar2 = 0;
        }
        piVar2[1] = 0;
      }
      iVar1 = iVar1 + -0x10;
      iVar3 = iVar3 + -1;
    } while (-1 < iVar3);
  }
  param_1[3] = 0;
  return;
}



void __fastcall FUN_00405090(int *param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  
  iVar3 = param_1[3] + -1;
  if (-1 < iVar3) {
    iVar1 = iVar3 * 0x20;
    do {
      piVar2 = (int *)(*param_1 + iVar1);
      piVar2[7] = 0;
      if (-1 < piVar2[6]) {
        if (piVar2[4] != 0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(piVar2[4]);
          piVar2[4] = 0;
        }
        piVar2[5] = 0;
      }
      piVar2[3] = 0;
      if (-1 < piVar2[2]) {
        if (*piVar2 != 0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*piVar2);
          *piVar2 = 0;
        }
        piVar2[1] = 0;
      }
      iVar1 = iVar1 + -0x20;
      iVar3 = iVar3 + -1;
    } while (-1 < iVar3);
  }
  param_1[3] = 0;
  return;
}



undefined4 __cdecl FUN_00405130(void *param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  int iVar2;
  char *pcVar3;
  undefined1 *puVar4;
  int iVar5;
  int iVar6;
  undefined4 uVar7;
  int iVar8;
  
  iVar2 = (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x24))(param_2,&DAT_0043bbbc,param_3);
  if (iVar2 == 0) {
    return 0;
  }
  iVar1 = *(int *)((int)param_1 + 0x10);
  do {
    iVar6 = iVar1;
    if (iVar6 == -1) goto LAB_00405213;
    iVar1 = *(int *)(iVar6 * 0x20 + *(int *)((int)param_1 + 4));
  } while (iVar1 != -1);
  for (; iVar6 != -1; iVar6 = FUN_00404f50(param_1,iVar6)) {
    pcVar3 = FUN_00421550((undefined4 *)(*(int *)((int)param_1 + 4) + 0x10 + iVar6 * 0x20));
    puVar4 = FUN_00421550((undefined4 *)(*(int *)((int)param_1 + 4) + 0x10 + iVar6 * 0x20));
    iVar1 = *(int *)(DAT_0044a80c + 4);
    iVar8 = iVar2;
    iVar5 = FUN_0041e440(pcVar3);
    (**(code **)(iVar1 + 0x20))(puVar4,iVar5,iVar8);
    (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x20))(&DAT_0043bbc0,1,iVar2);
  }
LAB_00405213:
  uVar7 = (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x28))(iVar2);
  return CONCAT31((int3)((uint)uVar7 >> 8),1);
}



undefined __fastcall FUN_00405230(int param_1)

{
  if ((*(char *)(param_1 + 5) != '\0') && (*(int *)(param_1 + 0xb4) < 3)) {
    return 1;
  }
  return 0;
}



void __cdecl FUN_00405250(undefined4 param_1,undefined4 param_2)

{
  code *local_28;
  undefined4 local_24;
  undefined4 uStack32;
  undefined4 uStack28;
  undefined4 uStack24;
  undefined4 local_14;
  undefined4 uStack16;
  undefined4 uStack12;
  undefined4 uStack8;
  
  local_24 = 0;
  uStack32 = 0;
  uStack28 = 0;
  uStack24 = 0xffffffff;
  local_28 = FUN_00401eb0;
  local_14 = 0;
  uStack16 = 0xffffffff;
  uStack12 = 0xffffffff;
  uStack8 = 0;
  FUN_00404d00(&local_28,param_1,param_2);
  FUN_00405130(&local_28,param_1,param_2);
  FUN_00401db0((int)&local_28);
  return;
}



undefined __fastcall FUN_004052b0(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  int *piVar3;
  undefined4 *puVar4;
  char *pcVar5;
  char local_610 [512];
  char local_410 [260];
  char local_30c [512];
  char local_10c;
  uint local_10b [64];
  int local_8;
  
  if (*(char *)(param_1 + 5) == '\0') {
    return 1;
  }
  iVar1 = *(int *)(param_1 + 0xb4);
  if (iVar1 == 0) {
    *(undefined4 *)(param_1 + 0xb4) = 1;
  }
  else if (iVar1 == 1) {
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0x14))("-startmap");
    *(int *)(param_1 + 0x88) = *(int *)(param_1 + 0x88) + 1;
    if (*(int *)(param_1 + 0x98) <= *(int *)(param_1 + 0x88)) {
      FUN_004041b0(param_1);
      *(int *)(param_1 + 0xb4) = *(int *)(param_1 + 0xb4) + 1;
    }
  }
  else if (iVar1 == 2) {
    *(undefined4 *)(param_1 + 0xb4) = 3;
  }
  else {
    *(undefined *)(param_1 + 5) = 0;
  }
  if (*(int *)(param_1 + 0xb4) == 1) {
    puVar4 = (undefined4 *)(*(int *)(param_1 + 0x88) * 0x20 + *(int *)(param_1 + 0x8c));
    FUN_00421550(puVar4);
    FUN_00421550((undefined4 *)(param_1 + 0x48));
    FUN_0041dfc0(local_30c,0x200,(byte *)"%s\\%s");
    FUN_00421550((undefined4 *)(param_1 + 0x28));
    FUN_0041dfc0(local_410,0x104,(byte *)"%s\\%s");
    (**(code **)(*DAT_0044a80c + 0x54))(local_410,&DAT_0043b3fc);
    local_8 = 0;
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0xc))("-startmap",&local_8);
    local_10c = '\0';
    FUN_00427870(local_10b,0,0x103);
    if (local_8 != 0) {
      FUN_0041e1d0(&local_10c,local_8,0x104);
    }
    FUN_00421550(puVar4 + 4);
    FUN_00421550((undefined4 *)(param_1 + 0x58));
    FUN_00421550((undefined4 *)(param_1 + 0x68));
    FUN_0041dfc0(local_610,0x200,(byte *)"%s %s %s -reslistdir %s");
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 4))(local_610);
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0x18))("-norebuildaudio",0);
    if (local_10c != '\0') {
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x18))("-startmap",&local_10c);
    }
    if (*(char *)(param_1 + 6) != '\0') {
      piVar3 = (int *)CommandLine();
      (**(code **)(*piVar3 + 0x18))("-xboxreslist",0);
    }
    piVar3 = (int *)CommandLine();
    uVar2 = (**(code **)(*piVar3 + 8))();
    pcVar5 = "Generating Reslists: Setting command line:\n\'%s\'\n";
  }
  else {
    if (*(int *)(param_1 + 0xb4) != 2) {
      *(undefined *)(param_1 + 5) = 0;
      goto LAB_00405537;
    }
    if (*(char *)(param_1 + 6) != '\0') {
      *(undefined *)(param_1 + 5) = 0;
      goto LAB_00405537;
    }
    FUN_00421550((undefined4 *)(param_1 + 0x38));
    FUN_00421550((undefined4 *)(param_1 + 0x68));
    FUN_0041dfc0(local_30c,0x200,(byte *)"%s -reslistdir %s -rebuildaudio");
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 4))(local_30c);
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0x14))("-norebuildaudio");
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0x14))("-makereslists");
    piVar3 = (int *)CommandLine();
    uVar2 = (**(code **)(*piVar3 + 8))();
    pcVar5 = "Generating Caches: Setting command line:\n\'%s\'\n";
  }
  Warning(pcVar5,uVar2);
LAB_00405537:
  if (*(char *)(param_1 + 5) == '\0') {
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0x14))("-makereslists");
    piVar3 = (int *)CommandLine();
    (**(code **)(*piVar3 + 0x18))("-autoquit",0);
  }
  return *(undefined *)(param_1 + 5);
}



uint FUN_00405570(int *param_1,void *param_2,uint param_3,byte *param_4,uint param_5,int param_6)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  uint uVar5;
  
  iVar1 = (**(code **)(*param_1 + 0x10))();
  if (iVar1 == 0) {
    FID_conflict__memcpy(param_2,param_4,param_5);
    return param_5;
  }
  iVar1 = (**(code **)(*param_1 + 0xc))();
  uVar2 = (**(code **)(*param_1 + 0x10))();
  uVar5 = 0;
  if (param_5 != 0) {
    iVar3 = param_6 - (int)param_4;
    iVar4 = (int)param_2 - (int)param_4;
    do {
      if (param_3 <= uVar5) {
        return uVar5;
      }
      uVar5 = uVar5 + 1;
      param_4[iVar4] = *(byte *)((uint)(param_4 + iVar3) % uVar2 + iVar1) ^ *param_4;
      param_4 = param_4 + 1;
    } while (uVar5 < param_5);
  }
  return uVar5;
}



void FUN_00405600(int *param_1,void *param_2,uint param_3,byte *param_4,uint param_5,int param_6)

{
  FUN_00405570(param_1,param_2,param_3,param_4,param_5,param_6);
  return;
}



undefined4 FUN_00405610(void)

{
  return 0;
}



undefined FUN_00405620(void)

{
  return 1;
}



int WSAStartup(WORD wVersionRequired,LPWSADATA lpWSAData)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00405626. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = WSAStartup(wVersionRequired,lpWSAData);
  return iVar1;
}



int WSACleanup(void)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040562c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = WSACleanup();
  return iVar1;
}



undefined4 * __thiscall FUN_00405640(void *this,undefined4 param_1)

{
  undefined4 uVar1;
  
  *(undefined ***)this = CAppSystemGroup::vftable;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = *(undefined4 *)((int)this + 4);
  *(undefined4 *)((int)this + 0x18) = 0;
  *(undefined4 *)((int)this + 0x1c) = 0;
  *(undefined4 *)((int)this + 0x20) = 0;
  *(undefined4 *)((int)this + 0x24) = 0;
  *(undefined4 *)((int)this + 0x28) = *(undefined4 *)((int)this + 0x18);
  *(undefined4 *)((int)this + 0x2c) = 0;
  *(undefined4 *)((int)this + 0x30) = 0;
  *(undefined4 *)((int)this + 0x34) = 0;
  *(undefined4 *)((int)this + 0x38) = 0;
  *(undefined4 *)((int)this + 0x3c) = *(undefined4 *)((int)this + 0x2c);
  *(undefined4 *)((int)this + 0x40) = 0;
  *(undefined4 *)((int)this + 0x44) = 0;
  *(undefined4 *)((int)this + 0x48) = 0x10;
  *(undefined4 *)((int)this + 0x4c) = 0;
  uVar1 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(0x100);
  *(undefined4 *)((int)this + 0x44) = uVar1;
  *(undefined4 *)((int)this + 0x58) = *(undefined4 *)((int)this + 0x44);
  *(undefined4 *)((int)this + 0x50) = 0xffff;
  *(undefined4 *)((int)this + 0x54) = 0xffffffff;
  if (*(int *)((int)this + 0x40) == 0) {
    *(code **)((int)this + 0x40) = FUN_00406950;
  }
  *(undefined4 *)((int)this + 0x5c) = param_1;
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00405710(void *this,undefined4 param_1)

{
  FUN_00405640(this,0);
  *(undefined4 *)((int)this + 100) = param_1;
  *(undefined ***)this = CSteamAppSystemGroup::vftable;
  *(undefined *)((int)this + 0x68) = 0;
  return (undefined4 *)this;
}



int __thiscall FUN_00405740(void *this,uint param_1,char *param_2)

{
  HMODULE *ppHVar1;
  char *pcVar2;
  uint uVar3;
  HMODULE pHVar4;
  uint uVar5;
  char *local_c;
  int local_8;
  
  pcVar2 = param_2;
  uVar5 = param_1;
  if (param_1 == 0xffffffff) {
    return 0;
  }
  if (param_2 == (char *)0x0) {
    param_1 = 0xffff;
  }
  else {
    local_c = param_2;
    uVar3 = FUN_0040b090((void *)((int)this + 0x40),&local_c);
    param_1 = uVar3 & 0xffff;
  }
  if (param_1 != 0xffff) {
    Warning("AppFramework : Attempted to add two systems with the same interface name %s!\n",pcVar2)
    ;
    return *(int *)(*(int *)((int)this + 0x18) +
                   *(int *)(*(int *)((int)this + 0x44) + 0xc + (param_1 & 0xffff) * 0x10) * 4);
  }
  ppHVar1 = (HMODULE *)(*(int *)((int)this + 4) + uVar5 * 0xc);
  if (*(int *)(*(int *)((int)this + 4) + uVar5 * 0xc) == 0) {
    pHVar4 = ppHVar1[1];
  }
  else {
    pHVar4 = (HMODULE)FUN_0041e5a0(*ppHVar1);
  }
  uVar5 = (*(code *)pHVar4)(pcVar2,&param_2);
  if ((param_2 == (char *)0x0) && (uVar5 != 0)) {
    param_1 = uVar5;
    param_1 = FUN_004058e0((void *)((int)this + 0x18),&param_1);
    local_8 = FUN_004063f0(pcVar2);
    FUN_0040b650((void *)((int)this + 0x40),&local_8,&param_1);
    return uVar5;
  }
  Warning("AppFramework : Unable to create system %s!\n",pcVar2);
  return 0;
}



void __thiscall FUN_00405840(void *this,int param_1,char *param_2)

{
  if (param_1 != 0) {
    param_1 = FUN_004058e0((void *)((int)this + 0x18),&param_1);
    param_2 = (char *)FUN_004063f0(param_2);
    FUN_0040b650((void *)((int)this + 0x40),&param_2,&param_1);
  }
  return;
}



uint __thiscall FUN_00405880(void *this,char **param_1)

{
  char cVar1;
  char *pcVar2;
  uint uVar3;
  int iVar4;
  
  pcVar2 = *param_1;
  cVar1 = *pcVar2;
  while( true ) {
    if (cVar1 == '\0') {
      return CONCAT31((int3)((uint)pcVar2 >> 8),1);
    }
    uVar3 = FUN_004062b0(this,pcVar2);
    iVar4 = FUN_00405740(this,uVar3,param_1[1]);
    if (iVar4 == 0) break;
    pcVar2 = param_1[2];
    param_1 = param_1 + 2;
    cVar1 = *pcVar2;
  }
  uVar3 = Warning("Unable to load interface %s from %s, requested from EXE.\n",param_1[1],*param_1);
  return uVar3 & 0xffffff00;
}



int __thiscall FUN_004058e0(void *this,undefined4 *param_1)

{
  void *_Src;
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = *(int *)((int)this + 0xc);
  if (*(int *)((int)this + 4) < iVar2 + 1) {
    FUN_0040a710(this,(iVar2 - *(int *)((int)this + 4)) + 1);
  }
  *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
                    // WARNING: Load size is inaccurate
  iVar3 = (*(int *)((int)this + 0xc) - iVar2) + -1;
  *(int *)((int)this + 0x10) = *this;
  if (0 < iVar3) {
    _Src = (void *)(*this + iVar2 * 4);
    FID_conflict__memcpy((void *)((int)_Src + 4),_Src,iVar3 * 4);
  }
                    // WARNING: Load size is inaccurate
  puVar1 = (undefined4 *)(*this + iVar2 * 4);
  if (puVar1 != (undefined4 *)0x0) {
    *puVar1 = *param_1;
  }
  return iVar2;
}



int __fastcall FUN_00405940(int *param_1)

{
  void *_Src;
  int iVar1;
  int iVar2;
  
  iVar1 = param_1[3];
  if (param_1[1] < iVar1 + 1) {
    FUN_00418730(param_1,(iVar1 - param_1[1]) + 1);
  }
  param_1[3] = param_1[3] + 1;
  iVar2 = (param_1[3] - iVar1) + -1;
  param_1[4] = *param_1;
  if (0 < iVar2) {
    _Src = (void *)(*param_1 + iVar1 * 0xc);
    FID_conflict__memcpy((void *)((int)_Src + 0xc),_Src,iVar2 * 0xc);
  }
  return iVar1;
}



void __cdecl FUN_00405990(int param_1,uint *param_2)

{
  int iVar1;
  
  iVar1 = FUN_00405c80(DAT_0044a680,param_1);
  if (param_2 != (uint *)0x0) {
    *param_2 = (uint)(iVar1 == 0);
  }
  return;
}



void FUN_004059c0(int *param_1)

{
  ushort uVar1;
  bool bVar2;
  byte *pbVar3;
  ushort *puVar4;
  uint uVar5;
  int *piVar6;
  short *psVar7;
  uint uVar8;
  int iVar9;
  int iVar10;
  int iVar11;
  uint local_1c;
  int local_18;
  uint local_14;
  short local_a;
  undefined2 local_8;
  undefined2 local_6;
  
  do {
    uVar1 = *(ushort *)((int)param_1 + 0x26);
    bVar2 = true;
    local_14 = 0;
    if (uVar1 == 0) {
      return;
    }
    do {
      local_18 = 0;
      iVar11 = (local_14 & 0xffff) * 0x38;
      local_1c = (uint)*(ushort *)(iVar11 + 0x12 + *param_1);
      if (local_1c != 0) {
        do {
          pbVar3 = FUN_00424210((void *)(*param_1 + iVar11),(ushort)local_18);
          puVar4 = FUN_004238a0(param_1 + 5,&local_6,pbVar3);
          if (*puVar4 != 0xffff) {
            iVar10 = 0;
            iVar9 = (uint)*puVar4 * 0x38;
            uVar5 = (uint)*(ushort *)(iVar9 + 0x12 + *param_1);
            if (uVar5 != 0) {
              do {
                piVar6 = (int *)FUN_00424210((void *)(*param_1 + iVar9),(ushort)iVar10);
                psVar7 = FUN_004238a0((void *)(*param_1 + iVar11),&local_8,(byte *)piVar6);
                if (*psVar7 == -1) {
                  pbVar3 = FUN_00424210(param_1 + 5,(ushort)local_14);
                  uVar8 = FUN_0041e3a0((byte *)piVar6,pbVar3);
                  if (uVar8 == 0) {
                    Warning("Encountered a circular dependency with library %s!\n");
                  }
                  else {
                    bVar2 = false;
                    FUN_00423690((void *)(*param_1 + iVar11),&local_a,piVar6);
                    local_1c = (uint)*(ushort *)(iVar11 + 0x12 + *param_1);
                  }
                }
                iVar10 = iVar10 + 1;
              } while (iVar10 < (int)uVar5);
            }
          }
          local_18 = local_18 + 1;
        } while (local_18 < (int)local_1c);
      }
      local_14 = local_14 + 1;
    } while ((int)local_14 < (int)(uint)uVar1);
  } while (!bVar2);
  return;
}



undefined4 __fastcall FUN_00405b20(int param_1)

{
  ushort uVar1;
  undefined4 in_EAX;
  char *pcVar2;
  uint uVar3;
  ushort uVar4;
  int iVar5;
  int iVar6;
  
  iVar6 = 0;
  if (0 < *(int *)(param_1 + 0x24)) {
    do {
      in_EAX = (**(code **)**(undefined4 **)(*(int *)(param_1 + 0x18) + iVar6 * 4))(FUN_00405990);
      if ((char)in_EAX == '\0') {
        uVar1 = *(ushort *)(param_1 + 0x50);
        goto LAB_00405b62;
      }
      iVar6 = iVar6 + 1;
    } while (iVar6 < *(int *)(param_1 + 0x24));
  }
  return CONCAT31((int3)((uint)in_EAX >> 8),1);
  while (uVar1 = *(ushort *)(*(int *)(param_1 + 0x44) + (uint)uVar4 * 0x10), uVar1 != 0xffff) {
LAB_00405b62:
    uVar4 = uVar1;
    if (uVar4 == 0xffff) break;
  }
  uVar3 = (uint)uVar4;
  if (uVar3 != 0xffff) {
    iVar5 = *(int *)(param_1 + 0x44);
    do {
      if (*(int *)(iVar5 + 0xc + uVar3 * 0x10) == iVar6) {
        pcVar2 = *(char **)(*(int *)(param_1 + 0x44) + 8 + uVar3 * 0x10);
        goto LAB_00405bb6;
      }
      uVar3 = FUN_004090b0((void *)(param_1 + 0x40),uVar3);
      iVar5 = *(int *)(param_1 + 0x44);
      uVar3 = uVar3 & 0xffff;
    } while (uVar3 != 0xffff);
  }
  pcVar2 = "(Unknown)";
LAB_00405bb6:
  uVar3 = Warning("System (%s) failed during stage %s\n",pcVar2,PTR_s_CONNECTION_00447044);
  return uVar3 & 0xffffff00;
}



int FUN_00405bf0(undefined4 param_1,undefined4 param_2,int param_3,int param_4,int param_5,
                int param_6)

{
  int iVar1;
  byte bVar2;
  
  bVar2 = (char)param_3 == '\0';
  if ((char)param_6 != '\0') {
    bVar2 = bVar2 | 2;
  }
  iVar1 = Plat_CreateWindow(param_1,param_2,param_4,param_5,bVar2);
  if (iVar1 == 0) {
    return 0;
  }
  Plat_GetDesktopResolution(&param_3,&param_6);
  param_3 = (param_3 - param_4) / 2;
  if (param_3 < 0) {
    param_3 = 0;
  }
  param_6 = (param_6 - param_5) / 2;
  if (param_6 < 0) {
    param_6 = 0;
  }
  Plat_SetWindowPos(iVar1,param_3,param_6);
  return iVar1;
}



int __thiscall FUN_00405c80(void *this,int param_1)

{
  uint uVar1;
  int iVar2;
  int iVar3;
  uint uVar4;
  int local_c [2];
  
  if (param_1 != 0) {
    local_c[0] = param_1;
    uVar1 = FUN_0040b090((void *)((int)this + 0x40),local_c);
    if ((short)(uVar1 & 0xffff) != -1) {
      return *(int *)(*(int *)((int)this + 0x18) +
                     *(int *)(*(int *)((int)this + 0x44) + 0xc + (uVar1 & 0xffff) * 0x10) * 4);
    }
  }
  uVar1 = 0;
  if (0 < *(int *)((int)this + 0x24)) {
    uVar4 = 0;
    do {
      iVar2 = (**(code **)(**(int **)(*(int *)((int)this + 0x18) + uVar4 * 4) + 8))(param_1);
      if (iVar2 != 0) {
        return iVar2;
      }
      uVar1 = uVar1 + 1;
      uVar4 = uVar1 & 0xffff;
    } while ((int)uVar4 < *(int *)((int)this + 0x24));
  }
  iVar2 = *(int *)((int)this + 0x38);
  uVar1 = 0;
  if (0 < iVar2) {
    uVar4 = 0;
    do {
      iVar3 = (**(code **)(*(int *)((int)this + 0x2c) + uVar4 * 4))(param_1,0);
      if (iVar3 != 0) {
        return iVar3;
      }
      uVar1 = uVar1 + 1;
      uVar4 = uVar1 & 0xffff;
    } while ((int)uVar4 < iVar2);
  }
  if ((*(void **)((int)this + 0x5c) != (void *)0x0) &&
     (iVar2 = FUN_00405c80(*(void **)((int)this + 0x5c),param_1), iVar2 != 0)) {
    return iVar2;
  }
  return 0;
}



undefined4 __thiscall FUN_00405d30(void *this,int param_1)

{
  ushort uVar1;
  ushort uVar2;
  int iVar3;
  uint uVar4;
  
  uVar2 = *(ushort *)((int)this + 0x50);
  do {
    uVar1 = uVar2;
    uVar4 = (uint)uVar1;
    if (uVar1 == 0xffff) break;
    uVar2 = *(ushort *)(*(int *)((int)this + 0x44) + uVar4 * 0x10);
  } while (uVar2 != 0xffff);
  if (uVar1 != 0xffff) {
    iVar3 = *(int *)((int)this + 0x44);
    do {
      if (*(int *)(iVar3 + 0xc + uVar4 * 0x10) == param_1) {
        return *(undefined4 *)(*(int *)((int)this + 0x44) + 8 + uVar4 * 0x10);
      }
      uVar4 = FUN_004090b0((void *)((int)this + 0x40),uVar4);
      uVar4 = uVar4 & 0xffff;
    } while ((short)uVar4 != -1);
  }
  return 0;
}



undefined4 __fastcall FUN_00405dc0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x60);
}



undefined * FUN_00405dd0(void)

{
  return FUN_00405990;
}



void __thiscall FUN_00405de0(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar2 = *(uint *)((int)this + 4);
  uVar4 = param_1 + uVar2;
  if (iVar1 == 0) {
    if (uVar2 == 0) {
      uVar2 = 1;
      if (1 < (int)uVar4) {
        uVar2 = uVar4;
      }
    }
    else {
      if ((int)uVar4 <= (int)uVar2) goto LAB_00405e43;
      do {
        uVar2 = uVar2 * 2;
      } while ((int)uVar2 < (int)uVar4);
    }
  }
  else {
    uVar2 = ((int)(uVar4 - 1) / iVar1 + 1) * iVar1;
  }
  if ((int)uVar2 < (int)uVar4) {
    if ((uVar2 == 0) && (0x7fffffff < uVar4)) {
      uVar2 = 0xffffffff;
    }
    else {
      do {
        uVar2 = (int)(uVar2 + uVar4) / 2;
      } while ((int)uVar2 < (int)uVar4);
    }
  }
LAB_00405e43:
  *(uint *)((int)this + 4) = uVar2;
                    // WARNING: Load size is inaccurate
  if (*this == 0) {
    uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar2 * 0x38);
    *(undefined4 *)this = uVar3;
    return;
  }
                    // WARNING: Load size is inaccurate
  uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this);
  *(undefined4 *)this = uVar3;
  return;
}



int __fastcall FUN_00405e90(int param_1)

{
  ushort uVar1;
  int iVar2;
  char *pcVar3;
  uint uVar4;
  ushort uVar5;
  int iVar6;
  int iVar7;
  
  iVar7 = 0;
  if (0 < *(int *)(param_1 + 0x24)) {
    do {
      iVar2 = (**(code **)(**(int **)(*(int *)(param_1 + 0x18) + iVar7 * 4) + 0xc))();
      iVar6 = iVar7;
      if (iVar2 != 1) goto joined_r0x00405ecd;
      iVar7 = iVar7 + 1;
    } while (iVar7 < *(int *)(param_1 + 0x24));
  }
  return 1;
joined_r0x00405ecd:
  while (0 < iVar6) {
    (**(code **)(**(int **)(*(int *)(param_1 + 0x18) + (iVar6 + -1) * 4) + 0x10))();
    iVar6 = iVar6 + -1;
  }
  uVar1 = *(ushort *)(param_1 + 0x50);
  do {
    uVar5 = uVar1;
    if (uVar5 == 0xffff) break;
    uVar1 = *(ushort *)(*(int *)(param_1 + 0x44) + (uint)uVar5 * 0x10);
  } while (uVar1 != 0xffff);
  uVar4 = (uint)uVar5;
  if (uVar4 != 0xffff) {
    iVar6 = *(int *)(param_1 + 0x44);
    do {
      if (*(int *)(iVar6 + 0xc + uVar4 * 0x10) == iVar7) {
        pcVar3 = *(char **)(*(int *)(param_1 + 0x44) + 8 + uVar4 * 0x10);
        goto LAB_00405f3d;
      }
      uVar4 = FUN_004090b0((void *)(param_1 + 0x40),uVar4);
      iVar6 = *(int *)(param_1 + 0x44);
      uVar4 = uVar4 & 0xffff;
    } while (uVar4 != 0xffff);
  }
  pcVar3 = "(Unknown)";
LAB_00405f3d:
  Warning("System (%s) failed during stage %s\n",pcVar3,PTR_s_INITIALIZATION_0044704c);
  return iVar2;
}



int __thiscall FUN_00405f70(void *this,int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  
  if (param_2 != 0) {
    if (*(int *)((int)this + 4) < *(int *)((int)this + 0xc) + param_2) {
      FUN_00405de0(this,(*(int *)((int)this + 0xc) - *(int *)((int)this + 4)) + param_2);
    }
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + param_2;
    iVar1 = (*(int *)((int)this + 0xc) - param_1) - param_2;
                    // WARNING: Load size is inaccurate
    iVar2 = *this;
    *(int *)((int)this + 0x10) = iVar2;
    if (0 < iVar1) {
      if (param_2 < 1) {
        return param_1;
      }
      FID_conflict__memcpy
                ((void *)(iVar2 + (param_1 + param_2) * 0x38),(void *)(iVar2 + param_1 * 0x38),
                 iVar1 * 0x38);
    }
    if (0 < param_2) {
      iVar2 = param_1 * 0x38;
      do {
                    // WARNING: Load size is inaccurate
        if ((void *)(*this + iVar2) != (void *)0x0) {
          FUN_00423470((void *)(*this + iVar2),0,0x20,0);
        }
        iVar2 = iVar2 + 0x38;
        param_2 = param_2 + -1;
      } while (param_2 != 0);
    }
  }
  return param_1;
}



uint __fastcall FUN_00406030(void *param_1)

{
  char **ppcVar1;
  int *piVar2;
  char *pcVar3;
  int *piVar4;
  int iVar5;
  char **ppcVar6;
  byte bVar7;
  int iVar8;
  uint uVar9;
  int local_64;
  undefined4 uStack96;
  uint uStack92;
  int iStack88;
  int local_54;
  undefined local_50 [56];
  int *local_18;
  int local_14;
  short local_e;
  ushort local_c [2];
  ushort local_8 [2];
  
  local_54 = 0;
  local_64 = 0;
  uStack96 = 0;
  uStack92 = 0x20;
  iStack88 = 0;
  FUN_00423470(local_50,0,0x20,1);
  local_14 = 0;
  if (0 < *(int *)((int)param_1 + 0x24)) {
    do {
      piVar2 = *(int **)(*(int *)((int)param_1 + 0x18) + local_14 * 4);
      piVar4 = (int *)FUN_00405d30(param_1,local_14);
      local_18 = piVar4;
      FUN_00423690(local_50,(short *)local_8,piVar4);
      if ((iStack88 <= (int)(uint)local_8[0]) && (iVar5 = local_8[0] + 1, iStack88 < iVar5)) {
        FUN_00405f70(&local_64,iStack88,iVar5 - iStack88);
      }
      ppcVar6 = (char **)(**(code **)(*piVar2 + 0x14))();
      if (ppcVar6 != (char **)0x0) {
        pcVar3 = ppcVar6[1];
        while ((pcVar3 != (char *)0x0 && (*pcVar3 != '\0'))) {
          FUN_00423690(local_50,(short *)local_c,piVar4);
          uVar9 = (uint)local_c[0];
          if ((iStack88 <= (int)uVar9) && (iStack88 < (int)(uVar9 + 1))) {
            FUN_00405f70(&local_64,iStack88,(uVar9 + 1) - iStack88);
          }
          FUN_00423690((void *)(local_64 + uVar9 * 0x38),&local_e,(int *)ppcVar6[1]);
          iVar5 = FUN_00405990((int)ppcVar6[1],(uint *)0x0);
          if (iVar5 == 0) {
            uVar9 = FUN_004062b0(param_1,*ppcVar6);
            iVar5 = FUN_00405740(param_1,uVar9,ppcVar6[1]);
            if (iVar5 == 0) {
              Warning("Unable to load interface %s from %s (Dependency of %s)\n",ppcVar6[1],*ppcVar6
                      ,local_18);
              bVar7 = 0;
              goto LAB_00406185;
            }
          }
          ppcVar1 = ppcVar6 + 3;
          ppcVar6 = ppcVar6 + 2;
          piVar4 = local_18;
          pcVar3 = *ppcVar1;
        }
      }
      local_14 = local_14 + 1;
    } while (local_14 < *(int *)((int)param_1 + 0x24));
  }
  FUN_004059c0(&local_64);
  FUN_00406600(param_1,&local_64);
  bVar7 = 1;
LAB_00406185:
  FUN_00423560((int)local_50);
  iVar5 = iStack88 + -1;
  if (-1 < iVar5) {
    iVar8 = iVar5 * 0x38;
    do {
      FUN_00423560(iVar8 + local_64);
      iVar5 = iVar5 + -1;
      iVar8 = iVar8 + -0x38;
    } while (-1 < iVar5);
  }
  iStack88 = 0;
  if (-1 < (int)uStack92) {
    if (local_64 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_64);
      local_64 = 0;
    }
    uStack96 = 0;
  }
  if ((-1 < (int)uStack92) && (local_64 != 0)) {
    local_54 = local_64;
    uStack92 = (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_64);
  }
  return uStack92 & 0xffffff00 | (uint)bVar7;
}



int __thiscall FUN_00406230(void *this,int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if (param_1 == 0) {
    Warning("AppFramework : Unable to load module %p!\n",0);
    return -1;
  }
  iVar2 = *(int *)((int)this + 0x10) + -1;
  if (-1 < iVar2) {
    iVar3 = iVar2 * 0xc;
    do {
      iVar1 = *(int *)(iVar3 + 4 + *(int *)((int)this + 4));
      if ((iVar1 != 0) && (iVar1 == param_1)) {
        return iVar2;
      }
      iVar3 = iVar3 + -0xc;
      iVar2 = iVar2 + -1;
    } while (-1 < iVar2);
  }
  iVar2 = FUN_00405940((int *)((int)this + 4));
  *(undefined4 *)(*(int *)((int)this + 4) + iVar2 * 0xc) = 0;
  *(int *)(*(int *)((int)this + 4) + 4 + iVar2 * 0xc) = param_1;
  *(undefined4 *)(*(int *)((int)this + 4) + 8 + iVar2 * 0xc) = 0;
  return iVar2;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe
// WARNING: Unable to track spacebase fully for stack

int __thiscall FUN_004062b0(void *this,char *param_1)

{
  int *piVar1;
  code *pcVar2;
  int iVar3;
  uint uVar4;
  undefined4 uVar5;
  undefined *puVar6;
  undefined *puVar7;
  int iVar8;
  int iVar9;
  char *apcStackY40 [2];
  byte *pbStackY32;
  undefined *local_c;
  int local_8;
  
  pbStackY32 = (byte *)0x4062c4;
  iVar3 = FUN_0041e440(param_1);
  local_8 = iVar3 + 1;
  iVar3 = -(iVar3 + 0x10U & 0xfffffff0);
  local_c = &stack0xffffffe8 + iVar3;
  *(int *)(&stack0xffffffe4 + iVar3) = local_8;
  *(undefined **)((int)&pbStackY32 + iVar3) = &stack0xffffffe8 + iVar3;
  *(char **)((int)apcStackY40 + iVar3 + 4) = param_1;
  *(undefined4 *)((int)apcStackY40 + iVar3) = 0x4062e5;
  FUN_0041d930(*(char **)((int)apcStackY40 + iVar3 + 4),*(char **)((int)&pbStackY32 + iVar3),
               *(int *)(&stack0xffffffe4 + iVar3));
  iVar8 = *(int *)((int)this + 0x10) + -1;
  if (-1 < iVar8) {
    iVar9 = iVar8 * 0xc;
    do {
      if (*(int *)(iVar9 + 8 + *(int *)((int)this + 4)) != 0) {
        *(undefined4 *)(&stack0xffffffe4 + iVar3) =
             *(undefined4 *)(iVar9 + 8 + *(int *)((int)this + 4));
        *(undefined **)((int)&pbStackY32 + iVar3) = local_c;
        *(undefined4 *)((int)apcStackY40 + iVar3 + 4) = 0x40630a;
        uVar4 = FUN_0041e3a0(*(byte **)((int)&pbStackY32 + iVar3),
                             *(byte **)(&stack0xffffffe4 + iVar3));
        if (uVar4 == 0) {
          return iVar8;
        }
      }
      iVar9 = iVar9 + -0xc;
      iVar8 = iVar8 + -1;
    } while (-1 < iVar8);
  }
                    // WARNING: Load size is inaccurate
  iVar8 = *this;
  *(char **)(&stack0xffffffe4 + iVar3) = param_1;
  pcVar2 = *(code **)(iVar8 + 0x28);
  puVar6 = (undefined *)((int)&pbStackY32 + iVar3);
  *(undefined4 *)((int)&pbStackY32 + iVar3) = 0x406322;
  iVar3 = (*pcVar2)();
  if (iVar3 != 0) {
    piVar1 = (int *)((int)this + 4);
    *(undefined4 *)(puVar6 + -4) = 0x40635f;
    iVar9 = FUN_00405940(piVar1);
    iVar8 = *piVar1;
    *(int *)(puVar6 + -4) = local_8;
    *(int *)(iVar8 + iVar9 * 0xc) = iVar3;
    *(undefined4 *)(*piVar1 + 4 + iVar9 * 0xc) = 0;
    pcVar2 = *(code **)(**(int **)g_pMemAlloc_exref + 4);
    puVar7 = puVar6 + -8;
    *(undefined4 *)(puVar6 + -8) = 0x406386;
    uVar5 = (*pcVar2)();
    iVar3 = *piVar1;
    *(int *)(puVar7 + -4) = local_8;
    *(undefined **)(puVar7 + -8) = local_c;
    *(undefined4 *)(iVar3 + 8 + iVar9 * 0xc) = uVar5;
    *(undefined4 *)(puVar7 + -0xc) = *(undefined4 *)(*piVar1 + 8 + iVar9 * 0xc);
    *(undefined4 *)(puVar7 + -0x10) = 0x40639d;
    FUN_0041e1d0(*(char **)(puVar7 + -0xc),*(int *)(puVar7 + -8),*(int *)(puVar7 + -4));
    return iVar9;
  }
  *(char **)(puVar6 + -4) = param_1;
  *(char **)(puVar6 + -8) = "AppFramework : Unable to load module %s!\n";
  *(undefined4 *)(puVar6 + -0xc) = 0x406335;
  Warning();
  return -1;
}



void FUN_004063b0(char *param_1)

{
  FUN_0041e800(param_1);
  return;
}



void __thiscall FUN_004063d0(void *this,undefined4 param_1)

{
  (**(code **)(**(int **)((int)this + 100) + 0x74))(param_1,0,1);
  return;
}



int __cdecl FUN_004063f0(char *param_1)

{
  char cVar1;
  int iVar2;
  int iVar3;
  char *pcVar4;
  
  if (param_1 != (char *)0x0) {
    pcVar4 = param_1;
    do {
      cVar1 = *pcVar4;
      pcVar4 = pcVar4 + 1;
    } while (cVar1 != '\0');
    iVar2 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(pcVar4 + (1 - (int)(param_1 + 1)));
    if (iVar2 != 0) {
      iVar3 = iVar2 - (int)param_1;
      do {
        cVar1 = *param_1;
        param_1 = param_1 + 1;
        param_1[iVar3 + -1] = cVar1;
      } while (cVar1 != '\0');
      return iVar2;
    }
  }
  return 0;
}



void __fastcall FUN_00406440(int *param_1)

{
  int iVar1;
  
  DAT_0044a680 = param_1;
  switch(param_1[0x18]) {
  default:
    param_1[0x18] = 7;
    (**(code **)(*param_1 + 0x10))();
    iVar1 = param_1[9];
    param_1[0x18] = 8;
    while (iVar1 = iVar1 + -1, -1 < iVar1) {
      (**(code **)(**(int **)(param_1[6] + iVar1 * 4) + 0x10))();
    }
    param_1[0x18] = 9;
    (**(code **)(*param_1 + 0x14))();
  case 3:
  case 4:
    iVar1 = param_1[9];
    param_1[0x18] = 10;
    while (iVar1 = iVar1 + -1, -1 < iVar1) {
      (**(code **)(**(int **)(param_1[6] + iVar1 * 4) + 4))();
    }
  case 0:
  case 1:
  case 2:
    param_1[0x18] = 0xb;
    param_1[9] = 0;
    FUN_00403550(param_1 + 0x10);
    LoggingSystem_ResetCurrentLoggingState();
    LoggingSystem_RegisterLoggingListener(PTR_PTR_0044706c);
    FUN_004069b0((int)param_1);
                    // WARNING: Could not recover jumptable at 0x004064e6. Too many branches
                    // WARNING: Treating indirect jump as call
    (**(code **)(*param_1 + 0x18))();
    return;
  }
}



undefined4 __fastcall FUN_00406500(int *param_1)

{
  char cVar1;
  uint uVar2;
  undefined4 uVar3;
  int iVar4;
  
  DAT_0044a680 = param_1;
  param_1[0x18] = 0;
  cVar1 = (**(code **)*param_1)();
  if (cVar1 != '\0') {
    param_1[0x18] = 1;
    uVar2 = FUN_00406030(param_1);
    if ((char)uVar2 != '\0') {
      param_1[0x18] = 2;
      uVar3 = FUN_00405b20((int)param_1);
      if ((char)uVar3 != '\0') {
        param_1[0x18] = 3;
        cVar1 = (**(code **)(*param_1 + 4))();
        if (cVar1 != '\0') {
          param_1[0x18] = 4;
          iVar4 = FUN_00405e90((int)param_1);
          if (iVar4 == 1) {
            param_1[0x18] = 5;
            cVar1 = (**(code **)(*param_1 + 8))();
            if (cVar1 != '\0') {
              param_1[0x18] = 6;
              return 1;
            }
          }
        }
      }
    }
  }
  return 0xffffffff;
}



undefined4 __fastcall FUN_00406590(int *param_1)

{
  undefined4 uVar1;
  
  DAT_0044a680 = param_1;
  uVar1 = FUN_00406500(param_1);
  if (param_1[0x18] == 6) {
    uVar1 = (**(code **)(*param_1 + 0xc))();
  }
  FUN_00406440(param_1);
  DAT_0044a680 = (int *)param_1[0x17];
  return uVar1;
}



void __thiscall FUN_004065d0(void *this,undefined4 param_1,undefined4 param_2)

{
  *(undefined4 *)((int)this + 100) = param_1;
  *(undefined4 *)((int)this + 0x5c) = param_2;
  return;
}



void __fastcall thunk_FUN_00406440(int *param_1)

{
  FUN_00406440(param_1);
  return;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe
// WARNING: Unable to track spacebase fully for stack

void __thiscall FUN_00406600(void *this,int *param_1)

{
  undefined2 uVar1;
  ushort uVar2;
  undefined4 uVar3;
  int iVar4;
  int iVar5;
  void *pvVar6;
  char cVar7;
  uint uVar8;
  undefined1 *puVar9;
  short *psVar10;
  uint uVar11;
  uint uVar12;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  uint *puVar13;
  int iVar14;
  uint uVar15;
  undefined4 *puVar16;
  int *piVar17;
  undefined4 *puVar18;
  ushort uVar19;
  int iVar20;
  undefined4 uStack68;
  void *pvStack64;
  ushort *puStack60;
  int *piStack56;
  undefined1 *local_28;
  int local_24;
  int *local_20;
  uint local_1c;
  void *local_18;
  undefined4 *local_14;
  undefined local_e [2];
  ushort local_c [3];
  char local_5;
  
  uVar15 = (uint)*(ushort *)((int)param_1 + 0x26);
  piStack56 = (int *)0x406628;
  iVar5 = -(uVar15 * 4 + 0xf & 0xfffffff0);
  local_14 = (undefined4 *)(&stack0xffffffcc + iVar5);
  puVar18 = (undefined4 *)(&stack0xffffffcc + iVar5);
  uVar11 = 0;
  DAT_0044a67c = param_1;
  local_1c = uVar15;
  local_18 = this;
  if (uVar15 != 0) {
    local_14 = (undefined4 *)(&stack0xffffffcc + iVar5);
    puVar18 = (undefined4 *)(&stack0xffffffcc + iVar5);
    if (7 < uVar15) {
      uVar8 = uVar15 & 0x80000007;
      if (false) {
        uVar8 = (uVar8 - 1 | 0xfffffff8) + 1;
      }
      uVar12 = uVar11;
      puVar13 = (uint *)(&stack0xffffffcc + iVar5);
      local_14 = (undefined4 *)(&stack0xffffffcc + iVar5);
      do {
        uVar11 = uVar12 + 8;
        *puVar13 = uVar12;
        puVar13[1] = uVar12 + 1;
        puVar13[2] = uVar12 + 2;
        puVar13[3] = uVar12 + 3;
        puVar13[4] = uVar12 + 4;
        puVar13[5] = uVar12 + 5;
        puVar13[6] = uVar12 + 6;
        puVar13[7] = uVar12 + 7;
        uVar12 = uVar11;
        puVar13 = puVar13 + 8;
      } while ((int)uVar11 < (int)(uVar15 - uVar8));
    }
    for (; (int)uVar11 < (int)uVar15; uVar11 = uVar11 + 1) {
      *(uint *)(&stack0xffffffcc + uVar11 * 4 + iVar5) = uVar11;
      puVar18 = (undefined4 *)(&stack0xffffffcc + iVar5);
    }
  }
  do {
    uVar11 = uVar11 & 0xffffff00;
    local_5 = 0;
    local_24 = 1;
    uVar8 = local_1c;
    puVar16 = puVar18;
    if ((int)uVar15 < 2) break;
    do {
      puVar16 = puVar16 + 1;
      iVar20 = 0;
      if (0 < local_24) {
        do {
          uVar1 = *(undefined2 *)puVar16;
          *(uint *)((int)&piStack56 + iVar5) = uVar11;
          *(undefined2 *)((int)&piStack56 + iVar5) = uVar1;
          *(undefined4 *)((int)&puStack60 + iVar5) = 0x4066e7;
          local_28 = FUN_00424210(DAT_0044a67c + 5,*(ushort *)((int)&piStack56 + iVar5));
          *(undefined4 *)((int)&piStack56 + iVar5) = extraout_ECX;
          *(undefined2 *)((int)&piStack56 + iVar5) = *(undefined2 *)(local_14 + iVar20);
          *(undefined4 *)((int)&puStack60 + iVar5) = 0x406705;
          puVar9 = FUN_00424210(DAT_0044a67c + 5,*(ushort *)((int)&piStack56 + iVar5));
          *(undefined1 **)((int)&piStack56 + iVar5) = puVar9;
          local_20 = DAT_0044a67c;
          *(ushort **)((int)&puStack60 + iVar5) = local_c;
          *(undefined4 *)((int)&pvStack64 + iVar5) = 0x40671b;
          piVar17 = local_20;
          FUN_00423690(DAT_0044a67c + 5,*(short **)((int)&puStack60 + iVar5),
                       *(int **)((int)&piStack56 + iVar5));
          uVar11 = (uint)local_c[0];
          iVar14 = local_20[3];
          if ((iVar14 <= (int)uVar11) && (iVar14 < (int)(uVar11 + 1))) {
            *(uint *)((int)&piStack56 + iVar5) = (uVar11 + 1) - iVar14;
            *(int *)((int)&puStack60 + iVar5) = iVar14;
            *(undefined4 *)((int)&pvStack64 + iVar5) = 0x40673b;
            FUN_00405f70(piVar17,*(int *)((int)&puStack60 + iVar5),*(int *)((int)&piStack56 + iVar5)
                        );
          }
          iVar14 = *local_20;
          *(undefined1 **)((int)&piStack56 + iVar5) = local_28;
          *(undefined **)((int)&puStack60 + iVar5) = local_e;
          *(undefined4 *)((int)&pvStack64 + iVar5) = 0x406758;
          puVar18 = local_14;
          psVar10 = FUN_004238a0((void *)(iVar14 + uVar11 * 0x38),
                                 *(undefined2 **)((int)&puStack60 + iVar5),
                                 *(byte **)((int)&piStack56 + iVar5));
          if (*psVar10 == -1) {
            uVar11 = CONCAT31(0xff,local_5);
          }
          else {
            uVar3 = *puVar16;
            *puVar16 = local_14[iVar20];
            puVar18[iVar20] = uVar3;
            uVar11 = CONCAT31((int3)((uint)uVar3 >> 8),1);
            local_5 = 1;
          }
          iVar20 = iVar20 + 1;
          uVar8 = local_1c;
        } while (iVar20 < local_24);
      }
      local_24 = local_24 + 1;
    } while (local_24 < (int)uVar8);
    uVar15 = local_1c;
  } while ((char)uVar11 != '\0');
  DAT_0044a67c = (int *)0x0;
  do {
    iVar20 = 1;
    cVar7 = '\x01';
    local_5 = '\x01';
    if ((int)uVar15 < 2) break;
    do {
      iVar14 = puVar18[iVar20 + -1];
      iVar4 = puVar18[iVar20];
      if (iVar4 <= iVar14) {
        *(int *)((int)&piStack56 + iVar5) = iVar14;
        piVar17 = param_1 + 5;
        *(short *)((int)&piStack56 + iVar5) = (short)iVar14;
        *(undefined4 *)((int)&puStack60 + iVar5) = 0x4067e4;
        local_28 = FUN_00424210(piVar17,*(ushort *)((int)&piStack56 + iVar5));
        *(undefined4 *)((int)&piStack56 + iVar5) = extraout_ECX_00;
        *(short *)((int)&piStack56 + iVar5) = (short)iVar4;
        *(undefined4 *)((int)&puStack60 + iVar5) = 0x4067f4;
        puVar9 = FUN_00424210(piVar17,*(ushort *)((int)&piStack56 + iVar5));
        *(undefined1 **)((int)&piStack56 + iVar5) = puVar9;
        *(ushort **)((int)&puStack60 + iVar5) = local_c;
        *(undefined4 *)((int)&pvStack64 + iVar5) = 0x406800;
        FUN_00423690(piVar17,*(short **)((int)&puStack60 + iVar5),*(int **)((int)&piStack56 + iVar5)
                    );
        uVar11 = (uint)local_c[0];
        iVar14 = param_1[3];
        if ((iVar14 <= (int)uVar11) && (iVar14 < (int)(uVar11 + 1))) {
          *(uint *)((int)&piStack56 + iVar5) = (uVar11 + 1) - iVar14;
          *(int *)((int)&puStack60 + iVar5) = iVar14;
          *(undefined4 *)((int)&pvStack64 + iVar5) = 0x406820;
          FUN_00405f70(param_1,*(int *)((int)&puStack60 + iVar5),*(int *)((int)&piStack56 + iVar5));
        }
        iVar14 = *param_1;
        *(undefined1 **)((int)&piStack56 + iVar5) = local_28;
        *(undefined **)((int)&puStack60 + iVar5) = local_e;
        *(undefined4 *)((int)&pvStack64 + iVar5) = 0x40683a;
        psVar10 = FUN_004238a0((void *)(iVar14 + uVar11 * 0x38),
                               *(undefined2 **)((int)&puStack60 + iVar5),
                               *(byte **)((int)&piStack56 + iVar5));
        puVar18 = local_14;
        cVar7 = local_5;
        if (*psVar10 == -1) {
          uVar3 = local_14[iVar20];
          local_14[iVar20] = local_14[iVar20 + -1];
          local_14[iVar20 + -1] = uVar3;
          local_5 = '\0';
          cVar7 = '\0';
        }
      }
      iVar20 = iVar20 + 1;
    } while (iVar20 < (int)local_1c);
    uVar15 = local_1c;
  } while (cVar7 == '\0');
  *(undefined4 *)((int)&piStack56 + iVar5) = 0x406882;
  iVar20 = -(uVar15 * 4 + 0xf & 0xfffffff0);
  *(uint *)((int)&piStack56 + iVar20 + iVar5) = uVar15 * 4;
  *(undefined4 *)((int)&puStack60 + iVar20 + iVar5) = *(undefined4 *)((int)local_18 + 0x18);
  *(undefined **)((int)&pvStack64 + iVar20 + iVar5) = &stack0xffffffcc + iVar20 + iVar5;
  *(undefined4 *)((int)&uStack68 + iVar20 + iVar5) = 0x406898;
  FID_conflict__memcpy
            (*(void **)((int)&pvStack64 + iVar20 + iVar5),
             *(void **)((int)&puStack60 + iVar20 + iVar5),
             *(size_t *)((int)&piStack56 + iVar20 + iVar5));
  iVar14 = 0;
  if (0 < (int)uVar15) {
    do {
      *(undefined4 *)(*(int *)((int)local_18 + 0x18) + iVar14 * 4) =
           *(undefined4 *)(&stack0xffffffcc + puVar18[iVar14] * 4 + iVar20 + iVar5);
      iVar14 = iVar14 + 1;
    } while (iVar14 < (int)uVar15);
  }
  uVar2 = *(ushort *)((int)local_18 + 0x50);
  do {
    uVar19 = uVar2;
    if (uVar19 == 0xffff) break;
    uVar2 = *(ushort *)(*(int *)((int)local_18 + 0x44) + (uint)uVar19 * 0x10);
  } while (uVar2 != 0xffff);
  uVar11 = (uint)uVar19;
  pvVar6 = local_18;
  do {
    if (uVar19 == 0xffff) {
      return;
    }
    iVar14 = 0;
    if (0 < (int)uVar15) {
      do {
        if (local_14[iVar14] == *(int *)(*(int *)((int)pvVar6 + 0x44) + 0xc + uVar11 * 0x10)) {
          *(int *)(*(int *)((int)pvVar6 + 0x44) + 0xc + uVar11 * 0x10) = iVar14;
          break;
        }
        iVar14 = iVar14 + 1;
      } while (iVar14 < (int)uVar15);
    }
    local_18 = pvVar6;
    *(uint *)((int)&piStack56 + iVar20 + iVar5) = uVar11;
    *(undefined4 *)((int)&puStack60 + iVar20 + iVar5) = 0x406927;
    uVar11 = FUN_004090b0((void *)((int)pvVar6 + 0x40),*(uint *)((int)&piStack56 + iVar20 + iVar5));
    uVar11 = uVar11 & 0xffff;
    uVar19 = (ushort)uVar11;
    pvVar6 = local_18;
  } while( true );
}



undefined4 __fastcall thunk_FUN_00406500(int *param_1)

{
  char cVar1;
  uint uVar2;
  undefined4 uVar3;
  int iVar4;
  
  DAT_0044a680 = param_1;
  param_1[0x18] = 0;
  cVar1 = (**(code **)*param_1)();
  if (cVar1 != '\0') {
    param_1[0x18] = 1;
    uVar2 = FUN_00406030(param_1);
    if ((char)uVar2 != '\0') {
      param_1[0x18] = 2;
      uVar3 = FUN_00405b20((int)param_1);
      if ((char)uVar3 != '\0') {
        param_1[0x18] = 3;
        cVar1 = (**(code **)(*param_1 + 4))();
        if (cVar1 != '\0') {
          param_1[0x18] = 4;
          iVar4 = FUN_00405e90((int)param_1);
          if (iVar4 == 1) {
            param_1[0x18] = 5;
            cVar1 = (**(code **)(*param_1 + 8))();
            if (cVar1 != '\0') {
              param_1[0x18] = 6;
              return 1;
            }
          }
        }
      }
    }
  }
  return 0xffffffff;
}



uint __cdecl FUN_00406950(byte **param_1,byte **param_2)

{
  byte bVar1;
  byte *pbVar2;
  byte *pbVar3;
  bool bVar4;
  
  pbVar3 = *param_1;
  if (pbVar3 == (byte *)0x0) {
    return (uint)param_1 & 0xffffff00;
  }
  pbVar2 = *param_2;
  if (pbVar2 == (byte *)0x0) {
    return 1;
  }
  while( true ) {
    bVar1 = *pbVar3;
    bVar4 = bVar1 < *pbVar2;
    if (bVar1 != *pbVar2) break;
    if (bVar1 == 0) {
      return 0;
    }
    bVar1 = pbVar3[1];
    bVar4 = bVar1 < pbVar2[1];
    if (bVar1 != pbVar2[1]) break;
    pbVar3 = pbVar3 + 2;
    pbVar2 = pbVar2 + 2;
    if (bVar1 == 0) {
      return 0;
    }
  }
  return (uint)((int)(-(uint)bVar4 | 1) < 0);
}



void __fastcall FUN_004069b0(int param_1)

{
  HMODULE pHVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = *(int *)(param_1 + 0x10) + -1;
  if (-1 < iVar4) {
    iVar3 = iVar4 * 0xc;
    do {
      pHVar1 = *(HMODULE *)(iVar3 + *(int *)(param_1 + 4));
      if (pHVar1 != (HMODULE)0x0) {
        FUN_0041e9a0(pHVar1);
      }
      iVar2 = *(int *)(*(int *)(param_1 + 4) + 8 + iVar3);
      if (iVar2 != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar2);
      }
      iVar3 = iVar3 + -0xc;
      iVar4 = iVar4 + -1;
    } while (-1 < iVar4);
  }
  *(undefined4 *)(param_1 + 0x10) = 0;
  return;
}



undefined4 * __thiscall FUN_00406a00(void *this,undefined4 param_1)

{
  FUN_00405640(this,0);
  *(undefined4 *)((int)this + 0x68) = param_1;
  *(undefined ***)this = CSteamApplication::vftable;
  *(undefined4 *)((int)this + 100) = 0;
  *(undefined *)((int)this + 0x6c) = 0;
  return (undefined4 *)this;
}



uint __fastcall FUN_00406a30(int *param_1)

{
  uint uVar1;
  int iVar2;
  char local_108 [260];
  
  FUN_00401ae0(0);
  uVar1 = (**(code **)(*param_1 + 0x2c))(local_108,0x104,param_1 + 0x1b);
  if ((char)uVar1 != '\0') {
    iVar2 = VStdLib_GetICVarFactory();
    uVar1 = FUN_00406230(param_1,iVar2);
    FUN_00405740(param_1,uVar1,"VEngineCvar007");
    uVar1 = FUN_004062b0(param_1,local_108);
    iVar2 = FUN_00405740(param_1,uVar1,"VFileSystem017");
    param_1[0x19] = iVar2;
    if (iVar2 != 0) {
      return CONCAT31((int3)((uint)iVar2 >> 8),1);
    }
    uVar1 = Error("Unable to load %s",local_108);
  }
  return uVar1 & 0xffffff00;
}



void __fastcall FUN_00406ad0(int param_1)

{
  *(undefined4 *)(param_1 + 100) = 0;
  return;
}



undefined4 FUN_00406ae0(void)

{
  return DAT_0044a68c;
}



bool FUN_00406af0(char *param_1,uint param_2,undefined *param_3)

{
  int iVar1;
  
  iVar1 = FUN_00401980(param_1,param_2,param_3);
  return (bool)('\x01' - (iVar1 != 0));
}



void __thiscall FUN_00406b10(void *this,undefined4 param_1,undefined4 param_2)

{
  char cVar1;
  
  if (*(char *)((int)this + 4) == '\0') {
    FUN_00427e81(&DAT_0043b3d4);
  }
  if (*(char *)((int)this + 5) == '\0') {
    cVar1 = Plat_IsInDebugSession();
    if (cVar1 != '\0') {
      Plat_DebugString(param_2);
    }
  }
  return;
}



undefined4 __fastcall FUN_00406b50(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  
  iVar1 = FUN_00401a20(*(int **)(param_1 + 100));
  if (iVar1 != 0) {
    return 0;
  }
  FUN_004065d0(*(void **)(param_1 + 0x68),*(undefined4 *)(param_1 + 100),param_1);
  uVar2 = FUN_00406590(*(int **)(param_1 + 0x68));
  return uVar2;
}



undefined FUN_00406b80(void)

{
  return 1;
}



void __cdecl FUN_00406b90(undefined4 param_1)

{
  DAT_0044a68c = param_1;
  return;
}



void __fastcall FUN_00406ba0(int *param_1)

{
  (**(code **)(*(int *)param_1[0x1a] + 0x20))();
  thunk_FUN_00406440(param_1);
  return;
}



undefined4 __fastcall FUN_00406bc0(int *param_1)

{
  undefined4 uVar1;
  int iVar2;
  
  uVar1 = thunk_FUN_00406500(param_1);
  iVar2 = FUN_00405dc0((int)param_1);
  if (iVar2 != 6) {
    return uVar1;
  }
  iVar2 = FUN_00401a20((int *)param_1[0x19]);
  if (iVar2 != 0) {
    return 0;
  }
  FUN_004065d0((void *)param_1[0x1a],param_1[0x19],param_1);
                    // WARNING: Could not recover jumptable at 0x00406c03. Too many branches
                    // WARNING: Treating indirect jump as call
  uVar1 = (**(code **)(*(int *)param_1[0x1a] + 0x1c))();
  return uVar1;
}



undefined4 * __thiscall FUN_00406c10(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixAppSystem::vftable;
  DAT_0044a6a8 = 0;
  FUN_0040af20((undefined4 *)((int)this + 8));
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined FUN_00406c50(void)

{
  return 1;
}



undefined4 FUN_00406c60(void)

{
  return 4;
}



undefined4 __fastcall FUN_00406c70(int param_1)

{
  char cVar1;
  int *piVar2;
  
  Msg("Initialising fixapi\n");
  *(undefined *)(param_1 + 5) = 1;
  FUN_0040ad00();
  cVar1 = SteamAPI_RestartAppIfNecessary(0);
  if (cVar1 != '\0') {
    return 0;
  }
  DAT_0044a698 = DAT_0044a698 + 1;
  if (DAT_0044a69c == '\0') {
    DAT_0044a69c = SteamAPI_InitSafe();
  }
  cVar1 = DAT_0044a69c;
  *(char *)(param_1 + 4) = DAT_0044a69c;
  if (cVar1 == '\0') {
    cVar1 = SteamAPI_InitSafe();
    DAT_0044a69c = cVar1;
    *(char *)(param_1 + 4) = cVar1;
    if (cVar1 == '\0') {
      Error("Steam_Init() failed.");
      FUN_0040b620((void *)(param_1 + 8));
      return 1;
    }
  }
  piVar2 = (int *)SteamClient();
  (**(code **)(*piVar2 + 0x54))(FUN_00406e00);
  FUN_0040b620((void *)(param_1 + 8));
  return 1;
}



undefined __fastcall FUN_00406d10(int param_1)

{
  *(undefined *)(param_1 + 5) = 1;
  return 1;
}



undefined __fastcall FUN_00406d20(int param_1)

{
  return *(undefined *)(param_1 + 4);
}



void FUN_00406d30(undefined4 param_1)

{
  code *pcVar1;
  
  pcVar1 = (code *)FUN_0041e5c0();
  (*pcVar1)(param_1,0);
  return;
}



void FUN_00406d50(undefined *param_1,byte *param_2)

{
  FUN_0041cd60(param_1,param_2);
  return;
}



void __fastcall FUN_00406d70(int param_1)

{
  Msg("Reinitialising fixapi\n");
  FUN_0040b620((void *)(param_1 + 8));
  Msg("Completed reinitialising fixapi\n");
  return;
}



void __fastcall FUN_00406da0(int param_1)

{
  Msg("Shutting down fixapi\n");
  if (*(char *)(param_1 + 4) != '\0') {
    *(undefined *)(param_1 + 4) = 0;
  }
  if ((0 < DAT_0044a698) && (DAT_0044a698 = DAT_0044a698 + -1, DAT_0044a698 == 1)) {
    DAT_0044a698 = 0;
    SteamAPI_Shutdown();
  }
  WSACleanup();
  *(undefined *)(param_1 + 5) = 0;
  return;
}



undefined ** FUN_00406df0(void)

{
  return &PTR_vftable_00447078;
}



void FUN_00406e00(undefined4 param_1)

{
                    // WARNING: Could not recover jumptable at 0x00406e0b. Too many branches
                    // WARNING: Treating indirect jump as call
  Msg();
  return;
}



undefined4 * __fastcall FUN_00406e20(undefined4 *param_1)

{
  param_1[1] = fixapi2_impl::CFixBaseSocket::IFixBaseSocketHandler::vftable;
  *param_1 = fixapi2_impl::CFixBaseAPI<class_fixapi2::IFixClientAPI>::vftable;
  param_1[1] = fixapi2_impl::CFixBaseAPI<class_fixapi2::IFixClientAPI>::vftable;
  FUN_004221a0(param_1 + 7,0,0,0);
  param_1[0x13] = 0;
  param_1[0x14] = 0;
  param_1[0x15] = 0x20;
  param_1[0x16] = 0;
  param_1[0x17] = param_1[0x13];
  FUN_00423470(param_1 + 0x18,0,0x20,1);
  param_1[0x27] = fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixAPIRawCallback>::vftable;
  param_1[0x28] = 0;
  param_1[0x29] = 0;
  param_1[0x2a] = 0;
  param_1[0x2b] = 0;
  param_1[0x2c] = param_1[0x28];
  FUN_0040fdb0(param_1 + 0x6e);
  FUN_00410a40(param_1 + 0x18e);
  FUN_004221a0(param_1 + 0x3a0,0,0,0);
  param_1[0x26] = 0xfffffffe;
  param_1[0x2d] = 0;
  param_1[4] = 0;
  param_1[5] = 0xbf800000;
  param_1[6] = 0xbf800000;
  *(undefined *)(param_1 + 0x2e) = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  return param_1;
}



undefined4 * __fastcall FUN_00406f20(undefined4 *param_1)

{
  undefined4 *puVar1;
  
  FUN_00406e20(param_1);
  puVar1 = param_1 + 0x3ac;
  *puVar1 = fixapi2_impl::IFixUserManager::vftable;
  *param_1 = fixapi2_impl::CFixClientAPI::vftable;
  param_1[1] = fixapi2_impl::CFixClientAPI::vftable;
  *puVar1 = fixapi2_impl::CFixClientAPI::vftable;
  *(undefined *)(param_1 + 0x3af) = 0;
  param_1[0x3ae] =
       CCallResult<class_fixapi2_impl::CFixClientAPI,struct_HTTPRequestCompleted_t>::vftable;
  param_1[0x3b2] = 0;
  param_1[0x3b3] = 0;
  param_1[0x3b4] = 0;
  param_1[0x3b6] = 0;
  param_1[0x3b7] = 0;
  param_1[0x3b0] = 0x835;
  *(undefined *)(param_1 + 0x3b9) = 0;
  param_1[0x3b8] =
       CCallResult<class_fixapi2_impl::CFixClientAPI,struct_HTTPRequestCompleted_t>::vftable;
  param_1[0x3bc] = 0;
  param_1[0x3bd] = 0;
  param_1[0x3be] = 0;
  param_1[0x3c0] = 0;
  param_1[0x3c1] = 0;
  param_1[0x3ba] = 0x835;
  *(undefined *)(param_1 + 0x3c3) = 0;
  param_1[0x3c4] = 0;
  param_1[0x3c2] =
       CCallback<class_fixapi2_impl::CFixClientAPI,struct_GetAuthSessionTicketResponse_t,0>::vftable
  ;
  param_1[0x3c5] = 0;
  param_1[0x3c6] = 0;
  param_1[0x3c7] = 0;
  if (true) {
    param_1[0x3c5] = param_1;
    param_1[0x3c6] = FUN_00409630;
    param_1[0x3c7] = 0;
    SteamAPI_RegisterCallback(param_1 + 0x3c2,0xa3);
  }
  *(undefined *)(param_1 + 0x3c9) = 0;
  param_1[0x3ca] = 0;
  param_1[0x3c8] =
       CCallback<class_fixapi2_impl::CFixClientAPI,struct_MicroTxnAuthorizationResponse_t,0>::
       vftable;
  param_1[0x3cb] = 0;
  param_1[0x3cc] = 0;
  param_1[0x3cd] = 0;
  if (true) {
    param_1[0x3cb] = param_1;
    param_1[0x3cc] = FUN_00409740;
    param_1[0x3cd] = 0;
    SteamAPI_RegisterCallback(param_1 + 0x3c8,0x98);
  }
  *(undefined *)(param_1 + 0x3cf) = 0;
  param_1[0x3d0] = 0;
  param_1[0x3ce] =
       CCallback<class_fixapi2_impl::CFixClientAPI,struct_PersonaStateChange_t,0>::vftable;
  param_1[0x3d1] = 0;
  param_1[0x3d2] = 0;
  param_1[0x3d3] = 0;
  if (true) {
    param_1[0x3d1] = param_1;
    param_1[0x3d2] = FUN_00409850;
    param_1[0x3d3] = 0;
    SteamAPI_RegisterCallback(param_1 + 0x3ce,0x130);
  }
  *(undefined *)(param_1 + 0x3d5) = 0;
  param_1[0x3d6] = 0;
  param_1[0x3d4] =
       CCallback<class_fixapi2_impl::CFixClientAPI,struct_P2PSessionRequest_t,0>::vftable;
  param_1[0x3d7] = 0;
  param_1[0x3d8] = 0;
  param_1[0x3d9] = 0;
  if (true) {
    param_1[0x3d7] = param_1;
    param_1[0x3d8] = FUN_004097c0;
    param_1[0x3d9] = 0;
    SteamAPI_RegisterCallback(param_1 + 0x3d4,0x4b2);
  }
  FUN_0040fbf0(param_1 + 0x3dc,param_1);
  param_1[0x66e] = fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixClientCallback>::vftable;
  param_1[0x66f] = 0;
  param_1[0x670] = 0;
  param_1[0x671] = 0;
  param_1[0x672] = 0;
  param_1[0x673] = param_1[0x66f];
  FUN_00412b50(param_1 + 0x674);
  param_1[0x6cf] = 0;
  param_1[0x6d0] = 0;
  param_1[0x6d1] = 0;
  param_1[0x6d2] = 0;
  param_1[0x6d3] = param_1[0x6cf];
  param_1[0x6d5] = 0;
  param_1[0x6d6] = 0;
  param_1[0x6d7] = 0;
  param_1[0x6d8] = 0;
  param_1[0x6d9] = param_1[0x6d5];
  param_1[0x6db] =
       fixapi2_impl::
       CFixAPIPacketCallbacks<class_fixapi2_impl::CFixClientPacket,class_fixapi2_impl::CFixClientSocket,class_fixapi2_impl::CFixClientAPI>
       ::vftable;
  param_1[0x6dd] = FUN_00408f40;
  param_1[0x6de] = 0;
  param_1[0x6df] = 0;
  param_1[0x6e0] = 0;
  param_1[0x6e1] = 0xffff;
  param_1[0x6e2] = 0xffffffff;
  param_1[0x6e3] = param_1[0x6de];
  param_1[0x6e4] = FUN_00408f40;
  param_1[0x6e5] = 0;
  param_1[0x6e6] = 0;
  param_1[0x6e7] = 0;
  param_1[0x6e8] = 0xffff;
  param_1[0x6e9] = 0xffffffff;
  param_1[0x6ea] = param_1[0x6e5];
  param_1[0x6eb] = fixapi2_impl::CFixUserCache::vftable;
  param_1[0x6ed] = FUN_00408f40;
  param_1[0x6ee] = 0;
  param_1[0x6ef] = 0;
  param_1[0x6f0] = 0;
  param_1[0x6f1] = 0xffff;
  param_1[0x6f2] = 0xffffffff;
  param_1[0x6f3] = param_1[0x6ee];
  param_1[0x6ec] = 0;
  FUN_00407ab0(param_1 + 0x6f6);
  param_1[0x70b] = 0;
  param_1[0x70c] = 0;
  param_1[0x70d] = 0;
  param_1[0x70f] = param_1[0x70b];
  param_1[0x70e] = 0;
  param_1[0x6ec] = puVar1;
  *(undefined *)(param_1 + 0x70a) = 0;
  param_1[0x6f4] = 0;
  param_1[0x6f5] = 0;
  param_1[0x62c] = 0xffffffff;
  param_1[0x3da] = 0;
  *(undefined *)(param_1 + 0x6ce) = 0;
  return param_1;
}



void __fastcall FUN_00407370(undefined4 *param_1)

{
  int *piVar1;
  
  *param_1 = fixapi2_impl::CFixBaseAPI<class_fixapi2::IFixClientAPI>::vftable;
  param_1[1] = fixapi2_impl::CFixBaseAPI<class_fixapi2::IFixClientAPI>::vftable;
  if (-1 < (int)param_1[0x3a2]) {
    if (param_1[0x3a0] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0x3a0]);
      param_1[0x3a0] = 0;
    }
    param_1[0x3a1] = 0;
  }
  FUN_00410d30(param_1 + 0x18e);
  FUN_0040fe90(param_1 + 0x6e);
  piVar1 = param_1 + 0x28;
  param_1[0x27] = fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixAPIRawCallback>::vftable;
  param_1[0x2b] = 0;
  if (-1 < (int)param_1[0x2a]) {
    if (*piVar1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*piVar1);
      *piVar1 = 0;
    }
    param_1[0x29] = 0;
  }
  param_1[0x2c] = *piVar1;
  FUN_0040a350(piVar1);
  FUN_00423560((int)(param_1 + 0x18));
  FUN_0040a350(param_1 + 0x13);
  if (-1 < (int)param_1[9]) {
    if (param_1[7] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[7]);
      param_1[7] = 0;
    }
    param_1[8] = 0;
  }
  return;
}



void __fastcall FUN_00407450(int param_1)

{
  FUN_00412590(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  return;
}



void __fastcall FUN_004074c0(undefined4 *param_1)

{
  int *piVar1;
  
  *param_1 = fixapi2_impl::CFixClientAPI::vftable;
  param_1[1] = fixapi2_impl::CFixClientAPI::vftable;
  param_1[0x3ac] = fixapi2_impl::CFixClientAPI::vftable;
  param_1[0x62c] = 0xffffffff;
  *(undefined *)(param_1 + 0x6ce) = 0;
  FUN_0040a350(param_1 + 0x70b);
  param_1[0x6eb] = fixapi2_impl::CFixUserCache::vftable;
  FUN_00410c50((int)(param_1 + 0x6ed));
  FUN_00410c50((int)(param_1 + 0x6e4));
  param_1[0x6db] =
       fixapi2_impl::
       CFixAPIPacketCallbacks<class_fixapi2_impl::CFixClientPacket,class_fixapi2_impl::CFixClientSocket,class_fixapi2_impl::CFixClientAPI>
       ::vftable;
  FUN_00412590((int)(param_1 + 0x6dd));
  *(undefined2 *)(param_1 + 0x6e2) = 0xffff;
  if (-1 < (int)param_1[0x6e0]) {
    if (param_1[0x6de] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0x6de]);
      param_1[0x6de] = 0;
    }
    param_1[0x6df] = 0;
  }
  *(undefined2 *)((int)param_1 + 0x1b8a) = 0xffff;
  FUN_00407450((int)(param_1 + 0x6dd));
  FUN_0040a350(param_1 + 0x6d5);
  FUN_0040a350(param_1 + 0x6cf);
  FUN_00412b90(param_1 + 0x674);
  piVar1 = param_1 + 0x66f;
  param_1[0x66e] = fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixClientCallback>::vftable;
  param_1[0x672] = 0;
  if (-1 < (int)param_1[0x671]) {
    if (*piVar1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*piVar1);
      *piVar1 = 0;
    }
    param_1[0x670] = 0;
  }
  param_1[0x673] = *piVar1;
  FUN_0040a350(piVar1);
  FUN_0040fc50(param_1 + 0x3dc);
  param_1[0x3d4] = CCallbackImpl<8>::vftable;
  if ((*(byte *)(param_1 + 0x3d5) & 1) != 0) {
    SteamAPI_UnregisterCallback(param_1 + 0x3d4);
  }
  param_1[0x3ce] = CCallbackImpl<16>::vftable;
  if ((*(byte *)(param_1 + 0x3cf) & 1) != 0) {
    SteamAPI_UnregisterCallback(param_1 + 0x3ce);
  }
  param_1[0x3c8] = CCallbackImpl<24>::vftable;
  if ((*(byte *)(param_1 + 0x3c9) & 1) != 0) {
    SteamAPI_UnregisterCallback(param_1 + 0x3c8);
  }
  param_1[0x3c2] = CCallbackImpl<8>::vftable;
  if ((*(byte *)(param_1 + 0x3c3) & 1) != 0) {
    SteamAPI_UnregisterCallback(param_1 + 0x3c2);
  }
  param_1[0x3b8] =
       CCallResult<class_fixapi2_impl::CFixClientAPI,struct_HTTPRequestCompleted_t>::vftable;
  if ((param_1[0x3bc] | param_1[0x3bd]) != 0) {
    SteamAPI_UnregisterCallResult(param_1 + 0x3b8,param_1[0x3bc],param_1[0x3bd]);
    param_1[0x3bc] = 0;
    param_1[0x3bd] = 0;
  }
  param_1[0x3ae] =
       CCallResult<class_fixapi2_impl::CFixClientAPI,struct_HTTPRequestCompleted_t>::vftable;
  if ((param_1[0x3b2] | param_1[0x3b3]) != 0) {
    SteamAPI_UnregisterCallResult(param_1 + 0x3ae,param_1[0x3b2],param_1[0x3b3]);
    param_1[0x3b2] = 0;
    param_1[0x3b3] = 0;
  }
  FUN_00407370(param_1);
  return;
}



undefined4 * __thiscall FUN_004076d0(void *this,byte param_1)

{
  *(undefined ***)this =
       fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixAPIRawCallback>::vftable;
  *(undefined4 *)((int)this + 0x10) = 0;
  if (-1 < *(int *)((int)this + 0xc)) {
    if (*(int *)((int)this + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)((int)this + 4));
      *(undefined4 *)((int)this + 4) = 0;
    }
    *(undefined4 *)((int)this + 8) = 0;
  }
  *(undefined4 *)((int)this + 0x14) = *(undefined4 *)((int)this + 4);
  FUN_0040a350((int *)((int)this + 4));
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00407740(void *this,byte param_1)

{
  *(undefined ***)this =
       fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixClientCallback>::vftable;
  *(undefined4 *)((int)this + 0x10) = 0;
  if (-1 < *(int *)((int)this + 0xc)) {
    if (*(int *)((int)this + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)((int)this + 4));
      *(undefined4 *)((int)this + 4) = 0;
    }
    *(undefined4 *)((int)this + 8) = 0;
  }
  *(undefined4 *)((int)this + 0x14) = *(undefined4 *)((int)this + 4);
  FUN_0040a350((int *)((int)this + 4));
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_004077b0(void *this,byte param_1)

{
  *(undefined ***)this =
       fixapi2_impl::
       CFixAPIPacketCallbacks<class_fixapi2_impl::CFixClientPacket,class_fixapi2_impl::CFixClientSocket,class_fixapi2_impl::CFixClientAPI>
       ::vftable;
  FUN_00412590((int)this + 8);
  *(undefined2 *)((int)this + 0x1c) = 0xffff;
  if (-1 < *(int *)((int)this + 0x14)) {
    if (*(int *)((int)this + 0xc) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)((int)this + 0xc));
      *(undefined4 *)((int)this + 0xc) = 0;
    }
    *(undefined4 *)((int)this + 0x10) = 0;
  }
  *(undefined2 *)((int)this + 0x1e) = 0xffff;
  FUN_00407450((int)this + 8);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00407820(void *this,byte param_1)

{
  FUN_00407370((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00407850(void *this,byte param_1)

{
  FUN_004074c0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00407880(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixGameUser::vftable;
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_004078b0(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixUserCache::vftable;
  FUN_00410c50((int)this + 8);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



void __thiscall FUN_004078e0(void *this,int param_1)

{
  int **this_00;
  int iVar1;
  int *piVar2;
  
  iVar1 = 0;
  this_00 = (int **)((int)this + 0x19bc);
  if (0 < *(int *)((int)this + 0x19c8)) {
    piVar2 = *this_00;
    while (*piVar2 != param_1) {
      iVar1 = iVar1 + 1;
      piVar2 = piVar2 + 1;
      if (*(int *)((int)this + 0x19c8) <= iVar1) {
        FUN_004058e0(this_00,&param_1);
        return;
      }
    }
    if (iVar1 != -1) {
      return;
    }
  }
  FUN_004058e0(this_00,&param_1);
  return;
}



undefined4 __thiscall FUN_00407940(void *this,int param_1)

{
  int **this_00;
  int iVar1;
  int *piVar2;
  
  iVar1 = 0;
  this_00 = (int **)((int)this + 0xa0);
  if (0 < *(int *)((int)this + 0xac)) {
    piVar2 = *this_00;
    while (*piVar2 != param_1) {
      iVar1 = iVar1 + 1;
      piVar2 = piVar2 + 1;
      if (*(int *)((int)this + 0xac) <= iVar1) {
        iVar1 = FUN_004058e0(this_00,&param_1);
        return CONCAT31((int3)((uint)iVar1 >> 8),1);
      }
    }
    if (iVar1 != -1) goto LAB_0040798f;
  }
  iVar1 = FUN_004058e0(this_00,&param_1);
LAB_0040798f:
  return CONCAT31((int3)((uint)iVar1 >> 8),1);
}



void __fastcall FUN_004079a0(int *param_1)

{
  undefined4 uVar1;
  float10 fVar2;
  
  if ((0.0 < (float)param_1[5]) &&
     (fVar2 = (float10)Plat_FloatTime(), (float)param_1[5] <= (float)fVar2)) {
    FUN_0040f440(DAT_0044a6c0,(int *)0x0,&DAT_0043cc68);
    uVar1 = (**(code **)(*param_1 + 0x4c))(4);
    (**(code **)(*param_1 + 0x50))(uVar1);
    param_1[5] = -0x40800000;
    fVar2 = (float10)Plat_FloatTime();
    param_1[6] = (int)((float)fVar2 + 15.0 + 1.0);
    return;
  }
  if ((0.0 < (float)param_1[6]) &&
     (fVar2 = (float10)Plat_FloatTime(), (float)param_1[6] < (float)fVar2)) {
    param_1[4] = param_1[4] + 1;
    if (7 < param_1[4]) {
      FUN_0040f490(DAT_0044a6c0,(int *)0x0,
                   (byte *)"Heart beat failed after %d attempts, logging out.");
      (**(code **)(*param_1 + 0x24))();
      return;
    }
    FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Heart beat timed out (failed: %d)");
    fVar2 = (float10)Plat_FloatTime();
    param_1[5] = (int)(float)(fVar2 + (float10)5.0);
  }
  return;
}



void __fastcall FUN_00407ab0(undefined4 *param_1)

{
  *param_1 = 0;
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  param_1[4] = 0;
  param_1[5] = 0;
  param_1[6] = 0;
  param_1[7] = 0;
  param_1[8] = 0;
  param_1[10] = 0;
  param_1[9] = 0;
  param_1[0xb] = 0;
  param_1[0xc] = 0;
  param_1[0xd] = 0;
  param_1[0xe] = 0;
  param_1[0xf] = 0;
  param_1[0x10] = 0;
  param_1[0x11] = 0;
  param_1[0x12] = 0;
  return;
}



uint __fastcall FUN_00407b40(int param_1)

{
  uint uVar1;
  
  uVar1 = (**(code **)(*(int *)(param_1 + -4) + 0x114))();
  return uVar1 & 0xffffff00;
}



// WARNING: Could not reconcile some variable overlaps

undefined4 __fastcall FUN_00407b60(int param_1)

{
  void *_Src;
  uint *puVar1;
  undefined4 *_Dst;
  uint uVar2;
  int iVar3;
  undefined4 uVar4;
  ushort uVar5;
  ushort uVar6;
  bool bVar7;
  undefined local_24 [8];
  int iStack28;
  int iStack24;
  int local_14;
  int *local_10;
  int local_c;
  uint local_8;
  
  iVar3 = *(int *)(param_1 + 0x1b44);
  while (0 < iVar3) {
    _Dst = *(undefined4 **)(param_1 + 0x1b38);
    *(undefined4 *)(param_1 + 0x1b4c) = *_Dst;
    iVar3 = *(int *)(param_1 + 0x1b44) + -1;
    if (0 < iVar3) {
      FID_conflict__memcpy(_Dst,_Dst + 1,iVar3 * 4);
    }
    *(int *)(param_1 + 0x1b44) = *(int *)(param_1 + 0x1b44) + -1;
    FUN_00413750(*(int **)(param_1 + 0x1b4c));
    iVar3 = *(int *)(param_1 + 0x1b44);
  }
  local_14 = 0;
  _local_24 = ZEXT816(0);
  uVar5 = *(ushort *)(param_1 + 0x1b9c);
  do {
    uVar6 = uVar5;
    if (uVar6 == 0xffff) break;
    uVar5 = *(ushort *)(*(int *)(param_1 + 0x1b90) + (uint)uVar6 * 0x10);
  } while (uVar5 != 0xffff);
  iStack24 = 0;
  for (local_8 = (uint)uVar6; local_8 != 0xffff; local_8 = local_8 & 0xffff) {
    if (*(int *)(param_1 + 0x18ac) != *(int *)(*(int *)(param_1 + 0x1b90) + 8 + local_8 * 0x10)) {
      local_24._4_4_ = SUB164(_local_24 >> 0x20,0);
      local_c = iStack24;
      if (local_24._4_4_ < iStack24 + 1) {
        FUN_0040a710(local_24,(iStack24 - local_24._4_4_) + 1);
      }
      iStack24 = iStack24 + 1;
      local_14 = local_24._0_4_;
      iVar3 = (iStack24 - local_c) + -1;
      if (0 < iVar3) {
        _Src = (void *)(local_24._0_4_ + local_c * 4);
        FID_conflict__memcpy((void *)((int)_Src + 4),_Src,iVar3 * 4);
      }
      puVar1 = (uint *)(local_24._0_4_ + local_c * 4);
      if (puVar1 != (uint *)0x0) {
        *puVar1 = local_8;
      }
    }
    local_8 = FUN_004090b0((void *)(param_1 + 0x1b8c),local_8);
  }
  local_c = 0;
  if (0 < iStack24) {
    do {
      uVar2 = *(uint *)(local_24._0_4_ + local_c * 4);
      local_8 = uVar2 & 0xffff;
      if ((local_8 < *(uint *)(param_1 + 0x1b94)) &&
         (uVar5 = (ushort)uVar2,
         uVar5 < *(ushort *)(param_1 + 0x1ba2) || uVar5 == *(ushort *)(param_1 + 0x1ba2))) {
        bVar7 = uVar5 == 0xffff;
        if (!bVar7) {
          bVar7 = *(ushort *)(*(int *)(param_1 + 0x1b90) + local_8 * 0x10) == uVar5;
        }
        if (!bVar7) {
          local_8 = local_8 * 0x10;
          local_10 = *(int **)(*(int *)(param_1 + 0x1b90) + 0xc + local_8);
          if (uVar5 != 0xffff) {
            FUN_0041c4d0((void *)(param_1 + 0x1b8c),uVar5);
            *(ushort *)(local_8 + *(int *)(param_1 + 0x1b90)) = uVar5;
            *(undefined2 *)(local_8 + 2 + *(int *)(param_1 + 0x1b90)) =
                 *(undefined2 *)(param_1 + 0x1ba0);
            *(short *)(param_1 + 0x1b9e) = *(short *)(param_1 + 0x1b9e) + -1;
            *(ushort *)(param_1 + 0x1ba0) = uVar5;
          }
          if (local_10 != (int *)0x0) {
            (**(code **)(*local_10 + 0x24))(1);
          }
        }
      }
      local_c = local_c + 1;
    } while (local_c < iStack24);
  }
  uVar4 = (**(code **)(*(int *)(param_1 + -4) + 0x114))();
  if (((-1 < iStack28) && (local_24._0_4_ != 0)) &&
     (uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_24._0_4_), false)) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
  }
  return CONCAT31((int3)((uint)uVar4 >> 8),1);
}



undefined2 __fastcall FUN_00407dd0(int param_1)

{
  return *(undefined2 *)(param_1 + 0x72);
}



void __thiscall FUN_00407de0(void *this,ushort param_1)

{
  FUN_00424210((void *)((int)this + 0x60),param_1);
  return;
}



void FUN_00407e00(int *param_1)

{
  FUN_00413750(param_1);
  return;
}



void __thiscall
FUN_00407e20(void *this,undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
            undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,
            undefined4 param_9)

{
  FUN_004100d0((void *)((int)this + 0x1b8),param_1,param_2,param_3,param_4,param_5,param_6,param_7,
               param_8,param_9);
  return;
}



void __thiscall FUN_00407e70(void *this,undefined4 param_1)

{
  int iVar1;
  
  iVar1 = *(int *)((int)this + 0x19c8);
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 0xc))(param_1);
    if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
      iVar1 = *(int *)((int)this + 0x19c8);
    }
  }
  return;
}



void __fastcall FUN_00407eb0(int *param_1)

{
  int iVar1;
  
  (**(code **)(*param_1 + 0x114))();
  (**(code **)(*(int *)param_1[0x6f7] + 0xb0))();
  *(undefined *)(param_1 + 0x6ce) = 0;
  (**(code **)(param_1[0x674] + 0x10))();
  (**(code **)(*param_1 + 0x108))(0);
  iVar1 = param_1[0x672];
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(param_1[0x66f] + iVar1 * 4) + 8))(0);
    if (param_1[0x672] + -1 < iVar1) {
      iVar1 = param_1[0x672];
    }
  }
  return;
}



undefined4 __fastcall FUN_00407f20(int *param_1)

{
  int *piVar1;
  char cVar2;
  undefined **ppuVar3;
  int iVar4;
  undefined4 uVar5;
  undefined extraout_DL;
  undefined extraout_DL_00;
  
  SteamAPI_RunCallbacks();
  ppuVar3 = FUN_0040c820();
  FUN_0040ce30((int)ppuVar3);
  FUN_00410750(param_1 + 0x6e);
  FUN_004128c0((int)(param_1 + 0x18e));
  piVar1 = param_1 + 0x674;
  iVar4 = (**(code **)(param_1[0x674] + 0x1c))();
  if ((iVar4 == 4) && (cVar2 = FUN_00412d30((int)piVar1), cVar2 != '\0')) {
    iVar4 = param_1[0x6d8];
    while (0 < iVar4) {
      piVar1 = (int *)param_1[0x6d5];
      param_1[0x6da] = *piVar1;
      if (0 < param_1[0x6d8] + -1) {
        FID_conflict__memcpy(piVar1,piVar1 + 1,(param_1[0x6d8] + -1) * 4);
      }
      param_1[0x6d8] = param_1[0x6d8] + -1;
      piVar1 = (int *)param_1[0x6da];
      (**(code **)(*param_1 + 0x10c))(piVar1);
      FUN_00413750(piVar1);
      iVar4 = param_1[0x6d8];
    }
    (**(code **)(*param_1 + 0x118))();
    return 1;
  }
  (**(code **)(*param_1 + 0x2c))();
  if (iVar4 == 3) {
    return 1;
  }
  if (iVar4 == 4) {
    return 1;
  }
  if (*(char *)(param_1 + 0x6ce) == '\0') {
    return 1;
  }
  uVar5 = (**(code **)(*param_1 + 0x2c))();
  if (true) {
    switch(uVar5) {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      uVar5 = FUN_0040c830((int)piVar1);
      FUN_00410350(param_1 + 0x6e,extraout_DL,uVar5,param_1[0x62c]);
      cVar2 = (**(code **)(*param_1 + 0xb8))();
      if (cVar2 != '\0') {
        return 0;
      }
      break;
    case 0xfffffffe:
    case 0xffffffff:
    case 0:
    case 7:
      goto switchD_0040801a_caseD_fffffffe;
    }
  }
  uVar5 = FUN_0040c830((int)piVar1);
  FUN_00410350(param_1 + 0x6e,extraout_DL_00,uVar5,param_1[0x62c]);
  *(undefined *)(param_1 + 0x6ce) = 0;
  (**(code **)(*piVar1 + 0xc))();
  iVar4 = param_1[0x6d8];
  while (0 < iVar4) {
    piVar1 = (int *)param_1[0x6d5];
    param_1[0x6da] = *piVar1;
    if (0 < param_1[0x6d8] + -1) {
      FID_conflict__memcpy(piVar1,piVar1 + 1,(param_1[0x6d8] + -1) * 4);
    }
    param_1[0x6d8] = param_1[0x6d8] + -1;
    piVar1 = (int *)param_1[0x6da];
    (**(code **)(*param_1 + 0x10c))(piVar1);
    FUN_00413750(piVar1);
    iVar4 = param_1[0x6d8];
  }
  (**(code **)(*param_1 + 0x108))(7);
  iVar4 = param_1[0x672];
  while (iVar4 = iVar4 + -1, -1 < iVar4) {
    (**(code **)(**(int **)(param_1[0x66f] + iVar4 * 4) + 4))(uVar5);
    if (param_1[0x672] + -1 < iVar4) {
      iVar4 = param_1[0x672];
    }
  }
switchD_0040801a_caseD_fffffffe:
  return 0;
}



void __thiscall FUN_00408150(void *this,undefined4 *param_1)

{
  undefined4 uVar1;
  uint uVar2;
  undefined4 local_14 [4];
  
  uVar1 = FUN_00413740((int)param_1);
  local_14[0] = (**(code **)*param_1)();
  uVar2 = FUN_00411330((void *)((int)this + 0x1b74),local_14);
  if ((uVar2 & 0xffff) != 0xffff) {
    (**(code **)(*(int *)((int)this + 0x1b78) + 0x10 + (uVar2 & 0xffff) * 0x18))(uVar1,param_1);
  }
  return;
}



void __thiscall FUN_004081b0(void *this,int *param_1)

{
  void *_Src;
  int iVar1;
  char cVar2;
  int iVar3;
  int *this_00;
  
                    // WARNING: Load size is inaccurate
  cVar2 = (**(code **)(*this + 4))();
  if (cVar2 != '\0') {
    FUN_00413750(param_1);
    return;
  }
  this_00 = (int *)((int)this + 0x1b3c);
  iVar1 = *(int *)((int)this + 0x1b48);
  if (*(int *)((int)this + 0x1b40) < iVar1 + 1) {
    FUN_0040a710(this_00,(iVar1 - *(int *)((int)this + 0x1b40)) + 1);
  }
  *(int *)((int)this + 0x1b48) = *(int *)((int)this + 0x1b48) + 1;
  iVar3 = (*(int *)((int)this + 0x1b48) - iVar1) + -1;
  *(int *)((int)this + 0x1b4c) = *this_00;
  if (0 < iVar3) {
    _Src = (void *)(*this_00 + iVar1 * 4);
    FID_conflict__memcpy((void *)((int)_Src + 4),_Src,iVar3 * 4);
  }
  *(int **)(*this_00 + iVar1 * 4) = param_1;
  return;
}



uint __thiscall FUN_00408230(void *this,int *param_1)

{
  int *_Dst;
  int *in_EAX;
  int iVar1;
  int iVar2;
  
  iVar1 = 0;
  iVar2 = *(int *)((int)this + 0xc);
  if (0 < iVar2) {
                    // WARNING: Load size is inaccurate
    in_EAX = *this;
    do {
      if (*in_EAX == *param_1) {
        if (iVar1 != -1) {
          iVar2 = (iVar2 - iVar1) + -1;
          if (0 < iVar2) {
            _Dst = *this + iVar1;
            in_EAX = (int *)FID_conflict__memcpy(_Dst,_Dst + 1,iVar2 * 4);
          }
          *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + -1;
          return CONCAT31((int3)((uint)in_EAX >> 8),1);
        }
        break;
      }
      iVar1 = iVar1 + 1;
      in_EAX = in_EAX + 1;
    } while (iVar1 < iVar2);
  }
  return (uint)in_EAX & 0xffffff00;
}



undefined4 __fastcall FUN_004082a0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x5c);
}



uint __thiscall FUN_004082b0(void *this,undefined4 param_1,undefined4 param_2,undefined4 param_3)

{
  int *this_00;
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  void *_Src;
  int iVar4;
  undefined *puVar5;
  
  this_00 = (int *)((int)this + 0x1c2c);
  iVar1 = *(int *)((int)this + 0x1c38);
  if (*(int *)((int)this + 0x1c30) < iVar1 + 1) {
    FUN_00408950(this_00,(iVar1 - *(int *)((int)this + 0x1c30)) + 1);
  }
  *(int *)((int)this + 0x1c38) = *(int *)((int)this + 0x1c38) + 1;
  iVar4 = (*(int *)((int)this + 0x1c38) - iVar1) + -1;
  *(int *)((int)this + 0x1c3c) = *this_00;
  if (0 < iVar4) {
    _Src = (void *)(*this_00 + iVar1 * 0x820);
    FID_conflict__memcpy((void *)((int)_Src + 0x820),_Src,iVar4 * 0x820);
  }
  puVar5 = (undefined *)(iVar1 * 0x820 + *this_00);
  *puVar5 = 0;
  *(undefined4 *)(puVar5 + 0x810) = param_1;
  *(undefined4 *)(puVar5 + 0x814) = param_2;
  *(undefined4 *)(puVar5 + 0x818) = param_3;
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Requesting Steam Auth Ticket");
  iVar1 = (**(code **)(**(int **)((int)this + 0x1bd8) + 0x34))(puVar5 + 8,0x800,puVar5 + 0x808);
  *(int *)(puVar5 + 4) = iVar1;
  if (iVar1 == 0) {
    uVar2 = FUN_0040f490(DAT_0044a6c0,(int *)0x0,
                         (byte *)"Steam::GetAuthSessionTicket Failed: k_HAuthTicketInvalid");
    *puVar5 = 1;
    return uVar2 & 0xffffff00;
  }
  uVar3 = FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Adding Ticket %d to pending list\n");
  return CONCAT31((int3)((uint)uVar3 >> 8),1);
}



undefined4 __fastcall FUN_004083b0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x50);
}



undefined4 FUN_004083c0(void)

{
  return 0x20;
}



undefined4 FUN_004083d0(void)

{
  return 0x10;
}



undefined4 FUN_004083e0(void)

{
  return 0x18;
}



undefined4 __fastcall FUN_004083f0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x6c);
}



undefined4 __fastcall FUN_00408400(int param_1)

{
  return *(undefined4 *)(param_1 + 0x58);
}



undefined4 FUN_00408410(void)

{
  return 0;
}



undefined4 __fastcall FUN_00408420(int param_1)

{
  return *(undefined4 *)(param_1 + 100);
}



undefined4 __fastcall FUN_00408430(int param_1)

{
  return *(undefined4 *)(param_1 + 0x68);
}



undefined4 __thiscall FUN_00408440(void *this,uint param_1,undefined4 param_2,char param_3)

{
  undefined4 uVar1;
  uint uVar2;
  int iVar3;
  undefined4 *puVar4;
  uint uVar5;
  ushort uVar6;
  uint uVar7;
  bool bVar8;
  uint local_c [2];
  
  if ((char)param_2 == '\0') {
    iVar3 = (**(code **)(**(int **)((int)this + 4) + 8))();
    if (iVar3 != 0) {
      puVar4 = (undefined4 *)(**(code **)(**(int **)((int)this + 4) + 8))();
      uVar5 = (**(code **)*puVar4)();
      if (uVar5 == param_1) goto LAB_00408460;
    }
    local_c[0] = param_1;
    uVar5 = FUN_0040b090((void *)((int)this + 8),local_c);
    uVar5 = uVar5 & 0xffff;
    if ((uVar5 < *(uint *)((int)this + 0x10)) &&
       (uVar6 = (ushort)uVar5,
       uVar6 < *(ushort *)((int)this + 0x1e) || uVar6 == *(ushort *)((int)this + 0x1e))) {
      bVar8 = uVar6 == 0xffff;
      if (!bVar8) {
        bVar8 = *(ushort *)(*(int *)((int)this + 0xc) + uVar5 * 0x10) == uVar6;
      }
      if (!bVar8) {
        return *(undefined4 *)(*(int *)((int)this + 0xc) + 0xc + uVar5 * 0x10);
      }
    }
    if (param_3 != '\0') {
      uVar1 = (**(code **)**(undefined4 **)((int)this + 4))(param_1);
      param_2 = uVar1;
      FUN_0040b650((void *)((int)this + 8),&param_1,&param_2);
      return uVar1;
    }
  }
  else {
    if (param_1 == *(ushort *)((int)this + 0x1a)) {
LAB_00408460:
      uVar1 = (**(code **)(**(int **)((int)this + 4) + 8))();
      return uVar1;
    }
    uVar5 = 0;
    if (*(short *)((int)this + 0x10) != 0) {
      uVar2 = (uint)*(ushort *)((int)this + 0x10);
      do {
        uVar7 = uVar5 & 0xffff;
        if ((uVar7 < *(uint *)((int)this + 0x10)) &&
           (uVar6 = (ushort)uVar7,
           uVar6 < *(ushort *)((int)this + 0x1e) || uVar6 == *(ushort *)((int)this + 0x1e))) {
          bVar8 = uVar6 == 0xffff;
          if (!bVar8) {
            bVar8 = *(ushort *)(*(int *)((int)this + 0xc) + uVar7 * 0x10) == uVar6;
          }
          if (!bVar8) {
            if (param_1 == 0) {
              return *(undefined4 *)(*(int *)((int)this + 0xc) + 0xc + (uVar5 & 0xffff) * 0x10);
            }
            param_1 = param_1 - 1;
          }
          uVar2 = (uint)*(ushort *)((int)this + 0x10);
        }
        uVar5 = uVar5 + 1;
      } while ((int)uVar5 < (int)uVar2);
      return 0;
    }
  }
  return 0;
}



int * __thiscall FUN_00408590(void *this,undefined4 param_1,undefined4 param_2)

{
  ushort uVar1;
  int iVar2;
  int *piVar3;
  uint uVar4;
  ushort uVar5;
  uint uVar6;
  longlong lVar7;
  
  iVar2 = (**(code **)(**(int **)((int)this + 4) + 8))();
  if (iVar2 != 0) {
    piVar3 = (int *)(**(code **)(**(int **)((int)this + 4) + 8))();
    lVar7 = (**(code **)(*piVar3 + 4))();
    if ((lVar7 == CONCAT44(param_2,param_1)) && (true)) {
      piVar3 = (int *)(**(code **)(**(int **)((int)this + 4) + 8))();
      return piVar3;
    }
  }
  uVar4 = 0;
  if (*(short *)((int)this + 0x10) != 0) {
    do {
      uVar6 = uVar4 & 0xffff;
      if ((uVar6 < *(uint *)((int)this + 0x10)) &&
         (uVar5 = (ushort)uVar6,
         uVar5 < *(ushort *)((int)this + 0x1e) || uVar5 == *(ushort *)((int)this + 0x1e))) {
        if (uVar5 == 0xffff) {
          uVar1 = 0xffff;
        }
        else {
          uVar1 = *(ushort *)(*(int *)((int)this + 0xc) + uVar6 * 0x10);
        }
        if ((uVar1 != uVar5) &&
           (piVar3 = *(int **)(*(int *)((int)this + 0xc) + 0xc + uVar6 * 0x10), piVar3 != (int *)0x0
           )) {
          lVar7 = (**(code **)(*piVar3 + 4))();
          if ((lVar7 == CONCAT44(param_2,param_1)) && (true)) {
            return piVar3;
          }
        }
      }
      uVar4 = uVar4 + 1;
    } while ((int)uVar4 < (int)(uint)*(ushort *)((int)this + 0x10));
  }
  return (int *)0x0;
}



undefined4 thunk_FUN_004114a0(void)

{
  return 0x1040100;
}



void FUN_00408660(void)

{
  FUN_00413490(DAT_0044a6a8);
  return;
}



undefined __thiscall FUN_00408670(void *this,undefined4 param_1,float *param_2,float *param_3)

{
  undefined4 uVar1;
  undefined uVar2;
  float local_c;
  float local_8;
  
  local_8 = 0.0;
  local_c = 0.0;
  uVar2 = 0;
  FUN_004114b0(*(void **)((int)this + 0x644),&local_8,&local_c);
  if ((0.0 < local_8) || (0.0 < local_c)) {
    uVar2 = 1;
    *param_2 = *param_2 + local_8;
    *param_3 = *param_3 + local_c;
  }
  uVar1 = FUN_004114d0(*(void **)((int)this + 0x644),param_1,&local_8,&local_c);
  if ((char)uVar1 != '\0') {
    *param_2 = *param_2 + local_8;
    *param_3 = *param_3 + local_c;
    return 1;
  }
  return uVar2;
}



undefined4 __thiscall FUN_00408730(void *this,int param_1,char param_2)

{
  uint uVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  bool bVar5;
  int local_c [2];
  
  if (param_2 == '\0') {
    local_c[0] = param_1;
    uVar4 = FUN_0040b090((void *)((int)this + 0x1b90),local_c);
    if ((uVar4 & 0xffff) == 0xffff) {
      return 0;
    }
    return *(undefined4 *)(*(int *)((int)this + 0x1b94) + 0xc + (uVar4 & 0xffff) * 0x10);
  }
  uVar4 = 0;
  if (*(short *)((int)this + 0x1b98) != 0) {
    uVar1 = (uint)*(ushort *)((int)this + 0x1b98);
    do {
      uVar3 = uVar4 & 0xffff;
      if ((uVar3 < *(uint *)((int)this + 0x1b98)) &&
         (uVar2 = (ushort)uVar3,
         uVar2 < *(ushort *)((int)this + 0x1ba6) || uVar2 == *(ushort *)((int)this + 0x1ba6))) {
        bVar5 = uVar2 == 0xffff;
        if (!bVar5) {
          bVar5 = *(ushort *)(*(int *)((int)this + 0x1b94) + uVar3 * 0x10) == uVar2;
        }
        if (!bVar5) {
          if (param_1 == 0) {
            return *(undefined4 *)(*(int *)((int)this + 0x1b94) + 0xc + (uVar4 & 0xffff) * 0x10);
          }
          param_1 = param_1 + -1;
        }
        uVar1 = (uint)*(ushort *)((int)this + 0x1b98);
      }
      uVar4 = uVar4 + 1;
    } while ((int)uVar4 < (int)uVar1);
  }
  return 0;
}



undefined2 __fastcall FUN_00408810(int param_1)

{
  return *(undefined2 *)(param_1 + 0x1ba2);
}



undefined4 __fastcall FUN_00408820(int param_1)

{
  undefined4 uVar1;
  
  if (*(char *)(param_1 + 0x1c28) == '\0') {
    return 0;
  }
                    // WARNING: Could not recover jumptable at 0x00408834. Too many branches
                    // WARNING: Treating indirect jump as call
  uVar1 = (**(code **)(**(int **)(param_1 + 0x1be0) + 0x10))();
  return uVar1;
}



void FUN_00408840(void)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_00413490(DAT_0044a6a8);
                    // WARNING: Could not recover jumptable at 0x0040884f. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)*puVar1)();
  return;
}



void __fastcall FUN_00408860(int *param_1)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  
  uVar3 = 0;
  iVar1 = *param_1;
  uVar2 = FUN_0040fc90((int)(param_1 + 0x3dc));
  (**(code **)(iVar1 + 0x98))(uVar2,uVar3);
  return;
}



undefined4 __fastcall FUN_00408880(int param_1)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  undefined4 local_c [2];
  
  local_c[0] = FUN_0040fc90(param_1 + 0xf70);
  uVar2 = FUN_0040b090((void *)(param_1 + 0x1b90),local_c);
  if ((uVar2 & 0xffff) == 0xffff) {
    return 0;
  }
  uVar4 = 0;
  iVar1 = **(int **)(*(int *)(param_1 + 0x1b94) + 0xc + (uVar2 & 0xffff) * 0x10);
  uVar3 = FUN_0040fca0(param_1 + 0xf70);
  uVar3 = (**(code **)(iVar1 + 0x20))(uVar3,uVar4);
  return uVar3;
}



void __fastcall FUN_004088f0(int param_1)

{
                    // WARNING: Could not recover jumptable at 0x004088f8. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(*(int *)(param_1 + 0xf70) + 0x7c))();
  return;
}



int * FUN_00408900(undefined4 param_1)

{
  int *this;
  void *this_00;
  
  this = FUN_00413710();
  FUN_0040e850(this,param_1);
  this_00 = (void *)(**(code **)(*this + 4))();
  *(undefined4 *)((int)this_00 + 0xc) = 0;
  *(undefined4 *)((int)this_00 + 0x10) = 0;
  *(undefined *)((int)this_00 + 0x14) = 0;
  *(undefined4 *)((int)this_00 + 0x20) = 0;
  *(undefined4 *)((int)this_00 + 0x1c) = 0xffffffff;
  FUN_004223b0(this_00,0);
  return this;
}



void __thiscall FUN_00408950(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar2 = *(uint *)((int)this + 4);
  uVar4 = param_1 + uVar2;
  if (iVar1 == 0) {
    if (uVar2 == 0) {
      uVar2 = 1;
      if (1 < (int)uVar4) {
        uVar2 = uVar4;
      }
    }
    else {
      if ((int)uVar4 <= (int)uVar2) goto LAB_004089b3;
      do {
        uVar2 = uVar2 * 2;
      } while ((int)uVar2 < (int)uVar4);
    }
  }
  else {
    uVar2 = ((int)(uVar4 - 1) / iVar1 + 1) * iVar1;
  }
  if ((int)uVar2 < (int)uVar4) {
    if ((uVar2 == 0) && (0x7fffffff < uVar4)) {
      uVar2 = 0xffffffff;
    }
    else {
      do {
        uVar2 = (int)(uVar2 + uVar4) / 2;
      } while ((int)uVar2 < (int)uVar4);
    }
  }
LAB_004089b3:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar2;
  if (*this == 0) {
    uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar2 * 0x820);
    *(undefined4 *)this = uVar3;
    return;
  }
  uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this,uVar2 * 0x820);
  *(undefined4 *)this = uVar3;
  return;
}



void __fastcall FUN_00408a00(int *param_1)

{
  char cVar1;
  undefined uVar2;
  uint uVar3;
  undefined4 *puVar4;
  int iVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  void *pvVar8;
  undefined *puVar9;
  int *piVar10;
  int *piVar11;
  int local_7c [2];
  int local_74;
  undefined local_4c [8];
  undefined local_44 [8];
  undefined local_3c [8];
  undefined local_34 [8];
  undefined local_2c [8];
  int *local_24;
  undefined4 local_20;
  int local_1c;
  uint local_18;
  undefined4 local_14;
  int *local_10;
  int *local_c;
  int *local_8;
  
  local_24 = param_1;
  (**(code **)(*param_1 + 0x114))();
  if (param_1[0x26] == -2) {
    param_1[0x26] = 0;
  }
  (**(code **)(param_1[0x674] + 4))(param_1 + 1);
  param_1[0x6dc] = (int)param_1;
  FUN_00416c90((int)param_1);
  FUN_00415260((int)param_1);
  FUN_00415550((int)param_1);
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"============ FIX CLIENT API INIT ============");
  cVar1 = (**(code **)(*DAT_0044a6a8 + 0x28))();
  if (cVar1 == '\0') {
LAB_00408b92:
    if (*(char *)(param_1 + 0x70a) == '\0') goto LAB_00408be5;
  }
  else if (*(char *)(param_1 + 0x70a) == '\0') {
    uVar3 = FUN_00408ca0((uint *)(param_1 + 0x6f6));
    if ((char)uVar3 != '\0') {
      uVar2 = (***(code ***)param_1[0x6fb])();
      piVar10 = (int *)param_1[0x6f6];
      local_8 = (int *)param_1[0x6fb];
      local_c = (int *)param_1[0x6f8];
      *(undefined *)(param_1 + 0x70a) = uVar2;
      local_10 = piVar10;
      puVar4 = (undefined4 *)(**(code **)(*piVar10 + 8))(local_2c);
      local_14 = *puVar4;
      iVar5 = (**(code **)(*piVar10 + 8))(local_34);
      local_18 = *(uint *)(iVar5 + 4) >> 0x14 & 0xf;
      iVar5 = (**(code **)(*piVar10 + 8))(local_3c);
      local_1c = (int)*(char *)(iVar5 + 7);
      puVar4 = (undefined4 *)(**(code **)(*piVar10 + 8))(local_44);
      iVar5 = *piVar10;
      local_20 = *puVar4;
      uVar7 = puVar4[1];
      puVar4 = (undefined4 *)(**(code **)(iVar5 + 8))(local_4c);
      uVar6 = (**(code **)(*local_8 + 0x10))();
      uVar6 = (**(code **)(*local_c + 0x24))(uVar6);
      uVar6 = (**(code **)(iVar5 + 0x44))(*puVar4,puVar4[1],uVar6);
      cVar1 = (**(code **)*local_8)(uVar6);
      puVar9 = &DAT_0043cba4;
      if (cVar1 == '\0') {
        puVar9 = &DAT_0043cba8;
      }
      (**(code **)(*local_c + 0x24))(local_20,uVar7,local_1c,local_18,local_14,puVar9);
      FUN_0040f490(DAT_0044a6c0,(int *)0x0,
                   (byte *)
                   "Steam Started\n\t\t\t\tAppID: %d\t\t\tSteamID: (%llu) %d:%d:%d\n\t\t\t\tsubscribed: %s\t\t\tLicense: %d\t\t\tLanguage: %s"
                  );
      param_1 = local_24;
    }
    goto LAB_00408b92;
  }
  iVar5 = param_1[0x3dc];
  uVar7 = (***(code ***)param_1[0x6f7])();
  (**(code **)(iVar5 + 100))(uVar7);
  iVar5 = param_1[0x700];
  puVar4 = (undefined4 *)(**(code **)(*(int *)param_1[0x6f6] + 8))(local_4c);
  FUN_004104c0(param_1 + 0x6e,*puVar4,puVar4[1],"81fc7f92d860694fff1ef960f2114a43",
               "81115a71a5dfed7f100d0e3eb529c66d52ee0016",iVar5);
LAB_00408be5:
  cVar1 = (**(code **)(*DAT_0044a6a8 + 0x30))();
  if (cVar1 != '\0') {
    FUN_004221a0(local_7c,0,0,0);
    cVar1 = '\x01';
    piVar10 = local_7c;
    pvVar8 = (void *)(**(code **)(param_1[0x3dc] + 0x78))();
    FUN_0040e8a0(pvVar8,piVar10,cVar1);
    FUN_00423340(local_7c,0,0);
    FUN_004233a0(local_7c,0,0);
    FUN_0040fac0(local_7c,3);
    piVar10 = local_7c;
    piVar11 = (int *)param_1[0x6fe];
    pvVar8 = (void *)(**(code **)(param_1[0x3dc] + 0x30))();
    FUN_0040e940(pvVar8,piVar10,piVar11);
    if ((-1 < local_74) && (local_7c[0] != 0)) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_7c[0]);
    }
  }
  FUN_00410430(param_1 + 0x6e);
  return;
}



uint __fastcall FUN_00408ca0(uint *param_1)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  int *piVar4;
  uint uVar5;
  
  iVar1 = SteamClient();
  if (iVar1 == 0) {
    return 0;
  }
  uVar2 = SteamAPI_GetHSteamUser();
  uVar3 = SteamAPI_GetHSteamPipe();
  piVar4 = (int *)SteamClient();
  uVar5 = (**(code **)(*piVar4 + 0x14))(uVar2,uVar3,"SteamUser018");
  *param_1 = uVar5;
  if (uVar5 != 0) {
    piVar4 = (int *)SteamClient();
    uVar5 = (**(code **)(*piVar4 + 0x20))(uVar2,uVar3,"SteamFriends015");
    param_1[1] = uVar5;
    if (uVar5 != 0) {
      piVar4 = (int *)SteamClient();
      uVar5 = (**(code **)(*piVar4 + 0x24))(uVar3,"SteamUtils007");
      param_1[2] = uVar5;
      if (uVar5 != 0) {
        piVar4 = (int *)SteamClient();
        uVar5 = (**(code **)(*piVar4 + 0x28))(uVar2,uVar3,"SteamMatchMaking009");
        param_1[3] = uVar5;
        if (uVar5 != 0) {
          piVar4 = (int *)SteamClient();
          uVar5 = (**(code **)(*piVar4 + 0x2c))(uVar2,uVar3,"SteamMatchMakingServers002");
          param_1[6] = uVar5;
          if (uVar5 != 0) {
            piVar4 = (int *)SteamClient();
            uVar5 = (**(code **)(*piVar4 + 0x34))(uVar2,uVar3,"STEAMUSERSTATS_INTERFACE_VERSION011")
            ;
            param_1[4] = uVar5;
            if (uVar5 != 0) {
              piVar4 = (int *)SteamClient();
              uVar5 = (**(code **)(*piVar4 + 0x3c))(uVar2,uVar3,"STEAMAPPS_INTERFACE_VERSION007");
              param_1[5] = uVar5;
              if (uVar5 != 0) {
                piVar4 = (int *)SteamClient();
                uVar5 = (**(code **)(*piVar4 + 0x40))(uVar2,uVar3,"SteamNetworking005");
                param_1[7] = uVar5;
                if (uVar5 != 0) {
                  piVar4 = (int *)SteamClient();
                  uVar5 = (**(code **)(*piVar4 + 0x44))
                                    (uVar2,uVar3,"STEAMREMOTESTORAGE_INTERFACE_VERSION013");
                  param_1[8] = uVar5;
                  if (uVar5 != 0) {
                    piVar4 = (int *)SteamClient();
                    uVar5 = (**(code **)(*piVar4 + 0x48))
                                      (uVar2,uVar3,"STEAMSCREENSHOTS_INTERFACE_VERSION002");
                    param_1[9] = uVar5;
                    if (uVar5 != 0) {
                      piVar4 = (int *)SteamClient();
                      uVar5 = (**(code **)(*piVar4 + 0x5c))
                                        (uVar2,uVar3,"STEAMHTTP_INTERFACE_VERSION002");
                      param_1[10] = uVar5;
                      if (uVar5 != 0) {
                        piVar4 = (int *)SteamClient();
                        uVar5 = (**(code **)(*piVar4 + 0x60))
                                          (uVar2,uVar3,"STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001");
                        param_1[0xb] = uVar5;
                        if (uVar5 != 0) {
                          piVar4 = (int *)SteamClient();
                          uVar5 = (**(code **)(*piVar4 + 100))(uVar2,uVar3,"SteamController003");
                          param_1[0xc] = uVar5;
                          if (uVar5 != 0) {
                            piVar4 = (int *)SteamClient();
                            uVar5 = (**(code **)(*piVar4 + 0x68))
                                              (uVar2,uVar3,"STEAMUGC_INTERFACE_VERSION007");
                            param_1[0xd] = uVar5;
                            if (uVar5 != 0) {
                              piVar4 = (int *)SteamClient();
                              uVar5 = (**(code **)(*piVar4 + 0x6c))
                                                (uVar2,uVar3,"STEAMAPPLIST_INTERFACE_VERSION001");
                              param_1[0xe] = uVar5;
                              if (uVar5 != 0) {
                                piVar4 = (int *)SteamClient();
                                uVar5 = (**(code **)(*piVar4 + 0x70))
                                                  (uVar2,uVar3,"STEAMMUSIC_INTERFACE_VERSION001");
                                param_1[0xf] = uVar5;
                                if (uVar5 != 0) {
                                  piVar4 = (int *)SteamClient();
                                  uVar5 = (**(code **)(*piVar4 + 0x74))
                                                    (uVar2,uVar3,
                                                     "STEAMMUSICREMOTE_INTERFACE_VERSION001");
                                  param_1[0x10] = uVar5;
                                  if (uVar5 != 0) {
                                    piVar4 = (int *)SteamClient();
                                    uVar5 = (**(code **)(*piVar4 + 0x78))
                                                      (uVar2,uVar3,
                                                       "STEAMHTMLSURFACE_INTERFACE_VERSION_003");
                                    param_1[0x11] = uVar5;
                                    if (uVar5 != 0) {
                                      piVar4 = (int *)SteamClient();
                                      uVar5 = (**(code **)(*piVar4 + 0x88))
                                                        (uVar2,uVar3,"STEAMINVENTORY_INTERFACE_V001"
                                                        );
                                      param_1[0x12] = uVar5;
                                      if (uVar5 != 0) {
                                        piVar4 = (int *)SteamClient();
                                        uVar5 = (**(code **)(*piVar4 + 0x8c))
                                                          (uVar2,uVar3,"STEAMVIDEO_INTERFACE_V001");
                                        param_1[0x13] = uVar5;
                                        return uVar5 & 0xffffff00 | (uint)(uVar5 != 0);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return uVar5 & 0xffffff00;
}



bool __fastcall FUN_00408f10(int param_1)

{
  return *(int *)(param_1 + 0x5c) == 7;
}



undefined FUN_00408f20(void)

{
  return 0;
}



void FUN_00408f30(void)

{
                    // WARNING: Could not recover jumptable at 0x00408f3b. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(*DAT_0044a6a8 + 0x30))();
  return;
}



bool __cdecl FUN_00408f40(int *param_1,int *param_2)

{
  return *param_1 < *param_2;
}



void __thiscall FUN_00408f60(void *this,int *param_1,int param_2)

{
  code *pcVar1;
  char cVar2;
  int iVar3;
  undefined4 uVar4;
  longlong lVar5;
  undefined8 uVar6;
  undefined8 uVar7;
  
  if (*(char *)((int)this + 0x1c28) != '\0') {
    while ((param_1 != (int *)0x0 && (lVar5 = (**(code **)(*param_1 + 4))(), lVar5 != 0))) {
      uVar6 = (**(code **)(*param_1 + 4))();
      cVar2 = (**(code **)(**(int **)((int)this + 0x1bdc) + 0x44))(uVar6,4);
      iVar3 = (**(code **)(*param_1 + 0x44))();
      if (iVar3 != 0) {
        iVar3 = (**(code **)(*param_1 + 0x44))();
        if ((((iVar3 != 4) || (cVar2 != '\0')) || (param_2 == 0)) ||
           (((*(uint *)(param_2 + 8) & 1) != 0 || ((*(uint *)(param_2 + 8) & 0x1400) != 0)))) {
          uVar4 = (**(code **)(**(int **)((int)this + 0x1bdc) + 0x1c))(uVar6);
          (**(code **)(*param_1 + 100))(uVar4);
        }
        param_1[0x19] = 4;
        iVar3 = *(int *)((int)this + 0x19c8);
        while (iVar3 = iVar3 + -1, -1 < iVar3) {
          (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar3 * 4) + 0x5c))(param_1);
          if (*(int *)((int)this + 0x19c8) + -1 < iVar3) {
            iVar3 = *(int *)((int)this + 0x19c8);
          }
        }
        return;
      }
      pcVar1 = *(code **)(*param_1 + 4);
      param_1[0x19] = 1;
      uVar7 = (*pcVar1)();
      (**(code **)*param_1)(uVar7);
      FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Requesting Persona data for user %d ( %llu )");
      cVar2 = (**(code **)(**(int **)((int)this + 0x1bdc) + 0x94))(uVar6,1);
      if (cVar2 != '\0') {
        return;
      }
      param_2 = 0;
      if (*(char *)((int)this + 0x1c28) == '\0') {
        return;
      }
    }
  }
  return;
}



uint __thiscall FUN_004090b0(void *this,uint param_1)

{
  ushort uVar1;
  int iVar2;
  short sVar3;
  uint uVar4;
  uint uVar5;
  
  if ((short)param_1 == -1) {
    uVar4 = 0xffff;
  }
  else {
    iVar2 = *(int *)((int)this + 4);
    uVar1 = *(ushort *)(iVar2 + 2 + (param_1 & 0xffff) * 0x10);
    if (uVar1 != 0xffff) {
      do {
        uVar4 = (uint)uVar1;
        if (uVar1 == 0xffff) {
          return uVar4;
        }
        uVar1 = *(ushort *)(iVar2 + uVar4 * 0x10);
      } while (uVar1 != 0xffff);
      return uVar4;
    }
    uVar4 = (uint)*(ushort *)(iVar2 + 4 + (param_1 & 0xffff) * 0x10);
  }
  do {
    uVar5 = uVar4;
    if ((short)param_1 == -1) {
LAB_00409120:
      sVar3 = -1;
    }
    else {
      uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + (param_1 & 0xffff) * 0x10);
      if (uVar1 == 0xffff) goto LAB_00409120;
      sVar3 = *(short *)(*(int *)((int)this + 4) + 2 + (uint)uVar1 * 0x10);
    }
    if (sVar3 != (short)param_1) {
      return uVar5;
    }
    if ((short)uVar5 == -1) {
      return uVar5;
    }
    uVar4 = (uint)*(ushort *)(*(int *)((int)this + 4) + 4 + uVar5 * 0x10);
    param_1 = uVar5;
  } while( true );
}



uint __fastcall FUN_00409140(int param_1)

{
  uint uVar1;
  
  uVar1 = (**(code **)(*(int *)(param_1 + -4) + 0x114))();
  return uVar1 & 0xffffff00;
}



undefined2 __thiscall FUN_00409160(void *this,ushort param_1)

{
  if (param_1 != 0xffff) {
    return *(undefined2 *)(*(int *)((int)this + 4) + 4 + (uint)param_1 * 0x10);
  }
  return 0xffff;
}



void __thiscall FUN_00409190(void *this,undefined param_1)

{
  undefined4 uVar1;
  
                    // WARNING: Load size is inaccurate
  if ((((*(byte *)((int)this + 0x15) & 1) != 0) && (*(int *)((int)this + 0x10) != 0)) &&
     (*(char *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + -1 + *this) == '\n')) {
    FUN_004091f0((int *)this);
  }
  uVar1 = FUN_00422570(this,1);
  if ((char)uVar1 != '\0') {
                    // WARNING: Load size is inaccurate
    *(undefined *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this) = param_1;
    *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 1;
    FUN_004223b0(this,*(int *)((int)this + 0x10));
  }
  return;
}



void __fastcall FUN_004091f0(int *param_1)

{
  undefined4 uVar1;
  int iVar2;
  
  if ((*(byte *)((int)param_1 + 0x15) & 0x10) == 0) {
    iVar2 = param_1[6];
  }
  else {
    iVar2 = 0;
  }
  while (iVar2 = iVar2 + -1, -1 < iVar2) {
    uVar1 = FUN_00422570(param_1,1);
    if ((char)uVar1 != '\0') {
      *(undefined *)((*param_1 - param_1[8]) + param_1[4]) = 9;
      param_1[4] = param_1[4] + 1;
      FUN_004223b0(param_1,param_1[4]);
    }
  }
  return;
}



size_t __thiscall
FUN_00409230(void *this,undefined4 param_1,undefined4 param_2,void *param_3,size_t param_4)

{
  void *_Src;
  int iVar1;
  undefined4 *this_00;
  int iVar2;
  int *this_01;
  
  this_00 = FUN_00413710();
  FUN_00413770(this_00,param_1);
  FUN_004134a0(this_00,param_2,param_3,param_4);
  iVar1 = *(int *)((int)this + 0x1b5c);
  this_01 = (int *)((int)this + 0x1b50);
  if (*(int *)((int)this + 0x1b54) < iVar1 + 1) {
    FUN_0040a710(this_01,(iVar1 - *(int *)((int)this + 0x1b54)) + 1);
  }
  *(int *)((int)this + 0x1b5c) = *(int *)((int)this + 0x1b5c) + 1;
  iVar2 = (*(int *)((int)this + 0x1b5c) - iVar1) + -1;
  *(int *)((int)this + 0x1b60) = *this_01;
  if (0 < iVar2) {
    _Src = (void *)(*this_01 + iVar1 * 4);
    FID_conflict__memcpy((void *)((int)_Src + 4),_Src,iVar2 * 4);
  }
  *(undefined4 **)(*this_01 + iVar1 * 4) = this_00;
  return param_4;
}



void __thiscall FUN_004092c0(void *this,int param_1)

{
  FUN_00408230((void *)((int)this + 0x19bc),&param_1);
  return;
}



void __fastcall FUN_004092e0(int param_1)

{
  *(undefined4 *)(param_1 + 0x10) = 0;
  *(undefined4 *)(param_1 + 0x14) = 0xbf800000;
  *(undefined4 *)(param_1 + 0x18) = 0xbf800000;
  return;
}



void __thiscall FUN_00409300(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  (**(code **)((int)this + 0x20))(param_1,0);
  return;
}



void __thiscall
FUN_00409330(void *this,undefined4 param_1,undefined4 param_2,int param_3,int param_4)

{
  if ((param_3 == *(int *)((int)this + 0x10)) && (param_4 == *(int *)((int)this + 0x14))) {
    *(undefined4 *)((int)this + 0x10) = 0;
    *(undefined4 *)((int)this + 0x14) = 0;
    (**(code **)((int)this + 0x20))(param_1,param_2);
  }
  return;
}



void __fastcall FUN_00409370(int param_1)

{
                    // WARNING: Could not recover jumptable at 0x0040937f. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(param_1 + 0x10))();
  return;
}



void __thiscall FUN_00409390(void *this,undefined4 param_1)

{
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 4))(param_1);
  return;
}



void __thiscall FUN_004093a0(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x5c) = param_1;
  return;
}



void __thiscall FUN_004093b0(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x50) = param_1;
  return;
}



void __thiscall FUN_004093c0(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x6c) = param_1;
  return;
}



void FUN_004093d0(undefined4 param_1)

{
  DAT_0044a6c0 = param_1;
  return;
}



void __thiscall FUN_004093e0(void *this,char *param_1)

{
  FUN_0041e380((int)this + 0x10,param_1);
  return;
}



void __thiscall FUN_00409400(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x60) = param_1;
  return;
}



void __thiscall FUN_00409410(void *this,undefined4 param_1,undefined4 param_2)

{
  *(undefined4 *)((int)this + 8) = param_1;
  *(undefined4 *)((int)this + 0xc) = param_2;
  return;
}



void __thiscall FUN_00409430(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x68) = param_1;
  return;
}



void __thiscall FUN_00409440(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x98) = param_1;
  return;
}



void __thiscall FUN_00409450(void *this,int param_1)

{
  if (((param_1 != 2) && (param_1 != 5)) && (param_1 != 6)) {
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x114))();
  }
  *(int *)((int)this + 0x98) = param_1;
  return;
}



void __fastcall FUN_00409480(int *param_1)

{
  int iVar1;
  
  iVar1 = param_1[0x2b];
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)**(undefined4 **)(param_1[0x28] + iVar1 * 4))();
    if (param_1[0x2b] + -1 < iVar1) {
      iVar1 = param_1[0x2b];
    }
  }
  (**(code **)(*param_1 + 0x100))(1);
  return;
}



void __fastcall FUN_004094c0(int *param_1)

{
  int iVar1;
  float10 fVar2;
  float10 fVar3;
  
  FUN_004102c0(param_1 + 0x6e);
  if (*(char *)(param_1 + 0x70a) != '\0') {
    *(undefined *)(param_1 + 0x70a) = 0;
    if (param_1[0x6f4] != 0) {
      (**(code **)(*(int *)param_1[0x6f6] + 0x40))(param_1[0x6f4]);
    }
    param_1[0x6f4] = 0;
    if (param_1[0x6f5] != 0) {
      (**(code **)(*(int *)param_1[0x6f6] + 0x40))(param_1[0x6f5]);
    }
    param_1[0x6f5] = 0;
    fVar2 = (float10)Plat_FloatTime();
    fVar3 = (float10)Plat_FloatTime();
    while ((float)fVar3 < (float)fVar2 + 0.5) {
      ThreadSleep(0x19);
      SteamAPI_RunCallbacks();
      fVar3 = (float10)Plat_FloatTime();
    }
    *(undefined *)(param_1 + 0x70a) = 0;
    FUN_00407ab0(param_1 + 0x6f6);
  }
  (**(code **)(*param_1 + 0x114))();
  *(undefined *)(param_1 + 0x6ce) = 0;
  (**(code **)(param_1[0x674] + 0x10))();
  iVar1 = param_1[0x672];
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)**(undefined4 **)(param_1[0x66f] + iVar1 * 4))();
    if (param_1[0x672] + -1 < iVar1) {
      iVar1 = param_1[0x672];
    }
  }
  iVar1 = param_1[0x2b];
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)**(undefined4 **)(param_1[0x28] + iVar1 * 4))();
    if (param_1[0x2b] + -1 < iVar1) {
      iVar1 = param_1[0x2b];
    }
  }
  (**(code **)(*param_1 + 0x100))(1);
  return;
}



void __thiscall FUN_00409630(void *this,int *param_1)

{
  int iVar1;
  int *piVar2;
  void *_Dst;
  int iVar3;
  int iVar4;
  
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Auth Ticket Recieved: %d | Result %d");
  iVar3 = *(int *)((int)this + 0x1c38);
  if ((0 < iVar3) && (iVar4 = 0, 0 < iVar3)) {
    iVar1 = *(int *)((int)this + 0x1c2c);
    piVar2 = (int *)(iVar1 + 4);
    while (*piVar2 != *param_1) {
      iVar4 = iVar4 + 1;
      piVar2 = piVar2 + 0x208;
      if (iVar3 <= iVar4) {
        return;
      }
    }
    if (iVar4 != -1) {
      iVar3 = iVar4 * 0x820;
      if (*(char *)(iVar1 + iVar3) == '\0') {
        (**(code **)(iVar1 + 0x810 + iVar3))
                  (*(undefined4 *)(iVar1 + 4 + iVar3),iVar1 + 8 + iVar3,
                   *(undefined4 *)(iVar1 + 0x808 + iVar3),*(undefined4 *)(iVar1 + 0x818 + iVar3));
      }
      else {
        (**(code **)(**(int **)((int)this + 0x1bd8) + 0x40))(*(undefined4 *)(iVar1 + 4 + iVar3));
                    // WARNING: Load size is inaccurate
        (**(code **)(*this + 0x54))(*(undefined4 *)(iVar1 + 0x818 + iVar3));
      }
      iVar4 = (*(int *)((int)this + 0x1c38) - iVar4) + -1;
      if (0 < iVar4) {
        _Dst = (void *)(*(int *)((int)this + 0x1c2c) + iVar3);
        FID_conflict__memcpy(_Dst,(void *)((int)_Dst + 0x820),iVar4 * 0x820);
      }
      *(int *)((int)this + 0x1c38) = *(int *)((int)this + 0x1c38) + -1;
    }
  }
  return;
}



void __thiscall FUN_00409740(void *this,undefined4 *param_1)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  
  FUN_0040f4e0(DAT_0044a6c0,(undefined4 *)0x0,(byte *)"Micro Transaction Auth Response Recieved: %s"
              );
                    // WARNING: Load size is inaccurate
  piVar2 = (int *)(**(code **)(*this + 0x4c))(0x35);
  iVar1 = *piVar2;
  uVar3 = (***(code ***)((int)this + 0xf70))();
  (**(code **)(iVar1 + 0x48))(uVar3);
  (**(code **)(*piVar2 + 0x54))(param_1[2],param_1[3]);
  (**(code **)(*piVar2 + 0x4c))(*param_1);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar2);
  return;
}



void __thiscall FUN_004097c0(void *this,longlong *param_1)

{
  longlong lVar1;
  int *piVar2;
  longlong lVar3;
  char *pcVar4;
  
  lVar1 = *param_1;
                    // WARNING: Load size is inaccurate
  piVar2 = (int *)(**(code **)(*this + 0xa0))();
  if (piVar2 != (int *)0x0) {
    lVar3 = (**(code **)(*piVar2 + 0x18))();
    if ((lVar3 == lVar1) && (true)) {
      (**(code **)(**(int **)((int)this + 0x1bf4) + 0xc))
                (*(undefined4 *)param_1,*(undefined4 *)((int)param_1 + 4));
      (**(code **)(*piVar2 + 0x18))();
      pcVar4 = "SteamID (%llu) P2P session started";
      goto LAB_00409824;
    }
  }
  pcVar4 = "Unknown SteamID (%llu) trying to send p2p messages.";
LAB_00409824:
  FUN_0040f440(DAT_0044a6c0,DAT_0044a6d8,(byte *)pcVar4);
  return;
}



void __thiscall FUN_00409850(void *this,undefined4 *param_1)

{
  int *piVar1;
  undefined4 uVar2;
  
  if (*(char *)((int)this + 0x1c28) != '\0') {
    piVar1 = FUN_00408590((void *)((int)this + 0x1bac),*param_1,param_1[1]);
    uVar2 = (**(code **)(**(int **)((int)this + 0x1bdc) + 0x1c))(*param_1,param_1[1]);
    if (piVar1 == (int *)0x0) {
      FUN_0040f440(DAT_0044a6c0,(int *)0x0,
                   (byte *)"No FixAPI User Persona change recieved: %llu (%s)");
      return;
    }
    uVar2 = (**(code **)(*piVar1 + 8))(*param_1,param_1[1],uVar2);
    (**(code **)*piVar1)(uVar2);
    FUN_0040f440(DAT_0044a6c0,(int *)0x0,
                 (byte *)"FixAPI User Persona change recieved: { %d (%s) } - { %llu (%s) }");
    FUN_00408f60(this,piVar1,(int)param_1);
  }
  return;
}



void __thiscall FUN_004098e0(void *this,undefined4 *param_1)

{
  int *piVar1;
  uint *puVar2;
  undefined4 *puVar3;
  void *pvVar4;
  char cVar5;
  uint *this_00;
  uint *puVar6;
  uint uVar7;
  undefined4 uVar8;
  int iVar9;
  int iVar10;
  ulonglong uVar11;
  int local_4c [2];
  int local_44;
  undefined **local_1c;
  uint *local_18;
  uint *local_14;
  uint *local_10;
  void *local_c;
  uint *local_8;
  
  puVar3 = param_1;
  local_c = this;
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Session Start Web Request Completed: %d");
  param_1 = (undefined4 *)0x0;
  cVar5 = (**(code **)(**(int **)((int)this + 0x1c00) + 0x2c))(*puVar3,&param_1);
  FUN_004221a0(local_4c,0,(int)param_1 + 2,1);
  if (cVar5 == '\0') {
    if (*(char *)(puVar3 + 4) == '\0') {
      piVar1 = (int *)((int)this + 0xf70);
      iVar10 = (***(code ***)((int)this + 0xf70))();
      if (iVar10 != 0) {
        (**(code **)(*piVar1 + 0x54))(0);
        (**(code **)(*piVar1 + 0x58))(0,0);
        FUN_0040fd20(piVar1,(int)&DAT_0043b3d2);
      }
      FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Error Connecting to Authentication system.");
      iVar10 = *(int *)((int)this + 0x19c8);
      while (iVar10 = iVar10 + -1, -1 < iVar10) {
        (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar10 * 4) + 0x14))
                  (0,"Error Connecting to Authentication System.");
        if (*(int *)((int)this + 0x19c8) + -1 < iVar10) {
          iVar10 = *(int *)((int)this + 0x19c8);
        }
      }
    }
  }
  else {
    cVar5 = (**(code **)(**(int **)((int)this + 0x1c00) + 0x30))(*puVar3,local_4c[0],param_1);
    if (cVar5 != '\0') {
      FUN_004233a0(local_4c,0,(int)param_1);
      FUN_00409190(local_4c,0);
      this_00 = FUN_0040f610(local_4c[0],(int)param_1);
      local_1c = CKeyValuesDumpContextAsDevMsg::vftable;
      local_18 = (uint *)0x1;
      local_10 = this_00;
      FUN_0041ecc0(this_00,(int *)&local_1c,0);
      puVar6 = FUN_0041ee00(this_00,"Error",0);
      local_18 = puVar6;
      local_8 = FUN_0041ee00(this_00,"User",0);
      local_14 = FUN_0041ee00(this_00,"Hub",0);
      FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Session Start Web Request Response:\n%s");
      if (local_8 == (uint *)0x0) {
        FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Session Start Query returned no user");
      }
      if ((puVar6 == (uint *)0x0) && (local_8 != (uint *)0x0)) {
        piVar1 = (int *)((int)this + 0xf70);
        iVar10 = *piVar1;
        uVar11 = FUN_0041f380(local_8,"_id",0);
        (**(code **)(iVar10 + 0x54))((int)uVar11);
        puVar6 = FUN_0041ee00(local_8,"st",0);
        if (puVar6 != (uint *)0x0) {
          uVar11 = FUN_0041f380(puVar6,"ts",0);
          FUN_0040fd10(piVar1,(int)uVar11);
          uVar7 = FUN_0041f250(puVar6,"sk",(uint)&DAT_0043b3d2);
          FUN_0040fd20(piVar1,uVar7);
        }
        (**(code **)*piVar1)();
        FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Client Session has started for %d");
        pvVar4 = local_c;
        puVar6 = local_14;
        local_8 = *(uint **)((int)local_c + 0x19c8);
        while (puVar2 = (uint *)((int)local_8 + -1), local_14 = puVar6, local_8 = puVar2,
              -1 < (int)puVar2) {
          if (puVar6 == (uint *)0x0) {
            local_c = (void *)0x0;
            uVar7 = 0;
          }
          else {
            uVar11 = FUN_0041f380(puVar6,"port",0);
            local_c = (void *)uVar11;
            uVar7 = FUN_0041f250(puVar6,"host",(uint)&DAT_0043b3d2);
          }
          iVar10 = **(int **)(*(int *)((int)pvVar4 + 0x19bc) + (int)puVar2 * 4);
          uVar8 = (**(code **)(*(int *)((int)pvVar4 + 0xf70) + 0x7c))(uVar7,local_c);
          iVar9 = (***(code ***)((int)pvVar4 + 0xf70))(uVar8);
          (**(code **)(iVar10 + 0x10))(0 < iVar9);
          this_00 = local_10;
          puVar6 = local_14;
          if ((int)*(uint **)((int)pvVar4 + 0x19c8) + -1 < (int)local_8) {
            local_8 = *(uint **)((int)pvVar4 + 0x19c8);
          }
        }
      }
      else {
        piVar1 = (int *)((int)this + 0xf70);
        iVar10 = (***(code ***)((int)this + 0xf70))();
        if (iVar10 != 0) {
          (**(code **)(*piVar1 + 0x54))(0);
          (**(code **)(*piVar1 + 0x58))(0,0);
          FUN_0040fd10(piVar1,0);
          FUN_0040fd20(piVar1,(int)&DAT_0043b3d2);
        }
        pvVar4 = local_c;
        puVar6 = local_18;
        iVar10 = *(int *)((int)this + 0x19c8);
        while (iVar10 = iVar10 + -1, -1 < iVar10) {
          if (puVar6 == (uint *)0x0) {
            local_c = (void *)0x0;
            uVar8 = 0;
          }
          else {
            local_c = (void *)FUN_0041f250(puVar6,"message",(uint)&DAT_0043b3d2);
            uVar11 = FUN_0041f380(puVar6,"code",0);
            uVar8 = (undefined4)uVar11;
          }
          (**(code **)(**(int **)(*(int *)((int)pvVar4 + 0x19bc) + iVar10 * 4) + 0x14))
                    (uVar8,local_c);
          iVar9 = *(int *)((int)pvVar4 + 0x19c8);
          this_00 = local_10;
          if (iVar9 + -1 < iVar10) {
            iVar10 = iVar9;
          }
        }
      }
      if (this_00 != (uint *)0x0) {
        thunk_FUN_00420d90((int)this_00);
        FUN_0041ec20(this_00);
      }
    }
  }
  if ((-1 < local_44) && (local_4c[0] != 0)) {
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_4c[0]);
  }
  return;
}



void __thiscall FUN_00409cb0(void *this,uint *param_1)

{
  uint uVar1;
  undefined8 uVar2;
  ulonglong uVar3;
  
  uVar2 = FUN_0040f900(param_1);
  *(int *)((int)this + 8) = (int)uVar2;
  *(int *)((int)this + 0xc) = (int)((ulonglong)uVar2 >> 0x20);
  uVar3 = FUN_0040f8a0((int *)param_1);
  *(int *)((int)this + 0x58) = (int)uVar3;
  uVar1 = FUN_0040f770(param_1);
  *(uint *)((int)this + 0x5c) = uVar1 & 0xff;
  uVar1 = FUN_0040f770(param_1);
  *(uint *)((int)this + 0x60) = uVar1 & 0xff;
  uVar1 = FUN_0040f770(param_1);
  *(uint *)((int)this + 0x68) = uVar1 & 0xff;
  return;
}



undefined __fastcall FUN_00409d00(int param_1)

{
  return *(undefined *)(param_1 + 0x54);
}



undefined4 * FUN_00409d10(undefined4 param_1)

{
  undefined4 *puVar1;
  
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Creating user %d");
  puVar1 = (undefined4 *)FUN_00403c30(0x70);
  if (puVar1 != (undefined4 *)0x0) {
    puVar1[1] = param_1;
    *puVar1 = fixapi2_impl::CFixGameUser::vftable;
    puVar1[2] = 0;
    puVar1[3] = 0;
    *(undefined *)(puVar1 + 4) = 0;
    puVar1[0x14] = 0;
    *(undefined *)(puVar1 + 0x15) = 0;
    puVar1[0x16] = 0;
    puVar1[0x17] = 0;
    puVar1[0x18] = 0;
    puVar1[0x19] = 0;
    puVar1[0x1a] = 0;
    puVar1[0x1b] = 0xffffffff;
    return puVar1;
  }
  return (undefined4 *)0x0;
}



int __thiscall FUN_00409da0(void *this,uint param_1,undefined4 param_2)

{
  uint uVar1;
  int iVar2;
  
  if ((char)param_2 == '\0') {
    uVar1 = (***(code ***)((int)this + 0xf70))();
    if (uVar1 == param_1) {
      return (int)this + 0xf70;
    }
  }
  iVar2 = FUN_00408440((void *)((int)this + 0x1bac),param_1,param_2,'\0');
  return iVar2;
}



int __fastcall FUN_00409df0(int param_1)

{
  ushort uVar1;
  int iVar2;
  
  uVar1 = *(ushort *)(param_1 + 0x1bc6);
  iVar2 = (**(code **)(**(int **)(param_1 + 0x1bb0) + 8))();
  return (uint)(iVar2 != 0) + (uint)uVar1;
}



int __fastcall FUN_00409e10(int param_1)

{
  return param_1 + 0xf70;
}



void __fastcall FUN_00409e17(int param_1)

{
  FUN_00409e10(param_1 + -0xeb0);
  return;
}



undefined4 __thiscall FUN_00409e30(void *this,int param_1,int param_2)

{
  uint in_EAX;
  undefined4 uVar1;
  
  if (param_2 == 0) {
    return CONCAT31((int3)(in_EAX >> 8),1);
  }
  if (*(char *)((int)this + 0x1c28) != '\0') {
    in_EAX = (***(code ***)((int)this + 0xf70))();
    if (param_1 == in_EAX) {
      uVar1 = (**(code **)(**(int **)((int)this + 0x1bec) + 0x18))(param_2);
      return uVar1;
    }
  }
  return in_EAX & 0xffffff00;
}



void FUN_00409e80(int *param_1)

{
  char cVar1;
  
  (**(code **)*param_1)();
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Releasing user %d");
  cVar1 = (**(code **)(*param_1 + 0x74))();
  if (cVar1 == '\0') {
    (**(code **)(*param_1 + 0x50))(1);
  }
  return;
}



undefined4 __fastcall FUN_00409ec0(int param_1)

{
  undefined4 *_Dst;
  int *piVar1;
  char cVar2;
  int iVar3;
  
  cVar2 = FUN_00412d30((int)(int *)(param_1 + 0x19cc));
  if ((cVar2 != '\0') && (0 < *(int *)(param_1 + 0x1b44))) {
    _Dst = *(undefined4 **)(param_1 + 0x1b38);
    *(undefined4 *)(param_1 + 0x1b4c) = *_Dst;
    iVar3 = *(int *)(param_1 + 0x1b44) + -1;
    if (0 < iVar3) {
      FID_conflict__memcpy(_Dst,_Dst + 1,iVar3 * 4);
    }
    *(int *)(param_1 + 0x1b44) = *(int *)(param_1 + 0x1b44) + -1;
    piVar1 = *(int **)(param_1 + 0x1b4c);
    (**(code **)(*(int *)(param_1 + 0x19cc) + 0x18))(piVar1);
    FUN_00413750(piVar1);
  }
  return 0;
}



undefined4 * FUN_00409f30(void)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_00403c30(0x1c40);
  if (puVar1 != (undefined4 *)0x0) {
    puVar1 = FUN_00406f20(puVar1);
    return puVar1;
  }
  return (undefined4 *)0x0;
}



undefined4 * __fastcall FUN_00409f50(undefined4 *param_1)

{
  param_1[1] = fixapi2_impl::CFixBaseSocket::IFixBaseSocketHandler::vftable;
  *param_1 = fixapi2_impl::CFixBaseAPI<class_fixapi2::IFixGameAPI>::vftable;
  param_1[1] = fixapi2_impl::CFixBaseAPI<class_fixapi2::IFixGameAPI>::vftable;
  FUN_004221a0(param_1 + 7,0,0,0);
  param_1[0x13] = 0;
  param_1[0x14] = 0;
  param_1[0x15] = 0x20;
  param_1[0x16] = 0;
  param_1[0x17] = param_1[0x13];
  FUN_00423470(param_1 + 0x18,0,0x20,1);
  param_1[0x27] = fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixAPIRawCallback>::vftable;
  param_1[0x28] = 0;
  param_1[0x29] = 0;
  param_1[0x2a] = 0;
  param_1[0x2b] = 0;
  param_1[0x2c] = param_1[0x28];
  FUN_0040fdb0(param_1 + 0x6e);
  FUN_00410a40(param_1 + 0x18e);
  FUN_004221a0(param_1 + 0x3a0,0,0,0);
  param_1[0x26] = 0xfffffffe;
  param_1[0x2d] = 0;
  param_1[4] = 0;
  param_1[5] = 0xbf800000;
  param_1[6] = 0xbf800000;
  *(undefined *)(param_1 + 0x2e) = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  return param_1;
}



undefined4 * __fastcall FUN_0040a050(undefined4 *param_1)

{
  FUN_00409f50(param_1);
  param_1[0x3ac] = fixapi2_impl::IFixUserManager::vftable;
  *param_1 = fixapi2_impl::CFixGameAPI::vftable;
  param_1[1] = fixapi2_impl::CFixGameAPI::vftable;
  param_1[0x3ac] = fixapi2_impl::CFixGameAPI::vftable;
  param_1[0x3ad] = fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixGameCallback>::vftable;
  param_1[0x3ae] = 0;
  param_1[0x3af] = 0;
  param_1[0x3b0] = 0;
  param_1[0x3b1] = 0;
  param_1[0x3b2] = param_1[0x3ae];
  FUN_004172b0(param_1 + 0x3b3);
  param_1[0x3f3] = fixapi2_impl::CFixUserCache::vftable;
  param_1[0x3f5] = FUN_00408f40;
  param_1[0x3f6] = 0;
  param_1[0x3f7] = 0;
  param_1[0x3f8] = 0;
  param_1[0x3f9] = 0xffff;
  param_1[0x3fa] = 0xffffffff;
  param_1[0x3fb] = param_1[0x3f6];
  param_1[0x3f4] = 0;
  FUN_004175f0(param_1 + 0x3fc,0,param_1 + 0x3f3);
  FUN_004221a0(param_1 + 0x46d,0,0,0);
  param_1[0x4c4] = 0;
  param_1[0x4c5] = 0;
  param_1[0x4c6] = 0;
  param_1[0x4c7] = 0;
  param_1[0x4c8] = 0;
  param_1[0x4c9] = 0;
  param_1[0x4ca] = 0;
  *(undefined *)(param_1 + 0x3f2) = 0;
  param_1[0x46c] = 0;
  thunk_FUN_00427870(param_1 + 0x47b,0,0x18);
  *(undefined *)(param_1 + 0x4c3) = 0;
  param_1[0x479] = 0;
  param_1[0x47a] = 0;
  param_1[0x3f4] = param_1 + 0x3ac;
  FUN_0041e380((int)(param_1 + 0x45c),"");
  return param_1;
}



undefined4 * __thiscall FUN_0040a1d0(void *this,undefined4 param_1,undefined4 param_2)

{
  *(undefined4 *)((int)this + 4) = param_1;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  *(undefined *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x50) = 0;
  *(undefined *)((int)this + 0x54) = 0;
  *(undefined4 *)((int)this + 0x58) = 0;
  *(undefined4 *)((int)this + 0x5c) = 0;
  *(undefined4 *)((int)this + 0x60) = 0;
  *(undefined4 *)((int)this + 100) = 0;
  *(undefined4 *)((int)this + 0x68) = 0;
  *(undefined4 *)((int)this + 0x6c) = 0xffffffff;
  *(undefined ***)this = fixapi2_impl::CFixInventoryUser::vftable;
  FUN_0040d080((undefined4 *)((int)this + 0x74));
  *(undefined4 *)((int)this + 0x70) = 0;
  *(undefined4 *)((int)this + 0xbc) = 0;
  *(undefined4 *)((int)this + 0x8c0) = 0;
  FUN_0040da70((void *)((int)this + 0x74),this,param_2);
  return (undefined4 *)this;
}



void __fastcall FUN_0040a270(undefined4 *param_1)

{
  int *piVar1;
  
  *param_1 = fixapi2_impl::CFixBaseAPI<class_fixapi2::IFixGameAPI>::vftable;
  param_1[1] = fixapi2_impl::CFixBaseAPI<class_fixapi2::IFixGameAPI>::vftable;
  if (-1 < (int)param_1[0x3a2]) {
    if (param_1[0x3a0] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0x3a0]);
      param_1[0x3a0] = 0;
    }
    param_1[0x3a1] = 0;
  }
  FUN_00410d30(param_1 + 0x18e);
  FUN_0040fe90(param_1 + 0x6e);
  piVar1 = param_1 + 0x28;
  param_1[0x27] = fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixAPIRawCallback>::vftable;
  param_1[0x2b] = 0;
  if (-1 < (int)param_1[0x2a]) {
    if (*piVar1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*piVar1);
      *piVar1 = 0;
    }
    param_1[0x29] = 0;
  }
  param_1[0x2c] = *piVar1;
  FUN_0040a350(piVar1);
  FUN_00423560((int)(param_1 + 0x18));
  FUN_0040a350(param_1 + 0x13);
  if (-1 < (int)param_1[9]) {
    if (param_1[7] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[7]);
      param_1[7] = 0;
    }
    param_1[8] = 0;
  }
  return;
}



void __fastcall FUN_0040a350(int *param_1)

{
  int iVar1;
  
  param_1[3] = 0;
  if (-1 < param_1[2]) {
    if (*param_1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*param_1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  iVar1 = *param_1;
  param_1[4] = iVar1;
  if (-1 < param_1[2]) {
    if (iVar1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  return;
}



void __fastcall FUN_0040a3b0(undefined4 *param_1)

{
  int *piVar1;
  
  *param_1 = fixapi2_impl::CFixGameAPI::vftable;
  param_1[1] = fixapi2_impl::CFixGameAPI::vftable;
  param_1[0x3ac] = fixapi2_impl::CFixGameAPI::vftable;
  if (-1 < (int)param_1[0x46f]) {
    if (param_1[0x46d] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0x46d]);
      param_1[0x46d] = 0;
    }
    param_1[0x46e] = 0;
  }
  FUN_00417700(param_1 + 0x3fc);
  param_1[0x3f3] = fixapi2_impl::CFixUserCache::vftable;
  FUN_00410c50((int)(param_1 + 0x3f5));
  FUN_004172d0(param_1 + 0x3b3);
  piVar1 = param_1 + 0x3ae;
  param_1[0x3ad] = fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixGameCallback>::vftable;
  param_1[0x3b1] = 0;
  if (-1 < (int)param_1[0x3b0]) {
    if (*piVar1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*piVar1);
      *piVar1 = 0;
    }
    param_1[0x3af] = 0;
  }
  param_1[0x3b2] = *piVar1;
  FUN_0040a350(piVar1);
  FUN_0040a270(param_1);
  return;
}



undefined4 * __thiscall FUN_0040a480(void *this,byte param_1)

{
  *(undefined ***)this =
       fixapi2_impl::CFixAPICallbackManager<class_fixapi2::IFixGameCallback>::vftable;
  *(undefined4 *)((int)this + 0x10) = 0;
  if (-1 < *(int *)((int)this + 0xc)) {
    if (*(int *)((int)this + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)((int)this + 4));
      *(undefined4 *)((int)this + 4) = 0;
    }
    *(undefined4 *)((int)this + 8) = 0;
  }
  *(undefined4 *)((int)this + 0x14) = *(undefined4 *)((int)this + 4);
  FUN_0040a350((int *)((int)this + 4));
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_0040a4f0(void *this,byte param_1)

{
  FUN_0040a270((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_0040a520(void *this,byte param_1)

{
  FUN_0040a3b0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_0040a550(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixInventoryUser::vftable;
  FUN_0040d1b0((undefined4 *)((int)this + 0x74));
  *(undefined ***)this = fixapi2_impl::CFixGameUser::vftable;
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



void __thiscall FUN_0040a580(void *this,int param_1)

{
  int **this_00;
  int iVar1;
  int *piVar2;
  
  iVar1 = 0;
  this_00 = (int **)((int)this + 0xeb8);
  if (0 < *(int *)((int)this + 0xec4)) {
    piVar2 = *this_00;
    while (*piVar2 != param_1) {
      iVar1 = iVar1 + 1;
      piVar2 = piVar2 + 1;
      if (*(int *)((int)this + 0xec4) <= iVar1) {
        FUN_004058e0(this_00,&param_1);
        return;
      }
    }
    if (iVar1 != -1) {
      return;
    }
  }
  FUN_004058e0(this_00,&param_1);
  return;
}



uint __fastcall FUN_0040a5e0(int param_1)

{
  uint uVar1;
  
  uVar1 = (**(code **)(*(int *)(param_1 + -4) + 0x8c))();
  return uVar1 & 0xffffff00;
}



void __thiscall FUN_0040a600(void *this,int *param_1,undefined4 param_2)

{
  int iVar1;
  uint uVar2;
  
  FUN_00423690((void *)((int)this + 0x60),(short *)&param_1,param_1);
  uVar2 = (uint)param_1 & 0xffff;
  iVar1 = *(int *)((int)this + 0x58);
  if ((iVar1 <= (int)uVar2) && (iVar1 < (int)(uVar2 + 1))) {
    FUN_0040a810((int *)((int)this + 0x4c),iVar1,(uVar2 + 1) - iVar1);
  }
  *(undefined4 *)(*(int *)((int)this + 0x4c) + uVar2 * 4) = param_2;
  return;
}



void FUN_0040a650(void)

{
  return;
}



undefined4 __fastcall FUN_0040a660(int param_1)

{
  return *(undefined4 *)(param_1 + 0x70);
}



undefined4 __fastcall FUN_0040a670(int param_1)

{
  return *(undefined4 *)(param_1 + 0xbc);
}



int __fastcall FUN_0040a680(int param_1)

{
  return param_1 + 0x74;
}



int __fastcall FUN_0040a690(int param_1)

{
  return param_1 + 0xff0;
}



int * FUN_0040a6a0(undefined4 param_1)

{
  int *this;
  void *this_00;
  
  this = FUN_004175c0();
  FUN_0040e850(this,param_1);
  this_00 = (void *)(**(code **)(*this + 4))();
  *(undefined4 *)((int)this_00 + 0xc) = 0;
  *(undefined4 *)((int)this_00 + 0x10) = 0;
  *(undefined *)((int)this_00 + 0x14) = 0;
  *(undefined4 *)((int)this_00 + 0x20) = 0;
  *(undefined4 *)((int)this_00 + 0x1c) = 0xffffffff;
  FUN_004223b0(this_00,0);
  return this;
}



undefined4 __fastcall FUN_0040a6f0(int param_1)

{
  return *(undefined4 *)(param_1 + 0xb4);
}



undefined4 __fastcall FUN_0040a700(int param_1)

{
  return *(undefined4 *)(param_1 + 0x98);
}



void __thiscall FUN_0040a710(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint uVar5;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar3 = *(uint *)((int)this + 4);
  uVar5 = param_1 + uVar3;
  if (iVar1 == 0) {
    if (uVar3 == 0) {
      uVar3 = 8;
      uVar2 = uVar5;
      if ((int)uVar5 < 9) goto LAB_0040a773;
    }
    else {
      if ((int)uVar5 <= (int)uVar3) goto LAB_0040a773;
      do {
        uVar3 = uVar3 * 2;
        uVar2 = uVar3;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
  else {
    uVar2 = ((int)(uVar5 - 1) / iVar1 + 1) * iVar1;
  }
  uVar3 = uVar2;
  if ((int)uVar3 < (int)uVar5) {
    if ((uVar3 == 0) && (0x7fffffff < uVar5)) {
      uVar3 = 0xffffffff;
    }
    else {
      do {
        uVar3 = (int)(uVar3 + uVar5) / 2;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
LAB_0040a773:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar3;
  if (*this == 0) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar3 * 4);
    *(undefined4 *)this = uVar4;
    return;
  }
  uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this,uVar3 << 2);
  *(undefined4 *)this = uVar4;
  return;
}



void __fastcall FUN_0040a7c0(int param_1)

{
  if (*(int *)(param_1 + 0x98) == -2) {
    *(undefined4 *)(param_1 + 0x98) = 0;
  }
  return;
}



void __fastcall FUN_0040a7e0(int param_1)

{
  if (*(int *)(param_1 + 0x98) == -2) {
    *(undefined4 *)(param_1 + 0x98) = 0;
  }
  (**(code **)(*(int *)(param_1 + 0xecc) + 4))(param_1 + 4);
  return;
}



int __thiscall FUN_0040a810(void *this,int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  
  if (param_2 == 0) {
    return param_1;
  }
  if (*(int *)((int)this + 4) < *(int *)((int)this + 0xc) + param_2) {
    FUN_0040a710(this,(*(int *)((int)this + 0xc) - *(int *)((int)this + 4)) + param_2);
  }
  *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + param_2;
                    // WARNING: Load size is inaccurate
  iVar1 = *this;
  *(int *)((int)this + 0x10) = iVar1;
  iVar2 = (*(int *)((int)this + 0xc) - param_1) - param_2;
  if ((0 < iVar2) && (0 < param_2)) {
    FID_conflict__memcpy
              ((void *)(iVar1 + (param_1 + param_2) * 4),(void *)(iVar1 + param_1 * 4),iVar2 * 4);
  }
  return param_1;
}



uint __fastcall FUN_0040a880(int param_1)

{
  uint uVar1;
  
  uVar1 = (**(code **)(*(int *)(param_1 + -4) + 0x8c))();
  return uVar1 & 0xffffff00;
}



undefined4 FUN_0040a8a0(undefined param_1,undefined param_2,undefined param_3,undefined4 param_4)

{
  return param_4;
}



void __thiscall FUN_0040a8b0(void *this,int param_1)

{
  FUN_00408230((void *)((int)this + 0xeb8),&param_1);
  return;
}



undefined4 __thiscall FUN_0040a8d0(void *this,int param_1)

{
  undefined4 uVar1;
  
  uVar1 = FUN_00408230((void *)((int)this + 0xa0),&param_1);
  return CONCAT31((int3)((uint)uVar1 >> 8),1);
}



void FUN_0040a8f0(undefined4 param_1)

{
  DAT_0044a6d8 = param_1;
  return;
}



void __fastcall FUN_0040a900(int *param_1)

{
  int iVar1;
  
  iVar1 = param_1[0x2b];
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)**(undefined4 **)(param_1[0x28] + iVar1 * 4))();
    if (param_1[0x2b] + -1 < iVar1) {
      iVar1 = param_1[0x2b];
    }
  }
  (**(code **)(*param_1 + 0x78))(1);
  return;
}



void __fastcall FUN_0040a940(int *param_1)

{
  int iVar1;
  char cVar2;
  
  if (param_1[0x46c] != 0) {
    (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x28))(param_1[0x46c]);
  }
  param_1[0x46c] = 0;
  if (((int *)param_1[0x4c4] != (int *)0x0) &&
     (cVar2 = (**(code **)(*(int *)param_1[0x4c4] + 0x20))(), cVar2 != '\0')) {
    FUN_004102c0(param_1 + 0x6e);
    (**(code **)(*(int *)param_1[0x4c4] + 0x1c))();
  }
  *(undefined *)(param_1 + 0x4c3) = 0;
  param_1[0x4c4] = 0;
  param_1[0x4c5] = 0;
  param_1[0x4c6] = 0;
  param_1[0x4c7] = 0;
  param_1[0x4c8] = 0;
  param_1[0x4c9] = 0;
  param_1[0x4ca] = 0;
  *(undefined *)(param_1 + 0x3f2) = 0;
  (**(code **)(param_1[0x3b3] + 0xc))();
  iVar1 = param_1[0x3b1];
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)**(undefined4 **)(param_1[0x3ae] + iVar1 * 4))();
    if (param_1[0x3b1] + -1 < iVar1) {
      iVar1 = param_1[0x3b1];
    }
  }
  iVar1 = param_1[0x2b];
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)**(undefined4 **)(param_1[0x28] + iVar1 * 4))();
    if (param_1[0x2b] + -1 < iVar1) {
      iVar1 = param_1[0x2b];
    }
  }
  (**(code **)(*param_1 + 0x78))(1);
  return;
}



undefined4 * __thiscall FUN_0040aa60(void *this,undefined4 param_1)

{
  void *this_00;
  undefined4 *puVar1;
  
  FUN_0040f440((int *)0x0,DAT_0044a6d8,(byte *)"Creating user %d");
  this_00 = (void *)FUN_00403c30(0x8c8);
  if (this_00 != (void *)0x0) {
    puVar1 = FUN_0040a1d0(this_00,param_1,(int)this + -0xeb0);
    return puVar1;
  }
  return (undefined4 *)0x0;
}



void __thiscall FUN_0040aab0(void *this,uint param_1,undefined4 param_2)

{
  FUN_00408440((void *)((int)this + 0xfcc),param_1,param_2,'\0');
  return;
}



int __fastcall FUN_0040aad0(int param_1)

{
  ushort uVar1;
  int iVar2;
  
  uVar1 = *(ushort *)(param_1 + 0xfe6);
  iVar2 = (**(code **)(**(int **)(param_1 + 0xfd0) + 8))();
  return (uint)(iVar2 != 0) + (uint)uVar1;
}



void FUN_0040aaed(void)

{
  FUN_00408410();
  return;
}



bool __thiscall FUN_0040ab00(void *this,uint param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  undefined8 uVar3;
  
  if (param_2 == 0) {
    return true;
  }
  piVar1 = (int *)FUN_00408440((void *)((int)this + 0xfcc),param_1,0,'\0');
  if ((*(char *)((int)this + 0x130c) != '\0') && (piVar1 != (int *)0x0)) {
    uVar3 = (**(code **)(*piVar1 + 4))();
    iVar2 = (**(code **)(**(int **)((int)this + 0x1310) + 0x80))(uVar3,param_2);
    return (bool)('\x01' - (iVar2 != 0));
  }
  return false;
}



void __thiscall FUN_0040ab60(void *this,int *param_1)

{
  int *piVar1;
  char cVar2;
  undefined8 uVar3;
  
  (**(code **)*param_1)();
  FUN_0040f440((int *)0x0,DAT_0044a6d8,(byte *)"Releasing user %d");
  cVar2 = (**(code **)(*param_1 + 0x74))();
  if (cVar2 == '\0') {
    if (*(char *)((int)this + 0x45c) != '\0') {
      piVar1 = *(int **)((int)this + 0x460);
      uVar3 = (**(code **)(*param_1 + 4))();
      (**(code **)(*piVar1 + 0x78))(uVar3);
    }
    (**(code **)(*param_1 + 0x50))(1);
  }
  return;
}



undefined4 FUN_0040abd0(void)

{
  return 0;
}



undefined4 * FUN_0040abe0(void)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_00403c30(0x1340);
  if (puVar1 != (undefined4 *)0x0) {
    puVar1 = FUN_0040a050(puVar1);
    return puVar1;
  }
  return (undefined4 *)0x0;
}



void __cdecl FUN_0040ac00(SOCKET param_1)

{
  closesocket(param_1);
  return;
}



// WARNING: Could not reconcile some variable overlaps

SOCKET __cdecl FUN_0040ac10(undefined4 param_1,undefined4 param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  SOCKET s;
  undefined local_34 [16];
  undefined local_24 [16];
  char local_14 [8];
  u_long local_c;
  int local_8;
  
  s = 0xffffffff;
  FUN_0041dfc0(local_14,6,&DAT_0043cf78);
  local_34 = CONCAT412(6,CONCAT48(1,0x200000000));
  local_24 = ZEXT816(0);
  iVar2 = getaddrinfo(param_1,local_14,local_34,&local_8);
  if (iVar2 != 0) {
    return 0xffffffff;
  }
  iVar2 = local_8;
  if (local_8 != 0) {
    while( true ) {
      s = socket(*(int *)(iVar2 + 4),*(int *)(iVar2 + 8),*(int *)(iVar2 + 0xc));
      local_c = 1;
      ioctlsocket(s,-0x7ffb9982,&local_c);
      iVar3 = connect(s,*(sockaddr **)(iVar2 + 0x18),*(int *)(iVar2 + 0x10));
      if (iVar3 == 0) break;
      if (((iVar3 < 0) && ((iVar3 = WSAGetLastError(), iVar3 == 0x2733 || (iVar3 == 0x2734)))) ||
         (piVar1 = (int *)(iVar2 + 0x1c), iVar2 = *piVar1, *piVar1 == 0)) break;
    }
    if (local_8 != 0) {
      freeaddrinfo(local_8);
    }
  }
  return s;
}



int WSAGetLastError(void)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040acf0. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = WSAGetLastError();
  return iVar1;
}



void FUN_0040ad00(void)

{
  WSADATA local_194;
  
  WSAStartup(0x101,&local_194);
  return;
}



undefined4 __cdecl FUN_0040ad20(int param_1)

{
  if (((param_1 != 0x2714) && (param_1 != 0x2733)) && (param_1 != 0x2734)) {
    return 0;
  }
  return 1;
}



void __cdecl FUN_0040ad50(SOCKET param_1,char *param_2,int param_3)

{
  recv(param_1,param_2,param_3,0);
  return;
}



int WSACleanup(void)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040ad70. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = WSACleanup();
  return iVar1;
}



void __cdecl FUN_0040ad80(SOCKET param_1,char *param_2,int param_3)

{
  send(param_1,param_2,param_3,0);
  return;
}



undefined4 * __fastcall FUN_0040ada0(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixItemCache::vftable;
  param_1[2] = 0;
  param_1[3] = 0;
  param_1[4] = 0;
  param_1[6] = param_1[2];
  param_1[5] = 0;
  param_1[7] = 0;
  param_1[8] = 0;
  param_1[9] = 0;
  param_1[0xb] = param_1[7];
  param_1[10] = 0;
  param_1[0xc] = 0;
  param_1[0xd] = 0;
  param_1[0xe] = 0;
  param_1[0x10] = param_1[0xc];
  param_1[0xf] = 0;
  param_1[0x11] = FUN_00408f40;
  param_1[0x12] = 0;
  param_1[0x13] = 0;
  param_1[0x14] = 0;
  param_1[0x17] = param_1[0x12];
  param_1[0x15] = 0xffff;
  param_1[0x16] = 0xffffffff;
  param_1[0x18] = FUN_00408f40;
  param_1[0x19] = 0;
  param_1[0x1a] = 0;
  param_1[0x1b] = 0;
  param_1[0x1e] = param_1[0x19];
  param_1[0x1c] = 0xffff;
  param_1[0x1d] = 0xffffffff;
  param_1[0x1f] = FUN_00408f40;
  param_1[0x20] = 0;
  param_1[0x21] = 0;
  param_1[0x22] = 0;
  param_1[0x25] = param_1[0x20];
  param_1[0x23] = 0xffff;
  param_1[0x24] = 0xffffffff;
  param_1[0x26] = FUN_00408f40;
  param_1[0x27] = 0;
  param_1[0x28] = 0;
  param_1[0x29] = 0;
  param_1[0x2c] = param_1[0x27];
  param_1[0x2a] = 0xffff;
  param_1[0x2b] = 0xffffffff;
  *(undefined *)(param_1 + 1) = 0;
  FUN_0041e380((int)(param_1 + 0x2d),"");
  return param_1;
}



void __fastcall FUN_0040af20(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixItemCache::vftable;
  FUN_0040c100((int)(param_1 + 0x11));
  FUN_00410c50((int)(param_1 + 0x26));
  FUN_00410c50((int)(param_1 + 0x1f));
  FUN_00410c50((int)(param_1 + 0x18));
  FUN_00410c50((int)(param_1 + 0x11));
  FUN_0040a350(param_1 + 0xc);
  FUN_0040a350(param_1 + 7);
  FUN_0040a350(param_1 + 2);
  return;
}



undefined4 * __thiscall FUN_0040af70(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixItemCache::vftable;
  FUN_0040c100((int)this + 0x44);
  FUN_00410c50((int)this + 0x98);
  FUN_00410c50((int)this + 0x7c);
  FUN_00410c50((int)this + 0x60);
  FUN_00410c50((int)this + 0x44);
  FUN_0040a350((int *)((int)this + 0x30));
  FUN_0040a350((int *)((int)this + 0x1c));
  FUN_0040a350((int *)((int)this + 8));
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe
// WARNING: Unable to track spacebase fully for stack

void __cdecl FUN_0040afe0(int param_1,int param_2,int param_3)

{
  int iVar1;
  undefined *puVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  void *apvStackY48 [3];
  undefined4 local_14 [3];
  undefined *local_8;
  
  if (param_3 != 0) {
    apvStackY48[2] = (void *)0x40affe;
    FUN_0041ce20(local_14,0);
    apvStackY48[2] = (void *)0x40b007;
    FUN_0041d3d0(local_14,param_3);
    iVar3 = FUN_0041cef0();
    iVar1 = -(((param_2 + -1 + iVar3) / iVar3) * iVar3 + 0xfU & 0xfffffff0);
    local_8 = &stack0xffffffe0 + iVar1;
    iVar5 = param_2;
    if (iVar3 <= param_2) {
      iVar4 = param_1;
      do {
        *(undefined **)(&stack0xffffffdc + iVar1) = &stack0xffffffe0 + iVar4 + (iVar1 - param_1);
        *(int *)((int)apvStackY48 + iVar1 + 8) = iVar4;
        *(undefined4 *)((int)apvStackY48 + iVar1 + 4) = 0x40b04e;
        FUN_0041cf00(local_14,*(undefined **)((int)apvStackY48 + iVar1 + 8),
                     *(undefined **)(&stack0xffffffdc + iVar1));
        iVar5 = iVar5 - iVar3;
        iVar4 = iVar4 + iVar3;
      } while (iVar3 <= iVar5);
    }
    puVar2 = local_8;
    *(int *)(&stack0xffffffdc + iVar1) = param_2 - iVar5;
    *(undefined **)((int)apvStackY48 + iVar1 + 8) = puVar2;
    *(int *)((int)apvStackY48 + iVar1 + 4) = param_1;
    *(undefined4 *)((int)apvStackY48 + iVar1) = 0x40b06c;
    FID_conflict__memcpy
              (*(void **)((int)apvStackY48 + iVar1 + 4),*(void **)((int)apvStackY48 + iVar1 + 8),
               *(size_t *)(&stack0xffffffdc + iVar1));
    *(undefined4 *)(&stack0xffffffdc + iVar1) = 0x40b077;
    FUN_0041ce90(local_14);
  }
  return;
}



uint __thiscall FUN_0040b090(void *this,undefined4 param_1)

{
  char cVar1;
  uint uVar2;
  int iVar3;
  ushort uVar4;
  
  uVar4 = *(ushort *)((int)this + 0x10);
  if (uVar4 == 0xffff) {
    return 0xffff;
  }
  do {
    iVar3 = (uint)uVar4 * 0x10;
                    // WARNING: Load size is inaccurate
    cVar1 = (**this)(param_1,*(int *)((int)this + 4) + 8 + iVar3);
    if (cVar1 == '\0') {
                    // WARNING: Load size is inaccurate
      uVar2 = (**this)(*(int *)((int)this + 4) + 8 + iVar3,param_1);
      if ((char)uVar2 == '\0') break;
      uVar4 = *(ushort *)(*(int *)((int)this + 4) + 2 + iVar3);
    }
    else {
      uVar4 = *(ushort *)(iVar3 + *(int *)((int)this + 4));
    }
    uVar2 = 0;
  } while (uVar4 != 0xffff);
  return uVar2 & 0xffff0000 | (uint)uVar4;
}



void __thiscall FUN_0040b110(void *this,undefined4 param_1,ushort *param_2,undefined *param_3)

{
  ushort uVar1;
  char cVar2;
  int iVar3;
  
  uVar1 = *(ushort *)((int)this + 0x10);
  *param_2 = 0xffff;
  *param_3 = 0;
  while (uVar1 != 0xffff) {
    *param_2 = uVar1;
    iVar3 = (uint)uVar1 * 0x10;
                    // WARNING: Load size is inaccurate
    cVar2 = (**this)(param_1,*(int *)((int)this + 4) + 8 + iVar3);
    if (cVar2 == '\0') {
      *param_3 = 0;
      uVar1 = *(ushort *)(iVar3 + 2 + *(int *)((int)this + 4));
    }
    else {
      *param_3 = 1;
      uVar1 = *(ushort *)(iVar3 + *(int *)((int)this + 4));
    }
  }
  return;
}



undefined4 __thiscall FUN_0040b180(void *this,int param_1)

{
  uint uVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  bool bVar5;
  
  uVar4 = 0;
  if (*(short *)((int)this + 0x84) != 0) {
    uVar1 = (uint)*(ushort *)((int)this + 0x84);
    do {
      uVar3 = uVar4 & 0xffff;
      if ((uVar3 < *(uint *)((int)this + 0x84)) &&
         (uVar2 = (ushort)uVar3,
         uVar2 < *(ushort *)((int)this + 0x92) || uVar2 == *(ushort *)((int)this + 0x92))) {
        bVar5 = uVar2 == 0xffff;
        if (!bVar5) {
          bVar5 = *(ushort *)(*(int *)((int)this + 0x80) + uVar3 * 0x10) == uVar2;
        }
        if (!bVar5) {
          if (param_1 == 0) {
            return *(undefined4 *)(*(int *)((int)this + 0x80) + 0xc + (uVar4 & 0xffff) * 0x10);
          }
          param_1 = param_1 + -1;
        }
        uVar1 = (uint)*(ushort *)((int)this + 0x84);
      }
      uVar4 = uVar4 + 1;
    } while ((int)uVar4 < (int)uVar1);
  }
  return 0;
}



undefined2 __fastcall FUN_0040b210(int param_1)

{
  return *(undefined2 *)(param_1 + 0x8e);
}



undefined4 __thiscall FUN_0040b220(void *this,int param_1)

{
  return *(undefined4 *)(*(int *)((int)this + 8) + param_1 * 4);
}



undefined4 __fastcall FUN_0040b230(int param_1)

{
  return *(undefined4 *)(param_1 + 0x14);
}



undefined4 __thiscall FUN_0040b240(void *this,int param_1)

{
  if ((-1 < param_1) && (param_1 < *(int *)((int)this + 0x28))) {
    return *(undefined4 *)(*(int *)((int)this + 0x1c) + param_1 * 4);
  }
  return 0;
}



undefined4 __fastcall FUN_0040b260(int param_1)

{
  return *(undefined4 *)(param_1 + 0x28);
}



undefined4 __thiscall FUN_0040b270(void *this,undefined4 param_1)

{
  uint uVar1;
  undefined4 local_c [2];
  
  local_c[0] = param_1;
  uVar1 = FUN_0040b090((void *)((int)this + 0x44),local_c);
  if ((uVar1 & 0xffff) == 0xffff) {
    return 0;
  }
  return *(undefined4 *)(*(int *)((int)this + 0x48) + 0xc + (uVar1 & 0xffff) * 0x10);
}



undefined4 __thiscall FUN_0040b2b0(void *this,uint param_1)

{
  if (param_1 == 0xffff) {
    return 0;
  }
  return *(undefined4 *)(*(int *)((int)this + 0x48) + 0xc + (param_1 & 0xffff) * 0x10);
}



undefined2 __fastcall FUN_0040b2e0(int param_1)

{
  return *(undefined2 *)(param_1 + 0x56);
}



undefined4 __thiscall FUN_0040b2f0(void *this,uint param_1)

{
  undefined4 uVar1;
  
  if (param_1 == 0xffff) {
    return 0;
  }
  uVar1 = (**(code **)(**(int **)(*(int *)((int)this + 0x48) + 0xc + (param_1 & 0xffff) * 0x10) + 4)
          )();
  return uVar1;
}



undefined4 __thiscall FUN_0040b320(void *this,undefined4 param_1)

{
  uint uVar1;
  ushort uVar2;
  bool bVar3;
  undefined4 local_c [2];
  
  local_c[0] = param_1;
  uVar1 = FUN_0040b090((void *)((int)this + 0x98),local_c);
  uVar1 = uVar1 & 0xffff;
  if ((uVar1 < *(uint *)((int)this + 0xa0)) &&
     (uVar2 = (ushort)uVar1,
     uVar2 < *(ushort *)((int)this + 0xae) || uVar2 == *(ushort *)((int)this + 0xae))) {
    bVar3 = uVar2 == 0xffff;
    if (!bVar3) {
      bVar3 = *(ushort *)(*(int *)((int)this + 0x9c) + uVar1 * 0x10) == uVar2;
    }
    if (!bVar3) {
      return *(undefined4 *)(*(int *)((int)this + 0x9c) + 0xc + uVar1 * 0x10);
    }
  }
  return 0;
}



undefined4 __thiscall FUN_0040b3a0(void *this,int param_1,void *param_2,int param_3)

{
  ushort uVar1;
  int iVar2;
  ushort uVar3;
  uint uVar4;
  uint uVar5;
  void *local_8;
  
  uVar5 = 0;
  local_8 = this;
  if (*(short *)((int)this + 0x4c) != 0) {
    do {
      uVar4 = uVar5 & 0xffff;
      if ((uVar4 < *(uint *)((int)this + 0x4c)) &&
         (uVar3 = (ushort)uVar4,
         uVar3 < *(ushort *)((int)this + 0x5a) || uVar3 == *(ushort *)((int)this + 0x5a))) {
        if (uVar3 == 0xffff) {
          uVar1 = 0xffff;
        }
        else {
          uVar1 = *(ushort *)(*(int *)((int)this + 0x48) + uVar4 * 0x10);
        }
        if (((uVar1 != uVar3) &&
            (iVar2 = (**(code **)(**(int **)(*(int *)((int)this + 0x48) + 0xc + uVar4 * 0x10) + 0xc)
                     )(), iVar2 == param_1)) &&
           ((iVar2 = (**(code **)(**(int **)(*(int *)((int)this + 0x48) + 0xc + uVar4 * 0x10) + 0x14
                                 ))(), iVar2 == param_3 || (param_3 == -1)))) {
          local_8 = *(void **)(*(int *)((int)this + 0x48) + 0xc + uVar4 * 0x10);
          FUN_004058e0(param_2,&local_8);
        }
      }
      uVar5 = uVar5 + 1;
    } while ((int)uVar5 < (int)(uint)*(ushort *)((int)this + 0x4c));
    return *(undefined4 *)((int)param_2 + 0xc);
  }
  return *(undefined4 *)((int)param_2 + 0xc);
}



int __fastcall FUN_0040b470(int param_1)

{
  return param_1 + 0xb4;
}



undefined4 __thiscall FUN_0040b480(void *this,int param_1,uint param_2)

{
  int iVar1;
  uint uVar2;
  int local_c [2];
  
  if (param_1 == -1) {
    return *(undefined4 *)(*(int *)((int)this + 0x48) + 0xc + (param_2 & 0xffff) * 0x10);
  }
  local_c[0] = param_1;
  uVar2 = FUN_0040b090((void *)((int)this + 0x60),local_c);
  if ((uVar2 & 0xffff) != 0xffff) {
    iVar1 = *(int *)(*(int *)((int)this + 100) + 0xc + (uVar2 & 0xffff) * 0x10);
    if ((-1 < (int)param_2) && ((int)param_2 < *(int *)(iVar1 + 0x10))) {
      return *(undefined4 *)(*(int *)(iVar1 + 4) + param_2 * 4);
    }
  }
  return 0;
}



uint __thiscall FUN_0040b4f0(void *this,int param_1)

{
  uint uVar1;
  int local_c [2];
  
  if (param_1 == -1) {
    return (uint)*(ushort *)((int)this + 0x56);
  }
  local_c[0] = param_1;
  uVar1 = FUN_0040b090((void *)((int)this + 0x60),local_c);
  if ((uVar1 & 0xffff) == 0xffff) {
    return 0;
  }
  return *(uint *)(*(int *)(*(int *)((int)this + 100) + 0xc + (uVar1 & 0xffff) * 0x10) + 0x10);
}



undefined4 __thiscall FUN_0040b550(void *this,int param_1)

{
  if ((-1 < param_1) && (param_1 < *(int *)((int)this + 0x3c))) {
    return *(undefined4 *)(*(int *)((int)this + 0x30) + param_1 * 4);
  }
  return 0;
}



undefined4 __fastcall FUN_0040b570(int param_1)

{
  return *(undefined4 *)(param_1 + 0x3c);
}



void __thiscall FUN_0040b580(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  
  iVar1 = *(int *)((int)this + 8);
  if (-1 < iVar1) {
    uVar2 = *(uint *)((int)this + 4);
    uVar4 = param_1 + uVar2;
    if (iVar1 == 0) {
      if (uVar2 == 0) {
        uVar2 = 2;
        if (2 < (int)uVar4) {
          uVar2 = uVar4;
        }
      }
      else {
        for (; (int)uVar2 < (int)uVar4; uVar2 = uVar2 * 2) {
        }
      }
    }
    else {
      uVar2 = ((int)(uVar4 - 1) / iVar1 + 1) * iVar1;
    }
    if ((int)(uVar2 & 0xffff) < (int)uVar4) {
      if (((short)uVar2 == 0) && ((int)uVar4 < 0x10000)) {
        uVar2 = uVar2 - 1;
      }
      else {
        if ((uVar4 & 0xffff) != uVar4) {
          return;
        }
        do {
          uVar2 = (int)(uVar2 + uVar4) / 2;
        } while ((int)(uVar2 & 0xffff) < (int)uVar4);
      }
    }
                    // WARNING: Load size is inaccurate
    *(uint *)((int)this + 4) = uVar2;
    if (*this != 0) {
      uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this);
      *(undefined4 *)this = uVar3;
      return;
    }
    uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar2 << 4);
    *(undefined4 *)this = uVar3;
  }
  return;
}



void __fastcall FUN_0040b620(void *param_1)

{
  undefined4 uVar1;
  uint uVar2;
  
  if (*(char *)((int)param_1 + 4) == '\0') {
    uVar1 = FUN_0040b9b0((int)param_1);
    if ((char)uVar1 != '\0') {
      uVar2 = FUN_0040be80(param_1);
      if ((char)uVar2 != '\0') {
        *(undefined *)((int)param_1 + 4) = 1;
      }
    }
  }
  return;
}



uint __thiscall FUN_0040b650(void *this,undefined4 *param_1,undefined4 *param_2)

{
  undefined4 *puVar1;
  uint uVar2;
  undefined4 *puVar3;
  undefined4 local_c;
  undefined4 local_8;
  
  puVar1 = param_2;
  puVar3 = param_1;
  param_1 = (undefined4 *)((uint)param_1 & 0xffffff00);
  local_c = *puVar3;
  param_2 = (undefined4 *)0xffff;
  local_8 = *puVar1;
  FUN_0040b110(this,&local_c,(ushort *)&param_2,(undefined *)&param_1);
  uVar2 = FUN_0040c000((int)this);
  uVar2 = uVar2 & 0xffff;
  FUN_0040b930(this,uVar2,(ushort)param_2,(char)param_1);
  *(short *)((int)this + 0x12) = *(short *)((int)this + 0x12) + 1;
  puVar3 = (undefined4 *)(*(int *)((int)this + 4) + 8 + uVar2 * 0x10);
  if (puVar3 != (undefined4 *)0x0) {
    *puVar3 = local_c;
    puVar3[1] = local_8;
  }
  return (uint)puVar3 & 0xffff0000 | uVar2;
}



void __thiscall FUN_0040b6d0(void *this,uint param_1)

{
  ushort uVar1;
  int iVar2;
  ushort uVar3;
  short sVar4;
  uint uVar5;
  int iVar6;
  uint uVar7;
  short sVar8;
  uint uVar9;
  
  if ((short)param_1 != *(short *)((int)this + 0x10)) {
    while (sVar8 = (short)param_1, sVar8 != -1) {
      iVar2 = *(int *)((int)this + 4);
      uVar1 = *(ushort *)(iVar2 + 4 + (param_1 & 0xffff) * 0x10);
      uVar7 = (uint)uVar1;
      if ((uVar1 == 0xffff) || (*(short *)(iVar2 + 6 + uVar7 * 0x10) != 0)) break;
      if (uVar1 == 0xffff) {
        uVar5 = 0xffff;
LAB_0040b750:
        uVar3 = 0xffff;
      }
      else {
        uVar3 = *(ushort *)(iVar2 + 4 + uVar7 * 0x10);
        uVar5 = (uint)uVar3;
        if (uVar3 == 0xffff) goto LAB_0040b750;
        uVar3 = *(ushort *)(iVar2 + uVar5 * 0x10);
      }
      if (uVar3 == uVar1) {
        if ((short)uVar5 != -1) {
          uVar3 = *(ushort *)(uVar5 * 0x10 + 2 + iVar2);
          if ((uVar3 != 0xffff) && (iVar6 = (uint)uVar3 * 0x10, *(short *)(iVar6 + 6 + iVar2) == 0))
          {
            *(undefined2 *)(iVar2 + 6 + uVar7 * 0x10) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar6) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x10) = 0;
            param_1 = uVar5;
            goto LAB_0040b903;
          }
        }
        if (uVar1 == 0xffff) {
          sVar4 = -1;
        }
        else {
          sVar4 = *(short *)(iVar2 + 2 + uVar7 * 0x10);
        }
        uVar9 = uVar7;
        if (sVar4 == sVar8) {
          FUN_0040e6c0(this,uVar1);
          uVar5 = 0xffff;
          if (uVar1 == 0xffff) {
            uVar9 = 0xffff;
            param_1 = uVar7;
          }
          else {
            uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + uVar7 * 0x10);
            uVar9 = (uint)uVar1;
            param_1 = uVar7;
            if (uVar1 != 0xffff) {
              uVar5 = (uint)*(ushort *)(*(int *)((int)this + 4) + 4 + uVar9 * 0x10);
            }
          }
        }
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar9 * 0x10) = 1;
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x10) = 0;
        FUN_0040c1a0(this,(ushort)uVar5);
      }
      else {
        if ((short)uVar5 != -1) {
          uVar3 = *(ushort *)(uVar5 * 0x10 + iVar2);
          if ((uVar3 != 0xffff) && (iVar6 = (uint)uVar3 * 0x10, *(short *)(iVar6 + 6 + iVar2) == 0))
          {
            *(undefined2 *)(iVar2 + 6 + uVar7 * 0x10) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar6) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x10) = 0;
            param_1 = uVar5;
            goto LAB_0040b903;
          }
        }
        if (uVar1 == 0xffff) {
          sVar4 = -1;
        }
        else {
          sVar4 = *(short *)(iVar2 + uVar7 * 0x10);
        }
        uVar9 = uVar7;
        if (sVar4 == sVar8) {
          FUN_0040c1a0(this,uVar1);
          uVar5 = 0xffff;
          if (uVar1 == 0xffff) {
            uVar9 = 0xffff;
            param_1 = uVar7;
          }
          else {
            uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + uVar7 * 0x10);
            uVar9 = (uint)uVar1;
            param_1 = uVar7;
            if (uVar1 != 0xffff) {
              uVar5 = (uint)*(ushort *)(*(int *)((int)this + 4) + 4 + uVar9 * 0x10);
            }
          }
        }
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar9 * 0x10) = 1;
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x10) = 0;
        FUN_0040e6c0(this,(ushort)uVar5);
      }
LAB_0040b903:
      if ((short)param_1 == *(short *)((int)this + 0x10)) break;
    }
  }
  *(undefined2 *)(*(int *)((int)this + 4) + 6 + (uint)*(ushort *)((int)this + 0x10) * 0x10) = 1;
  return;
}



void __thiscall FUN_0040b930(void *this,uint param_1,ushort param_2,char param_3)

{
  undefined4 *puVar1;
  undefined2 uVar2;
  
  puVar1 = (undefined4 *)((param_1 & 0xffff) * 0x10 + *(int *)((int)this + 4));
  *(ushort *)(puVar1 + 1) = param_2;
  *puVar1 = 0xffffffff;
  *(undefined2 *)((int)puVar1 + 6) = 0;
  uVar2 = (undefined2)param_1;
  if (param_2 == 0xffff) {
    *(undefined2 *)((int)this + 0x10) = uVar2;
    FUN_0040b6d0(this,param_1);
    return;
  }
  if (param_3 != '\0') {
    *(undefined2 *)(*(int *)((int)this + 4) + (uint)param_2 * 0x10) = uVar2;
    FUN_0040b6d0(this,param_1);
    return;
  }
  *(undefined2 *)(*(int *)((int)this + 4) + 2 + (uint)param_2 * 0x10) = uVar2;
  FUN_0040b6d0(this,param_1);
  return;
}



uint __fastcall FUN_0040b9b0(int param_1)

{
  uint *puVar1;
  void *pvVar2;
  int *piVar3;
  uint uVar4;
  void *this;
  int iVar5;
  undefined4 uVar6;
  undefined4 local_18 [2];
  undefined4 local_10;
  int *local_c;
  uint *local_8;
  
  pvVar2 = (void *)FUN_0041ec00(0x24);
  if (pvVar2 == (void *)0x0) {
    local_8 = (uint *)0x0;
  }
  else {
    local_8 = FUN_0041eb80(pvVar2,"attributes");
  }
  puVar1 = local_8;
  if (DAT_0044a80c == 0) {
    piVar3 = (int *)0x0;
  }
  else {
    piVar3 = (int *)(DAT_0044a80c + 4);
  }
  uVar4 = FUN_0041ff00(piVar3,(uint *)"scripts/items/attributes.res",&DAT_0043b3fc,(int *)0x0);
  if (((char)uVar4 == '\0') &&
     (uVar4 = FUN_0040baf0((uint *)"scripts/items/attributes.ctx"), (char)uVar4 == '\0')) {
    *(undefined *)(param_1 + 4) = 0;
    uVar4 = FUN_00421390((int)puVar1);
    return uVar4 & 0xffffff00;
  }
  pvVar2 = (void *)FUN_0041f060((int)puVar1);
  do {
    if (pvVar2 == (void *)0x0) {
      uVar6 = FUN_00421390((int)puVar1);
      return CONCAT31((int3)((uint)uVar6 >> 8),1);
    }
    uVar4 = FUN_0041f130(pvVar2,"id",0xffffffff);
    if (0 < (int)uVar4) {
      this = (void *)FUN_00403c30(0x1c);
      if (this == (void *)0x0) {
        piVar3 = (int *)0x0;
      }
      else {
        piVar3 = FUN_00418050(this,uVar4);
      }
      (**(code **)(*piVar3 + 0x1c))(pvVar2);
      local_c = piVar3;
      iVar5 = (**(code **)*piVar3)();
      if (0 < iVar5) {
        local_18[0] = (**(code **)*piVar3)();
        uVar4 = FUN_0040b090((void *)(param_1 + 0x7c),local_18);
        if ((short)uVar4 == -1) {
          local_10 = (**(code **)*piVar3)();
          FUN_0040b650((void *)(param_1 + 0x7c),&local_10,&local_c);
          goto LAB_0040baca;
        }
      }
      (**(code **)(*piVar3 + 0x18))(1);
    }
LAB_0040baca:
    pvVar2 = (void *)FUN_0041f1f0((int)pvVar2);
    puVar1 = local_8;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint __cdecl FUN_0040baf0(uint *param_1)

{
  int iVar1;
  int iVar2;
  char *pcVar3;
  uint uVar4;
  uint uVar5;
  
  iVar1 = (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x24))(param_1,&DAT_0043b404,&DAT_0043b3fc);
  if (iVar1 == 0) {
    return 0;
  }
  iVar2 = (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x38))(iVar1);
  pcVar3 = (char *)MemAllocScratch(iVar2 + 1);
  (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x1c))(pcVar3,iVar2,iVar1);
  pcVar3[iVar2] = '\0';
  (**(code **)(*(int *)(DAT_0044a80c + 4) + 0x28))(iVar1);
  if (DAT_0044a70d == '\0') {
    _DAT_0044a705 = 0x44344231;
    _DAT_0044a709 = 0x5a3174;
    DAT_0044a704 = 0x37;
    DAT_0044a70d = '\x01';
  }
  FUN_0040afe0((int)pcVar3,iVar2,(int)&DAT_0044a704);
  if (DAT_0044a80c == 0) {
    iVar1 = 0;
  }
  else {
    iVar1 = DAT_0044a80c + 4;
  }
  uVar4 = FUN_0041f9d0(param_1,pcVar3,iVar1,0,(int *)0x0);
  uVar5 = MemFreeScratch();
  return uVar5 & 0xffffff00 | uVar4 & 0xff;
}



uint __thiscall FUN_0040bbe0(void *this,undefined4 param_1,int *param_2)

{
  void *pvVar1;
  uint *puVar2;
  int *piVar3;
  uint uVar4;
  void *this_00;
  int iVar5;
  undefined4 uVar6;
  int *piVar7;
  byte bVar8;
  int iVar9;
  uint local_128 [65];
  undefined4 local_24 [2];
  undefined4 local_1c [2];
  void *local_14;
  uint *local_10;
  int *local_c;
  int local_8;
  
  pvVar1 = (void *)FUN_0041ec00(0x24);
  if (pvVar1 == (void *)0x0) {
    puVar2 = (uint *)0x0;
  }
  else {
    puVar2 = FUN_0041eb80(pvVar1,"items");
  }
  local_10 = puVar2;
  FUN_0041dfc0((char *)local_128,0x104,(byte *)"scripts/items/%s.res");
  if (DAT_0044a80c == 0) {
    piVar3 = (int *)0x0;
  }
  else {
    piVar3 = (int *)(DAT_0044a80c + 4);
  }
  uVar4 = FUN_0041ff00(piVar3,local_128,&DAT_0043b3fc,(int *)0x0);
  if ((char)uVar4 == '\0') {
    FUN_0041dfc0((char *)local_128,0x104,(byte *)"scripts/items/%s.ctx");
    uVar4 = FUN_0040baf0(local_128);
    if ((char)uVar4 == '\0') {
      *(undefined *)((int)this + 4) = 0;
      pvVar1 = (void *)FUN_00421390((int)puVar2);
      bVar8 = 0;
      goto LAB_0040be52;
    }
  }
  pvVar1 = (void *)FUN_0041f060((int)puVar2);
  while (local_14 = pvVar1, pvVar1 != (void *)0x0) {
    uVar4 = FUN_0041f130(pvVar1,"id",0xffffffff);
    if (0 < (int)uVar4) {
      this_00 = (void *)FUN_00403c30(0x68);
      if (this_00 == (void *)0x0) {
        piVar3 = (int *)0x0;
      }
      else {
        piVar3 = FUN_00417fa0(this_00,uVar4,param_1);
      }
      (**(code **)(*piVar3 + 0x5c))(pvVar1,(int)this + 0x7c);
      param_2 = piVar3;
      iVar5 = (**(code **)(*piVar3 + 4))();
      if (iVar5 != 0) {
        local_1c[0] = (**(code **)(*piVar3 + 4))();
        uVar4 = FUN_0040b090((void *)((int)this + 0x44),local_1c);
        if ((short)uVar4 == -1) {
          local_8 = (**(code **)(*piVar3 + 4))();
          FUN_0040b650((void *)((int)this + 0x44),&local_8,&param_2);
          local_24[0] = (**(code **)(*piVar3 + 0x14))();
          uVar4 = FUN_0040b090((void *)((int)this + 0x60),local_24);
          piVar7 = (int *)(uVar4 & 0xffff);
          if ((int *)(uVar4 & 0xffff) == (int *)0xffff) {
            local_8 = FUN_00403c30(0x18);
            if (local_8 == 0) {
              local_8 = 0;
            }
            else {
              *(undefined4 *)(local_8 + 4) = 0;
              *(undefined4 *)(local_8 + 8) = 0;
              *(undefined4 *)(local_8 + 0xc) = 0;
              *(undefined4 *)(local_8 + 0x10) = 0;
              *(undefined4 *)(local_8 + 0x14) = *(undefined4 *)(local_8 + 4);
            }
            local_c = (int *)(**(code **)(*piVar3 + 0x14))();
            uVar4 = FUN_0040b650((void *)((int)this + 0x60),&local_c,&local_8);
            local_c = (int *)(uVar4 & 0xffff);
            iVar9 = (int)local_c * 0x10;
            iVar5 = *(int *)((int)this + 100);
            uVar6 = (**(code **)(*piVar3 + 0x14))();
            **(undefined4 **)(iVar9 + iVar5 + 0xc) = uVar6;
            piVar7 = local_c;
            pvVar1 = local_14;
          }
          local_c = piVar3;
          FUN_004058e0((void *)(*(int *)(*(int *)((int)this + 100) + 0xc +
                                        ((uint)piVar7 & 0xffff) * 0x10) + 4),&local_c);
          iVar5 = (**(code **)*piVar3)();
          if (iVar5 == 1) {
            FUN_004058e0((void *)((int)this + 8),&param_2);
          }
          else if (iVar5 == 2) {
            FUN_004058e0((void *)((int)this + 0x1c),&param_2);
          }
          else if (iVar5 == 3) {
            FUN_004058e0((void *)((int)this + 0x30),&param_2);
          }
          goto LAB_0040be39;
        }
      }
      (**(code **)(*piVar3 + 0x58))(1);
    }
LAB_0040be39:
    pvVar1 = (void *)FUN_0041f1f0((int)pvVar1);
    puVar2 = local_10;
  }
  bVar8 = 1;
LAB_0040be52:
  if (puVar2 != (uint *)0x0) {
    thunk_FUN_00420d90((int)puVar2);
    pvVar1 = (void *)FUN_0041ec20(puVar2);
  }
  return (uint)pvVar1 & 0xffffff00 | (uint)bVar8;
}



uint __fastcall FUN_0040be80(void *param_1)

{
  ushort uVar1;
  void *pvVar2;
  uint *puVar3;
  int *piVar4;
  uint uVar5;
  byte *pbVar6;
  ushort uVar7;
  byte bVar8;
  undefined4 uVar9;
  uint uVar10;
  
  pvVar2 = (void *)FUN_0041ec00(0x24);
  if (pvVar2 == (void *)0x0) {
    puVar3 = (uint *)0x0;
  }
  else {
    puVar3 = FUN_0041eb80(pvVar2,"manifest");
  }
  if (DAT_0044a80c == 0) {
    piVar4 = (int *)0x0;
  }
  else {
    piVar4 = (int *)(DAT_0044a80c + 4);
  }
  uVar5 = FUN_0041ff00(piVar4,(uint *)"scripts/items/item_manifest.res",&DAT_0043b3fc,(int *)0x0);
  if (((char)uVar5 == '\0') &&
     (uVar5 = FUN_0040baf0((uint *)"scripts/items/item_manifest.ctx"), (char)uVar5 == '\0')) {
    *(undefined *)((int)param_1 + 4) = 0;
    uVar5 = FUN_00421390((int)puVar3);
    bVar8 = 0;
  }
  else {
    for (pvVar2 = (void *)FUN_0041f050((int)puVar3); pvVar2 != (void *)0x0;
        pvVar2 = (void *)FUN_0041f1e0((int)pvVar2)) {
      pbVar6 = FUN_0041f1b0((int)pvVar2);
      piVar4 = (int *)FUN_0041f250(pvVar2,(char *)0x0,(uint)&DAT_0043b3d2);
      uVar9 = 0;
      uVar5 = FUN_0041e3a0(pbVar6,&DAT_0043d018);
      if (uVar5 != 0) {
        uVar9 = FUN_00427f30((char *)pbVar6);
      }
      FUN_0040bbe0(param_1,uVar9,piVar4);
    }
    uVar5 = 0;
    uVar10 = 0;
    if (*(short *)((int)param_1 + 0x4c) != 0) {
      do {
        uVar5 = uVar10 & 0xffff;
        if ((uVar5 < *(uint *)((int)param_1 + 0x4c)) &&
           (uVar7 = (ushort)uVar5,
           uVar7 < *(ushort *)((int)param_1 + 0x5a) || uVar7 == *(ushort *)((int)param_1 + 0x5a))) {
          if (uVar7 == 0xffff) {
            uVar1 = 0xffff;
          }
          else {
            uVar1 = *(ushort *)(*(int *)((int)param_1 + 0x48) + uVar5 * 0x10);
          }
          if (uVar1 != uVar7) {
            (**(code **)(**(int **)(uVar5 * 0x10 + 0xc + *(int *)((int)param_1 + 0x48)) + 0x60))
                      ((int)param_1 + 0x44);
          }
        }
        uVar10 = uVar10 + 1;
        uVar5 = (int)param_1 + 0x44;
      } while ((int)uVar10 < (int)(uint)*(ushort *)((int)param_1 + 0x4c));
    }
    bVar8 = 1;
  }
  if (puVar3 != (uint *)0x0) {
    thunk_FUN_00420d90((int)puVar3);
    uVar5 = FUN_0041ec20(puVar3);
  }
  return uVar5 & 0xffffff00 | (uint)bVar8;
}



uint __fastcall FUN_0040c000(int param_1)

{
  uint uVar1;
  ushort uVar2;
  uint uVar3;
  
  uVar2 = *(ushort *)(param_1 + 0x14);
  if (uVar2 == 0xffff) {
    uVar1 = *(uint *)(param_1 + 8);
    if (*(ushort *)(param_1 + 0x16) < uVar1) {
      uVar2 = *(short *)(param_1 + 0x16) + 1;
      if (uVar1 <= (ushort)(*(short *)(param_1 + 0x16) + 1)) {
        uVar2 = 0xffff;
      }
    }
    else {
      uVar2 = (-(ushort)(uVar1 != 0) & 1) - 1;
    }
    uVar3 = (uint)uVar2;
    if (uVar1 <= uVar3) {
      FUN_0040b580((void *)(param_1 + 4),1);
      uVar1 = *(uint *)(param_1 + 8);
      if (*(ushort *)(param_1 + 0x16) < uVar1) {
        uVar2 = *(short *)(param_1 + 0x16) + 1;
        if (uVar1 <= (ushort)(*(short *)(param_1 + 0x16) + 1)) {
          uVar2 = 0xffff;
        }
      }
      else {
        uVar2 = (-(ushort)(uVar1 != 0) & 1) - 1;
      }
      uVar3 = (uint)uVar2;
      if (uVar1 <= uVar3) {
        uVar3 = Error("CUtlRBTree overflow!\n");
      }
    }
    *(ushort *)(param_1 + 0x16) = uVar2;
    *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(param_1 + 4);
    return uVar3 & 0xffff0000 | (uint)uVar2;
  }
  *(undefined2 *)(param_1 + 0x14) = *(undefined2 *)(*(int *)(param_1 + 4) + 2 + (uint)uVar2 * 0x10);
  *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(param_1 + 4);
  return (uint)uVar2;
}



void __fastcall FUN_0040c100(int param_1)

{
  int *piVar1;
  ushort uVar2;
  uint uVar3;
  ushort uVar4;
  
  uVar4 = 0;
  if (*(short *)(param_1 + 8) != 0) {
    do {
      uVar3 = (uint)uVar4;
      if ((uVar3 < *(uint *)(param_1 + 8)) &&
         (uVar4 < *(ushort *)(param_1 + 0x16) || uVar4 == *(ushort *)(param_1 + 0x16))) {
        if (uVar4 == 0xffff) {
          uVar2 = 0xffff;
        }
        else {
          uVar2 = *(ushort *)(*(int *)(param_1 + 4) + uVar3 * 0x10);
        }
        if ((uVar2 != uVar4) &&
           (piVar1 = *(int **)(*(int *)(param_1 + 4) + 0xc + uVar3 * 0x10), piVar1 != (int *)0x0)) {
          (**(code **)(*piVar1 + 0x58))(1);
        }
      }
      uVar4 = uVar4 + 1;
    } while (uVar4 < *(ushort *)(param_1 + 8));
  }
  FUN_0040e600(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  return;
}



void __thiscall FUN_0040c1a0(void *this,ushort param_1)

{
  ushort uVar1;
  ushort uVar2;
  undefined2 uVar3;
  int iVar4;
  ushort uVar5;
  
  if (param_1 == 0xffff) {
    uVar5 = 0xffff;
LAB_0040c1da:
    uVar3 = 0xffff;
  }
  else {
    uVar5 = *(ushort *)(*(int *)((int)this + 4) + (uint)param_1 * 0x10);
    if (uVar5 == 0xffff) goto LAB_0040c1da;
    uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 2 + (uint)uVar5 * 0x10);
  }
  iVar4 = (uint)param_1 * 0x10;
  *(undefined2 *)(iVar4 + *(int *)((int)this + 4)) = uVar3;
  if (uVar5 != 0xffff) {
    uVar1 = *(ushort *)((uint)uVar5 * 0x10 + 2 + *(int *)((int)this + 4));
    if (uVar1 != 0xffff) {
      *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar1 * 0x10) = param_1;
    }
    if (param_1 == 0xffff) {
      uVar3 = 0xffff;
    }
    else {
      uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(undefined2 *)(*(int *)((int)this + 4) + 4 + (uint)uVar5 * 0x10) = uVar3;
  }
  if (param_1 == *(ushort *)((int)this + 0x10)) {
    *(ushort *)((int)this + 0x10) = uVar5;
    goto LAB_0040c2a9;
  }
  if (param_1 == 0xffff) {
LAB_0040c25f:
    uVar1 = 0xffff;
  }
  else {
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    if (uVar1 == 0xffff) goto LAB_0040c25f;
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar1 * 0x10);
  }
  uVar2 = 0xffff;
  if (uVar1 == param_1) {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar2 * 0x10) = uVar5;
  }
  else {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + (uint)uVar2 * 0x10) = uVar5;
  }
LAB_0040c2a9:
  *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar5 * 0x10) = param_1;
  if (param_1 != 0xffff) {
    *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4) = uVar5;
  }
  return;
}



void __thiscall FUN_0040c2e0(void *this,int *param_1)

{
  uint uVar1;
  uint uVar2;
  void *this_00;
  undefined4 *this_01;
  undefined4 *puVar3;
  uint *puVar4;
  undefined2 uVar5;
  void *this_02;
  ushort uVar6;
  bool bVar7;
  uint local_24 [2];
  uint local_1c;
  undefined4 *local_18;
  void *local_14;
  uint local_10;
  uint local_c;
  char local_5;
  
  local_14 = this;
  FUN_0040f8b0(param_1,(void *)((int)this + 0xb4));
  local_10 = FUN_0040f920(param_1);
  local_10 = local_10 & 0xffff;
  if (local_10 != 0) {
    this_02 = (void *)((int)this + 0x98);
    do {
      uVar1 = FUN_0040f920(param_1);
      uVar1 = uVar1 & 0xffff;
      local_24[0] = uVar1;
      uVar2 = FUN_0040b090(this_02,local_24);
      uVar2 = uVar2 & 0xffff;
      if ((uVar2 < *(uint *)((int)this + 0xa0)) &&
         (uVar6 = (ushort)uVar2,
         uVar6 < *(ushort *)((int)this + 0xae) || uVar6 == *(ushort *)((int)this + 0xae))) {
        bVar7 = uVar6 == 0xffff;
        if (!bVar7) {
          bVar7 = *(ushort *)(*(int *)((int)this + 0x9c) + uVar2 * 0x10) == uVar6;
        }
        if (bVar7) goto LAB_0040c37d;
        this_01 = *(undefined4 **)(*(int *)((int)local_14 + 0x9c) + 0xc + uVar2 * 0x10);
      }
      else {
LAB_0040c37d:
        this_00 = (void *)FUN_00403c30(0x20);
        if (this_00 == (void *)0x0) {
          this_01 = (undefined4 *)0x0;
        }
        else {
          this_01 = FUN_00418090(this_00,uVar1);
        }
        local_c = 0xffff;
        local_5 = '\0';
        local_1c = uVar1;
        local_18 = this_01;
        FUN_0040b110(this_02,&local_1c,(ushort *)&local_c,&local_5);
        uVar1 = FUN_0040c000((int)this_02);
        uVar1 = uVar1 & 0xffff;
        puVar3 = (undefined4 *)(*(int *)((int)this + 0x9c) + uVar1 * 0x10);
        *(short *)(puVar3 + 1) = (short)local_c;
        *(undefined2 *)((int)puVar3 + 6) = 0;
        *puVar3 = 0xffffffff;
        uVar5 = (undefined2)uVar1;
        if ((short)local_c == -1) {
          *(undefined2 *)((int)this + 0xa8) = uVar5;
        }
        else if (local_5 == '\0') {
          *(undefined2 *)(*(int *)((int)this + 0x9c) + 2 + (local_c & 0xffff) * 0x10) = uVar5;
        }
        else {
          *(undefined2 *)(*(int *)((int)this + 0x9c) + (local_c & 0xffff) * 0x10) = uVar5;
        }
        FUN_0040b6d0(this_02,uVar1);
        *(short *)((int)this + 0xaa) = *(short *)((int)this + 0xaa) + 1;
        puVar4 = (uint *)(*(int *)((int)this + 0x9c) + 8 + uVar1 * 0x10);
        if (puVar4 != (uint *)0x0) {
          *puVar4 = local_1c;
          puVar4[1] = (uint)local_18;
        }
      }
      FUN_00419370(this_01,param_1);
      local_10 = local_10 - 1;
    } while (local_10 != 0);
  }
  return;
}



undefined4 * __fastcall FUN_0040c450(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixBaseSocket::vftable;
  FUN_004221a0(param_1 + 1,0,0,0);
  FUN_004221a0(param_1 + 0xd,0,0,0);
  param_1[0x3c] = 0xbf800000;
  param_1[0x3d] = 0xffffffff;
  param_1[0x1a] = 1;
  param_1[0x19] = 0;
  return param_1;
}



void __fastcall FUN_0040c4a0(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixBaseSocket::vftable;
  if (-1 < (int)param_1[0xf]) {
    if (param_1[0xd] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0xd]);
      param_1[0xd] = 0;
    }
    param_1[0xe] = 0;
  }
  if (-1 < (int)param_1[3]) {
    if (param_1[1] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[1]);
      param_1[1] = 0;
    }
    param_1[2] = 0;
  }
  return;
}



undefined4 * __thiscall FUN_0040c500(void *this,byte param_1)

{
  FUN_0040c4a0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_0040c530(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixNetworkBandwidthMonitor::vftable;
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



void __fastcall FUN_0040c560(int param_1)

{
  int iVar1;
  undefined4 *puVar2;
  float10 fVar3;
  
  *(undefined4 *)(param_1 + 0x18) = 0;
  *(undefined4 *)(param_1 + 0xa0) = 0;
  *(undefined4 *)(param_1 + 0x10) = 0;
  *(undefined4 *)(param_1 + 0x98) = 0;
  *(undefined4 *)(param_1 + 0x14) = 0;
  *(undefined4 *)(param_1 + 0x9c) = 0;
  *(undefined4 *)(param_1 + 0xc) = 0;
  *(undefined4 *)(param_1 + 0x94) = 0;
  fVar3 = (float10)Plat_FloatTime();
  *(float *)(param_1 + 8) = (float)fVar3;
  iVar1 = 0x1e;
  puVar2 = (undefined4 *)(param_1 + 0x1c);
  do {
    puVar2[0x22] = 0xffffffff;
    *puVar2 = 0xffffffff;
    iVar1 = iVar1 + -1;
    puVar2 = puVar2 + 1;
  } while (iVar1 != 0);
  return;
}



void __fastcall FUN_0040c5e0(void *param_1)

{
  *(undefined4 *)((int)param_1 + 0xc) = 0;
  *(undefined4 *)((int)param_1 + 0x10) = 0;
  *(undefined *)((int)param_1 + 0x14) = 0;
  *(undefined4 *)((int)param_1 + 0x20) = 0;
  *(undefined4 *)((int)param_1 + 0x1c) = 0xffffffff;
  FUN_004223b0(param_1,0);
  return;
}



undefined4 __fastcall FUN_0040c610(int *param_1)

{
  undefined4 uVar1;
  
  param_1[0x1a] = 2;
  (**(code **)(*param_1 + 0xc))();
  uVar1 = (**(code **)(*param_1 + 0x34))();
  return CONCAT31((int3)((uint)uVar1 >> 8),1);
}



uint __thiscall FUN_0040c630(void *this,int param_1,int param_2)

{
  int iVar1;
  SOCKET SVar2;
  uint uVar3;
  undefined4 uVar4;
  int iVar5;
  float10 fVar6;
  
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x2c))();
                    // WARNING: Load size is inaccurate
  iVar1 = (**(code **)(*this + 0x30))();
  FUN_0041e1d0((char *)((int)this + 0x6c),param_1,0x7f);
                    // WARNING: Load size is inaccurate
  *(int *)((int)this + 0xec) = param_2;
  (**(code **)(*this + 0x34))();
  FUN_0040f4e0(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Socket connecting to %s:%d");
  iVar5 = 0;
  do {
    iVar5 = iVar5 + 1;
    SVar2 = FUN_0040ac10((int)this + 0x6c,*(undefined4 *)((int)this + 0xec));
    *(SOCKET *)((int)this + 0xf4) = SVar2;
    if (SVar2 != 0xffffffff) {
      *(undefined4 *)((int)this + 0x68) = 3;
      fVar6 = (float10)Plat_FloatTime();
      *(float *)((int)this + 0xf0) = (float)fVar6 + 10.0;
      uVar4 = FUN_0040f4e0(DAT_0044a6c0,DAT_0044a6d8,
                           (byte *)"Socket created (sock: %d) (CurTime: %f) (Connectio timeout: %f)"
                          );
      return CONCAT31((int3)((uint)uVar4 >> 8),1);
    }
    uVar3 = ThreadSleep();
  } while (iVar5 < iVar1);
  *(undefined4 *)((int)this + 0xf0) = 0xbf800000;
  *(undefined4 *)((int)this + 0x68) = 1;
  return uVar3 & 0xffffff00;
}



void __fastcall FUN_0040c740(int param_1)

{
  *(undefined4 *)(param_1 + 0xf8) = 0;
  *(undefined4 *)(param_1 + 0x68) = 1;
  *(undefined4 *)(param_1 + 0x40) = 0;
  *(undefined4 *)(param_1 + 0x44) = 0;
  *(undefined *)(param_1 + 0x48) = 0;
  *(undefined4 *)(param_1 + 0x54) = 0;
  *(undefined4 *)(param_1 + 0x50) = 0xffffffff;
  FUN_004223b0((void *)(param_1 + 0x34),0);
  *(undefined4 *)(param_1 + 0x10) = 0;
  *(undefined4 *)(param_1 + 0x14) = 0;
  *(undefined *)(param_1 + 0x18) = 0;
  *(undefined4 *)(param_1 + 0x24) = 0;
  *(undefined4 *)(param_1 + 0x20) = 0xffffffff;
  FUN_004223b0((void *)(param_1 + 4),0);
  return;
}



undefined4 FUN_0040c7b0(void)

{
  return 6;
}



undefined4 FUN_0040c7c0(void)

{
  return 500;
}



undefined4 __fastcall FUN_0040c7d0(int param_1)

{
  undefined4 uVar1;
  
  if (*(SOCKET *)(param_1 + 0xf4) != 0xffffffff) {
    FUN_0040ac00(*(SOCKET *)(param_1 + 0xf4));
    *(undefined4 *)(param_1 + 0xf4) = 0xffffffff;
  }
  uVar1 = (**(code **)(**(int **)(param_1 + 100) + 4))(param_1,*(undefined4 *)(param_1 + 0xf8));
  if (*(int *)(param_1 + 0x68) != 0) {
    *(undefined4 *)(param_1 + 0x68) = 1;
  }
  return CONCAT31((int3)((uint)uVar1 >> 8),1);
}



undefined ** FUN_0040c820(void)

{
  return &PTR_vftable_00447178;
}



undefined4 __fastcall FUN_0040c830(int param_1)

{
  return *(undefined4 *)(param_1 + 0xf8);
}



undefined4 __thiscall FUN_0040c840(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 100) = param_1;
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



bool __fastcall FUN_0040c850(int param_1)

{
  return *(int *)(param_1 + 0x68) == 4;
}



size_t __thiscall FUN_0040c860(void *this,void *param_1,size_t param_2)

{
  void **this_00;
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)((int)this + 0x44);
  this_00 = (void **)((int)this + 0x34);
  FUN_00423140(this_00,param_1,param_2);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x28))((int)*this_00 + iVar1,param_2);
  FUN_0040f440(DAT_0044a6c0,DAT_0044a6d8,
               (byte *)"Socket Recieved %d bytes of data to add to it\'s existing %d bytes");
                    // WARNING: Load size is inaccurate
  iVar2 = (**(code **)(*this + 0x20))();
  iVar1 = *(int *)((int)this + 0x44);
  if ((iVar2 < iVar1) && (iVar2 = *(int *)((int)this + 0x40), iVar2 < iVar1)) {
    if ((0 < iVar1) && (0 < iVar2)) {
      FUN_0040f440(DAT_0044a6c0,DAT_0044a6d8,
                   (byte *)"Socket Consumed %d from Read buffer which has %d bytes remaining");
      FID_conflict__memcpy
                (*this_00,(void *)(*(int *)((int)this + 0x40) + (int)*this_00),iVar1 - iVar2);
      FUN_004233a0(this_00,0,iVar1 - iVar2);
      FUN_00423340(this_00,0,0);
      return param_2;
    }
  }
  else {
    *(undefined4 *)((int)this + 0x40) = 0;
    *(undefined4 *)((int)this + 0x44) = 0;
    *(undefined *)((int)this + 0x48) = 0;
    *(undefined4 *)((int)this + 0x54) = 0;
    *(undefined4 *)((int)this + 0x50) = 0xffffffff;
    FUN_004223b0(this_00,0);
  }
  return param_2;
}



size_t __thiscall FUN_0040c950(void *this,void *param_1,size_t param_2)

{
  int iVar1;
  
  iVar1 = *(int *)((int)this + 0x14);
  FUN_00423140((int *)((int)this + 4),param_1,param_2);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x24))(*(int *)((int)this + 4) + iVar1,param_2);
  return param_2;
}



// WARNING: Function: __alloca_probe replaced with injection: alloca_probe
// WARNING: Type propagation algorithm not settling

int __fastcall FUN_0040c990(int *param_1)

{
  float fVar1;
  int iVar2;
  size_t sVar3;
  uint uVar4;
  float10 fVar5;
  char local_1218 [4096];
  fd_set local_218;
  fd_set local_114;
  timeval local_10;
  float local_8;
  
  local_8 = 5.949797e-39;
  iVar2 = param_1[0x1a];
  if (iVar2 == 1) {
    return 1;
  }
  if (iVar2 == 2) {
    return 2;
  }
  if (iVar2 == 0) {
    return 0;
  }
  local_114.fd_count = 0;
  local_218.fd_count = 0;
  if (iVar2 == 3) {
    fVar5 = (float10)Plat_FloatTime();
    local_8 = (float)fVar5;
    if ((float)param_1[0x3c] < (float)fVar5) {
      FUN_0040f490(DAT_0044a6c0,DAT_0044a6d8,
                   (byte *)"Socket connection timed out (max: %f) (cur: %f).");
      param_1[0x3c] = -0x40800000;
      param_1[0x1a] = 0;
      param_1[0x3e] = 0x8a;
      (**(code **)(*param_1 + 0xc))();
      return param_1[0x1a];
    }
    uVar4 = 0;
    if (local_218.fd_count != 0) {
      do {
        if (local_218.fd_array[uVar4] == param_1[0x3d]) break;
        uVar4 = uVar4 + 1;
      } while (uVar4 < local_218.fd_count);
    }
    if ((uVar4 == local_218.fd_count) && (local_218.fd_count < 0x40)) {
      local_218.fd_array[uVar4] = param_1[0x3d];
      local_218.fd_count = local_218.fd_count + 1;
    }
  }
  else if (iVar2 == 4) {
    if (param_1[4] < param_1[5]) {
      do {
        local_8 = (float)(param_1[5] - param_1[4]);
        fVar1 = (float)FUN_0040ad80(param_1[0x3d],(char *)(param_1[4] + param_1[1]),(int)local_8);
        if ((int)fVar1 < 0) {
          iVar2 = WSAGetLastError();
          iVar2 = FUN_0040ad20(iVar2);
          if (iVar2 == 0) {
            iVar2 = WSAGetLastError();
            param_1[0x3e] = iVar2;
            FUN_0040f490(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Socket write errored %d.");
            param_1[0x1a] = 0;
            (**(code **)(*param_1 + 0xc))();
            return param_1[0x1a];
          }
        }
        *(int *)(&DAT_0044721c + DAT_00447218 * 4) =
             *(int *)(&DAT_0044721c + DAT_00447218 * 4) + (int)fVar1;
        if (fVar1 != local_8) {
          FUN_00423340(param_1 + 1,1,(int)fVar1);
          goto LAB_0040ca8f;
        }
        param_1[4] = 0;
        param_1[5] = 0;
        *(undefined *)(param_1 + 6) = 0;
        param_1[9] = 0;
        param_1[8] = -1;
        FUN_004223b0(param_1 + 1,0);
        (**(code **)(*(int *)param_1[0x19] + 0xc))();
      } while (param_1[4] < param_1[5]);
    }
    FUN_0040c5e0(param_1 + 1);
    (**(code **)(*(int *)param_1[0x19] + 0xc))();
LAB_0040ca8f:
    uVar4 = 0;
    if (local_114.fd_count != 0) {
      do {
        if (local_114.fd_array[uVar4] == param_1[0x3d]) break;
        uVar4 = uVar4 + 1;
      } while (uVar4 < local_114.fd_count);
    }
    if ((uVar4 == local_114.fd_count) && (local_114.fd_count < 0x40)) {
      local_114.fd_array[uVar4] = param_1[0x3d];
      local_114.fd_count = local_114.fd_count + 1;
    }
  }
  local_10.tv_sec = 0;
  local_10.tv_usec = 100;
  iVar2 = select(param_1[0x3d] + 1,&local_114,&local_218,(fd_set *)0x0,&local_10);
  if (iVar2 < 0) {
    iVar2 = WSAGetLastError();
    param_1[0x3e] = iVar2;
    iVar2 = FUN_0040ad20(iVar2);
    if (iVar2 == 0) {
      param_1[0x1a] = 0;
      FUN_0040f490(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Socket poll error %d.");
      (**(code **)(*param_1 + 0xc))();
      return param_1[0x1a];
    }
    param_1[0x3e] = 0;
  }
  else if (iVar2 == 0) goto LAB_0040cd8d;
  if (param_1[0x1a] == 3) {
    iVar2 = __WSAFDIsSet(param_1[0x3d],&local_218);
    if (iVar2 != 0) {
      param_1[0x1a] = 4;
      param_1[0x3c] = -0x40800000;
      (***(code ***)param_1[0x19])();
    }
  }
  else if ((param_1[0x1a] == 4) && (iVar2 = __WSAFDIsSet(param_1[0x3d],&local_114), iVar2 != 0)) {
    do {
      sVar3 = FUN_0040ad50(param_1[0x3d],local_1218,0x1000);
      if ((int)sVar3 < 1) {
        if ((int)sVar3 < 0) {
          iVar2 = WSAGetLastError();
          param_1[0x3e] = iVar2;
          iVar2 = FUN_0040ad20(iVar2);
          if (iVar2 == 0) {
            FUN_0040f490(DAT_0044a6c0,DAT_0044a6d8,
                         (byte *)"[FixAPI] Socket connection reset read error %d.");
            param_1[0x1a] = 0;
            param_1[0x3e] = 0x6c;
            (**(code **)(*param_1 + 0xc))();
            return param_1[0x1a];
          }
          param_1[0x3e] = 0;
        }
      }
      else {
        *(size_t *)(&DAT_00447194 + DAT_00447190 * 4) =
             *(int *)(&DAT_00447194 + DAT_00447190 * 4) + sVar3;
        FUN_0040c860(param_1,local_1218,sVar3);
      }
    } while (sVar3 == 0x1000);
    return param_1[0x1a];
  }
LAB_0040cd8d:
  return param_1[0x1a];
}



int __thiscall FUN_0040cda0(void *this,int *param_1)

{
  ushort uVar1;
  int iVar2;
  void **ppvVar3;
  uint uVar4;
  undefined2 local_8;
  ushort local_6;
  
  iVar2 = (**(code **)(*param_1 + 4))();
  uVar1 = *(ushort *)(iVar2 + 0x10);
  uVar4 = (uint)uVar1;
  local_8 = (**(code **)*param_1)();
  iVar2 = *(int *)((int)this + 0x14);
  local_6 = uVar1;
  FUN_00423140((void *)((int)this + 4),&local_8,4);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x24))(*(int *)((int)this + 4) + iVar2,4);
  if (uVar1 != 0) {
    ppvVar3 = (void **)(**(code **)(*param_1 + 4))();
    iVar2 = *(int *)((int)this + 0x14);
    FUN_00423140((void *)((int)this + 4),*ppvVar3,uVar4);
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x24))(*(int *)((int)this + 4) + iVar2,uVar4);
  }
  return uVar4 + 4;
}



void __fastcall FUN_0040ce30(int param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  float10 fVar5;
  float fVar6;
  float fVar7;
  
  fVar6 = *(float *)(param_1 + 8);
  fVar5 = (float10)Plat_FloatTime();
  if (fVar6 + 1.0 <= (float)fVar5) {
    fVar5 = (float10)Plat_FloatTime();
    iVar4 = *(int *)(param_1 + 0x18);
    *(float *)(param_1 + 8) = (float)fVar5;
    iVar1 = *(int *)(param_1 + 0x1c + iVar4 * 4);
    if (*(int *)(param_1 + 0xc) < iVar1) {
      *(int *)(param_1 + 0xc) = iVar1;
    }
    iVar1 = *(int *)(param_1 + 0xa0);
    iVar3 = *(int *)(param_1 + 0xa4 + iVar1 * 4);
    if (*(int *)(param_1 + 0x94) < iVar3) {
      *(int *)(param_1 + 0x94) = iVar3;
    }
    *(undefined4 *)(param_1 + 0x14) = 0;
    *(undefined4 *)(param_1 + 0x9c) = 0;
    piVar2 = (int *)(param_1 + 0x1c);
    fVar7 = 0.0;
    fVar6 = 0.0;
    iVar3 = 0x1e;
    do {
      if (piVar2[0x22] != -1) {
        fVar6 = fVar6 + 1.0;
        *(float *)(param_1 + 0x9c) = (float)piVar2[0x22] + *(float *)(param_1 + 0x9c);
      }
      if (*piVar2 != -1) {
        fVar7 = fVar7 + 1.0;
        *(float *)(param_1 + 0x14) = (float)*piVar2 + *(float *)(param_1 + 0x14);
      }
      piVar2 = piVar2 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
    if (0.0 < fVar7) {
      *(float *)(param_1 + 0x14) = *(float *)(param_1 + 0x14) / fVar7;
    }
    if (0.0 < fVar6) {
      *(float *)(param_1 + 0x9c) = *(float *)(param_1 + 0x9c) / fVar6;
    }
    iVar3 = *(int *)(param_1 + 0x1c + iVar4 * 4);
    if (iVar3 != -1) {
      *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + iVar3;
    }
    iVar3 = *(int *)(param_1 + 0xa4 + iVar1 * 4);
    if (iVar3 != -1) {
      *(int *)(param_1 + 0x98) = *(int *)(param_1 + 0x98) + iVar3;
    }
    iVar4 = (iVar4 + 1) % 0x1e;
    *(int *)(param_1 + 0x18) = iVar4;
    *(int *)(param_1 + 0xa0) = (iVar1 + 1) % 0x1e;
    *(undefined4 *)(param_1 + 0x1c + iVar4 * 4) = 0;
    *(undefined4 *)(param_1 + 0xa4 + *(int *)(param_1 + 0xa0) * 4) = 0;
  }
  return;
}



void __thiscall FUN_0040cfa0(void *this,undefined2 *param_1)

{
  undefined2 uVar1;
  uint uVar2;
  byte *pbVar3;
  int local_c;
  byte *local_8;
  
  if ((*(byte *)((int)this + 0x15) & 1) == 0) {
    FUN_0040d020(this,param_1);
    return;
  }
  local_c = 0x80;
  uVar2 = FUN_004224a0(this,0,&local_c);
  if ((char)uVar2 == '\0') {
    *param_1 = 0;
    return;
  }
                    // WARNING: Load size is inaccurate
  pbVar3 = (byte *)((*this - *(int *)((int)this + 0x20)) + *(int *)((int)this + 0xc));
  local_8 = pbVar3;
  uVar1 = FUN_0042819d(pbVar3,&local_8,10);
  *param_1 = uVar1;
  if ((int)local_8 - (int)pbVar3 != 0) {
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + ((int)local_8 - (int)pbVar3);
  }
  return;
}



void __thiscall FUN_0040d020(void *this,undefined2 *param_1)

{
  char cVar1;
  
  cVar1 = FUN_00422510(this,2);
  if (cVar1 == '\0') {
    *param_1 = 0;
    return;
  }
  if ((*(byte *)((int)this + 0x2c) & 1) != 0) {
                    // WARNING: Load size is inaccurate
    FUN_0041eb00((void *)((int)this + 0x2c),param_1,
                 (void *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this),1);
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 2;
    return;
  }
                    // WARNING: Load size is inaccurate
  *param_1 = *(undefined2 *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this);
  *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 2;
  return;
}



undefined4 * __fastcall FUN_0040d080(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixInventory::vftable;
  param_1[4] = FUN_0040db30;
  param_1[5] = 0;
  param_1[6] = 0;
  param_1[7] = 0;
  param_1[10] = param_1[5];
  param_1[8] = 0xffff;
  param_1[9] = 0xffffffff;
  param_1[0xb] = FUN_0040db10;
  param_1[0xc] = 0;
  param_1[0xd] = 0;
  param_1[0xe] = 0;
  param_1[0x11] = param_1[0xc];
  param_1[0xf] = 0xffff;
  param_1[0x10] = 0xffffffff;
  param_1[3] = 0;
  param_1[2] = 0;
  param_1[1] = 0;
  return param_1;
}



undefined4 * __fastcall FUN_0040d100(undefined4 *param_1)

{
  *param_1 = CTacIntUserLoadout::vftable;
  FUN_004214b0(param_1 + 0x14);
  param_1[1] = 0;
  param_1[2] = 0;
  param_1[3] = 0;
  param_1[4] = 0;
  param_1[5] = 0;
  param_1[6] = 0;
  param_1[7] = 0;
  param_1[9] = 0;
  param_1[0xb] = 0;
  param_1[8] = 0;
  param_1[10] = 0;
  param_1[0xc] = 0;
  param_1[0xd] = 0;
  param_1[0xe] = 0;
  param_1[0xf] = 0;
  param_1[0x10] = 0;
  param_1[0x11] = 0;
  param_1[0x12] = 0;
  param_1[0x13] = 0;
  FUN_004215e0(param_1 + 0x14,(char *)0x0);
  return param_1;
}



void __fastcall FUN_0040d1b0(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixInventory::vftable;
  param_1[3] = 0;
  FUN_0040ddd0((int)(param_1 + 4));
  FUN_0040dd30((int)(param_1 + 0xb));
  FUN_00410c50((int)(param_1 + 0xb));
  FUN_00410c50((int)(param_1 + 4));
  return;
}



void __fastcall FUN_0040d1f0(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixLoadoutSlot::vftable;
  param_1[0x1b] = CTacIntUserLoadout::vftable;
  param_1[0x32] = 0;
  if (-1 < (int)param_1[0x31]) {
    if (param_1[0x2f] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0x2f]);
      param_1[0x2f] = 0;
    }
    param_1[0x30] = 0;
  }
  param_1[3] = CTacIntUserLoadout::vftable;
  param_1[0x1a] = 0;
  if (-1 < (int)param_1[0x19]) {
    if (param_1[0x17] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0x17]);
      param_1[0x17] = 0;
    }
    param_1[0x18] = 0;
  }
  return;
}



undefined4 * __thiscall FUN_0040d280(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixInventory::vftable;
  *(undefined4 *)((int)this + 0xc) = 0;
  FUN_0040ddd0((int)this + 0x10);
  FUN_0040dd30((int)this + 0x2c);
  FUN_00410c50((int)this + 0x2c);
  FUN_00410c50((int)this + 0x10);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_0040d2d0(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixInventoryItem::vftable;
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_0040d300(void *this,byte param_1)

{
  FUN_0040d1f0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



void __thiscall FUN_0040d330(void *this,int *param_1,undefined4 param_2,undefined4 *param_3)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  undefined2 local_10 [4];
  void *local_8;
  
  iVar2 = (**(code **)(**(int **)((int)this + 8) + 0x28))();
  piVar1 = param_1;
  puVar5 = param_3;
  if (2 < iVar2) {
    puVar5 = (undefined4 *)0x0;
  }
  local_10[0] = (**(code **)(*param_1 + 4))();
  local_8 = (void *)((int)this + 0x10);
  uVar3 = FUN_0040b090(local_8,local_10);
  if ((uVar3 & 0xffff) == 0xffff) {
    puVar4 = (undefined4 *)FUN_00403c30(0x10);
    if (puVar4 == (undefined4 *)0x0) {
      puVar4 = (undefined4 *)0x0;
    }
    else {
      *puVar4 = fixapi2_impl::CFixInventoryItem::vftable;
      puVar4[1] = piVar1;
      puVar4[2] = 0;
      puVar4[3] = 0xffffffff;
    }
    param_3 = puVar4;
    uVar3 = (**(code **)(*piVar1 + 4))();
    param_1 = (int *)(uVar3 & 0xffff);
    FUN_0040da90(local_8,(undefined2 *)&param_1,&param_3);
    puVar4[3] = puVar5;
    puVar4[2] = param_2;
    return;
  }
  iVar2 = *(int *)(*(int *)((int)this + 0x14) + 0xc + (uVar3 & 0xffff) * 0x10);
  *(undefined4 **)(iVar2 + 0xc) = puVar5;
  *(undefined4 *)(iVar2 + 8) = param_2;
  return;
}



void __fastcall FUN_0040d400(int param_1)

{
  FUN_0040ddd0(param_1 + 0x10);
  FUN_0040dd30(param_1 + 0x2c);
  return;
}



void __fastcall FUN_0040d420(int param_1)

{
  *(undefined4 *)(param_1 + 4) = 0;
  *(undefined4 *)(param_1 + 8) = 0;
  *(undefined4 *)(param_1 + 0xc) = 0;
  *(undefined4 *)(param_1 + 0x10) = 0;
  *(undefined4 *)(param_1 + 0x14) = 0;
  *(undefined4 *)(param_1 + 0x18) = 0;
  *(undefined4 *)(param_1 + 0x1c) = 0;
  *(undefined4 *)(param_1 + 0x24) = 0;
  *(undefined4 *)(param_1 + 0x2c) = 0;
  *(undefined4 *)(param_1 + 0x20) = 0;
  *(undefined4 *)(param_1 + 0x28) = 0;
  *(undefined4 *)(param_1 + 0x30) = 0;
  *(undefined4 *)(param_1 + 0x34) = 0;
  *(undefined4 *)(param_1 + 0x38) = 0;
  *(undefined4 *)(param_1 + 0x3c) = 0;
  *(undefined4 *)(param_1 + 0x40) = 0;
  *(undefined4 *)(param_1 + 0x44) = 0;
  *(undefined4 *)(param_1 + 0x48) = 0;
  *(undefined4 *)(param_1 + 0x4c) = 0;
  FUN_004215e0((void *)(param_1 + 0x50),(char *)0x0);
  return;
}



int __fastcall FUN_0040d4b0(int param_1)

{
  return param_1 + 0x6c;
}



undefined4 __fastcall FUN_0040d4c0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x34);
}



void __fastcall FUN_0040d4d0(int param_1)

{
                    // WARNING: Could not recover jumptable at 0x0040d4d5. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(**(int **)(param_1 + 4) + 4))();
  return;
}



undefined4 __thiscall FUN_0040d4e0(void *this,int param_1,char param_2)

{
  uint uVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  bool bVar5;
  undefined2 local_c [4];
  
  if (param_2 == '\0') {
    local_c[0] = (undefined2)param_1;
    uVar4 = FUN_0040b090((void *)((int)this + 0x10),local_c);
    if ((uVar4 & 0xffff) != 0xffff) {
      return *(undefined4 *)(*(int *)((int)this + 0x14) + 0xc + (uVar4 & 0xffff) * 0x10);
    }
    return 0;
  }
  uVar4 = 0;
  if (*(short *)((int)this + 0x18) != 0) {
    uVar1 = (uint)*(ushort *)((int)this + 0x18);
    do {
      uVar3 = uVar4 & 0xffff;
      if ((uVar3 < *(uint *)((int)this + 0x18)) &&
         (uVar2 = (ushort)uVar3,
         uVar2 < *(ushort *)((int)this + 0x26) || uVar2 == *(ushort *)((int)this + 0x26))) {
        bVar5 = uVar2 == 0xffff;
        if (!bVar5) {
          bVar5 = *(ushort *)(*(int *)((int)this + 0x14) + uVar3 * 0x10) == uVar2;
        }
        if (!bVar5) {
          if (param_1 == 0) {
            return *(undefined4 *)(*(int *)((int)this + 0x14) + 0xc + (uVar4 & 0xffff) * 0x10);
          }
          param_1 = param_1 + -1;
        }
        uVar1 = (uint)*(ushort *)((int)this + 0x18);
      }
      uVar4 = uVar4 + 1;
    } while ((int)uVar4 < (int)uVar1);
  }
  return 0;
}



undefined2 __fastcall FUN_0040d5a0(int param_1)

{
  return *(undefined2 *)(param_1 + 0x22);
}



undefined4 __thiscall FUN_0040d5b0(void *this,int param_1,char param_2)

{
  uint uVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  bool bVar5;
  undefined local_c [8];
  
  if (param_2 == '\0') {
    local_c[0] = (undefined)param_1;
    uVar4 = FUN_0040b090((void *)((int)this + 0x2c),local_c);
    if ((uVar4 & 0xffff) != 0xffff) {
      return *(undefined4 *)(*(int *)((int)this + 0x30) + 0xc + (uVar4 & 0xffff) * 0x10);
    }
    return 0;
  }
  uVar4 = 0;
  if (*(short *)((int)this + 0x34) != 0) {
    uVar1 = (uint)*(ushort *)((int)this + 0x34);
    do {
      uVar3 = uVar4 & 0xffff;
      if ((uVar3 < *(uint *)((int)this + 0x34)) &&
         (uVar2 = (ushort)uVar3,
         uVar2 < *(ushort *)((int)this + 0x42) || uVar2 == *(ushort *)((int)this + 0x42))) {
        bVar5 = uVar2 == 0xffff;
        if (!bVar5) {
          bVar5 = *(ushort *)(*(int *)((int)this + 0x30) + uVar3 * 0x10) == uVar2;
        }
        if (!bVar5) {
          if (param_1 == 0) {
            return *(undefined4 *)(*(int *)((int)this + 0x30) + 0xc + (uVar4 & 0xffff) * 0x10);
          }
          param_1 = param_1 + -1;
        }
        uVar1 = (uint)*(ushort *)((int)this + 0x34);
      }
      uVar4 = uVar4 + 1;
    } while ((int)uVar4 < (int)uVar1);
  }
  return 0;
}



undefined2 __fastcall FUN_0040d670(int param_1)

{
  return *(undefined2 *)(param_1 + 0x3e);
}



void __thiscall FUN_0040d680(void *this,int *param_1)

{
  int iVar1;
  
  iVar1 = FUN_00421560((int)(undefined4 *)((int)this + 0x50));
  *param_1 = iVar1;
  FUN_00421510((undefined4 *)((int)this + 0x50));
  return;
}



undefined4 __fastcall FUN_0040d6a0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x44);
}



undefined4 __fastcall FUN_0040d6b0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x48);
}



undefined4 __fastcall FUN_0040d6c0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x4c);
}



undefined4 __fastcall FUN_0040d6d0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x40);
}



int __fastcall FUN_0040d6e0(int param_1)

{
  return param_1 + 0xc;
}



undefined4 FUN_0040d6f0(void)

{
  return 0x230;
}



int __fastcall FUN_0040d700(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x20);
  if (iVar1 == 0) {
    iVar1 = *(int *)(param_1 + 0x1c);
  }
  return iVar1;
}



undefined4 __fastcall FUN_0040d710(int param_1)

{
  return *(undefined4 *)(param_1 + 0x1c);
}



undefined4 __fastcall FUN_0040d720(int param_1)

{
  return *(undefined4 *)(param_1 + 0x20);
}



int __fastcall FUN_0040d730(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x28);
  if (iVar1 == 0) {
    iVar1 = *(int *)(param_1 + 0x24);
  }
  return iVar1;
}



int __fastcall FUN_0040d740(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x30);
  if (iVar1 == 0) {
    iVar1 = *(int *)(param_1 + 0x2c);
  }
  return iVar1;
}



undefined4 __fastcall FUN_0040d750(int param_1)

{
  return *(undefined4 *)(param_1 + 0x2c);
}



undefined4 __fastcall FUN_0040d760(int param_1)

{
  return *(undefined4 *)(param_1 + 0x30);
}



// WARNING: Could not reconcile some variable overlaps

undefined4 __fastcall FUN_0040d770(int *param_1)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  int *piVar4;
  undefined4 uVar5;
  uint uVar6;
  uint uVar7;
  ushort uVar8;
  undefined4 *puVar9;
  uint *puVar10;
  char *pcVar11;
  bool bVar12;
  undefined8 uVar13;
  code *local_4c;
  int local_48;
  uint local_44;
  int local_40;
  undefined4 local_3c;
  undefined4 local_38;
  undefined4 local_34;
  uint local_30 [2];
  uint local_28;
  char local_24;
  undefined4 local_20;
  undefined4 local_1c;
  int local_18;
  int *local_14;
  uint local_10;
  uint local_c;
  char local_5;
  
  piVar2 = (int *)FUN_00413490(DAT_0044a6a8);
  local_14 = piVar2;
  iVar3 = (**(code **)(*(int *)param_1[2] + 0x28))();
  if (2 < iVar3) {
    local_c = (**(code **)(*piVar2 + 4))();
    while (local_c = local_c - 1, -1 < (int)local_c) {
      piVar4 = (int *)(**(code **)(*piVar2 + 0xc))(local_c);
      if ((piVar4 != (int *)0x0) && (iVar3 = (**(code **)(*piVar4 + 0x18))(), iVar3 != 0x10)) {
        (**(code **)(*param_1 + 0x20))(piVar4,1,0);
      }
    }
  }
  piVar2 = (int *)param_1[2];
  uVar13 = (**(code **)(*piVar2 + 4))();
  uVar5 = (**(code **)*piVar2)(uVar13);
  DevMsg("[FixAPI][Inventory] Preparing defaults for if user %d (SteamID: %llu)\n",uVar5);
  local_4c = FUN_00408f40;
  local_48 = 0;
  local_44 = 0;
  local_40 = 0;
  local_3c = 0xffff;
  local_38 = 0xffffffff;
  local_34 = 0;
  local_20 = 0;
  local_1c = (int *)CONCAT31(local_1c._1_3_,1);
  local_c = 0xffff;
  local_5 = '\0';
  FUN_0040b110(&local_4c,&local_20,(ushort *)&local_c,&local_5);
  uVar6 = FUN_0040c000((int)&local_4c);
  uVar6 = uVar6 & 0xffff;
  iVar3 = uVar6 * 0x10;
  *(undefined2 *)(iVar3 + 6 + local_48) = 0;
  *(short *)(iVar3 + 4 + local_48) = (short)local_c;
  *(undefined4 *)(iVar3 + local_48) = 0xffffffff;
  if ((short)local_c == -1) {
    local_3c = local_3c & 0xffff0000 | uVar6;
  }
  else if (local_5 == '\0') {
    *(short *)(local_48 + 2 + (local_c & 0xffff) * 0x10) = (short)uVar6;
  }
  else {
    *(short *)(local_48 + (local_c & 0xffff) * 0x10) = (short)uVar6;
  }
  FUN_0040b6d0(&local_4c,uVar6);
  piVar2 = local_14;
  local_3c = local_3c & 0xffff | (uint)(ushort)(local_3c._2_2_ + 1) << 0x10;
  puVar9 = (undefined4 *)(local_48 + 8 + iVar3);
  if (puVar9 != (undefined4 *)0x0) {
    *puVar9 = local_20;
    *(undefined *)(puVar9 + 1) = (undefined)local_1c;
  }
  local_18 = (**(code **)(*local_14 + 0x40))();
  do {
    do {
      local_18 = local_18 + -1;
      if (local_18 < 0) {
        uVar5 = FUN_0040e600((int)&local_4c);
        if (((-1 < local_40) && (local_48 != 0)) &&
           (uVar5 = (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_48), false)) {
          uVar5 = (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
        }
        return CONCAT31((int3)((uint)uVar5 >> 8),1);
      }
      piVar4 = (int *)(**(code **)(*piVar2 + 0x44))(local_18);
      local_1c = piVar4;
    } while (piVar4 == (int *)0x0);
    local_30[0] = (**(code **)(*piVar4 + 8))();
    local_c = local_30[0];
    uVar7 = FUN_0040b090(&local_4c,local_30);
    uVar6 = local_c;
    uVar7 = uVar7 & 0xffff;
    if (uVar7 < local_44) {
      uVar8 = (ushort)uVar7;
      if (local_38._2_2_ < uVar8) goto LAB_0040d93f;
      bVar12 = uVar8 == 0xffff;
      if (!bVar12) {
        bVar12 = *(ushort *)(local_48 + uVar7 * 0x10) == uVar8;
      }
      if (bVar12) goto LAB_0040d93f;
    }
    else {
LAB_0040d93f:
      if (param_1[3] != 0) {
        uVar5 = (***(code ***)param_1[2])(local_c);
        DevMsg("[FixAPI][Inventory] Checking if user %d owns dlc %d\n",uVar5);
        iVar3 = *(int *)param_1[3];
        uVar5 = (***(code ***)param_1[2])(uVar6);
        cVar1 = (**(code **)(iVar3 + 0x48))(uVar5);
        uVar6 = local_c;
        pcVar11 = "does";
        if (cVar1 == '\0') {
          pcVar11 = "does not";
        }
        uVar5 = (***(code ***)param_1[2])(pcVar11,local_c);
        DevMsg("[FixAPI][Inventory] User %d %s own dlc %d\n",uVar5);
        local_28 = uVar6;
        local_c = 0xffff;
        local_10 = local_10 & 0xffffff00;
        local_24 = cVar1;
        FUN_0040b110(&local_4c,&local_28,(ushort *)&local_c,(undefined *)&local_10);
        uVar7 = FUN_0040c000((int)&local_4c);
        uVar7 = uVar7 & 0xffff;
        FUN_0040b930(&local_4c,uVar7,(ushort)local_c,(char)local_10);
        local_3c = local_3c & 0xffff | (uint)(ushort)(local_3c._2_2_ + 1) << 0x10;
        puVar10 = (uint *)(local_48 + 8 + uVar7 * 0x10);
        piVar2 = local_14;
        piVar4 = local_1c;
        if (puVar10 != (uint *)0x0) {
          *puVar10 = local_28;
          *(char *)(puVar10 + 1) = local_24;
        }
      }
    }
    if (*(char *)(local_48 + 0xc + uVar7 * 0x10) == '\x01') {
      (**(code **)(*param_1 + 0x20))(piVar4,1,0);
    }
  } while( true );
}



void __thiscall FUN_0040da70(void *this,undefined4 param_1,undefined4 param_2)

{
  *(undefined4 *)((int)this + 0xc) = param_2;
  *(undefined4 *)((int)this + 8) = param_1;
  return;
}



uint __thiscall FUN_0040da90(void *this,undefined2 *param_1,undefined4 *param_2)

{
  undefined4 *puVar1;
  uint uVar2;
  undefined2 *puVar3;
  undefined2 local_c [2];
  undefined4 local_8;
  
  puVar1 = param_2;
  puVar3 = param_1;
  param_1 = (undefined2 *)((uint)param_1 & 0xffffff00);
  local_c[0] = *puVar3;
  param_2 = (undefined4 *)0xffff;
  local_8 = *puVar1;
  FUN_0040b110(this,local_c,(ushort *)&param_2,(undefined *)&param_1);
  uVar2 = FUN_0040c000((int)this);
  uVar2 = uVar2 & 0xffff;
  FUN_0040b930(this,uVar2,(ushort)param_2,(char)param_1);
  *(short *)((int)this + 0x12) = *(short *)((int)this + 0x12) + 1;
  puVar3 = (undefined2 *)(*(int *)((int)this + 4) + 8 + uVar2 * 0x10);
  if (puVar3 != (undefined2 *)0x0) {
    *puVar3 = local_c[0];
    *(undefined4 *)(puVar3 + 2) = local_8;
  }
  return (uint)puVar3 & 0xffff0000 | uVar2;
}



bool __cdecl FUN_0040db10(byte *param_1,byte *param_2)

{
  return *param_1 < *param_2;
}



bool __cdecl FUN_0040db30(ushort *param_1,ushort *param_2)

{
  return *param_1 < *param_2;
}



void __thiscall FUN_0040db50(void *this,int *param_1,int *param_2)

{
  char cVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  char *pcVar5;
  char local_138 [256];
  int local_38 [2];
  int local_30;
  int local_2c;
  int local_28;
  void *local_8;
  
  if (*(int *)((int)this + 4) == 3) {
    pcVar5 = "loadouts/slot_tournament_%d.dat";
  }
  else {
    pcVar5 = "loadouts/slot_%d.dat";
  }
  local_8 = this;
  FUN_0041dfc0(local_138,0xff,(byte *)pcVar5);
  FUN_004221a0(local_38,0,0,0);
  if (((param_2 != (int *)0x0) && (cVar1 = (**(code **)(*param_2 + 0x34))(local_138), cVar1 != '\0')
      ) && (iVar2 = (**(code **)(*param_2 + 0x3c))(local_138), iVar2 < 0x100000)) {
    FUN_00422700(local_38,iVar2);
    iVar4 = 0;
    do {
      iVar3 = (**(code **)(*param_2 + 4))(local_138,local_38[0] + iVar4,iVar2 - iVar4);
      iVar4 = iVar4 + iVar3;
      FUN_004233a0(local_38,1,iVar3);
      this = local_8;
    } while (iVar4 < iVar2);
  }
  FUN_0040de70((void *)((int)this + 0x6c),local_38,local_28 - local_2c,param_1);
  FUN_0040de70((void *)((int)this + 0xc),local_38,local_28 - local_2c,param_1);
  if ((-1 < local_30) && (local_38[0] != 0)) {
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_38[0]);
  }
  return;
}



bool __thiscall FUN_0040dc60(void *this,undefined2 param_1,int **param_2)

{
  uint uVar1;
  undefined4 *puVar2;
  int iVar3;
  int *piVar4;
  int iVar5;
  undefined2 local_c [4];
  
  local_c[0] = param_1;
  uVar1 = FUN_0040b090((void *)((int)this + 0x10),local_c);
  if ((uVar1 & 0xffff) == 0xffff) {
    return false;
  }
  piVar4 = *(int **)(*(int *)((int)this + 0x14) + 0xc + (uVar1 & 0xffff) * 0x10);
  if (piVar4 == (int *)0x0) {
    return false;
  }
  if (param_2 != (int **)0x0) {
    *param_2 = piVar4;
  }
  puVar2 = (undefined4 *)(**(code **)(*piVar4 + 4))();
  iVar3 = (**(code **)*puVar2)();
  if (iVar3 == 3) {
    piVar4 = (int *)(**(code **)(*piVar4 + 4))();
    iVar3 = (**(code **)(**(int **)((int)this + 8) + 0x14))();
    iVar5 = (**(code **)(*piVar4 + 0x54))();
    return iVar5 < iVar3;
  }
  iVar3 = (**(code **)(*piVar4 + 0xc))();
  if (iVar3 != 0) {
    iVar5 = (**(code **)(**(int **)((int)this + 8) + 0x20))();
    if (6 < iVar5) {
      iVar5 = (**(code **)(**(int **)((int)this + 8) + 0x38))();
      return iVar5 <= iVar3;
    }
  }
  return true;
}



void __fastcall FUN_0040dd30(int param_1)

{
  int *piVar1;
  ushort uVar2;
  uint uVar3;
  ushort uVar4;
  
  uVar4 = 0;
  if (*(short *)(param_1 + 8) != 0) {
    do {
      uVar3 = (uint)uVar4;
      if ((uVar3 < *(uint *)(param_1 + 8)) &&
         (uVar4 < *(ushort *)(param_1 + 0x16) || uVar4 == *(ushort *)(param_1 + 0x16))) {
        if (uVar4 == 0xffff) {
          uVar2 = 0xffff;
        }
        else {
          uVar2 = *(ushort *)(*(int *)(param_1 + 4) + uVar3 * 0x10);
        }
        if ((uVar2 != uVar4) &&
           (piVar1 = *(int **)(*(int *)(param_1 + 4) + 0xc + uVar3 * 0x10), piVar1 != (int *)0x0)) {
          (**(code **)(*piVar1 + 0xc))(1);
        }
      }
      uVar4 = uVar4 + 1;
    } while (uVar4 < *(ushort *)(param_1 + 8));
  }
  FUN_0040e600(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  return;
}



void __fastcall FUN_0040ddd0(int param_1)

{
  int *piVar1;
  ushort uVar2;
  uint uVar3;
  ushort uVar4;
  
  uVar4 = 0;
  if (*(short *)(param_1 + 8) != 0) {
    do {
      uVar3 = (uint)uVar4;
      if ((uVar3 < *(uint *)(param_1 + 8)) &&
         (uVar4 < *(ushort *)(param_1 + 0x16) || uVar4 == *(ushort *)(param_1 + 0x16))) {
        if (uVar4 == 0xffff) {
          uVar2 = 0xffff;
        }
        else {
          uVar2 = *(ushort *)(*(int *)(param_1 + 4) + uVar3 * 0x10);
        }
        if ((uVar2 != uVar4) &&
           (piVar1 = *(int **)(*(int *)(param_1 + 4) + 0xc + uVar3 * 0x10), piVar1 != (int *)0x0)) {
          (**(code **)(*piVar1 + 0x10))(1);
        }
      }
      uVar4 = uVar4 + 1;
    } while (uVar4 < *(ushort *)(param_1 + 8));
  }
  FUN_0040e600(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall FUN_0040de70(void *this,int *param_1,undefined4 param_2,int *param_3)

{
  int *this_00;
  char cVar1;
  undefined4 uVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  char local_24 [24];
  void *local_c;
  undefined2 local_8;
  
  local_c = this;
  FUN_0040d420((int)this);
  this_00 = param_1;
  if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
    cVar1 = FUN_00422510(param_1,1);
    if (cVar1 == '\0') {
      local_8 = local_8 & 0xff;
    }
    else {
      local_8 = local_8 & 0xff | (ushort)*(byte *)((this_00[3] - this_00[8]) + *this_00) << 8;
      this_00[3] = this_00[3] + 1;
    }
  }
  else {
    FUN_0040cfa0(param_1,(undefined2 *)&param_1);
    local_8 = CONCAT11(param_1._0_1_,(undefined)local_8);
  }
  if ((*(byte *)((int)this_00 + 0x15) & 1) == 0) {
    cVar1 = FUN_00422510(this_00,1);
    if (cVar1 == '\0') {
      param_1 = (int *)((uint)param_1 & 0xffffff);
    }
    else {
      param_1 = (int *)((uint)param_1 & 0xffffff |
                       (uint)*(byte *)((this_00[3] - this_00[8]) + *this_00) << 0x18);
      this_00[3] = this_00[3] + 1;
    }
  }
  else {
    FUN_0040cfa0(this_00,(undefined2 *)&param_1);
    param_1 = (int *)((uint)param_1 & 0xffffff | (int)param_1 << 0x18);
  }
  if (local_8._1_1_ == '\x01') {
    FUN_0040cfa0(this_00,&local_8);
    piVar6 = param_3;
    uVar2 = (**(code **)(*param_3 + 0x10))(local_8);
    *(undefined4 *)((int)this + 4) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 8) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0xc) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x10) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x14) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x18) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x1c) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x24) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x2c) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    piVar3 = (int *)(**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(int **)((int)this + 0x34) = piVar3;
    *(undefined4 *)((int)this + 0x38) = 0;
    if (piVar3 != (int *)0x0) {
      iVar4 = (**(code **)(*piVar3 + 0x14))();
      if (iVar4 == 10) {
        *(undefined4 *)((int)this + 0x34) = 0;
      }
    }
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x3c) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x40) = uVar2;
    if (param_1._3_1_ == '\x03') {
      FUN_0040cfa0(this_00,(undefined2 *)&param_3);
      uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
      *(undefined4 *)((int)this + 0x44) = uVar2;
      FUN_0040cfa0(this_00,(undefined2 *)&param_3);
      uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
      *(undefined4 *)((int)this + 0x48) = uVar2;
      FUN_0040cfa0(this_00,(undefined2 *)&param_3);
      uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
      *(undefined4 *)((int)this + 0x4c) = uVar2;
      return;
    }
  }
  else if (local_8._1_1_ == '\x02') {
    FUN_0040cfa0(this_00,&local_8);
    piVar6 = param_3;
    uVar2 = (**(code **)(*param_3 + 0x10))(local_8);
    *(undefined4 *)((int)this + 4) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    uVar2 = (**(code **)(*piVar6 + 0x10))(local_8);
    *(undefined4 *)((int)this + 8) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    uVar2 = (**(code **)(*piVar6 + 0x10))(local_8);
    *(undefined4 *)((int)this + 0xc) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    uVar2 = (**(code **)(*piVar6 + 0x10))(local_8);
    *(undefined4 *)((int)this + 0x10) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    uVar2 = (**(code **)(*piVar6 + 0x10))(local_8);
    *(undefined4 *)((int)this + 0x14) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    uVar2 = (**(code **)(*piVar6 + 0x10))(local_8);
    *(undefined4 *)((int)this + 0x18) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    uVar2 = (**(code **)(*piVar6 + 0x10))(local_8);
    *(undefined4 *)((int)this + 0x1c) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    uVar2 = (**(code **)(*piVar6 + 0x10))(local_8);
    *(undefined4 *)((int)this + 0x24) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    uVar2 = (**(code **)(*piVar6 + 0x10))(local_8);
    *(undefined4 *)((int)this + 0x2c) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    uVar2 = (**(code **)(*piVar6 + 0x10))(local_8);
    *(undefined4 *)((int)this + 0x34) = uVar2;
    FUN_0040cfa0(this_00,&local_8);
    piVar3 = (int *)(**(code **)(*piVar6 + 0x10))(local_8);
    *(int **)((int)this + 0x38) = piVar3;
    if ((*(int *)((int)this + 0x34) != 0) && (piVar3 != (int *)0x0)) {
      piVar6 = *(int **)((int)this + 0x34);
      iVar4 = (**(code **)(*piVar3 + 0x14))();
      iVar5 = (**(code **)(*piVar6 + 0x14))();
      this = local_c;
      piVar6 = param_3;
      if (iVar5 == iVar4) {
        *(undefined4 *)((int)local_c + 0x38) = 0;
      }
    }
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x3c) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x40) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x44) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x48) = uVar2;
    FUN_0040cfa0(this_00,(undefined2 *)&param_3);
    uVar2 = (**(code **)(*piVar6 + 0x10))((uint)param_3 & 0xffff);
    *(undefined4 *)((int)this + 0x4c) = uVar2;
    if (param_1._3_1_ == '\x03') {
      FUN_0040cfa0(this_00,(undefined2 *)&param_3);
      if (1 < ((uint)param_3 & 0xffff)) {
        FUN_00422b10(this_00,local_24,(uint)param_3 & 0xffff);
        FUN_004215e0((void *)((int)this + 0x50),local_24);
      }
    }
  }
  return;
}



void __thiscall FUN_0040e2e0(void *this,int *param_1,int *param_2)

{
  int iVar1;
  int *piVar2;
  char cVar3;
  undefined4 uVar4;
  char *pcVar5;
  
  piVar2 = param_1;
  *(undefined4 *)((int)this + 0x20) = 0;
  *(undefined4 *)((int)this + 0x28) = 0;
  *(undefined4 *)((int)this + 0x30) = 0;
  uVar4 = (**(code **)(*param_1 + 4))();
  *(undefined4 *)((int)this + 4) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 8))();
  *(undefined4 *)((int)this + 8) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0xc))();
  *(undefined4 *)((int)this + 0xc) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x10))();
  *(undefined4 *)((int)this + 0x10) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x14))();
  *(undefined4 *)((int)this + 0x14) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x18))();
  *(undefined4 *)((int)this + 0x18) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x1c))();
  *(undefined4 *)((int)this + 0x1c) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x2c))();
  *(undefined4 *)((int)this + 0x24) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x3c))();
  *(undefined4 *)((int)this + 0x2c) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x4c))();
  *(undefined4 *)((int)this + 0x34) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x50))();
  *(undefined4 *)((int)this + 0x38) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x54))();
  *(undefined4 *)((int)this + 0x3c) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x58))();
  *(undefined4 *)((int)this + 0x40) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x5c))();
  *(undefined4 *)((int)this + 0x44) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 0x60))();
  *(undefined4 *)((int)this + 0x48) = uVar4;
  uVar4 = (**(code **)(*piVar2 + 100))();
  *(undefined4 *)((int)this + 0x4c) = uVar4;
  pcVar5 = (char *)(**(code **)(*piVar2 + 0x6c))(&param_1);
  FUN_004215e0((void *)((int)this + 0x50),pcVar5);
  piVar2 = param_2;
  if (param_2 != (int *)0x0) {
    if (*(int **)((int)this + 4) != (int *)0x0) {
      iVar1 = *param_2;
      uVar4 = (**(code **)(**(int **)((int)this + 4) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 4) = 0;
      }
    }
    if (*(int **)((int)this + 8) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 8) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 8) = 0;
      }
    }
    if (*(int **)((int)this + 0xc) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0xc) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0xc) = 0;
      }
    }
    if (*(int **)((int)this + 0x10) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x10) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x10) = 0;
      }
    }
    if (*(int **)((int)this + 0x14) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x14) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x14) = 0;
      }
    }
    if (*(int **)((int)this + 0x18) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x18) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x18) = 0;
      }
    }
    if (*(int **)((int)this + 0x1c) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x1c) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x1c) = 0;
      }
    }
    if (*(int **)((int)this + 0x24) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x24) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x24) = 0;
      }
    }
    if (*(int **)((int)this + 0x2c) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x2c) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x2c) = 0;
      }
    }
    if (*(int **)((int)this + 0x34) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x34) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x34) = 0;
      }
    }
    if (*(int **)((int)this + 0x38) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x38) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x38) = 0;
      }
    }
    if (*(int **)((int)this + 0x3c) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x3c) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x3c) = 0;
      }
    }
    if (*(int **)((int)this + 0x40) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x40) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x40) = 0;
      }
    }
    if (*(int **)((int)this + 0x44) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x44) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x44) = 0;
      }
    }
    if (*(int **)((int)this + 0x48) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x48) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x48) = 0;
      }
    }
    if (*(int **)((int)this + 0x4c) != (int *)0x0) {
      iVar1 = *piVar2;
      uVar4 = (**(code **)(**(int **)((int)this + 0x4c) + 4))(0);
      cVar3 = (**(code **)(iVar1 + 4))(uVar4);
      if (cVar3 == '\0') {
        *(undefined4 *)((int)this + 0x4c) = 0;
      }
    }
  }
  return;
}



void __fastcall FUN_0040e600(int param_1)

{
  ushort uVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  uint local_8;
  
  uVar2 = *(ushort *)(param_1 + 0x16);
  if (uVar2 != 0xffff) {
    uVar4 = *(uint *)(param_1 + 8);
    if (uVar4 != 0) {
      uVar1 = 0;
      local_8 = 0;
      do {
        uVar3 = (uint)uVar1;
        if ((uVar3 < uVar4) && (uVar1 <= uVar2)) {
          if (uVar1 == 0xffff) {
            uVar2 = 0xffff;
          }
          else {
            uVar2 = *(ushort *)(*(int *)(param_1 + 4) + uVar3 * 0x10);
          }
          if (uVar2 != uVar1) {
            *(undefined2 *)(*(int *)(param_1 + 4) + 2 + uVar3 * 0x10) =
                 *(undefined2 *)(param_1 + 0x14);
            *(ushort *)(*(int *)(param_1 + 4) + uVar3 * 0x10) = uVar1;
            *(ushort *)(param_1 + 0x14) = uVar1;
          }
        }
        uVar2 = *(ushort *)(param_1 + 0x16);
        if (uVar1 == uVar2) break;
        uVar1 = uVar1 + 1;
        uVar4 = *(uint *)(param_1 + 8);
        if (uVar4 <= (local_8 + 1 & 0xffff)) {
          uVar1 = 0xffff;
        }
        local_8 = (uint)uVar1;
      } while (uVar1 != 0xffff);
    }
    *(undefined4 *)(param_1 + 0x10) = 0xffff;
  }
  return;
}



void __thiscall FUN_0040e6c0(void *this,ushort param_1)

{
  ushort uVar1;
  ushort uVar2;
  undefined2 uVar3;
  int iVar4;
  ushort uVar5;
  
  if (param_1 == 0xffff) {
    uVar5 = 0xffff;
LAB_0040e6fa:
    uVar3 = 0xffff;
  }
  else {
    uVar5 = *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)param_1 * 0x10);
    if (uVar5 == 0xffff) goto LAB_0040e6fa;
    uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + (uint)uVar5 * 0x10);
  }
  iVar4 = (uint)param_1 * 0x10;
  *(undefined2 *)(*(int *)((int)this + 4) + 2 + iVar4) = uVar3;
  if (uVar5 != 0xffff) {
    uVar1 = *(ushort *)((uint)uVar5 * 0x10 + *(int *)((int)this + 4));
    if (uVar1 != 0xffff) {
      *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar1 * 0x10) = param_1;
    }
    if (param_1 == 0xffff) {
      uVar3 = 0xffff;
    }
    else {
      uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(undefined2 *)(*(int *)((int)this + 4) + 4 + (uint)uVar5 * 0x10) = uVar3;
  }
  if (param_1 == *(ushort *)((int)this + 0x10)) {
    *(ushort *)((int)this + 0x10) = uVar5;
    goto LAB_0040e7c8;
  }
  if (param_1 == 0xffff) {
LAB_0040e77e:
    uVar1 = 0xffff;
  }
  else {
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    if (uVar1 == 0xffff) goto LAB_0040e77e;
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + (uint)uVar1 * 0x10);
  }
  uVar2 = 0xffff;
  if (uVar1 == param_1) {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + (uint)uVar2 * 0x10) = uVar5;
  }
  else {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar2 * 0x10) = uVar5;
  }
LAB_0040e7c8:
  *(ushort *)(*(int *)((int)this + 4) + (uint)uVar5 * 0x10) = param_1;
  if (param_1 != 0xffff) {
    *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4) = uVar5;
  }
  return;
}



void __thiscall FUN_0040e7f0(void *this,undefined param_1,int param_2,int *param_3)

{
  int iVar1;
  uint uVar2;
  undefined local_c [8];
  
  local_c[0] = param_1;
  uVar2 = FUN_0040b090((void *)((int)this + 0x2c),local_c);
  if (((uVar2 & 0xffff) != 0xffff) &&
     (iVar1 = *(int *)(*(int *)((int)this + 0x30) + 0xc + (uVar2 & 0xffff) * 0x10), iVar1 != 0)) {
    if (param_2 == 2) {
      FUN_0040e2e0((void *)(iVar1 + 0x6c),param_3,(int *)this);
      return;
    }
    FUN_0040e2e0((void *)(iVar1 + 0xc),param_3,(int *)this);
  }
  return;
}



void __thiscall FUN_0040e850(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 4) = param_1;
  return;
}



void __thiscall FUN_0040e860(void *this,char *param_1)

{
  FUN_004215e0((void *)((int)this + 0x50),param_1);
  return;
}



void __thiscall FUN_0040e870(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x20) = param_1;
  return;
}



void __thiscall FUN_0040e880(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x28) = param_1;
  return;
}



void __thiscall FUN_0040e890(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x30) = param_1;
  return;
}



void __thiscall FUN_0040e8a0(void *this,int *param_1,char param_2)

{
  int iVar1;
  int *piVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  ulonglong uVar6;
  
  if ((param_2 != '\0') || (iVar1 = (**(code **)(**(int **)((int)this + 8) + 0x28))(), 2 < iVar1)) {
    FUN_0040d770((int *)this);
  }
  piVar2 = (int *)FUN_00413490(DAT_0044a6a8);
  uVar3 = FUN_0040f920(param_1);
  for (uVar3 = uVar3 & 0xffff; uVar3 != 0; uVar3 = uVar3 - 1) {
    uVar4 = FUN_0040f920(param_1);
    uVar5 = FUN_0040f920(param_1);
    uVar6 = FUN_0040f8a0(param_1);
    iVar1 = (**(code **)(*piVar2 + 0x10))(uVar4 & 0xffff);
    if (iVar1 != 0) {
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x20))(iVar1,uVar5 & 0xffff,(int)uVar6);
    }
  }
  return;
}



void __thiscall FUN_0040e940(void *this,void *param_1,int *param_2)

{
  uint uVar1;
  undefined4 *this_00;
  undefined4 uVar2;
  void *this_01;
  undefined *puVar3;
  uint uVar4;
  byte local_28 [8];
  undefined local_20 [4];
  undefined4 *local_1c;
  uint local_18;
  int *local_14;
  void *local_10;
  uint local_c;
  void *local_8;
  
  local_10 = this;
  local_14 = (int *)FUN_00413490(DAT_0044a6a8);
  uVar1 = FUN_0040f880(param_1);
  local_18 = uVar1;
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Updating/Loading %d slots");
  uVar4 = (uint)*(ushort *)((int)this + 0x3e);
  if ((uVar4 < uVar1) && ((int)uVar4 < (int)uVar1)) {
    this_01 = (void *)((int)this + 0x2c);
    local_8 = this_01;
    do {
      local_28[0] = (char)uVar4 + 1;
      param_1 = (void *)((uint)param_1 & 0xffffff | (uint)local_28[0] << 0x18);
      uVar1 = FUN_0040b090(this_01,local_28);
      if ((uVar1 & 0xffff) == 0xffff) {
        this_00 = (undefined4 *)FUN_00403c30(0xcc);
        if (this_00 == (undefined4 *)0x0) {
          this_00 = (undefined4 *)0x0;
        }
        else {
          if (*(int **)((int)this + 0xc) == (int *)0x0) {
            uVar2 = 2;
          }
          else {
            uVar2 = (**(code **)(**(int **)((int)this + 0xc) + 0x34))();
          }
          *this_00 = fixapi2_impl::CFixLoadoutSlot::vftable;
          FUN_0040d100(this_00 + 3);
          FUN_0040d100(this_00 + 0x1b);
          this_00[1] = uVar2;
          this_00[2] = uVar4 + 1;
        }
        local_20[0] = param_1._3_1_;
        param_1 = (void *)0xffff;
        local_c = local_c & 0xffffff00;
        local_1c = this_00;
        FUN_0040b110(local_8,local_20,(ushort *)&param_1,(undefined *)&local_c);
        uVar1 = FUN_0040c000((int)local_8);
        FUN_0040b930(local_8,uVar1 & 0xffff,(ushort)param_1,(char)local_c);
        *(short *)((int)local_8 + 0x12) = *(short *)((int)local_8 + 0x12) + 1;
        puVar3 = (undefined *)((uVar1 & 0xffff) * 0x10 + *(int *)((int)local_8 + 4) + 8);
        this = local_10;
        if (puVar3 != (undefined *)0x0) {
          *puVar3 = local_20[0];
          *(undefined4 **)(puVar3 + 4) = local_1c;
        }
      }
      else {
        this_00 = *(undefined4 **)(*(int *)((int)this + 0x30) + 0xc + (uVar1 & 0xffff) * 0x10);
      }
      FUN_0040db50(this_00,local_14,param_2);
      uVar4 = uVar4 + 1;
      this_01 = (void *)((int)this + 0x2c);
    } while ((int)uVar4 < (int)local_18);
  }
  return;
}



undefined4 __cdecl FUN_0040eaa0(undefined4 param_1,int param_2)

{
  undefined4 uVar1;
  
  if (param_2 == 0) {
    return 0;
  }
  uVar1 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(param_2);
  return uVar1;
}



void __cdecl FUN_0040eac0(undefined4 param_1,undefined4 param_2)

{
  (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_2);
  return;
}



void __thiscall FUN_0040eae0(void *this,undefined4 *param_1)

{
  uint uVar1;
  undefined4 uVar2;
  byte *pbVar3;
  int local_c;
  byte *local_8;
  
  if ((*(byte *)((int)this + 0x15) & 1) == 0) {
    FUN_0040ec80(this,param_1);
    return;
  }
  local_c = 0x80;
  uVar1 = FUN_004224a0(this,0,&local_c);
  if ((char)uVar1 == '\0') {
    *param_1 = 0;
    return;
  }
                    // WARNING: Load size is inaccurate
  pbVar3 = (byte *)((*this - *(int *)((int)this + 0x20)) + *(int *)((int)this + 0xc));
  local_8 = pbVar3;
  uVar2 = FUN_00428173(pbVar3,&local_8,10);
  *param_1 = uVar2;
  if ((int)local_8 - (int)pbVar3 != 0) {
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + ((int)local_8 - (int)pbVar3);
  }
  return;
}



void __thiscall FUN_0040eb60(void *this,undefined4 *param_1)

{
  uint uVar1;
  undefined4 uVar2;
  byte *pbVar3;
  int local_c;
  byte *local_8;
  
  if ((*(byte *)((int)this + 0x15) & 1) == 0) {
    FUN_0040ec80(this,param_1);
    return;
  }
  local_c = 0x80;
  uVar1 = FUN_004224a0(this,0,&local_c);
  if ((char)uVar1 == '\0') {
    *param_1 = 0;
    return;
  }
                    // WARNING: Load size is inaccurate
  pbVar3 = (byte *)((*this - *(int *)((int)this + 0x20)) + *(int *)((int)this + 0xc));
  local_8 = pbVar3;
  uVar2 = FUN_0042819d(pbVar3,&local_8,10);
  *param_1 = uVar2;
  if ((int)local_8 - (int)pbVar3 != 0) {
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + ((int)local_8 - (int)pbVar3);
  }
  return;
}



void __thiscall FUN_0040ebe0(void *this,float *param_1)

{
  char cVar1;
  uint uVar2;
  byte *pbVar3;
  float10 fVar4;
  int local_c;
  byte *local_8;
  
  if ((*(byte *)((int)this + 0x15) & 1) == 0) {
    cVar1 = FUN_00422510(this,4);
    if (cVar1 != '\0') {
                    // WARNING: Load size is inaccurate
      *param_1 = *(float *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this);
      if ((*(byte *)((int)this + 0x2c) & 1) != 0) {
        FUN_0040ef60((byte *)((int)this + 0x2c),param_1,param_1,1);
      }
      *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 4;
      return;
    }
  }
  else {
    local_c = 0x80;
    uVar2 = FUN_004224a0(this,0,&local_c);
    if ((char)uVar2 != '\0') {
                    // WARNING: Load size is inaccurate
      pbVar3 = (byte *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this);
      local_8 = pbVar3;
      fVar4 = (float10)FUN_00428578(pbVar3,&local_8);
      *param_1 = (float)fVar4;
      if ((int)local_8 - (int)pbVar3 != 0) {
        *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + ((int)local_8 - (int)pbVar3);
      }
      return;
    }
  }
  *param_1 = 0.0;
  return;
}



void __thiscall FUN_0040ec80(void *this,undefined4 *param_1)

{
  char cVar1;
  
  cVar1 = FUN_00422510(this,4);
  if (cVar1 == '\0') {
    *param_1 = 0;
    return;
  }
  if ((*(byte *)((int)this + 0x2c) & 1) != 0) {
                    // WARNING: Load size is inaccurate
    FUN_0040eed0((void *)((int)this + 0x2c),param_1,
                 (void *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this),1);
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 4;
    return;
  }
                    // WARNING: Load size is inaccurate
  *param_1 = *(undefined4 *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this);
  *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 4;
  return;
}



void __thiscall FUN_0040ece0(void *this,undefined8 *param_1)

{
  int iVar1;
  char cVar2;
  undefined8 *puVar3;
  int iVar4;
  
  cVar2 = FUN_00422510(this,8);
  if (cVar2 == '\0') {
    *(undefined4 *)param_1 = 0;
    *(undefined4 *)((int)param_1 + 4) = 0;
    return;
  }
  if ((*(byte *)((int)this + 0x2c) & 1) == 0) {
                    // WARNING: Load size is inaccurate
    iVar1 = *this;
    iVar4 = *(int *)((int)this + 0xc) - *(int *)((int)this + 0x20);
    *(undefined4 *)param_1 = *(undefined4 *)(iVar4 + iVar1);
    *(undefined4 *)((int)param_1 + 4) = *(undefined4 *)(iVar4 + 4 + iVar1);
  }
  else {
                    // WARNING: Load size is inaccurate
    puVar3 = (undefined8 *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this);
    if (param_1 != (undefined8 *)0x0) {
      if (puVar3 == (undefined8 *)0x0) {
        puVar3 = param_1;
      }
      if ((*(byte *)((int)this + 0x2c) & 1) != 0) {
        FUN_0040ed80(param_1,(undefined *)puVar3);
        *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 8;
        return;
      }
      if ((puVar3 != (undefined8 *)0x0) && (param_1 != puVar3)) {
        *param_1 = *puVar3;
        *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 8;
        return;
      }
    }
  }
  *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 8;
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __cdecl FUN_0040ed80(void *param_1,undefined *param_2)

{
  undefined4 local_c;
  undefined4 local_8;
  
  local_c = CONCAT13(param_2[4],CONCAT12(param_2[5],CONCAT11(param_2[6],param_2[7])));
  local_8 = CONCAT13(*param_2,CONCAT12(param_2[1],CONCAT11(param_2[2],param_2[3])));
  FID_conflict__memcpy(param_1,&local_c,8);
  return;
}



void __thiscall FUN_0040edf0(void *this,undefined2 param_1)

{
  undefined4 uVar1;
  
  uVar1 = FUN_00422570(this,2);
  if ((char)uVar1 != '\0') {
    if ((*(byte *)((int)this + 0x2c) & 1) != 0) {
                    // WARNING: Load size is inaccurate
      FUN_0041eb00((void *)((int)this + 0x2c),
                   (void *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this),
                   &param_1,1);
      *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 2;
      FUN_004223b0(this,*(int *)((int)this + 0x10));
      return;
    }
                    // WARNING: Load size is inaccurate
    *(undefined2 *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this) = param_1;
    *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 2;
    FUN_004223b0(this,*(int *)((int)this + 0x10));
  }
  return;
}



void __thiscall FUN_0040ee60(void *this,undefined4 param_1)

{
  undefined4 uVar1;
  
  uVar1 = FUN_00422570(this,4);
  if ((char)uVar1 != '\0') {
    if ((*(byte *)((int)this + 0x2c) & 1) != 0) {
                    // WARNING: Load size is inaccurate
      FUN_0040eed0((void *)((int)this + 0x2c),
                   (void *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this),
                   &param_1,1);
      *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 4;
      FUN_004223b0(this,*(int *)((int)this + 0x10));
      return;
    }
                    // WARNING: Load size is inaccurate
    *(undefined4 *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this) = param_1;
    *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 4;
    FUN_004223b0(this,*(int *)((int)this + 0x10));
  }
  return;
}



void __thiscall FUN_0040eed0(void *this,void *param_1,void *param_2,int param_3)

{
  int iVar1;
  undefined *puVar2;
  
  if ((0 < param_3) && (param_1 != (void *)0x0)) {
    if (param_2 == (void *)0x0) {
      param_2 = param_1;
    }
                    // WARNING: Load size is inaccurate
    if ((*this & 1) == 0) {
      if ((param_2 != (void *)0x0) && (param_1 != param_2)) {
        FID_conflict__memcpy(param_1,param_2,param_3 * 4);
      }
    }
    else if (0 < param_3) {
      puVar2 = (undefined *)((int)param_2 + 1);
      iVar1 = param_3;
      do {
        param_3 = CONCAT13(puVar2[-1],CONCAT12(*puVar2,CONCAT11(puVar2[1],puVar2[2])));
        FID_conflict__memcpy(param_1,&param_3,4);
        puVar2 = puVar2 + 4;
        param_1 = (void *)((int)param_1 + 4);
        iVar1 = iVar1 + -1;
      } while (iVar1 != 0);
      return;
    }
  }
  return;
}



void __thiscall FUN_0040ef60(void *this,void *param_1,void *param_2,int param_3)

{
  int iVar1;
  undefined *puVar2;
  
  if ((0 < param_3) && (param_1 != (void *)0x0)) {
    if (param_2 == (void *)0x0) {
      param_2 = param_1;
    }
                    // WARNING: Load size is inaccurate
    if ((*this & 1) == 0) {
      if ((param_2 != (void *)0x0) && (param_1 != param_2)) {
        FID_conflict__memcpy(param_1,param_2,param_3 * 4);
      }
    }
    else if (0 < param_3) {
      puVar2 = (undefined *)((int)param_2 + 1);
      iVar1 = param_3;
      do {
        param_3 = CONCAT13(puVar2[-1],CONCAT12(*puVar2,CONCAT11(puVar2[1],puVar2[2])));
        FID_conflict__memcpy(param_1,&param_3,4);
        puVar2 = puVar2 + 4;
        param_1 = (void *)((int)param_1 + 4);
        iVar1 = iVar1 + -1;
      } while (iVar1 != 0);
      return;
    }
  }
  return;
}



undefined4 * __fastcall FUN_0040f000(undefined4 *param_1)

{
  param_1[0x44] = 0;
  param_1[0x45] = 0;
  param_1[0x46] = 0;
  param_1[0x48] = param_1[0x44];
  param_1[0x47] = 0;
  *param_1 = 0;
  param_1[1] = 0;
  *(undefined *)(param_1 + 0x42) = 0;
  param_1[0x43] = 0;
  FUN_0041e380((int)(param_1 + 2),"");
  return param_1;
}



undefined4 * __thiscall FUN_0040f070(void *this,byte param_1)

{
  *(undefined ***)this = CFixAPI_JsonParser::vftable;
  if (*(int *)((int)this + 0x28) != 0) {
    FUN_0041b960(*(int *)((int)this + 0x28));
    *(undefined4 *)((int)this + 0x28) = 0;
  }
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 __cdecl FUN_0040f0b0(uint **param_1,undefined4 param_2,double *param_3)

{
  uint **ppuVar1;
  void *pvVar2;
  uint *puVar3;
  
  if (*(char *)(param_1 + 0x42) != '\0') {
    param_1[0x43] = (uint *)((int)param_1[0x43] + 1);
    FUN_0041dfc0((char *)(param_1 + 2),0xff,&DAT_0043d454);
  }
  switch(param_2) {
  case 1:
    *(undefined *)(param_1 + 0x42) = 1;
    param_1[0x43] = (uint *)0x0;
    pvVar2 = (void *)FUN_0041ec00(0x24);
    if (pvVar2 == (void *)0x0) {
      puVar3 = (uint *)0x0;
    }
    else {
      puVar3 = FUN_0041eb80(pvVar2,param_1 + 2);
    }
    FUN_0041ec40(param_1[1],puVar3);
    FUN_0040f5b0(param_1 + 0x44,param_1 + 1);
    param_1[1] = puVar3;
    return 1;
  case 2:
    *(undefined *)(param_1 + 0x42) = 0;
  case 4:
    ppuVar1 = (uint **)FUN_0040f940((int *)(param_1 + 0x44));
    param_1[1] = *ppuVar1;
    FUN_0041e380((int)(param_1 + 2),"");
    return 1;
  case 3:
    break;
  case 5:
    FUN_00421040(param_1[1],(char *)(param_1 + 2),*(undefined4 *)param_3,
                 *(undefined4 *)((int)param_3 + 4));
    return 1;
  case 6:
    FUN_00420f80(param_1[1],(char *)(param_1 + 2),(uint)(float)*param_3);
    return 1;
  case 7:
  case 9:
    FUN_00420fb0(param_1[1],(char *)(param_1 + 2),0);
    return 1;
  case 8:
    FUN_00420fb0(param_1[1],(char *)(param_1 + 2),1);
    return 1;
  case 10:
    FUN_00420fd0(param_1[1],(char *)(param_1 + 2),*(char **)param_3);
    return 1;
  case 0xb:
    FUN_0041e1d0((char *)(param_1 + 2),*(int *)param_3,0x100);
  default:
    return 1;
  }
  ppuVar1 = param_1 + 1;
  if (param_1[1] == (uint *)0x0) {
    *ppuVar1 = *param_1;
    FUN_0040f5b0(param_1 + 0x44,ppuVar1);
    return 1;
  }
  pvVar2 = (void *)FUN_0041ec00(0x24);
  if (pvVar2 == (void *)0x0) {
    puVar3 = (uint *)0x0;
  }
  else {
    puVar3 = FUN_0041eb80(pvVar2,param_1 + 2);
  }
  FUN_0041ec40(*ppuVar1,puVar3);
  FUN_0040f5b0(param_1 + 0x44,ppuVar1);
  *ppuVar1 = puVar3;
  return 1;
}



size_t __cdecl FUN_0040f2c0(uint param_1,int *param_2,void **param_3)

{
  void **ppvVar1;
  int *this;
  size_t sVar2;
  uint uVar3;
  
  this = (int *)(**(code **)(*param_2 + 4))();
  ppvVar1 = param_3;
  param_1 = param_1 - 1;
  if (param_1 != 0) {
    sVar2 = this[7] - this[3];
    FUN_00422700(param_3,sVar2);
    FUN_00422800(this,(void *)((int)ppvVar1[4] + (int)*ppvVar1),sVar2);
    FUN_004233a0(ppvVar1,1,sVar2);
    return sVar2;
  }
  FUN_0040cfa0(this,(undefined2 *)&param_1);
  FUN_0040cfa0(this,(undefined2 *)&param_2);
  ppvVar1 = param_3;
  uVar3 = param_1 & 0xffff;
  FUN_00422700(param_3,uVar3);
  uVar3 = FUN_0040f370((void *)(*this + this[3]),(uint)param_2 & 0xffff,*ppvVar1,uVar3);
  FUN_004233a0(ppvVar1,0,uVar3 & 0xffff);
  return uVar3 & 0xffff;
}



uint __cdecl FUN_0040f370(void *param_1,int param_2,void *param_3,uint param_4)

{
  bool bVar1;
  uint uVar2;
  undefined3 extraout_var;
  uint local_88 [4];
  undefined4 local_78;
  undefined4 local_74;
  undefined4 local_18;
  byte local_14 [8];
  size_t local_c;
  uint local_8;
  
  FID_conflict__memcpy(local_14,param_1,5);
  local_74 = 0;
  local_78 = 0;
  uVar2 = FUN_0041a1f0(local_88,local_14,5,&PTR_FUN_00447294);
  if (uVar2 == 0) {
    local_c = param_2 - 5;
    FUN_0041a6d0((int)local_88);
    local_8 = param_4;
    bVar1 = FUN_0041a300(local_88,param_3,&local_8,(byte *)((int)param_1 + 5),&local_c,0,&local_18);
    FUN_0041a690((int)local_88,(int)&PTR_FUN_00447294);
    uVar2 = param_4;
    if (CONCAT31(extraout_var,bVar1) != 0) {
      uVar2 = 0;
    }
  }
  return uVar2;
}



undefined4 FUN_0040f420(void)

{
  undefined4 local_c [2];
  
  FUN_0042858d(local_c);
  return local_c[0];
}



void __cdecl FUN_0040f440(int *param_1,int *param_2,byte *param_3)

{
  char local_404 [1024];
  
  FUN_0041e200(local_404,0x400,param_3,(int **)&stack0x00000010);
  if (param_1 != (int *)0x0) {
    (**(code **)(*param_1 + 4))(local_404);
  }
  if (param_2 != (int *)0x0) {
    (**(code **)(*param_2 + 4))(local_404);
  }
  return;
}



void __cdecl FUN_0040f490(int *param_1,int *param_2,byte *param_3)

{
  char local_404 [1024];
  
  FUN_0041e200(local_404,0x400,param_3,(int **)&stack0x00000010);
  if (param_1 != (int *)0x0) {
    (**(code **)(*param_1 + 8))(local_404);
  }
  if (param_2 != (int *)0x0) {
    (**(code **)(*param_2 + 8))(local_404);
  }
  return;
}



void __cdecl FUN_0040f4e0(undefined4 *param_1,undefined4 *param_2,byte *param_3)

{
  char local_404 [1024];
  
  FUN_0041e200(local_404,0x400,param_3,(int **)&stack0x00000010);
  if (param_1 != (undefined4 *)0x0) {
    (**(code **)*param_1)(local_404);
  }
  if (param_2 != (undefined4 *)0x0) {
    (**(code **)*param_2)(local_404);
  }
  return;
}



ulonglong __fastcall FUN_0040f530(int *param_1)

{
  uint uVar1;
  byte *pbVar2;
  ulonglong uVar3;
  ulonglong local_14;
  int local_c;
  byte *local_8;
  
  if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
    FUN_0040ece0(param_1,&local_14);
    return local_14;
  }
  local_c = 0x80;
  uVar1 = FUN_004224a0(param_1,0,&local_c);
  if ((char)uVar1 == '\0') {
    return 0;
  }
  pbVar2 = (byte *)((param_1[3] - param_1[8]) + *param_1);
  local_8 = pbVar2;
  uVar3 = FUN_00428437(pbVar2,&local_8,10);
  if ((int)local_8 - (int)pbVar2 != 0) {
    param_1[3] = param_1[3] + ((int)local_8 - (int)pbVar2);
  }
  return uVar3;
}



void __thiscall FUN_0040f5b0(void *this,undefined4 *param_1)

{
  void *_Src;
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)((int)this + 0xc);
  if (*(int *)((int)this + 4) < iVar1 + 1) {
    FUN_0040a710(this,(iVar1 - *(int *)((int)this + 4)) + 1);
  }
  *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
                    // WARNING: Load size is inaccurate
  iVar2 = (*(int *)((int)this + 0xc) - iVar1) + -1;
  *(int *)((int)this + 0x10) = *this;
  if (0 < iVar2) {
    _Src = (void *)(*this + iVar1 * 4);
    FID_conflict__memcpy((void *)((int)_Src + 4),_Src,iVar2 * 4);
  }
                    // WARNING: Load size is inaccurate
  *(undefined4 *)(*this + iVar1 * 4) = *param_1;
  return;
}



uint * __cdecl FUN_0040f610(int param_1,int param_2)

{
  uint *puVar1;
  void *this;
  uint *local_12c;
  undefined4 local_128;
  undefined local_124 [264];
  int local_1c [6];
  
  FUN_0040f000(&local_12c);
  FUN_0041e380((int)local_124,"");
  this = (void *)FUN_0041ec00(0x24);
  if (this == (void *)0x0) {
    local_12c = (uint *)0x0;
  }
  else {
    local_12c = FUN_0041eb80(this,&DAT_0043d464);
  }
  local_128 = 0;
  FUN_0040f6a0(&PTR_vftable_0044729c,param_1,param_2,FUN_0040f0b0,&local_12c);
  puVar1 = local_12c;
  FUN_0040a350(local_1c);
  return puVar1;
}



undefined4 __thiscall
FUN_0040f6a0(void *this,int param_1,int param_2,undefined4 param_3,undefined4 param_4)

{
  undefined (*pauVar1) [16];
  uint *puVar2;
  undefined4 uVar3;
  int iVar4;
  
  if (*(int *)((int)this + 0x28) == 0) {
    pauVar1 = (undefined (*) [16])((int)this + 0xc);
    FUN_0041b9b0(pauVar1);
    *(code **)*pauVar1 = FUN_0040f720;
    *(void **)((int)this + 0x10) = this;
    puVar2 = FUN_0041b9f0((uint *)pauVar1);
    *(uint **)((int)this + 0x28) = puVar2;
  }
  *(undefined4 *)((int)this + 8) = param_4;
  *(undefined4 *)((int)this + 4) = param_3;
  FUN_0041b8d0(*(int *)((int)this + 0x28));
  iVar4 = 0;
  if (0 < param_2) {
    do {
      FUN_0041b350(*(undefined ***)((int)this + 0x28),(undefined *)(int)*(char *)(iVar4 + param_1));
      iVar4 = iVar4 + 1;
    } while (iVar4 < param_2);
  }
  uVar3 = FUN_0041b890(*(int *)((int)this + 0x28));
  return CONCAT31((int3)((uint)uVar3 >> 8),1);
}



undefined4 __cdecl FUN_0040f720(int param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 uVar1;
  
  if (*(code **)(param_1 + 4) == (code *)0x0) {
    return 1;
  }
  uVar1 = (**(code **)(param_1 + 4))(*(undefined4 *)(param_1 + 8),param_2,param_3);
  return uVar1;
}



size_t __cdecl FUN_0040f750(void *param_1,void *param_2,size_t param_3)

{
  FUN_00422800(param_1,param_2,param_3);
  return param_3;
}



uint __cdecl FUN_0040f770(uint *param_1)

{
  byte bVar1;
  uint *puVar2;
  uint uVar3;
  
  puVar2 = param_1;
  if ((*(byte *)((int)param_1 + 0x15) & 1) != 0) {
    uVar3 = FUN_0040cfa0(param_1,(undefined2 *)&param_1);
    return uVar3 & 0xffffff00 | (uint)param_1 & 0xff;
  }
  uVar3 = FUN_00422510(param_1,1);
  if ((char)uVar3 != '\0') {
    bVar1 = *(byte *)((puVar2[3] - puVar2[8]) + *puVar2);
    puVar2[3] = puVar2[3] + 1;
    return *puVar2 & 0xffffff00 | (uint)bVar1;
  }
  return uVar3 & 0xffffff00;
}



uint __cdecl FUN_0040f7c0(void *param_1,int *param_2)

{
  uint local_8;
  
  FUN_0040cfa0(param_1,(undefined2 *)&local_8);
  local_8 = local_8 & 0xffff;
  FUN_00422700(param_2,param_2[4] + local_8);
  FUN_00422800(param_1,(void *)(*param_2 + param_2[4]),local_8);
  FUN_004233a0(param_2,1,local_8);
  return local_8;
}



uint __cdecl FUN_0040f810(void *param_1,void *param_2,uint param_3)

{
  uint uVar1;
  ushort local_8 [2];
  
  FUN_0040cfa0(param_1,local_8);
  if (local_8[0] == 0) {
    return 0;
  }
  uVar1 = (uint)local_8[0];
  if ((int)param_3 < (int)(uint)local_8[0]) {
    uVar1 = param_3;
  }
  FUN_00422800(param_1,param_2,uVar1 & 0xffff);
  return uVar1 & 0xffff;
}



float10 __cdecl FUN_0040f860(void *param_1)

{
  float local_8;
  
  FUN_0040ebe0(param_1,&local_8);
  return (float10)local_8;
}



undefined4 __cdecl FUN_0040f880(void *param_1)

{
  undefined4 local_8;
  
  FUN_0040eae0(param_1,&local_8);
  return local_8;
}



ulonglong __cdecl FUN_0040f8a0(int *param_1)

{
  ulonglong uVar1;
  
  uVar1 = FUN_0040f530(param_1);
  return uVar1;
}



uint __cdecl FUN_0040f8b0(void *param_1,void *param_2)

{
  uint local_8;
  
  FUN_0040cfa0(param_1,(undefined2 *)&local_8);
  local_8 = local_8 & 0xffff;
  FUN_00422800(param_1,param_2,local_8);
  *(undefined *)(local_8 + (int)param_2) = 0;
  return local_8;
}



undefined4 __cdecl FUN_0040f8e0(void *param_1)

{
  undefined4 local_8;
  
  FUN_0040eb60(param_1,&local_8);
  return local_8;
}



undefined8 __cdecl FUN_0040f900(void *param_1)

{
  undefined8 local_c;
  
  FUN_00422800(param_1,&local_c,8);
  return local_c;
}



uint __cdecl FUN_0040f920(void *param_1)

{
  ushort extraout_var;
  uint local_8;
  
  FUN_0040cfa0(param_1,(undefined2 *)&local_8);
  return local_8 & 0xffff | (uint)extraout_var << 0x10;
}



int * __fastcall FUN_0040f940(int *param_1)

{
  void *_Dst;
  int iVar1;
  int iVar2;
  
  iVar1 = param_1[3];
  param_1[5] = *(int *)(*param_1 + -4 + iVar1 * 4);
  iVar2 = (iVar1 - (iVar1 + -1)) + -1;
  if (0 < iVar2) {
    _Dst = (void *)(*param_1 + (iVar1 + -1) * 4);
    FID_conflict__memcpy(_Dst,(void *)((int)_Dst + 4),iVar2 * 4);
  }
  param_1[3] = param_1[3] + -1;
  return param_1 + 5;
}



void __cdecl FUN_0040f980(void *param_1,void *param_2,size_t param_3)

{
  FUN_00423140(param_1,param_2,param_3);
  return;
}



void __cdecl FUN_0040f9a0(int *param_1,undefined param_2)

{
  undefined4 uVar1;
  
  if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
    uVar1 = FUN_00422570(param_1,1);
    if ((char)uVar1 != '\0') {
      *(undefined *)((param_1[4] - param_1[8]) + *param_1) = param_2;
      param_1[4] = param_1[4] + 1;
      FUN_004223b0(param_1,param_1[4]);
      return;
    }
  }
  else {
    FUN_004230e0(param_1,&DAT_0043d458);
  }
  return;
}



void __cdecl FUN_0040fa00(void *param_1,int *param_2,size_t param_3,int param_4)

{
  if ((int)param_3 < 0) {
    param_3 = param_2[4];
  }
  FUN_00423140(param_1,(void *)(*param_2 + param_4),param_3);
  return;
}



void __cdecl FUN_0040fa30(void *param_1,int param_2,size_t param_3,int param_4)

{
  if ((param_2 != 0) && (0 < (int)param_3)) {
    if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
      FUN_0040edf0(param_1,(short)param_3);
      FUN_00423140(param_1,(void *)(param_4 + param_2),param_3);
      return;
    }
    FUN_004230e0(param_1,&DAT_0043d458);
    FUN_00423140(param_1,(void *)(param_4 + param_2),param_3);
    return;
  }
  if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
    FUN_0040edf0(param_1,0);
    return;
  }
  FUN_004230e0(param_1,&DAT_0043d458);
  return;
}



void __cdecl FUN_0040fac0(void *param_1,undefined4 param_2)

{
  if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
    FUN_0040ee60(param_1,param_2);
    return;
  }
  FUN_004230e0(param_1,&DAT_0043d454);
  return;
}



void __cdecl FUN_0040faf0(void *param_1,char *param_2)

{
  char cVar1;
  char *pcVar2;
  uint uVar3;
  
  if (param_2 == (char *)0x0) {
    if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
      FUN_0040edf0(param_1,0);
      return;
    }
    FUN_004230e0(param_1,&DAT_0043d458);
    return;
  }
  pcVar2 = param_2;
  do {
    cVar1 = *pcVar2;
    pcVar2 = pcVar2 + 1;
  } while (cVar1 != '\0');
  uVar3 = (int)pcVar2 - (int)(param_2 + 1) & 0xffff;
  if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
    FUN_0040edf0(param_1,(short)uVar3);
    FUN_00423140(param_1,param_2,uVar3);
    return;
  }
  FUN_004230e0(param_1,&DAT_0043d458);
  FUN_00423140(param_1,param_2,uVar3);
  return;
}



void __cdecl FUN_0040fb70(void *param_1,undefined4 param_2)

{
  if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
    FUN_0040ee60(param_1,param_2);
    return;
  }
  FUN_004230e0(param_1,&DAT_0043cf78);
  return;
}



void __cdecl FUN_0040fba0(void *param_1)

{
  FUN_00423140(param_1,&stack0x00000008,8);
  return;
}



void __cdecl FUN_0040fbc0(void *param_1,undefined2 param_2)

{
  if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
    FUN_0040edf0(param_1,param_2);
    return;
  }
  FUN_004230e0(param_1,&DAT_0043d458);
  return;
}



undefined4 * __thiscall FUN_0040fbf0(void *this,undefined4 param_1)

{
  FUN_0040a1d0(this,0,param_1);
  *(undefined ***)this = fixapi2_impl::CFixLocalUser::vftable;
  *(undefined4 *)((int)this + 0x928) = 0;
  *(undefined *)((int)this + 0x8c8) = 0;
  *(undefined4 *)((int)this + 0x934) = 0;
  *(undefined4 *)((int)this + 0x938) = 0;
  *(undefined4 *)((int)this + 0x92c) = 0;
  *(undefined4 *)((int)this + 0x930) = 0;
  return (undefined4 *)this;
}



void __fastcall FUN_0040fc50(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixInventoryUser::vftable;
  FUN_0040d1b0(param_1 + 0x1d);
  *param_1 = fixapi2_impl::CFixGameUser::vftable;
  return;
}



undefined4 __fastcall FUN_0040fc70(int param_1)

{
  return *(undefined4 *)(param_1 + 0x92c);
}



undefined4 __fastcall FUN_0040fc80(int param_1)

{
  return *(undefined4 *)(param_1 + 0x930);
}



undefined4 __fastcall FUN_0040fc90(int param_1)

{
  return *(undefined4 *)(param_1 + 0x934);
}



undefined4 __fastcall FUN_0040fca0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x938);
}



undefined4 __fastcall FUN_0040fcb0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x928);
}



int __fastcall FUN_0040fcc0(int param_1)

{
  return param_1 + 0x8c8;
}



void __thiscall FUN_0040fcd0(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x92c) = param_1;
  return;
}



void __thiscall FUN_0040fce0(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x930) = param_1;
  return;
}



void __thiscall FUN_0040fcf0(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x934) = param_1;
  return;
}



void __thiscall FUN_0040fd00(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x938) = param_1;
  return;
}



void __thiscall FUN_0040fd10(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x928) = param_1;
  return;
}



void __thiscall FUN_0040fd20(void *this,int param_1)

{
  FUN_0041e1d0((char *)((int)this + 0x8c8),param_1,0x60);
  return;
}



void __thiscall FUN_0040fd40(void *this,uint *param_1)

{
  uint uVar1;
  undefined4 uVar2;
  undefined8 uVar3;
  ulonglong uVar4;
  
  uVar3 = FUN_0040f900(param_1);
  *(int *)((int)this + 8) = (int)uVar3;
  *(int *)((int)this + 0xc) = (int)((ulonglong)uVar3 >> 0x20);
  uVar4 = FUN_0040f8a0((int *)param_1);
  *(int *)((int)this + 0x58) = (int)uVar4;
  uVar1 = FUN_0040f770(param_1);
  *(uint *)((int)this + 0x5c) = uVar1 & 0xff;
  uVar1 = FUN_0040f770(param_1);
  *(uint *)((int)this + 0x60) = uVar1 & 0xff;
  uVar1 = FUN_0040f770(param_1);
  *(uint *)((int)this + 0x68) = uVar1 & 0xff;
  uVar2 = FUN_0040f880(param_1);
  *(undefined4 *)((int)this + 0x930) = uVar2;
  FUN_0040f8a0((int *)param_1);
                    // WARNING: Could not recover jumptable at 0x0040fda4. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(*(int *)((int)this + 0x74) + 0x1c))();
  return;
}



undefined4 * __fastcall FUN_0040fdb0(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixAnalytics::vftable;
  *(undefined *)(param_1 + 3) = 0;
  param_1[2] = CCallResult<class_fixapi2_impl::CFixAnalytics,struct_HTTPRequestCompleted_t>::vftable
  ;
  param_1[6] = 0;
  param_1[7] = 0;
  param_1[8] = 0;
  param_1[9] = 0;
  param_1[4] = 0x835;
  param_1[10] = 0;
  param_1[0xb] = 0;
  param_1[0xc] = 0;
  param_1[0xd] = 0;
  param_1[0xe] = param_1[10];
  FUN_004221a0(param_1 + 0x10,0x800,0x800,1);
  thunk_FUN_00427870(param_1 + 0x1c,0,0x100);
  thunk_FUN_00427870(param_1 + 0x5c,0,0x100);
  thunk_FUN_00427870(param_1 + 0x9c,0,0x100);
  thunk_FUN_00427870(param_1 + 0xdc,0,0x100);
  param_1[0x11c] = 0;
  param_1[0x11d] = 0;
  param_1[0x11e] = 0;
  return param_1;
}



void __fastcall FUN_0040fe90(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixAnalytics::vftable;
  if (-1 < (int)param_1[0x12]) {
    if (param_1[0x10] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0x10]);
      param_1[0x10] = 0;
    }
    param_1[0x11] = 0;
  }
  FUN_0040a350(param_1 + 10);
  param_1[2] = CCallResult<class_fixapi2_impl::CFixAnalytics,struct_HTTPRequestCompleted_t>::vftable
  ;
  if ((param_1[6] | param_1[7]) != 0) {
    SteamAPI_UnregisterCallResult(param_1 + 2,param_1[6],param_1[7]);
    param_1[6] = 0;
    param_1[7] = 0;
  }
  return;
}



undefined4 * __thiscall FUN_0040ff00(void *this,byte param_1)

{
  FUN_0040fe90((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



void __fastcall FUN_0040ff30(void *param_1,undefined param_2,undefined4 param_3,undefined4 param_4)

{
  void *this;
  uint *this_00;
  undefined extraout_DL;
  char local_84 [128];
  
  if (*(int *)((int)param_1 + 0x478) != 0) {
    FUN_0041dfc0(local_84,0x80,(byte *)"AuthFailure:%d");
    this = (void *)FUN_0041ec00(0x24);
    if (this == (void *)0x0) {
      this_00 = (uint *)0x0;
    }
    else {
      this_00 = FUN_0041eb80(this,local_84);
    }
    FUN_0041dfc0(local_84,0x80,(byte *)"module_%d");
    FUN_00420fd0(this_00,"area",local_84);
    *(undefined4 *)((int)param_1 + 0x4c) = 0;
    *(undefined4 *)((int)param_1 + 0x50) = 0;
    *(undefined *)((int)param_1 + 0x54) = 0;
    *(undefined4 *)((int)param_1 + 0x60) = 0;
    *(undefined4 *)((int)param_1 + 0x5c) = 0xffffffff;
    FUN_004223b0((void *)((int)param_1 + 0x40),0);
    FUN_004105a0(param_1,(int)this_00);
    FUN_00410890((int)param_1,extraout_DL,"quality");
    if (this_00 != (uint *)0x0) {
      thunk_FUN_00420d90((int)this_00);
      FUN_0041ec20(this_00);
    }
  }
  return;
}



void __fastcall FUN_00410010(void *param_1,undefined param_2,undefined4 param_3)

{
  void *this;
  uint *this_00;
  undefined extraout_DL;
  char local_84 [128];
  
  if (*(int *)((int)param_1 + 0x478) != 0) {
    this = (void *)FUN_0041ec00(0x24);
    if (this == (void *)0x0) {
      this_00 = (uint *)0x0;
    }
    else {
      this_00 = FUN_0041eb80(this,"AuthSuccess");
    }
    FUN_0041dfc0(local_84,0x80,(byte *)"module_%d");
    FUN_00420fd0(this_00,"area",local_84);
    *(undefined4 *)((int)param_1 + 0x4c) = 0;
    *(undefined4 *)((int)param_1 + 0x50) = 0;
    *(undefined *)((int)param_1 + 0x54) = 0;
    *(undefined4 *)((int)param_1 + 0x60) = 0;
    *(undefined4 *)((int)param_1 + 0x5c) = 0xffffffff;
    FUN_004223b0((void *)((int)param_1 + 0x40),0);
    FUN_004105a0(param_1,(int)this_00);
    FUN_00410890((int)param_1,extraout_DL,"quality");
    if (this_00 != (uint *)0x0) {
      thunk_FUN_00420d90((int)this_00);
      FUN_0041ec20(this_00);
    }
  }
  return;
}



void __thiscall
FUN_004100d0(void *this,undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
            undefined4 param_5,uint param_6,uint param_7,uint param_8,uint param_9)

{
  int iVar1;
  void *pvVar2;
  uint *this_00;
  int iVar3;
  char local_84 [128];
  
  if (*(int *)((int)this + 0x478) != 0) {
    pvVar2 = (void *)FUN_0041ec00(0x24);
    if (pvVar2 == (void *)0x0) {
      this_00 = (uint *)0x0;
    }
    else {
      this_00 = FUN_0041eb80(pvVar2,param_1);
    }
    FUN_0041dfc0(local_84,0x80,(byte *)"map_%llu_%d_%d");
    FUN_00420fd0(this_00,"area",local_84);
    FUN_00420f80(this_00,"value",param_6);
    FUN_00420f80(this_00,"x",param_7);
    FUN_00420f80(this_00,"y",param_8);
    FUN_00420f80(this_00,"z",param_9);
    iVar1 = *(int *)((int)this + 0x34);
    if (*(int *)((int)this + 0x2c) < iVar1 + 1) {
      FUN_0040a710((void *)((int)this + 0x28),(iVar1 - *(int *)((int)this + 0x2c)) + 1);
    }
    *(int *)((int)this + 0x34) = *(int *)((int)this + 0x34) + 1;
    iVar3 = (*(int *)((int)this + 0x34) - iVar1) + -1;
    *(int *)((int)this + 0x38) = *(int *)((int)this + 0x28);
    if (0 < iVar3) {
      pvVar2 = (void *)(*(int *)((int)this + 0x28) + iVar1 * 4);
      FID_conflict__memcpy((void *)((int)pvVar2 + 4),pvVar2,iVar3 * 4);
    }
    *(uint **)(*(int *)((int)this + 0x28) + iVar1 * 4) = this_00;
  }
  return;
}



void __thiscall
FUN_004101f0(void *this,undefined4 param_1,undefined4 param_2,char *param_3,uint param_4)

{
  void *this_00;
  uint *this_01;
  undefined extraout_DL;
  char local_84 [128];
  
  if (*(int *)((int)this + 0x478) != 0) {
    FUN_0041dfc0(local_84,0x80,(byte *)"PurchaseItem:%d:%d");
    this_00 = (void *)FUN_0041ec00(0x24);
    if (this_00 == (void *)0x0) {
      this_01 = (uint *)0x0;
    }
    else {
      this_01 = FUN_0041eb80(this_00,local_84);
    }
    FUN_00420fd0(this_01,"currency",param_3);
    FUN_00420fb0(this_01,"amount",param_4);
    *(undefined4 *)((int)this + 0x4c) = 0;
    *(undefined4 *)((int)this + 0x50) = 0;
    *(undefined *)((int)this + 0x54) = 0;
    *(undefined4 *)((int)this + 0x60) = 0;
    *(undefined4 *)((int)this + 0x5c) = 0xffffffff;
    FUN_004223b0((void *)((int)this + 0x40),0);
    FUN_004105a0(this,(int)this_01);
    FUN_00410890((int)this,extraout_DL,"business");
    if (this_01 != (uint *)0x0) {
      thunk_FUN_00420d90((int)this_01);
      FUN_0041ec20(this_01);
    }
  }
  return;
}



void __fastcall FUN_004102c0(void *param_1)

{
  void *this;
  uint *puVar1;
  undefined extraout_DL;
  
  if (*(int *)((int)param_1 + 0x478) != 0) {
    this = (void *)FUN_0041ec00(0x24);
    if (this == (void *)0x0) {
      puVar1 = (uint *)0x0;
    }
    else {
      puVar1 = FUN_0041eb80(this,"SessionEnd");
    }
    *(undefined4 *)((int)param_1 + 0x4c) = 0;
    *(undefined4 *)((int)param_1 + 0x50) = 0;
    *(undefined *)((int)param_1 + 0x54) = 0;
    *(undefined4 *)((int)param_1 + 0x60) = 0;
    *(undefined4 *)((int)param_1 + 0x5c) = 0xffffffff;
    FUN_004223b0((void *)((int)param_1 + 0x40),0);
    FUN_004105a0(param_1,(int)puVar1);
    FUN_00410890((int)param_1,extraout_DL,"design");
    *(undefined4 *)((int)param_1 + 0x478) = 0;
    if (puVar1 != (uint *)0x0) {
      thunk_FUN_00420d90((int)puVar1);
      FUN_0041ec20(puVar1);
    }
  }
  return;
}



void __fastcall FUN_00410350(void *param_1,undefined param_2,undefined4 param_3,undefined4 param_4)

{
  void *this;
  uint *this_00;
  undefined extraout_DL;
  char local_84 [128];
  
  if (*(int *)((int)param_1 + 0x478) != 0) {
    FUN_0041dfc0(local_84,0x80,(byte *)"SocketError:%d");
    this = (void *)FUN_0041ec00(0x24);
    if (this == (void *)0x0) {
      this_00 = (uint *)0x0;
    }
    else {
      this_00 = FUN_0041eb80(this,local_84);
    }
    FUN_0041dfc0(local_84,0x80,(byte *)"module_%d");
    FUN_00420fd0(this_00,"area",local_84);
    *(undefined4 *)((int)param_1 + 0x4c) = 0;
    *(undefined4 *)((int)param_1 + 0x50) = 0;
    *(undefined *)((int)param_1 + 0x54) = 0;
    *(undefined4 *)((int)param_1 + 0x60) = 0;
    *(undefined4 *)((int)param_1 + 0x5c) = 0xffffffff;
    FUN_004223b0((void *)((int)param_1 + 0x40),0);
    FUN_004105a0(param_1,(int)this_00);
    FUN_00410890((int)param_1,extraout_DL,"quality");
    if (this_00 != (uint *)0x0) {
      thunk_FUN_00420d90((int)this_00);
      FUN_0041ec20(this_00);
    }
  }
  return;
}



void __fastcall FUN_00410430(void *param_1)

{
  void *this;
  uint *puVar1;
  undefined extraout_DL;
  
  if (*(int *)((int)param_1 + 0x478) != 0) {
    this = (void *)FUN_0041ec00(0x24);
    if (this == (void *)0x0) {
      puVar1 = (uint *)0x0;
    }
    else {
      puVar1 = FUN_0041eb80(this,"SessionStart");
    }
    *(undefined4 *)((int)param_1 + 0x4c) = 0;
    *(undefined4 *)((int)param_1 + 0x50) = 0;
    *(undefined *)((int)param_1 + 0x54) = 0;
    *(undefined4 *)((int)param_1 + 0x60) = 0;
    *(undefined4 *)((int)param_1 + 0x5c) = 0xffffffff;
    FUN_004223b0((void *)((int)param_1 + 0x40),0);
    FUN_004105a0(param_1,(int)puVar1);
    FUN_00410890((int)param_1,extraout_DL,"design");
    if (puVar1 != (uint *)0x0) {
      thunk_FUN_00420d90((int)puVar1);
      FUN_0041ec20(puVar1);
    }
  }
  return;
}



void __thiscall
FUN_004104c0(void *this,undefined4 param_1,undefined4 param_2,char *param_3,char *param_4,
            undefined4 param_5)

{
  char cVar1;
  uint *puVar2;
  int iVar3;
  int local_c;
  int local_8;
  
  FUN_0041e380((int)this + 0x70,param_3);
  FUN_0041e380((int)this + 0x170,param_4);
  FUN_004114a0();
  FUN_0041dfc0((char *)((int)this + 0x370),0x100,&DAT_0043d454);
  *(undefined4 *)((int)this + 0x478) = param_5;
  puVar2 = (uint *)((int)this + 0x270);
  *(undefined4 *)((int)this + 0x470) = param_1;
  *(undefined4 *)((int)this + 0x474) = param_2;
  thunk_FUN_00427870(puVar2,0,0x100);
  FUN_0041df30((undefined4 *)((int)this + 0x470),8,(char *)puVar2,0x100);
  local_c = FUN_0040f420();
  local_8 = local_c >> 0x1f;
  do {
    cVar1 = *(char *)puVar2;
    puVar2 = (uint *)((int)puVar2 + 1);
  } while (cVar1 != '\0');
  iVar3 = (int)puVar2 - ((int)this + 0x271);
  FUN_0041df30(&local_c,8,(char *)((int)this + iVar3 + 0x270),0x100 - iVar3);
  FUN_0040f440(DAT_0044a6c0,DAT_0044a6d8,
               (byte *)"Started New Analytics session for user %llu with session %s\n");
  return;
}



void __thiscall FUN_004105a0(void *this,int param_1)

{
  int *this_00;
  undefined4 uVar1;
  void *this_01;
  
  if (param_1 != 0) {
    this_00 = (int *)((int)this + 0x40);
    if ((((*(byte *)((int)this + 0x55) & 1) != 0) && (*(int *)((int)this + 0x50) != 0)) &&
       (*(char *)((*this_00 - *(int *)((int)this + 0x60)) + -1 + *(int *)((int)this + 0x50)) == '\n'
       )) {
      FUN_004091f0(this_00);
    }
    uVar1 = FUN_00422570(this_00,1);
    if ((char)uVar1 != '\0') {
      *(undefined *)((*(int *)((int)this + 0x50) - *(int *)((int)this + 0x60)) + *this_00) = 0x7b;
      *(int *)((int)this + 0x50) = *(int *)((int)this + 0x50) + 1;
      FUN_004223b0(this_00,*(int *)((int)this + 0x50));
    }
    FUN_004230e0(this_00,(byte *)"\"user_id\": \"%llu\",\"session_id\": \"%s\",\"build\": \"%s\",");
    FUN_0041f1b0(param_1);
    FUN_004230e0(this_00,(byte *)"\"event_id\": \"%s\"");
    for (this_01 = (void *)FUN_0041f050(param_1); this_01 != (void *)0x0;
        this_01 = (void *)FUN_0041f1e0((int)this_01)) {
      FUN_0041f250(this_01,(char *)0x0,(uint)&DAT_0043b3d2);
      FUN_0041f1b0((int)this_01);
      FUN_004230e0(this_00,(byte *)",\"%s\": \"%s\"");
    }
    if ((((*(byte *)((int)this + 0x55) & 1) != 0) && (*(int *)((int)this + 0x50) != 0)) &&
       (*(char *)((*this_00 - *(int *)((int)this + 0x60)) + -1 + *(int *)((int)this + 0x50)) == '\n'
       )) {
      FUN_004091f0(this_00);
    }
    uVar1 = FUN_00422570(this_00,1);
    if ((char)uVar1 != '\0') {
      *(undefined *)((*this_00 - *(int *)((int)this + 0x60)) + *(int *)((int)this + 0x50)) = 0x7d;
      *(int *)((int)this + 0x50) = *(int *)((int)this + 0x50) + 1;
      FUN_004223b0(this_00,*(int *)((int)this + 0x50));
    }
  }
  return;
}



void __thiscall FUN_004106e0(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  (**(code **)((int)this + 0x1c))(param_1,0);
  return;
}



void __thiscall
FUN_00410710(void *this,undefined4 param_1,undefined4 param_2,int param_3,int param_4)

{
  if ((param_3 == *(int *)((int)this + 0x10)) && (param_4 == *(int *)((int)this + 0x14))) {
    *(undefined4 *)((int)this + 0x10) = 0;
    *(undefined4 *)((int)this + 0x14) = 0;
    (**(code **)((int)this + 0x1c))(param_1,param_2);
  }
  return;
}



void __fastcall FUN_00410750(void *param_1)

{
  undefined4 *_Dst;
  bool bVar1;
  undefined4 uVar2;
  int iVar3;
  undefined extraout_DL;
  
  if ((*(int *)((int)param_1 + 0x478) != 0) && (0 < *(int *)((int)param_1 + 0x34))) {
    *(undefined4 *)((int)param_1 + 0x4c) = 0;
    *(undefined4 *)((int)param_1 + 0x50) = 0;
    *(undefined *)((int)param_1 + 0x54) = 0;
    *(undefined4 *)((int)param_1 + 0x60) = 0;
    *(undefined4 *)((int)param_1 + 0x5c) = 0xffffffff;
    FUN_004223b0((void *)((int)param_1 + 0x40),0);
    bVar1 = false;
    FUN_00409190((void *)((int)param_1 + 0x40),0x5b);
    iVar3 = *(int *)((int)param_1 + 0x34);
    while (0 < iVar3) {
      if (bVar1) {
        FUN_00423270((void *)((int)param_1 + 0x40),",{");
      }
      else {
        if ((((*(byte *)((int)param_1 + 0x55) & 1) != 0) && (*(int *)((int)param_1 + 0x50) != 0)) &&
           (*(char *)((*(int *)((int)param_1 + 0x40) - *(int *)((int)param_1 + 0x60)) + -1 +
                     *(int *)((int)param_1 + 0x50)) == '\n')) {
          FUN_004091f0((int *)((int)param_1 + 0x40));
        }
        uVar2 = FUN_00422570((void *)((int)param_1 + 0x40),1);
        if ((char)uVar2 != '\0') {
          *(undefined *)
           ((*(int *)((int)param_1 + 0x50) - *(int *)((int)param_1 + 0x60)) +
           *(int *)((int)param_1 + 0x40)) = 0x7b;
          *(int *)((int)param_1 + 0x50) = *(int *)((int)param_1 + 0x50) + 1;
          FUN_004223b0((void *)((int)param_1 + 0x40),*(int *)((int)param_1 + 0x50));
        }
        bVar1 = true;
      }
      _Dst = *(undefined4 **)((int)param_1 + 0x28);
      *(undefined4 *)((int)param_1 + 0x3c) = *_Dst;
      iVar3 = *(int *)((int)param_1 + 0x34) + -1;
      if (0 < iVar3) {
        FID_conflict__memcpy(_Dst,_Dst + 1,iVar3 * 4);
      }
      *(int *)((int)param_1 + 0x34) = *(int *)((int)param_1 + 0x34) + -1;
      iVar3 = *(int *)((int)param_1 + 0x3c);
      FUN_004105a0(param_1,iVar3);
      if (iVar3 != 0) {
        thunk_FUN_00420d90(iVar3);
        FUN_0041ec20(iVar3);
      }
      iVar3 = *(int *)((int)param_1 + 0x34);
    }
    FUN_00409190((void *)((int)param_1 + 0x40),0x5d);
    FUN_00410890((int)param_1,extraout_DL,"design");
  }
  return;
}



void __fastcall FUN_00410890(int param_1,undefined param_2,undefined4 param_3)

{
  char cVar1;
  int *piVar2;
  undefined *puVar3;
  undefined4 uVar4;
  char local_174 [256];
  uint local_74 [22];
  undefined local_1c [16];
  uint local_c;
  uint local_8;
  
  if (*(int *)(param_1 + 0x478) != 0) {
    FUN_00427870(local_74,0,0x58);
    local_1c = ZEXT816(0);
    FUN_004242f0(local_74);
    FUN_004249b0((int *)local_74,*(int **)(param_1 + 0x40),*(uint *)(param_1 + 0x50));
    piVar2 = (int *)(param_1 + 0x170);
    do {
      cVar1 = *(char *)piVar2;
      piVar2 = (int *)((int)piVar2 + 1);
    } while (cVar1 != '\0');
    FUN_004249b0((int *)local_74,(int *)(param_1 + 0x170),(int)piVar2 - (param_1 + 0x171));
    FUN_00424260((uint *)local_1c,local_74);
    puVar3 = FUN_00424a90(local_1c,0x10);
    FUN_0041dfc0(local_174,0xff,(byte *)"http://api.gameanalytics.com/1/%s/%s");
    uVar4 = (**(code **)**(undefined4 **)(param_1 + 0x478))(3,local_174);
    (**(code **)(**(int **)(param_1 + 0x478) + 0xc))(uVar4,"Authorization",puVar3);
    (**(code **)(**(int **)(param_1 + 0x478) + 0x40))
              (uVar4,"text/plain",*(undefined4 *)(param_1 + 0x40),*(undefined4 *)(param_1 + 0x50));
    FUN_0040f440(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Posting (%d):\n %s\n");
    cVar1 = (**(code **)(**(int **)(param_1 + 0x478) + 0x14))(uVar4,&local_c);
    if (cVar1 == '\0') {
      (**(code **)(**(int **)(param_1 + 0x478) + 0x38))(uVar4);
    }
    else {
      if ((*(uint *)(param_1 + 0x18) | *(uint *)(param_1 + 0x1c)) != 0) {
        SteamAPI_UnregisterCallResult
                  (param_1 + 8,*(undefined4 *)(param_1 + 0x18),*(uint *)(param_1 + 0x1c));
      }
      *(uint *)(param_1 + 0x18) = local_c;
      *(uint *)(param_1 + 0x1c) = local_8;
      *(int *)(param_1 + 0x20) = param_1;
      *(code **)(param_1 + 0x24) = FUN_00410a10;
      if ((local_c | local_8) != 0) {
        SteamAPI_RegisterCallResult(param_1 + 8,local_c,local_8);
        return;
      }
    }
  }
  return;
}



void FUN_00410a10(undefined4 param_1)

{
  FUN_0040f440(DAT_0044a6c0,DAT_0044a6d8,(byte *)"Analytics Web Request Completed: %d");
  return;
}



undefined4 * __fastcall FUN_00410a40(undefined4 *param_1)

{
  void *pvVar1;
  undefined4 *puVar2;
  
  *param_1 = fixapi2_impl::CFixEventManager::vftable;
  param_1[4] = FUN_00408f40;
  param_1[5] = 0;
  param_1[6] = 0;
  param_1[7] = 0;
  param_1[8] = 0xffff;
  param_1[9] = 0xffffffff;
  param_1[10] = param_1[5];
  param_1[0xb] = FUN_00408f40;
  param_1[0xc] = 0;
  param_1[0xd] = 0;
  param_1[0xe] = 0;
  param_1[0xf] = 0xffff;
  param_1[0x10] = 0xffffffff;
  param_1[0x11] = param_1[0xc];
  param_1[1] = 0;
  pvVar1 = (void *)FUN_00403c30(0x6c);
  if (pvVar1 == (void *)0x0) {
    puVar2 = (undefined4 *)0x0;
  }
  else {
    puVar2 = FUN_00410b10(pvVar1,0,0,0,0);
  }
  param_1[2] = puVar2;
  pvVar1 = (void *)FUN_00403c30(0x48);
  if (pvVar1 != (void *)0x0) {
    puVar2 = FUN_00410bd0(pvVar1,0,0,0,0);
    param_1[3] = puVar2;
    return param_1;
  }
  param_1[3] = 0;
  return param_1;
}



undefined4 * __thiscall
FUN_00410b10(void *this,undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  *(undefined4 *)this = param_1;
  *(undefined4 *)((int)this + 4) = param_2;
  *(undefined4 *)((int)this + 8) = param_3;
  *(undefined4 *)((int)this + 0xc) = param_4;
  *(code **)((int)this + 0x18) = FUN_00408f40;
  *(undefined4 *)((int)this + 0x1c) = 0;
  *(undefined4 *)((int)this + 0x20) = 0;
  *(undefined4 *)((int)this + 0x24) = 0;
  *(undefined4 *)((int)this + 0x30) = *(undefined4 *)((int)this + 0x1c);
  *(undefined4 *)((int)this + 0x28) = 0xffff;
  *(undefined4 *)((int)this + 0x2c) = 0xffffffff;
  *(code **)((int)this + 0x34) = FUN_00408f40;
  *(undefined4 *)((int)this + 0x38) = 0;
  *(undefined4 *)((int)this + 0x3c) = 0;
  *(undefined4 *)((int)this + 0x40) = 0;
  *(undefined4 *)((int)this + 0x4c) = *(undefined4 *)((int)this + 0x38);
  *(undefined4 *)((int)this + 0x44) = 0xffff;
  *(undefined4 *)((int)this + 0x48) = 0xffffffff;
  *(code **)((int)this + 0x50) = FUN_004118e0;
  *(undefined4 *)((int)this + 0x54) = 0;
  *(undefined4 *)((int)this + 0x58) = 0;
  *(undefined4 *)((int)this + 0x5c) = 0;
  *(undefined4 *)((int)this + 0x68) = *(undefined4 *)((int)this + 0x54);
  *(undefined4 *)((int)this + 0x60) = 0xffff;
  *(undefined4 *)((int)this + 100) = 0xffffffff;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  return (undefined4 *)this;
}



undefined4 * __thiscall
FUN_00410bd0(void *this,undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  *(undefined4 *)this = param_1;
  *(undefined4 *)((int)this + 4) = param_2;
  *(undefined4 *)((int)this + 8) = param_3;
  *(undefined4 *)((int)this + 0xc) = param_4;
  *(code **)((int)this + 0x18) = FUN_00408f40;
  *(undefined4 *)((int)this + 0x1c) = 0;
  *(undefined4 *)((int)this + 0x20) = 0;
  *(undefined4 *)((int)this + 0x24) = 0;
  *(undefined4 *)((int)this + 0x30) = *(undefined4 *)((int)this + 0x1c);
  *(undefined4 *)((int)this + 0x28) = 0xffff;
  *(undefined4 *)((int)this + 0x2c) = 0xffffffff;
  *(undefined4 *)((int)this + 0x34) = 0;
  *(undefined4 *)((int)this + 0x38) = 0;
  *(undefined4 *)((int)this + 0x3c) = 0;
  *(undefined4 *)((int)this + 0x44) = *(undefined4 *)((int)this + 0x34);
  *(undefined4 *)((int)this + 0x40) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  return (undefined4 *)this;
}



void __fastcall FUN_00410c50(int param_1)

{
  FUN_0040e600(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  return;
}



void __fastcall FUN_00410cc0(int param_1)

{
  FUN_004124e0(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  return;
}



void __fastcall FUN_00410d30(undefined4 *param_1)

{
  int iVar1;
  
  *param_1 = fixapi2_impl::CFixEventManager::vftable;
  FUN_00412300((int)(param_1 + 4));
  iVar1 = param_1[2];
  if (iVar1 != 0) {
    FUN_00407450(iVar1 + 0x50);
    FUN_00410cc0(iVar1 + 0x34);
    FUN_00410cc0(iVar1 + 0x18);
    FUN_00403c10(iVar1);
  }
  iVar1 = param_1[3];
  param_1[2] = 0;
  if (iVar1 != 0) {
    FUN_0040a350((int *)(iVar1 + 0x34));
    FUN_00410cc0(iVar1 + 0x18);
    FUN_00403c10(iVar1);
  }
  param_1[3] = 0;
  FUN_00410c50((int)(param_1 + 0xb));
  FUN_00410c50((int)(param_1 + 4));
  return;
}



undefined4 * __thiscall FUN_00410db0(void *this,byte param_1)

{
  FUN_00410d30((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



void __thiscall FUN_00410de0(void *this,int param_1)

{
  int iVar1;
  void *pvVar2;
  ushort uVar3;
  undefined4 *puVar4;
  float *pfVar5;
  ushort uVar6;
  undefined2 uVar7;
  uint uVar8;
  uint uVar9;
  void *this_00;
  bool bVar10;
  float local_3c;
  float local_38 [3];
  float local_2c;
  float local_28;
  float local_24;
  void *local_20;
  float local_1c;
  float local_18;
  float local_14;
  float local_10;
  void *local_c;
  char local_5;
  
  uVar9 = 0;
  *(float *)((int)this + 0x10) = *(float *)(param_1 + 0x10) + *(float *)((int)this + 0x10);
  *(float *)((int)this + 0x14) = *(float *)(param_1 + 0x14) + *(float *)((int)this + 0x14);
  local_c = this;
  if (*(short *)(param_1 + 0x20) != 0) {
    do {
      pvVar2 = local_c;
      uVar8 = uVar9 & 0xffff;
      if ((uVar8 < *(uint *)(param_1 + 0x20)) &&
         (uVar6 = (ushort)uVar8,
         uVar6 < *(ushort *)(param_1 + 0x2e) || uVar6 == *(ushort *)(param_1 + 0x2e))) {
        if (uVar6 == 0xffff) {
          uVar3 = 0xffff;
        }
        else {
          uVar3 = *(ushort *)(*(int *)(param_1 + 0x1c) + uVar8 * 0x14);
        }
        if (uVar3 != uVar6) {
          iVar1 = *(int *)(param_1 + 0x1c);
          local_10 = *(float *)(iVar1 + 0xc + uVar8 * 0x14);
          local_38[0] = *(float *)(iVar1 + 8 + uVar8 * 0x14);
          local_14 = *(float *)(iVar1 + 0x10 + uVar8 * 0x14);
          local_20 = (void *)((int)local_c + 0x18);
          local_18 = local_38[0];
          uVar8 = FUN_00418240(local_20,local_38);
          uVar8 = uVar8 & 0xffff;
          if (uVar8 == 0xffff) {
            local_24 = local_14;
            local_28 = local_10;
            FUN_00411530(local_20,&local_18,&local_28);
          }
          else {
            iVar1 = *(int *)((int)pvVar2 + 0x1c);
            *(float *)(iVar1 + 0xc + uVar8 * 0x14) =
                 *(float *)(iVar1 + 0xc + uVar8 * 0x14) + local_10;
            *(float *)(iVar1 + 0x10 + uVar8 * 0x14) =
                 *(float *)(iVar1 + 0x10 + uVar8 * 0x14) + local_14;
          }
        }
      }
      uVar9 = uVar9 + 1;
    } while ((int)uVar9 < (int)(uint)*(ushort *)(param_1 + 0x20));
  }
  uVar9 = 0;
  if (*(short *)(param_1 + 0x58) != 0) {
    do {
      pvVar2 = local_c;
      uVar8 = uVar9 & 0xffff;
      if ((uVar8 < *(uint *)(param_1 + 0x58)) &&
         (uVar6 = (ushort)uVar8,
         uVar6 < *(ushort *)(param_1 + 0x66) || uVar6 == *(ushort *)(param_1 + 0x66))) {
        if (uVar6 == 0xffff) {
          uVar3 = 0xffff;
        }
        else {
          uVar3 = *(ushort *)(*(int *)(param_1 + 0x54) + uVar8 * 0x18);
        }
        if (uVar3 != uVar6) {
          iVar1 = *(int *)(param_1 + 0x54);
          local_14 = *(float *)(iVar1 + 0x10 + uVar8 * 0x18);
          local_3c = *(float *)(iVar1 + 8 + uVar8 * 0x18);
          local_38[0] = *(float *)(iVar1 + 0xc + uVar8 * 0x18);
          local_10 = *(float *)(iVar1 + 0x14 + uVar8 * 0x18);
          local_20 = (void *)((int)local_c + 0x50);
          local_1c = local_3c;
          local_18 = local_38[0];
          uVar8 = FUN_00411330(local_20,&local_3c);
          uVar8 = uVar8 & 0xffff;
          if (uVar8 == 0xffff) {
            local_24 = local_10;
            local_28 = local_14;
            FUN_004115c0(local_20,&local_1c,&local_28);
          }
          else {
            iVar1 = *(int *)((int)pvVar2 + 0x54);
            *(float *)(iVar1 + 0x10 + uVar8 * 0x18) =
                 local_14 + *(float *)(iVar1 + 0x10 + uVar8 * 0x18);
            *(float *)(iVar1 + 0x14 + uVar8 * 0x18) =
                 *(float *)(iVar1 + 0x14 + uVar8 * 0x18) + local_10;
          }
        }
      }
      uVar9 = uVar9 + 1;
    } while ((int)uVar9 < (int)(uint)*(ushort *)(param_1 + 0x58));
  }
  uVar9 = 0;
  if (*(short *)(param_1 + 0x3c) != 0) {
    do {
      pvVar2 = local_c;
      uVar8 = uVar9 & 0xffff;
      if ((uVar8 < *(uint *)(param_1 + 0x3c)) &&
         (uVar6 = (ushort)uVar8,
         uVar6 < *(ushort *)(param_1 + 0x4a) || uVar6 == *(ushort *)(param_1 + 0x4a))) {
        bVar10 = uVar6 == 0xffff;
        if (!bVar10) {
          bVar10 = *(ushort *)(*(int *)(param_1 + 0x38) + uVar8 * 0x14) == uVar6;
        }
        if (!bVar10) {
          iVar1 = *(int *)(param_1 + 0x38);
          this_00 = (void *)((int)local_c + 0x34);
          local_14 = *(float *)(iVar1 + 0xc + uVar8 * 0x14);
          local_38[0] = *(float *)(iVar1 + 8 + uVar8 * 0x14);
          local_10 = *(float *)(iVar1 + 0x10 + uVar8 * 0x14);
          local_20 = (void *)local_38[0];
          uVar8 = FUN_00418240(this_00,local_38);
          uVar8 = uVar8 & 0xffff;
          if (uVar8 == 0xffff) {
            local_18 = local_10;
            local_2c = (float)local_20;
            local_1c = local_14;
            local_28 = local_14;
            local_24 = local_10;
            local_14 = 9.183409e-41;
            local_5 = '\0';
            FUN_004113b0(this_00,&local_2c,(ushort *)&local_14,&local_5);
            uVar8 = FUN_00412100((int)this_00);
            uVar8 = uVar8 & 0xffff;
            local_20 = (void *)(uVar8 * 0x14);
            puVar4 = (undefined4 *)(*(int *)((int)pvVar2 + 0x38) + (int)local_20);
            *(short *)(puVar4 + 1) = SUB42(local_14,0);
            *puVar4 = 0xffffffff;
            *(undefined2 *)((int)puVar4 + 6) = 0;
            uVar7 = (undefined2)uVar8;
            if (SUB42(local_14,0) == -1) {
              *(undefined2 *)((int)pvVar2 + 0x44) = uVar7;
            }
            else if (local_5 == '\0') {
              *(undefined2 *)(*(int *)((int)pvVar2 + 0x38) + 2 + ((uint)local_14 & 0xffff) * 0x14) =
                   uVar7;
            }
            else {
              *(undefined2 *)(*(int *)((int)pvVar2 + 0x38) + ((uint)local_14 & 0xffff) * 0x14) =
                   uVar7;
            }
            FUN_00411660(this_00,uVar8);
            *(short *)((int)pvVar2 + 0x46) = *(short *)((int)pvVar2 + 0x46) + 1;
            pfVar5 = (float *)((int)local_20 + 8 + *(int *)((int)pvVar2 + 0x38));
            if (pfVar5 != (float *)0x0) {
              *pfVar5 = local_2c;
              pfVar5[1] = local_28;
              pfVar5[2] = local_24;
            }
          }
          else {
            iVar1 = *(int *)((int)local_c + 0x38);
            *(float *)(iVar1 + 0xc + uVar8 * 0x14) =
                 local_14 + *(float *)(iVar1 + 0xc + uVar8 * 0x14);
            *(float *)(iVar1 + 0x10 + uVar8 * 0x14) =
                 local_10 + *(float *)(iVar1 + 0x10 + uVar8 * 0x14);
          }
        }
      }
      uVar9 = uVar9 + 1;
    } while ((int)uVar9 < (int)(uint)*(ushort *)(param_1 + 0x3c));
  }
  return;
}



void __thiscall FUN_00411190(void *this,int param_1)

{
  void *_Src;
  undefined4 *puVar1;
  float fVar2;
  int iVar3;
  int iVar4;
  ushort uVar5;
  int iVar6;
  ushort uVar7;
  uint uVar8;
  uint uVar9;
  undefined4 local_24 [3];
  float local_18;
  float local_14;
  undefined4 local_10;
  float local_c;
  void *local_8;
  
  iVar4 = param_1;
  uVar9 = 0;
  *(float *)((int)this + 0x10) = *(float *)(param_1 + 0x10) + *(float *)((int)this + 0x10);
  *(float *)((int)this + 0x14) = *(float *)(param_1 + 0x14) + *(float *)((int)this + 0x14);
  local_8 = this;
  if (*(short *)(param_1 + 0x20) != 0) {
    do {
      this = local_8;
      uVar8 = uVar9 & 0xffff;
      if ((uVar8 < *(uint *)(param_1 + 0x20)) &&
         (uVar7 = (ushort)uVar8,
         uVar7 < *(ushort *)(param_1 + 0x2e) || uVar7 == *(ushort *)(param_1 + 0x2e))) {
        if (uVar7 == 0xffff) {
          uVar5 = 0xffff;
        }
        else {
          uVar5 = *(ushort *)(*(int *)(param_1 + 0x1c) + uVar8 * 0x14);
        }
        if (uVar5 != uVar7) {
          iVar3 = *(int *)(param_1 + 0x1c);
          fVar2 = *(float *)(iVar3 + 0xc + uVar8 * 0x14);
          local_24[0] = *(undefined4 *)(iVar3 + 8 + uVar8 * 0x14);
          local_c = *(float *)(iVar3 + 0x10 + uVar8 * 0x14);
          local_10 = local_24[0];
          uVar8 = FUN_00418240((void *)((int)local_8 + 0x18),local_24);
          uVar8 = uVar8 & 0xffff;
          if (uVar8 == 0xffff) {
            local_14 = local_c;
            local_18 = fVar2;
            FUN_00411530((void *)((int)this + 0x18),&local_10,&local_18);
          }
          else {
            iVar3 = *(int *)((int)this + 0x1c);
            *(float *)(iVar3 + 0xc + uVar8 * 0x14) = *(float *)(iVar3 + 0xc + uVar8 * 0x14) + fVar2;
            *(float *)(iVar3 + 0x10 + uVar8 * 0x14) =
                 *(float *)(iVar3 + 0x10 + uVar8 * 0x14) + local_c;
          }
        }
      }
      uVar9 = uVar9 + 1;
    } while ((int)uVar9 < (int)(uint)*(ushort *)(param_1 + 0x20));
  }
  param_1 = 0;
  if (0 < *(int *)(iVar4 + 0x40)) {
    do {
      iVar3 = *(int *)((int)this + 0x40);
      local_10 = *(undefined4 *)(*(int *)(iVar4 + 0x34) + param_1 * 4);
      if (*(int *)((int)this + 0x38) < iVar3 + 1) {
        FUN_0040a710((void *)((int)this + 0x34),(iVar3 - *(int *)((int)this + 0x38)) + 1);
      }
      *(int *)((int)this + 0x40) = *(int *)((int)this + 0x40) + 1;
      iVar6 = (*(int *)((int)this + 0x40) - iVar3) + -1;
      *(int *)((int)this + 0x44) = *(int *)((int)this + 0x34);
      if (0 < iVar6) {
        _Src = (void *)(*(int *)((int)this + 0x34) + iVar3 * 4);
        FID_conflict__memcpy((void *)((int)_Src + 4),_Src,iVar6 * 4);
      }
      puVar1 = (undefined4 *)(*(int *)((int)this + 0x34) + iVar3 * 4);
      if (puVar1 != (undefined4 *)0x0) {
        *puVar1 = local_10;
      }
      param_1 = param_1 + 1;
    } while (param_1 < *(int *)(iVar4 + 0x40));
  }
  return;
}



uint __thiscall FUN_00411330(void *this,undefined4 param_1)

{
  char cVar1;
  uint uVar2;
  int iVar3;
  ushort uVar4;
  
  uVar4 = *(ushort *)((int)this + 0x10);
  if (uVar4 == 0xffff) {
    return 0xffff;
  }
  do {
    iVar3 = (uint)uVar4 * 0x18;
                    // WARNING: Load size is inaccurate
    cVar1 = (**this)(param_1,*(int *)((int)this + 4) + 8 + iVar3);
    if (cVar1 == '\0') {
                    // WARNING: Load size is inaccurate
      uVar2 = (**this)(*(int *)((int)this + 4) + 8 + iVar3,param_1);
      if ((char)uVar2 == '\0') break;
      uVar4 = *(ushort *)(*(int *)((int)this + 4) + 2 + iVar3);
    }
    else {
      uVar4 = *(ushort *)(iVar3 + *(int *)((int)this + 4));
    }
    uVar2 = 0;
  } while (uVar4 != 0xffff);
  return uVar2 & 0xffff0000 | (uint)uVar4;
}



void __thiscall FUN_004113b0(void *this,undefined4 param_1,ushort *param_2,undefined *param_3)

{
  ushort uVar1;
  char cVar2;
  int iVar3;
  
  uVar1 = *(ushort *)((int)this + 0x10);
  *param_2 = 0xffff;
  *param_3 = 0;
  while (uVar1 != 0xffff) {
    *param_2 = uVar1;
    iVar3 = (uint)uVar1 * 0x14;
                    // WARNING: Load size is inaccurate
    cVar2 = (**this)(param_1,*(int *)((int)this + 4) + 8 + iVar3);
    if (cVar2 == '\0') {
      *param_3 = 0;
      uVar1 = *(ushort *)(iVar3 + 2 + *(int *)((int)this + 4));
    }
    else {
      *param_3 = 1;
      uVar1 = *(ushort *)(iVar3 + *(int *)((int)this + 4));
    }
  }
  return;
}



void __thiscall FUN_00411420(void *this,undefined4 param_1,ushort *param_2,undefined *param_3)

{
  ushort uVar1;
  char cVar2;
  int iVar3;
  
  uVar1 = *(ushort *)((int)this + 0x10);
  *param_2 = 0xffff;
  *param_3 = 0;
  while (uVar1 != 0xffff) {
    *param_2 = uVar1;
    iVar3 = (uint)uVar1 * 0x18;
                    // WARNING: Load size is inaccurate
    cVar2 = (**this)(param_1,*(int *)((int)this + 4) + 8 + iVar3);
    if (cVar2 == '\0') {
      *param_3 = 0;
      uVar1 = *(ushort *)(iVar3 + 2 + *(int *)((int)this + 4));
    }
    else {
      *param_3 = 1;
      uVar1 = *(ushort *)(iVar3 + *(int *)((int)this + 4));
    }
  }
  return;
}



undefined4 FUN_00411490(void)

{
  return 1;
}



undefined4 FUN_004114a0(void)

{
  return 0x1040100;
}



undefined4 __thiscall FUN_004114b0(void *this,undefined4 *param_1,undefined4 *param_2)

{
  *param_1 = *(undefined4 *)((int)this + 0x10);
  *param_2 = *(undefined4 *)((int)this + 0x14);
  return CONCAT31((int3)((uint)param_2 >> 8),1);
}



uint __thiscall FUN_004114d0(void *this,undefined4 param_1,undefined4 *param_2,undefined4 *param_3)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 local_10 [3];
  
  local_10[0] = param_1;
  uVar2 = FUN_00418240((void *)((int)this + 0x18),local_10);
  uVar3 = uVar2 & 0xffff;
  if (uVar3 == 0xffff) {
    return uVar2 & 0xff00;
  }
  iVar1 = *(int *)((int)this + 0x1c);
  *param_2 = *(undefined4 *)(iVar1 + 0xc + uVar3 * 0x14);
  *param_3 = *(undefined4 *)(iVar1 + 0x10 + uVar3 * 0x14);
  return CONCAT31((int3)((uint)param_3 >> 8),1);
}



uint __thiscall FUN_00411530(void *this,undefined4 *param_1,undefined4 *param_2)

{
  undefined4 *puVar1;
  uint uVar2;
  uint uVar3;
  undefined4 local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  local_10 = *param_1;
  local_c = *param_2;
  local_8 = param_2[1];
  param_2 = (undefined4 *)0xffff;
  param_1 = (undefined4 *)((uint)param_1 & 0xffffff00);
  FUN_004113b0(this,&local_10,(ushort *)&param_2,(undefined *)&param_1);
  uVar3 = FUN_00412100((int)this);
  uVar3 = uVar3 & 0xffff;
  FUN_00411910(this,uVar3,(ushort)param_2,(char)param_1);
  *(short *)((int)this + 0x12) = *(short *)((int)this + 0x12) + 1;
  uVar2 = *(uint *)((int)this + 4);
  puVar1 = (undefined4 *)(uVar2 + (uVar3 * 5 + 2) * 4);
  if (puVar1 != (undefined4 *)0x0) {
    *puVar1 = local_10;
    puVar1[1] = local_c;
    puVar1[2] = local_8;
  }
  return uVar2 & 0xffff0000 | uVar3;
}



uint __thiscall FUN_004115c0(void *this,undefined4 *param_1,undefined4 *param_2)

{
  undefined4 *puVar1;
  uint uVar2;
  undefined4 *puVar3;
  uint uVar4;
  undefined4 local_14;
  undefined4 local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  puVar3 = param_2;
  puVar1 = param_1;
  param_1 = (undefined4 *)((uint)param_1 & 0xffffff00);
  local_14 = *puVar1;
  local_10 = puVar1[1];
  param_2 = (undefined4 *)0xffff;
  local_c = *puVar3;
  local_8 = puVar3[1];
  FUN_00411420(this,&local_14,(ushort *)&param_2,(undefined *)&param_1);
  uVar4 = FUN_00412200((int)this);
  uVar4 = uVar4 & 0xffff;
  FUN_004151e0(this,uVar4,(ushort)param_2,(char)param_1);
  *(short *)((int)this + 0x12) = *(short *)((int)this + 0x12) + 1;
  uVar2 = *(uint *)((int)this + 4);
  puVar1 = (undefined4 *)(uVar2 + (uVar4 * 3 + 1) * 8);
  if (puVar1 != (undefined4 *)0x0) {
    *puVar1 = local_14;
    puVar1[1] = local_10;
    puVar1[2] = local_c;
    puVar1[3] = local_8;
  }
  return uVar2 & 0xffff0000 | uVar4;
}



void __thiscall FUN_00411660(void *this,uint param_1)

{
  ushort uVar1;
  int iVar2;
  ushort uVar3;
  short sVar4;
  uint uVar5;
  int iVar6;
  uint uVar7;
  short sVar8;
  uint uVar9;
  
  if ((short)param_1 != *(short *)((int)this + 0x10)) {
    while (sVar8 = (short)param_1, sVar8 != -1) {
      iVar2 = *(int *)((int)this + 4);
      uVar1 = *(ushort *)(iVar2 + 4 + (param_1 & 0xffff) * 0x14);
      uVar7 = (uint)uVar1;
      if ((uVar1 == 0xffff) || (*(short *)(iVar2 + 6 + uVar7 * 0x14) != 0)) break;
      if (uVar1 == 0xffff) {
        uVar5 = 0xffff;
LAB_004116e4:
        uVar3 = 0xffff;
      }
      else {
        uVar3 = *(ushort *)(iVar2 + 4 + uVar7 * 0x14);
        uVar5 = (uint)uVar3;
        if (uVar3 == 0xffff) goto LAB_004116e4;
        uVar3 = *(ushort *)(iVar2 + uVar5 * 0x14);
      }
      if (uVar3 == uVar1) {
        if ((short)uVar5 != -1) {
          uVar3 = *(ushort *)(uVar5 * 0x14 + 2 + iVar2);
          if ((uVar3 != 0xffff) && (iVar6 = (uint)uVar3 * 0x14, *(short *)(iVar6 + 6 + iVar2) == 0))
          {
            *(undefined2 *)(iVar2 + 6 + uVar7 * 0x14) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar6) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x14) = 0;
            param_1 = uVar5;
            goto LAB_004118af;
          }
        }
        if (uVar1 == 0xffff) {
          sVar4 = -1;
        }
        else {
          sVar4 = *(short *)(iVar2 + 2 + uVar7 * 0x14);
        }
        uVar9 = uVar7;
        if (sVar4 == sVar8) {
          FUN_004190f0(this,uVar1);
          uVar5 = 0xffff;
          if (uVar1 == 0xffff) {
            uVar9 = 0xffff;
            param_1 = uVar7;
          }
          else {
            uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + uVar7 * 0x14);
            uVar9 = (uint)uVar1;
            param_1 = uVar7;
            if (uVar1 != 0xffff) {
              uVar5 = (uint)*(ushort *)(*(int *)((int)this + 4) + 4 + uVar9 * 0x14);
            }
          }
        }
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar9 * 0x14) = 1;
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x14) = 0;
        FUN_00419230(this,(ushort)uVar5);
      }
      else {
        if ((short)uVar5 != -1) {
          uVar3 = *(ushort *)(uVar5 * 0x14 + iVar2);
          if ((uVar3 != 0xffff) && (iVar6 = (uint)uVar3 * 0x14, *(short *)(iVar6 + 6 + iVar2) == 0))
          {
            *(undefined2 *)(iVar2 + 6 + uVar7 * 0x14) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar6) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x14) = 0;
            param_1 = uVar5;
            goto LAB_004118af;
          }
        }
        if (uVar1 == 0xffff) {
          sVar4 = -1;
        }
        else {
          sVar4 = *(short *)(iVar2 + uVar7 * 0x14);
        }
        uVar9 = uVar7;
        if (sVar4 == sVar8) {
          FUN_00419230(this,uVar1);
          uVar5 = 0xffff;
          if (uVar1 == 0xffff) {
            uVar9 = 0xffff;
            param_1 = uVar7;
          }
          else {
            uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + uVar7 * 0x14);
            uVar9 = (uint)uVar1;
            param_1 = uVar7;
            if (uVar1 != 0xffff) {
              uVar5 = (uint)*(ushort *)(*(int *)((int)this + 4) + 4 + uVar9 * 0x14);
            }
          }
        }
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar9 * 0x14) = 1;
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x14) = 0;
        FUN_004190f0(this,(ushort)uVar5);
      }
LAB_004118af:
      if ((short)param_1 == *(short *)((int)this + 0x10)) break;
    }
  }
  *(undefined2 *)(*(int *)((int)this + 4) + 6 + (uint)*(ushort *)((int)this + 0x10) * 0x14) = 1;
  return;
}



uint __cdecl FUN_004118e0(uint *param_1,uint *param_2)

{
  uint uVar1;
  bool bVar2;
  
  uVar1 = param_1[1];
  bVar2 = uVar1 < param_2[1];
  if ((bVar2 || uVar1 == param_2[1]) && ((bVar2 || (uVar1 = *param_1, uVar1 < *param_2)))) {
    return CONCAT31((int3)(uVar1 >> 8),1);
  }
  return uVar1 & 0xffffff00;
}



void __thiscall FUN_00411910(void *this,uint param_1,ushort param_2,char param_3)

{
  int iVar1;
  uint uVar2;
  undefined2 uVar3;
  
  uVar2 = param_1 & 0xffff;
  iVar1 = *(int *)((int)this + 4);
  *(ushort *)(iVar1 + 4 + uVar2 * 0x14) = param_2;
  *(undefined4 *)(iVar1 + uVar2 * 0x14) = 0xffffffff;
  *(undefined2 *)(iVar1 + 6 + uVar2 * 0x14) = 0;
  uVar3 = (undefined2)param_1;
  if (param_2 == 0xffff) {
    *(undefined2 *)((int)this + 0x10) = uVar3;
    FUN_00411660(this,param_1);
    return;
  }
  if (param_3 != '\0') {
    *(undefined2 *)(*(int *)((int)this + 4) + (uint)param_2 * 0x14) = uVar3;
    FUN_00411660(this,param_1);
    return;
  }
  *(undefined2 *)(*(int *)((int)this + 4) + 2 + (uint)param_2 * 0x14) = uVar3;
  FUN_00411660(this,param_1);
  return;
}



void __thiscall FUN_00411990(void *this,uint *param_1)

{
  uint uVar1;
  uint uVar2;
  void *this_00;
  undefined4 *puVar3;
  int iVar4;
  uint *puVar5;
  undefined2 uVar6;
  void *pvVar7;
  float10 fVar8;
  ulonglong uVar9;
  undefined8 uVar10;
  int local_80;
  int local_7c;
  void *local_70 [3];
  void *local_64 [3];
  uint local_58 [2];
  int local_50;
  int local_4c;
  float local_48;
  float local_44;
  float local_40;
  float local_3c;
  float local_38;
  float local_34;
  uint local_30;
  undefined4 *local_2c;
  void *local_28;
  void *local_24;
  void *local_20;
  uint local_1c;
  float local_18;
  float local_14;
  uint local_10;
  void *local_c;
  char local_5;
  
  pvVar7 = (void *)((int)this + 0x10);
  local_24 = this;
  local_c = pvVar7;
  FUN_00412300((int)pvVar7);
  *(undefined4 *)((int)this + 4) = 0;
  local_1c = FUN_0040f920(param_1);
  for (local_1c = local_1c & 0xffff; local_1c != 0; local_1c = local_1c - 1) {
    uVar1 = FUN_0040f880(param_1);
    local_10 = uVar1;
    uVar2 = FUN_0040f770(param_1);
    local_14 = (float)(uVar2 & 0xff);
    uVar9 = FUN_0040f8a0((int *)param_1);
    local_20 = (void *)uVar9;
    uVar9 = FUN_0040f8a0((int *)param_1);
    local_18 = (float)uVar9;
    local_58[0] = uVar1;
    uVar1 = FUN_0040b090(pvVar7,local_58);
    uVar1 = uVar1 & 0xffff;
    if (uVar1 == 0xffff) {
      this_00 = (void *)FUN_00403c30(0x6c);
      uVar1 = local_10;
      if (this_00 == (void *)0x0) {
        local_2c = (undefined4 *)0x0;
      }
      else {
        local_2c = FUN_00410b10(this_00,local_10,local_14,local_20,local_18);
      }
      local_30 = uVar1;
      local_10 = 0xffff;
      local_5 = '\0';
      FUN_0040b110(pvVar7,&local_30,(ushort *)&local_10,&local_5);
      uVar1 = FUN_0040c000((int)pvVar7);
      uVar1 = uVar1 & 0xffff;
      local_20 = (void *)(uVar1 * 0x10);
      puVar3 = (undefined4 *)(*(int *)((int)pvVar7 + 4) + (int)local_20);
      *(short *)(puVar3 + 1) = (short)local_10;
      *puVar3 = 0xffffffff;
      *(undefined2 *)((int)puVar3 + 6) = 0;
      uVar6 = (undefined2)uVar1;
      if ((short)local_10 == -1) {
        *(undefined2 *)((int)pvVar7 + 0x10) = uVar6;
      }
      else if (local_5 == '\0') {
        *(undefined2 *)(*(int *)((int)pvVar7 + 4) + 2 + (local_10 & 0xffff) * 0x10) = uVar6;
      }
      else {
        *(undefined2 *)(*(int *)((int)pvVar7 + 4) + (local_10 & 0xffff) * 0x10) = uVar6;
      }
      FUN_0040b6d0(pvVar7,uVar1);
      *(short *)((int)pvVar7 + 0x12) = *(short *)((int)pvVar7 + 0x12) + 1;
      puVar5 = (uint *)((int)local_20 + *(int *)((int)pvVar7 + 4) + 8);
      if (puVar5 != (uint *)0x0) {
        *puVar5 = local_30;
        puVar5[1] = (uint)local_2c;
      }
    }
    uVar1 = *(uint *)(*(int *)((int)local_24 + 0x14) + 0xc + uVar1 * 0x10);
    local_10 = uVar1;
    switch(local_14) {
    case 1.401298e-45:
      fVar8 = FUN_0040f860(param_1);
      local_20 = (void *)(float)fVar8;
      fVar8 = FUN_0040f860(param_1);
      local_18 = (float)fVar8;
      *(void **)(uVar1 + 0x10) = local_20;
      *(float *)(uVar1 + 0x14) = local_18;
      break;
    case 2.802597e-45:
      uVar2 = FUN_0040f920(param_1);
      uVar2 = uVar2 & 0xffff;
      pvVar7 = local_c;
      if (uVar2 != 0) {
        local_20 = (void *)(uVar1 + 0x18);
        do {
          uVar1 = FUN_0040f920(param_1);
          fVar8 = FUN_0040f860(param_1);
          local_14 = (float)fVar8;
          fVar8 = FUN_0040f860(param_1);
          pvVar7 = local_20;
          local_18 = (float)fVar8;
          local_64[0] = (void *)(uVar1 & 0xffff);
          local_28 = (void *)(uVar1 & 0xffff);
          uVar1 = FUN_00418240(local_20,local_64);
          uVar1 = uVar1 & 0xffff;
          if (uVar1 == 0xffff) {
            local_34 = local_18;
            local_38 = local_14;
            FUN_00411530(pvVar7,&local_28,&local_38);
          }
          else {
            iVar4 = *(int *)(local_10 + 0x1c);
            *(float *)(iVar4 + 0xc + uVar1 * 0x14) =
                 *(float *)(iVar4 + 0xc + uVar1 * 0x14) + local_14;
            *(float *)(iVar4 + 0x10 + uVar1 * 0x14) =
                 *(float *)(iVar4 + 0x10 + uVar1 * 0x14) + local_18;
          }
          uVar2 = uVar2 - 1;
          pvVar7 = local_c;
        } while (uVar2 != 0);
      }
      break;
    case 4.203895e-45:
      uVar2 = FUN_0040f920(param_1);
      uVar2 = uVar2 & 0xffff;
      pvVar7 = local_c;
      if (uVar2 != 0) {
        local_28 = (void *)(uVar1 + 0x34);
        do {
          uVar1 = FUN_0040f920(param_1);
          fVar8 = FUN_0040f860(param_1);
          local_18 = (float)fVar8;
          fVar8 = FUN_0040f860(param_1);
          pvVar7 = local_28;
          local_14 = (float)fVar8;
          local_70[0] = (void *)(uVar1 & 0xffff);
          local_20 = (void *)(uVar1 & 0xffff);
          uVar1 = FUN_00418240(local_28,local_70);
          uVar1 = uVar1 & 0xffff;
          if (uVar1 == 0xffff) {
            local_3c = local_14;
            local_40 = local_18;
            FUN_00411530(pvVar7,&local_20,&local_40);
          }
          else {
            iVar4 = *(int *)(local_10 + 0x38);
            *(float *)(iVar4 + 0xc + uVar1 * 0x14) =
                 *(float *)(iVar4 + 0xc + uVar1 * 0x14) + local_18;
            *(float *)(iVar4 + 0x10 + uVar1 * 0x14) =
                 *(float *)(iVar4 + 0x10 + uVar1 * 0x14) + local_14;
          }
          uVar2 = uVar2 - 1;
          pvVar7 = local_c;
        } while (uVar2 != 0);
      }
      break;
    case 5.605194e-45:
      uVar2 = FUN_0040f920(param_1);
      uVar2 = uVar2 & 0xffff;
      pvVar7 = local_c;
      if (uVar2 != 0) {
        local_28 = (void *)(uVar1 + 0x50);
        do {
          uVar10 = FUN_0040f900(param_1);
          iVar4 = (int)uVar10;
          fVar8 = FUN_0040f860(param_1);
          local_18 = (float)fVar8;
          fVar8 = FUN_0040f860(param_1);
          pvVar7 = local_28;
          local_7c = iVar4 >> 0x1f;
          local_14 = (float)fVar8;
          local_80 = iVar4;
          local_50 = iVar4;
          local_4c = local_7c;
          uVar1 = FUN_00411330(local_28,&local_80);
          uVar1 = uVar1 & 0xffff;
          if (uVar1 == 0xffff) {
            local_44 = local_14;
            local_48 = local_18;
            FUN_004115c0(pvVar7,&local_50,&local_48);
          }
          else {
            iVar4 = *(int *)(local_10 + 0x54);
            *(float *)(iVar4 + 0x10 + uVar1 * 0x18) =
                 *(float *)(iVar4 + 0x10 + uVar1 * 0x18) + local_18;
            *(float *)(iVar4 + 0x14 + uVar1 * 0x18) =
                 *(float *)(iVar4 + 0x14 + uVar1 * 0x18) + local_14;
          }
          uVar2 = uVar2 - 1;
          pvVar7 = local_c;
        } while (uVar2 != 0);
      }
    }
  }
  return;
}



void __thiscall FUN_00411d80(void *this,uint *param_1)

{
  int *this_00;
  int iVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  void *pvVar5;
  undefined4 *puVar6;
  int iVar7;
  uint *puVar8;
  undefined2 uVar9;
  float fVar10;
  ulonglong uVar11;
  uint local_58 [3];
  uint local_4c;
  float local_48;
  float local_44;
  uint local_40 [2];
  float local_38;
  float local_34;
  uint local_30;
  undefined4 *local_2c;
  int local_28;
  void *local_24;
  void *local_20;
  uint local_1c;
  uint local_18;
  float local_14;
  uint local_10;
  void *local_c;
  char local_5;
  
  local_c = (void *)((int)this + 0x2c);
  local_24 = this;
  FUN_004123c0((int)local_c);
  *(undefined4 *)((int)this + 4) = 0;
  local_1c = FUN_0040f920(param_1);
  local_1c = local_1c & 0xffff;
  if (local_1c != 0) {
    local_20 = (void *)((int)this + 0x10);
    do {
      uVar3 = FUN_0040f880(param_1);
      local_10 = uVar3;
      uVar4 = FUN_0040f770(param_1);
      uVar4 = uVar4 & 0xff;
      uVar11 = FUN_0040f8a0((int *)param_1);
      local_14 = (float)uVar11;
      uVar11 = FUN_0040f8a0((int *)param_1);
      local_18 = (uint)uVar11;
      local_40[0] = uVar3;
      uVar3 = FUN_0040b090(local_20,local_40);
      uVar3 = uVar3 & 0xffff;
      if (uVar3 == 0xffff) {
        pvVar5 = (void *)FUN_00403c30(0x48);
        uVar3 = local_10;
        if (pvVar5 == (void *)0x0) {
          local_2c = (undefined4 *)0x0;
        }
        else {
          local_2c = FUN_00410bd0(pvVar5,local_10,uVar4,local_14,local_18);
        }
        local_30 = uVar3;
        local_10 = 0xffff;
        local_5 = '\0';
        FUN_0040b110(local_c,&local_30,(ushort *)&local_10,&local_5);
        uVar3 = FUN_0040c000((int)local_c);
        uVar3 = uVar3 & 0xffff;
        local_18 = uVar3 * 0x10;
        puVar6 = (undefined4 *)(*(int *)((int)local_c + 4) + local_18);
        *(short *)(puVar6 + 1) = (short)local_10;
        *puVar6 = 0xffffffff;
        *(undefined2 *)((int)puVar6 + 6) = 0;
        uVar9 = (undefined2)uVar3;
        if ((short)local_10 == -1) {
          *(undefined2 *)((int)local_c + 0x10) = uVar9;
        }
        else if (local_5 == '\0') {
          *(undefined2 *)(*(int *)((int)local_c + 4) + 2 + (local_10 & 0xffff) * 0x10) = uVar9;
        }
        else {
          *(undefined2 *)(*(int *)((int)local_c + 4) + (local_10 & 0xffff) * 0x10) = uVar9;
        }
        FUN_0040b6d0(local_c,uVar3);
        *(short *)((int)local_c + 0x12) = *(short *)((int)local_c + 0x12) + 1;
        puVar8 = (uint *)(local_18 + 8 + *(int *)((int)local_c + 4));
        if (puVar8 != (uint *)0x0) {
          *puVar8 = local_30;
          puVar8[1] = (uint)local_2c;
        }
      }
      iVar1 = *(int *)(*(int *)((int)local_24 + 0x30) + 0xc + uVar3 * 0x10);
      local_28 = iVar1;
      if (uVar4 == 1) {
        local_18 = FUN_0040f920(param_1);
        local_18 = local_18 & 0xffff;
        if (local_18 != 0) {
          pvVar5 = (void *)(iVar1 + 0x18);
          do {
            local_10 = FUN_0040f920(param_1);
            local_10 = local_10 & 0xffff;
            uVar3 = FUN_0040f920(param_1);
            local_14 = (float)(uVar3 & 0xffff);
            uVar3 = FUN_0040f920(param_1);
            local_58[0] = local_10;
            uVar4 = FUN_00418240(pvVar5,local_58);
            uVar4 = uVar4 & 0xffff;
            fVar10 = (float)(uVar3 & 0xffff);
            if (uVar4 == 0xffff) {
              local_4c = local_10;
              local_38 = local_14;
              local_48 = local_14;
              local_10 = 0xffff;
              local_5 = '\0';
              local_44 = fVar10;
              local_34 = fVar10;
              FUN_004113b0(pvVar5,&local_4c,(ushort *)&local_10,&local_5);
              uVar3 = FUN_00412100((int)pvVar5);
              uVar3 = uVar3 & 0xffff;
              puVar6 = (undefined4 *)(*(int *)(iVar1 + 0x1c) + uVar3 * 0x14);
              *(short *)(puVar6 + 1) = (short)local_10;
              *puVar6 = 0xffffffff;
              *(undefined2 *)((int)puVar6 + 6) = 0;
              uVar9 = (undefined2)uVar3;
              if ((short)local_10 == -1) {
                *(undefined2 *)(iVar1 + 0x28) = uVar9;
              }
              else if (local_5 == '\0') {
                *(undefined2 *)(*(int *)(iVar1 + 0x1c) + 2 + (local_10 & 0xffff) * 0x14) = uVar9;
              }
              else {
                *(undefined2 *)(*(int *)(iVar1 + 0x1c) + (local_10 & 0xffff) * 0x14) = uVar9;
              }
              FUN_00411660(pvVar5,uVar3);
              *(short *)(iVar1 + 0x2a) = *(short *)(iVar1 + 0x2a) + 1;
              puVar8 = (uint *)(*(int *)(iVar1 + 0x1c) + 8 + uVar3 * 0x14);
              if (puVar8 != (uint *)0x0) {
                *puVar8 = local_4c;
                puVar8[1] = (uint)local_48;
                puVar8[2] = (uint)local_44;
              }
            }
            else {
              iVar2 = *(int *)(local_28 + 0x1c);
              *(float *)(iVar2 + 0xc + uVar4 * 0x14) =
                   local_14 + *(float *)(iVar2 + 0xc + uVar4 * 0x14);
              *(float *)(iVar2 + 0x10 + uVar4 * 0x14) =
                   *(float *)(iVar2 + 0x10 + uVar4 * 0x14) + fVar10;
            }
            local_18 = local_18 - 1;
          } while (local_18 != 0);
        }
      }
      else if (uVar4 == 2) {
        local_10 = FUN_0040f920(param_1);
        local_10 = local_10 & 0xffff;
        if (local_10 != 0) {
          this_00 = (int *)(iVar1 + 0x34);
          do {
            local_18 = FUN_0040f920(param_1);
            iVar2 = *(int *)(iVar1 + 0x40);
            local_18 = local_18 & 0xffff;
            if (*(int *)(iVar1 + 0x38) < iVar2 + 1) {
              FUN_0040a710(this_00,(iVar2 - *(int *)(iVar1 + 0x38)) + 1);
            }
            *(int *)(iVar1 + 0x40) = *(int *)(iVar1 + 0x40) + 1;
            iVar7 = (*(int *)(iVar1 + 0x40) - iVar2) + -1;
            *(int *)(iVar1 + 0x44) = *this_00;
            if (0 < iVar7) {
              pvVar5 = (void *)(*this_00 + iVar2 * 4);
              FID_conflict__memcpy((void *)((int)pvVar5 + 4),pvVar5,iVar7 * 4);
            }
            puVar8 = (uint *)(*this_00 + iVar2 * 4);
            if (puVar8 != (uint *)0x0) {
              *puVar8 = local_18;
            }
            local_10 = local_10 - 1;
          } while (local_10 != 0);
        }
      }
      local_1c = local_1c - 1;
    } while (local_1c != 0);
  }
  return;
}



uint __fastcall FUN_00412100(int param_1)

{
  uint uVar1;
  ushort uVar2;
  uint uVar3;
  
  uVar2 = *(ushort *)(param_1 + 0x14);
  if (uVar2 == 0xffff) {
    uVar1 = *(uint *)(param_1 + 8);
    if (*(ushort *)(param_1 + 0x16) < uVar1) {
      uVar2 = *(short *)(param_1 + 0x16) + 1;
      if (uVar1 <= (ushort)(*(short *)(param_1 + 0x16) + 1)) {
        uVar2 = 0xffff;
      }
    }
    else {
      uVar2 = (-(ushort)(uVar1 != 0) & 1) - 1;
    }
    uVar3 = (uint)uVar2;
    if (uVar1 <= uVar3) {
      FUN_00418670((void *)(param_1 + 4),1);
      uVar1 = *(uint *)(param_1 + 8);
      if (*(ushort *)(param_1 + 0x16) < uVar1) {
        uVar2 = *(short *)(param_1 + 0x16) + 1;
        if (uVar1 <= (ushort)(*(short *)(param_1 + 0x16) + 1)) {
          uVar2 = 0xffff;
        }
      }
      else {
        uVar2 = (-(ushort)(uVar1 != 0) & 1) - 1;
      }
      uVar3 = (uint)uVar2;
      if (uVar1 <= uVar3) {
        uVar3 = Error("CUtlRBTree overflow!\n");
      }
    }
    *(ushort *)(param_1 + 0x16) = uVar2;
    *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(param_1 + 4);
    return uVar3 & 0xffff0000 | (uint)uVar2;
  }
  *(undefined2 *)(param_1 + 0x14) = *(undefined2 *)(*(int *)(param_1 + 4) + 2 + (uint)uVar2 * 0x14);
  *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(param_1 + 4);
  return (uint)uVar2;
}



uint __fastcall FUN_00412200(int param_1)

{
  uint uVar1;
  ushort uVar2;
  uint uVar3;
  
  uVar2 = *(ushort *)(param_1 + 0x14);
  if (uVar2 == 0xffff) {
    uVar1 = *(uint *)(param_1 + 8);
    if (*(ushort *)(param_1 + 0x16) < uVar1) {
      uVar2 = *(short *)(param_1 + 0x16) + 1;
      if (uVar1 <= (ushort)(*(short *)(param_1 + 0x16) + 1)) {
        uVar2 = 0xffff;
      }
    }
    else {
      uVar2 = (-(ushort)(uVar1 != 0) & 1) - 1;
    }
    uVar3 = (uint)uVar2;
    if (uVar1 <= uVar3) {
      FUN_00414e10((void *)(param_1 + 4),1);
      uVar1 = *(uint *)(param_1 + 8);
      if (*(ushort *)(param_1 + 0x16) < uVar1) {
        uVar2 = *(short *)(param_1 + 0x16) + 1;
        if (uVar1 <= (ushort)(*(short *)(param_1 + 0x16) + 1)) {
          uVar2 = 0xffff;
        }
      }
      else {
        uVar2 = (-(ushort)(uVar1 != 0) & 1) - 1;
      }
      uVar3 = (uint)uVar2;
      if (uVar1 <= uVar3) {
        uVar3 = Error("CUtlRBTree overflow!\n");
      }
    }
    *(ushort *)(param_1 + 0x16) = uVar2;
    *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(param_1 + 4);
    return uVar3 & 0xffff0000 | (uint)uVar2;
  }
  *(undefined2 *)(param_1 + 0x14) = *(undefined2 *)(*(int *)(param_1 + 4) + 2 + (uint)uVar2 * 0x18);
  *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(param_1 + 4);
  return (uint)uVar2;
}



void __fastcall FUN_00412300(int param_1)

{
  int iVar1;
  ushort uVar2;
  uint uVar3;
  ushort uVar4;
  
  uVar4 = 0;
  if (*(short *)(param_1 + 8) != 0) {
    do {
      uVar3 = (uint)uVar4;
      if ((uVar3 < *(uint *)(param_1 + 8)) &&
         (uVar4 < *(ushort *)(param_1 + 0x16) || uVar4 == *(ushort *)(param_1 + 0x16))) {
        if (uVar4 == 0xffff) {
          uVar2 = 0xffff;
        }
        else {
          uVar2 = *(ushort *)(*(int *)(param_1 + 4) + uVar3 * 0x10);
        }
        if ((uVar2 != uVar4) &&
           (iVar1 = *(int *)(*(int *)(param_1 + 4) + 0xc + uVar3 * 0x10), iVar1 != 0)) {
          FUN_00407450(iVar1 + 0x50);
          FUN_00410cc0(iVar1 + 0x34);
          FUN_00410cc0(iVar1 + 0x18);
          FUN_00403c10(iVar1);
        }
      }
      uVar4 = uVar4 + 1;
    } while (uVar4 < *(ushort *)(param_1 + 8));
  }
  FUN_0040e600(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  return;
}



void __fastcall FUN_004123c0(int param_1)

{
  int iVar1;
  int iVar2;
  ushort uVar3;
  uint uVar4;
  ushort uVar5;
  
  uVar5 = 0;
  if (*(short *)(param_1 + 8) != 0) {
    do {
      uVar4 = (uint)uVar5;
      if ((uVar4 < *(uint *)(param_1 + 8)) &&
         (uVar5 < *(ushort *)(param_1 + 0x16) || uVar5 == *(ushort *)(param_1 + 0x16))) {
        if (uVar5 == 0xffff) {
          uVar3 = 0xffff;
        }
        else {
          uVar3 = *(ushort *)(*(int *)(param_1 + 4) + uVar4 * 0x10);
        }
        if ((uVar3 != uVar5) &&
           (iVar1 = *(int *)(*(int *)(param_1 + 4) + 0xc + uVar4 * 0x10), iVar1 != 0)) {
          *(undefined4 *)(iVar1 + 0x40) = 0;
          if (-1 < *(int *)(iVar1 + 0x3c)) {
            if (*(int *)(iVar1 + 0x34) != 0) {
              (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(iVar1 + 0x34));
              *(undefined4 *)(iVar1 + 0x34) = 0;
            }
            *(undefined4 *)(iVar1 + 0x38) = 0;
          }
          iVar2 = *(int *)(iVar1 + 0x34);
          *(int *)(iVar1 + 0x44) = iVar2;
          if (-1 < *(int *)(iVar1 + 0x3c)) {
            if (iVar2 != 0) {
              (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar2);
              *(undefined4 *)(iVar1 + 0x34) = 0;
            }
            *(undefined4 *)(iVar1 + 0x38) = 0;
          }
          FUN_00410cc0(iVar1 + 0x18);
          FUN_00403c10(iVar1);
        }
      }
      uVar5 = uVar5 + 1;
    } while (uVar5 < *(ushort *)(param_1 + 8));
  }
  FUN_0040e600(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  return;
}



void __fastcall FUN_004124e0(int param_1)

{
  ushort uVar1;
  uint uVar2;
  ushort uVar3;
  uint uVar4;
  uint local_8;
  
  uVar1 = *(ushort *)(param_1 + 0x16);
  if (uVar1 != 0xffff) {
    uVar2 = *(uint *)(param_1 + 8);
    if (uVar2 != 0) {
      uVar3 = 0;
      local_8 = 0;
      do {
        uVar4 = (uint)uVar3;
        if ((uVar4 < uVar2) && (uVar3 <= uVar1)) {
          if (uVar3 == 0xffff) {
            uVar1 = 0xffff;
          }
          else {
            uVar1 = *(ushort *)(*(int *)(param_1 + 4) + uVar4 * 0x14);
          }
          if (uVar1 != uVar3) {
            *(undefined2 *)(*(int *)(param_1 + 4) + 2 + uVar4 * 0x14) =
                 *(undefined2 *)(param_1 + 0x14);
            *(ushort *)(*(int *)(param_1 + 4) + uVar4 * 0x14) = uVar3;
            *(ushort *)(param_1 + 0x14) = uVar3;
          }
        }
        uVar1 = *(ushort *)(param_1 + 0x16);
        if (uVar3 == uVar1) break;
        uVar2 = *(uint *)(param_1 + 8);
        if ((local_8 + 1 & 0xffff) < uVar2) {
          uVar3 = uVar3 + 1;
        }
        else {
          uVar3 = 0xffff;
        }
        local_8 = (uint)uVar3;
      } while (uVar3 != 0xffff);
    }
    *(undefined4 *)(param_1 + 0x10) = 0xffff;
  }
  return;
}



void __fastcall FUN_00412590(int param_1)

{
  ushort uVar1;
  uint uVar2;
  ushort uVar3;
  uint uVar4;
  uint local_8;
  
  uVar1 = *(ushort *)(param_1 + 0x16);
  if (uVar1 != 0xffff) {
    uVar2 = *(uint *)(param_1 + 8);
    if (uVar2 != 0) {
      uVar3 = 0;
      local_8 = 0;
      do {
        uVar4 = (uint)uVar3;
        if ((uVar4 < uVar2) && (uVar3 <= uVar1)) {
          if (uVar3 == 0xffff) {
            uVar1 = 0xffff;
          }
          else {
            uVar1 = *(ushort *)(*(int *)(param_1 + 4) + uVar4 * 0x18);
          }
          if (uVar1 != uVar3) {
            *(undefined2 *)(*(int *)(param_1 + 4) + 2 + uVar4 * 0x18) =
                 *(undefined2 *)(param_1 + 0x14);
            *(ushort *)(*(int *)(param_1 + 4) + uVar4 * 0x18) = uVar3;
            *(ushort *)(param_1 + 0x14) = uVar3;
          }
        }
        uVar1 = *(ushort *)(param_1 + 0x16);
        if (uVar3 == uVar1) break;
        uVar2 = *(uint *)(param_1 + 8);
        if ((local_8 + 1 & 0xffff) < uVar2) {
          uVar3 = uVar3 + 1;
        }
        else {
          uVar3 = 0xffff;
        }
        local_8 = (uint)uVar3;
      } while (uVar3 != 0xffff);
    }
    *(undefined4 *)(param_1 + 0x10) = 0xffff;
  }
  return;
}



void __thiscall FUN_00412640(void *this,ushort param_1)

{
  ushort uVar1;
  ushort uVar2;
  undefined2 uVar3;
  int iVar4;
  ushort uVar5;
  
  if (param_1 == 0xffff) {
    uVar5 = 0xffff;
LAB_0041267c:
    uVar3 = 0xffff;
  }
  else {
    uVar5 = *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)param_1 * 0x18);
    if (uVar5 == 0xffff) goto LAB_0041267c;
    uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + (uint)uVar5 * 0x18);
  }
  iVar4 = (uint)param_1 * 0x18;
  *(undefined2 *)(*(int *)((int)this + 4) + 2 + iVar4) = uVar3;
  if (uVar5 != 0xffff) {
    uVar1 = *(ushort *)((uint)uVar5 * 0x18 + *(int *)((int)this + 4));
    if (uVar1 != 0xffff) {
      *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar1 * 0x18) = param_1;
    }
    if (param_1 == 0xffff) {
      uVar3 = 0xffff;
    }
    else {
      uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(undefined2 *)(*(int *)((int)this + 4) + 4 + (uint)uVar5 * 0x18) = uVar3;
  }
  if (param_1 == *(ushort *)((int)this + 0x10)) {
    *(ushort *)((int)this + 0x10) = uVar5;
    goto LAB_00412754;
  }
  if (param_1 == 0xffff) {
LAB_00412708:
    uVar1 = 0xffff;
  }
  else {
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    if (uVar1 == 0xffff) goto LAB_00412708;
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + (uint)uVar1 * 0x18);
  }
  uVar2 = 0xffff;
  if (uVar1 == param_1) {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + (uint)uVar2 * 0x18) = uVar5;
  }
  else {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar2 * 0x18) = uVar5;
  }
LAB_00412754:
  *(ushort *)(*(int *)((int)this + 4) + (uint)uVar5 * 0x18) = param_1;
  if (param_1 != 0xffff) {
    *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4) = uVar5;
  }
  return;
}



void __thiscall FUN_00412780(void *this,ushort param_1)

{
  ushort uVar1;
  ushort uVar2;
  undefined2 uVar3;
  int iVar4;
  ushort uVar5;
  
  if (param_1 == 0xffff) {
    uVar5 = 0xffff;
LAB_004127bc:
    uVar3 = 0xffff;
  }
  else {
    uVar5 = *(ushort *)(*(int *)((int)this + 4) + (uint)param_1 * 0x18);
    if (uVar5 == 0xffff) goto LAB_004127bc;
    uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 2 + (uint)uVar5 * 0x18);
  }
  iVar4 = (uint)param_1 * 0x18;
  *(undefined2 *)(iVar4 + *(int *)((int)this + 4)) = uVar3;
  if (uVar5 != 0xffff) {
    uVar1 = *(ushort *)((uint)uVar5 * 0x18 + 2 + *(int *)((int)this + 4));
    if (uVar1 != 0xffff) {
      *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar1 * 0x18) = param_1;
    }
    if (param_1 == 0xffff) {
      uVar3 = 0xffff;
    }
    else {
      uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(undefined2 *)(*(int *)((int)this + 4) + 4 + (uint)uVar5 * 0x18) = uVar3;
  }
  if (param_1 == *(ushort *)((int)this + 0x10)) {
    *(ushort *)((int)this + 0x10) = uVar5;
    goto LAB_00412895;
  }
  if (param_1 == 0xffff) {
LAB_00412849:
    uVar1 = 0xffff;
  }
  else {
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    if (uVar1 == 0xffff) goto LAB_00412849;
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar1 * 0x18);
  }
  uVar2 = 0xffff;
  if (uVar1 == param_1) {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar2 * 0x18) = uVar5;
  }
  else {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + (uint)uVar2 * 0x18) = uVar5;
  }
LAB_00412895:
  *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar5 * 0x18) = param_1;
  if (param_1 != 0xffff) {
    *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4) = uVar5;
  }
  return;
}



void __fastcall FUN_004128c0(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  void *this;
  undefined4 *puVar5;
  ushort uVar6;
  uint uVar7;
  bool bVar8;
  uint local_8;
  
  if ((*(int *)(param_1 + 4) == 0) ||
     (iVar3 = FUN_0040f420(), *(int *)(param_1 + 4) == iVar3 || *(int *)(param_1 + 4) < iVar3)) {
    iVar4 = FUN_0040f420();
    iVar1 = *(int *)(param_1 + 8);
    iVar3 = iVar4 + 0xe10;
    if (iVar1 != 0) {
      FUN_00407450(iVar1 + 0x50);
      FUN_00410cc0(iVar1 + 0x34);
      FUN_00410cc0(iVar1 + 0x18);
      FUN_00403c10(iVar1);
    }
    this = (void *)FUN_00403c30(0x6c);
    if (this == (void *)0x0) {
      puVar5 = (undefined4 *)0x0;
    }
    else {
      puVar5 = FUN_00410b10(this,0,0,0,0);
    }
    *(undefined4 **)(param_1 + 8) = puVar5;
    local_8 = 0;
    if (*(short *)(param_1 + 0x18) != 0) {
      do {
        uVar7 = local_8 & 0xffff;
        if ((uVar7 < *(uint *)(param_1 + 0x18)) &&
           (uVar6 = (ushort)uVar7,
           uVar6 < *(ushort *)(param_1 + 0x26) || uVar6 == *(ushort *)(param_1 + 0x26))) {
          bVar8 = uVar6 == 0xffff;
          if (!bVar8) {
            bVar8 = *(ushort *)(*(int *)(param_1 + 0x14) + uVar7 * 0x10) == uVar6;
          }
          if (!bVar8) {
            iVar1 = *(int *)(*(int *)(param_1 + 0x14) + 0xc + uVar7 * 0x10);
            iVar2 = *(int *)(iVar1 + 8);
            if (iVar4 < iVar2) {
LAB_004129a9:
              if (iVar2 < iVar3) {
                iVar3 = iVar2;
              }
            }
            else if (*(int *)(iVar1 + 0xc) == iVar4 || *(int *)(iVar1 + 0xc) < iVar4) {
              if (iVar4 < iVar2) goto LAB_004129a9;
            }
            else {
              if (*(int *)(iVar1 + 0xc) < iVar3) {
                iVar3 = *(int *)(iVar1 + 0xc);
              }
              FUN_00410de0(*(void **)(param_1 + 8),iVar1);
            }
          }
        }
        local_8 = local_8 + 1;
      } while ((int)local_8 < (int)(uint)*(ushort *)(param_1 + 0x18));
    }
    iVar1 = *(int *)(param_1 + 0xc);
    if (iVar1 != 0) {
      *(undefined4 *)(iVar1 + 0x40) = 0;
      if (-1 < *(int *)(iVar1 + 0x3c)) {
        if (*(int *)(iVar1 + 0x34) != 0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(iVar1 + 0x34));
          *(undefined4 *)(iVar1 + 0x34) = 0;
        }
        *(undefined4 *)(iVar1 + 0x38) = 0;
      }
      iVar2 = *(int *)(iVar1 + 0x34);
      *(int *)(iVar1 + 0x44) = iVar2;
      if (-1 < *(int *)(iVar1 + 0x3c)) {
        if (iVar2 != 0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar2);
          *(undefined4 *)(iVar1 + 0x34) = 0;
        }
        *(undefined4 *)(iVar1 + 0x38) = 0;
      }
      FUN_00410cc0(iVar1 + 0x18);
      FUN_00403c10(iVar1);
    }
    puVar5 = (undefined4 *)FUN_00403c30(0x48);
    if (puVar5 == (undefined4 *)0x0) {
      puVar5 = (undefined4 *)0x0;
    }
    else {
      *puVar5 = 0;
      puVar5[1] = 0;
      puVar5[2] = 0;
      puVar5[3] = 0;
      puVar5[6] = FUN_00408f40;
      puVar5[7] = 0;
      puVar5[8] = 0;
      puVar5[9] = 0;
      puVar5[10] = 0xffff;
      puVar5[0xb] = 0xffffffff;
      puVar5[0xc] = puVar5[7];
      puVar5[0xd] = 0;
      puVar5[0xe] = 0;
      puVar5[0xf] = 0;
      puVar5[0x10] = 0;
      puVar5[0x11] = puVar5[0xd];
      puVar5[4] = 0;
      puVar5[5] = 0;
    }
    *(undefined4 **)(param_1 + 0xc) = puVar5;
    local_8 = 0;
    if (*(short *)(param_1 + 0x34) != 0) {
      do {
        uVar7 = local_8 & 0xffff;
        if ((uVar7 < *(uint *)(param_1 + 0x34)) &&
           (uVar6 = (ushort)uVar7,
           uVar6 < *(ushort *)(param_1 + 0x42) || uVar6 == *(ushort *)(param_1 + 0x42))) {
          bVar8 = uVar6 == 0xffff;
          if (!bVar8) {
            bVar8 = *(ushort *)(*(int *)(param_1 + 0x30) + uVar7 * 0x10) == uVar6;
          }
          if (!bVar8) {
            iVar1 = *(int *)(*(int *)(param_1 + 0x30) + 0xc + uVar7 * 0x10);
            iVar2 = *(int *)(iVar1 + 8);
            if (iVar4 < iVar2) {
LAB_00412b33:
              if (iVar2 < iVar3) {
                iVar3 = iVar2;
              }
            }
            else if (*(int *)(iVar1 + 0xc) == iVar4 || *(int *)(iVar1 + 0xc) < iVar4) {
              if (iVar4 < iVar2) goto LAB_00412b33;
            }
            else {
              if (*(int *)(iVar1 + 0xc) < iVar3) {
                iVar3 = *(int *)(iVar1 + 0xc);
              }
              FUN_00411190(*(void **)(param_1 + 0xc),iVar1);
            }
          }
        }
        local_8 = local_8 + 1;
      } while ((int)local_8 < (int)(uint)*(ushort *)(param_1 + 0x34));
    }
    *(int *)(param_1 + 4) = iVar3;
  }
  return;
}



undefined4 * __fastcall FUN_00412b50(undefined4 *param_1)

{
  FUN_0040c450(param_1);
  *param_1 = fixapi2_impl::CFixClientSocket::vftable;
  FUN_004221a0(param_1 + 0x3f,0,0,0);
  *(undefined *)(param_1 + 0x59) = 0;
  *(undefined *)(param_1 + 0x4e) = 0;
  return param_1;
}



void __fastcall FUN_00412b90(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixClientSocket::vftable;
  if (-1 < (int)param_1[0x41]) {
    if (param_1[0x3f] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0x3f]);
      param_1[0x3f] = 0;
    }
    param_1[0x40] = 0;
  }
  FUN_0040c4a0(param_1);
  return;
}



undefined4 * __thiscall FUN_00412be0(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixClientSocket::vftable;
  if (-1 < *(int *)((int)this + 0x104)) {
    if (*(int *)((int)this + 0xfc) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)((int)this + 0xfc));
      *(undefined4 *)((int)this + 0xfc) = 0;
    }
    *(undefined4 *)((int)this + 0x100) = 0;
  }
  FUN_0040c4a0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



uint __fastcall FUN_00412c40(int param_1)

{
  int iVar1;
  uint3 uVar2;
  
  iVar1 = *(int *)(param_1 + 0x68);
  uVar2 = (uint3)((uint)iVar1 >> 8);
  if (iVar1 == 3) {
    return CONCAT31(uVar2,1);
  }
  if (iVar1 != 4) {
    return (uint)uVar2 << 8;
  }
  return (uint)(*(char *)(param_1 + 0x164) == '\0');
}



void __fastcall FUN_00412c60(int param_1)

{
  FUN_0040c740(param_1);
  *(undefined *)(param_1 + 0x164) = 0;
  *(undefined *)(param_1 + 0x138) = 0;
  *(undefined4 *)(param_1 + 0x15c) = 0;
  *(undefined4 *)(param_1 + 0x160) = 0;
  return;
}



void __thiscall FUN_00412c90(void *this,int param_1,int param_2)

{
  int iVar1;
  
  if ((*(char *)((int)this + 0x138) != '\0') && (iVar1 = 0, 0 < param_2)) {
    do {
      *(byte *)(iVar1 + param_1) =
           *(byte *)(iVar1 + param_1) ^ *(byte *)(*(int *)((int)this + 0x15c) + 0x139 + (int)this);
      iVar1 = iVar1 + 1;
      *(uint *)((int)this + 0x15c) = *(int *)((int)this + 0x15c) + 1U & 0x1f;
    } while (iVar1 < param_2);
  }
  return;
}



void __thiscall FUN_00412ce0(void *this,int param_1,int param_2)

{
  int iVar1;
  
  if ((*(char *)((int)this + 0x138) != '\0') && (iVar1 = 0, 0 < param_2)) {
    do {
      *(byte *)(iVar1 + param_1) =
           *(byte *)(iVar1 + param_1) ^ *(byte *)(*(int *)((int)this + 0x160) + 0x139 + (int)this);
      iVar1 = iVar1 + 1;
      *(uint *)((int)this + 0x160) = *(int *)((int)this + 0x160) + 1U & 0x1f;
    } while (iVar1 < param_2);
  }
  return;
}



undefined __fastcall FUN_00412d30(int param_1)

{
  return *(undefined *)(param_1 + 0x164);
}



int __fastcall FUN_00412d40(int param_1)

{
  char cVar1;
  undefined *puVar2;
  uint uVar3;
  byte *pbVar4;
  int *piVar5;
  size_t _Size;
  int *piVar6;
  char *pcVar7;
  int local_12c [8];
  undefined local_10c;
  char acStack174 [2];
  undefined4 local_ac;
  int local_2c;
  int local_28;
  int local_24;
  byte *local_20;
  byte *local_1c;
  int local_18;
  uint local_14;
  uint local_10;
  uint local_c;
  char local_5;
  
  local_18 = *(int *)(param_1 + 0x40);
  local_1c = (byte *)(*(int *)(param_1 + 0x44) - local_18);
  local_24 = param_1;
  if (*(char *)(param_1 + 0x164) == '\0') {
    if (1 < (int)local_1c) {
      cVar1 = FUN_00422510((void *)(param_1 + 0x34),1);
      if (cVar1 == '\0') {
        local_5 = '\0';
      }
      else {
        local_5 = *(char *)((*(int *)(param_1 + 0x34) - *(int *)(param_1 + 0x54)) +
                           *(int *)(param_1 + 0x40));
        *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 1;
      }
      cVar1 = FUN_00422510((void *)(param_1 + 0x34),1);
      if (cVar1 == '\0') {
        cVar1 = '\0';
      }
      else {
        cVar1 = *(char *)((*(int *)(param_1 + 0x34) - *(int *)(param_1 + 0x54)) +
                         *(int *)(param_1 + 0x40));
        *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 1;
      }
      uVar3 = (int)cVar1 << 8 | (int)local_5;
      if ((int)(uVar3 + 2) <= (int)local_1c) {
        FUN_00422800((void *)(param_1 + 0x34),acStack174 + 2,uVar3);
        acStack174[uVar3 + 2] = '\0';
        puVar2 = FUN_0041bc20();
        FUN_0041bcd0((byte *)(acStack174 + 2),uVar3,(int)(uVar3 + ((int)uVar3 >> 0x1f & 3U)) >> 2,
                     (int)puVar2);
        cVar1 = acStack174[uVar3];
        *(char *)(param_1 + 300) = (char)(((int)acStack174[uVar3 + 1] + (int)(char)local_ac) % 0xff)
        ;
        _Size = 0x20;
        *(char *)(param_1 + 0x12d) = (char)(((int)cVar1 + (int)local_ac._1_1_) % 0xff);
        puVar2 = FUN_0041bc20();
        FID_conflict__memcpy(local_12c,puVar2,_Size);
        local_10c = 0;
        piVar6 = local_12c;
        piVar5 = (int *)(acStack174 + 2);
        puVar2 = FUN_0041bc20();
        FUN_0041baf0((uint *)(param_1 + 0x139),puVar2,piVar5,piVar6);
        *(undefined *)(param_1 + 0x138) = 1;
        *(undefined4 *)(param_1 + 0x15c) = 0;
        *(undefined4 *)(param_1 + 0x160) = 0;
        *(undefined *)(param_1 + 0x164) = 1;
        return *(int *)(param_1 + 0x40) - local_18;
      }
      FUN_00423340((void *)(param_1 + 0x34),0,local_18);
    }
    return 0;
  }
  if (local_18 < *(int *)(param_1 + 0x44)) {
    while( true ) {
      param_1 = local_24;
      local_28 = *(int *)(local_24 + 0x40);
      local_2c = *(int *)(local_24 + 0x44) - local_28;
      if (local_2c < 8) break;
      piVar6 = (int *)(local_24 + 0x34);
      cVar1 = FUN_00422510(piVar6,1);
      if (cVar1 == '\0') {
        local_5 = '\0';
      }
      else {
        local_5 = *(char *)((*piVar6 - *(int *)(param_1 + 0x54)) + *(int *)(param_1 + 0x40));
        *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 1;
      }
      cVar1 = FUN_00422510(piVar6,1);
      if (cVar1 == '\0') {
        cVar1 = '\0';
      }
      else {
        cVar1 = *(char *)((*(int *)(param_1 + 0x40) - *(int *)(param_1 + 0x54)) + *piVar6);
        *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 1;
      }
      if ((local_5 != *(char *)(param_1 + 300)) || (cVar1 != *(char *)(param_1 + 0x12d))) {
        pcVar7 = "Client Failed to find packet headers";
LAB_00413174:
        FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)pcVar7);
        break;
      }
      if ((*(byte *)(param_1 + 0x49) & 1) == 0) {
        cVar1 = FUN_00422510(piVar6,2);
        if (cVar1 == '\0') {
LAB_00412fb5:
          local_10 = 0;
        }
        else if ((*(byte *)(param_1 + 0x60) & 1) == 0) {
          local_10 = (uint)*(ushort *)
                            ((*piVar6 - *(int *)(param_1 + 0x54)) + *(int *)(param_1 + 0x40));
          *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 2;
        }
        else {
          FUN_0041eb00((void *)(param_1 + 0x60),&local_10,
                       (void *)((*piVar6 - *(int *)(param_1 + 0x54)) + *(int *)(param_1 + 0x40)),1);
          *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 2;
        }
      }
      else {
        local_c = 0x80;
        uVar3 = FUN_004224a0(piVar6,0,(int *)&local_c);
        if ((char)uVar3 == '\0') goto LAB_00412fb5;
        pbVar4 = (byte *)((*piVar6 - *(int *)(param_1 + 0x54)) + *(int *)(param_1 + 0x40));
        local_20 = pbVar4;
        local_10 = FUN_0042819d(pbVar4,&local_20,10);
        local_10 = local_10 & 0xffff;
        if ((int)local_20 - (int)pbVar4 != 0) {
          *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + ((int)local_20 - (int)pbVar4);
        }
      }
      if ((*(byte *)(param_1 + 0x49) & 1) == 0) {
        cVar1 = FUN_00422510(piVar6,2);
        if (cVar1 == '\0') {
LAB_0041304c:
          local_14 = 0;
        }
        else if ((*(byte *)(param_1 + 0x60) & 1) == 0) {
          local_14 = (uint)*(ushort *)
                            ((*piVar6 - *(int *)(param_1 + 0x54)) + *(int *)(param_1 + 0x40));
          *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 2;
        }
        else {
          FUN_0041eb00((void *)(param_1 + 0x60),&local_14,
                       (void *)((*piVar6 - *(int *)(param_1 + 0x54)) + *(int *)(param_1 + 0x40)),1);
          *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 2;
        }
      }
      else {
        local_c = 0x80;
        uVar3 = FUN_004224a0(piVar6,0,(int *)&local_c);
        if ((char)uVar3 == '\0') goto LAB_0041304c;
        pbVar4 = (byte *)((*piVar6 - *(int *)(param_1 + 0x54)) + *(int *)(param_1 + 0x40));
        local_1c = pbVar4;
        local_14 = FUN_0042819d(pbVar4,&local_1c,10);
        local_14 = local_14 & 0xffff;
        if ((int)local_1c - (int)pbVar4 != 0) {
          *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + ((int)local_1c - (int)pbVar4);
        }
      }
      local_c = local_14 & 0xffff;
      if (local_2c + -8 < (int)local_c) {
        FUN_00423340((void *)(param_1 + 0x34),0,local_28);
        return *(int *)(param_1 + 0x40) - local_18;
      }
      (**(code **)(**(int **)(param_1 + 100) + 8))
                (local_24,local_10 & 0xffff,*(int *)(param_1 + 0x40) + *piVar6,local_c);
      FUN_00423340(piVar6,1,local_c);
      FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Client Read packet %d of size %d handled %d");
      cVar1 = FUN_00422510(piVar6,1);
      if (cVar1 == '\0') {
        local_5 = '\0';
      }
      else {
        local_5 = *(char *)((*piVar6 - *(int *)(param_1 + 0x54)) + *(int *)(param_1 + 0x40));
        *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 1;
      }
      cVar1 = FUN_00422510(piVar6,1);
      if (cVar1 == '\0') {
        cVar1 = '\0';
      }
      else {
        cVar1 = *(char *)((*piVar6 - *(int *)(param_1 + 0x54)) + *(int *)(param_1 + 0x40));
        *(int *)(param_1 + 0x40) = *(int *)(param_1 + 0x40) + 1;
      }
      if ((local_5 != *(char *)(local_24 + 300)) || (cVar1 != *(char *)(local_24 + 0x12d))) {
        pcVar7 = "Client Failed to find packet footer";
        param_1 = local_24;
        goto LAB_00413174;
      }
      if (*(int *)(local_24 + 0x44) <= *(int *)(local_24 + 0x40)) {
        return *(int *)(local_24 + 0x40) - local_18;
      }
    }
  }
  return *(int *)(param_1 + 0x40) - local_18;
}



void __thiscall FUN_004131a0(void *this,int *param_1)

{
  void **this_00;
  undefined uVar1;
  ushort uVar2;
  undefined2 uVar3;
  int iVar4;
  undefined4 uVar5;
  void **ppvVar6;
  
  iVar4 = (**(code **)(*param_1 + 4))();
  this_00 = (void **)((int)this + 0xfc);
  uVar2 = *(ushort *)(iVar4 + 0x10);
  *(undefined4 *)((int)this + 0x108) = 0;
  *(undefined4 *)((int)this + 0x10c) = 0;
  *(undefined *)((int)this + 0x110) = 0;
  *(undefined4 *)((int)this + 0x11c) = 0;
  *(undefined4 *)((int)this + 0x118) = 0xffffffff;
  FUN_004223b0(this_00,0);
  FUN_00422700(this_00,uVar2 + 8);
  uVar1 = *(undefined *)((int)this + 300);
  if ((*(byte *)((int)this + 0x111) & 1) == 0) {
    uVar5 = FUN_00422570(this_00,1);
    if ((char)uVar5 != '\0') {
      *(undefined *)((*(int *)((int)this + 0x10c) - *(int *)((int)this + 0x11c)) + (int)*this_00) =
           uVar1;
      *(int *)((int)this + 0x10c) = *(int *)((int)this + 0x10c) + 1;
      FUN_004223b0(this_00,*(int *)((int)this + 0x10c));
    }
  }
  else {
    FUN_004230e0(this_00,&DAT_0043d458);
  }
  uVar1 = *(undefined *)((int)this + 0x12d);
  if ((*(byte *)((int)this + 0x111) & 1) == 0) {
    uVar5 = FUN_00422570(this_00,1);
    if ((char)uVar5 != '\0') {
      *(undefined *)((*(int *)((int)this + 0x10c) - *(int *)((int)this + 0x11c)) + (int)*this_00) =
           uVar1;
      *(int *)((int)this + 0x10c) = *(int *)((int)this + 0x10c) + 1;
      FUN_004223b0(this_00,*(int *)((int)this + 0x10c));
    }
  }
  else {
    FUN_004230e0(this_00,&DAT_0043d458);
  }
  uVar3 = (**(code **)*param_1)();
  if ((*(byte *)((int)this + 0x111) & 1) == 0) {
    FUN_0040edf0(this_00,uVar3);
  }
  else {
    FUN_004230e0(this_00,&DAT_0043d458);
  }
  if ((*(byte *)((int)this + 0x111) & 1) == 0) {
    FUN_0040edf0(this_00,uVar2);
  }
  else {
    FUN_004230e0(this_00,&DAT_0043d458);
  }
  if (uVar2 != 0) {
    ppvVar6 = (void **)(**(code **)(*param_1 + 4))();
    FUN_00423140(this_00,*ppvVar6,(uint)uVar2);
  }
  uVar1 = *(undefined *)((int)this + 300);
  if ((*(byte *)((int)this + 0x111) & 1) == 0) {
    uVar5 = FUN_00422570(this_00,1);
    if ((char)uVar5 != '\0') {
      *(undefined *)((*(int *)((int)this + 0x10c) - *(int *)((int)this + 0x11c)) + (int)*this_00) =
           uVar1;
      *(int *)((int)this + 0x10c) = *(int *)((int)this + 0x10c) + 1;
      FUN_004223b0(this_00,*(int *)((int)this + 0x10c));
    }
  }
  else {
    FUN_004230e0(this_00,&DAT_0043d458);
  }
  uVar1 = *(undefined *)((int)this + 0x12d);
  if ((*(byte *)((int)this + 0x111) & 1) == 0) {
    uVar5 = FUN_00422570(this_00,1);
    if ((char)uVar5 != '\0') {
      *(undefined *)((*(int *)((int)this + 0x10c) - *(int *)((int)this + 0x11c)) + (int)*this_00) =
           uVar1;
      *(int *)((int)this + 0x10c) = *(int *)((int)this + 0x10c) + 1;
      FUN_004223b0(this_00,*(int *)((int)this + 0x10c));
    }
  }
  else {
    FUN_004230e0(this_00,&DAT_0043d458);
  }
  FUN_0040c950(this,*this_00,*(size_t *)((int)this + 0x10c));
  return;
}



undefined4 * __fastcall FUN_004133a0(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixBasePacket::vftable;
  FUN_004221a0(param_1 + 2,0,0,0);
  param_1[1] = 0;
  return param_1;
}



void __fastcall FUN_004133d0(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixBasePacket::vftable;
  param_1[5] = 0;
  param_1[6] = 0;
  param_1[10] = 0;
  param_1[9] = 0;
  *(undefined *)(param_1 + 7) = 0;
  if (-1 < (int)param_1[4]) {
    if (param_1[2] != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[2]);
      param_1[2] = 0;
    }
    param_1[3] = 0;
    if (-1 < (int)param_1[4]) {
      if (param_1[2] != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[2]);
        param_1[2] = 0;
      }
      param_1[3] = 0;
    }
  }
  return;
}



undefined4 * __thiscall FUN_00413450(void *this,byte param_1)

{
  FUN_004133d0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



void __fastcall FUN_00413480(int param_1)

{
  FUN_00423340((void *)(param_1 + 8),0,0);
  return;
}



int __fastcall FUN_00413490(int param_1)

{
  return param_1 + 8;
}



void __thiscall FUN_004134a0(void *this,undefined4 param_1,void *param_2,size_t param_3)

{
  void *this_00;
  
  this_00 = (void *)((int)this + 8);
  *(undefined4 *)((int)this + 4) = param_1;
  FUN_00423340(this_00,0,0);
  FUN_004233a0(this_00,0,0);
  FUN_00422700(this_00,param_3);
  FUN_00423140(this_00,param_2,param_3);
  return;
}



void __thiscall FUN_004134e0(void *this,void *param_1,size_t param_2)

{
  FUN_0040f750((void *)((int)this + 8),param_1,param_2);
  return;
}



void __fastcall FUN_00413500(int param_1)

{
  FUN_0040f770((uint *)(param_1 + 8));
  return;
}



void __thiscall FUN_00413510(void *this,void *param_1,uint param_2)

{
  FUN_0040f810((void *)((int)this + 8),param_1,param_2);
  return;
}



void __thiscall FUN_00413530(void *this,int *param_1)

{
  FUN_0040f7c0((void *)((int)this + 8),param_1);
  return;
}



void __fastcall FUN_00413550(int param_1)

{
  FUN_0040f880((void *)(param_1 + 8));
  return;
}



ulonglong __fastcall FUN_00413560(int param_1)

{
  ulonglong uVar1;
  
  uVar1 = FUN_0040f8a0((int *)(param_1 + 8));
  return uVar1;
}



void __thiscall FUN_00413570(void *this,void *param_1)

{
  FUN_0040f8b0((void *)((int)this + 8),param_1);
  return;
}



void __fastcall FUN_00413590(int param_1)

{
  FUN_0040f8e0((void *)(param_1 + 8));
  return;
}



undefined8 __fastcall FUN_004135a0(int param_1)

{
  undefined8 uVar1;
  
  uVar1 = FUN_0040f900((void *)(param_1 + 8));
  return uVar1;
}



void __fastcall FUN_004135b0(int param_1)

{
  FUN_0040f920((void *)(param_1 + 8));
  return;
}



void __thiscall FUN_004135c0(void *this,void *param_1,size_t param_2)

{
  FUN_0040f980((void *)((int)this + 8),param_1,param_2);
  return;
}



void __thiscall FUN_004135e0(void *this,undefined4 param_1)

{
  FUN_0040f9a0((int *)((int)this + 8),(undefined)param_1);
  return;
}



void __thiscall FUN_00413600(void *this,int *param_1,size_t param_2,int param_3)

{
  FUN_0040fa00((void *)((int)this + 8),param_1,param_2,param_3);
  return;
}



void __thiscall FUN_00413620(void *this,int param_1,size_t param_2,int param_3)

{
  FUN_0040fa30((void *)((int)this + 8),param_1,param_2,param_3);
  return;
}



void __thiscall FUN_00413640(void *this,undefined4 param_1)

{
  FUN_0040fac0((void *)((int)this + 8),param_1);
  return;
}



void __thiscall FUN_00413660(void *this,char *param_1)

{
  FUN_0040faf0((void *)((int)this + 8),param_1);
  return;
}



void __thiscall FUN_00413680(void *this,undefined4 param_1)

{
  FUN_0040fb70((void *)((int)this + 8),param_1);
  return;
}



void __fastcall FUN_004136a0(int param_1,undefined param_2,undefined4 param_3,undefined4 param_4)

{
  FUN_0040fba0((void *)(param_1 + 8));
  return;
}



void __thiscall FUN_004136c0(void *this,undefined4 param_1)

{
  FUN_0040fbc0((void *)((int)this + 8),(undefined2)param_1);
  return;
}



undefined4 * __thiscall FUN_004136e0(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixClientPacket::vftable;
  FUN_004133d0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * FUN_00413710(void)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_00403c30(0x3c);
  if (puVar1 != (undefined4 *)0x0) {
    FUN_004133a0(puVar1);
    *puVar1 = fixapi2_impl::CFixClientPacket::vftable;
    puVar1[0xe] = 0;
    return puVar1;
  }
  return (undefined4 *)0x0;
}



undefined4 __fastcall FUN_00413740(int param_1)

{
  return *(undefined4 *)(param_1 + 0x38);
}



void __cdecl FUN_00413750(int *param_1)

{
  if (param_1 != (int *)0x0) {
    (**(code **)(*param_1 + 0x5c))(1);
  }
  return;
}



void __thiscall FUN_00413770(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 0x38) = param_1;
  return;
}



// WARNING: Function: __alloca_probe replaced with injection: alloca_probe

void __thiscall FUN_00413780(void *this,undefined4 param_1,undefined4 param_2,int param_3)

{
  int *piVar1;
  void *pvVar2;
  char cVar3;
  undefined4 uVar4;
  int iVar5;
  char local_1010 [4096];
  uint local_10;
  uint local_c;
  void *local_8;
  
  *(undefined4 *)((int)this + 0x1bd0) = param_1;
  local_8 = this;
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"============ NEW AUTH SESSION ============");
  piVar1 = (int *)((int)this + 0xf70);
  (**(code **)(*(int *)((int)this + 0xf70) + 4))();
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Attempting Steam Auth login to %s with SteamID %llu"
              );
  FUN_0041dfc0(local_1010,0xff,(byte *)"%s/Session/Start");
  uVar4 = (**(code **)**(undefined4 **)((int)this + 0x1c00))(3,local_1010);
  (**(code **)(**(int **)((int)this + 0x1c00) + 4))(uVar4,0,0);
  (**(code **)(*piVar1 + 4))();
  FUN_0041dfc0(local_1010,0xff,&DAT_0043d87c);
  (**(code **)(**(int **)((int)this + 0x1c00) + 0x10))(uVar4,"steamid",local_1010);
  FUN_0041df30(param_2,param_3,local_1010,0x1000);
  FUN_0041e440(local_1010);
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)"Steam Auth Ticket: %d : %s\n");
  (**(code **)(**(int **)((int)this + 0x1c00) + 0x10))(uVar4,"authkey",local_1010);
  FUN_004114a0();
  FUN_0041dfc0(local_1010,0xff,&DAT_0043d454);
  (**(code **)(**(int **)((int)this + 0x1c00) + 0x10))(uVar4,"version",local_1010);
  cVar3 = (**(code **)(**(int **)((int)this + 0x1c00) + 0x14))(uVar4,&local_10);
  pvVar2 = local_8;
  if (cVar3 == '\0') {
    (**(code **)(**(int **)((int)this + 0x1c00) + 0x38))(uVar4);
    (**(code **)(*piVar1 + 0x54))(0);
    (**(code **)(*piVar1 + 0x58))(0,0);
    return;
  }
  iVar5 = (int)local_8 + 0xeb8;
  if ((*(uint *)((int)local_8 + 0xec8) | *(uint *)((int)local_8 + 0xecc)) != 0) {
    SteamAPI_UnregisterCallResult
              (iVar5,*(uint *)((int)local_8 + 0xec8),*(uint *)((int)local_8 + 0xecc));
  }
  *(void **)((int)pvVar2 + 0xed0) = local_8;
  *(uint *)((int)pvVar2 + 0xec8) = local_10;
  *(uint *)((int)pvVar2 + 0xecc) = local_c;
  *(code **)((int)pvVar2 + 0xed8) = FUN_004098e0;
  *(undefined4 *)((int)pvVar2 + 0xedc) = 0;
  if ((local_10 | local_c) != 0) {
    SteamAPI_RegisterCallResult(iVar5,local_10,local_c);
  }
  return;
}



void __fastcall FUN_00413990(int *param_1)

{
  char cVar1;
  undefined4 uVar2;
  int iVar3;
  char local_410 [1024];
  uint local_10;
  uint local_c;
  undefined4 local_8;
  
  cVar1 = (**(code **)(*param_1 + 0xa8))();
  if (cVar1 == '\0') {
    iVar3 = param_1[0x672] + -1;
    if (-1 < iVar3) {
      do {
        (**(code **)(**(int **)(param_1[0x66f] + iVar3 * 4) + 0x14))(0xffffffff,"No Active Session")
        ;
        if (param_1[0x672] + -1 < iVar3) {
          iVar3 = param_1[0x672];
        }
        iVar3 = iVar3 + -1;
      } while (-1 < iVar3);
      return;
    }
  }
  else {
    FUN_0041dfc0(local_410,0xff,(byte *)"%s/Session/Check");
    uVar2 = (***(code ***)param_1[0x700])(3,local_410);
    local_8 = uVar2;
    (**(code **)(*(int *)param_1[0x700] + 4))(uVar2,0,0);
    (**(code **)(param_1[0x3dc] + 4))();
    FUN_0041dfc0(local_410,0xff,&DAT_0043d87c);
    (**(code **)(*(int *)param_1[0x700] + 0x10))(uVar2,"steamid",local_410);
    (**(code **)(param_1[0x3dc] + 0x7c))();
    FUN_0041dfc0(local_410,0xff,&DAT_0043d454);
    (**(code **)(*(int *)param_1[0x700] + 0x10))(uVar2,"session",local_410);
    FUN_004114a0();
    FUN_0041dfc0(local_410,0xff,&DAT_0043d454);
    (**(code **)(*(int *)param_1[0x700] + 0x10))(uVar2,"version",local_410);
    (**(code **)param_1[0x3dc])();
    FUN_0041dfc0(local_410,0xff,&DAT_0043d454);
    (**(code **)(*(int *)param_1[0x700] + 0x10))(uVar2,&DAT_0043d8c4,local_410);
    iVar3 = *(int *)param_1[0x700];
    uVar2 = (**(code **)(param_1[0x3dc] + 0x80))();
    (**(code **)(iVar3 + 0x10))(local_8,&DAT_0043d8cc,uVar2);
    uVar2 = local_8;
    cVar1 = (**(code **)(*(int *)param_1[0x700] + 0x14))(local_8,&local_10);
    if (cVar1 != '\0') {
      FUN_00413e30(param_1 + 0x3ae,local_10,local_c,param_1,FUN_004098e0,0);
      return;
    }
    (**(code **)(*(int *)param_1[0x700] + 0x38))(uVar2);
    (**(code **)(param_1[0x3dc] + 0x54))(0);
    (**(code **)(param_1[0x3dc] + 0x58))(0,0);
    iVar3 = param_1[0x672];
    while (iVar3 = iVar3 + -1, -1 < iVar3) {
      (**(code **)(**(int **)(param_1[0x66f] + iVar3 * 4) + 0x14))(0,"Service unavailable.");
      if (param_1[0x672] + -1 < iVar3) {
        iVar3 = param_1[0x672];
      }
    }
  }
  return;
}



void __fastcall FUN_00413bf0(int param_1)

{
  (**(code **)(*(int *)(param_1 + 0xf70) + 0x54))(0);
  FUN_0040fd20((void *)(param_1 + 0xf70),(int)&DAT_0043b3d2);
  return;
}



void __thiscall FUN_00413c20(void *this,undefined4 param_1)

{
  int *piVar1;
  
                    // WARNING: Load size is inaccurate
  piVar1 = (int *)(**(code **)(*this + 0x4c))(0x22);
  (**(code **)(*piVar1 + 0x48))(param_1);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar1);
  return;
}



void __thiscall FUN_00413c50(void *this,char *param_1,int param_2)

{
  FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Attempting login to %s");
  *(undefined4 *)((int)this + 0x18b0) = 0xffffffff;
  FUN_0041e380((int)this + 0x18b4,param_1);
  *(int *)((int)this + 0x19b4) = param_2;
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0xb8))();
  return;
}



void __fastcall FUN_00413cb0(int *param_1)

{
  int *piVar1;
  
  piVar1 = (int *)(**(code **)(*param_1 + 0x4c))(0x21);
  (**(code **)(*piVar1 + 0x48))(0);
  (**(code **)(*param_1 + 0x50))(piVar1);
  return;
}



void __fastcall FUN_00413ce0(int *param_1)

{
  int *piVar1;
  
  piVar1 = (int *)(**(code **)(*param_1 + 0x4c))(0xc);
  (**(code **)(*piVar1 + 0x48))(0);
  (**(code **)(*param_1 + 0x50))(piVar1);
  return;
}



void __thiscall FUN_00413d10(void *this,void *param_1)

{
  int *piVar1;
  int *piVar2;
  
                    // WARNING: Load size is inaccurate
  piVar1 = (int *)(**(code **)(*this + 0x4c))(0x10);
  piVar2 = (int *)(**(code **)(*piVar1 + 4))();
  FUN_00421110(param_1,piVar2);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar1);
  return;
}



void __thiscall FUN_00413d40(void *this,int param_1)

{
  undefined4 *puVar1;
  undefined local_c [8];
  
  FUN_0041e1d0((char *)((int)this + 0xb8),param_1,0xff);
  if (*(int *)((int)this + 0x1bd0) != 0) {
    (**(code **)(**(int **)((int)this + 0x1bd8) + 0x40))(*(int *)((int)this + 0x1bd0));
  }
  *(undefined4 *)((int)this + 0x1bd0) = 0;
  (**(code **)(*(int *)((int)this + 0xf70) + 0x54))(0);
  puVar1 = (undefined4 *)(**(code **)(**(int **)((int)this + 0x1bd8) + 8))(local_c);
  (**(code **)(*(int *)((int)this + 0xf70) + 0x58))(*puVar1,puVar1[1]);
  FUN_0040fd20((void *)((int)this + 0xf70),(int)&DAT_0043b3d2);
  FUN_004082b0(this,FUN_00413780,0,0);
  return;
}



undefined4 __fastcall FUN_00413de0(int param_1)

{
  uint uVar1;
  char *pcVar2;
  longlong lVar3;
  
  uVar1 = (***(code ***)(param_1 + 0xf70))();
  if (uVar1 != 0) {
    lVar3 = (**(code **)(*(int *)(param_1 + 0xf70) + 4))();
    uVar1 = (uint)lVar3 | (uint)((ulonglong)lVar3 >> 0x20);
    if (lVar3 != 0) {
      pcVar2 = (char *)(**(code **)(*(int *)(param_1 + 0xf70) + 0x80))();
      uVar1 = FUN_0041e440(pcVar2);
      if (0 < (int)uVar1) {
        return CONCAT31((int3)(uVar1 >> 8),1);
      }
    }
  }
  return uVar1 & 0xffffff00;
}



void __thiscall
FUN_00413e30(void *this,uint param_1,uint param_2,undefined4 param_3,undefined4 param_4,
            undefined4 param_5)

{
  if ((*(uint *)((int)this + 0x10) | *(uint *)((int)this + 0x14)) != 0) {
    SteamAPI_UnregisterCallResult(this,*(uint *)((int)this + 0x10),*(uint *)((int)this + 0x14));
  }
  *(undefined4 *)((int)this + 0x18) = param_3;
  *(undefined4 *)((int)this + 0x20) = param_4;
  *(undefined4 *)((int)this + 0x24) = param_5;
  *(uint *)((int)this + 0x10) = param_1;
  *(uint *)((int)this + 0x14) = param_2;
  if ((param_1 | param_2) != 0) {
    SteamAPI_RegisterCallResult(this,param_1,param_2);
  }
  return;
}



undefined __fastcall FUN_00413e90(int *param_1)

{
  int *piVar1;
  int iVar2;
  char cVar3;
  int *piVar4;
  undefined4 uVar5;
  
  if (5 < param_1[0x3da]) {
    return 0;
  }
  param_1[0x3da] = param_1[0x3da] + 1;
  if (param_1[0x62c] == -1) {
    uVar5 = 1;
  }
  else {
    uVar5 = 3;
  }
  (**(code **)(*param_1 + 0x108))(uVar5);
  iVar2 = param_1[0x6d8];
  while (0 < iVar2) {
    piVar1 = (int *)param_1[0x6d5];
    param_1[0x6da] = *piVar1;
    if (0 < param_1[0x6d8] + -1) {
      FID_conflict__memcpy(piVar1,piVar1 + 1,(param_1[0x6d8] + -1) * 4);
    }
    param_1[0x6d8] = param_1[0x6d8] + -1;
    piVar1 = (int *)param_1[0x6da];
    (**(code **)(*param_1 + 0x10c))(piVar1);
    FUN_00413750(piVar1);
    iVar2 = param_1[0x6d8];
  }
  (**(code **)(*param_1 + 0x114))();
  *(undefined *)(param_1 + 0x6ce) = 0;
  (**(code **)(param_1[0x674] + 0x10))();
  if (*(char *)(param_1 + 0x70a) != '\0') {
    if (param_1[0x6f5] != 0) {
      (**(code **)(*(int *)param_1[0x6f6] + 0x40))(param_1[0x6f5]);
    }
    param_1[0x6f5] = 0;
  }
  cVar3 = (**(code **)(param_1[0x674] + 8))(param_1 + 0x62d,param_1[0x66d]);
  *(char *)(param_1 + 0x6ce) = cVar3;
  if (cVar3 != '\0') {
    piVar4 = (int *)(**(code **)(*param_1 + 0x4c))(1);
    iVar2 = *piVar4;
    uVar5 = (**(code **)(*param_1 + 0xc))();
    (**(code **)(iVar2 + 0x48))(uVar5);
    iVar2 = *piVar4;
    piVar1 = param_1 + 0x3dc;
    uVar5 = (**(code **)*piVar1)();
    (**(code **)(iVar2 + 0x48))(uVar5);
    iVar2 = *piVar4;
    uVar5 = (**(code **)(*piVar1 + 0x7c))();
    (**(code **)(iVar2 + 0x48))(uVar5);
    iVar2 = *piVar4;
    uVar5 = (**(code **)(*piVar1 + 0x80))();
    (**(code **)(iVar2 + 0x58))(uVar5);
    (**(code **)(*param_1 + 0x50))(piVar4);
    return 1;
  }
  return 0;
}



void __thiscall
FUN_00414010(void *this,int param_1,undefined4 param_2,undefined4 param_3,int *param_4)

{
  *(int *)((int)this + 0x1bd4) = param_1;
  (**(code **)(*param_4 + 0x38))(param_2,param_3,0);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(param_4);
  return;
}



void __thiscall FUN_00414040(void *this,void *param_1)

{
  int *piVar1;
  
                    // WARNING: Load size is inaccurate
  piVar1 = (int *)(**(code **)(*this + 0x4c))(0x5b);
  (**(code **)(*piVar1 + 0x40))(0);
  FUN_00414530(piVar1,param_1);
  if (*(char *)((int)this + 0x1c28) != '\0') {
    if (*(int *)((int)this + 0x1bd4) != 0) {
      (**(code **)(**(int **)((int)this + 0x1bd8) + 0x40))(*(int *)((int)this + 0x1bd4));
    }
    *(undefined4 *)((int)this + 0x1bd4) = 0;
    FUN_004082b0(this,FUN_00414010,0,piVar1);
    return;
  }
  (**(code **)(*piVar1 + 0x38))(0,0,0);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar1);
  return;
}



void __thiscall FUN_004140c0(void *this,undefined4 param_1,undefined4 param_2)

{
  int *piVar1;
  
                    // WARNING: Load size is inaccurate
  piVar1 = (int *)(**(code **)(*this + 0x4c))(0x60);
  (**(code **)(*piVar1 + 0x48))(0);
  (**(code **)(*piVar1 + 0x40))(param_1);
  (**(code **)(*piVar1 + 0x58))(param_2);
  if (*(char *)((int)this + 0x1c28) != '\0') {
    if (*(int *)((int)this + 0x1bd4) != 0) {
      (**(code **)(**(int **)((int)this + 0x1bd8) + 0x40))(*(int *)((int)this + 0x1bd4));
    }
    *(undefined4 *)((int)this + 0x1bd4) = 0;
    FUN_004082b0(this,FUN_00414010,0,piVar1);
    return;
  }
  (**(code **)(*piVar1 + 0x38))(0,0,0);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar1);
  return;
}



void __fastcall FUN_00414150(int *param_1)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  
  piVar2 = (int *)(**(code **)(*param_1 + 0x4c))(0x61);
  iVar1 = *piVar2;
  uVar3 = FUN_0040fca0((int)(param_1 + 0x3dc));
  (**(code **)(iVar1 + 0x40))(uVar3);
  iVar1 = *piVar2;
  uVar3 = (**(code **)param_1[0x3dc])();
  (**(code **)(iVar1 + 0x48))(uVar3);
  (**(code **)(*param_1 + 0x50))(piVar2);
  return;
}



void __fastcall FUN_004141a0(int *param_1)

{
  undefined4 uVar1;
  
  uVar1 = (**(code **)(*param_1 + 0x4c))(0x47);
  (**(code **)(*param_1 + 0x50))(uVar1);
  return;
}



void __thiscall FUN_004141c0(void *this,void *param_1)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  int *piVar4;
  
                    // WARNING: Load size is inaccurate
  piVar2 = (int *)(**(code **)(*this + 0x4c))(0x5e);
  iVar1 = *piVar2;
  uVar3 = FUN_0040fca0((int)this + 0xf70);
  (**(code **)(iVar1 + 0x40))(uVar3);
  piVar4 = (int *)(**(code **)(*piVar2 + 4))();
  FUN_00421110(param_1,piVar4);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar2);
  return;
}



void __thiscall
FUN_00414210(void *this,undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
            undefined4 param_5,undefined4 param_6,undefined4 param_7)

{
  int *piVar1;
  
                    // WARNING: Load size is inaccurate
  piVar1 = (int *)(**(code **)(*this + 0x4c))(0x34);
  (**(code **)(*piVar1 + 0x44))(param_1);
  (**(code **)(*piVar1 + 0x48))(param_5);
  (**(code **)(*piVar1 + 0x40))(param_2);
  (**(code **)(*piVar1 + 0x48))(param_3);
  (**(code **)(*piVar1 + 0x48))(param_4);
  (**(code **)(*piVar1 + 0x38))(param_6,param_7,0);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar1);
  return;
}



void __thiscall FUN_00414270(void *this,int *param_1)

{
  int *piVar1;
  int iVar2;
  
                    // WARNING: Load size is inaccurate
  piVar1 = (int *)(**(code **)(*this + 0x4c))(0x46);
  (**(code **)(*piVar1 + 0x48))(0);
  (**(code **)(*piVar1 + 0x44))(*(undefined2 *)(param_1 + 3));
  iVar2 = 0;
  if (0 < param_1[3]) {
    do {
      (**(code **)(*piVar1 + 0x44))(*(undefined2 *)(*param_1 + iVar2 * 4));
      iVar2 = iVar2 + 1;
    } while (iVar2 < param_1[3]);
  }
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar1);
  return;
}



void __fastcall FUN_004142d0(int *param_1)

{
  int *piVar1;
  
  piVar1 = (int *)(**(code **)(*param_1 + 0x4c))(0x46);
  (**(code **)(*piVar1 + 0x48))(0);
  (**(code **)(*piVar1 + 0x44))(0);
  (**(code **)(*param_1 + 0x50))(piVar1);
  return;
}



void __fastcall FUN_00414300(int *param_1)

{
  undefined4 uVar1;
  
  uVar1 = (**(code **)(*param_1 + 0x4c))(0x32);
  (**(code **)(*param_1 + 0x50))(uVar1);
  uVar1 = (**(code **)(*param_1 + 0x4c))(0x33);
  (**(code **)(*param_1 + 0x50))(uVar1);
  return;
}



void __thiscall FUN_00414330(void *this,undefined4 param_1)

{
  int *piVar1;
  
                    // WARNING: Load size is inaccurate
  piVar1 = (int *)(**(code **)(*this + 0x4c))(0x36);
  (**(code **)(*piVar1 + 0x40))(1);
  (**(code **)(*piVar1 + 0x44))(param_1);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar1);
  return;
}



void __fastcall FUN_00414370(int *param_1)

{
  int *piVar1;
  
  piVar1 = (int *)(**(code **)(*param_1 + 0x4c))(0x48);
  (**(code **)(*piVar1 + 0x48))(0);
  (**(code **)(*piVar1 + 0x48))(0);
  (**(code **)(*param_1 + 0x50))(piVar1);
  return;
}



void __fastcall FUN_004143a0(int *param_1)

{
  int *piVar1;
  
  piVar1 = (int *)(**(code **)(*param_1 + 0x4c))(0x5a);
  (**(code **)(*piVar1 + 0x40))(0);
  (**(code **)(*param_1 + 0x50))(piVar1);
  return;
}



void __thiscall FUN_004143d0(void *this,undefined param_1,int param_2,int *param_3)

{
  void *this_00;
  
  this_00 = (void *)(**(code **)(*(int *)((int)this + 0xf70) + 0x30))();
  FUN_0040e7f0(this_00,param_1,param_2,param_3);
  return;
}



void __thiscall FUN_00414400(void *this,undefined4 param_1)

{
  int *piVar1;
  
                    // WARNING: Load size is inaccurate
  piVar1 = (int *)(**(code **)(*this + 0x4c))(100);
  (**(code **)(*piVar1 + 0x48))(0);
  (**(code **)(*piVar1 + 0x40))(param_1);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar1);
  return;
}



void __thiscall FUN_00414440(void *this,undefined4 param_1)

{
  int *piVar1;
  
                    // WARNING: Load size is inaccurate
  piVar1 = (int *)(**(code **)(*this + 0x4c))(0x70);
  (**(code **)(*piVar1 + 0x40))(param_1);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar1);
  return;
}



void __fastcall FUN_00414470(int *param_1)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  
  piVar2 = (int *)(**(code **)(*param_1 + 0x4c))(0x65);
  iVar1 = *piVar2;
  uVar3 = (**(code **)param_1[0x3dc])();
  (**(code **)(iVar1 + 0x48))(uVar3);
  (**(code **)(*piVar2 + 0x40))(0);
  (**(code **)(*param_1 + 0x50))(piVar2);
  return;
}



void __fastcall FUN_004144b0(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = (**(code **)(param_1[0x3dc] + 0x20))();
  if (iVar1 == 6) {
    piVar2 = (int *)(**(code **)(*param_1 + 0x4c))(100);
    (**(code **)(*piVar2 + 0x48))(0);
    (**(code **)(*piVar2 + 0x40))(3);
    (**(code **)(*param_1 + 0x50))(piVar2);
    return;
  }
  iVar1 = (**(code **)(param_1[0x3dc] + 0x20))();
  if (iVar1 == 3) {
    piVar2 = (int *)(**(code **)(*param_1 + 0x4c))(100);
    (**(code **)(*piVar2 + 0x48))(0);
    (**(code **)(*piVar2 + 0x40))(6);
    (**(code **)(*param_1 + 0x50))(piVar2);
  }
  return;
}



void FUN_00414530(int *param_1,void *param_2)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  ulonglong uVar4;
  
  uVar2 = FUN_0041f130(param_2,"mode",0);
  uVar3 = FUN_0041f250(param_2,"roomname",(uint)&DAT_0043b3d2);
  (**(code **)(*param_1 + 0x58))(uVar3);
  iVar1 = *param_1;
  uVar3 = FUN_0041f130(param_2,"minplayers",0);
  (**(code **)(iVar1 + 0x40))(uVar3);
  iVar1 = *param_1;
  uVar3 = FUN_0041f130(param_2,"maxplayers",0);
  (**(code **)(iVar1 + 0x40))(uVar3);
  iVar1 = *param_1;
  uVar3 = FUN_0041f250(param_2,"password",(uint)&DAT_0043b3d2);
  (**(code **)(iVar1 + 0x58))(uVar3);
  iVar1 = *param_1;
  uVar4 = FUN_0041f380(param_2,"mapid",0);
  (**(code **)(iVar1 + 0x54))(uVar4);
  (**(code **)(*param_1 + 0x40))(uVar2);
  iVar1 = *param_1;
  uVar3 = FUN_0041f130(param_2,"ff",0);
  (**(code **)(iVar1 + 0x40))(uVar3);
  iVar1 = *param_1;
  uVar3 = FUN_0041f130(param_2,"sk",0);
  (**(code **)(iVar1 + 0x40))(uVar3);
  iVar1 = *param_1;
  uVar3 = FUN_0041f130(param_2,"WeaponFilters",0);
  (**(code **)(iVar1 + 0x48))(uVar3);
  iVar1 = *param_1;
  uVar3 = FUN_0041f130(param_2,"cyclemaps",0);
  (**(code **)(iVar1 + 0x40))(uVar3);
  iVar1 = *param_1;
  uVar3 = FUN_0041f130(param_2,"bots",0);
  (**(code **)(iVar1 + 0x40))(uVar3);
  iVar1 = *param_1;
  uVar3 = FUN_0041f130(param_2,"flags",0);
  (**(code **)(iVar1 + 0x48))(uVar3);
  if (uVar2 - 1 < 2) {
    iVar1 = *param_1;
    uVar2 = FUN_0041f130(param_2,"tdm_tl",0);
    (**(code **)(iVar1 + 0x44))(uVar2);
    iVar1 = *param_1;
    uVar2 = FUN_0041f130(param_2,"tdm_kl",0);
    (**(code **)(iVar1 + 0x44))(uVar2);
  }
  return;
}



void __thiscall FUN_004146a0(void *this,undefined4 param_1,int *param_2)

{
  undefined4 uVar1;
  int iVar2;
  undefined local_448 [1024];
  undefined local_48 [67];
  char local_5;
  
  (**(code **)(*param_2 + 8))();
  local_5 = (**(code **)(*param_2 + 0x18))();
  uVar1 = (**(code **)(*param_2 + 0x20))();
  (**(code **)(*param_2 + 0x30))(local_48,0x40);
  (**(code **)(*param_2 + 0x30))(local_448,0x400);
  if (local_5 == '\x01') {
    iVar2 = *(int *)((int)this + 0x19c8) + -1;
    if (-1 < iVar2) {
      do {
        (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar2 * 4) + 0x68))(local_448);
        if (*(int *)((int)this + 0x19c8) + -1 < iVar2) {
          iVar2 = *(int *)((int)this + 0x19c8);
        }
        iVar2 = iVar2 + -1;
      } while (-1 < iVar2);
      (**(code **)(*param_2 + 0xc))();
      return;
    }
  }
  else if (local_5 == '\x02') {
    iVar2 = *(int *)((int)this + 0x19c8) + -1;
    if (-1 < iVar2) {
      do {
        (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar2 * 4) + 0x6c))
                  (uVar1,local_48,local_448);
        if (*(int *)((int)this + 0x19c8) + -1 < iVar2) {
          iVar2 = *(int *)((int)this + 0x19c8);
        }
        iVar2 = iVar2 + -1;
      } while (-1 < iVar2);
      (**(code **)(*param_2 + 0xc))();
      return;
    }
  }
  else if (local_5 == '\x03') {
    iVar2 = *(int *)((int)this + 0x19c8);
    while (iVar2 = iVar2 + -1, -1 < iVar2) {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar2 * 4) + 0x70))
                (uVar1,local_48,local_448);
      if (*(int *)((int)this + 0x19c8) + -1 < iVar2) {
        iVar2 = *(int *)((int)this + 0x19c8);
      }
    }
  }
  (**(code **)(*param_2 + 0xc))();
  return;
}



void __fastcall FUN_004147f0(int *param_1)

{
  float10 fVar1;
  
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,&DAT_0043da40);
  (**(code **)(*param_1 + 0x114))();
  fVar1 = (float10)Plat_FloatTime();
  param_1[5] = (int)(float)(fVar1 + (float10)90.0);
  return;
}



void __thiscall FUN_00414830(void *this,undefined4 param_1,int *param_2)

{
  void *this_00;
  int iVar1;
  uint uVar2;
  void *this_01;
  undefined4 *this_02;
  undefined4 *puVar3;
  void *pvVar4;
  uint *puVar5;
  undefined2 uVar6;
  uint local_28 [2];
  uint local_20;
  undefined4 *local_1c;
  int local_18;
  void *local_14;
  uint local_10;
  uint local_c;
  char local_5;
  
  local_14 = this;
  (**(code **)(*param_2 + 8))();
  local_10 = (**(code **)(*param_2 + 0x1c))();
  local_10 = local_10 & 0xffff;
  pvVar4 = this;
  if (local_10 != 0) {
    this_00 = (void *)((int)this + 0x1b90);
    do {
      local_28[0] = (**(code **)(*param_2 + 0x20))();
      local_c = local_28[0];
      uVar2 = FUN_0040b090(this_00,local_28);
      if ((uVar2 & 0xffff) == 0xffff) {
        this_01 = (void *)FUN_00403c30(0xb4);
        if (this_01 == (void *)0x0) {
          this_02 = (undefined4 *)0x0;
        }
        else {
          this_02 = FUN_0041bd10(this_01,local_c,(int)pvVar4 + 0x1bac);
        }
        local_20 = local_c;
        local_c = 0xffff;
        local_5 = '\0';
        local_1c = this_02;
        FUN_0040b110(this_00,&local_20,(ushort *)&local_c,&local_5);
        uVar2 = FUN_0040c000((int)this_00);
        uVar2 = uVar2 & 0xffff;
        local_18 = uVar2 * 0x10;
        puVar3 = (undefined4 *)(*(int *)((int)this + 0x1b94) + local_18);
        *(short *)(puVar3 + 1) = (short)local_c;
        *puVar3 = 0xffffffff;
        *(undefined2 *)((int)puVar3 + 6) = 0;
        uVar6 = (undefined2)uVar2;
        if ((short)local_c == -1) {
          *(undefined2 *)((int)this + 0x1ba0) = uVar6;
        }
        else if (local_5 == '\0') {
          *(undefined2 *)(*(int *)((int)this + 0x1b94) + 2 + (local_c & 0xffff) * 0x10) = uVar6;
        }
        else {
          *(undefined2 *)(*(int *)((int)this + 0x1b94) + (local_c & 0xffff) * 0x10) = uVar6;
        }
        FUN_0040b6d0(this_00,uVar2);
        *(short *)((int)this + 0x1ba2) = *(short *)((int)this + 0x1ba2) + 1;
        puVar5 = (uint *)(local_18 + 8 + *(int *)((int)this + 0x1b94));
        if (puVar5 != (uint *)0x0) {
          *puVar5 = local_20;
          puVar5[1] = (uint)local_1c;
        }
      }
      else {
        this_02 = *(undefined4 **)(*(int *)((int)pvVar4 + 0x1b94) + 0xc + (uVar2 & 0xffff) * 0x10);
      }
      pvVar4 = (void *)(**(code **)(*param_2 + 4))();
      FUN_0041c710(this_02,pvVar4);
      local_10 = local_10 - 1;
      pvVar4 = local_14;
    } while (local_10 != 0);
  }
  (**(code **)(*param_2 + 0xc))();
  iVar1 = *(int *)((int)pvVar4 + 0x19c8);
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(*(int *)((int)pvVar4 + 0x19bc) + iVar1 * 4) + 0x28))(param_2);
    if (*(int *)((int)pvVar4 + 0x19c8) + -1 < iVar1) {
      iVar1 = *(int *)((int)pvVar4 + 0x19c8);
    }
  }
  return;
}



void __thiscall FUN_004149c0(void *this,undefined4 param_1,int *param_2)

{
  int iVar1;
  undefined4 uVar2;
  
  (**(code **)(*param_2 + 8))();
  uVar2 = (**(code **)(*param_2 + 0x20))();
  *(undefined4 *)((int)this + 0x18b0) = uVar2;
  (**(code **)(*param_2 + 0x30))((int)this + 0x18b4,0xff);
  uVar2 = (**(code **)(*param_2 + 0x20))();
  *(undefined4 *)((int)this + 0x19b4) = uVar2;
  (**(code **)(*param_2 + 0xc))();
  iVar1 = *(int *)((int)this + 0x19c8);
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 0x2c))
              (*(undefined4 *)((int)this + 0x18b0));
    if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
      iVar1 = *(int *)((int)this + 0x19c8);
    }
  }
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0xb8))();
  return;
}



void __thiscall FUN_00414a50(void *this,undefined4 param_1,int *param_2)

{
  int *this_00;
  uint uVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  void *this_01;
  undefined extraout_DL;
  undefined extraout_DL_00;
  float10 fVar5;
  undefined local_118;
  uint local_117 [63];
  uint local_18;
  undefined4 local_14;
  uint local_10;
  undefined4 local_c;
  undefined4 *local_8;
  
  local_14 = 0;
  *(undefined4 *)((int)this + 0xf68) = 0;
  (**(code **)(*param_2 + 8))();
  uVar1 = (**(code **)(*param_2 + 0x18))();
  local_18 = uVar1 & 0xff;
  uVar2 = (**(code **)(*param_2 + 0x20))();
  local_10 = (**(code **)(*param_2 + 0x18))();
  local_10 = local_10 & 0xff;
  if ((local_10 == 1) || (local_10 == 2)) {
    *(uint *)((int)this + 8) = uVar1 & 0xff;
    *(undefined4 *)((int)this + 0xc) = uVar2;
    iVar3 = (**(code **)(*param_2 + 0x28))();
    iVar4 = FUN_0040f420();
    uVar1 = iVar4 - iVar3;
    *(uint *)((int)this + 0xb4) = uVar1;
    if ((int)((uVar1 ^ (int)uVar1 >> 0x1f) - ((int)uVar1 >> 0x1f)) < 4) {
      *(undefined4 *)((int)this + 0xb4) = 0;
    }
    FUN_0040f490(DAT_0044a6c0,(int *)0x0,(byte *)"Logged in server(%u) now(%u) offset(%d)");
    local_8 = (undefined4 *)(**(code **)(*param_2 + 0x20))();
    local_118 = 0;
    FUN_00427870(local_117,0,0xff);
    iVar3 = (**(code **)(*param_2 + 0x30))(&local_118,0xff);
    if (0 < iVar3) {
      FUN_0040fd20((void *)((int)this + 0xf70),(int)&local_118);
    }
    iVar3 = (**(code **)(*param_2 + 0x30))(&local_118,0xff);
    if (0 < iVar3) {
      FUN_0041e1d0((char *)((int)this + 0xb8),(int)&local_118,0xff);
    }
    this_00 = (int *)((int)this + 0xf70);
    (**(code **)(*(int *)((int)this + 0xf70) + 0x54))(local_8);
    if ((*(int *)((int)this + 8) == 2) || (*(int *)((int)this + 8) == 3)) {
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x108))(5);
      iVar3 = (**(code **)(*this_00 + 0x78))();
      FUN_0040d400(iVar3);
      FUN_0040fcf0(this_00,*(undefined4 *)((int)this + 0x18b0));
      local_c = *(undefined4 *)((int)this + 0x18b0);
      uVar1 = FUN_0040b090((void *)((int)this + 0x1b90),&local_c);
      if ((short)uVar1 == -1) {
        this_01 = (void *)FUN_00403c30(0xb4);
        if (this_01 == (void *)0x0) {
          local_8 = (undefined4 *)0x0;
        }
        else {
          local_8 = FUN_0041bd10(this_01,*(undefined4 *)((int)this + 0x18b0),(int)this + 0x1bac);
        }
        FUN_0040b650((void *)((int)this + 0x1b90),(undefined4 *)((int)this + 0x18b0),&local_8);
      }
    }
    else {
      FUN_0040fcf0(this_00,0);
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x108))(2);
    }
  }
  else {
    local_14 = (**(code **)(*param_2 + 0x20))();
    *(undefined4 *)((int)this + 8) = 0;
    *(undefined4 *)((int)this + 0xc) = 0;
    FUN_0040fd00((void *)((int)this + 0xf70),0xffffffff);
    FUN_0040fcf0((void *)((int)this + 0xf70),0xffffffff);
  }
  (**(code **)(*param_2 + 0xc))();
  uVar1 = local_10;
  *(undefined4 *)((int)this + 0x18b0) = 0xffffffff;
  iVar3 = *(int *)((int)this + 0x19c8);
  while (iVar3 = iVar3 + -1, -1 < iVar3) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar3 * 4) + 0x18))
              (local_18,uVar1,local_14);
    if (*(int *)((int)this + 0x19c8) + -1 < iVar3) {
      iVar3 = *(int *)((int)this + 0x19c8);
    }
  }
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x114))();
  if ((uVar1 != 1) && (uVar1 != 2)) {
    FUN_0040ff30((void *)((int)this + 0x1b8),extraout_DL,uVar1,uVar2);
    return;
  }
  fVar5 = (float10)Plat_FloatTime();
  *(float *)((int)this + 0x14) = (float)(fVar5 + (float10)90.0);
  FUN_00410010((void *)((int)this + 0x1b8),extraout_DL_00,uVar2);
  return;
}



void __fastcall FUN_00414d20(int *param_1)

{
  int iVar1;
  
  (**(code **)(*param_1 + 0x24))();
  (**(code **)(*param_1 + 0x58))();
  iVar1 = param_1[0x672];
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(param_1[0x66f] + iVar1 * 4) + 8))(0);
    if (param_1[0x672] + -1 < iVar1) {
      iVar1 = param_1[0x672];
    }
  }
  return;
}



void FUN_00414d70(void)

{
  return;
}



void __thiscall FUN_00414d80(void *this,undefined4 param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  
  (**(code **)(*param_2 + 8))();
  iVar1 = (**(code **)(*param_2 + 0x20))();
  if (0 < iVar1) {
    iVar2 = (***(code ***)((int)this + 0xf70))();
    if (iVar2 == 0) {
      (**(code **)(*(int *)((int)this + 0xf70) + 0x54))(iVar1);
    }
    iVar1 = *(int *)((int)this + 0xf70);
    uVar3 = (**(code **)(*param_2 + 4))();
    (**(code **)(iVar1 + 0x90))(uVar3);
    (**(code **)(*param_2 + 0xc))();
    iVar1 = *(int *)((int)this + 0x19c8);
    while (iVar1 = iVar1 + -1, -1 < iVar1) {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 0x20))();
      if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
        iVar1 = *(int *)((int)this + 0x19c8);
      }
    }
  }
  return;
}



void __thiscall FUN_00414e10(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  
  iVar1 = *(int *)((int)this + 8);
  if (-1 < iVar1) {
    uVar2 = *(uint *)((int)this + 4);
    uVar4 = param_1 + uVar2;
    if (iVar1 == 0) {
      if (uVar2 == 0) {
        uVar2 = 2;
        if (2 < (int)uVar4) {
          uVar2 = uVar4;
        }
      }
      else {
        for (; (int)uVar2 < (int)uVar4; uVar2 = uVar2 * 2) {
        }
      }
    }
    else {
      uVar2 = ((int)(uVar4 - 1) / iVar1 + 1) * iVar1;
    }
    if ((int)(uVar2 & 0xffff) < (int)uVar4) {
      if (((short)uVar2 == 0) && ((int)uVar4 < 0x10000)) {
        uVar2 = uVar2 - 1;
      }
      else {
        if ((uVar4 & 0xffff) != uVar4) {
          return;
        }
        do {
          uVar2 = (int)(uVar2 + uVar4) / 2;
        } while ((int)(uVar2 & 0xffff) < (int)uVar4);
      }
    }
                    // WARNING: Load size is inaccurate
    *(uint *)((int)this + 4) = uVar2;
    if (*this != 0) {
      uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this,uVar2 * 0x18);
      *(undefined4 *)this = uVar3;
      return;
    }
    uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar2 * 0x18);
    *(undefined4 *)this = uVar3;
  }
  return;
}



uint __thiscall FUN_00414ed0(void *this,undefined4 *param_1,undefined4 *param_2)

{
  undefined4 *puVar1;
  uint uVar2;
  uint uVar3;
  undefined4 local_14 [2];
  undefined4 local_c;
  undefined4 local_8;
  
  local_14[0] = *param_1;
  local_c = *param_2;
  local_8 = param_2[1];
  param_2 = (undefined4 *)0xffff;
  param_1 = (undefined4 *)((uint)param_1 & 0xffffff00);
  FUN_00411420(this,local_14,(ushort *)&param_2,(undefined *)&param_1);
  uVar3 = FUN_00412200((int)this);
  uVar3 = uVar3 & 0xffff;
  FUN_004151e0(this,uVar3,(ushort)param_2,(char)param_1);
  *(short *)((int)this + 0x12) = *(short *)((int)this + 0x12) + 1;
  uVar2 = *(uint *)((int)this + 4);
  puVar1 = (undefined4 *)(uVar2 + (uVar3 * 3 + 1) * 8);
  if (puVar1 != (undefined4 *)0x0) {
    *puVar1 = local_14[0];
    puVar1[2] = local_c;
    puVar1[3] = local_8;
  }
  return uVar2 & 0xffff0000 | uVar3;
}



void __thiscall FUN_00414f60(void *this,uint param_1)

{
  ushort uVar1;
  int iVar2;
  ushort uVar3;
  short sVar4;
  uint uVar5;
  int iVar6;
  uint uVar7;
  short sVar8;
  uint uVar9;
  
  if ((short)param_1 != *(short *)((int)this + 0x10)) {
    while (sVar8 = (short)param_1, sVar8 != -1) {
      iVar2 = *(int *)((int)this + 4);
      uVar1 = *(ushort *)(iVar2 + 4 + (param_1 & 0xffff) * 0x18);
      uVar7 = (uint)uVar1;
      if ((uVar1 == 0xffff) || (*(short *)(iVar2 + 6 + uVar7 * 0x18) != 0)) break;
      if (uVar1 == 0xffff) {
        uVar5 = 0xffff;
LAB_00414fe4:
        uVar3 = 0xffff;
      }
      else {
        uVar3 = *(ushort *)(iVar2 + 4 + uVar7 * 0x18);
        uVar5 = (uint)uVar3;
        if (uVar3 == 0xffff) goto LAB_00414fe4;
        uVar3 = *(ushort *)(iVar2 + uVar5 * 0x18);
      }
      if (uVar3 == uVar1) {
        if ((short)uVar5 != -1) {
          uVar3 = *(ushort *)(uVar5 * 0x18 + 2 + iVar2);
          if ((uVar3 != 0xffff) && (iVar6 = (uint)uVar3 * 0x18, *(short *)(iVar6 + 6 + iVar2) == 0))
          {
            *(undefined2 *)(iVar2 + 6 + uVar7 * 0x18) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar6) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x18) = 0;
            param_1 = uVar5;
            goto LAB_004151af;
          }
        }
        if (uVar1 == 0xffff) {
          sVar4 = -1;
        }
        else {
          sVar4 = *(short *)(iVar2 + 2 + uVar7 * 0x18);
        }
        uVar9 = uVar7;
        if (sVar4 == sVar8) {
          FUN_00412640(this,uVar1);
          uVar5 = 0xffff;
          if (uVar1 == 0xffff) {
            uVar9 = 0xffff;
            param_1 = uVar7;
          }
          else {
            uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + uVar7 * 0x18);
            uVar9 = (uint)uVar1;
            param_1 = uVar7;
            if (uVar1 != 0xffff) {
              uVar5 = (uint)*(ushort *)(*(int *)((int)this + 4) + 4 + uVar9 * 0x18);
            }
          }
        }
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar9 * 0x18) = 1;
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x18) = 0;
        FUN_00412780(this,(ushort)uVar5);
      }
      else {
        if ((short)uVar5 != -1) {
          uVar3 = *(ushort *)(uVar5 * 0x18 + iVar2);
          if ((uVar3 != 0xffff) && (iVar6 = (uint)uVar3 * 0x18, *(short *)(iVar6 + 6 + iVar2) == 0))
          {
            *(undefined2 *)(iVar2 + 6 + uVar7 * 0x18) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar6) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x18) = 0;
            param_1 = uVar5;
            goto LAB_004151af;
          }
        }
        if (uVar1 == 0xffff) {
          sVar4 = -1;
        }
        else {
          sVar4 = *(short *)(iVar2 + uVar7 * 0x18);
        }
        uVar9 = uVar7;
        if (sVar4 == sVar8) {
          FUN_00412780(this,uVar1);
          uVar5 = 0xffff;
          if (uVar1 == 0xffff) {
            uVar9 = 0xffff;
            param_1 = uVar7;
          }
          else {
            uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + uVar7 * 0x18);
            uVar9 = (uint)uVar1;
            param_1 = uVar7;
            if (uVar1 != 0xffff) {
              uVar5 = (uint)*(ushort *)(*(int *)((int)this + 4) + 4 + uVar9 * 0x18);
            }
          }
        }
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar9 * 0x18) = 1;
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0x18) = 0;
        FUN_00412640(this,(ushort)uVar5);
      }
LAB_004151af:
      if ((short)param_1 == *(short *)((int)this + 0x10)) break;
    }
  }
  *(undefined2 *)(*(int *)((int)this + 4) + 6 + (uint)*(ushort *)((int)this + 0x10) * 0x18) = 1;
  return;
}



void __thiscall FUN_004151e0(void *this,uint param_1,ushort param_2,char param_3)

{
  int iVar1;
  uint uVar2;
  undefined2 uVar3;
  
  uVar2 = param_1 & 0xffff;
  iVar1 = *(int *)((int)this + 4);
  *(ushort *)(iVar1 + 4 + uVar2 * 0x18) = param_2;
  *(undefined4 *)(iVar1 + uVar2 * 0x18) = 0xffffffff;
  *(undefined2 *)(iVar1 + 6 + uVar2 * 0x18) = 0;
  uVar3 = (undefined2)param_1;
  if (param_2 == 0xffff) {
    *(undefined2 *)((int)this + 0x10) = uVar3;
    FUN_00414f60(this,param_1);
    return;
  }
  if (param_3 != '\0') {
    *(undefined2 *)(*(int *)((int)this + 4) + (uint)param_2 * 0x18) = uVar3;
    FUN_00414f60(this,param_1);
    return;
  }
  *(undefined2 *)(*(int *)((int)this + 4) + 2 + (uint)param_2 * 0x18) = uVar3;
  FUN_00414f60(this,param_1);
  return;
}



void __fastcall FUN_00415260(int param_1)

{
  uint uVar1;
  undefined4 local_20 [4];
  code *local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  local_10 = FUN_00414a50;
  local_c = 0;
  local_8 = 1;
  local_20[0] = 1;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00414d20;
  local_c = 0;
  local_8 = 2;
  local_20[0] = 2;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00414d70;
  local_c = 0;
  local_8 = 3;
  local_20[0] = 3;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_004147f0;
  local_c = 0;
  local_8 = 4;
  local_20[0] = 4;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00414d80;
  local_c = 0;
  local_8 = 0xc;
  local_20[0] = 0xc;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00414830;
  local_c = 0;
  local_8 = 0x21;
  local_20[0] = 0x21;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_004149c0;
  local_c = 0;
  local_8 = 0x22;
  local_20[0] = 0x22;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_004146a0;
  local_c = 0;
  local_8 = 0xd;
  local_20[0] = 0xd;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  return;
}



void __thiscall FUN_00415490(void *this,undefined4 param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined local_88 [128];
  undefined4 local_8;
  
  local_8 = 0;
  (**(code **)(*param_2 + 8))();
  iVar2 = (**(code **)(*param_2 + 0x20))();
  if (0 < iVar2) {
    (**(code **)(*param_2 + 0x30))(local_88,0x80);
    local_8 = (**(code **)(*param_2 + 0x20))();
    (**(code **)(*param_2 + 0x20))();
  }
  (**(code **)(*param_2 + 0xc))();
  if (iVar2 == 0) {
    (**(code **)(*(int *)((int)this + 0xf70) + 100))(local_88);
    (**(code **)(*(int *)((int)this + 0xf70) + 0x68))(local_8);
  }
  iVar1 = *(int *)((int)this + 0x19c8);
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 0x1c))(iVar2);
    if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
      iVar1 = *(int *)((int)this + 0x19c8);
    }
  }
  return;
}



void __fastcall FUN_00415550(int param_1)

{
  uint uVar1;
  undefined4 local_20 [4];
  code *local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  local_10 = FUN_00415490;
  local_c = 0;
  local_8 = 0x1f;
  local_20[0] = 0x1f;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  return;
}



void __thiscall FUN_004155b0(void *this,int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  undefined8 uVar4;
  
  *(int *)((int)this + 0x1bd4) = param_1;
                    // WARNING: Load size is inaccurate
  piVar2 = (int *)(**(code **)(*this + 0x4c))(0x6f);
  iVar1 = *piVar2;
  uVar3 = (***(code ***)((int)this + 0xf70))();
  (**(code **)(iVar1 + 0x48))(uVar3);
  iVar1 = *piVar2;
  uVar4 = (**(code **)(*(int *)((int)this + 0xf70) + 4))();
  (**(code **)(iVar1 + 0x54))(uVar4);
  (**(code **)(*piVar2 + 0x38))(param_2,param_3,0);
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x50))(piVar2);
  return;
}



void __thiscall FUN_00415620(void *this,undefined4 param_1,int *param_2)

{
  void **this_00;
  uint uVar1;
  uint *puVar2;
  
  (**(code **)(*param_2 + 8))();
  uVar1 = (**(code **)(*param_2 + 0x18))();
  if ((uVar1 & 0xff) != 0) {
    this_00 = (void **)((int)this + 0x1c);
    *(undefined4 *)((int)this + 0x28) = 0;
    *(undefined4 *)((int)this + 0x2c) = 0;
    *(undefined *)((int)this + 0x30) = 0;
    *(undefined4 *)((int)this + 0x3c) = 0;
    *(undefined4 *)((int)this + 0x38) = 0xffffffff;
    FUN_004223b0(this_00,0);
    FUN_0040f2c0(uVar1 & 0xff,param_2,this_00);
    FUN_00411990((void *)((int)this + 0x638),(uint *)this_00);
    (**(code **)(*param_2 + 0xc))();
    return;
  }
  puVar2 = (uint *)(**(code **)(*param_2 + 4))();
  FUN_00411990((void *)((int)this + 0x638),puVar2);
  (**(code **)(*param_2 + 0xc))();
  return;
}



// WARNING: Could not reconcile some variable overlaps

void FUN_004156c0(undefined4 param_1,int *param_2)

{
  undefined4 uVar1;
  int iVar2;
  undefined4 *puVar3;
  int *piVar4;
  int iVar5;
  undefined local_18 [4];
  void *local_14;
  undefined4 local_10;
  undefined8 local_c;
  
  (**(code **)(*param_2 + 8))();
  (**(code **)(*param_2 + 0x20))();
  local_10 = (**(code **)(*param_2 + 0x2c))();
  local_c = (**(code **)(*param_2 + 0x2c))();
  iVar2 = (**(code **)(*param_2 + 0x20))();
  (**(code **)(*param_2 + 0xc))();
  uVar1 = (undefined4)local_c;
  FUN_0040f440(DAT_0044a6c0,(int *)0x0,
               (byte *)
               "Recieved User Authenticated with DS for %llu from server %llu with result %d");
  if ((iVar2 == 0) && (*(char *)((int)local_14 + 0x1c28) != '\0')) {
    iVar2 = (**(code **)(**(int **)((int)local_14 + 0x1bdc) + 0x60))(uVar1,local_c._4_4_);
    iVar5 = 0;
    if (0 < iVar2) {
      do {
        puVar3 = (undefined4 *)
                 (**(code **)(**(int **)((int)local_14 + 0x1bdc) + 100))(local_18,local_c,iVar5);
        piVar4 = FUN_00408590((void *)((int)local_14 + 0x1bac),*puVar3,puVar3[1]);
        if (piVar4 != (int *)0x0) {
          FUN_00408f60(local_14,piVar4,0);
        }
        iVar5 = iVar5 + 1;
      } while (iVar5 < iVar2);
    }
  }
  return;
}



void __thiscall FUN_004157a0(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint uVar5;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar3 = *(uint *)((int)this + 4);
  uVar5 = param_1 + uVar3;
  if (iVar1 == 0) {
    if (uVar3 == 0) {
      uVar3 = 4;
      uVar2 = uVar5;
      if ((int)uVar5 < 5) goto LAB_00415803;
    }
    else {
      if ((int)uVar5 <= (int)uVar3) goto LAB_00415803;
      do {
        uVar3 = uVar3 * 2;
        uVar2 = uVar3;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
  else {
    uVar2 = ((int)(uVar5 - 1) / iVar1 + 1) * iVar1;
  }
  uVar3 = uVar2;
  if ((int)uVar3 < (int)uVar5) {
    if ((uVar3 == 0) && (0x7fffffff < uVar5)) {
      uVar3 = 0xffffffff;
    }
    else {
      do {
        uVar3 = (int)(uVar3 + uVar5) / 2;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
LAB_00415803:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar3;
  if (*this == 0) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar3 * 8);
    *(undefined4 *)this = uVar4;
    return;
  }
  uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this,uVar3 << 3);
  *(undefined4 *)this = uVar4;
  return;
}



void FUN_00415850(undefined4 param_1,int *param_2)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  undefined local_88 [128];
  int local_8;
  
  (**(code **)(*param_2 + 8))();
  uVar2 = (**(code **)(*param_2 + 0x28))();
  uVar3 = (**(code **)(*param_2 + 0x20))();
  (**(code **)(*param_2 + 0x30))(local_88,0x80);
  uVar4 = (**(code **)(*param_2 + 0x20))();
  (**(code **)(*param_2 + 0xc))();
  (**(code **)(*(int *)(local_8 + 0xf70) + 0x24))(7);
  *(undefined4 *)(local_8 + 0xfe0) = uVar3;
  *(undefined4 *)(local_8 + 0x102c) = uVar2;
  iVar1 = *(int *)(local_8 + 0x19c8);
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(*(int *)(local_8 + 0x19bc) + iVar1 * 4) + 0x60))(local_88,uVar4);
    if (*(int *)(local_8 + 0x19c8) + -1 < iVar1) {
      iVar1 = *(int *)(local_8 + 0x19c8);
    }
  }
  return;
}



void __thiscall FUN_00415900(void *this,undefined4 param_1,int *param_2)

{
  int iVar1;
  undefined uVar2;
  undefined4 uVar3;
  undefined local_84 [128];
  
  (**(code **)(*param_2 + 8))();
  uVar2 = (**(code **)(*param_2 + 0x18))();
  (**(code **)(*param_2 + 0x30))(local_84,0x80);
  uVar3 = (**(code **)(*param_2 + 0x20))();
  (**(code **)(*param_2 + 0xc))();
  (**(code **)(*(int *)((int)this + 0xf70) + 0x24))(7);
  *(undefined4 *)((int)this + 0xfe0) = 0;
  iVar1 = *(int *)((int)this + 0x19c8);
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 100))(uVar2,local_84,uVar3);
    if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
      iVar1 = *(int *)((int)this + 0x19c8);
    }
  }
  return;
}



void __thiscall FUN_004159a0(void *this,undefined4 param_1,int *param_2)

{
  char cVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  void *this_00;
  undefined4 *puVar5;
  char *pcVar6;
  uint uVar7;
  char cVar8;
  undefined local_234 [512];
  char local_34 [32];
  uint local_14;
  undefined4 local_10;
  uint local_c;
  uint local_8;
  
  (**(code **)(*param_2 + 8))();
  local_8 = (**(code **)(*param_2 + 0x1c))();
  local_8 = local_8 & 0xffff;
  iVar2 = (**(code **)(*param_2 + 0x20))();
  local_14 = (**(code **)(*param_2 + 0x18))();
  local_14 = local_14 & 0xff;
  local_c = (**(code **)(*param_2 + 0x20))();
  local_10 = (**(code **)(*param_2 + 0x20))();
  FUN_00413510(param_2,local_234,0x200);
  cVar1 = (**(code **)(*param_2 + 0x18))();
  iVar3 = (***(code ***)((int)this + 0xf70))();
  if (iVar2 == iVar3) {
    cVar8 = '\0';
    piVar4 = (int *)(**(code **)(*param_2 + 4))();
    this_00 = (void *)(**(code **)(*(int *)((int)this + 0xf70) + 0x78))();
    FUN_0040e8a0(this_00,piVar4,cVar8);
  }
  (**(code **)(*param_2 + 0xc))();
  uVar7 = local_8;
  if (cVar1 == '\0') {
    if (local_14 == 1) {
      puVar5 = (undefined4 *)FUN_00413490(DAT_0044a6a8);
      pcVar6 = (char *)(**(code **)*puVar5)();
    }
    else {
      pcVar6 = "GamePoints";
    }
    FUN_0041e380((int)local_34,pcVar6);
    uVar7 = local_8;
    FUN_004101f0((void *)((int)this + 0x1b8),local_8 & 0xffff,local_10,local_34,local_c);
  }
  iVar2 = *(int *)((int)this + 0x19c8) + -1;
  if (-1 < iVar2) {
    do {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar2 * 4) + 0x3c))
                (uVar7 & 0xffff,cVar1);
      if (*(int *)((int)this + 0x19c8) + -1 < iVar2) {
        iVar2 = *(int *)((int)this + 0x19c8);
      }
      iVar2 = iVar2 + -1;
    } while (-1 < iVar2);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall FUN_00415ae0(void *this,undefined4 param_1,int *param_2)

{
  int *piVar1;
  byte bVar2;
  undefined2 uVar3;
  uint uVar4;
  undefined4 uVar5;
  int iVar6;
  undefined local_24 [8];
  undefined8 uStack28;
  undefined2 *local_14;
  uint local_10;
  uint local_c;
  void *local_8;
  
  piVar1 = param_2;
  local_14 = (undefined2 *)0x0;
  _local_24 = ZEXT816(0);
  local_8 = this;
  (**(code **)(*param_2 + 8))();
  bVar2 = (**(code **)(*param_2 + 0x18))();
  param_2 = (int *)((uint)param_2 & 0xffffff00 | (uint)bVar2);
  bVar2 = (**(code **)(*piVar1 + 0x18))();
  local_10 = local_10 & 0xffffff00 | (uint)bVar2;
  local_c = (**(code **)(*piVar1 + 0x1c))();
  local_c = local_c & 0xffff;
  uVar4 = (**(code **)(*piVar1 + 0x1c))();
  uVar4 = uVar4 & 0xffff;
  if ((short)uVar4 != 0) {
    do {
      if (local_24._4_4_ < uStack28._4_4_ + 1) {
        FUN_004157a0(local_24,(uStack28._4_4_ - local_24._4_4_) + 1);
      }
      _local_24 = CONCAT412(uStack28._4_4_ + 1,_local_24);
      local_14 = local_24._0_4_;
      if (0 < uStack28._4_4_) {
        FID_conflict__memcpy(local_24._0_4_ + 4,local_24._0_4_,uStack28._4_4_ << 3);
      }
      uVar3 = (**(code **)(*piVar1 + 0x1c))();
      *local_24._0_4_ = uVar3;
      uVar5 = (**(code **)(*piVar1 + 0x20))();
      *(undefined4 *)((int)local_24._0_4_ + 4) = uVar5;
      uVar4 = uVar4 - 1;
      this = local_8;
    } while (uVar4 != 0);
  }
  (**(code **)(*piVar1 + 0xc))();
  iVar6 = *(int *)((int)this + 0x19c8);
  while (iVar6 = iVar6 + -1, -1 < iVar6) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar6 * 4) + 0x40))
              (param_2,local_10,local_c,local_24);
    if (*(int *)((int)this + 0x19c8) + -1 < iVar6) {
      iVar6 = *(int *)((int)this + 0x19c8);
    }
  }
  uStack28._0_4_ = SUB124(_local_24 >> 0x40,0);
  _local_24 = ZEXT1216(_local_24);
  iVar6 = (int)local_24._0_4_;
  if ((undefined  [12])0xffffffffffffffff < _local_24) {
    if (local_24._0_4_ != (undefined2 *)0x0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_24._0_4_);
      iVar6 = 0;
      _local_24 = _local_24 & (undefined  [16])0xffffffff00000000;
    }
  }
  if ((-1 < (int)uStack28) && (iVar6 != 0)) {
    local_14 = (undefined2 *)iVar6;
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar6);
  }
  return;
}



void __thiscall FUN_00415c30(void *this,undefined4 param_1,int *param_2)

{
  int iVar1;
  char cVar2;
  void *this_00;
  uint *puVar3;
  undefined4 *puVar4;
  
                    // WARNING: Load size is inaccurate
  this_00 = (void *)(**(code **)(*this + 0x9c))();
  if (this_00 != (void *)0x0) {
    (**(code **)(*param_2 + 8))();
    cVar2 = (**(code **)(*param_2 + 0x18))();
    if (cVar2 == '\0') {
      puVar3 = (uint *)(**(code **)(*param_2 + 4))();
      puVar4 = FUN_0041bdd0(this_00,puVar3);
    }
    else {
      puVar4 = (undefined4 *)0x0;
    }
    (**(code **)(*param_2 + 0xc))();
    iVar1 = *(int *)((int)this + 0x19c8);
    while (iVar1 = iVar1 + -1, -1 < iVar1) {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 0x4c))(cVar2,puVar4);
      if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
        iVar1 = *(int *)((int)this + 0x19c8);
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall FUN_00415cc0(void *this,undefined4 param_1,int *param_2)

{
  void *pvVar1;
  uint uVar2;
  uint *puVar3;
  undefined4 uVar4;
  int iVar5;
  int *piVar6;
  int iVar7;
  int iVar8;
  undefined4 *puVar9;
  undefined local_40 [8];
  int iStack56;
  undefined4 *puStack52;
  int local_30;
  undefined local_2c [8];
  int iStack36;
  undefined4 *puStack32;
  int local_1c;
  void *local_18;
  void *local_14;
  uint local_10;
  undefined4 *local_c;
  undefined4 *local_8;
  
                    // WARNING: Load size is inaccurate
  local_18 = this;
  local_14 = (void *)(**(code **)(*this + 0x9c))();
  if (local_14 != (void *)0x0) {
    local_30 = 0;
    _local_40 = ZEXT816(0);
    _local_2c = ZEXT816(0);
    local_1c = 0;
    (**(code **)(*param_2 + 8))();
    uVar2 = (**(code **)(*param_2 + 0x18))();
    local_10 = uVar2 & 0xff;
    FUN_0040f440(DAT_0044a6c0,(int *)0x0,(byte *)0x43da50);
    local_8 = puStack32;
    if ((uVar2 & 0xff) != 0) {
      do {
        uVar2 = (**(code **)(*param_2 + 0x18))();
        local_8 = (undefined4 *)(uVar2 & 0xff);
        puVar3 = (uint *)(**(code **)(*param_2 + 4))();
        uVar4 = FUN_0041c750(local_14,local_8,puVar3);
        if ((char)uVar4 == '\0') {
          local_c = puStack32;
          if (local_2c._4_4_ < (int)puStack32 + 1) {
            FUN_0040a710(local_2c,(int)puStack32 + (1 - local_2c._4_4_));
          }
          puStack32 = (undefined4 *)((int)puStack32 + 1);
          local_1c = local_2c._0_4_;
          iVar5 = (int)puStack32 + (-1 - (int)local_c);
          if (0 < iVar5) {
            pvVar1 = (void *)(local_2c._0_4_ + (int)local_c * 4);
            FID_conflict__memcpy((void *)((int)pvVar1 + 4),pvVar1,iVar5 * 4);
          }
          piVar6 = (int *)(local_2c._0_4_ + (int)local_c * 4);
        }
        else {
          local_c = puStack52;
          if (local_40._4_4_ < (int)puStack52 + 1) {
            FUN_0040a710(local_40,(int)puStack52 + (1 - local_40._4_4_));
          }
          puStack52 = (undefined4 *)((int)puStack52 + 1);
          iVar5 = (int)puStack52 + (-1 - (int)local_c);
          local_30 = local_40._0_4_;
          if (0 < iVar5) {
            pvVar1 = (void *)(local_40._0_4_ + (int)local_c * 4);
            FID_conflict__memcpy((void *)((int)pvVar1 + 4),pvVar1,iVar5 * 4);
          }
          piVar6 = (int *)(local_40._0_4_ + (int)local_c * 4);
        }
        if (piVar6 != (int *)0x0) {
          *piVar6 = (int)local_8;
        }
        local_10 = local_10 - 1;
        this = local_18;
      } while (local_10 != 0);
    }
    local_8 = puStack32;
    (**(code **)(*param_2 + 0xc))();
    iVar5 = (int)puStack52 + -1;
    if (-1 < iVar5) {
      iVar7 = *(int *)((int)this + 0x19c8) + -1;
      puVar9 = (undefined4 *)(local_40._0_4_ + iVar5 * 4);
      iVar8 = iVar7;
      puStack32 = local_8;
      do {
        for (; local_8 = puStack32, -1 < iVar8; iVar8 = iVar8 + -1) {
          (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar8 * 4) + 0x34))(*puVar9,0);
          iVar7 = *(int *)((int)this + 0x19c8) + -1;
          if (iVar7 < iVar8) {
            iVar8 = *(int *)((int)this + 0x19c8);
          }
          puStack32 = local_8;
        }
        iVar5 = iVar5 + -1;
        puVar9 = puVar9 + -1;
        iVar8 = iVar7;
      } while (-1 < iVar5);
    }
    iVar5 = (int)puStack32 + -1;
    if (-1 < iVar5) {
      iVar7 = *(int *)((int)this + 0x19c8) + -1;
      puVar9 = (undefined4 *)(local_2c._0_4_ + iVar5 * 4);
      iVar8 = iVar7;
      do {
        for (; -1 < iVar8; iVar8 = iVar8 + -1) {
          (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar8 * 4) + 0x34))(*puVar9,1);
          iVar7 = *(int *)((int)this + 0x19c8) + -1;
          if (iVar7 < iVar8) {
            iVar8 = *(int *)((int)this + 0x19c8);
          }
        }
        iVar5 = iVar5 + -1;
        puVar9 = puVar9 + -1;
        iVar8 = iVar7;
      } while (-1 < iVar5);
    }
    if (((-1 < iStack36) && (local_2c._0_4_ != 0)) &&
       ((**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_2c._0_4_), false)) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
    }
    if (((-1 < iStack56) && (local_40._0_4_ != 0)) &&
       ((**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_40._0_4_), false)) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
    }
  }
  return;
}



void __fastcall FUN_00415f40(int *param_1)

{
  int iVar1;
  
  iVar1 = (**(code **)(*param_1 + 0xa0))();
  if ((iVar1 != 0) && (*(char *)(param_1 + 0x70a) != '\0')) {
    if (param_1[0x6f5] != 0) {
      (**(code **)(*(int *)param_1[0x6f6] + 0x40))(param_1[0x6f5]);
    }
    param_1[0x6f5] = 0;
    FUN_004082b0(param_1,FUN_004155b0,0,0);
  }
  return;
}



void __thiscall FUN_00415f90(void *this,undefined4 param_1,int *param_2)

{
  char cVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  uint uVar5;
  int *piVar6;
  undefined4 uVar7;
  void *this_00;
  
  this_00 = (void *)0x0;
  (**(code **)(*param_2 + 8))();
  cVar1 = (**(code **)(*param_2 + 0x18))();
  uVar2 = (**(code **)(*param_2 + 0x18))();
  uVar2 = uVar2 & 0xff;
  iVar3 = (**(code **)(*param_2 + 0x20))();
  iVar4 = (***(code ***)((int)this + 0xf70))();
  if (iVar3 == iVar4) {
    if (cVar1 == '\x01') {
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x108))(6);
      uVar5 = uVar2;
    }
    else {
      uVar5 = 0;
    }
    FUN_0040fd00((void *)((int)this + 0xf70),uVar5);
  }
                    // WARNING: Load size is inaccurate
  if ((((uVar2 != 0) && (uVar5 = FUN_0040fca0((int)this + 0xf70), uVar5 == uVar2)) &&
      (cVar1 == '\x01')) &&
     ((piVar6 = (int *)(**(code **)(*this + 0x9c))(), piVar6 != (int *)0x0 &&
      (this_00 = (void *)(**(code **)(*piVar6 + 0x28))(uVar2,0), this_00 != (void *)0x0)))) {
    uVar7 = (**(code **)(*param_2 + 4))();
    FUN_00417e20(this_00,iVar3,uVar7);
  }
  (**(code **)(*param_2 + 0xc))();
  iVar4 = *(int *)((int)this + 0x19c8);
  while (iVar4 = iVar4 + -1, -1 < iVar4) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar4 * 4) + 0x50))(cVar1,this_00,iVar3);
    if (*(int *)((int)this + 0x19c8) + -1 < iVar4) {
      iVar4 = *(int *)((int)this + 0x19c8);
    }
  }
  return;
}



void __thiscall FUN_00416090(void *this,undefined4 param_1,int *param_2)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  int *piVar4;
  int iVar5;
  int *this_00;
  longlong lVar6;
  
  this_00 = (int *)0x0;
  (**(code **)(*param_2 + 8))();
  uVar1 = (**(code **)(*param_2 + 0x18))();
  uVar1 = uVar1 & 0xff;
  iVar2 = (**(code **)(*param_2 + 0x20))();
  (**(code **)(*param_2 + 0x2c))();
                    // WARNING: Load size is inaccurate
  if ((((uVar1 != 0) && (uVar3 = FUN_0040fca0((int)this + 0xf70), uVar1 == uVar3)) &&
      (piVar4 = (int *)(**(code **)(*this + 0x9c))(), piVar4 != (int *)0x0)) &&
     (this_00 = (int *)(**(code **)(*piVar4 + 0x28))(uVar1,0), this_00 != (int *)0x0)) {
    FUN_00417e50(this_00,iVar2);
  }
  (**(code **)(*param_2 + 0xc))();
  iVar5 = (***(code ***)((int)this + 0xf70))();
  if ((iVar2 == iVar5) && (uVar3 = FUN_0040fca0((int)this + 0xf70), uVar1 == uVar3)) {
    if (this_00 == (int *)0x0) {
      lVar6 = 0;
    }
    else {
      lVar6 = (**(code **)(*this_00 + 0x18))();
      FUN_00417870(this_00);
    }
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x108))(5);
    FUN_0040fd00((void *)((int)this + 0xf70),0);
    if (*(char *)((int)this + 0x1c28) != '\0') {
      if (lVar6 != 0) {
        (**(code **)(**(int **)((int)this + 0x1bf4) + 0x10))(lVar6);
      }
      if (*(int *)((int)this + 0x1bd4) != 0) {
        (**(code **)(**(int **)((int)this + 0x1bd8) + 0x40))(*(int *)((int)this + 0x1bd4));
      }
      *(undefined4 *)((int)this + 0x1bd4) = 0;
    }
  }
  iVar5 = *(int *)((int)this + 0x19c8);
  while (iVar5 = iVar5 + -1, -1 < iVar5) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar5 * 4) + 0x54))(iVar2,uVar1);
    if (*(int *)((int)this + 0x19c8) + -1 < iVar5) {
      iVar5 = *(int *)((int)this + 0x19c8);
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall FUN_00416210(void *this,undefined4 param_1,int *param_2)

{
  void *_Src;
  int *piVar1;
  uint *puVar2;
  undefined4 *puVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  uint **ppuVar7;
  int *piVar8;
  undefined local_50 [8];
  undefined8 uStack72;
  int local_40;
  undefined local_3c [8];
  undefined8 uStack52;
  uint *local_2c;
  undefined local_28 [8];
  int iStack32;
  int iStack28;
  int local_18;
  undefined4 local_14;
  int *local_10;
  int local_c;
  int *local_8;
  
                    // WARNING: Load size is inaccurate
  local_8 = (int *)this;
  piVar1 = (int *)(**(code **)(*this + 0x9c))();
  if (piVar1 != (int *)0x0) {
    local_40 = 0;
    _local_50 = ZEXT816(0);
    local_2c = (uint *)0x0;
    _local_3c = ZEXT816(0);
    local_10 = piVar1;
    (**(code **)(*param_2 + 8))();
    piVar8 = (int *)local_50;
    ppuVar7 = (uint **)local_3c;
    puVar2 = (uint *)(**(code **)(*param_2 + 4))();
    FUN_0041c870(piVar1,puVar2,ppuVar7,piVar8);
    (**(code **)(*param_2 + 0xc))();
    local_18 = 0;
    _local_28 = ZEXT816(0);
    local_c = (**(code **)(*piVar1 + 0x1c))();
    local_c = local_c + -1;
    if (-1 < local_c) {
      iVar5 = iStack28;
      do {
        puVar3 = (undefined4 *)(**(code **)(*local_10 + 0x20))(local_c,1);
        local_14 = (**(code **)*puVar3)();
        iStack28 = iVar5;
        if (local_28._4_4_ < iVar5 + 1) {
          FUN_0040a710(local_28,(iVar5 - local_28._4_4_) + 1);
        }
        iVar6 = iStack28 + 1;
        _local_28 = CONCAT412(iVar6,_local_28);
        iVar4 = (iVar6 - iVar5) + -1;
        local_18 = local_28._0_4_;
        if (0 < iVar4) {
          _Src = (void *)(local_28._0_4_ + iVar5 * 4);
          FID_conflict__memcpy((void *)((int)_Src + 4),_Src,iVar4 * 4);
        }
        puVar3 = (undefined4 *)(local_28._0_4_ + iVar5 * 4);
        if (puVar3 != (undefined4 *)0x0) {
          *puVar3 = local_14;
        }
        if (9 < iVar6) {
                    // WARNING: Load size is inaccurate
          piVar1 = (int *)(**(code **)(*this + 0x4c))(0x5d);
          (**(code **)(*piVar1 + 0x40))(iVar6);
          this = local_8;
          for (; local_8 = (int *)this, -1 < iStack28; iStack28 = iStack28 + -1) {
            (**(code **)(*piVar1 + 0x40))(*(undefined *)(local_28._0_4_ + iStack28 * 4));
            this = local_8;
          }
                    // WARNING: Load size is inaccurate
          (**(code **)(*this + 0x50))(piVar1);
          iVar6 = 0;
          _local_28 = _local_28 & (undefined  [16])0xffffffffffffffff;
        }
        local_c = local_c + -1;
        iVar5 = iVar6;
      } while (-1 < local_c);
      if (0 < iVar6) {
                    // WARNING: Load size is inaccurate
        piVar1 = (int *)(**(code **)(*this + 0x4c))(0x5d);
        (**(code **)(*piVar1 + 0x40))(iVar6);
        while (iVar6 = iVar6 + -1, -1 < iVar6) {
          (**(code **)(*piVar1 + 0x40))(*(undefined *)(local_28._0_4_ + iVar6 * 4));
          this = local_8;
        }
                    // WARNING: Load size is inaccurate
        (**(code **)(*this + 0x50))(piVar1);
      }
    }
    if ((0 < uStack72._4_4_) && (uStack72._4_4_ = uStack72._4_4_ + -1, -1 < uStack72._4_4_)) {
      iVar5 = *(int *)((int)this + 0x19c8) + -1;
      iVar6 = iVar5;
      do {
        for (; -1 < iVar6; iVar6 = iVar6 + -1) {
          (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar6 * 4) + 0x34))
                    (*(undefined4 *)(local_50._0_4_ + uStack72._4_4_ * 4),1);
          iVar5 = *(int *)((int)this + 0x19c8) + -1;
          if (iVar5 < iVar6) {
            iVar6 = *(int *)((int)this + 0x19c8);
          }
        }
        uStack72._4_4_ = uStack72._4_4_ + -1;
        iVar6 = iVar5;
      } while (-1 < uStack72._4_4_);
    }
    if ((-1 < iStack32) && (local_28._0_4_ != 0)) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_28._0_4_);
      if (false) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
      }
    }
    _local_3c = ZEXT1216(_local_3c);
    puVar2 = local_3c._0_4_;
    if ((undefined  [12])0xffffffffffffffff < _local_3c) {
      if (local_3c._0_4_ != (uint *)0x0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_3c._0_4_);
        puVar2 = (uint *)0x0;
        _local_3c = _local_3c & (undefined  [16])0xffffffff00000000;
      }
      local_3c = ZEXT48(local_3c._0_4_);
    }
    local_2c = puVar2;
    if (-1 < (int)uStack52) {
      if (puVar2 != (uint *)0x0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(puVar2);
        _local_3c = _local_3c & (undefined  [16])0xffffffff00000000;
      }
      local_3c = ZEXT48(local_3c._0_4_);
    }
    _local_50 = ZEXT1216(_local_50);
    iVar5 = local_50._0_4_;
    if ((undefined  [12])0xffffffffffffffff < _local_50) {
      if (local_50._0_4_ != 0) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_50._0_4_);
        iVar5 = 0;
        _local_50 = _local_50 & (undefined  [16])0xffffffff00000000;
      }
    }
    if ((-1 < (int)uStack72) && (iVar5 != 0)) {
      local_40 = iVar5;
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar5);
    }
  }
  return;
}



void __thiscall FUN_004164c0(void *this,undefined4 param_1,int *param_2)

{
  int iVar1;
  undefined uVar2;
  uint uVar3;
  int *piVar4;
  uint *puVar5;
  undefined local_50 [68];
  undefined4 local_c [2];
  
  (**(code **)(*param_2 + 8))();
  local_c[0] = FUN_0040fc90((int)this + 0xf70);
  uVar3 = FUN_0040b090((void *)((int)this + 0x1b90),local_c);
  if (((uVar3 & 0xffff) != 0xffff) &&
     (piVar4 = *(int **)(*(int *)((int)this + 0x1b94) + 0xc + (uVar3 & 0xffff) * 0x10),
     piVar4 != (int *)0x0)) {
    uVar2 = (**(code **)(*param_2 + 0x18))();
    piVar4 = (int *)(**(code **)(*piVar4 + 0x28))(uVar2,0);
    if (piVar4 != (int *)0x0) {
      puVar5 = (uint *)(**(code **)(*param_2 + 4))();
      FUN_00417cc0(piVar4,puVar5);
      (**(code **)(*param_2 + 0x30))(local_50,0x40);
      (**(code **)(*piVar4 + 0x54))(local_50);
    }
    (**(code **)(*param_2 + 0xc))();
    iVar1 = *(int *)((int)this + 0x19c8);
    while (iVar1 = iVar1 + -1, -1 < iVar1) {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 0x58))(uVar2);
      if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
        iVar1 = *(int *)((int)this + 0x19c8);
      }
    }
  }
  return;
}



void __thiscall FUN_004165a0(void *this,undefined4 param_1,int *param_2)

{
  int *piVar1;
  int iVar2;
  undefined uVar3;
  uint uVar4;
  void *this_00;
  uint *puVar5;
  int local_c [2];
  
  (**(code **)(*param_2 + 8))();
  local_c[0] = (**(code **)(*param_2 + 0x20))();
  if (local_c[0] == 0) {
    local_c[0] = FUN_0040fc90((int)this + 0xf70);
  }
  uVar4 = FUN_0040b090((void *)((int)this + 0x1b90),local_c);
  if (((uVar4 & 0xffff) != 0xffff) &&
     (piVar1 = *(int **)(*(int *)((int)this + 0x1b94) + 0xc + (uVar4 & 0xffff) * 0x10),
     piVar1 != (int *)0x0)) {
    uVar3 = (**(code **)(*param_2 + 0x18))();
    this_00 = (void *)(**(code **)(*piVar1 + 0x28))(uVar3,0);
    if (this_00 != (void *)0x0) {
      puVar5 = (uint *)(**(code **)(*param_2 + 4))();
      FUN_00417cc0(this_00,puVar5);
    }
    (**(code **)(*param_2 + 0xc))();
    iVar2 = *(int *)((int)this + 0x19c8);
    while (iVar2 = iVar2 + -1, -1 < iVar2) {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar2 * 4) + 0x58))(uVar3);
      if (*(int *)((int)this + 0x19c8) + -1 < iVar2) {
        iVar2 = *(int *)((int)this + 0x19c8);
      }
    }
  }
  return;
}



void __thiscall FUN_00416670(void *this,undefined4 param_1,int *param_2)

{
  int iVar1;
  void *this_00;
  int iVar2;
  undefined4 uVar3;
  
                    // WARNING: Load size is inaccurate
  this_00 = (void *)(**(code **)(*this + 0xa0))();
  if (this_00 != (void *)0x0) {
    (**(code **)(*param_2 + 8))();
    iVar2 = (**(code **)(*param_2 + 0x20))();
    if (iVar2 == 0) {
      iVar2 = 0;
    }
    else {
      uVar3 = (**(code **)(*param_2 + 4))();
      iVar2 = FUN_00417d60(this_00,iVar2,uVar3);
    }
    (**(code **)(*param_2 + 0xc))();
    iVar1 = *(int *)((int)this + 0x19c8);
    while (iVar1 = iVar1 + -1, -1 < iVar1) {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 0x5c))(iVar2);
      if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
        iVar1 = *(int *)((int)this + 0x19c8);
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall FUN_004166f0(void *this,undefined4 param_1,int *param_2)

{
  uint uVar1;
  uint uVar2;
  uint *puVar3;
  int iVar4;
  undefined4 *puVar5;
  int *piVar6;
  int iVar7;
  undefined local_18 [8];
  undefined4 local_10;
  undefined8 local_c;
  
  local_10 = FUN_0040fc90((int)this + 0xf70);
  uVar1 = FUN_0040b090((void *)((int)this + 0x1b90),&local_10);
  if (((uVar1 & 0xffff) != 0xffff) &&
     (local_c._4_4_ = *(int **)(*(int *)((int)this + 0x1b94) + 0xc + (uVar1 & 0xffff) * 0x10),
     local_c._4_4_ != (int *)0x0)) {
    piVar6 = (int *)0x0;
    (**(code **)(*param_2 + 8))();
    uVar1 = (**(code **)(*param_2 + 0x18))();
    uVar1 = uVar1 & 0xff;
    uVar2 = FUN_0040fca0((int)this + 0xf70);
    if ((uVar1 == uVar2) &&
       (piVar6 = (int *)(**(code **)(*local_c._4_4_ + 0x28))(uVar1,0), piVar6 != (int *)0x0)) {
      puVar3 = (uint *)(**(code **)(*param_2 + 4))();
      FUN_00417dd0(piVar6,puVar3);
    }
    (**(code **)(*param_2 + 0xc))();
    local_c = CONCAT44(local_c._4_4_,(undefined4)local_c);
    if ((*(char *)((int)this + 0x1c28) != '\0') &&
       (local_c = CONCAT44(local_c._4_4_,(undefined4)local_c), piVar6 != (int *)0x0)) {
      local_c = (**(code **)(*piVar6 + 0x18))();
      iVar4 = (**(code **)(**(int **)((int)this + 0x1bdc) + 0x60))(local_c);
      iVar7 = 0;
      if (0 < iVar4) {
        do {
          puVar5 = (undefined4 *)
                   (**(code **)(**(int **)((int)this + 0x1bdc) + 100))(local_18,local_c,iVar7);
          piVar6 = FUN_00408590((void *)((int)this + 0x1bac),*puVar5,puVar5[1]);
          if (piVar6 != (int *)0x0) {
            FUN_00408f60(this,piVar6,0);
          }
          iVar7 = iVar7 + 1;
        } while (iVar7 < iVar4);
      }
    }
    iVar4 = *(int *)((int)this + 0x19c8);
    while (iVar4 = iVar4 + -1, -1 < iVar4) {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar4 * 4) + 0x58))(uVar1);
      if (*(int *)((int)this + 0x19c8) + -1 < iVar4) {
        iVar4 = *(int *)((int)this + 0x19c8);
      }
    }
  }
  return;
}



void __thiscall FUN_00416840(void *this,undefined4 param_1,int *param_2)

{
  undefined uVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  undefined4 uVar5;
  int *piVar6;
  
                    // WARNING: Load size is inaccurate
  piVar2 = (int *)(**(code **)(*this + 0xa0))();
  if (piVar2 != (int *)0x0) {
    piVar6 = (int *)0x0;
    (**(code **)(*param_2 + 8))();
    iVar3 = (**(code **)(*param_2 + 0x20))();
    if ((iVar3 != 0) &&
       (piVar6 = (int *)(**(code **)(*piVar2 + 0x3c))(iVar3,0), piVar6 != (int *)0x0)) {
      iVar4 = *piVar6;
      uVar1 = (**(code **)(*param_2 + 0x18))();
      (**(code **)(iVar4 + 0x24))(uVar1);
      iVar4 = (***(code ***)((int)this + 0xf70))();
      if (iVar3 == iVar4) {
        iVar3 = *(int *)((int)this + 0xf70);
        uVar5 = (**(code **)(*piVar6 + 0x20))();
        (**(code **)(iVar3 + 0x24))(uVar5);
      }
    }
    (**(code **)(*param_2 + 0xc))();
    iVar3 = *(int *)((int)this + 0x19c8);
    while (iVar3 = iVar3 + -1, -1 < iVar3) {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar3 * 4) + 0x5c))(piVar6);
      if (*(int *)((int)this + 0x19c8) + -1 < iVar3) {
        iVar3 = *(int *)((int)this + 0x19c8);
      }
    }
  }
  return;
}



void __thiscall FUN_00416910(void *this,undefined4 param_1,int *param_2)

{
  undefined uVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  undefined4 uVar5;
  int *piVar6;
  
                    // WARNING: Load size is inaccurate
  piVar2 = (int *)(**(code **)(*this + 0xa0))();
  if (piVar2 != (int *)0x0) {
    piVar6 = (int *)0x0;
    (**(code **)(*param_2 + 8))();
    iVar3 = (**(code **)(*param_2 + 0x20))();
    if ((iVar3 != 0) &&
       (piVar6 = (int *)(**(code **)(*piVar2 + 0x3c))(iVar3,0), piVar6 != (int *)0x0)) {
      iVar4 = *piVar6;
      uVar1 = (**(code **)(*param_2 + 0x18))();
      (**(code **)(iVar4 + 0x1c))(uVar1);
      iVar4 = (***(code ***)((int)this + 0xf70))();
      if (iVar3 == iVar4) {
        iVar3 = *(int *)((int)this + 0xf70);
        uVar5 = (**(code **)(*piVar6 + 0x18))();
        (**(code **)(iVar3 + 0x1c))(uVar5);
      }
    }
    (**(code **)(*param_2 + 0xc))();
    iVar3 = *(int *)((int)this + 0x19c8);
    while (iVar3 = iVar3 + -1, -1 < iVar3) {
      (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar3 * 4) + 0x5c))(piVar6);
      if (*(int *)((int)this + 0x19c8) + -1 < iVar3) {
        iVar3 = *(int *)((int)this + 0x19c8);
      }
    }
  }
  return;
}



void __thiscall FUN_004169e0(void *this,undefined4 param_1,int *param_2)

{
  void **this_00;
  uint uVar1;
  uint *puVar2;
  
  (**(code **)(*param_2 + 8))();
  uVar1 = (**(code **)(*param_2 + 0x18))();
  if ((uVar1 & 0xff) != 0) {
    this_00 = (void **)((int)this + 0x1c);
    *(undefined4 *)((int)this + 0x28) = 0;
    *(undefined4 *)((int)this + 0x2c) = 0;
    *(undefined *)((int)this + 0x30) = 0;
    *(undefined4 *)((int)this + 0x3c) = 0;
    *(undefined4 *)((int)this + 0x38) = 0xffffffff;
    FUN_004223b0(this_00,0);
    FUN_0040f2c0(uVar1 & 0xff,param_2,this_00);
    FUN_00411d80((void *)((int)this + 0x638),(uint *)this_00);
    (**(code **)(*param_2 + 0xc))();
    return;
  }
  puVar2 = (uint *)(**(code **)(*param_2 + 4))();
  FUN_00411d80((void *)((int)this + 0x638),puVar2);
  (**(code **)(*param_2 + 0xc))();
  return;
}



void __thiscall FUN_00416a80(void *this,undefined4 param_1,int *param_2)

{
  int iVar1;
  uint uVar2;
  void **this_00;
  void *this_01;
  
  (**(code **)(*param_2 + 8))();
  uVar2 = (**(code **)(*param_2 + 0x18))();
  if ((uVar2 & 0xff) == 0) {
    this_00 = (void **)(**(code **)(*param_2 + 4))();
  }
  else {
    this_00 = (void **)((int)this + 0x1c);
    *(undefined4 *)((int)this + 0x28) = 0;
    *(undefined4 *)((int)this + 0x2c) = 0;
    *(undefined *)((int)this + 0x30) = 0;
    *(undefined4 *)((int)this + 0x3c) = 0;
    *(undefined4 *)((int)this + 0x38) = 0xffffffff;
    FUN_004223b0(this_00,0);
    FUN_0040f2c0(uVar2 & 0xff,param_2,this_00);
  }
  this_01 = (void *)FUN_00413490(DAT_0044a6a8);
  FUN_0040c2e0(this_01,(int *)this_00);
  (**(code **)(*param_2 + 0xc))();
  iVar1 = *(int *)((int)this + 0x19c8);
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 0x38))();
    if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
      iVar1 = *(int *)((int)this + 0x19c8);
    }
  }
  return;
}



void __thiscall FUN_00416b40(void *this,undefined4 param_1,int *param_2)

{
  char cVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  undefined4 uVar5;
  void *this_00;
  
  (**(code **)(*param_2 + 8))();
  iVar2 = (**(code **)(*param_2 + 0x20))();
  iVar3 = (***(code ***)((int)this + 0xf70))();
  if (iVar2 == iVar3) {
    cVar1 = (**(code **)(*param_2 + 0x28))();
    piVar4 = (int *)(**(code **)(*(int *)((int)this + 0xf70) + 0x78))();
    (**(code **)(*piVar4 + 0x1c))();
    piVar4 = (int *)0x1;
    uVar5 = (**(code **)(*param_2 + 4))();
    this_00 = (void *)(**(code **)(*(int *)((int)this + 0xf70) + 0x78))(uVar5);
    FUN_0040e8a0(this_00,piVar4,cVar1);
  }
  (**(code **)(*param_2 + 0xc))();
  iVar2 = *(int *)((int)this + 0x19c8);
  while (iVar2 = iVar2 + -1, -1 < iVar2) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar2 * 4) + 0x44))();
    if (*(int *)((int)this + 0x19c8) + -1 < iVar2) {
      iVar2 = *(int *)((int)this + 0x19c8);
    }
  }
  return;
}



void __thiscall FUN_00416bf0(void *this,undefined4 param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  void *pvVar3;
  void *this_00;
  int *piVar4;
  
  (**(code **)(*param_2 + 8))();
  iVar1 = (**(code **)(*param_2 + 0x20))();
  iVar2 = (***(code ***)((int)this + 0xf70))();
  if (iVar1 == iVar2) {
    piVar4 = *(int **)((int)this + 0x1bf8);
    pvVar3 = (void *)(**(code **)(*param_2 + 4))();
    this_00 = (void *)(**(code **)(*(int *)((int)this + 0xf70) + 0x78))();
    FUN_0040e940(this_00,pvVar3,piVar4);
  }
  (**(code **)(*param_2 + 0xc))();
  iVar1 = *(int *)((int)this + 0x19c8);
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(*(int *)((int)this + 0x19bc) + iVar1 * 4) + 0x48))();
    if (*(int *)((int)this + 0x19c8) + -1 < iVar1) {
      iVar1 = *(int *)((int)this + 0x19c8);
    }
  }
  return;
}



void __fastcall FUN_00416c90(int param_1)

{
  uint uVar1;
  undefined4 local_20 [4];
  code *local_10;
  undefined4 local_c;
  undefined4 local_8;
  
  local_10 = FUN_00416210;
  local_c = 0;
  local_8 = 0x5a;
  local_20[0] = 0x5a;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00415cc0;
  local_c = 0;
  local_8 = 0x5d;
  local_20[0] = 0x5d;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00416a80;
  local_c = 0;
  local_8 = 0x32;
  local_20[0] = 0x32;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_004169e0;
  local_c = 0;
  local_8 = 0x33;
  local_20[0] = 0x33;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_004159a0;
  local_c = 0;
  local_8 = 0x34;
  local_20[0] = 0x34;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00415ae0;
  local_c = 0;
  local_8 = 0x36;
  local_20[0] = 0x36;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00416b40;
  local_c = 0;
  local_8 = 0x46;
  local_20[0] = 0x46;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00416bf0;
  local_c = 0;
  local_8 = 0x48;
  local_20[0] = 0x48;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00415c30;
  local_c = 0;
  local_8 = 0x5b;
  local_20[0] = 0x5b;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00415f90;
  local_c = 0;
  local_8 = 0x60;
  local_20[0] = 0x60;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00416090;
  local_c = 0;
  local_8 = 0x61;
  local_20[0] = 0x61;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_004164c0;
  local_c = 0;
  local_8 = 0x5e;
  local_20[0] = 0x5e;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_004165a0;
  local_c = 0;
  local_8 = 0x5f;
  local_20[0] = 0x5f;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00416670;
  local_c = 0;
  local_8 = 99;
  local_20[0] = 99;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00416840;
  local_c = 0;
  local_8 = 100;
  local_20[0] = 100;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00416910;
  local_c = 0;
  local_8 = 0x65;
  local_20[0] = 0x65;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_004166f0;
  local_c = 0;
  local_8 = 0x66;
  local_20[0] = 0x66;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00415f40;
  local_c = 0;
  local_8 = 0x6f;
  local_20[0] = 0x6f;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00415850;
  local_c = 0;
  local_8 = 0x6d;
  local_20[0] = 0x6d;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00415900;
  local_c = 0;
  local_8 = 0x70;
  local_20[0] = 0x70;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_004156c0;
  local_c = 0;
  local_8 = 0x83;
  local_20[0] = 0x83;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00415620;
  local_c = 0;
  local_8 = 0x82;
  local_20[0] = 0x82;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  local_10 = FUN_00414d70;
  local_c = 0;
  local_8 = 0x71;
  local_20[0] = 0x71;
  uVar1 = FUN_00411330((void *)(param_1 + 0x1b74),local_20);
  if ((short)uVar1 == -1) {
    FUN_00414ed0((void *)(param_1 + 0x1b74),&local_8,&local_10);
  }
  return;
}



undefined4 * __fastcall FUN_004172b0(undefined4 *param_1)

{
  FUN_0040c450(param_1);
  *param_1 = fixapi2_impl::CFixGameSocket::vftable;
  return param_1;
}



void __fastcall FUN_004172d0(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixGameSocket::vftable;
  FUN_0040c4a0(param_1);
  return;
}



undefined4 * __thiscall FUN_004172e0(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixGameSocket::vftable;
  FUN_0040c4a0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



// WARNING: Could not reconcile some variable overlaps

int __fastcall FUN_00417310(int param_1)

{
  int *this;
  ushort uVar1;
  int iVar2;
  int iVar3;
  char cVar4;
  uint *puVar5;
  uint uVar6;
  uint *puVar7;
  int iVar8;
  byte *pbVar9;
  uint local_28;
  byte *local_24;
  byte *local_20;
  int local_1c;
  uint local_18;
  uint local_14;
  int local_10;
  uint local_c;
  uint local_8;
  
  local_1c = *(int *)(param_1 + 0x40);
  iVar8 = *(int *)(param_1 + 0x44);
  local_10 = param_1;
  if (local_1c < iVar8) {
    while( true ) {
      iVar3 = local_10;
      iVar2 = *(int *)(local_10 + 0x40);
      iVar8 = iVar8 - iVar2;
      param_1 = local_10;
      if (iVar8 < 4) break;
      this = (int *)(local_10 + 0x34);
      if ((*(byte *)(local_10 + 0x49) & 1) == 0) {
        cVar4 = FUN_00422510(this,2);
        if (cVar4 == '\0') goto LAB_004173e6;
        if ((*(byte *)(iVar3 + 0x60) & 1) == 0) {
          local_c = (uint)*(ushort *)((*(int *)(iVar3 + 0x40) - *(int *)(iVar3 + 0x54)) + *this);
LAB_004173ca:
          *(int *)(iVar3 + 0x40) = *(int *)(iVar3 + 0x40) + 2;
        }
        else {
          puVar5 = (uint *)((*(int *)(iVar3 + 0x40) - *(int *)(iVar3 + 0x54)) + *this);
          puVar7 = &local_c;
          if (puVar5 != (uint *)0x0) {
            puVar7 = puVar5;
          }
          if ((*(byte *)(iVar3 + 0x60) & 1) == 0) {
            if ((puVar7 == (uint *)0x0) || (&local_c == puVar7)) goto LAB_004173ca;
            uVar1 = *(ushort *)puVar7;
            *(int *)(iVar3 + 0x40) = *(int *)(iVar3 + 0x40) + 2;
            local_c = local_c & 0xffff0000 | (uint)uVar1;
          }
          else {
            local_14 = (uint)CONCAT11(*(undefined *)puVar7,*(undefined *)((int)puVar7 + 1));
            FID_conflict__memcpy(&local_c,&local_14,2);
            *(int *)(iVar3 + 0x40) = *(int *)(iVar3 + 0x40) + 2;
          }
        }
      }
      else {
        local_28 = 0x80;
        uVar6 = FUN_004224a0(this,0,(int *)&local_28);
        if ((char)uVar6 != '\0') {
          pbVar9 = (byte *)((*(int *)(iVar3 + 0x40) - *(int *)(iVar3 + 0x54)) + *this);
          local_20 = pbVar9;
          local_c = FUN_0042819d(pbVar9,&local_20,10);
          local_c = local_c & 0xffff;
          if ((int)local_20 - (int)pbVar9 != 0) {
            *(int *)(iVar3 + 0x40) = *(int *)(iVar3 + 0x40) + ((int)local_20 - (int)pbVar9);
          }
          goto LAB_00417419;
        }
LAB_004173e6:
        local_c = 0;
      }
LAB_00417419:
      if ((*(byte *)(iVar3 + 0x49) & 1) == 0) {
        cVar4 = FUN_00422510(this,2);
        if (cVar4 == '\0') goto LAB_004174bb;
        if ((*(byte *)(iVar3 + 0x60) & 1) == 0) {
          local_8 = (uint)*(ushort *)((*this - *(int *)(iVar3 + 0x54)) + *(int *)(iVar3 + 0x40));
LAB_0041749f:
          *(int *)(iVar3 + 0x40) = *(int *)(iVar3 + 0x40) + 2;
        }
        else {
          puVar5 = (uint *)((*this - *(int *)(iVar3 + 0x54)) + *(int *)(iVar3 + 0x40));
          puVar7 = &local_8;
          if (puVar5 != (uint *)0x0) {
            puVar7 = puVar5;
          }
          if ((*(byte *)(iVar3 + 0x60) & 1) == 0) {
            if ((puVar7 == (uint *)0x0) || (&local_8 == puVar7)) goto LAB_0041749f;
            uVar1 = *(ushort *)puVar7;
            *(int *)(iVar3 + 0x40) = *(int *)(iVar3 + 0x40) + 2;
            local_8 = local_8 & 0xffff0000 | (uint)uVar1;
          }
          else {
            local_18 = (uint)CONCAT11(*(undefined *)puVar7,*(undefined *)((int)puVar7 + 1));
            FID_conflict__memcpy(&local_8,&local_18,2);
            *(int *)(iVar3 + 0x40) = *(int *)(iVar3 + 0x40) + 2;
          }
        }
      }
      else {
        local_28 = 0x80;
        uVar6 = FUN_004224a0(this,0,(int *)&local_28);
        if ((char)uVar6 != '\0') {
          pbVar9 = (byte *)((*this - *(int *)(iVar3 + 0x54)) + *(int *)(iVar3 + 0x40));
          local_24 = pbVar9;
          local_8 = FUN_0042819d(pbVar9,&local_24,10);
          local_8 = local_8 & 0xffff;
          if ((int)local_24 - (int)pbVar9 != 0) {
            *(int *)(iVar3 + 0x40) = *(int *)(iVar3 + 0x40) + ((int)local_24 - (int)pbVar9);
          }
          goto LAB_004174ee;
        }
LAB_004174bb:
        local_8 = 0;
      }
LAB_004174ee:
      local_28 = local_8 & 0xffff;
      if (iVar8 + 4 < (int)local_28) {
        FUN_00423340((void *)(local_10 + 0x34),0,iVar2);
        param_1 = local_10;
        break;
      }
      (**(code **)(**(int **)(local_10 + 100) + 8))
                (local_10,local_c & 0xffff,*(int *)(local_10 + 0x40) + *this,local_28);
      FUN_00423340(this,1,local_8 & 0xffff);
      FUN_0040f440((int *)0x0,DAT_0044a6d8,(byte *)"Game Read packet %d of size %d handled %d");
      iVar8 = *(int *)(local_10 + 0x44);
      if (iVar8 <= *(int *)(local_10 + 0x40)) {
        return *(int *)(local_10 + 0x40) - local_1c;
      }
    }
  }
  return *(int *)(param_1 + 0x40) - local_1c;
}



undefined4 * __thiscall FUN_00417590(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixGamePacket::vftable;
  FUN_004133d0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * FUN_004175c0(void)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_00403c30(0x38);
  if (puVar1 != (undefined4 *)0x0) {
    FUN_004133a0(puVar1);
    *puVar1 = fixapi2_impl::CFixGamePacket::vftable;
    return puVar1;
  }
  return (undefined4 *)0x0;
}



undefined4 * __thiscall FUN_004175f0(void *this,undefined4 param_1,undefined4 param_2)

{
  *(undefined ***)this = fixapi2_impl::CFixRoom::vftable;
  *(undefined ***)((int)this + 0xa0) = fixapi2_impl::CFixRoom::CFixRoomConfig::vftable;
  *(undefined4 *)((int)this + 0xac) = 0;
  *(undefined4 *)((int)this + 0xb0) = 0;
  *(undefined4 *)((int)this + 0xa4) = 0;
  *(undefined2 *)((int)this + 0xa8) = 0x400;
  *(undefined *)((int)this + 0xaa) = 0x10;
  *(undefined4 *)((int)this + 0xb8) = 2;
  *(undefined4 *)((int)this + 0xbc) = 0;
  *(undefined2 *)((int)this + 0xc0) = 0;
  *(undefined *)((int)this + 0xc2) = 0;
  *(undefined4 *)((int)this + 0xc4) = 0;
  *(undefined *)((int)this + 200) = 0;
  *(undefined4 *)((int)this + 0xcc) = 0;
  *(undefined4 *)((int)this + 0xd0) = 0;
  *(undefined4 *)((int)this + 0xd8) = 0;
  *(undefined4 *)((int)this + 0xdc) = 0;
  *(undefined4 *)((int)this + 0xe0) = 0;
  *(undefined4 *)((int)this + 0xe8) = *(undefined4 *)((int)this + 0xd8);
  *(undefined4 *)((int)this + 0xe4) = 0;
  *(undefined4 *)((int)this + 0xec) = param_2;
  *(undefined4 *)((int)this + 4) = param_1;
  *(undefined *)((int)this + 0x10) = 0;
  *(undefined *)((int)this + 0x51) = 0;
  *(undefined4 *)((int)this + 0x94) = 0;
  *(undefined4 *)((int)this + 0x98) = 0xffffffff;
  *(undefined4 *)((int)this + 0x9c) = 0xffffffff;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  return (undefined4 *)this;
}



void __fastcall FUN_00417700(undefined4 *param_1)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  uint *puVar4;
  int iVar5;
  
  iVar1 = param_1[0x39];
  *param_1 = fixapi2_impl::CFixRoom::vftable;
  do {
    iVar1 = iVar1 + -1;
    if (iVar1 < 0) {
      param_1[0x39] = 0;
      if (-1 < (int)param_1[0x38]) {
        if (param_1[0x36] != 0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(param_1[0x36]);
          param_1[0x36] = 0;
        }
        param_1[0x37] = 0;
      }
      iVar1 = param_1[0x36];
      param_1[0x3a] = iVar1;
      if (-1 < (int)param_1[0x38]) {
        if (iVar1 != 0) {
          (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar1);
          param_1[0x36] = 0;
        }
        param_1[0x37] = 0;
      }
      param_1[0x28] = fixapi2_impl::CFixRoom::CFixRoomConfig::vftable;
      return;
    }
    puVar4 = (uint *)param_1[0x36];
    iVar5 = 0;
    iVar2 = param_1[0x39];
    uVar3 = puVar4[iVar1];
    if (0 < iVar2) {
      do {
        if (*puVar4 == uVar3) {
          if ((iVar5 != -1) && (0 < iVar2)) {
            if (iVar5 != iVar2 + -1) {
              *(undefined4 *)(param_1[0x36] + iVar5 * 4) =
                   *(undefined4 *)(param_1[0x36] + -4 + iVar2 * 4);
            }
            param_1[0x39] = param_1[0x39] + -1;
          }
          break;
        }
        iVar5 = iVar5 + 1;
        puVar4 = puVar4 + 1;
      } while (iVar5 < iVar2);
    }
    FUN_00417a60((void *)param_1[0x3b],uVar3,'\0');
  } while( true );
}



undefined4 * __thiscall FUN_00417810(void *this,byte param_1)

{
  FUN_00417700((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00417840(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixRoom::CFixRoomConfig::vftable;
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



void __fastcall FUN_00417870(int *param_1)

{
  int iVar1;
  
  iVar1 = param_1[0x39];
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(*param_1 + 0x5c))(*(undefined4 *)(param_1[0x36] + iVar1 * 4));
  }
  return;
}



undefined __fastcall FUN_004178a0(int param_1)

{
  return *(undefined *)(param_1 + 0x28);
}



undefined8 __fastcall FUN_004178b0(int param_1)

{
  return *(undefined8 *)(param_1 + 0x98);
}



undefined __fastcall FUN_004178c0(int param_1)

{
  return *(undefined *)(param_1 + 0x21);
}



int __fastcall FUN_004178d0(int param_1)

{
  return param_1 + 0xa0;
}



undefined __fastcall FUN_004178e0(int param_1)

{
  return *(undefined *)(param_1 + 0x22);
}



undefined8 __fastcall FUN_004178f0(int param_1)

{
  return *(undefined8 *)(param_1 + 8);
}



undefined8 __fastcall FUN_00417900(int param_1)

{
  return *(undefined8 *)(param_1 + 0xb8);
}



undefined4 __fastcall FUN_00417910(int param_1)

{
  return *(undefined4 *)(param_1 + 0xa4);
}



undefined4 __fastcall FUN_00417920(int param_1)

{
  return *(undefined4 *)(param_1 + 0x178);
}



undefined4 __fastcall FUN_00417930(int param_1)

{
  return *(undefined4 *)(param_1 + 0x174);
}



undefined __fastcall FUN_00417940(int param_1)

{
  return *(undefined *)(param_1 + 0xc0);
}



int __fastcall FUN_00417950(int param_1)

{
  return param_1 + 0x10;
}



int __fastcall FUN_00417960(int param_1)

{
  return param_1 + 0x51;
}



uint __fastcall FUN_00417970(int param_1)

{
  return *(uint *)(param_1 + 0xc) >> 1 & 1;
}



int __fastcall FUN_00417980(int param_1)

{
  return param_1 + 0xf0;
}



undefined4 __fastcall FUN_00417990(int param_1)

{
  return *(undefined4 *)(param_1 + 0x170);
}



undefined4 __fastcall FUN_004179a0(int param_1)

{
  return *(undefined4 *)(param_1 + 0x94);
}



uint __fastcall FUN_004179b0(int param_1)

{
  return *(uint *)(param_1 + 0xc) >> 2 & 1;
}



void __fastcall FUN_004179c0(int *param_1,undefined param_2,undefined4 param_3,undefined4 param_4)

{
                    // WARNING: Could not recover jumptable at 0x004179e7. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(*param_1 + 0x58))();
  return;
}



undefined __fastcall FUN_004179f0(int param_1)

{
  return *(undefined *)(param_1 + 0xa8);
}



undefined4 __thiscall FUN_00417a00(void *this,int param_1)

{
  if (*(int *)((int)this + 0xe4) == param_1 || *(int *)((int)this + 0xe4) < param_1) {
    return 0;
  }
  return *(undefined4 *)(*(int *)((int)this + 0xd8) + param_1 * 4);
}



undefined4 __fastcall FUN_00417a30(int param_1)

{
  return *(undefined4 *)(param_1 + 0xe4);
}



undefined __fastcall FUN_00417a40(int param_1)

{
  return *(undefined *)(param_1 + 0xaa);
}



undefined __fastcall FUN_00417a50(int param_1)

{
  return *(undefined *)(param_1 + 0xa9);
}



void __thiscall FUN_00417a60(void *this,uint param_1,char param_2)

{
  undefined4 uVar1;
  ushort uVar2;
  int iVar3;
  undefined4 *puVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  ushort uVar8;
  uint uVar9;
  bool bVar10;
  uint local_c [2];
  
  if (param_2 == '\0') {
    iVar3 = (**(code **)(**(int **)((int)this + 4) + 8))();
    if (iVar3 != 0) {
      puVar4 = (undefined4 *)(**(code **)(**(int **)((int)this + 4) + 8))();
      uVar5 = (**(code **)*puVar4)();
      if (uVar5 == param_1) {
        return;
      }
    }
    local_c[0] = param_1;
    uVar5 = FUN_0040b090((void *)((int)this + 8),local_c);
    uVar5 = uVar5 & 0xffff;
  }
  else {
    uVar7 = 0;
    uVar5 = param_1;
    if (*(short *)((int)this + 0x10) != 0) {
      uVar6 = (uint)*(ushort *)((int)this + 0x10);
      uVar9 = param_1;
      do {
        uVar5 = uVar7 & 0xffff;
        if ((uVar5 < *(uint *)((int)this + 0x10)) &&
           (uVar8 = (ushort)uVar5,
           uVar8 < *(ushort *)((int)this + 0x1e) || uVar8 == *(ushort *)((int)this + 0x1e))) {
          bVar10 = uVar8 == 0xffff;
          if (!bVar10) {
            bVar10 = *(ushort *)(*(int *)((int)this + 0xc) + uVar5 * 0x10) == uVar8;
          }
          if ((!bVar10) && (uVar9 = uVar9 - 1, uVar5 = uVar7, (int)uVar9 < 0)) break;
          uVar6 = (uint)*(ushort *)((int)this + 0x10);
        }
        uVar7 = uVar7 + 1;
        uVar5 = param_1;
      } while ((int)uVar7 < (int)uVar6);
    }
  }
  param_1 = uVar5;
  uVar5 = param_1 & 0xffff;
  if ((uVar5 < *(uint *)((int)this + 0x10)) &&
     (uVar8 = (ushort)param_1,
     uVar8 < *(ushort *)((int)this + 0x1e) || uVar8 == *(ushort *)((int)this + 0x1e))) {
    if (uVar8 == 0xffff) {
      uVar2 = 0xffff;
    }
    else {
      uVar2 = *(ushort *)(*(int *)((int)this + 0xc) + uVar5 * 0x10);
    }
    if (uVar2 != uVar8) {
      uVar1 = *(undefined4 *)(*(int *)((int)this + 0xc) + 0xc + uVar5 * 0x10);
      if (uVar8 != 0xffff) {
        FUN_0041c4d0((void *)((int)this + 8),uVar8);
        *(ushort *)(*(int *)((int)this + 0xc) + uVar5 * 0x10) = uVar8;
        *(undefined2 *)(*(int *)((int)this + 0xc) + 2 + uVar5 * 0x10) =
             *(undefined2 *)((int)this + 0x1c);
        *(short *)((int)this + 0x1a) = *(short *)((int)this + 0x1a) + -1;
        *(ushort *)((int)this + 0x1c) = uVar8;
      }
      (**(code **)(**(int **)((int)this + 4) + 4))(uVar1);
    }
  }
  return;
}



void __thiscall FUN_00417ba0(void *this,int param_1)

{
  FUN_0041e1d0((char *)((int)this + 0x51),param_1,0x40);
  return;
}



void __thiscall FUN_00417bc0(void *this,uint *param_1)

{
  uint uVar1;
  undefined4 uVar2;
  undefined8 uVar3;
  ulonglong uVar4;
  
  uVar3 = FUN_0040f900(param_1);
  *(int *)((int)this + 8) = (int)uVar3;
  *(int *)((int)this + 0xc) = (int)((ulonglong)uVar3 >> 0x20);
  uVar1 = FUN_0040f920(param_1);
  *(uint *)((int)this + 0xac) = uVar1 & 0xffff;
  uVar2 = FUN_0040f880(param_1);
  *(undefined4 *)((int)this + 0xb0) = uVar2;
  uVar1 = FUN_0040f810(param_1,(void *)((int)this + 0x10),0x40);
  if (0x40 < (int)uVar1) {
    uVar1 = 0x40;
  }
  *(undefined *)(uVar1 + 0x10 + (int)this) = 0;
  uVar1 = FUN_0040f770(param_1);
  *(char *)((int)this + 0xa8) = (char)uVar1;
  uVar1 = FUN_0040f770(param_1);
  *(char *)((int)this + 0xa9) = (char)uVar1;
  uVar1 = FUN_0040f770(param_1);
  *(char *)((int)this + 0xaa) = (char)uVar1;
  uVar1 = FUN_0040f770(param_1);
  *(uint *)((int)this + 0x94) = uVar1 & 0xff;
  uVar3 = FUN_0040f900(param_1);
  *(int *)((int)this + 0xb8) = (int)uVar3;
  *(int *)((int)this + 0xbc) = (int)((ulonglong)uVar3 >> 0x20);
  uVar1 = FUN_0040f770(param_1);
  *(char *)((int)this + 0xc0) = (char)uVar1;
  uVar1 = FUN_0040f810(param_1,(void *)((int)this + 0xf0),0x80);
  if (0x80 < (int)uVar1) {
    uVar1 = 0x80;
  }
  *(undefined *)(uVar1 + 0xf0 + (int)this) = 0;
  uVar2 = FUN_0040f880(param_1);
  *(undefined4 *)((int)this + 0x170) = uVar2;
  uVar4 = FUN_0040f8a0((int *)param_1);
  *(int *)((int)this + 0x174) = (int)uVar4;
  uVar4 = FUN_0040f8a0((int *)param_1);
  *(int *)((int)this + 0x178) = (int)uVar4;
  return;
}



void __thiscall FUN_00417cc0(void *this,uint *param_1)

{
  undefined4 uVar1;
  uint uVar2;
  ulonglong uVar3;
  
  FUN_00417bc0(this,param_1);
  uVar3 = FUN_0040f8a0((int *)param_1);
  *(int *)((int)this + 0x98) = (int)uVar3;
  *(int *)((int)this + 0x9c) = (int)(uVar3 >> 0x20);
  uVar1 = FUN_0040f880(param_1);
  *(undefined4 *)((int)this + 0xa4) = uVar1;
  uVar2 = FUN_0040f770(param_1);
  *(char *)((int)this + 0xc1) = (char)uVar2;
  uVar2 = FUN_0040f770(param_1);
  *(char *)((int)this + 0xc2) = (char)uVar2;
  uVar1 = FUN_0040f880(param_1);
  *(undefined4 *)((int)this + 0xc4) = uVar1;
  uVar2 = FUN_0040f770(param_1);
  *(char *)((int)this + 200) = (char)uVar2;
  if ((byte)(*(char *)((int)this + 0xc0) - 1U) < 2) {
    uVar2 = FUN_0040f920(param_1);
    *(uint *)((int)this + 0xcc) = uVar2 & 0xffff;
    uVar2 = FUN_0040f920(param_1);
    *(uint *)((int)this + 0xd0) = uVar2 & 0xffff;
  }
  return;
}



int __thiscall FUN_00417d60(void *this,int param_1,undefined4 param_2)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  
  iVar1 = param_1;
                    // WARNING: Load size is inaccurate
  iVar2 = (**(code **)(*this + 0x58))(param_1,1);
  if (iVar2 != 0) {
    if (0 < *(int *)((int)this + 0xe4)) {
      piVar3 = *(int **)((int)this + 0xd8);
      iVar4 = 0;
      do {
        if (*piVar3 == iVar1) {
          if (iVar4 != -1) goto LAB_00417db4;
          break;
        }
        iVar4 = iVar4 + 1;
        piVar3 = piVar3 + 1;
      } while (iVar4 < *(int *)((int)this + 0xe4));
    }
    FUN_004058e0((void *)((int)this + 0xd8),&param_1);
LAB_00417db4:
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x60))(iVar2,param_2);
  }
  return iVar2;
}



void __thiscall FUN_00417dd0(void *this,uint *param_1)

{
  uint uVar1;
  int iVar2;
  
  uVar1 = FUN_0040f770(param_1);
  for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {
    iVar2 = FUN_0040f880(param_1);
                    // WARNING: Load size is inaccurate
    if ((iVar2 != 0) && (iVar2 = (**(code **)(*this + 0x58))(iVar2,1), iVar2 != 0)) {
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x60))(iVar2,param_1);
    }
  }
  return;
}



void __thiscall FUN_00417e20(void *this,int param_1,undefined4 param_2)

{
  int iVar1;
  
  if (param_1 != 0) {
                    // WARNING: Load size is inaccurate
    iVar1 = (**(code **)(*this + 0x58))(param_1,1);
    if (iVar1 != 0) {
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x60))(iVar1,param_2);
    }
  }
  return;
}



void __thiscall FUN_00417e50(void *this,undefined4 param_1)

{
                    // WARNING: Load size is inaccurate
  (**(code **)(*this + 0x5c))(param_1);
  return;
}



int __thiscall FUN_00417e60(void *this,uint param_1,undefined4 param_2)

{
  uint uVar1;
  int iVar2;
  uint *puVar3;
  int iVar4;
  
  uVar1 = param_1;
  iVar2 = FUN_00408440(*(void **)((int)this + 0xec),param_1,0,(char)param_2);
  if (iVar2 != 0) {
    iVar4 = 0;
    if (0 < *(int *)((int)this + 0xe4)) {
      puVar3 = *(uint **)((int)this + 0xd8);
      do {
        if (*puVar3 == uVar1) {
          if (-1 < iVar4) {
            return iVar2;
          }
          break;
        }
        iVar4 = iVar4 + 1;
        puVar3 = puVar3 + 1;
      } while (iVar4 < *(int *)((int)this + 0xe4));
    }
    FUN_004058e0((void *)((int)this + 0xd8),&param_1);
  }
  return iVar2;
}



void __thiscall FUN_00417ec0(void *this,uint param_1)

{
  int iVar1;
  uint *puVar2;
  uint *puVar3;
  int iVar4;
  
  iVar1 = *(int *)((int)this + 0xe4);
  iVar4 = 0;
  if (0 < iVar1) {
    puVar2 = *(uint **)((int)this + 0xd8);
    puVar3 = puVar2;
    do {
      if (*puVar3 == param_1) {
        if ((iVar4 != -1) && (0 < iVar1)) {
          if (iVar4 != iVar1 + -1) {
            puVar2[iVar4] = puVar2[iVar1 + -1];
          }
          *(int *)((int)this + 0xe4) = *(int *)((int)this + 0xe4) + -1;
        }
        break;
      }
      iVar4 = iVar4 + 1;
      puVar3 = puVar3 + 1;
    } while (iVar4 < iVar1);
  }
  FUN_00417a60(*(void **)((int)this + 0xec),param_1,'\0');
  return;
}



void FUN_00417f20(int *param_1,undefined4 param_2)

{
  (**(code **)(*param_1 + 0x70))(param_2);
  return;
}



void __thiscall FUN_00417f40(void *this,undefined4 param_1)

{
  int iVar1;
  
  iVar1 = *(int *)((int)this + 0xec4);
  while (iVar1 = iVar1 + -1, -1 < iVar1) {
    (**(code **)(**(int **)(*(int *)((int)this + 0xeb8) + iVar1 * 4) + 0xc))(param_1);
    if (*(int *)((int)this + 0xec4) + -1 < iVar1) {
      iVar1 = *(int *)((int)this + 0xec4);
    }
  }
  return;
}



undefined FUN_00417f80(void)

{
  return 1;
}



undefined FUN_00417f90(void)

{
  return 1;
}



undefined4 * __thiscall FUN_00417fa0(void *this,undefined4 param_1,undefined4 param_2)

{
  *(undefined4 *)((int)this + 8) = param_1;
  *(undefined4 *)((int)this + 0xc) = param_2;
  *(undefined ***)this = fixapi2_impl::CFixItem::vftable;
  *(undefined4 *)((int)this + 0x18) = 0xffffffff;
  *(undefined4 *)((int)this + 0x1c) = 0xffffffff;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  *(undefined4 *)((int)this + 0x24) = 0;
  *(undefined *)((int)this + 0x44) = 0;
  *(undefined4 *)((int)this + 0x48) = 0;
  *(undefined4 *)((int)this + 0x4c) = 0;
  *(undefined *)((int)this + 0x50) = 0;
  *(undefined4 *)((int)this + 0x54) = 0;
  *(undefined4 *)((int)this + 0x58) = 0;
  *(undefined *)((int)this + 0x5c) = 0;
  *(undefined4 *)((int)this + 100) = 0;
  *(undefined4 *)((int)this + 0x60) = 0;
  *(undefined4 *)((int)this + 0x28) = 0;
  *(undefined4 *)((int)this + 0x2c) = 0;
  *(undefined4 *)((int)this + 0x34) = 0;
  *(undefined4 *)((int)this + 0x30) = 0;
  *(undefined4 *)((int)this + 0x38) = 0;
  *(undefined4 *)((int)this + 0x3c) = 0;
  *(undefined4 *)((int)this + 0x40) = 0;
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00418050(void *this,undefined4 param_1)

{
  *(undefined4 *)((int)this + 4) = param_1;
  *(undefined ***)this = fixapi2_impl::CFixItemAttribute::vftable;
  *(undefined *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  *(undefined4 *)((int)this + 0x18) = 0;
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00418090(void *this,undefined4 param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixItemPricing::vftable;
  *(undefined4 *)((int)this + 0xc) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  *(undefined4 *)((int)this + 0x1c) = *(undefined4 *)((int)this + 0xc);
  *(undefined4 *)((int)this + 0x18) = 0;
  *(undefined4 *)((int)this + 4) = param_1;
  *(undefined4 *)((int)this + 8) = 0;
  return (undefined4 *)this;
}



void __fastcall FUN_004180d0(undefined4 *param_1)

{
  *param_1 = fixapi2_impl::CFixItem::vftable;
  if (param_1[9] != 0) {
    FUN_00421390(param_1[9]);
  }
  if (param_1[0x12] != 0) {
    FUN_00403c10(param_1[0x12]);
  }
  if (param_1[0x15] != 0) {
    FUN_00403c10(param_1[0x15]);
  }
  if (param_1[0x18] != 0) {
    FUN_00403c10(param_1[0x18]);
  }
  if (param_1[10] != 0) {
    FUN_00403c10(param_1[10]);
  }
  if (param_1[0xb] != 0) {
    FUN_00403c10(param_1[0xb]);
  }
  if (param_1[0xd] != 0) {
    FUN_00403c10(param_1[0xd]);
  }
  if (param_1[0xc] != 0) {
    FUN_00403c10(param_1[0xc]);
  }
  if (param_1[0xe] != 0) {
    FUN_00403c10(param_1[0xe]);
  }
  if (param_1[0xf] != 0) {
    FUN_00403c10(param_1[0xf]);
  }
  if (param_1[0x10] != 0) {
    FUN_00403c10(param_1[0x10]);
  }
  return;
}



undefined4 * __thiscall FUN_00418190(void *this,byte param_1)

{
  FUN_004180d0((undefined4 *)this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_004181c0(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixItemAttribute::vftable;
  if (*(int *)((int)this + 0x14) != 0) {
    FUN_00403c10(*(int *)((int)this + 0x14));
  }
  if (*(int *)((int)this + 0x18) != 0) {
    FUN_00403c10(*(int *)((int)this + 0x18));
  }
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00418210(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixItemPricing::vftable;
  FUN_0040a350((int *)((int)this + 0xc));
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



uint __thiscall FUN_00418240(void *this,undefined4 param_1)

{
  char cVar1;
  uint uVar2;
  int iVar3;
  ushort uVar4;
  
  uVar4 = *(ushort *)((int)this + 0x10);
  if (uVar4 == 0xffff) {
    return 0xffff;
  }
  do {
    iVar3 = (uint)uVar4 * 0x14;
                    // WARNING: Load size is inaccurate
    cVar1 = (**this)(param_1,*(int *)((int)this + 4) + 8 + iVar3);
    if (cVar1 == '\0') {
                    // WARNING: Load size is inaccurate
      uVar2 = (**this)(*(int *)((int)this + 4) + 8 + iVar3,param_1);
      if ((char)uVar2 == '\0') break;
      uVar4 = *(ushort *)(*(int *)((int)this + 4) + 2 + iVar3);
    }
    else {
      uVar4 = *(ushort *)(iVar3 + *(int *)((int)this + 4));
    }
    uVar2 = 0;
  } while (uVar4 != 0xffff);
  return uVar2 & 0xffff0000 | (uint)uVar4;
}



undefined4 __thiscall FUN_004182c0(void *this,int param_1,undefined4 *param_2,undefined4 *param_3)

{
  undefined4 uVar1;
  
  if ((*(int *)((int)this + 0x4c) <= param_1) && (*(int **)((int)this + 0x14) != (int *)0x0)) {
    uVar1 = (**(code **)(**(int **)((int)this + 0x14) + 0x34))
                      (param_1 - *(int *)((int)this + 0x4c),param_2,param_3);
    return uVar1;
  }
  *param_2 = *(undefined4 *)(*(int *)((int)this + 0x48) + param_1 * 8);
  *param_3 = *(undefined4 *)(*(int *)((int)this + 0x48) + 4 + param_1 * 8);
  return CONCAT31((int3)((uint)param_3 >> 8),1);
}



int __fastcall FUN_00418310(int param_1)

{
  int iVar1;
  
  if ((*(int **)(param_1 + 0x14) != (int *)0x0) && (*(char *)(param_1 + 0x44) == '\0')) {
    iVar1 = (**(code **)(**(int **)(param_1 + 0x14) + 0x30))();
    return iVar1 + *(int *)(param_1 + 0x4c);
  }
  return *(int *)(param_1 + 0x4c);
}



undefined4 __fastcall FUN_00418330(int param_1)

{
  return *(undefined4 *)(param_1 + 4);
}



undefined4 __thiscall FUN_00418340(void *this,int param_1,undefined4 *param_2,undefined4 *param_3)

{
  undefined4 uVar1;
  
  if ((*(int *)((int)this + 100) <= param_1) && (*(int **)((int)this + 0x14) != (int *)0x0)) {
    uVar1 = (**(code **)(**(int **)((int)this + 0x14) + 0x50))
                      (param_1 - *(int *)((int)this + 100),param_2,param_3);
    return uVar1;
  }
  *param_2 = *(undefined4 *)(*(int *)((int)this + 0x60) + param_1 * 8);
  *param_3 = *(undefined4 *)(*(int *)((int)this + 0x60) + 4 + param_1 * 8);
  return CONCAT31((int3)((uint)param_3 >> 8),1);
}



int __fastcall FUN_00418390(int param_1)

{
  int iVar1;
  
  if ((*(int **)(param_1 + 0x14) != (int *)0x0) && (*(char *)(param_1 + 0x5c) == '\0')) {
    iVar1 = (**(code **)(**(int **)(param_1 + 0x14) + 0x4c))();
    return iVar1 + *(int *)(param_1 + 100);
  }
  return *(int *)(param_1 + 100);
}



undefined * __fastcall FUN_004183b0(int param_1)

{
  undefined *puVar1;
  
  puVar1 = *(undefined **)(param_1 + 0x30);
  if ((*(undefined **)(param_1 + 0x30) == (undefined *)0x0) &&
     (puVar1 = PTR_DAT_004472c8, *(int **)(param_1 + 0x14) != (int *)0x0)) {
                    // WARNING: Could not recover jumptable at 0x004183c0. Too many branches
                    // WARNING: Treating indirect jump as call
    puVar1 = (undefined *)(**(code **)(**(int **)(param_1 + 0x14) + 0x24))();
    return puVar1;
  }
  return puVar1;
}



undefined * __fastcall FUN_004183d0(int param_1)

{
  undefined *puVar1;
  
  puVar1 = PTR_DAT_004472c8;
  if (*(undefined **)(param_1 + 0x18) != (undefined *)0x0) {
    puVar1 = *(undefined **)(param_1 + 0x18);
  }
  return puVar1;
}



undefined * __fastcall FUN_004183e0(int param_1)

{
  undefined *puVar1;
  
  puVar1 = *(undefined **)(param_1 + 0x34);
  if ((*(undefined **)(param_1 + 0x34) == (undefined *)0x0) &&
     (puVar1 = PTR_s_items_none_004472d0, *(int **)(param_1 + 0x14) != (int *)0x0)) {
                    // WARNING: Could not recover jumptable at 0x004183f0. Too many branches
                    // WARNING: Treating indirect jump as call
    puVar1 = (undefined *)(**(code **)(**(int **)(param_1 + 0x14) + 0x28))();
    return puVar1;
  }
  return puVar1;
}



undefined * __fastcall FUN_00418400(int param_1)

{
  undefined *puVar1;
  
  puVar1 = *(undefined **)(param_1 + 0x2c);
  if ((*(undefined **)(param_1 + 0x2c) == (undefined *)0x0) &&
     (puVar1 = PTR_DAT_004472c8, *(int **)(param_1 + 0x14) != (int *)0x0)) {
                    // WARNING: Could not recover jumptable at 0x00418410. Too many branches
                    // WARNING: Treating indirect jump as call
    puVar1 = (undefined *)(**(code **)(**(int **)(param_1 + 0x14) + 0x20))();
    return puVar1;
  }
  return puVar1;
}



undefined * __fastcall FUN_00418420(int param_1)

{
  undefined *puVar1;
  
  puVar1 = PTR_DAT_004472c8;
  if (*(undefined **)(param_1 + 0x14) != (undefined *)0x0) {
    puVar1 = *(undefined **)(param_1 + 0x14);
  }
  return puVar1;
}



undefined4 __fastcall FUN_00418430(int param_1)

{
  return *(undefined4 *)(param_1 + 0xc);
}



undefined4 __fastcall FUN_00418440(int param_1)

{
  return *(undefined4 *)(param_1 + 0x10);
}



undefined4 __fastcall FUN_00418450(int param_1)

{
  return *(undefined4 *)(param_1 + 0x24);
}



undefined __thiscall FUN_00418460(void *this,undefined4 param_1,undefined4 param_2,int *param_3)

{
  char cVar1;
  float local_8;
  
                    // WARNING: Load size is inaccurate
  local_8 = 0.0;
  cVar1 = (**(code **)(*this + 0x44))(param_1,param_2,&local_8);
  if (cVar1 == '\0') {
    return 0;
  }
  *param_3 = (int)local_8;
  return 1;
}



undefined __thiscall FUN_004184a0(void *this,undefined4 param_1,int *param_2)

{
  char cVar1;
  float local_8;
  
                    // WARNING: Load size is inaccurate
  local_8 = 0.0;
  cVar1 = (**(code **)(*this + 0x3c))(param_1,&local_8);
  if (cVar1 == '\0') {
    return 0;
  }
  *param_2 = (int)local_8;
  return 1;
}



undefined4 __thiscall FUN_004184e0(void *this,int param_1,undefined4 *param_2,undefined4 *param_3)

{
  undefined4 uVar1;
  
  if ((*(int *)((int)this + 0x58) <= param_1) && (*(int **)((int)this + 0x14) != (int *)0x0)) {
    uVar1 = (**(code **)(**(int **)((int)this + 0x14) + 0x44))
                      (param_1 - *(int *)((int)this + 0x58),param_2,param_3);
    return uVar1;
  }
  *param_2 = *(undefined4 *)(*(int *)((int)this + 0x54) + param_1 * 8);
  *param_3 = *(undefined4 *)(*(int *)((int)this + 0x54) + 4 + param_1 * 8);
  return CONCAT31((int3)((uint)param_3 >> 8),1);
}



undefined4 __thiscall FUN_00418530(void *this,int param_1,int *param_2)

{
  int *in_EAX;
  undefined4 uVar1;
  int iVar2;
  
  iVar2 = 0;
  if (0 < *(int *)((int)this + 0x58)) {
    in_EAX = *(int **)((int)this + 0x54);
    do {
      if (param_1 == *in_EAX) {
        *param_2 = (*(int **)((int)this + 0x54))[iVar2 * 2 + 1];
        return CONCAT31((int3)((uint)param_2 >> 8),1);
      }
      iVar2 = iVar2 + 1;
      in_EAX = in_EAX + 2;
    } while (iVar2 < *(int *)((int)this + 0x58));
  }
  if ((*(int **)((int)this + 0x14) != (int *)0x0) && (*(char *)((int)this + 0x50) == '\0')) {
    uVar1 = (**(code **)(**(int **)((int)this + 0x14) + 0x3c))(param_1,param_2);
    return uVar1;
  }
  return (uint)in_EAX & 0xffffff00;
}



int __fastcall FUN_004185a0(int param_1)

{
  int iVar1;
  
  if ((*(int **)(param_1 + 0x14) != (int *)0x0) && (*(char *)(param_1 + 0x50) == '\0')) {
    iVar1 = (**(code **)(**(int **)(param_1 + 0x14) + 0x38))();
    return iVar1 + *(int *)(param_1 + 0x58);
  }
  return *(int *)(param_1 + 0x58);
}



undefined4 __fastcall FUN_004185c0(int param_1)

{
  return *(undefined4 *)(param_1 + 8);
}



undefined * __thiscall FUN_004185d0(void *this,int param_1,undefined *param_2)

{
  undefined *puVar1;
  
  if (param_2 != (undefined *)0x0) {
    *param_2 = 0;
  }
  puVar1 = *(undefined **)((int)this + param_1 * 4 + 0x38);
  if (puVar1 == (undefined *)0x0) {
    if (*(int **)((int)this + 0x14) != (int *)0x0) {
      puVar1 = (undefined *)(**(code **)(**(int **)((int)this + 0x14) + 0x1c))(param_1,param_2);
      return puVar1;
    }
    puVar1 = PTR_s_models_error_mdl_004472cc;
    if (param_2 != (undefined *)0x0) {
      *param_2 = 1;
      puVar1 = PTR_s_models_error_mdl_004472cc;
    }
  }
  return puVar1;
}



int __thiscall
FUN_00418610(void *this,int param_1,undefined4 *param_2,undefined4 *param_3,undefined4 *param_4)

{
  *param_2 = *(undefined4 *)(*(int *)((int)this + 0xc) + param_1 * 0xc);
  *param_3 = *(undefined4 *)(*(int *)((int)this + 0xc) + 8 + param_1 * 0xc);
  *param_4 = *(undefined4 *)(*(int *)((int)this + 0xc) + 4 + param_1 * 0xc);
  return param_1;
}



undefined4 __fastcall FUN_00418650(int param_1)

{
  return *(undefined4 *)(param_1 + 0x18);
}



undefined4 __fastcall FUN_00418660(int param_1)

{
  if (*(int *)(param_1 + 4) != 3) {
    return 0;
  }
  return *(undefined4 *)(param_1 + 0x20);
}



void __thiscall FUN_00418670(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  
  iVar1 = *(int *)((int)this + 8);
  if (-1 < iVar1) {
    uVar2 = *(uint *)((int)this + 4);
    uVar4 = param_1 + uVar2;
    if (iVar1 == 0) {
      if (uVar2 == 0) {
        uVar2 = 2;
        if (2 < (int)uVar4) {
          uVar2 = uVar4;
        }
      }
      else {
        for (; (int)uVar2 < (int)uVar4; uVar2 = uVar2 * 2) {
        }
      }
    }
    else {
      uVar2 = ((int)(uVar4 - 1) / iVar1 + 1) * iVar1;
    }
    if ((int)(uVar2 & 0xffff) < (int)uVar4) {
      if (((short)uVar2 == 0) && ((int)uVar4 < 0x10000)) {
        uVar2 = uVar2 - 1;
      }
      else {
        if ((uVar4 & 0xffff) != uVar4) {
          return;
        }
        do {
          uVar2 = (int)(uVar2 + uVar4) / 2;
        } while ((int)(uVar2 & 0xffff) < (int)uVar4);
      }
    }
                    // WARNING: Load size is inaccurate
    *(uint *)((int)this + 4) = uVar2;
    if (*this != 0) {
      uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this,uVar2 * 0x14);
      *(undefined4 *)this = uVar3;
      return;
    }
    uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar2 * 0x14);
    *(undefined4 *)this = uVar3;
  }
  return;
}



void __thiscall FUN_00418730(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 uVar4;
  uint uVar5;
  
  iVar1 = *(int *)((int)this + 8);
  if (iVar1 < 0) {
    return;
  }
  uVar3 = *(uint *)((int)this + 4);
  uVar5 = param_1 + uVar3;
  if (iVar1 == 0) {
    if (uVar3 == 0) {
      uVar3 = 3;
      uVar2 = uVar5;
      if ((int)uVar5 < 4) goto LAB_00418793;
    }
    else {
      if ((int)uVar5 <= (int)uVar3) goto LAB_00418793;
      do {
        uVar3 = uVar3 * 2;
        uVar2 = uVar3;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
  else {
    uVar2 = ((int)(uVar5 - 1) / iVar1 + 1) * iVar1;
  }
  uVar3 = uVar2;
  if ((int)uVar3 < (int)uVar5) {
    if ((uVar3 == 0) && (0x7fffffff < uVar5)) {
      uVar3 = 0xffffffff;
    }
    else {
      do {
        uVar3 = (int)(uVar3 + uVar5) / 2;
      } while ((int)uVar3 < (int)uVar5);
    }
  }
LAB_00418793:
                    // WARNING: Load size is inaccurate
  *(uint *)((int)this + 4) = uVar3;
  if (*this == 0) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar3 * 0xc);
    *(undefined4 *)this = uVar4;
    return;
  }
  uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this,uVar3 * 0xc);
  *(undefined4 *)this = uVar4;
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall FUN_004187e0(void *this,void *param_1,void *param_2)

{
  void *pvVar1;
  uint uVar2;
  char *pcVar3;
  int iVar4;
  uint *puVar5;
  void *pvVar6;
  uint uVar7;
  undefined4 uVar8;
  ushort uVar9;
  bool bVar10;
  float10 fVar11;
  ulonglong uVar12;
  code *local_4c;
  int local_48;
  undefined4 local_44;
  int local_40;
  uint local_3c;
  undefined4 local_38;
  undefined4 local_34;
  undefined local_30 [8];
  int iStack40;
  uint uStack36;
  int local_20;
  int local_1c [2];
  undefined4 local_14;
  float local_10;
  int local_c;
  void *local_8;
  
  local_8 = this;
  if (*(int *)((int)this + 0x24) != 0) {
    FUN_00421390(*(int *)((int)this + 0x24));
  }
  if (param_1 != (void *)0x0) {
    uVar2 = FUN_0041f130(param_1,"default",0);
    *(uint *)((int)this + 4) = uVar2;
    uVar2 = FUN_0041f130(param_1,"unlockxp",0);
    *(uint *)((int)this + 0x20) = uVar2;
    uVar2 = FUN_0041f130(param_1,"base",0);
    *(uint *)((int)this + 0x10) = uVar2;
    pcVar3 = (char *)FUN_0041f250(param_1,"name",0);
    if ((pcVar3 != (char *)0x0) && (iVar4 = FUN_0041e440(pcVar3), 0 < iVar4)) {
      if (*(int *)((int)this + 0x28) != 0) {
        FUN_00403c10(*(int *)((int)this + 0x28));
      }
      iVar4 = FUN_00403c30(iVar4 + 1);
      *(int *)((int)this + 0x28) = iVar4;
      FUN_0041e380(iVar4,pcVar3);
    }
    uVar2 = FUN_0041f130(param_1,"type",0xffffffff);
    *(uint *)((int)this + 0x18) = uVar2;
    uVar2 = FUN_0041f130(param_1,"category",0xffffffff);
    *(uint *)((int)this + 0x1c) = uVar2;
    puVar5 = FUN_0041ee00(param_1,"extra",0);
    if (puVar5 != (uint *)0x0) {
      puVar5 = FUN_0041fff0((int)puVar5);
      *(uint **)((int)this + 0x24) = puVar5;
    }
    puVar5 = FUN_0041ee00(param_1,"info",0);
    if (puVar5 != (uint *)0x0) {
      pcVar3 = (char *)FUN_0041f250(puVar5,"name",0);
      if ((pcVar3 != (char *)0x0) && (local_c = FUN_0041e440(pcVar3), 0 < local_c)) {
        if (*(int *)((int)this + 0x2c) != 0) {
          FUN_00403c10(*(int *)((int)this + 0x2c));
        }
        iVar4 = FUN_00403c30(local_c + 1);
        *(int *)((int)this + 0x2c) = iVar4;
        FUN_0041e380(iVar4,pcVar3);
      }
      pcVar3 = (char *)FUN_0041f250(puVar5,"desc",0);
      if ((pcVar3 != (char *)0x0) && (local_c = FUN_0041e440(pcVar3), 0 < local_c)) {
        if (*(int *)((int)this + 0x30) != 0) {
          FUN_00403c10(*(int *)((int)this + 0x30));
        }
        iVar4 = FUN_00403c30(local_c + 1);
        *(int *)((int)this + 0x30) = iVar4;
        FUN_0041e380(iVar4,pcVar3);
      }
      pcVar3 = (char *)FUN_0041f250(puVar5,"img",0);
      if ((pcVar3 != (char *)0x0) && (iVar4 = FUN_0041e440(pcVar3), 0 < iVar4)) {
        if (*(int *)((int)this + 0x34) != 0) {
          FUN_00403c10(*(int *)((int)this + 0x34));
        }
        iVar4 = FUN_00403c30(iVar4 + 1);
        *(int *)((int)this + 0x34) = iVar4;
        FUN_0041e380(iVar4,pcVar3);
      }
    }
    uVar2 = FUN_0041f130(param_1,"noparent_attr",0);
    *(bool *)((int)this + 0x44) = uVar2 == 1;
    puVar5 = FUN_0041ee00(param_1,"attr",0);
    if (puVar5 != (uint *)0x0) {
      iVar4 = 0;
      local_4c = FUN_00408f40;
      local_48 = 0;
      local_44 = 0;
      local_40 = 0;
      local_3c = 0xffff;
      local_38 = 0xffffffff;
      local_34 = 0;
      pvVar6 = (void *)FUN_0041f050((int)puVar5);
      if (pvVar6 == (void *)0x0) {
        uVar2 = 0;
      }
      else {
        do {
          iVar4 = FUN_0041f030(pvVar6,(char *)0x0);
          if (iVar4 != 0) {
            pcVar3 = FUN_0041f1b0((int)pvVar6);
            uVar12 = FUN_0041df20(pcVar3);
            iVar4 = (int)uVar12;
            local_c = iVar4;
            if (0 < iVar4) {
              fVar11 = FUN_0041f090(pvVar6,(char *)0x0,0.0);
              local_1c[0] = iVar4;
              uVar2 = FUN_0040b090(param_2,local_1c);
              uVar2 = uVar2 & 0xffff;
              if ((uVar2 < *(uint *)((int)param_2 + 8)) &&
                 (uVar9 = (ushort)uVar2,
                 uVar9 < *(ushort *)((int)param_2 + 0x16) ||
                 uVar9 == *(ushort *)((int)param_2 + 0x16))) {
                bVar10 = uVar9 == 0xffff;
                if (!bVar10) {
                  bVar10 = *(ushort *)(*(int *)((int)param_2 + 4) + uVar2 * 0x10) == uVar9;
                }
                if (!bVar10) {
                  _local_30 = CONCAT48(local_c,local_30);
                  uVar7 = FUN_00418240(&local_4c,&iStack40);
                  if ((short)uVar7 == -1) {
                    local_14 = *(undefined4 *)(*(int *)((int)param_2 + 4) + 0xc + uVar2 * 0x10);
                    local_10 = (float)fVar11;
                    FUN_00411530(&local_4c,&local_c,&local_14);
                  }
                  else {
                    *(float *)(local_48 + 0x10 + uVar2 * 0x14) =
                         *(float *)(local_48 + 0x10 + uVar2 * 0x14) + (float)fVar11;
                  }
                }
              }
            }
          }
          iVar4 = local_48;
          pvVar6 = (void *)FUN_0041f1e0((int)pvVar6);
        } while (pvVar6 != (void *)0x0);
        uVar2 = local_3c >> 0x10;
        this = local_8;
      }
      *(uint *)((int)this + 0x4c) = uVar2;
      if (uVar2 != 0) {
        uVar8 = FUN_00403c30(uVar2 * 8);
        uVar2 = 0;
        *(undefined4 *)((int)this + 0x48) = uVar8;
        if (0 < *(int *)((int)this + 0x4c)) {
          do {
            *(undefined4 *)(*(int *)((int)this + 0x48) + 4 + uVar2 * 8) =
                 *(undefined4 *)(iVar4 + 0x10 + (uVar2 & 0xffff) * 0x14);
            *(undefined4 *)(*(int *)((int)this + 0x48) + uVar2 * 8) =
                 *(undefined4 *)(iVar4 + 0xc + (uVar2 & 0xffff) * 0x14);
            uVar2 = uVar2 + 1;
          } while ((int)uVar2 < *(int *)((int)this + 0x4c));
        }
      }
      FUN_004124e0((int)&local_4c);
      if (((-1 < local_40) && (local_48 != 0)) &&
         ((**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_48), false)) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
      }
    }
    uVar2 = FUN_0041f130(param_1,"noparent_flags",0);
    *(bool *)((int)this + 0x50) = uVar2 == 1;
    puVar5 = FUN_0041ee00(param_1,"flags",0);
    if (puVar5 != (uint *)0x0) {
      local_20 = 0;
      _local_30 = ZEXT816(0);
      pvVar6 = (void *)FUN_0041f050((int)puVar5);
      uVar2 = uStack36;
      while (pvVar6 != (void *)0x0) {
        iVar4 = FUN_0041f030(pvVar6,(char *)0x0);
        uStack36 = uVar2;
        if (iVar4 != 0) {
          pcVar3 = FUN_0041f1b0((int)pvVar6);
          uVar12 = FUN_0041df20(pcVar3);
          local_c = (int)uVar12;
          if (0 < local_c) {
            if (local_30._4_4_ < (int)(uVar2 + 1)) {
              FUN_004157a0(local_30,(uVar2 - local_30._4_4_) + 1);
            }
            uStack36 = uStack36 + 1;
            iVar4 = (uStack36 - uVar2) + -1;
            local_20 = local_30._0_4_;
            if (0 < iVar4) {
              pvVar1 = (void *)(local_30._0_4_ + uVar2 * 8);
              FID_conflict__memcpy((void *)((int)pvVar1 + 8),pvVar1,iVar4 * 8);
            }
            *(int *)(local_30._0_4_ + uVar2 * 8) = local_c;
            fVar11 = FUN_0041f090(pvVar6,(char *)0x0,0.0);
            *(float *)(local_30._0_4_ + 4 + uVar2 * 8) = (float)fVar11;
          }
        }
        pvVar6 = (void *)FUN_0041f1e0((int)pvVar6);
        this = local_8;
        uVar2 = uStack36;
      }
      *(uint *)((int)this + 0x58) = uVar2;
      if (0 < (int)uVar2) {
        uVar8 = FUN_00403c30(-(uint)((int)((ulonglong)uVar2 * 8 >> 0x20) != 0) |
                             (uint)((ulonglong)uVar2 * 8));
        iVar4 = 0;
        *(undefined4 *)((int)this + 0x54) = uVar8;
        if (0 < *(int *)((int)this + 0x58)) {
          do {
            *(undefined4 *)(*(int *)((int)this + 0x54) + iVar4 * 8) =
                 *(undefined4 *)(local_30._0_4_ + iVar4 * 8);
            *(undefined4 *)(*(int *)((int)this + 0x54) + 4 + iVar4 * 8) =
                 *(undefined4 *)(local_30._0_4_ + 4 + iVar4 * 8);
            iVar4 = iVar4 + 1;
          } while (iVar4 < *(int *)((int)this + 0x58));
        }
      }
      if (((-1 < iStack40) && (local_30._0_4_ != 0)) &&
         ((**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_30._0_4_), false)) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
      }
    }
    uVar2 = FUN_0041f130(param_1,"noparent_bodygroups",0);
    *(bool *)((int)this + 0x5c) = uVar2 == 1;
    puVar5 = FUN_0041ee00(param_1,"bodygroups",0);
    if (puVar5 != (uint *)0x0) {
      local_20 = 0;
      _local_30 = ZEXT816(0);
      pvVar6 = (void *)FUN_0041f050((int)puVar5);
      uVar2 = uStack36;
      while (pvVar6 != (void *)0x0) {
        iVar4 = FUN_0041f030(pvVar6,(char *)0x0);
        uStack36 = uVar2;
        if (iVar4 != 0) {
          pcVar3 = FUN_0041f1b0((int)pvVar6);
          uVar12 = FUN_0041df20(pcVar3);
          local_c = (int)uVar12;
          if (local_30._4_4_ < (int)(uVar2 + 1)) {
            FUN_004157a0(local_30,(uVar2 - local_30._4_4_) + 1);
          }
          uStack36 = uStack36 + 1;
          iVar4 = (uStack36 - uVar2) + -1;
          local_20 = local_30._0_4_;
          if (0 < iVar4) {
            pvVar1 = (void *)(local_30._0_4_ + uVar2 * 8);
            FID_conflict__memcpy((void *)((int)pvVar1 + 8),pvVar1,iVar4 * 8);
          }
          *(int *)(local_30._0_4_ + uVar2 * 8) = local_c;
          uVar7 = FUN_0041f130(pvVar6,(char *)0x0,0);
          *(uint *)(local_30._0_4_ + 4 + uVar2 * 8) = uVar7;
        }
        pvVar6 = (void *)FUN_0041f1e0((int)pvVar6);
        this = local_8;
        uVar2 = uStack36;
      }
      *(uint *)((int)this + 100) = uVar2;
      if (0 < (int)uVar2) {
        uVar8 = FUN_00403c30(-(uint)((int)((ulonglong)uVar2 * 8 >> 0x20) != 0) |
                             (uint)((ulonglong)uVar2 * 8));
        iVar4 = 0;
        *(undefined4 *)((int)this + 0x60) = uVar8;
        if (0 < *(int *)((int)this + 100)) {
          do {
            *(undefined4 *)(*(int *)((int)this + 0x60) + iVar4 * 8) =
                 *(undefined4 *)(local_30._0_4_ + iVar4 * 8);
            *(undefined4 *)(*(int *)((int)this + 0x60) + 4 + iVar4 * 8) =
                 *(undefined4 *)(local_30._0_4_ + 4 + iVar4 * 8);
            iVar4 = iVar4 + 1;
          } while (iVar4 < *(int *)((int)this + 100));
        }
      }
      if (((-1 < iStack40) && (local_30._0_4_ != 0)) &&
         ((**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_30._0_4_), false)) {
        (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
      }
    }
    puVar5 = FUN_0041ee00(param_1,"models",0);
    if (puVar5 != (uint *)0x0) {
      pcVar3 = (char *)FUN_0041f250(puVar5,"world",0);
      if ((pcVar3 != (char *)0x0) && (iVar4 = FUN_0041e440(pcVar3), 0 < iVar4)) {
        if (*(int *)((int)this + 0x3c) != 0) {
          FUN_00403c10(*(int *)((int)this + 0x3c));
        }
        iVar4 = FUN_00403c30(iVar4 + 1);
        *(int *)((int)this + 0x3c) = iVar4;
        FUN_0041e380(iVar4,pcVar3);
      }
      pcVar3 = (char *)FUN_0041f250(puVar5,"view",0);
      if ((pcVar3 != (char *)0x0) && (iVar4 = FUN_0041e440(pcVar3), 0 < iVar4)) {
        if (*(int *)((int)this + 0x40) != 0) {
          FUN_00403c10(*(int *)((int)this + 0x40));
        }
        iVar4 = FUN_00403c30(iVar4 + 1);
        *(int *)((int)this + 0x40) = iVar4;
        FUN_0041e380(iVar4,pcVar3);
      }
      pcVar3 = (char *)FUN_0041f250(puVar5,"shop",0);
      if ((pcVar3 != (char *)0x0) && (iVar4 = FUN_0041e440(pcVar3), 0 < iVar4)) {
        if (*(int *)((int)this + 0x38) != 0) {
          FUN_00403c10(*(int *)((int)this + 0x38));
        }
        iVar4 = FUN_00403c30(iVar4 + 1);
        *(int *)((int)this + 0x38) = iVar4;
        FUN_0041e380(iVar4,pcVar3);
      }
    }
  }
  return;
}



void __thiscall FUN_00418f80(void *this,void *param_1)

{
  uint uVar1;
  uint *this_00;
  char *pcVar2;
  int iVar3;
  
  if (param_1 != (void *)0x0) {
    uVar1 = FUN_0041f130(param_1,"id",0);
    *(uint *)((int)this + 4) = uVar1;
    uVar1 = FUN_0041f130(param_1,"type",0);
    *(uint *)((int)this + 0xc) = uVar1;
    uVar1 = FUN_0041f130(param_1,"effect",0);
    *(uint *)((int)this + 0x10) = uVar1;
    uVar1 = FUN_0041f130(param_1,"itemonly",0);
    *(bool *)((int)this + 8) = uVar1 != 0;
    this_00 = FUN_0041ee00(param_1,"info",0);
    if (this_00 != (uint *)0x0) {
      pcVar2 = (char *)FUN_0041f250(this_00,"name",0);
      if ((pcVar2 != (char *)0x0) && (iVar3 = FUN_0041e440(pcVar2), 0 < iVar3)) {
        if (*(int *)((int)this + 0x14) != 0) {
          FUN_00403c10(*(int *)((int)this + 0x14));
        }
        iVar3 = FUN_00403c30(iVar3 + 1);
        *(int *)((int)this + 0x14) = iVar3;
        FUN_0041e380(iVar3,pcVar2);
      }
      pcVar2 = (char *)FUN_0041f250(this_00,"desc",0);
      if ((pcVar2 != (char *)0x0) && (iVar3 = FUN_0041e440(pcVar2), 0 < iVar3)) {
        if (*(int *)((int)this + 0x18) != 0) {
          FUN_00403c10(*(int *)((int)this + 0x18));
        }
        iVar3 = FUN_00403c30(iVar3 + 1);
        *(int *)((int)this + 0x18) = iVar3;
        FUN_0041e380(iVar3,pcVar2);
      }
    }
  }
  return;
}



void __thiscall FUN_00419090(void *this,void *param_1)

{
  uint uVar1;
  int local_c [2];
  
  local_c[0] = *(int *)((int)this + 0x10);
  if (local_c[0] != 0) {
    uVar1 = FUN_0040b090(param_1,local_c);
    if ((uVar1 & 0xffff) == 0xffff) {
      *(undefined4 *)((int)this + 0x10) = 0;
      return;
    }
    *(undefined4 *)((int)this + 0x14) =
         *(undefined4 *)(*(int *)((int)param_1 + 4) + 0xc + (uVar1 & 0xffff) * 0x10);
  }
  return;
}



void __thiscall FUN_004190f0(void *this,ushort param_1)

{
  ushort uVar1;
  ushort uVar2;
  undefined2 uVar3;
  int iVar4;
  ushort uVar5;
  
  if (param_1 == 0xffff) {
    uVar5 = 0xffff;
LAB_0041912c:
    uVar3 = 0xffff;
  }
  else {
    uVar5 = *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)param_1 * 0x14);
    if (uVar5 == 0xffff) goto LAB_0041912c;
    uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + (uint)uVar5 * 0x14);
  }
  iVar4 = (uint)param_1 * 0x14;
  *(undefined2 *)(*(int *)((int)this + 4) + 2 + iVar4) = uVar3;
  if (uVar5 != 0xffff) {
    uVar1 = *(ushort *)((uint)uVar5 * 0x14 + *(int *)((int)this + 4));
    if (uVar1 != 0xffff) {
      *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar1 * 0x14) = param_1;
    }
    if (param_1 == 0xffff) {
      uVar3 = 0xffff;
    }
    else {
      uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(undefined2 *)(*(int *)((int)this + 4) + 4 + (uint)uVar5 * 0x14) = uVar3;
  }
  if (param_1 == *(ushort *)((int)this + 0x10)) {
    *(ushort *)((int)this + 0x10) = uVar5;
    goto LAB_00419204;
  }
  if (param_1 == 0xffff) {
LAB_004191b8:
    uVar1 = 0xffff;
  }
  else {
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    if (uVar1 == 0xffff) goto LAB_004191b8;
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + (uint)uVar1 * 0x14);
  }
  uVar2 = 0xffff;
  if (uVar1 == param_1) {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + (uint)uVar2 * 0x14) = uVar5;
  }
  else {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar2 * 0x14) = uVar5;
  }
LAB_00419204:
  *(ushort *)(*(int *)((int)this + 4) + (uint)uVar5 * 0x14) = param_1;
  if (param_1 != 0xffff) {
    *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4) = uVar5;
  }
  return;
}



void __thiscall FUN_00419230(void *this,ushort param_1)

{
  ushort uVar1;
  ushort uVar2;
  undefined2 uVar3;
  int iVar4;
  ushort uVar5;
  
  if (param_1 == 0xffff) {
    uVar5 = 0xffff;
LAB_0041926c:
    uVar3 = 0xffff;
  }
  else {
    uVar5 = *(ushort *)(*(int *)((int)this + 4) + (uint)param_1 * 0x14);
    if (uVar5 == 0xffff) goto LAB_0041926c;
    uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 2 + (uint)uVar5 * 0x14);
  }
  iVar4 = (uint)param_1 * 0x14;
  *(undefined2 *)(iVar4 + *(int *)((int)this + 4)) = uVar3;
  if (uVar5 != 0xffff) {
    uVar1 = *(ushort *)((uint)uVar5 * 0x14 + 2 + *(int *)((int)this + 4));
    if (uVar1 != 0xffff) {
      *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar1 * 0x14) = param_1;
    }
    if (param_1 == 0xffff) {
      uVar3 = 0xffff;
    }
    else {
      uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(undefined2 *)(*(int *)((int)this + 4) + 4 + (uint)uVar5 * 0x14) = uVar3;
  }
  if (param_1 == *(ushort *)((int)this + 0x10)) {
    *(ushort *)((int)this + 0x10) = uVar5;
    goto LAB_00419345;
  }
  if (param_1 == 0xffff) {
LAB_004192f9:
    uVar1 = 0xffff;
  }
  else {
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    if (uVar1 == 0xffff) goto LAB_004192f9;
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar1 * 0x14);
  }
  uVar2 = 0xffff;
  if (uVar1 == param_1) {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar2 * 0x14) = uVar5;
  }
  else {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + (uint)uVar2 * 0x14) = uVar5;
  }
LAB_00419345:
  *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar5 * 0x14) = param_1;
  if (param_1 != 0xffff) {
    *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4) = uVar5;
  }
  return;
}



void __thiscall FUN_00419370(void *this,int *param_1)

{
  void *_Src;
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  int iVar4;
  ulonglong uVar5;
  
  uVar5 = FUN_0040f8a0(param_1);
  *(int *)((int)this + 8) = (int)uVar5;
  uVar2 = FUN_0040f920(param_1);
  uVar2 = uVar2 & 0xffff;
  *(undefined4 *)((int)this + 0x18) = 0;
  if (-1 < *(int *)((int)this + 0x14)) {
    if (*(int *)((int)this + 0xc) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)((int)this + 0xc));
      *(undefined4 *)((int)this + 0xc) = 0;
    }
    *(undefined4 *)((int)this + 0x10) = 0;
  }
  *(undefined4 *)((int)this + 0x1c) = *(undefined4 *)((int)this + 0xc);
  for (; uVar2 != 0; uVar2 = uVar2 - 1) {
    iVar1 = *(int *)((int)this + 0x18);
    if (*(int *)((int)this + 0x10) < iVar1 + 1) {
      FUN_00418730((void *)((int)this + 0xc),(iVar1 - *(int *)((int)this + 0x10)) + 1);
    }
    *(int *)((int)this + 0x18) = *(int *)((int)this + 0x18) + 1;
    iVar4 = (*(int *)((int)this + 0x18) - iVar1) + -1;
    *(int *)((int)this + 0x1c) = *(int *)((int)this + 0xc);
    if (0 < iVar4) {
      _Src = (void *)(*(int *)((int)this + 0xc) + iVar1 * 0xc);
      FID_conflict__memcpy((void *)((int)_Src + 0xc),_Src,iVar4 * 0xc);
    }
    iVar4 = *(int *)((int)this + 0xc);
    uVar3 = FUN_0040f880(param_1);
    *(undefined4 *)(iVar4 + iVar1 * 0xc) = uVar3;
    iVar4 = *(int *)((int)this + 0xc);
    uVar3 = FUN_0040f880(param_1);
    *(undefined4 *)(iVar4 + 8 + iVar1 * 0xc) = uVar3;
    iVar4 = *(int *)((int)this + 0xc);
    uVar3 = FUN_0040f880(param_1);
    *(undefined4 *)(iVar4 + 4 + iVar1 * 0xc) = uVar3;
  }
  return;
}



int __WSAFDIsSet(SOCKET param_1,fd_set *param_2)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x0041945a. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = __WSAFDIsSet(param_1,param_2);
  return iVar1;
}



int __fastcall FUN_00419460(undefined4 *param_1,uint param_2,byte *param_3)

{
  int iVar1;
  uint uVar2;
  
  while( true ) {
    uVar2 = param_2;
    if (param_1[0xc] == 0) {
      if ((uint)(param_1[3] - param_1[0xb]) < param_2 - param_1[9]) {
        uVar2 = param_1[9] + (param_1[3] - param_1[0xb]);
      }
    }
    iVar1 = FUN_004194e0(param_1,uVar2,param_3);
    if (iVar1 != 0) break;
    if ((uint)param_1[3] <= (uint)param_1[0xb]) {
      param_1[0xc] = param_1[3];
    }
    FUN_0041a170((int)param_1,param_2);
    if (((param_2 <= (uint)param_1[9]) || (param_3 <= (byte *)param_1[6])) ||
       (0x111 < (uint)param_1[0x12])) {
      if (0x112 < (uint)param_1[0x12]) {
        param_1[0x12] = 0x112;
      }
      return 0;
    }
  }
  return iVar1;
}



undefined4 __fastcall FUN_004194e0(undefined4 *param_1,uint param_2,byte *param_3)

{
  undefined *puVar1;
  ushort uVar2;
  int iVar3;
  undefined4 uVar4;
  undefined4 uVar5;
  int iVar6;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  uint uVar10;
  ushort *puVar11;
  int iVar12;
  uint uVar13;
  uint uVar14;
  ushort *puVar15;
  int iVar16;
  int iVar17;
  undefined *puVar18;
  uint uVar19;
  byte local_4c;
  int local_44;
  uint local_40;
  uint local_34;
  uint local_30;
  uint local_28;
  uint local_24;
  uint local_20;
  int local_1c;
  uint local_18;
  uint local_14;
  uint local_c;
  byte *local_8;
  
  local_1c = 0;
  iVar3 = param_1[4];
  uVar4 = param_1[2];
  local_28 = param_1[0xe];
  local_30 = param_1[0xf];
  local_34 = param_1[0x10];
  local_40 = param_1[0x11];
  uVar5 = param_1[1];
  local_14 = param_1[0xd];
  local_20 = param_1[0xb];
  local_8 = (byte *)param_1[6];
  local_18 = param_1[9];
  iVar6 = param_1[5];
  uVar7 = param_1[10];
  uVar8 = param_1[0xc];
  local_24 = param_1[7];
  local_4c = (byte)*param_1;
  local_c = param_1[8];
  do {
    uVar14 = local_40;
    uVar13 = local_20 & (1 << ((byte)uVar4 & 0x1f)) - 1U;
    puVar15 = (ushort *)(iVar3 + (local_14 * 0x10 + uVar13) * 2);
    uVar2 = *puVar15;
    uVar9 = local_c;
    uVar19 = local_24;
    if (local_24 < 0x1000000) {
      uVar19 = local_24 << 8;
      uVar9 = local_c << 8 | (uint)*local_8;
      local_8 = local_8 + 1;
    }
    local_24 = (uVar19 >> 0xb) * (uint)uVar2;
    if (uVar9 < local_24) {
      *puVar15 = (short)(0x800 - uVar2 >> 5) + uVar2;
      iVar17 = iVar3 + 0xe6c;
      if ((uVar8 != 0) || (local_20 != 0)) {
        uVar14 = local_18;
        if (local_18 == 0) {
          uVar14 = uVar7;
        }
        iVar17 = iVar17 + ((uint)(*(byte *)((uVar14 - 1) + iVar6) >> (8 - local_4c & 0x1f)) +
                          ((local_20 & (1 << ((byte)uVar5 & 0x1f)) - 1U) << (local_4c & 0x1f))) *
                          0x600;
      }
      if (local_14 < 7) {
        uVar14 = 1;
        local_c = uVar9;
        do {
          uVar14 = uVar14 * 2;
          uVar2 = *(ushort *)(uVar14 + iVar17);
          if (local_24 < 0x1000000) {
            local_24 = local_24 << 8;
            local_c = local_c << 8 | (uint)*local_8;
            local_8 = local_8 + 1;
          }
          uVar9 = (local_24 >> 0xb) * (uint)uVar2;
          if (local_c < uVar9) {
            *(ushort *)(uVar14 + iVar17) = (short)(0x800 - uVar2 >> 5) + uVar2;
            local_24 = uVar9;
          }
          else {
            local_24 = local_24 - uVar9;
            local_c = local_c - uVar9;
            *(ushort *)(uVar14 + iVar17) = uVar2 - (uVar2 >> 5);
            uVar14 = uVar14 + 1;
          }
        } while (uVar14 < 0x100);
      }
      else {
        uVar19 = (uint)*(byte *)(((-(uint)(local_18 < local_28) & uVar7) - local_28) + param_1[5] +
                                local_18);
        local_c = 0x100;
        uVar14 = 1;
        uVar13 = local_c;
        do {
          local_c = uVar13;
          uVar19 = uVar19 * 2;
          uVar13 = local_c & uVar19;
          puVar15 = (ushort *)(iVar17 + (local_c + uVar13 + uVar14) * 2);
          uVar2 = *puVar15;
          if (local_24 < 0x1000000) {
            local_24 = local_24 << 8;
            uVar9 = uVar9 << 8 | (uint)*local_8;
            local_8 = local_8 + 1;
          }
          uVar10 = (local_24 >> 0xb) * (uint)uVar2;
          if (uVar9 < uVar10) {
            uVar13 = ~uVar13;
            uVar14 = uVar14 * 2;
            *puVar15 = (short)(0x800 - uVar2 >> 5) + uVar2;
            local_24 = uVar10;
          }
          else {
            local_24 = local_24 - uVar10;
            uVar14 = uVar14 * 2 + 1;
            uVar9 = uVar9 - uVar10;
            *puVar15 = uVar2 - (uVar2 >> 5);
          }
          uVar13 = local_c & uVar13;
          local_c = uVar9;
        } while (uVar14 < 0x100);
      }
      *(char *)(local_18 + iVar6) = (char)uVar14;
      local_18 = local_18 + 1;
      local_14 = (uint)(byte)(&DAT_0043ddb0)[local_14];
      local_20 = local_20 + 1;
    }
    else {
      uVar19 = uVar19 - local_24;
      local_c = uVar9 - local_24;
      *puVar15 = uVar2 - (uVar2 >> 5);
      uVar2 = *(ushort *)(iVar3 + 0x180 + local_14 * 2);
      if (uVar19 < 0x1000000) {
        uVar19 = uVar19 * 0x100;
        local_c = local_c * 0x100 | (uint)*local_8;
        local_8 = local_8 + 1;
      }
      uVar9 = (uVar19 >> 0xb) * (uint)uVar2;
      if (local_c < uVar9) {
        *(ushort *)(iVar3 + 0x180 + local_14 * 2) = (short)(0x800 - uVar2 >> 5) + uVar2;
        local_14 = local_14 + 0xc;
        puVar15 = (ushort *)(iVar3 + 0x664);
      }
      else {
        uVar19 = uVar19 - uVar9;
        local_c = local_c - uVar9;
        *(ushort *)(iVar3 + 0x180 + local_14 * 2) = uVar2 - (uVar2 >> 5);
        if ((uVar8 == 0) && (local_20 == 0)) {
          return 1;
        }
        uVar2 = *(ushort *)(iVar3 + 0x198 + local_14 * 2);
        if (uVar19 < 0x1000000) {
          uVar19 = uVar19 * 0x100;
          local_c = local_c * 0x100 | (uint)*local_8;
          local_8 = local_8 + 1;
        }
        uVar9 = (uVar19 >> 0xb) * (uint)uVar2;
        if (local_c < uVar9) {
          *(ushort *)(iVar3 + 0x198 + local_14 * 2) = (short)(0x800 - uVar2 >> 5) + uVar2;
          puVar15 = (ushort *)(iVar3 + ((local_14 + 0xf) * 0x10 + uVar13) * 2);
          uVar2 = *puVar15;
          if (uVar9 < 0x1000000) {
            uVar9 = uVar9 * 0x100;
            local_c = local_c << 8 | (uint)*local_8;
            local_8 = local_8 + 1;
          }
          local_24 = (uVar9 >> 0xb) * (uint)uVar2;
          if (local_c < local_24) {
            *puVar15 = (short)(0x800 - uVar2 >> 5) + uVar2;
            *(undefined *)(local_18 + iVar6) =
                 *(undefined *)
                  (((-(uint)(local_18 < local_28) & uVar7) - local_28) + local_18 + iVar6);
            local_18 = local_18 + 1;
            local_20 = local_20 + 1;
            local_14 = (-(uint)(local_14 < 7) & 0xfffffffe) + 0xb;
            goto LAB_0041a0da;
          }
          uVar9 = uVar9 - local_24;
          local_c = local_c - local_24;
          *puVar15 = uVar2 - (uVar2 >> 5);
        }
        else {
          uVar19 = uVar19 - uVar9;
          local_c = local_c - uVar9;
          *(ushort *)(iVar3 + 0x198 + local_14 * 2) = uVar2 - (uVar2 >> 5);
          uVar2 = *(ushort *)(iVar3 + 0x1b0 + local_14 * 2);
          if (uVar19 < 0x1000000) {
            uVar19 = uVar19 * 0x100;
            local_c = local_c * 0x100 | (uint)*local_8;
            local_8 = local_8 + 1;
          }
          uVar9 = (uVar19 >> 0xb) * (uint)uVar2;
          if (local_c < uVar9) {
            *(ushort *)(iVar3 + 0x1b0 + local_14 * 2) = (short)(0x800 - uVar2 >> 5) + uVar2;
            uVar14 = local_30;
          }
          else {
            uVar19 = uVar19 - uVar9;
            local_c = local_c - uVar9;
            *(ushort *)(iVar3 + 0x1b0 + local_14 * 2) = uVar2 - (uVar2 >> 5);
            uVar2 = *(ushort *)(iVar3 + 0x1c8 + local_14 * 2);
            if (uVar19 < 0x1000000) {
              uVar19 = uVar19 * 0x100;
              local_c = local_c * 0x100 | (uint)*local_8;
              local_8 = local_8 + 1;
            }
            uVar10 = (uVar19 >> 0xb) * (uint)uVar2;
            if (local_c < uVar10) {
              *(ushort *)(iVar3 + 0x1c8 + local_14 * 2) = (short)(0x800 - uVar2 >> 5) + uVar2;
              uVar14 = local_34;
              uVar9 = uVar10;
            }
            else {
              uVar9 = uVar19 - uVar10;
              local_c = local_c - uVar10;
              *(ushort *)(iVar3 + 0x1c8 + local_14 * 2) = uVar2 - (uVar2 >> 5);
              local_40 = local_34;
            }
            local_34 = local_30;
          }
          local_30 = local_28;
          local_28 = uVar14;
        }
        local_14 = (-(uint)(local_14 < 7) & 0xfffffffd) + 0xb;
        puVar15 = (ushort *)(iVar3 + 0xa68);
      }
      uVar14 = local_34;
      uVar2 = *puVar15;
      if (uVar9 < 0x1000000) {
        uVar9 = uVar9 << 8;
        local_c = local_c << 8 | (uint)*local_8;
        local_8 = local_8 + 1;
      }
      local_24 = (uVar9 >> 0xb) * (uint)uVar2;
      if (local_c < local_24) {
        local_44 = 0;
        uVar9 = 8;
        *puVar15 = (short)(0x800 - uVar2 >> 5) + uVar2;
        puVar11 = puVar15 + uVar13 * 8 + 2;
      }
      else {
        uVar9 = uVar9 - local_24;
        local_c = local_c - local_24;
        *puVar15 = uVar2 - (uVar2 >> 5);
        uVar2 = puVar15[1];
        if (uVar9 < 0x1000000) {
          uVar9 = uVar9 * 0x100;
          local_c = local_c * 0x100 | (uint)*local_8;
          local_8 = local_8 + 1;
        }
        uVar19 = (uVar9 >> 0xb) * (uint)uVar2;
        if (local_c < uVar19) {
          local_44 = 8;
          uVar9 = 8;
          puVar15[1] = (short)(0x800 - uVar2 >> 5) + uVar2;
          puVar11 = puVar15 + uVar13 * 8 + 0x82;
          local_24 = uVar19;
        }
        else {
          local_24 = uVar9 - uVar19;
          local_44 = 0x10;
          local_c = local_c - uVar19;
          puVar11 = puVar15 + 0x102;
          puVar15[1] = uVar2 - (uVar2 >> 5);
          uVar9 = 0x100;
        }
      }
      uVar19 = 1;
      do {
        uVar13 = uVar19 * 2;
        uVar2 = puVar11[uVar19];
        if (local_24 < 0x1000000) {
          local_24 = local_24 << 8;
          local_c = local_c << 8 | (uint)*local_8;
          local_8 = local_8 + 1;
        }
        uVar10 = (local_24 >> 0xb) * (uint)uVar2;
        if (local_c < uVar10) {
          puVar11[uVar19] = (short)(0x800 - uVar2 >> 5) + uVar2;
          local_24 = uVar10;
        }
        else {
          local_24 = local_24 - uVar10;
          local_c = local_c - uVar10;
          puVar11[uVar19] = uVar2 - (uVar2 >> 5);
          uVar13 = uVar13 + 1;
        }
        uVar19 = uVar13;
      } while (uVar13 < uVar9);
      uVar13 = uVar13 + (local_44 - uVar9);
      if (0xb < local_14) {
        uVar9 = 3;
        if (uVar13 < 4) {
          uVar9 = uVar13;
        }
        iVar17 = iVar3 + 0x360 + uVar9 * 0x80;
        uVar2 = *(ushort *)(iVar17 + 2);
        if (local_24 < 0x1000000) {
          local_24 = local_24 << 8;
          local_c = local_c << 8 | (uint)*local_8;
          local_8 = local_8 + 1;
        }
        uVar9 = (local_24 >> 0xb) * (uint)uVar2;
        if (local_c < uVar9) {
          *(ushort *)(iVar17 + 2) = (short)(0x800 - uVar2 >> 5) + uVar2;
          iVar12 = 2;
        }
        else {
          local_c = local_c - uVar9;
          uVar9 = local_24 - uVar9;
          iVar12 = 3;
          *(ushort *)(iVar17 + 2) = uVar2 - (uVar2 >> 5);
        }
        iVar12 = iVar12 * 2;
        uVar2 = *(ushort *)(iVar12 + iVar17);
        if (uVar9 < 0x1000000) {
          uVar9 = uVar9 << 8;
          local_c = local_c << 8 | (uint)*local_8;
          local_8 = local_8 + 1;
        }
        uVar19 = (uVar9 >> 0xb) * (uint)uVar2;
        if (local_c < uVar19) {
          *(ushort *)(iVar12 + iVar17) = (short)(0x800 - uVar2 >> 5) + uVar2;
        }
        else {
          local_c = local_c - uVar19;
          uVar19 = uVar9 - uVar19;
          *(ushort *)(iVar12 + iVar17) = uVar2 - (uVar2 >> 5);
          iVar12 = iVar12 + 1;
        }
        iVar12 = iVar12 * 2;
        uVar2 = *(ushort *)(iVar12 + iVar17);
        if (uVar19 < 0x1000000) {
          uVar19 = uVar19 << 8;
          local_c = local_c << 8 | (uint)*local_8;
          local_8 = local_8 + 1;
        }
        uVar9 = (uVar19 >> 0xb) * (uint)uVar2;
        if (local_c < uVar9) {
          *(ushort *)(iVar12 + iVar17) = (short)(0x800 - uVar2 >> 5) + uVar2;
        }
        else {
          local_c = local_c - uVar9;
          uVar9 = uVar19 - uVar9;
          *(ushort *)(iVar12 + iVar17) = uVar2 - (uVar2 >> 5);
          iVar12 = iVar12 + 1;
        }
        iVar12 = iVar12 * 2;
        uVar2 = *(ushort *)(iVar12 + iVar17);
        if (uVar9 < 0x1000000) {
          uVar9 = uVar9 << 8;
          local_c = local_c << 8 | (uint)*local_8;
          local_8 = local_8 + 1;
        }
        uVar19 = (uVar9 >> 0xb) * (uint)uVar2;
        if (local_c < uVar19) {
          *(ushort *)(iVar12 + iVar17) = (short)(0x800 - uVar2 >> 5) + uVar2;
        }
        else {
          local_c = local_c - uVar19;
          uVar19 = uVar9 - uVar19;
          *(ushort *)(iVar12 + iVar17) = uVar2 - (uVar2 >> 5);
          iVar12 = iVar12 + 1;
        }
        iVar12 = iVar12 * 2;
        uVar2 = *(ushort *)(iVar12 + iVar17);
        if (uVar19 < 0x1000000) {
          uVar19 = uVar19 << 8;
          local_c = local_c << 8 | (uint)*local_8;
          local_8 = local_8 + 1;
        }
        uVar9 = (uVar19 >> 0xb) * (uint)uVar2;
        if (local_c < uVar9) {
          *(ushort *)(iVar12 + iVar17) = (short)(0x800 - uVar2 >> 5) + uVar2;
        }
        else {
          local_c = local_c - uVar9;
          uVar9 = uVar19 - uVar9;
          *(ushort *)(iVar12 + iVar17) = uVar2 - (uVar2 >> 5);
          iVar12 = iVar12 + 1;
        }
        iVar12 = iVar12 * 2;
        uVar2 = *(ushort *)(iVar12 + iVar17);
        if (uVar9 < 0x1000000) {
          uVar9 = uVar9 << 8;
          local_c = local_c << 8 | (uint)*local_8;
          local_8 = local_8 + 1;
        }
        uVar19 = (uVar9 >> 0xb) * (uint)uVar2;
        if (local_c < uVar19) {
          *(ushort *)(iVar12 + iVar17) = (short)(0x800 - uVar2 >> 5) + uVar2;
        }
        else {
          local_c = local_c - uVar19;
          uVar19 = uVar9 - uVar19;
          *(ushort *)(iVar12 + iVar17) = uVar2 - (uVar2 >> 5);
          iVar12 = iVar12 + 1;
        }
        uVar9 = iVar12 - 0x40;
        local_24 = uVar19;
        if (3 < uVar9) {
          iVar17 = (uVar9 >> 1) - 1;
          uVar10 = uVar9 & 1 | 2;
          if (uVar9 < 0xe) {
            local_40 = 1;
            uVar10 = uVar10 << ((byte)iVar17 & 0x1f);
            iVar12 = 1;
            iVar16 = iVar3 + (uVar10 - uVar9) * 2 + 0x55e;
            uVar9 = uVar10;
            do {
              local_24 = iVar17;
              iVar12 = iVar12 * 2;
              uVar2 = *(ushort *)(iVar12 + iVar16);
              if (uVar19 < 0x1000000) {
                uVar19 = uVar19 << 8;
                local_c = local_c << 8 | (uint)*local_8;
                local_8 = local_8 + 1;
              }
              uVar10 = (uVar19 >> 0xb) * (uint)uVar2;
              if (local_c < uVar10) {
                *(ushort *)(iVar12 + iVar16) = (short)(0x800 - uVar2 >> 5) + uVar2;
                uVar19 = uVar10;
              }
              else {
                uVar19 = uVar19 - uVar10;
                local_c = local_c - uVar10;
                *(ushort *)(iVar12 + iVar16) = uVar2 - (uVar2 >> 5);
                iVar12 = iVar12 + 1;
                uVar9 = uVar9 | local_40;
              }
              local_40 = local_40 * 2;
              iVar17 = local_24 + -1;
              local_24 = uVar19;
            } while (iVar17 != 0);
          }
          else {
            iVar17 = (uVar9 >> 1) - 5;
            do {
              if (uVar19 < 0x1000000) {
                uVar19 = uVar19 << 8;
                local_c = local_c << 8 | (uint)*local_8;
                local_8 = local_8 + 1;
              }
              uVar19 = uVar19 >> 1;
              uVar9 = (int)(local_c - uVar19) >> 0x1f;
              uVar10 = uVar10 * 2 + 1 + uVar9;
              local_c = (local_c - uVar19) + (uVar9 & uVar19);
              iVar17 = iVar17 + -1;
            } while (iVar17 != 0);
            uVar9 = uVar10 * 0x10;
            uVar2 = *(ushort *)(iVar3 + 0x646);
            if (uVar19 < 0x1000000) {
              uVar19 = uVar19 << 8;
              local_c = local_c * 0x100 | (uint)*local_8;
              local_8 = local_8 + 1;
            }
            uVar10 = (uVar19 >> 0xb) * (uint)uVar2;
            if (local_c < uVar10) {
              *(ushort *)(iVar3 + 0x646) = (short)(0x800 - uVar2 >> 5) + uVar2;
              iVar17 = 2;
            }
            else {
              local_c = local_c - uVar10;
              uVar10 = uVar19 - uVar10;
              iVar17 = 3;
              *(ushort *)(iVar3 + 0x646) = uVar2 - (uVar2 >> 5);
              uVar9 = uVar9 | 1;
            }
            iVar17 = iVar17 * 2;
            uVar2 = *(ushort *)(iVar17 + 0x644 + iVar3);
            if (uVar10 < 0x1000000) {
              uVar10 = uVar10 << 8;
              local_c = local_c << 8 | (uint)*local_8;
              local_8 = local_8 + 1;
            }
            uVar19 = (uVar10 >> 0xb) * (uint)uVar2;
            if (local_c < uVar19) {
              *(ushort *)(iVar17 + 0x644 + iVar3) = (short)(0x800 - uVar2 >> 5) + uVar2;
            }
            else {
              local_c = local_c - uVar19;
              uVar19 = uVar10 - uVar19;
              *(ushort *)(iVar17 + 0x644 + iVar3) = uVar2 - (uVar2 >> 5);
              iVar17 = iVar17 + 1;
              uVar9 = uVar9 | 2;
            }
            iVar17 = iVar17 * 2;
            uVar2 = *(ushort *)(iVar17 + 0x644 + iVar3);
            if (uVar19 < 0x1000000) {
              uVar19 = uVar19 << 8;
              local_c = local_c << 8 | (uint)*local_8;
              local_8 = local_8 + 1;
            }
            uVar10 = (uVar19 >> 0xb) * (uint)uVar2;
            if (local_c < uVar10) {
              *(ushort *)(iVar17 + 0x644 + iVar3) = (short)(0x800 - uVar2 >> 5) + uVar2;
            }
            else {
              local_c = local_c - uVar10;
              uVar10 = uVar19 - uVar10;
              *(ushort *)(iVar17 + 0x644 + iVar3) = uVar2 - (uVar2 >> 5);
              iVar17 = iVar17 + 1;
              uVar9 = uVar9 | 4;
            }
            uVar2 = *(ushort *)(iVar3 + 0x644 + iVar17 * 2);
            if (uVar10 < 0x1000000) {
              uVar10 = uVar10 << 8;
              local_c = local_c << 8 | (uint)*local_8;
              local_8 = local_8 + 1;
            }
            local_24 = (uVar10 >> 0xb) * (uint)uVar2;
            if (local_c < local_24) {
              *(ushort *)(iVar3 + 0x644 + iVar17 * 2) = (short)(0x800 - uVar2 >> 5) + uVar2;
            }
            else {
              local_c = local_c - local_24;
              local_24 = uVar10 - local_24;
              uVar9 = uVar9 | 8;
              *(ushort *)(iVar3 + 0x644 + iVar17 * 2) = uVar2 - (uVar2 >> 5);
            }
            if (uVar9 == 0xffffffff) {
              local_1c = uVar13 + 0x112;
              local_14 = local_14 - 0xc;
LAB_0041a0ee:
              if (local_24 < 0x1000000) {
                local_24 = local_24 << 8;
                local_c = local_c << 8 | (uint)*local_8;
                local_8 = local_8 + 1;
              }
              param_1[6] = local_8;
              param_1[8] = local_c;
              param_1[0xb] = local_20;
              param_1[7] = local_24;
              param_1[0x12] = local_1c;
              param_1[9] = local_18;
              param_1[0xe] = local_28;
              param_1[0xf] = local_30;
              param_1[0x10] = local_34;
              param_1[0x11] = local_40;
              param_1[0xd] = local_14;
              return 0;
            }
          }
        }
        local_34 = local_30;
        local_30 = local_28;
        local_28 = uVar9 + 1;
        local_40 = uVar14;
        uVar14 = uVar8;
        if (uVar8 == 0) {
          uVar14 = local_20;
        }
        if (uVar14 <= uVar9) {
          return 1;
        }
        local_14 = (-(uint)(local_14 < 0x13) & 0xfffffffd) + 10;
      }
      uVar13 = uVar13 + 2;
      if (param_2 == local_18) {
        return 1;
      }
      uVar14 = uVar13;
      if (param_2 - local_18 < uVar13) {
        uVar14 = param_2 - local_18;
      }
      local_20 = local_20 + uVar14;
      local_1c = uVar13 - uVar14;
      uVar9 = ((-(uint)(local_18 < local_28) & uVar7) - local_28) + local_18;
      if (uVar7 < uVar9 + uVar14) {
        do {
          puVar1 = (undefined *)(uVar9 + iVar6);
          uVar9 = uVar9 + 1;
          *(undefined *)(local_18 + iVar6) = *puVar1;
          local_18 = local_18 + 1;
          if (uVar9 == uVar7) {
            uVar9 = 0;
          }
          uVar14 = uVar14 - 1;
        } while (uVar14 != 0);
      }
      else {
        puVar18 = (undefined *)(local_18 + iVar6);
        iVar17 = uVar9 - local_18;
        local_18 = local_18 + uVar14;
        puVar1 = puVar18 + uVar14;
        do {
          *puVar18 = puVar18[iVar17];
          puVar18 = puVar18 + 1;
        } while (puVar18 != puVar1);
      }
    }
LAB_0041a0da:
    if ((param_2 <= local_18) || (param_3 <= local_8)) goto LAB_0041a0ee;
  } while( true );
}



void __fastcall FUN_0041a170(int param_1,int param_2)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  
  uVar1 = *(uint *)(param_1 + 0x48);
  if ((uVar1 != 0) && (uVar1 < 0x112)) {
    uVar5 = *(uint *)(param_1 + 0x24);
    uVar2 = *(uint *)(param_1 + 0x28);
    uVar6 = uVar1;
    if (param_2 - uVar5 < uVar1) {
      uVar6 = param_2 - uVar5;
    }
    uVar3 = *(uint *)(param_1 + 0x38);
    iVar4 = *(int *)(param_1 + 0x14);
    if ((*(int *)(param_1 + 0x30) == 0) &&
       ((uint)(*(int *)(param_1 + 0xc) - *(int *)(param_1 + 0x2c)) <= uVar6)) {
      *(undefined4 *)(param_1 + 0x30) = *(undefined4 *)(param_1 + 0xc);
    }
    *(int *)(param_1 + 0x2c) = *(int *)(param_1 + 0x2c) + uVar6;
    *(uint *)(param_1 + 0x48) = uVar1 - uVar6;
    for (; uVar6 != 0; uVar6 = uVar6 - 1) {
      *(undefined *)(uVar5 + iVar4) =
           *(undefined *)(((-(uint)(uVar5 < uVar3) & uVar2) - uVar3) + uVar5 + iVar4);
      uVar5 = uVar5 + 1;
    }
    *(uint *)(param_1 + 0x24) = uVar5;
  }
  return;
}



int __cdecl FUN_0041a1f0(uint *param_1,byte *param_2,uint param_3,undefined **param_4)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  uint local_14;
  uint uStack16;
  uint uStack12;
  uint uStack8;
  
  iVar2 = FUN_0041acf0(&local_14,param_2,param_3);
  if ((iVar2 == 0) &&
     (iVar2 = FUN_0041a290((int)param_1,&local_14,param_4), uVar1 = uStack8, iVar2 == 0)) {
    if ((param_1[5] == 0) || (uStack8 != param_1[10])) {
      (*(code *)param_4[1])(param_4,param_1[5]);
      param_1[5] = 0;
      uVar3 = (*(code *)*param_4)(param_4,uVar1);
      param_1[5] = uVar3;
      if (uVar3 == 0) {
        (*(code *)param_4[1])(param_4,param_1[4]);
        param_1[4] = 0;
        return 2;
      }
    }
    param_1[10] = uVar1;
    iVar2 = 0;
    *param_1 = local_14;
    param_1[1] = uStack16;
    param_1[2] = uStack12;
    param_1[3] = uStack8;
  }
  return iVar2;
}



undefined4 __cdecl FUN_0041a290(int param_1,undefined4 *param_2,undefined **param_3)

{
  int iVar1;
  int iVar2;
  
  iVar2 = (0x300 << ((char)param_2[1] + (char)*param_2 & 0x1fU)) + 0x736;
  if ((*(int *)(param_1 + 0x10) == 0) || (iVar2 != *(int *)(param_1 + 0x54))) {
    (*(code *)param_3[1])(param_3,*(int *)(param_1 + 0x10));
    *(undefined4 *)(param_1 + 0x10) = 0;
    iVar1 = (*(code *)*param_3)(param_3,iVar2 * 2);
    *(int *)(param_1 + 0x10) = iVar1;
    *(int *)(param_1 + 0x54) = iVar2;
    if (iVar1 == 0) {
      return 2;
    }
  }
  return 0;
}



bool __cdecl
FUN_0041a300(undefined4 *param_1,void *param_2,uint *param_3,byte *param_4,size_t *param_5,
            int param_6,undefined4 *param_7)

{
  int iVar1;
  undefined4 *puVar2;
  uint uVar3;
  byte *pbVar4;
  int iVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  byte *_Src;
  undefined4 *puVar9;
  size_t _Size;
  bool bVar10;
  int local_1c;
  size_t local_18;
  size_t local_8;
  
  puVar2 = param_1;
  uVar8 = *param_3;
  local_18 = *param_5;
  *param_3 = 0;
  *param_5 = 0;
  do {
    uVar6 = puVar2[10];
    if (puVar2[9] == uVar6) {
      puVar2[9] = 0;
    }
    iVar1 = puVar2[9];
    if (uVar6 - iVar1 < uVar8) {
      local_1c = 0;
    }
    else {
      uVar6 = iVar1 + uVar8;
      local_1c = param_6;
    }
    param_1 = (undefined4 *)0x0;
    FUN_0041a170((int)puVar2,uVar6);
    *param_7 = 0;
    _Src = param_4;
    local_8 = local_18;
    if (puVar2[0x12] == 0x112) {
      param_1 = (undefined4 *)0x0;
    }
    else {
      do {
        if (puVar2[0x13] != 0) {
          while ((local_8 != 0 && ((uint)puVar2[0x16] < 5))) {
            param_1 = (undefined4 *)((int)param_1 + 1);
            *(byte *)(puVar2[0x16] + 0x5c + (int)puVar2) = *_Src;
            _Src = _Src + 1;
            puVar2[0x16] = puVar2[0x16] + 1;
            local_8 = local_8 - 1;
          }
          if ((uint)puVar2[0x16] < 5) {
            bVar10 = false;
            *param_7 = 3;
          }
          else {
            if (*(char *)(puVar2 + 0x17) == '\0') {
              puVar2[7] = 0xffffffff;
              puVar2[8] = CONCAT31(CONCAT21(CONCAT11(*(undefined *)((int)puVar2 + 0x5d),
                                                     *(undefined *)((int)puVar2 + 0x5e)),
                                            *(undefined *)((int)puVar2 + 0x5f)),
                                   *(undefined *)(puVar2 + 0x18));
              puVar2[0x13] = 0;
              puVar2[0x16] = 0;
              goto LAB_0041a407;
            }
LAB_0041a5bb:
            bVar10 = true;
          }
          goto LAB_0041a630;
        }
LAB_0041a407:
        bVar10 = false;
        if (uVar6 <= (uint)puVar2[9]) {
          if ((puVar2[0x12] == 0) && (puVar2[8] == 0)) {
            bVar10 = false;
            *param_7 = 4;
          }
          else {
            if (local_1c != 0) {
              if (puVar2[0x12] == 0) {
                bVar10 = true;
                goto LAB_0041a43f;
              }
LAB_0041a5b2:
              *param_7 = 2;
              goto LAB_0041a5bb;
            }
            bVar10 = false;
            *param_7 = 2;
          }
          goto LAB_0041a630;
        }
LAB_0041a43f:
        if (puVar2[0x14] != 0) {
          uVar3 = (0x300 << ((char)puVar2[1] + (char)*puVar2 & 0x1fU)) + 0x736;
          if (uVar3 != 0) {
            puVar9 = (undefined4 *)puVar2[4];
            for (uVar7 = uVar3 >> 1; uVar7 != 0; uVar7 = uVar7 - 1) {
              *puVar9 = 0x4000400;
              puVar9 = puVar9 + 1;
            }
            for (uVar3 = (uint)((uVar3 & 1) != 0); uVar3 != 0; uVar3 = uVar3 - 1) {
              *(undefined2 *)puVar9 = 0x400;
              puVar9 = (undefined4 *)((int)puVar9 + 2);
            }
          }
          puVar2[0x11] = 1;
          puVar2[0x10] = 1;
          puVar2[0xf] = 1;
          puVar2[0xe] = 1;
          puVar2[0xd] = 0;
          puVar2[0x14] = 0;
        }
        uVar3 = puVar2[0x16];
        if (uVar3 == 0) {
          if ((local_8 < 0x14) || (bVar10)) {
            iVar5 = FUN_0041a710(puVar2,_Src,local_8);
            if (iVar5 == 0) {
              FID_conflict__memcpy(puVar2 + 0x17,_Src,local_8);
              puVar2[0x16] = local_8;
              param_1 = (undefined4 *)((int)param_1 + local_8);
              bVar10 = false;
              *param_7 = 3;
              goto LAB_0041a630;
            }
            pbVar4 = _Src;
            if ((bVar10) && (iVar5 != 2)) goto LAB_0041a5b2;
          }
          else {
            pbVar4 = _Src + (local_8 - 0x14);
          }
          puVar2[6] = _Src;
          iVar5 = FUN_00419460(puVar2,uVar6,pbVar4);
          if (iVar5 != 0) {
LAB_0041a5d5:
            bVar10 = true;
            goto LAB_0041a630;
          }
          iVar5 = puVar2[6] - (int)_Src;
        }
        else {
          for (uVar7 = 0; (uVar3 < 0x14 && (uVar7 < local_8)); uVar7 = uVar7 + 1) {
            *(byte *)(uVar3 + 0x5c + (int)puVar2) = _Src[uVar7];
            uVar3 = uVar3 + 1;
          }
          puVar2[0x16] = uVar3;
          if ((uVar3 < 0x14) || (bVar10)) {
            iVar5 = FUN_0041a710(puVar2,(byte *)(puVar2 + 0x17),uVar3);
            if (iVar5 == 0) {
              param_1 = (undefined4 *)((int)param_1 + uVar7);
              bVar10 = false;
              *param_7 = 3;
              goto LAB_0041a630;
            }
            if ((bVar10) && (iVar5 != 2)) goto LAB_0041a5b2;
          }
          puVar2[6] = puVar2 + 0x17;
          iVar5 = FUN_00419460(puVar2,uVar6,(byte *)(puVar2 + 0x17));
          if (iVar5 != 0) goto LAB_0041a5d5;
          puVar2[0x16] = 0;
          iVar5 = ((puVar2[6] - uVar3) - (int)puVar2) + (uVar7 - 0x5c);
        }
        local_8 = local_8 - iVar5;
        param_1 = (undefined4 *)((int)param_1 + iVar5);
        _Src = _Src + iVar5;
      } while (puVar2[0x12] != 0x112);
    }
    if (puVar2[8] == 0) {
      *param_7 = 1;
    }
    bVar10 = puVar2[8] != 0;
LAB_0041a630:
    param_4 = param_4 + (int)param_1;
    local_18 = local_18 - (int)param_1;
    *param_5 = *param_5 + (int)param_1;
    _Size = puVar2[9] - iVar1;
    FID_conflict__memcpy(param_2,(void *)(puVar2[5] + iVar1),_Size);
    param_2 = (void *)((int)param_2 + _Size);
    uVar8 = uVar8 - _Size;
    *param_3 = *param_3 + _Size;
    if (bVar10) {
      return bVar10;
    }
    if ((_Size == 0) || (uVar8 == 0)) {
      return false;
    }
  } while( true );
}



void __cdecl FUN_0041a690(int param_1,int param_2)

{
  (**(code **)(param_2 + 4))(param_2,*(undefined4 *)(param_1 + 0x10));
  *(undefined4 *)(param_1 + 0x10) = 0;
  (**(code **)(param_2 + 4))(param_2,*(undefined4 *)(param_1 + 0x14));
  *(undefined4 *)(param_1 + 0x14) = 0;
  return;
}



void __cdecl FUN_0041a6d0(int param_1)

{
  *(undefined4 *)(param_1 + 0x24) = 0;
  *(undefined4 *)(param_1 + 0x4c) = 1;
  *(undefined4 *)(param_1 + 0x48) = 0;
  *(undefined4 *)(param_1 + 0x58) = 0;
  *(undefined4 *)(param_1 + 0x2c) = 0;
  *(undefined4 *)(param_1 + 0x30) = 0;
  *(undefined4 *)(param_1 + 0x50) = 1;
  return;
}



undefined4 __cdecl FUN_0041a710(undefined4 *param_1,byte *param_2,int param_3)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  byte *pbVar6;
  uint uVar7;
  ushort *puVar8;
  byte *pbVar9;
  byte *pbVar10;
  int iVar11;
  int iVar12;
  uint uVar13;
  byte *pbVar14;
  uint local_14;
  int local_8;
  
  pbVar10 = param_2 + param_3;
  iVar4 = param_1[4];
  iVar11 = param_1[0xd];
  uVar1 = param_1[8];
  uVar2 = (1 << ((byte)param_1[2] & 0x1f)) - 1U & param_1[0xb];
  uVar13 = param_1[7];
  if (uVar13 < 0x1000000) {
    if (pbVar10 <= param_2) {
      return 0;
    }
    uVar13 = uVar13 << 8;
    uVar1 = uVar1 << 8 | (uint)*param_2;
    param_2 = param_2 + 1;
  }
  uVar3 = (uVar13 >> 0xb) * (uint)*(ushort *)(param_1[4] + (param_1[0xd] * 0x10 + uVar2) * 2);
  if (uVar1 < uVar3) {
    iVar4 = param_1[4] + 0xe6c;
    if ((param_1[0xc] != 0) || (param_1[0xb] != 0)) {
      iVar11 = param_1[9];
      if (iVar11 == 0) {
        iVar11 = param_1[10];
      }
      iVar4 = iVar4 + ((uint)(*(byte *)(param_1[5] + -1 + iVar11) >> (8U - *(char *)param_1 & 0x1f))
                      + (((1 << ((byte)param_1[1] & 0x1f)) - 1U & param_1[0xb]) <<
                        ((byte)*param_1 & 0x1f))) * 0x600;
    }
    if ((uint)param_1[0xd] < 7) {
      uVar13 = 1;
      do {
        uVar13 = uVar13 * 2;
        uVar2 = uVar3;
        if (uVar3 < 0x1000000) {
          if (pbVar10 <= param_2) {
            return 0;
          }
          uVar2 = uVar3 << 8;
          uVar1 = uVar1 << 8 | (uint)*param_2;
          param_2 = param_2 + 1;
        }
        uVar3 = (uVar2 >> 0xb) * (uint)*(ushort *)(uVar13 + iVar4);
        if (uVar3 <= uVar1) {
          uVar1 = uVar1 - uVar3;
          uVar13 = uVar13 + 1;
          uVar3 = uVar2 - uVar3;
        }
        pbVar14 = param_2;
      } while (uVar13 < 0x100);
    }
    else {
      if ((uint)param_1[9] < (uint)param_1[0xe]) {
        iVar11 = param_1[10];
      }
      else {
        iVar11 = 0;
      }
      uVar2 = (uint)*(byte *)((param_1[5] - param_1[0xe]) + param_1[9] + iVar11);
      param_1 = (undefined4 *)0x100;
      uVar13 = 1;
      do {
        uVar2 = uVar2 * 2;
        uVar7 = (uint)param_1 & uVar2;
        if (uVar3 < 0x1000000) {
          if (pbVar10 <= param_2) {
            return 0;
          }
          uVar3 = uVar3 << 8;
          uVar1 = uVar1 << 8 | (uint)*param_2;
          param_2 = param_2 + 1;
        }
        uVar5 = (uVar3 >> 0xb) * (uint)*(ushort *)(iVar4 + (uVar7 + uVar13 + (int)param_1) * 2);
        if (uVar1 < uVar5) {
          uVar13 = uVar13 * 2;
          uVar7 = ~uVar7;
          uVar3 = uVar5;
        }
        else {
          uVar3 = uVar3 - uVar5;
          uVar13 = uVar13 * 2 + 1;
          uVar1 = uVar1 - uVar5;
        }
        param_1 = (undefined4 *)((uint)param_1 & uVar7);
        pbVar14 = param_2;
      } while (uVar13 < 0x100);
    }
    param_1 = (undefined4 *)0x1;
    goto LAB_0041acd7;
  }
  uVar13 = uVar13 - uVar3;
  uVar1 = uVar1 - uVar3;
  pbVar14 = param_2;
  if (uVar13 < 0x1000000) {
    if (pbVar10 <= param_2) {
      return 0;
    }
    uVar13 = uVar13 * 0x100;
    uVar1 = uVar1 * 0x100 | (uint)*param_2;
    pbVar14 = param_2 + 1;
  }
  uVar7 = (uVar13 >> 0xb) * (uint)*(ushort *)(iVar4 + 0x180 + iVar11 * 2);
  if (uVar1 < uVar7) {
    local_14 = 0;
    puVar8 = (ushort *)(iVar4 + 0x664);
    param_1 = (undefined4 *)0x2;
  }
  else {
    uVar13 = uVar13 - uVar7;
    param_1 = (undefined4 *)0x3;
    uVar1 = uVar1 - uVar7;
    if (uVar13 < 0x1000000) {
      if (pbVar10 <= pbVar14) {
        return 0;
      }
      uVar1 = uVar1 * 0x100 | (uint)*pbVar14;
      uVar13 = uVar13 * 0x100;
      pbVar14 = pbVar14 + 1;
    }
    uVar3 = (uVar13 >> 0xb) * (uint)*(ushort *)(iVar4 + 0x198 + iVar11 * 2);
    if (uVar1 < uVar3) {
      if (uVar3 < 0x1000000) {
        if (pbVar10 <= pbVar14) {
          return 0;
        }
        uVar3 = uVar3 * 0x100;
        uVar1 = uVar1 << 8 | (uint)*pbVar14;
        pbVar14 = pbVar14 + 1;
      }
      uVar7 = (uVar3 >> 0xb) * (uint)*(ushort *)(iVar4 + ((iVar11 + 0xf) * 0x10 + uVar2) * 2);
      if (uVar1 < uVar7) {
        if ((uVar7 < 0x1000000) && (pbVar10 <= pbVar14)) {
          return 0;
        }
        return 3;
      }
LAB_0041aa78:
      uVar1 = uVar1 - uVar7;
      uVar7 = uVar3 - uVar7;
    }
    else {
      uVar13 = uVar13 - uVar3;
      uVar1 = uVar1 - uVar3;
      if (uVar13 < 0x1000000) {
        if (pbVar10 <= pbVar14) {
          return 0;
        }
        uVar13 = uVar13 * 0x100;
        uVar1 = uVar1 * 0x100 | (uint)*pbVar14;
        pbVar14 = pbVar14 + 1;
      }
      uVar7 = (uVar13 >> 0xb) * (uint)*(ushort *)(iVar4 + 0x1b0 + iVar11 * 2);
      if (uVar7 <= uVar1) {
        uVar3 = uVar13 - uVar7;
        uVar1 = uVar1 - uVar7;
        if (uVar3 < 0x1000000) {
          if (pbVar10 <= pbVar14) {
            return 0;
          }
          uVar3 = uVar3 * 0x100;
          uVar1 = uVar1 * 0x100 | (uint)*pbVar14;
          pbVar14 = pbVar14 + 1;
        }
        uVar7 = (uVar3 >> 0xb) * (uint)*(ushort *)(iVar4 + 0x1c8 + iVar11 * 2);
        if (uVar7 <= uVar1) goto LAB_0041aa78;
      }
    }
    local_14 = 0xc;
    puVar8 = (ushort *)(iVar4 + 0xa68);
  }
  if (uVar7 < 0x1000000) {
    if (pbVar10 <= pbVar14) {
      return 0;
    }
    uVar7 = uVar7 << 8;
    uVar1 = uVar1 << 8 | (uint)*pbVar14;
    pbVar14 = pbVar14 + 1;
  }
  uVar3 = (uVar7 >> 0xb) * (uint)*puVar8;
  if (uVar1 < uVar3) {
    param_2 = &DAT_00000008;
    puVar8 = puVar8 + uVar2 * 8 + 2;
    local_8 = 0;
  }
  else {
    uVar7 = uVar7 - uVar3;
    uVar1 = uVar1 - uVar3;
    if (uVar7 < 0x1000000) {
      if (pbVar10 <= pbVar14) {
        return 0;
      }
      uVar7 = uVar7 * 0x100;
      uVar1 = uVar1 * 0x100 | (uint)*pbVar14;
      pbVar14 = pbVar14 + 1;
    }
    uVar13 = (uVar7 >> 0xb) * (uint)puVar8[1];
    if (uVar1 < uVar13) {
      param_2 = &DAT_00000008;
      local_8 = 8;
      puVar8 = puVar8 + uVar2 * 8 + 0x82;
      uVar3 = uVar13;
    }
    else {
      uVar3 = uVar7 - uVar13;
      local_8 = 0x10;
      uVar1 = uVar1 - uVar13;
      param_2 = (byte *)0x100;
      puVar8 = puVar8 + 0x102;
    }
  }
  pbVar9 = (byte *)0x1;
  do {
    pbVar9 = (byte *)((int)pbVar9 * 2);
    uVar13 = uVar3;
    if (uVar3 < 0x1000000) {
      if (pbVar10 <= pbVar14) {
        return 0;
      }
      uVar13 = uVar3 << 8;
      uVar1 = uVar1 << 8 | (uint)*pbVar14;
      pbVar14 = pbVar14 + 1;
    }
    uVar3 = (uVar13 >> 0xb) * (uint)*(ushort *)(pbVar9 + (int)puVar8);
    if (uVar3 <= uVar1) {
      uVar1 = uVar1 - uVar3;
      pbVar9 = pbVar9 + 1;
      uVar3 = uVar13 - uVar3;
    }
  } while (pbVar9 < param_2);
  if (local_14 < 4) {
    uVar13 = 1;
    pbVar6 = (byte *)0x3;
    if (pbVar9 + (local_8 - (int)param_2) < &DAT_00000004) {
      pbVar6 = pbVar9 + (local_8 - (int)param_2);
    }
    do {
      uVar13 = uVar13 * 2;
      uVar2 = uVar3;
      if (uVar3 < 0x1000000) {
        if (pbVar10 <= pbVar14) {
          return 0;
        }
        uVar2 = uVar3 << 8;
        uVar1 = uVar1 << 8 | (uint)*pbVar14;
        pbVar14 = pbVar14 + 1;
      }
      uVar3 = (uVar2 >> 0xb) * (uint)*(ushort *)(uVar13 + (int)pbVar6 * 0x80 + iVar4 + 0x360);
      if (uVar3 <= uVar1) {
        uVar1 = uVar1 - uVar3;
        uVar13 = uVar13 + 1;
        uVar3 = uVar2 - uVar3;
      }
    } while (uVar13 < 0x40);
    uVar13 = uVar13 - 0x40;
    if (3 < uVar13) {
      iVar11 = (uVar13 >> 1) - 1;
      if (uVar13 < 0xe) {
        iVar4 = iVar4 + (((uVar13 & 1 | 2) << ((byte)iVar11 & 0x1f)) - uVar13) * 2 + 0x55e;
      }
      else {
        iVar11 = (uVar13 >> 1) - 5;
        do {
          if (uVar3 < 0x1000000) {
            if (pbVar10 <= pbVar14) {
              return 0;
            }
            uVar3 = uVar3 << 8;
            uVar1 = uVar1 << 8 | (uint)*pbVar14;
            pbVar14 = pbVar14 + 1;
          }
          uVar3 = uVar3 >> 1;
          uVar1 = uVar1 - (0xffffffffU - ((int)(uVar1 - uVar3) >> 0x1f) & uVar3);
          iVar11 = iVar11 + -1;
        } while (iVar11 != 0);
        iVar11 = 4;
        iVar4 = iVar4 + 0x644;
      }
      iVar12 = 1;
      do {
        iVar12 = iVar12 * 2;
        uVar13 = uVar3;
        if (uVar3 < 0x1000000) {
          if (pbVar10 <= pbVar14) {
            return 0;
          }
          uVar13 = uVar3 << 8;
          uVar1 = uVar1 << 8 | (uint)*pbVar14;
          pbVar14 = pbVar14 + 1;
        }
        uVar3 = (uVar13 >> 0xb) * (uint)*(ushort *)(iVar12 + iVar4);
        if (uVar3 <= uVar1) {
          uVar1 = uVar1 - uVar3;
          iVar12 = iVar12 + 1;
          uVar3 = uVar13 - uVar3;
        }
        iVar11 = iVar11 + -1;
      } while (iVar11 != 0);
    }
  }
LAB_0041acd7:
  if (0xffffff < uVar3) {
    return param_1;
  }
  if (pbVar10 <= pbVar14) {
    return 0;
  }
  return param_1;
}



undefined4 __cdecl FUN_0041acf0(uint *param_1,byte *param_2,uint param_3)

{
  byte bVar1;
  uint uVar2;
  
  if (param_3 < 5) {
    return 4;
  }
  uVar2 = *(uint *)(param_2 + 1);
  if (uVar2 < 0x1000) {
    uVar2 = 0x1000;
  }
  param_1[3] = uVar2;
  bVar1 = *param_2;
  if (0xe0 < bVar1) {
    return 4;
  }
  uVar2 = bVar1 / 9;
  *param_1 = (uint)bVar1 % 9;
  param_1[2] = uVar2 / 5;
  param_1[1] = uVar2 % 5;
  return 0;
}



undefined4 __cdecl FUN_0041ad70(int param_1,undefined4 param_2,uint param_3)

{
  int iVar1;
  
  iVar1 = FUN_0041b080(param_1,1);
  if (iVar1 == 0) {
    return 0;
  }
  if (*(char *)(param_1 + 0xb) == '\0') {
    if ((*(char *)(param_1 + 0xc) == '\0') && (1 < param_3 || *(char *)(param_1 + 10) != '\0')) {
      *(undefined *)(*(int *)(param_1 + 0x28) + *(int *)(param_1 + 0x30)) = (undefined)param_2;
      *(int *)(param_1 + 0x30) = *(int *)(param_1 + 0x30) + 1;
      *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0;
    }
  }
  else {
    iVar1 = FUN_0041ae00(param_1,param_2);
    if (iVar1 == 0) {
      *(undefined *)(param_1 + 0xf) = 3;
      return 0;
    }
  }
  return 1;
}



undefined4 __cdecl FUN_0041ae00(int param_1,undefined4 param_2)

{
  *(int *)(param_1 + 0x30) = *(int *)(param_1 + 0x30) + -1;
  *(undefined *)(param_1 + 0xb) = 0;
  *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0;
  if (false) {
switchD_0041ae2d_caseD_23:
    return 0;
  }
  switch(param_2) {
  case 0x22:
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0x22;
    break;
  default:
    goto switchD_0041ae2d_caseD_23;
  case 0x2f:
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0x2f;
    break;
  case 0x5c:
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0x5c;
    break;
  case 0x62:
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 8;
    break;
  case 0x66:
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0xc;
    break;
  case 0x6e:
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 10;
    break;
  case 0x72:
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0xd;
    break;
  case 0x74:
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 9;
    break;
  case 0x75:
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0x5c;
    *(int *)(param_1 + 0x30) = *(int *)(param_1 + 0x30) + 1;
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0;
    *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0x75;
  }
  *(int *)(param_1 + 0x30) = *(int *)(param_1 + 0x30) + 1;
  *(undefined *)(*(int *)(param_1 + 0x30) + *(int *)(param_1 + 0x28)) = 0;
  return 1;
}



undefined4 __cdecl FUN_0041af50(int param_1)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  char *pcVar4;
  uint uVar5;
  
  uVar5 = 0;
  iVar3 = 0xc;
  pcVar4 = (char *)(*(int *)(param_1 + 0x30) + -4 + *(int *)(param_1 + 0x28));
  do {
    uVar2 = (uint)*pcVar4;
    if (uVar2 < 0x61) {
      if (uVar2 < 0x41) {
        uVar2 = uVar2 & 0xffffffcf;
      }
      else {
        uVar2 = uVar2 - 0x37;
      }
    }
    else {
      uVar2 = uVar2 - 0x57;
    }
    pcVar4 = pcVar4 + 1;
    uVar5 = uVar5 | uVar2 << ((byte)iVar3 & 0x1f);
    iVar3 = iVar3 + -4;
  } while (-1 < iVar3);
  iVar3 = *(int *)(param_1 + 0x30) + -6;
  *(int *)(param_1 + 0x30) = iVar3;
  *(undefined *)(iVar3 + *(int *)(param_1 + 0x28)) = 0;
  if (*(ushort *)(param_1 + 0x12) == 0) {
    if (uVar5 < 0x80) {
      iVar3 = 0;
    }
    else if (uVar5 < 0x800) {
      iVar3 = 1;
    }
    else {
      if ((uVar5 & 0xfc00) == 0xd800) {
        *(short *)(param_1 + 0x12) = (short)uVar5;
        return 1;
      }
      if ((uVar5 & 0xfc00) == 0xdc00) {
        return 0;
      }
      iVar3 = 2;
    }
  }
  else {
    if ((uVar5 & 0xfc00) != 0xdc00) {
      return 0;
    }
    iVar3 = 3;
    uVar5 = (uVar5 & 0x3ff) + ((*(ushort *)(param_1 + 0x12) & 0x3ff) + 0x40) * 0x400;
    *(undefined2 *)(param_1 + 0x12) = 0;
  }
  iVar1 = iVar3 * 6;
  *(byte *)(*(int *)(param_1 + 0x28) + *(int *)(param_1 + 0x30)) =
       (byte)(uVar5 >> (sbyte)iVar1) | (&DAT_0043e2d0)[iVar3];
  *(int *)(param_1 + 0x30) = *(int *)(param_1 + 0x30) + 1;
  iVar3 = *(int *)(param_1 + 0x30);
  while (iVar1 = iVar1 + -6, -1 < iVar1) {
    *(byte *)(iVar3 + *(int *)(param_1 + 0x28)) =
         (byte)(uVar5 >> ((byte)iVar1 & 0x1f)) & 0x3f | 0x80;
    *(int *)(param_1 + 0x30) = *(int *)(param_1 + 0x30) + 1;
    iVar3 = *(int *)(param_1 + 0x30);
  }
  *(undefined *)(iVar3 + *(int *)(param_1 + 0x28)) = 0;
  return 1;
}



undefined4 __cdecl FUN_0041b080(int param_1,int param_2)

{
  size_t _Size;
  uint uVar1;
  void *_Dst;
  
  uVar1 = *(int *)(param_1 + 0x30) + param_2 + 1;
  if (*(uint *)(param_1 + 0x2c) <= uVar1 && uVar1 != *(uint *)(param_1 + 0x2c)) {
    do {
      _Size = *(size_t *)(param_1 + 0x30);
      uVar1 = *(int *)(param_1 + 0x2c) * 2;
      _Dst = (void *)(**(code **)(param_1 + 0xe60))(uVar1);
      if (_Dst == (void *)0x0) {
        *(undefined *)(param_1 + 0xf) = 10;
        return 0;
      }
      FID_conflict__memcpy(_Dst,*(void **)(param_1 + 0x28),_Size);
      if (*(int *)(param_1 + 0x28) != param_1 + 0xb4) {
        (**(code **)(param_1 + 0xe64))(*(int *)(param_1 + 0x28));
      }
      *(void **)(param_1 + 0x28) = _Dst;
      *(uint *)(param_1 + 0x2c) = uVar1;
    } while (uVar1 < (uint)(*(int *)(param_1 + 0x30) + param_2 + 1));
  }
  return 1;
}



undefined4 __cdecl FUN_0041b110(undefined **param_1)

{
  char cVar1;
  int iVar2;
  double *pdVar3;
  float10 fVar4;
  double local_c;
  
  if (*param_1 != (undefined *)0x0) {
    cVar1 = *(char *)((int)param_1 + 10);
    pdVar3 = (double *)0x0;
    if (cVar1 != '\0') {
      if (cVar1 == '\x05') {
        pdVar3 = &local_c;
        FUN_004285ff(param_1[10],(int)&DAT_0043e2c8);
      }
      else if (cVar1 == '\x06') {
        pdVar3 = &local_c;
        if (*(char *)((int)param_1 + 0xe) == '\0') {
          fVar4 = (float10)FUN_00428578(param_1[10],(byte **)0x0);
          local_c = (double)fVar4;
        }
        else {
          local_c = (double)CONCAT44(param_1[0xc],param_1[10]);
        }
      }
      else if (cVar1 == '\n') {
        pdVar3 = &local_c;
        local_c = (double)CONCAT44(param_1[0xc],param_1[10]);
      }
      iVar2 = (*(code *)*param_1)(param_1[1],(int)*(char *)((int)param_1 + 10),pdVar3);
      if (iVar2 == 0) {
        return 0;
      }
    }
  }
  param_1[0xc] = (undefined *)0x0;
  *param_1[10] = 0;
  return 1;
}



undefined4 __cdecl FUN_0041b1c0(int param_1,int param_2)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x1c);
  if ((-1 < iVar1) && (*(char *)(*(int *)(param_1 + 0x24) + iVar1) == param_2)) {
    *(int *)(param_1 + 0x1c) = iVar1 + -1;
    return 1;
  }
  return 0;
}



undefined4 __cdecl FUN_0041b1f0(int param_1,undefined param_2)

{
  size_t _Size;
  void *_Dst;
  
  if (*(int *)(param_1 + 0x18) < 0) {
    _Size = *(size_t *)(param_1 + 0x20);
    if (*(size_t *)(param_1 + 0x1c) == _Size) {
      _Dst = (void *)(**(code **)(param_1 + 0xe60))(_Size * 2);
      if (_Dst == (void *)0x0) {
        *(undefined *)(param_1 + 0xf) = 10;
        return 0;
      }
      *(size_t *)(param_1 + 0x20) = _Size * 2;
      FID_conflict__memcpy(_Dst,*(void **)(param_1 + 0x24),_Size);
      if (*(int *)(param_1 + 0x24) != param_1 + 0x34) {
        (**(code **)(param_1 + 0xe64))(*(int *)(param_1 + 0x24));
      }
      *(void **)(param_1 + 0x24) = _Dst;
    }
  }
  else if (*(int *)(param_1 + 0x1c) == *(int *)(param_1 + 0x18)) {
    *(undefined *)(param_1 + 0xf) = 6;
    return 0;
  }
  *(int *)(param_1 + 0x1c) = *(int *)(param_1 + 0x1c) + 1;
  *(undefined *)(*(int *)(param_1 + 0x1c) + *(int *)(param_1 + 0x24)) = param_2;
  return 1;
}



void __cdecl FUN_0041b280(int param_1)

{
  if (true) {
    switch(*(undefined *)(param_1 + 8)) {
    case 0:
      if (true) {
        switch(*(undefined4 *)(param_1 + 0x14)) {
        case 0x5b:
        case 0x5d:
        case 0x7b:
        case 0x7d:
          goto switchD_0041b296_caseD_6;
        }
      }
      break;
    case 2:
    case 3:
      *(undefined *)(param_1 + 0xf) = 8;
      return;
    case 4:
      *(undefined *)(param_1 + 0xf) = 9;
      return;
    case 6:
switchD_0041b296_caseD_6:
      *(undefined *)(param_1 + 0xf) = 7;
      return;
    case 9:
    case 10:
    case 0xb:
    case 0xc:
    case 0x22:
    case 0x23:
      *(undefined *)(param_1 + 0xf) = 4;
      return;
    case 0xd:
    case 0xe:
    case 0xf:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
      *(undefined *)(param_1 + 0xf) = 5;
      return;
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1a:
    case 0x1b:
    case 0x1c:
    case 0x1d:
      *(undefined *)(param_1 + 0xf) = 2;
      return;
    }
  }
  *(undefined *)(param_1 + 0xf) = 1;
  return;
}



undefined4 __cdecl FUN_0041b350(undefined **param_1,undefined *param_2)

{
  char cVar1;
  int iVar2;
  char cVar3;
  uint uVar4;
  undefined *local_c;
  undefined *local_8;
  
  param_1[5] = param_2;
  if ((int)param_2 < 0) {
    *(undefined *)((int)param_1 + 0xf) = 1;
    return 0;
  }
  if ((int)param_2 < 0x80) {
    uVar4 = (uint)(char)param_2[0x43ddc8];
    if ((int)uVar4 < 0) goto switchD_0041b3c0_caseD_15;
  }
  else {
    uVar4 = 0x1e;
  }
  iVar2 = FUN_0041ad70((int)param_1,param_2,uVar4);
  if (iVar2 == 0) {
    return 0;
  }
  cVar1 = (&UNK_0043de48)[uVar4 + *(char *)(param_1 + 2) * 0x20];
  if (-1 < cVar1) {
LAB_0041b3f0:
    *(char *)(param_1 + 2) = cVar1;
    return 1;
  }
  switch((int)cVar1) {
  default:
switchD_0041b3c0_caseD_15:
    FUN_0041b280((int)param_1);
    return 0;
  case -0x16:
    iVar2 = FUN_0041af50((int)param_1);
    if (iVar2 == 0) {
      *(undefined *)((int)param_1 + 0xf) = 4;
      return 0;
    }
    cVar1 = '\a';
    if (*(short *)((int)param_1 + 0x12) != 0) {
      cVar1 = '\"';
    }
    goto LAB_0041b3f0;
  case -0x15:
    *(undefined *)((int)param_1 + 0xb) = 1;
    *(undefined *)(param_1 + 2) = 8;
    return 1;
  case -0x14:
    *(undefined *)((int)param_1 + 10) = 5;
    *(undefined *)(param_1 + 2) = 0xf;
    return 1;
  case -0x13:
    *(undefined *)((int)param_1 + 10) = 5;
    *(undefined *)(param_1 + 2) = 0xe;
    return 1;
  case -0x12:
    *(undefined *)((int)param_1 + 10) = 5;
    *(undefined *)(param_1 + 2) = 0xd;
    return 1;
  case -0x11:
    param_1[0xc] = (undefined *)0x0;
    *param_1[10] = 0;
    *(undefined *)((int)param_1 + 10) = 10;
    *(undefined *)(param_1 + 2) = 7;
    return 1;
  case -0x10:
    if (*(char *)((int)param_1 + 0xe) == '\0') {
      (param_1[0xc] + -1)[(int)param_1[10]] = *(undefined *)(param_1 + 4);
    }
    *(undefined *)((int)param_1 + 10) = 6;
    *(undefined *)(param_1 + 2) = 0x21;
    return 1;
  case -0xf:
    *(undefined *)((int)param_1 + 10) = 6;
    *(undefined *)(param_1 + 2) = 0x11;
    return 1;
  case -0xe:
    *(undefined *)((int)param_1 + 10) = 7;
    *(undefined *)(param_1 + 2) = 0x1b;
    return 1;
  case -0xd:
    *(undefined *)((int)param_1 + 10) = 8;
    *(undefined *)(param_1 + 2) = 0x14;
    return 1;
  case -0xc:
    *(undefined *)((int)param_1 + 10) = 9;
    *(undefined *)(param_1 + 2) = 0x17;
    return 1;
  case -0xb:
    *(undefined *)(param_1 + 2) = *(undefined *)((int)param_1 + 9);
    *(undefined *)(param_1 + 3) = 0;
    return 1;
  case -10:
    if (*(char *)((int)param_1 + 0xd) != '\0') {
      param_1[0xc] = param_1[0xc] + -1;
      param_1[0xc][(int)param_1[10]] = 0;
      iVar2 = FUN_0041b110(param_1);
      if (iVar2 != 0) {
        if ((param_1[9][(int)param_1[7]] != '\x01') && (param_1[9][(int)param_1[7]] != '\x04')) {
          *(undefined *)((int)param_1 + 9) = *(undefined *)(param_1 + 2);
          *(undefined *)((int)param_1 + 10) = 0;
          *(undefined *)(param_1 + 2) = 0x1e;
          *(undefined *)(param_1 + 3) = 1;
          return 1;
        }
        cVar1 = *(char *)(param_1 + 2);
        *(undefined *)((int)param_1 + 10) = 0;
        *(undefined *)(param_1 + 2) = 0x1e;
        *(undefined *)(param_1 + 3) = 1;
        cVar3 = '\x01';
        if (cVar1 == '\x05' || cVar1 == '\x06') {
          cVar3 = cVar1;
        }
        *(char *)((int)param_1 + 9) = cVar3;
        return 1;
      }
    }
    break;
  case -9:
    param_1[0xc] = (undefined *)0x0;
    *param_1[10] = 0;
    if (((code *)*param_1 != (code *)0x0) &&
       (iVar2 = (*(code *)*param_1)(param_1[1],4,0), iVar2 == 0)) {
      return 0;
    }
    iVar2 = FUN_0041b1c0((int)param_1,3);
    if (iVar2 != 0) {
      *(undefined *)(param_1 + 2) = 1;
      return 1;
    }
    break;
  case -8:
    param_1[0xc] = param_1[0xc] + -1;
    param_1[0xc][(int)param_1[10]] = 0;
    iVar2 = FUN_0041b110(param_1);
    if (iVar2 == 0) {
      return 0;
    }
    if (((code *)*param_1 != (code *)0x0) &&
       (iVar2 = (*(code *)*param_1)(param_1[1],4,0), iVar2 == 0)) {
      return 0;
    }
    iVar2 = 4;
    goto LAB_0041b5f8;
  case -7:
    param_1[0xc] = param_1[0xc] + -1;
    param_1[0xc][(int)param_1[10]] = 0;
    iVar2 = FUN_0041b110(param_1);
    if (iVar2 == 0) {
      return 0;
    }
    if (((code *)*param_1 != (code *)0x0) &&
       (iVar2 = (*(code *)*param_1)(param_1[1],2,0), iVar2 == 0)) {
      return 0;
    }
    iVar2 = 1;
LAB_0041b5f8:
    iVar2 = FUN_0041b1c0((int)param_1,iVar2);
    if (iVar2 == 0) {
      *(undefined *)((int)param_1 + 0xf) = 7;
      return 0;
    }
LAB_0041b718:
    *(undefined *)((int)param_1 + 10) = 0;
    *(undefined *)(param_1 + 2) = 1;
    return 1;
  case -6:
    param_1[0xc] = param_1[0xc] + -1;
    param_1[0xc][(int)param_1[10]] = 0;
    if (((code *)*param_1 != (code *)0x0) &&
       (iVar2 = (*(code *)*param_1)(param_1[1],3,0), iVar2 == 0)) {
      return 0;
    }
    iVar2 = FUN_0041b1f0((int)param_1,3);
    if (iVar2 != 0) {
      *(undefined *)(param_1 + 2) = 2;
      return 1;
    }
    break;
  case -5:
    param_1[0xc] = param_1[0xc] + -1;
    param_1[0xc][(int)param_1[10]] = 0;
    if (((code *)*param_1 != (code *)0x0) &&
       (iVar2 = (*(code *)*param_1)(param_1[1],1,0), iVar2 == 0)) {
      return 0;
    }
    iVar2 = FUN_0041b1f0((int)param_1,1);
    if (iVar2 != 0) {
      *(undefined *)(param_1 + 2) = 6;
      return 1;
    }
    break;
  case -4:
    param_1[0xc] = param_1[0xc] + -1;
    param_1[0xc][(int)param_1[10]] = 0;
    cVar1 = param_1[9][(int)param_1[7]];
    if (cVar1 != '\x01') {
      if (cVar1 == '\x03') {
        *(undefined *)((int)param_1 + 10) = 0;
        *(undefined *)(param_1 + 2) = 4;
        if ((code *)*param_1 != (code *)0x0) {
          local_c = param_1[10];
          local_8 = param_1[0xc];
          iVar2 = (*(code *)*param_1)(param_1[1],0xb,&local_c);
          if (iVar2 == 0) {
            return 0;
          }
        }
        param_1[0xc] = (undefined *)0x0;
        *param_1[10] = 0;
        return 1;
      }
      if (cVar1 != '\x04') {
        return 0;
      }
    }
    iVar2 = FUN_0041b110(param_1);
    if (iVar2 == 0) {
      return 0;
    }
    goto LAB_0041b718;
  case -3:
    param_1[0xc] = param_1[0xc] + -1;
    param_1[0xc][(int)param_1[10]] = 0;
    iVar2 = FUN_0041b110(param_1);
    if (iVar2 != 0) {
      if (param_1[9][(int)param_1[7]] == '\x01') {
        *(undefined *)((int)param_1 + 10) = 0;
        *(undefined *)(param_1 + 2) = 5;
        return 1;
      }
      if (((param_1[9][(int)param_1[7]] == '\x04') &&
          (iVar2 = FUN_0041b1c0((int)param_1,4), iVar2 != 0)) &&
         (iVar2 = FUN_0041b1f0((int)param_1,3), iVar2 != 0)) {
        *(undefined *)((int)param_1 + 10) = 0;
        *(undefined *)(param_1 + 2) = 3;
        return 1;
      }
    }
    break;
  case -2:
    param_1[0xc] = param_1[0xc] + -1;
    param_1[0xc][(int)param_1[10]] = 0;
    iVar2 = FUN_0041b1c0((int)param_1,3);
    if ((iVar2 != 0) && (iVar2 = FUN_0041b1f0((int)param_1,4), iVar2 != 0)) {
      *(undefined *)(param_1 + 2) = 5;
      return 1;
    }
  }
  return 0;
}



undefined4 __cdecl FUN_0041b890(int param_1)

{
  int iVar1;
  
  if ((((*(char *)(param_1 + 8) == '\x01') || (*(char *)(param_1 + 8) == '\0')) &&
      (iVar1 = *(int *)(param_1 + 0x1c), -1 < iVar1)) &&
     (*(char *)(iVar1 + *(int *)(param_1 + 0x24)) == '\x02')) {
    *(int *)(param_1 + 0x1c) = iVar1 + -1;
    return 1;
  }
  *(undefined *)(param_1 + 0xf) = 7;
  return 0;
}



undefined4 __cdecl FUN_0041b8d0(int param_1)

{
  int iVar1;
  
  if (param_1 == 0) {
    return 0;
  }
  *(undefined *)(param_1 + 8) = 0;
  *(undefined4 *)(param_1 + 0x1c) = 0xffffffff;
  if (*(int *)(param_1 + 0x28) != 0) goto LAB_0041b939;
  iVar1 = *(int *)(param_1 + 0x18);
  if (iVar1 < 1) {
    *(undefined4 *)(param_1 + 0x20) = 0x80;
    *(undefined4 *)(param_1 + 0x18) = 0xffffffff;
LAB_0041b923:
    *(int *)(param_1 + 0x24) = param_1 + 0x34;
  }
  else {
    *(int *)(param_1 + 0x20) = iVar1;
    if (iVar1 < 0x81) goto LAB_0041b923;
    iVar1 = (**(code **)(param_1 + 0xe60))(iVar1);
    *(int *)(param_1 + 0x24) = iVar1;
    if (iVar1 == 0) {
      return 0;
    }
  }
  *(undefined4 *)(param_1 + 0x2c) = 0xdac;
  *(int *)(param_1 + 0x28) = param_1 + 0xb4;
LAB_0041b939:
  FUN_0041b1f0(param_1,2);
  *(undefined4 *)(param_1 + 0x30) = 0;
  **(undefined **)(param_1 + 0x28) = 0;
  return 1;
}



void __cdecl FUN_0041b960(int param_1)

{
  if (param_1 != 0) {
    if (*(int *)(param_1 + 0x24) != param_1 + 0x34) {
      (**(code **)(param_1 + 0xe64))(*(int *)(param_1 + 0x24));
    }
    if (*(int *)(param_1 + 0x28) != param_1 + 0xb4) {
      (**(code **)(param_1 + 0xe64))(*(int *)(param_1 + 0x28));
    }
    (**(code **)(param_1 + 0xe64))(param_1);
  }
  return;
}



void __cdecl FUN_0041b9b0(undefined (*param_1) [16])

{
  if (param_1 != (undefined (*) [16])0x0) {
    *param_1 = ZEXT816(0);
    *(undefined8 *)param_1[1] = 0;
    *(undefined4 *)(param_1[1] + 8) = 0;
    *(undefined4 *)(*param_1 + 8) = 0x7f;
    *(code **)(param_1[1] + 4) = FUN_00403c30;
    *(code **)(param_1[1] + 8) = FUN_00403c10;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

uint * __cdecl FUN_0041b9f0(uint *param_1)

{
  bool bVar1;
  uint *puVar2;
  code *pcVar3;
  undefined4 *puVar4;
  uint uVar5;
  int iVar6;
  undefined local_20 [16];
  undefined8 local_10;
  code *local_8;
  
  if (param_1 == (uint *)0x0) {
    param_1 = (uint *)local_20;
    local_20 = ZEXT1216(ZEXT412(0x7f) << 0x40);
    local_10 = 0x403c3000000000;
    local_8 = FUN_00403c10;
  }
  pcVar3 = (code *)param_1[5];
  if ((pcVar3 == (code *)0x0) || (param_1[6] == 0)) {
    bVar1 = true;
    pcVar3 = FUN_00403c30;
  }
  else {
    bVar1 = false;
  }
  puVar2 = (uint *)(*pcVar3)(0xe68);
  if (puVar2 != (uint *)0x0) {
    FUN_00427870(puVar2,0,0xe68);
    puVar2[0x398] = (uint)pcVar3;
    pcVar3 = FUN_00403c10;
    if (!bVar1) {
      pcVar3 = (code *)param_1[6];
    }
    puVar2[0x399] = (uint)pcVar3;
    *puVar2 = *param_1;
    puVar2[1] = param_1[1];
    *(bool *)((int)puVar2 + 0xd) = param_1[3] != 0;
    *(bool *)((int)puVar2 + 0xe) = param_1[4] != 0;
    puVar4 = (undefined4 *)FUN_00428690();
    *(undefined *)(puVar2 + 4) = *(undefined *)*puVar4;
    uVar5 = param_1[2];
    if (uVar5 == 0) {
      uVar5 = 1;
    }
    puVar2[6] = uVar5;
    iVar6 = FUN_0041b8d0((int)puVar2);
    if (iVar6 != 0) {
      return puVar2;
    }
    (*(code *)puVar2[0x399])(puVar2);
  }
  return (uint *)0x0;
}



void __cdecl FUN_0041baf0(uint *param_1,void *param_2,int *param_3,int *param_4)

{
  char cVar1;
  int *piVar2;
  undefined *puVar3;
  size_t sVar4;
  uint local_8c [22];
  uint local_34;
  uint uStack48;
  uint uStack44;
  uint uStack40;
  uint local_24;
  uint uStack32;
  uint uStack28;
  uint uStack24;
  uint local_14 [4];
  
  FID_conflict__memcpy(param_1,param_2,0x20);
  FUN_004242f0(local_8c);
  piVar2 = param_3;
  do {
    cVar1 = *(char *)piVar2;
    piVar2 = (int *)((int)piVar2 + 1);
  } while (cVar1 != '\0');
  FUN_004249b0((int *)local_8c,param_3,(int)piVar2 - ((int)param_3 + 1));
  FUN_00424260(local_14,local_8c);
  sVar4 = 0x20;
  puVar3 = FUN_00424a90(local_14,0x10);
  FID_conflict__memcpy(&local_34,puVar3,sVar4);
  *param_1 = *param_1 ^ local_34;
  param_1[1] = param_1[1] ^ uStack48;
  param_1[2] = param_1[2] ^ uStack44;
  param_1[3] = param_1[3] ^ uStack40;
  param_1[4] = param_1[4] ^ local_24;
  param_1[5] = param_1[5] ^ uStack32;
  param_1[6] = param_1[6] ^ uStack28;
  param_1[7] = param_1[7] ^ uStack24;
  FUN_004242f0(local_8c);
  piVar2 = param_4;
  do {
    cVar1 = *(char *)piVar2;
    piVar2 = (int *)((int)piVar2 + 1);
  } while (cVar1 != '\0');
  FUN_004249b0((int *)local_8c,param_4,(int)piVar2 - ((int)param_4 + 1));
  FUN_00424260(local_14,local_8c);
  sVar4 = 0x20;
  puVar3 = FUN_00424a90(local_14,0x10);
  FID_conflict__memcpy(&local_34,puVar3,sVar4);
  *param_1 = *param_1 ^ local_34;
  param_1[1] = param_1[1] ^ uStack48;
  param_1[2] = param_1[2] ^ uStack44;
  param_1[3] = param_1[3] ^ uStack40;
  param_1[4] = param_1[4] ^ local_24;
  param_1[5] = param_1[5] ^ uStack32;
  param_1[6] = param_1[6] ^ uStack28;
  param_1[7] = param_1[7] ^ uStack24;
  return;
}



undefined * FUN_0041bc20(void)

{
  char cVar1;
  undefined4 *puVar2;
  undefined *_Src;
  size_t _Size;
  undefined4 local_ec;
  uint local_6c [22];
  uint local_14 [4];
  
  if (DAT_0044a7da == '\0') {
    DAT_0044a7da = '\x01';
    FUN_00411490();
    FUN_0041dfc0((char *)&local_ec,0x80,(byte *)"FixAPI Region %d");
    FUN_004242f0(local_6c);
    puVar2 = &local_ec;
    do {
      cVar1 = *(char *)puVar2;
      puVar2 = (undefined4 *)((int)puVar2 + 1);
    } while (cVar1 != '\0');
    FUN_004249b0((int *)local_6c,&local_ec,(int)puVar2 - ((int)&local_ec + 1));
    FUN_00424260(local_14,local_6c);
    _Size = 0x20;
    _Src = FUN_00424a90(local_14,0x10);
    FID_conflict__memcpy(&DAT_0044a7b0,_Src,_Size);
  }
  return &DAT_0044a7b0;
}



void __cdecl FUN_0041bcd0(byte *param_1,int param_2,int param_3,int param_4)

{
  uint uVar1;
  int iVar2;
  
  if ((param_4 != 0) && (0 < param_2)) {
    iVar2 = param_3 - (int)param_1;
    do {
      uVar1 = (uint)(param_1 + iVar2) & 0x8000001f;
      if ((int)uVar1 < 0) {
        uVar1 = (uVar1 - 1 | 0xffffffe0) + 1;
      }
      *param_1 = *param_1 ^ *(byte *)(uVar1 + param_4);
      param_1 = param_1 + 1;
      param_2 = param_2 + -1;
    } while (param_2 != 0);
  }
  return;
}



undefined4 * __thiscall FUN_0041bd10(void *this,undefined4 param_1,undefined4 param_2)

{
  *(undefined ***)this = fixapi2_impl::CFixLobby::vftable;
  *(code **)((int)this + 0x94) = FUN_00408f40;
  *(undefined4 *)((int)this + 0x98) = 0;
  *(undefined4 *)((int)this + 0x9c) = 0;
  *(undefined4 *)((int)this + 0xa0) = 0;
  *(undefined4 *)((int)this + 0xac) = *(undefined4 *)((int)this + 0x98);
  *(undefined4 *)((int)this + 0xa4) = 0xffff;
  *(undefined4 *)((int)this + 0xa8) = 0xffffffff;
  *(undefined4 *)((int)this + 0xb0) = param_2;
  *(undefined4 *)((int)this + 4) = param_1;
  *(undefined4 *)((int)this + 8) = 0xffffffff;
  *(undefined4 *)((int)this + 0xc) = 0xffffffff;
  *(undefined4 *)((int)this + 0x10) = 0xffffffff;
  *(undefined *)((int)this + 0x14) = 0;
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_0041bd90(void *this,byte param_1)

{
  *(undefined ***)this = fixapi2_impl::CFixLobby::vftable;
  FUN_0041c000((int)this + 0x94);
  FUN_00410c50((int)this + 0x94);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_0041bdd0(void *this,uint *param_1)

{
  undefined4 *this_00;
  uint *puVar1;
  uint uVar2;
  uint uVar3;
  void *this_01;
  uint *this_02;
  uint local_10 [2];
  uint local_8;
  
  puVar1 = param_1;
  uVar2 = FUN_0040f770(param_1);
  uVar2 = uVar2 & 0xff;
  if (uVar2 == 0) {
    return (undefined4 *)0x0;
  }
  local_10[0] = uVar2;
  local_8 = uVar2;
  uVar3 = FUN_0040b090((void *)((int)this + 0x94),local_10);
  if ((uVar3 & 0xffff) == 0xffff) {
    this_01 = (void *)FUN_00403c30(0x180);
    if (this_01 == (void *)0x0) {
      this_02 = (uint *)0x0;
    }
    else {
      this_02 = FUN_004175f0(this_01,uVar2,*(undefined4 *)((int)this + 0xb0));
    }
    param_1 = this_02;
    FUN_0040b650((void *)((int)this + 0x94),&local_8,&param_1);
    FUN_00417cc0(this_02,puVar1);
    return this_02;
  }
  this_00 = *(undefined4 **)(*(int *)((int)this + 0x98) + 0xc + (uVar3 & 0xffff) * 0x10);
  FUN_00417cc0(this_00,puVar1);
  return this_00;
}



undefined4 FUN_0041be90(void)

{
  return 0xffffffff;
}



int __fastcall FUN_0041bea0(int param_1)

{
  return param_1 + 0x14;
}



void __fastcall FUN_0041beb0(int *param_1)

{
                    // WARNING: Could not recover jumptable at 0x0041beb6. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(*param_1 + 0x28))();
  return;
}



undefined2 __fastcall FUN_0041bec0(int param_1)

{
  return *(undefined2 *)(param_1 + 0xa6);
}



undefined4 __thiscall FUN_0041bed0(void *this,int param_1,char param_2)

{
  uint uVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  bool bVar5;
  int local_c [2];
  
  if (param_2 == '\0') {
    local_c[0] = param_1;
    uVar4 = FUN_0040b090((void *)((int)this + 0x94),local_c);
    if ((uVar4 & 0xffff) == 0xffff) {
      return 0;
    }
    return *(undefined4 *)(*(int *)((int)this + 0x98) + 0xc + (uVar4 & 0xffff) * 0x10);
  }
  uVar4 = 0;
  if (*(short *)((int)this + 0x9c) != 0) {
    uVar1 = (uint)*(ushort *)((int)this + 0x9c);
    do {
      uVar3 = uVar4 & 0xffff;
      if ((uVar3 < *(uint *)((int)this + 0x9c)) &&
         (uVar2 = (ushort)uVar3,
         uVar2 < *(ushort *)((int)this + 0xaa) || uVar2 == *(ushort *)((int)this + 0xaa))) {
        bVar5 = uVar2 == 0xffff;
        if (!bVar5) {
          bVar5 = *(ushort *)(*(int *)((int)this + 0x98) + uVar3 * 0x10) == uVar2;
        }
        if (!bVar5) {
          if (param_1 == 0) {
            return *(undefined4 *)(*(int *)((int)this + 0x98) + 0xc + (uVar4 & 0xffff) * 0x10);
          }
          param_1 = param_1 + -1;
        }
        uVar1 = (uint)*(ushort *)((int)this + 0x9c);
      }
      uVar4 = uVar4 + 1;
    } while ((int)uVar4 < (int)uVar1);
  }
  return 0;
}



bool __thiscall FUN_0041bfb0(void *this,ushort param_1)

{
  ushort uVar1;
  
  if (param_1 != 0xffff) {
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)param_1 * 0x10);
    if (uVar1 != 0xffff) {
      return *(ushort *)(*(int *)((int)this + 4) + (uint)uVar1 * 0x10) == param_1;
    }
  }
  return param_1 == 0xffff;
}



void __fastcall FUN_0041c000(int param_1)

{
  int *piVar1;
  ushort uVar2;
  uint uVar3;
  ushort uVar4;
  
  uVar4 = 0;
  if (*(short *)(param_1 + 8) != 0) {
    do {
      uVar3 = (uint)uVar4;
      if ((uVar3 < *(uint *)(param_1 + 8)) &&
         (uVar4 < *(ushort *)(param_1 + 0x16) || uVar4 == *(ushort *)(param_1 + 0x16))) {
        if (uVar4 == 0xffff) {
          uVar2 = 0xffff;
        }
        else {
          uVar2 = *(ushort *)(*(int *)(param_1 + 4) + uVar3 * 0x10);
        }
        if ((uVar2 != uVar4) &&
           (piVar1 = *(int **)(*(int *)(param_1 + 4) + 0xc + uVar3 * 0x10), piVar1 != (int *)0x0)) {
          (**(code **)(*piVar1 + 0x50))(1);
        }
      }
      uVar4 = uVar4 + 1;
    } while (uVar4 < *(ushort *)(param_1 + 8));
  }
  FUN_0040e600(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  return;
}



void __thiscall FUN_0041c0a0(void *this,uint param_1)

{
  ushort uVar1;
  uint uVar2;
  short sVar3;
  ushort uVar4;
  int iVar5;
  ushort *puVar6;
  int iVar7;
  undefined2 uVar8;
  uint uVar9;
  short sVar10;
  int local_14;
  ushort *local_10;
  
  uVar2 = param_1;
  if ((short)param_1 != *(short *)((int)this + 0x10)) {
    do {
      sVar10 = (short)param_1;
      if (sVar10 == -1) {
        uVar2 = 0xffff;
LAB_0041c0f5:
        sVar3 = -1;
      }
      else {
        iVar7 = *(int *)((int)this + 4);
        uVar2 = param_1;
        if (*(short *)(iVar7 + 6 + (param_1 & 0xffff) * 0x10) != 1) break;
        uVar4 = *(ushort *)(iVar7 + 4 + (param_1 & 0xffff) * 0x10);
        uVar2 = (uint)uVar4;
        if (uVar4 == 0xffff) goto LAB_0041c0f5;
        sVar3 = *(short *)(iVar7 + uVar2 * 0x10);
      }
      uVar4 = (ushort)uVar2;
      if (sVar10 == sVar3) {
        if (uVar4 != 0xffff) {
          iVar7 = *(int *)((int)this + 4);
          local_14 = uVar2 * 0x10 + iVar7;
          uVar9 = (uint)*(ushort *)(local_14 + 2);
          if (*(ushort *)(local_14 + 2) != 0xffff) {
            iVar5 = uVar9 * 0x10 + iVar7;
            if (*(short *)(iVar5 + 6) == 0) {
              *(undefined2 *)(iVar5 + 6) = 1;
              *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar2 * 0x10) = 0;
              FUN_0040e6c0(this,uVar4);
              if (sVar10 == -1) {
LAB_0041c42e:
                uVar2 = 0xffff;
              }
              else {
                iVar7 = *(int *)((int)this + 4);
                uVar4 = *(ushort *)(iVar7 + 4 + (param_1 & 0xffff) * 0x10);
                uVar2 = (uint)uVar4;
                if (uVar4 != 0xffff) {
                  local_14 = uVar2 * 0x10 + iVar7;
                  uVar9 = (uint)*(ushort *)(local_14 + 2);
                  goto LAB_0041c18d;
                }
              }
            }
            else {
LAB_0041c18d:
              if ((ushort)uVar9 != 0xffff) {
                iVar5 = uVar9 * 0x10;
                puVar6 = (ushort *)(iVar5 + iVar7);
                uVar4 = *puVar6;
                if (((uVar4 == 0xffff) || (*(short *)(iVar7 + 6 + (uint)uVar4 * 0x10) == 1)) &&
                   ((puVar6[1] == 0xffff || (*(short *)(iVar7 + 6 + (uint)puVar6[1] * 0x10) == 1))))
                goto LAB_0041c49a;
                uVar1 = *(ushort *)(iVar5 + 2 + iVar7);
                if ((uVar1 == 0xffff) || (*(short *)(iVar7 + 6 + (uint)uVar1 * 0x10) == 1)) {
                  *(undefined2 *)(iVar7 + 6 + (uint)uVar4 * 0x10) = 1;
                  *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar5) = 0;
                  FUN_0040c1a0(this,(ushort)uVar9);
                  if (sVar10 == -1) {
                    uVar2 = 0xffff;
                  }
                  else {
                    uVar4 = *(ushort *)(*(int *)((int)this + 4) + 4 + (param_1 & 0xffff) * 0x10);
                    uVar2 = (uint)uVar4;
                    if (uVar4 != 0xffff) {
                      iVar7 = uVar2 * 0x10 + *(int *)((int)this + 4);
                      uVar9 = (uint)*(ushort *)(iVar7 + 2);
                      uVar8 = *(undefined2 *)(iVar7 + 6);
                      goto LAB_0041c274;
                    }
                  }
                  uVar9 = 0xffff;
                  uVar8 = 1;
                }
                else {
                  uVar8 = *(undefined2 *)(local_14 + 6);
                }
LAB_0041c274:
                *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar9 * 0x10) = uVar8;
                *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar2 * 0x10) = 1;
                uVar4 = 0xffff;
                if ((short)uVar9 != -1) {
                  uVar4 = *(ushort *)(*(int *)((int)this + 4) + 2 + uVar9 * 0x10);
                }
                *(undefined2 *)(*(int *)((int)this + 4) + 6 + (uint)uVar4 * 0x10) = 1;
                FUN_0040e6c0(this,(ushort)uVar2);
                uVar2 = (uint)*(ushort *)((int)this + 0x10);
              }
            }
          }
        }
      }
      else if (uVar4 != 0xffff) {
        iVar7 = *(int *)((int)this + 4);
        local_10 = (ushort *)(uVar2 * 0x10 + iVar7);
        uVar9 = (uint)*local_10;
        if (*local_10 != 0xffff) {
          iVar5 = uVar9 * 0x10 + iVar7;
          if (*(short *)(iVar5 + 6) == 0) {
            *(undefined2 *)(iVar5 + 6) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar2 * 0x10) = 0;
            FUN_0040c1a0(this,uVar4);
            if (sVar10 == -1) goto LAB_0041c42e;
            iVar7 = *(int *)((int)this + 4);
            uVar4 = *(ushort *)(iVar7 + 4 + (param_1 & 0xffff) * 0x10);
            uVar2 = (uint)uVar4;
            if (uVar4 == 0xffff) goto LAB_0041c4a3;
            local_10 = (ushort *)(uVar2 * 0x10 + iVar7);
            uVar9 = (uint)*local_10;
          }
          if ((ushort)uVar9 != 0xffff) {
            iVar5 = uVar9 * 0x10;
            puVar6 = (ushort *)(iVar5 + iVar7);
            uVar4 = puVar6[1];
            if (((uVar4 == 0xffff) || (*(short *)(iVar7 + 6 + (uint)uVar4 * 0x10) == 1)) &&
               ((*puVar6 == 0xffff || (*(short *)(iVar7 + 6 + (uint)*puVar6 * 0x10) == 1)))) {
LAB_0041c49a:
              puVar6[3] = 0;
            }
            else {
              if ((*(ushort *)(iVar5 + iVar7) == 0xffff) ||
                 (*(short *)(iVar7 + 6 + (uint)*(ushort *)(iVar5 + iVar7) * 0x10) == 1)) {
                *(undefined2 *)(iVar7 + 6 + (uint)uVar4 * 0x10) = 1;
                *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar5) = 0;
                FUN_0040e6c0(this,(ushort)uVar9);
                if (sVar10 == -1) {
                  uVar2 = 0xffff;
                }
                else {
                  uVar4 = *(ushort *)(*(int *)((int)this + 4) + 4 + (param_1 & 0xffff) * 0x10);
                  uVar2 = (uint)uVar4;
                  if (uVar4 != 0xffff) {
                    puVar6 = (ushort *)(uVar2 * 0x10 + *(int *)((int)this + 4));
                    uVar9 = (uint)*puVar6;
                    uVar4 = puVar6[3];
                    goto LAB_0041c444;
                  }
                }
                uVar9 = 0xffff;
                uVar4 = 1;
              }
              else {
                uVar4 = local_10[3];
              }
LAB_0041c444:
              *(ushort *)(*(int *)((int)this + 4) + 6 + uVar9 * 0x10) = uVar4;
              *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar2 * 0x10) = 1;
              uVar4 = 0xffff;
              if ((short)uVar9 != -1) {
                uVar4 = *(ushort *)(*(int *)((int)this + 4) + uVar9 * 0x10);
              }
              *(undefined2 *)(*(int *)((int)this + 4) + 6 + (uint)uVar4 * 0x10) = 1;
              FUN_0040c1a0(this,(ushort)uVar2);
              uVar2 = (uint)*(ushort *)((int)this + 0x10);
            }
          }
        }
      }
LAB_0041c4a3:
      param_1 = uVar2;
    } while ((short)uVar2 != *(short *)((int)this + 0x10));
  }
  *(undefined2 *)(*(int *)((int)this + 4) + 6 + (uVar2 & 0xffff) * 0x10) = 1;
  return;
}



void __thiscall FUN_0041c4d0(void *this,ushort param_1)

{
  short sVar1;
  bool bVar2;
  ushort uVar3;
  ushort uVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  short sVar8;
  uint uVar9;
  ushort uVar10;
  
  if (param_1 == 0xffff) {
    return;
  }
  iVar7 = *(int *)((int)this + 4);
  iVar5 = (uint)param_1 * 0x10;
  uVar4 = param_1;
  if (*(short *)(iVar7 + iVar5) != -1) {
    uVar3 = *(ushort *)(iVar7 + 2 + iVar5);
    while (uVar10 = uVar3, uVar10 != 0xffff) {
      if (uVar10 == 0xffff) goto LAB_0041c570;
      uVar4 = uVar10;
      uVar3 = *(ushort *)(iVar7 + (uint)uVar10 * 0x10);
    }
  }
  uVar10 = uVar4;
  if (uVar10 == 0xffff) {
LAB_0041c570:
    uVar9 = 0xffff;
  }
  else {
    uVar6 = (uint)uVar10;
    uVar4 = *(ushort *)(iVar7 + uVar6 * 0x10);
    if (uVar4 == 0xffff) {
      uVar4 = *(ushort *)(iVar7 + 2 + uVar6 * 0x10);
    }
    uVar9 = (uint)uVar4;
    if (uVar4 != 0xffff) {
      *(undefined2 *)(*(int *)((int)this + 4) + 4 + uVar9 * 0x10) =
           *(undefined2 *)(*(int *)((int)this + 4) + 4 + uVar6 * 0x10);
    }
  }
  sVar8 = (short)uVar9;
  if (uVar10 == *(ushort *)((int)this + 0x10)) {
    *(short *)((int)this + 0x10) = sVar8;
    goto LAB_0041c5ef;
  }
  if (uVar10 == 0xffff) {
LAB_0041c59b:
    uVar4 = 0xffff;
  }
  else {
    uVar4 = *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar10 * 0x10);
    if (uVar4 == 0xffff) goto LAB_0041c59b;
    uVar4 = *(ushort *)(*(int *)((int)this + 4) + (uint)uVar4 * 0x10);
  }
  uVar3 = 0xffff;
  if (uVar4 == uVar10) {
    if (uVar10 != 0xffff) {
      uVar3 = *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar10 * 0x10);
    }
    *(short *)(*(int *)((int)this + 4) + (uint)uVar3 * 0x10) = sVar8;
  }
  else {
    if (uVar10 != 0xffff) {
      uVar3 = *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar10 * 0x10);
    }
    *(short *)(*(int *)((int)this + 4) + 2 + (uint)uVar3 * 0x10) = sVar8;
  }
LAB_0041c5ef:
  if (uVar10 == 0xffff) {
    sVar1 = 1;
  }
  else {
    sVar1 = *(short *)(*(int *)((int)this + 4) + 6 + (uint)uVar10 * 0x10);
  }
  if (uVar10 != param_1) {
    iVar7 = (uint)uVar10 * 0x10;
    *(undefined2 *)(iVar7 + 4 + *(int *)((int)this + 4)) =
         *(undefined2 *)(*(int *)((int)this + 4) + 4 + iVar5);
    *(undefined2 *)(iVar7 + 2 + *(int *)((int)this + 4)) =
         *(undefined2 *)(*(int *)((int)this + 4) + 2 + iVar5);
    *(undefined2 *)(iVar7 + *(int *)((int)this + 4)) =
         *(undefined2 *)(*(int *)((int)this + 4) + iVar5);
    if (param_1 == *(ushort *)((int)this + 0x10)) {
      *(ushort *)((int)this + 0x10) = uVar10;
    }
    else {
      bVar2 = FUN_0041bfb0(this,param_1);
      if (bVar2) {
        uVar4 = FUN_00409160(this,param_1);
        *(ushort *)(*(int *)((int)this + 4) + (uint)uVar4 * 0x10) = uVar10;
      }
      else {
        uVar4 = FUN_00409160(this,param_1);
        *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar4 * 0x10) = uVar10;
      }
    }
    if (uVar10 != 0xffff) {
      uVar4 = *(ushort *)(iVar7 + *(int *)((int)this + 4));
      if (uVar4 != 0xffff) {
        *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar4 * 0x10) = uVar10;
      }
      uVar4 = *(ushort *)(iVar7 + 2 + *(int *)((int)this + 4));
      if (uVar4 != 0xffff) {
        *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar4 * 0x10) = uVar10;
      }
    }
    *(undefined2 *)(iVar7 + 6 + *(int *)((int)this + 4)) =
         *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar5);
  }
  if ((sVar8 != -1) && (sVar1 == 1)) {
    FUN_0041c0a0(this,uVar9);
  }
  return;
}



void __thiscall FUN_0041c710(void *this,void *param_1)

{
  undefined4 uVar1;
  
  uVar1 = FUN_0040f880(param_1);
  *(undefined4 *)((int)this + 8) = uVar1;
  uVar1 = FUN_0040f880(param_1);
  *(undefined4 *)((int)this + 0xc) = uVar1;
  uVar1 = FUN_0040f880(param_1);
  *(undefined4 *)((int)this + 0x10) = uVar1;
  FUN_0040f8b0(param_1,(void *)((int)this + 0x14));
  return;
}



uint __thiscall FUN_0041c750(void *this,undefined4 *param_1,uint *param_2)

{
  int *piVar1;
  uint uVar2;
  uint uVar3;
  void *this_00;
  undefined4 *this_01;
  undefined4 uVar4;
  void *this_02;
  ushort uVar5;
  uint uVar6;
  undefined4 *local_14 [2];
  uint local_c;
  void *local_8;
  
  local_8 = this;
  uVar2 = FUN_0040f770(param_2);
  this_02 = (void *)((int)this + 0x94);
  local_14[0] = param_1;
  local_c = uVar2 & 0xff;
  uVar3 = FUN_0040b090(this_02,local_14);
  uVar6 = uVar3 & 0xffff;
  if ((uVar2 & 0xff) == 0) {
    if (uVar6 != 0xffff) {
      param_1 = (undefined4 *)(uVar6 * 0x10);
      piVar1 = *(int **)(*(int *)((int)local_8 + 0x98) + 0xc + (int)param_1);
      uVar5 = (ushort)uVar6;
      if (uVar5 != 0xffff) {
        FUN_0041c4d0(this_02,uVar5);
        *(ushort *)((int)param_1 + *(int *)((int)this + 0x98)) = uVar5;
        *(undefined2 *)(*(int *)((int)this + 0x98) + 2 + (int)param_1) =
             *(undefined2 *)((int)this + 0xa8);
        *(short *)((int)this + 0xa6) = *(short *)((int)this + 0xa6) + -1;
        *(ushort *)((int)this + 0xa8) = uVar5;
      }
      uVar3 = 0xffff;
      if (piVar1 != (int *)0x0) {
        uVar3 = (**(code **)(*piVar1 + 0x50))(1);
      }
    }
    return uVar3 & 0xffffff00;
  }
  if (uVar6 == 0xffff) {
    this_00 = (void *)FUN_00403c30(0x180);
    if (this_00 == (void *)0x0) {
      this_01 = (undefined4 *)0x0;
    }
    else {
      this_01 = FUN_004175f0(this_00,param_1,*(undefined4 *)((int)local_8 + 0xb0));
    }
    param_1 = this_01;
    FUN_0040b650(this_02,&local_c,&param_1);
  }
  else {
    this_01 = *(undefined4 **)(*(int *)((int)local_8 + 0x98) + 0xc + uVar6 * 0x10);
  }
  uVar4 = FUN_00417bc0(this_01,param_2);
  return CONCAT31((int3)((uint)uVar4 >> 8),1);
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall FUN_0041c870(void *this,uint *param_1,uint **param_2,int *param_3)

{
  ushort uVar1;
  int iVar2;
  uint uVar3;
  void *pvVar4;
  undefined4 *puVar5;
  int iVar6;
  uint *puVar7;
  uint *puVar8;
  undefined2 uVar9;
  void *this_00;
  ushort uVar10;
  uint uVar11;
  undefined local_40 [8];
  int iStack56;
  int iStack52;
  int local_30;
  uint local_2c [2];
  uint local_24;
  undefined4 *local_20;
  int local_1c;
  uint local_18;
  undefined4 *local_14;
  uint local_10;
  void *local_c;
  char local_5;
  
  local_30 = 0;
  local_18 = 0xffff;
  local_10 = 0;
  _local_40 = ZEXT816(0);
  iStack52 = 0;
  local_40._0_4_ = 0;
  iVar6 = iStack52;
  local_c = this;
  if (*(short *)((int)this + 0x9c) != 0) {
    do {
      uVar11 = local_10 & 0xffff;
      iStack52 = iVar6;
      if ((uVar11 < *(uint *)((int)local_c + 0x9c)) &&
         (uVar10 = (ushort)uVar11,
         uVar10 < *(ushort *)((int)local_c + 0xaa) || uVar10 == *(ushort *)((int)local_c + 0xaa))) {
        if (uVar10 == (ushort)local_18) {
          uVar1 = 0xffff;
        }
        else {
          uVar1 = *(ushort *)(*(int *)((int)local_c + 0x98) + uVar11 * 0x10);
        }
        if (uVar1 != uVar10) {
          local_14 = (undefined4 *)(*(int *)((int)local_c + 0x98) + 8 + uVar11 * 0x10);
          if (local_40._4_4_ < iVar6 + 1) {
            FUN_0040a710(local_40,(iVar6 - local_40._4_4_) + 1);
          }
          iStack52 = iStack52 + 1;
          iVar2 = (iStack52 - iVar6) + -1;
          local_30 = local_40._0_4_;
          if (0 < iVar2) {
            pvVar4 = (void *)(local_40._0_4_ + iVar6 * 4);
            FID_conflict__memcpy((void *)((int)pvVar4 + 4),pvVar4,iVar2 * 4);
          }
          puVar5 = (undefined4 *)(local_40._0_4_ + iVar6 * 4);
          if (puVar5 != (undefined4 *)0x0) {
            *puVar5 = *local_14;
          }
        }
      }
      local_10 = local_10 + 1;
      iVar6 = iStack52;
    } while ((int)local_10 < (int)(uint)*(ushort *)((int)local_c + 0x9c));
  }
  local_18 = FUN_0040f770(param_1);
  local_18 = local_18 & 0xff;
  if (local_18 != 0) {
    local_14 = (undefined4 *)(local_40._0_4_ + (iStack52 + -1) * 4);
    do {
      uVar11 = FUN_0040f770(param_1);
      uVar11 = uVar11 & 0xff;
      local_2c[0] = uVar11;
      uVar3 = FUN_0040b090((void *)((int)local_c + 0x94),local_2c);
      if ((short)uVar3 == -1) {
        pvVar4 = (void *)FUN_00403c30(0x180);
        if (pvVar4 == (void *)0x0) {
          local_20 = (undefined4 *)0x0;
        }
        else {
          local_20 = FUN_004175f0(pvVar4,uVar11,*(undefined4 *)((int)local_c + 0xb0));
        }
        pvVar4 = local_c;
        this_00 = (void *)((int)local_c + 0x94);
        local_10 = 0xffff;
        local_5 = '\0';
        local_24 = uVar11;
        FUN_0040b110(this_00,&local_24,(ushort *)&local_10,&local_5);
        uVar3 = FUN_0040c000((int)this_00);
        uVar3 = uVar3 & 0xffff;
        local_1c = uVar3 * 0x10;
        puVar5 = (undefined4 *)(*(int *)((int)pvVar4 + 0x98) + local_1c);
        *(short *)(puVar5 + 1) = (short)local_10;
        *(undefined2 *)((int)puVar5 + 6) = 0;
        *puVar5 = 0xffffffff;
        uVar9 = (undefined2)uVar3;
        if ((short)local_10 == -1) {
          *(undefined2 *)((int)pvVar4 + 0xa4) = uVar9;
        }
        else if (local_5 == '\0') {
          *(undefined2 *)(*(int *)((int)pvVar4 + 0x98) + 2 + (local_10 & 0xffff) * 0x10) = uVar9;
        }
        else {
          *(undefined2 *)(*(int *)((int)pvVar4 + 0x98) + (local_10 & 0xffff) * 0x10) = uVar9;
        }
        FUN_0040b6d0(this_00,uVar3);
        *(short *)((int)pvVar4 + 0xa6) = *(short *)((int)pvVar4 + 0xa6) + 1;
        puVar7 = (uint *)(local_1c + 8 + *(int *)((int)pvVar4 + 0x98));
        if (puVar7 != (uint *)0x0) {
          *puVar7 = local_24;
          puVar7[1] = (uint)local_20;
        }
        iVar6 = 0;
        puVar7 = param_2[3];
        if (0 < (int)puVar7) {
          puVar8 = *param_2;
          do {
            if (*puVar8 == uVar11) {
              if (-1 < iVar6) {
                goto LAB_0041cb10;
              }
              break;
            }
            iVar6 = iVar6 + 1;
            puVar8 = puVar8 + 1;
          } while (iVar6 < (int)puVar7);
        }
        if ((int)param_2[1] < (int)puVar7 + 1) {
          FUN_0040a710(param_2,(int)puVar7 + (1 - (int)param_2[1]));
        }
        param_2[3] = (uint *)((int)param_2[3] + 1);
        iVar6 = (int)param_2[3] + (-1 - (int)puVar7);
        param_2[4] = *param_2;
        if (0 < iVar6) {
          puVar8 = *param_2 + (int)puVar7;
          FID_conflict__memcpy(puVar8 + 1,puVar8,iVar6 * 4);
        }
        if (*param_2 + (int)puVar7 != (uint *)0x0) {
          (*param_2)[(int)puVar7] = uVar11;
        }
      }
LAB_0041cb10:
      iVar6 = 0;
      if (0 < iStack52) {
        do {
          if (*(uint *)(local_40._0_4_ + iVar6 * 4) == uVar11) {
            if ((iVar6 != -1) && (0 < iStack52)) {
              iStack52 = iStack52 + -1;
              if (iVar6 != iStack52) {
                *(undefined4 *)(local_40._0_4_ + iVar6 * 4) = *local_14;
              }
              local_14 = local_14 + -1;
            }
            break;
          }
          iVar6 = iVar6 + 1;
        } while (iVar6 < iStack52);
      }
      local_18 = local_18 - 1;
    } while (local_18 != 0);
  }
  while (iStack52 = iStack52 + -1, -1 < iStack52) {
    iVar6 = param_3[3];
    if (param_3[1] < iVar6 + 1) {
      FUN_0040a710(param_3,(iVar6 - param_3[1]) + 1);
    }
    param_3[3] = param_3[3] + 1;
    iVar2 = (param_3[3] - iVar6) + -1;
    param_3[4] = *param_3;
    if (0 < iVar2) {
      pvVar4 = (void *)(*param_3 + iVar6 * 4);
      FID_conflict__memcpy((void *)((int)pvVar4 + 4),pvVar4,iVar2 * 4);
    }
    puVar5 = (undefined4 *)(*param_3 + iVar6 * 4);
    if (puVar5 != (undefined4 *)0x0) {
      *puVar5 = *(undefined4 *)(local_40._0_4_ + iStack52 * 4);
    }
  }
  iStack56 = SUB164(_local_40 >> 0x40,0);
  if (((-1 < iStack56) && (local_40._0_4_ != 0)) &&
     ((**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_40._0_4_), false)) {
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(0);
  }
  return;
}



void __cdecl FUN_0041cbe0(undefined **param_1,int param_2)

{
  int *piVar1;
  bool bVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  uint uVar6;
  int local_c;
  code **local_8;
  
  if (DAT_0044aa6c < 0) {
    Error("APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n",DAT_0044aa6c);
    DAT_0044aa68 = DAT_0044aa68 + 1;
    return;
  }
  if (DAT_0044aa6c == 0) {
    local_8 = (code **)param_2;
    if (0 < param_2) {
      do {
        uVar6 = 0;
        do {
          piVar1 = *(int **)((int)&PTR_DAT_004472dc + uVar6);
          if (*piVar1 == 0) {
            iVar4 = (*(code *)*param_1)(*(undefined4 *)((int)&PTR_s_VEngineCvar007_004472d8 + uVar6)
                                        ,0);
            *piVar1 = iVar4;
            if (iVar4 != 0) {
              (&DAT_0044a8c0)[DAT_0044aa6c * 2] = piVar1;
              iVar4 = DAT_0044aa6c * 2;
              DAT_0044aa6c = DAT_0044aa6c + 1;
              (&DAT_0044a8c4)[iVar4] = DAT_0044aa68;
            }
          }
          uVar6 = uVar6 + 8;
        } while (uVar6 < 0x1a0);
        param_1 = (code **)param_1 + 1;
        local_8 = (code **)((int)local_8 + -1);
      } while (local_8 != (code **)0x0);
    }
  }
  else {
    local_c = param_2;
    if (0 < param_2) {
      local_8 = (code **)param_1;
      do {
        uVar6 = 0;
        do {
          piVar1 = *(int **)((int)&PTR_DAT_004472dc + uVar6);
          iVar5 = (**local_8)(*(undefined4 *)((int)&PTR_s_VEngineCvar007_004472d8 + uVar6),0);
          iVar3 = DAT_0044aa6c;
          iVar4 = DAT_0044aa68;
          bVar2 = false;
          *piVar1 = iVar5;
          iVar5 = 0;
          if (iVar3 < 1) {
LAB_0041ccdb:
            if (*piVar1 != 0) {
              DAT_0044aa6c = iVar3 + 1;
              (&DAT_0044a8c0)[iVar3 * 2] = piVar1;
              (&DAT_0044a8c4)[iVar3 * 2] = iVar4;
            }
          }
          else {
            do {
              if ((int *)(&DAT_0044a8c0)[iVar5 * 2] == piVar1) {
                (&DAT_0044a8c0)[iVar5 * 2] = piVar1;
                bVar2 = true;
              }
              iVar5 = iVar5 + 1;
            } while (iVar5 < iVar3);
            if (!bVar2) goto LAB_0041ccdb;
          }
          uVar6 = uVar6 + 8;
        } while (uVar6 < 0x1a0);
        local_8 = local_8 + 1;
        local_c = local_c + -1;
        if (local_c == 0) {
          DAT_0044aa68 = iVar4 + 1;
          return;
        }
      } while( true );
    }
  }
  DAT_0044aa68 = DAT_0044aa68 + 1;
  return;
}



void __cdecl FUN_0041cd60(undefined *param_1,byte *param_2)

{
  byte bVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  byte *pbVar5;
  uint uVar6;
  int iVar7;
  byte *pbVar8;
  uint uVar9;
  bool bVar10;
  
  uVar9 = 0;
  do {
    pbVar5 = *(byte **)((int)&PTR_s_VEngineCvar007_004472d8 + uVar9);
    pbVar8 = param_2;
    do {
      bVar1 = *pbVar5;
      bVar10 = bVar1 < *pbVar8;
      if (bVar1 != *pbVar8) {
LAB_0041cda0:
        uVar6 = -(uint)bVar10 | 1;
        goto LAB_0041cda5;
      }
      if (bVar1 == 0) break;
      bVar1 = pbVar5[1];
      bVar10 = bVar1 < pbVar8[1];
      if (bVar1 != pbVar8[1]) goto LAB_0041cda0;
      pbVar5 = pbVar5 + 2;
      pbVar8 = pbVar8 + 2;
    } while (bVar1 != 0);
    uVar6 = 0;
LAB_0041cda5:
    if (uVar6 == 0) {
      piVar2 = *(int **)((int)&PTR_DAT_004472dc + uVar9);
      iVar7 = (*(code *)param_1)(*(byte **)((int)&PTR_s_VEngineCvar007_004472d8 + uVar9),0);
      iVar4 = DAT_0044aa6c;
      *piVar2 = iVar7;
      bVar10 = false;
      iVar7 = 0;
      if (0 < iVar4) {
        do {
          if ((int *)(&DAT_0044a8c0)[iVar7 * 2] == piVar2) {
            (&DAT_0044a8c0)[iVar7 * 2] = piVar2;
            bVar10 = true;
          }
          iVar7 = iVar7 + 1;
        } while (iVar7 < iVar4);
        if (bVar10) goto LAB_0041cdff;
      }
      uVar3 = DAT_0044aa68;
      if (*piVar2 != 0) {
        DAT_0044aa6c = iVar4 + 1;
        (&DAT_0044a8c0)[iVar4 * 2] = piVar2;
        (&DAT_0044a8c4)[iVar4 * 2] = uVar3;
      }
    }
LAB_0041cdff:
    uVar9 = uVar9 + 8;
    if (0x19f < uVar9) {
      return;
    }
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int * __thiscall FUN_0041ce20(void *this,int param_1)

{
  longlong lVar1;
  undefined4 uVar2;
  
  if (_DAT_0044ea70 == 0) {
    FUN_0041d160();
    _DAT_0044ea70 = 1;
  }
  if (param_1 < 1) {
    *(undefined4 *)this = 1;
    *(undefined4 *)((int)this + 4) = 8;
  }
  else {
    *(int *)this = param_1;
    *(int *)((int)this + 4) = param_1 << 4;
  }
  lVar1 = (ulonglong)*(uint *)((int)this + 4) * 0xc;
  uVar2 = FUN_00403c30(-(uint)((int)((ulonglong)lVar1 >> 0x20) != 0) | (uint)lVar1);
  *(undefined4 *)((int)this + 8) = uVar2;
  return (int *)this;
}



void __fastcall FUN_0041ce90(undefined4 *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = 0;
  if (0 < (int)param_1[1]) {
    iVar1 = 0;
    do {
      iVar2 = iVar2 + 1;
      *(undefined4 *)(iVar1 + param_1[2]) = 0;
      *(undefined4 *)(iVar1 + 4 + param_1[2]) = 0;
      *(undefined4 *)(iVar1 + 8 + param_1[2]) = 0;
      iVar1 = iVar1 + 0xc;
    } while (iVar2 < (int)param_1[1]);
  }
  *param_1 = 0;
  param_1[1] = 0;
  FUN_00403c10(param_1[2]);
  return;
}



undefined4 FUN_0041cef0(void)

{
  return 8;
}



void __thiscall FUN_0041cf00(void *this,undefined *param_1,undefined *param_2)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  int local_10;
  uint local_c;
  
  local_c = CONCAT31(CONCAT21(CONCAT11(*param_1,param_1[1]),param_1[2]),param_1[3]);
  uVar2 = CONCAT31(CONCAT21(CONCAT11(param_1[4],param_1[5]),param_1[6]),param_1[7]);
  iVar3 = *(int *)((int)this + 4) + -1;
  if (0 < iVar3) {
    iVar1 = *(int *)((int)this + 8);
    iVar3 = iVar3 * 0xc;
    local_10 = (*(int *)((int)this + 4) - 2U >> 1) + 1;
    do {
      uVar6 = (uVar2 >> 0xe | uVar2 << 0x12) & 0xffc00 | uVar2 >> 0x10 & 0x3ff;
      uVar5 = (uVar2 & 0x3ff00) << 2 | uVar2 & 0x3ff;
      uVar4 = (uVar5 ^ uVar6) & *(uint *)(iVar3 + 8 + iVar1);
      uVar6 = *(uint *)(iVar3 + iVar1) ^ uVar4 ^ uVar6;
      uVar4 = uVar4 ^ uVar5 ^ *(uint *)(iVar3 + 4 + iVar1);
      local_c = local_c ^ ((&DAT_0044ca70)[uVar4 >> 10] | (&DAT_0044aa70)[uVar6 >> 10] |
                           (&DAT_0044da70)[uVar4 & 0x3ff] | (&DAT_0044ba70)[uVar6 & 0x3ff]);
      uVar7 = (local_c >> 0xe | local_c << 0x12) & 0xffc00 | local_c >> 0x10 & 0x3ff;
      uVar4 = (local_c & 0x3ff00) << 2 | local_c & 0x3ff;
      uVar5 = (uVar4 ^ uVar7) & *(uint *)(iVar3 + -4 + iVar1);
      uVar6 = uVar5 ^ uVar4 ^ *(uint *)(iVar3 + -8 + iVar1);
      uVar4 = uVar5 ^ uVar7 ^ *(uint *)(iVar3 + -0xc + iVar1);
      iVar3 = iVar3 + -0x18;
      uVar2 = uVar2 ^ ((&DAT_0044ca70)[uVar6 >> 10] | (&DAT_0044aa70)[uVar4 >> 10] |
                       (&DAT_0044da70)[uVar6 & 0x3ff] | (&DAT_0044ba70)[uVar4 & 0x3ff]);
      local_10 = local_10 + -1;
    } while (local_10 != 0);
  }
  param_2[3] = (char)uVar2;
  param_2[7] = (char)local_c;
  param_2[2] = (char)(uVar2 >> 8);
  param_2[6] = (char)(local_c >> 8);
  param_2[1] = (char)(uVar2 >> 0x10);
  param_2[5] = (char)(local_c >> 0x10);
  *param_2 = (char)(uVar2 >> 0x18);
  param_2[4] = (char)(local_c >> 0x18);
  return;
}



uint __cdecl FUN_0041d0c0(uint param_1,uint param_2)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  
  if (param_1 == 0) {
    return param_1;
  }
  uVar3 = 0;
  uVar1 = param_1;
  uVar4 = param_1;
  do {
    if ((uVar4 & 1) != 0) {
      uVar3 = uVar3 ^ uVar1;
    }
    uVar1 = uVar1 * 2;
    uVar4 = uVar4 >> 1;
    if (0xff < uVar1) {
      uVar1 = uVar1 ^ param_2;
    }
    uVar2 = param_1;
  } while (uVar4 != 0);
  while (uVar3 != 0) {
    if ((uVar3 & 1) != 0) {
      uVar4 = uVar4 ^ uVar2;
    }
    uVar2 = uVar2 * 2;
    uVar3 = uVar3 >> 1;
    if (0xff < uVar2) {
      uVar2 = uVar2 ^ param_2;
    }
  }
  uVar1 = 0;
  uVar3 = uVar4;
  while (uVar3 != 0) {
    if ((uVar3 & 1) != 0) {
      uVar1 = uVar1 ^ uVar4;
    }
    uVar4 = uVar4 * 2;
    uVar3 = uVar3 >> 1;
    if (0xff < uVar4) {
      uVar4 = uVar4 ^ param_2;
    }
  }
  uVar4 = 0;
  while (uVar1 != 0) {
    if ((uVar1 & 1) != 0) {
      uVar4 = uVar4 ^ param_1;
    }
    param_1 = param_1 * 2;
    uVar1 = uVar1 >> 1;
    if (0xff < param_1) {
      param_1 = param_1 ^ param_2;
    }
  }
  return uVar4;
}



void FUN_0041d160(void)

{
  uint uVar1;
  uint uVar2;
  uint *puVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  
  uVar6 = 0;
  do {
    uVar7 = (int)uVar6 >> 8 & 2U | uVar6 & 1;
    uVar5 = (int)uVar6 >> 1 & 0xff;
    uVar2 = FUN_0041d0c0((&DAT_0043e718)[uVar7] ^ uVar5,(&DAT_0043e6d8)[uVar7]);
    uVar4 = 0;
    puVar3 = &DAT_0043e618;
    for (uVar2 = uVar2 << 0x18; uVar2 != 0; uVar2 = uVar2 >> 1) {
      if ((uVar2 & 1) != 0) {
        uVar4 = uVar4 | *puVar3;
      }
      puVar3 = puVar3 + 1;
    }
    uVar2 = (&DAT_0043e728)[uVar7];
    uVar1 = (&DAT_0043e6e8)[uVar7];
    (&DAT_0044aa70)[uVar6] = uVar4;
    uVar2 = FUN_0041d0c0(uVar2 ^ uVar5,uVar1);
    uVar4 = 0;
    puVar3 = &DAT_0043e618;
    for (uVar2 = uVar2 << 0x10; uVar2 != 0; uVar2 = uVar2 >> 1) {
      if ((uVar2 & 1) != 0) {
        uVar4 = uVar4 | *puVar3;
      }
      puVar3 = puVar3 + 1;
    }
    uVar2 = (&DAT_0043e738)[uVar7];
    uVar1 = (&DAT_0043e6f8)[uVar7];
    (&DAT_0044ba70)[uVar6] = uVar4;
    uVar2 = FUN_0041d0c0(uVar2 ^ uVar5,uVar1);
    uVar4 = 0;
    puVar3 = &DAT_0043e618;
    for (uVar2 = uVar2 << 8; uVar2 != 0; uVar2 = uVar2 >> 1) {
      if ((uVar2 & 1) != 0) {
        uVar4 = uVar4 | *puVar3;
      }
      puVar3 = puVar3 + 1;
    }
    uVar2 = (&DAT_0043e748)[uVar7];
    uVar7 = (&DAT_0043e708)[uVar7];
    (&DAT_0044ca70)[uVar6] = uVar4;
    uVar4 = FUN_0041d0c0(uVar2 ^ uVar5,uVar7);
    uVar2 = 0;
    puVar3 = &DAT_0043e618;
    for (; uVar4 != 0; uVar4 = uVar4 >> 1) {
      if ((uVar4 & 1) != 0) {
        uVar2 = uVar2 | *puVar3;
      }
      puVar3 = puVar3 + 1;
    }
    (&DAT_0044da70)[uVar6] = uVar2;
    uVar6 = uVar6 + 1;
  } while ((int)uVar6 < 0x400);
  return;
}



void __thiscall FUN_0041d280(void *this,int param_1,int param_2,int param_3)

{
  ushort *puVar1;
  ushort *puVar2;
  ushort *puVar3;
  ushort *puVar4;
  uint *puVar5;
  ushort uVar6;
  undefined8 *puVar7;
  uint uVar8;
  int iVar9;
  uint uVar10;
  int local_10;
  
  local_10 = 0;
  iVar9 = param_2 * 0xc;
  do {
    puVar7 = (undefined8 *)(*(int *)((int)this + 8) + iVar9);
    uVar8 = *(uint *)(param_3 + local_10 * 4);
    uVar10 = 0;
    *puVar7 = 0;
    *(undefined4 *)(puVar7 + 1) = 0;
    puVar1 = (ushort *)(param_1 + (uVar8 & 3) * 2);
    puVar2 = (ushort *)(param_1 + (uVar8 + 1 & 3) * 2);
    puVar3 = (ushort *)(param_1 + (uVar8 - 2 & 3) * 2);
    puVar4 = (ushort *)(param_1 + (uVar8 - 1 & 3) * 2);
    do {
      uVar8 = uVar10 % 3;
      uVar10 = uVar10 + 1;
      puVar5 = (uint *)((int)puVar7 + uVar8 * 4);
      uVar6 = *puVar1;
      *puVar5 = *(int *)((int)puVar7 + uVar8 * 4) * 2 | uVar6 & 1;
      *puVar1 = (ushort)(~(uVar6 & 1) << 0xf) | *puVar1 >> 1;
      uVar6 = *puVar2;
      *puVar5 = *puVar5 * 2 | uVar6 & 1;
      *puVar2 = (ushort)(~(uVar6 & 1) << 0xf) | *puVar2 >> 1;
      uVar6 = *puVar3;
      *puVar5 = *puVar5 * 2 | uVar6 & 1;
      *puVar3 = (ushort)(~(uVar6 & 1) << 0xf) | *puVar3 >> 1;
      uVar6 = *puVar4;
      *puVar5 = *puVar5 * 2 | uVar6 & 1;
      *puVar4 = (ushort)(~(uVar6 & 1) << 0xf) | *puVar4 >> 1;
    } while ((int)uVar10 < 0xf);
    local_10 = local_10 + 1;
    iVar9 = iVar9 + 0xc;
  } while (local_10 < 8);
  return;
}



void __thiscall FUN_0041d3d0(void *this,int param_1)

{
  uint *puVar1;
  ushort uVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  undefined *puVar6;
  int iVar7;
  ushort local_24 [4];
  void *local_1c;
  int local_18;
  uint *local_14;
  ushort *local_10;
  ushort *local_c;
  ushort *local_8;
  
  local_1c = this;
  if (*(int *)((int)this + 4) == 8) {
    local_18 = 0;
    local_14 = &DAT_0043e698;
    do {
      uVar3 = *local_14;
      iVar7 = *(int *)((int)local_1c + 8);
      *(undefined8 *)(iVar7 + local_18) = 0;
      iVar7 = iVar7 + local_18;
      *(undefined4 *)(iVar7 + 8) = 0;
      local_8 = local_24 + (uVar3 + 1 & 3);
      local_c = local_24 + (uVar3 - 2 & 3);
      local_10 = local_24 + (uVar3 - 1 & 3);
      uVar4 = 0;
      do {
        uVar5 = uVar4 + 1;
        puVar1 = (uint *)(iVar7 + (uVar4 % 3) * 4);
        uVar2 = local_24[uVar3 & 3];
        uVar4 = uVar2 & 1;
        *puVar1 = *puVar1 * 2 | uVar4;
        local_24[uVar3 & 3] = (ushort)(~uVar4 << 0xf) | uVar2 >> 1;
        uVar2 = *local_8;
        uVar4 = uVar2 & 1;
        *puVar1 = *puVar1 * 2 | uVar4;
        *local_8 = (ushort)(~uVar4 << 0xf) | uVar2 >> 1;
        uVar2 = *local_c;
        uVar4 = uVar2 & 1;
        *puVar1 = *puVar1 * 2 | uVar4;
        *local_c = (ushort)(~uVar4 << 0xf) | uVar2 >> 1;
        uVar2 = *local_10;
        uVar4 = uVar2 & 1;
        *puVar1 = *puVar1 * 2 | uVar4;
        *local_10 = (ushort)(~uVar4 << 0xf) | uVar2 >> 1;
        uVar4 = uVar5;
      } while ((int)uVar5 < 0xf);
      local_14 = local_14 + 1;
      local_18 = local_18 + 0xc;
    } while ((int)local_14 < 0x43e6b8);
    return;
  }
                    // WARNING: Load size is inaccurate
  local_18 = 0;
  if (0 < *this) {
    puVar6 = (undefined *)(param_1 + 2);
    iVar7 = 0;
    do {
      local_24[3] = CONCAT11(puVar6[-2],puVar6[-1]);
      local_24[2] = CONCAT11(*puVar6,puVar6[1]);
      local_24[1] = CONCAT11(puVar6[2],puVar6[3]);
      local_24[0] = CONCAT11(puVar6[4],puVar6[5]);
      FUN_0041d280(this,(int)local_24,iVar7,(int)&DAT_0043e698);
      FUN_0041d280(this,(int)local_24,(*(int *)((int)this + 4) - iVar7) + -8,(int)&DAT_0043e6b8);
      puVar6 = puVar6 + 8;
      local_18 = local_18 + 1;
      iVar7 = iVar7 + 8;
                    // WARNING: Load size is inaccurate
    } while (local_18 < *this);
  }
  return;
}



void WriteMiniDump(void)

{
                    // WARNING: Could not recover jumptable at 0x0041d614. Too many branches
                    // WARNING: Treating indirect jump as call
  WriteMiniDump();
  return;
}



void __cdecl FUN_0041d620(char *param_1,int param_2,char param_3)

{
  char cVar1;
  char *pcVar2;
  int iVar3;
  undefined4 local_8;
  
  pcVar2 = param_1;
  do {
    cVar1 = *pcVar2;
    pcVar2 = pcVar2 + 1;
  } while (cVar1 != '\0');
  iVar3 = (int)pcVar2 - (int)(param_1 + 1);
  if (0 < iVar3) {
    if ((param_1[iVar3 + -1] != '\\') && (param_1[iVar3 + -1] != '/')) {
      if (param_2 <= iVar3 + 1) {
        local_8 = 0xff0000ff;
        ConColorMsg((Color *)&local_8,"V_AppendSlash: ran out of space on %s.",param_1);
        Plat_ExitProcess(1);
      }
      param_1[iVar3] = param_3;
      (param_1 + iVar3)[1] = '\0';
    }
  }
  return;
}



void __cdecl FUN_0041d690(int param_1,char *param_2,char *param_3,uint param_4)

{
  undefined2 *puVar1;
  char cVar2;
  uint uVar3;
  char *pcVar4;
  int iVar5;
  char *pcVar6;
  size_t _Count;
  char *_Dest;
  
  uVar3 = param_4;
  _Dest = param_3;
  pcVar4 = param_3;
  if (param_3 < param_3 + (param_4 - 1)) {
    do {
      if (pcVar4[param_1 - (int)param_3] == '\0') break;
      *pcVar4 = pcVar4[param_1 - (int)param_3];
      pcVar4 = pcVar4 + 1;
    } while (pcVar4 < param_3 + (param_4 - 1));
  }
  *pcVar4 = '\0';
  cVar2 = *param_3;
  pcVar4 = param_3;
  while (cVar2 != '\0') {
    if ((*pcVar4 == '/') || (*pcVar4 == '\\')) {
      *pcVar4 = '\\';
    }
    pcVar4 = pcVar4 + 1;
    cVar2 = *pcVar4;
  }
  pcVar4 = param_3;
  do {
    cVar2 = *pcVar4;
    pcVar4 = pcVar4 + 1;
  } while (cVar2 != '\0');
  iVar5 = (int)pcVar4 - (int)(param_3 + 1);
  if (0 < iVar5) {
    puVar1 = (undefined2 *)(param_3 + iVar5);
    if ((param_3[iVar5 + -1] != '\\') && (param_3[iVar5 + -1] != '/')) {
      if ((int)param_4 <= iVar5 + 1) {
        param_3 = (char *)0xff0000ff;
        ConColorMsg((Color *)&param_3,"V_AppendSlash: ran out of space on %s.",_Dest);
        Plat_ExitProcess(1);
      }
      *puVar1 = 0x5c;
    }
  }
  pcVar4 = _Dest;
  do {
    cVar2 = *pcVar4;
    pcVar4 = pcVar4 + 1;
  } while (cVar2 != '\0');
  param_3 = param_2 + 1;
  pcVar6 = param_2;
  do {
    cVar2 = *pcVar6;
    pcVar6 = pcVar6 + 1;
  } while (cVar2 != '\0');
  _Count = (int)pcVar6 - (int)param_3;
  if (uVar3 <= _Count + ((int)pcVar4 - (int)(_Dest + 1))) {
    _Count = (uVar3 - ((int)pcVar4 - (int)(_Dest + 1))) - 1;
  }
  if (_Count != 0) {
    pcVar4 = _strncat(_Dest,param_2,_Count);
    pcVar4[uVar3 - 1] = '\0';
  }
  cVar2 = *_Dest;
  while (cVar2 != '\0') {
    if ((*_Dest == '/') || (*_Dest == '\\')) {
      *_Dest = '\\';
    }
    _Dest = _Dest + 1;
    cVar2 = *_Dest;
  }
  return;
}



void __cdecl FUN_0041d790(char *param_1,char param_2)

{
  char cVar1;
  
  cVar1 = *param_1;
  while (cVar1 != '\0') {
    if ((*param_1 == '/') || (*param_1 == '\\')) {
      *param_1 = param_2;
    }
    param_1 = param_1 + 1;
    cVar1 = *param_1;
  }
  return;
}



uint __cdecl FUN_0041d7c0(char *param_1)

{
  char cVar1;
  char cVar2;
  
  cVar1 = *param_1;
  if (cVar1 != '\0') {
    cVar2 = param_1[1];
    param_1 = (char *)((uint)param_1 & 0xffffff00);
    if ((cVar2 != '\0') &&
       ((cVar2 == ':' ||
        (((cVar1 == '/' || (cVar1 == '\\')) && ((cVar2 == '/' || (cVar2 == '\\')))))))) {
      return CONCAT31((int3)((uint)param_1 >> 8),1);
    }
  }
  return (uint)param_1 & 0xffffff00;
}



void __cdecl FUN_0041d800(char *param_1,int param_2,char *param_3,int param_4)

{
  char cVar1;
  char *pcVar2;
  int iVar3;
  
  pcVar2 = param_1;
  do {
    cVar1 = *pcVar2;
    pcVar2 = pcVar2 + 1;
  } while (cVar1 != '\0');
  if (param_2 < (int)pcVar2 - (int)(param_1 + 1)) {
    pcVar2 = param_1;
    do {
      cVar1 = *pcVar2;
      pcVar2 = pcVar2 + 1;
    } while (cVar1 != '\0');
    FUN_0041d870(param_1,-param_2,(int)pcVar2 - (int)(param_1 + 1),param_3,param_4);
    return;
  }
  pcVar2 = param_3 + param_4 + -1;
  if (param_3 < pcVar2) {
    iVar3 = (int)param_1 - (int)param_3;
    do {
      if (param_3[iVar3] == '\0') break;
      *param_3 = param_3[iVar3];
      param_3 = param_3 + 1;
    } while (param_3 < pcVar2);
  }
  *param_3 = '\0';
  return;
}



void __cdecl FUN_0041d870(char *param_1,int param_2,int param_3,undefined *param_4,int param_5)

{
  char cVar1;
  char *pcVar2;
  int iVar3;
  size_t _Size;
  
  if (param_5 != 0) {
    pcVar2 = param_1;
    do {
      cVar1 = *pcVar2;
      pcVar2 = pcVar2 + 1;
    } while (cVar1 != '\0');
    iVar3 = (int)pcVar2 - (int)(param_1 + 1);
    if (param_2 < 0) {
      param_2 = iVar3 - -param_2 % iVar3;
    }
    else if (iVar3 <= param_2) {
      *param_4 = 0;
      return;
    }
    if (param_3 < 0) {
      param_3 = iVar3 - -param_3 % iVar3;
    }
    else if (iVar3 < param_3) {
      param_3 = param_3 % iVar3;
    }
    if (param_3 <= param_2) {
      *param_4 = 0;
      return;
    }
    _Size = param_3 - param_2;
    if ((int)_Size <= param_5 + -1) {
      FID_conflict__memcpy(param_4,param_1 + param_2,_Size);
      param_4[_Size] = 0;
      return;
    }
    FID_conflict__memcpy(param_4,param_1 + param_2,param_5 - 1);
    param_4[param_5 + -1] = 0;
  }
  return;
}



void __cdecl FUN_0041d930(char *param_1,char *param_2,int param_3)

{
  char cVar1;
  char *pcVar2;
  size_t sVar3;
  int iVar4;
  size_t _Size;
  
  pcVar2 = param_1;
  do {
    cVar1 = *pcVar2;
    pcVar2 = pcVar2 + 1;
  } while (cVar1 != '\0');
  sVar3 = (int)pcVar2 - (int)(param_1 + 1);
  do {
    sVar3 = sVar3 - 1;
    if ((int)sVar3 < 1) goto LAB_0041d96a;
    cVar1 = param_1[sVar3];
  } while (((cVar1 != '.') && (cVar1 != '\\')) && (cVar1 != '/'));
  if (((0 < (int)sVar3) && (param_1[sVar3] != '\\')) &&
     ((param_1[sVar3] != '/' && ((int)sVar3 < param_3)))) {
    _Size = param_3 - 1U;
    if ((int)sVar3 < (int)(param_3 - 1U)) {
      _Size = sVar3;
    }
    if (param_2 != param_1) {
      FID_conflict__memcpy(param_2,param_1,_Size);
    }
    param_2[_Size] = '\0';
    return;
  }
LAB_0041d96a:
  if (param_2 != param_1) {
    pcVar2 = param_2 + param_3 + -1;
    if (param_2 < pcVar2) {
      iVar4 = (int)param_1 - (int)param_2;
      do {
        if (param_2[iVar4] == '\0') break;
        *param_2 = param_2[iVar4];
        param_2 = param_2 + 1;
      } while (param_2 < pcVar2);
    }
    *param_2 = '\0';
  }
  return;
}



void __cdecl FUN_0041d9d0(char *param_1)

{
  char cVar1;
  char *pcVar2;
  
  pcVar2 = param_1;
  do {
    cVar1 = *pcVar2;
    pcVar2 = pcVar2 + 1;
  } while (cVar1 != '\0');
  pcVar2 = pcVar2 + (-1 - (int)(param_1 + 1));
  if (0 < (int)pcVar2) {
    do {
      if ((param_1[(int)pcVar2] == '\\') || (param_1[(int)pcVar2] == '/')) break;
      pcVar2 = pcVar2 + -1;
    } while (0 < (int)pcVar2);
    param_1[(int)pcVar2] = '\0';
  }
  return;
}



uint __cdecl FUN_0041da10(byte *param_1,uint param_2)

{
  byte bVar1;
  bool bVar2;
  uint in_EAX;
  byte *pbVar3;
  uint uVar4;
  int iVar5;
  
  if (((*param_1 == 0) || (in_EAX = FUN_0041e3a0(param_1,&DAT_0043e768), in_EAX == 0)) ||
     (in_EAX = FUN_0041e3a0(param_1,&DAT_0043e76c), in_EAX == 0)) {
    return in_EAX & 0xffffff00;
  }
  pbVar3 = param_1;
  do {
    bVar1 = *pbVar3;
    pbVar3 = pbVar3 + 1;
  } while (bVar1 != 0);
  uVar4 = (int)pbVar3 - (int)(param_1 + 1);
  if ((param_1[uVar4 - 1] == 0x5c) || (param_1[uVar4 - 1] == 0x2f)) {
    uVar4 = uVar4 - 1;
  }
  bVar2 = false;
  if (0 < (int)uVar4) {
    do {
      bVar1 = param_1[uVar4 - 1];
      if ((bVar1 == 0x5c) || (bVar1 == 0x2f)) {
        param_1[uVar4] = 0;
        uVar4 = FUN_0041d790((char *)param_1,'\\');
        goto LAB_0041daad;
      }
      if (bVar1 == 0x3a) {
        bVar2 = true;
      }
      uVar4 = uVar4 - 1;
    } while (0 < (int)uVar4);
    if (bVar2) {
      *param_1 = 0;
      return uVar4 & 0xffffff00;
    }
  }
  if (uVar4 == 0) {
    iVar5 = FUN_0041dfc0((char *)param_1,param_2,&DAT_0043e770);
    return CONCAT31((int3)((uint)iVar5 >> 8),1);
  }
LAB_0041daad:
  return CONCAT31((int3)(uVar4 >> 8),1);
}



void __cdecl FUN_0041dae0(char *param_1)

{
  char cVar1;
  char *pcVar2;
  int iVar3;
  
  pcVar2 = param_1;
  do {
    cVar1 = *pcVar2;
    pcVar2 = pcVar2 + 1;
  } while (cVar1 != '\0');
  iVar3 = (int)pcVar2 - (int)(param_1 + 1);
  if ((0 < iVar3) && ((param_1[iVar3 + -1] == '\\' || (param_1[iVar3 + -1] == '/')))) {
    param_1[iVar3 + -1] = '\0';
  }
  return;
}



float10 __cdecl FUN_0041db20(char *param_1)

{
  char *pcVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  float10 fVar6;
  double dVar7;
  ulonglong uVar8;
  double local_14;
  double local_c;
  
  if (*param_1 == '-') {
    iVar4 = -1;
  }
  else {
    iVar4 = 1;
    if (*param_1 != '+') goto LAB_0041db3f;
  }
  param_1 = param_1 + 1;
LAB_0041db3f:
  dVar7 = 0.0;
  local_14 = 0.0;
  local_c = 0.0;
  if ((*param_1 == '0') && ((param_1[1] == 'x' || (param_1[1] == 'X')))) {
    pcVar1 = param_1 + 2;
    while( true ) {
      while( true ) {
        while( true ) {
          iVar2 = (int)*pcVar1;
          pcVar1 = pcVar1 + 1;
          if (9 < iVar2 - 0x30U) break;
          dVar7 = (dVar7 * 16.0 + (double)iVar2) - 48.0;
        }
        if (5 < iVar2 - 0x61U) break;
        dVar7 = ((dVar7 * 16.0 + (double)iVar2) - 97.0) + 10.0;
      }
      if (5 < iVar2 - 0x41U) break;
      dVar7 = ((dVar7 * 16.0 + (double)iVar2) - 65.0) + 10.0;
    }
    return (float10)((double)iVar4 * dVar7);
  }
  if (*param_1 == '\'') {
    return (float10)(param_1[1] * iVar4);
  }
  iVar2 = 0;
  iVar3 = -1;
  do {
    while( true ) {
      iVar5 = iVar3;
      iVar3 = (int)*param_1;
      param_1 = param_1 + 1;
      if (iVar3 == 0x2e) break;
      if (9 < iVar3 - 0x30U) {
        if ((iVar3 == 0x65) || (iVar3 == 0x45)) {
          uVar8 = FUN_0041dd70(param_1);
          dVar7 = local_14;
          if ((uint)uVar8 != 0) {
            fVar6 = FUN_0041e4a0(10.0,(uint)uVar8);
            dVar7 = (double)(fVar6 * (float10)local_c);
          }
        }
        if (iVar5 == -1) {
          return (float10)((double)iVar4 * dVar7);
        }
        goto LAB_0041dce1;
      }
      iVar2 = iVar2 + 1;
      dVar7 = (dVar7 * 10.0 + (double)iVar3) - 48.0;
      iVar3 = iVar5;
      local_14 = dVar7;
      local_c = dVar7;
    }
    iVar3 = iVar2;
  } while (iVar5 == -1);
LAB_0041dce1:
  if (iVar5 < iVar2) {
    if (7 < iVar2 - iVar5) {
      iVar3 = ((iVar2 - iVar5) - 8U >> 3) + 1;
      iVar2 = iVar2 + iVar3 * -8;
      do {
        dVar7 = dVar7 * 0.1 * 0.1 * 0.1 * 0.1 * 0.1 * 0.1 * 0.1 * 0.1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    if (iVar5 < iVar2) {
      iVar2 = iVar2 - iVar5;
      do {
        dVar7 = dVar7 * 0.1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
  }
  return (float10)((double)iVar4 * dVar7);
}



ulonglong __cdecl FUN_0041dd70(char *param_1)

{
  char cVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  int iVar7;
  char *pcVar8;
  uint uVar9;
  uint uVar10;
  uint uVar11;
  bool bVar12;
  ulonglong uVar13;
  uint local_18;
  uint uStack20;
  
  if (*param_1 == '-') {
    uVar9 = 0xffffffff;
    uVar11 = 0xffffffff;
  }
  else {
    uVar11 = 0;
    uVar9 = 1;
    if (*param_1 != '+') goto LAB_0041dd95;
  }
  param_1 = param_1 + 1;
LAB_0041dd95:
  cVar1 = *param_1;
  local_18 = 0;
  uStack20 = 0;
  if ((cVar1 == '0') && ((param_1[1] == 'x' || (param_1[1] == 'X')))) {
    pcVar8 = param_1 + 2;
    while( true ) {
      while( true ) {
        while( true ) {
          uVar2 = (uint)*pcVar8;
          pcVar8 = pcVar8 + 1;
          iVar7 = (int)uVar2 >> 0x1f;
          if ((iVar7 + -1 + (uint)(0x2f < uVar2) != 0) || ((true && (9 < uVar2 - 0x30)))) break;
          bVar12 = local_18 < 3;
          uVar4 = local_18 - 3;
          uVar5 = uVar4 * 0x10;
          local_18 = uVar5 + uVar2;
          uStack20 = ((uStack20 - bVar12) * 0x10 | uVar4 >> 0x1c) + iVar7 +
                     (uint)CARRY4(uVar5,uVar2);
        }
        if ((iVar7 + -1 + (uint)(0x60 < uVar2) != 0) || ((true && (5 < uVar2 - 0x61)))) break;
        uVar4 = local_18 >> 0x1c;
        uVar5 = local_18 * 0x10;
        uVar6 = uVar5 + uVar2;
        local_18 = uVar6 - 0x57;
        uStack20 = ((uStack20 << 4 | uVar4) + iVar7 + (uint)CARRY4(uVar5,uVar2)) -
                   (uint)(uVar6 < 0x57);
      }
      if ((iVar7 + -1 + (uint)(0x40 < uVar2) != 0) || ((true && (5 < uVar2 - 0x41)))) break;
      uVar4 = local_18 >> 0x1c;
      uVar5 = local_18 * 0x10;
      uVar6 = uVar5 + uVar2;
      local_18 = uVar6 - 0x37;
      uStack20 = ((uStack20 << 4 | uVar4) + iVar7 + (uint)CARRY4(uVar5,uVar2)) -
                 (uint)(uVar6 < 0x37);
    }
    uVar13 = __allmul(local_18,uStack20,uVar9,uVar11);
    return uVar13;
  }
  if (cVar1 == '\'') {
    uVar13 = __allmul((int)param_1[1],(int)param_1[1] >> 0x1f,uVar9,uVar11);
    return uVar13;
  }
  uVar2 = (uint)cVar1;
  iVar7 = (int)uVar2 >> 0x1f;
  if ((iVar7 < 0) || ((-1 < (int)uVar2 || iVar7 < 0 && (uVar2 < 0x30)))) {
    uStack20 = 0;
  }
  else {
    while( true ) {
      param_1 = param_1 + 1;
      if ((0 < iVar7) || ((-1 < iVar7 && (0x39 < uVar2)))) break;
      uVar4 = local_18 >> 0x1e;
      bVar12 = CARRY4(local_18,local_18 * 4);
      uVar6 = local_18 * 5;
      uVar3 = (uint)*param_1;
      uVar5 = local_18 * 10;
      uVar10 = uVar5 + uVar2;
      local_18 = uVar10 - 0x30;
      uStack20 = (((uStack20 + (uStack20 << 2 | uVar4) + (uint)bVar12) * 2 | uVar6 >> 0x1f) + iVar7
                 + (uint)CARRY4(uVar5,uVar2)) - (uint)(uVar10 < 0x30);
      iVar7 = (int)uVar3 >> 0x1f;
      if (((int)uVar3 < 0 && iVar7 >= 0) || (iVar7 < 0)) break;
      uVar2 = uVar3;
      if (uVar3 < 0x30) {
        uVar13 = __allmul(local_18,uStack20,uVar9,uVar11);
        return uVar13;
      }
    }
  }
  uVar13 = __allmul(local_18,uStack20,uVar9,uVar11);
  return uVar13;
}



ulonglong __cdecl FUN_0041df20(char *param_1)

{
  ulonglong uVar1;
  
  uVar1 = FUN_0041dd70(param_1);
  return uVar1;
}



void __cdecl FUN_0041df30(undefined4 param_1,int param_2,char *param_3,uint param_4)

{
  char cVar1;
  char *pcVar2;
  size_t _Count;
  char *pcVar3;
  int iVar4;
  char local_10 [12];
  
  iVar4 = 0;
  *param_3 = '\0';
  if (0 < param_2) {
    do {
      FUN_0041dfc0(local_10,10,&DAT_0043e760);
      pcVar3 = param_3;
      do {
        cVar1 = *pcVar3;
        pcVar3 = pcVar3 + 1;
      } while (cVar1 != '\0');
      pcVar2 = local_10;
      do {
        cVar1 = *pcVar2;
        pcVar2 = pcVar2 + 1;
      } while (cVar1 != '\0');
      _Count = (int)pcVar2 - (int)(local_10 + 1);
      if (param_4 <= _Count + ((int)pcVar3 - (int)(param_3 + 1))) {
        _Count = (param_4 - ((int)pcVar3 - (int)(param_3 + 1))) - 1;
      }
      if (_Count != 0) {
        pcVar3 = _strncat(param_3,local_10,_Count);
        pcVar3[param_4 - 1] = '\0';
      }
      iVar4 = iVar4 + 1;
    } while (iVar4 < param_2);
  }
  return;
}



int __cdecl FUN_0041dfc0(char *param_1,uint param_2,byte *param_3)

{
  int iVar1;
  
  iVar1 = FUN_004277a5(param_1,param_2,param_3,(int **)&stack0x00000010);
  if ((iVar1 < 0) || ((0 < (int)param_2 && ((int)param_2 <= iVar1)))) {
    iVar1 = param_2 - 1;
    param_1[param_2 - 1] = '\0';
  }
  return iVar1;
}



void __cdecl FUN_0041e000(char *param_1,char *param_2)

{
  int local_8;
  
  FUN_0041e020(param_1,param_2,&local_8,'\0');
  return;
}



char * __cdecl FUN_0041e020(char *param_1,char *param_2,int *param_3,char param_4)

{
  char cVar1;
  uint uVar2;
  char cVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  char *pcVar8;
  int local_c;
  
  if ((param_1 == (char *)0x0) || (param_2 == (char *)0x0)) {
    return (char *)0x0;
  }
  local_c = 0;
  if (*param_1 == '\0') {
    return (char *)0x0;
  }
  uVar4 = (uint)CONCAT11(*param_2 + -0x41,*param_1);
  uVar2 = uVar4 >> 8;
LAB_0041e060:
  cVar3 = (char)uVar4;
  if ((cVar3 < 'A') || ('Z' < cVar3)) {
    iVar7 = (int)cVar3;
  }
  else {
    iVar7 = cVar3 + 0x20;
  }
  iVar5 = (int)*param_2;
  if ((byte)(uVar4 >> 8) < 0x1a) {
    iVar5 = iVar5 + 0x20;
  }
  if (iVar7 == iVar5) {
    cVar3 = param_2[1];
    pcVar8 = param_2 + 1;
    if (cVar3 != '\0') {
      iVar7 = 1 - (int)pcVar8;
      do {
        cVar1 = pcVar8[(int)(param_1 + iVar7)];
        if (cVar1 == '\0') {
          return (char *)0x0;
        }
        if ((param_4 == '\0') || (cVar3 != param_4)) {
          if ((cVar1 < 'A') || ('Z' < cVar1)) {
            iVar5 = (int)cVar1;
          }
          else {
            iVar5 = cVar1 + 0x20;
          }
          iVar6 = (int)cVar3;
          if ((byte)(cVar3 + 0xbfU) < 0x1a) {
            iVar6 = iVar6 + 0x20;
          }
          if (iVar5 != iVar6) goto LAB_0041e0e1;
        }
        cVar3 = pcVar8[1];
        pcVar8 = pcVar8 + 1;
        if (cVar3 == '\0') break;
      } while( true );
    }
    goto LAB_0041e0d0;
  }
  goto LAB_0041e0ec;
LAB_0041e0e1:
  if (*pcVar8 == '\0') {
LAB_0041e0d0:
    *param_3 = local_c;
    return param_1;
  }
LAB_0041e0ec:
  pcVar8 = param_1 + 1;
  param_1 = param_1 + 1;
  local_c = local_c + 1;
  if (*pcVar8 == '\0') {
    return (char *)0x0;
  }
  uVar4 = (uint)CONCAT11((char)uVar2,*pcVar8);
  goto LAB_0041e060;
}



char * __cdecl FUN_0041e120(char *param_1,char *param_2,uint param_3,size_t param_4)

{
  char cVar1;
  char *pcVar2;
  size_t _Count;
  char *pcVar3;
  
  pcVar3 = param_1;
  do {
    cVar1 = *pcVar3;
    pcVar3 = pcVar3 + 1;
  } while (cVar1 != '\0');
  pcVar2 = param_2;
  do {
    cVar1 = *pcVar2;
    pcVar2 = pcVar2 + 1;
  } while (cVar1 != '\0');
  _Count = (int)pcVar2 - (int)(param_2 + 1);
  if ((param_4 != 0xffffffff) && ((int)param_4 < (int)_Count)) {
    _Count = param_4;
  }
  if (param_3 <= ((int)pcVar3 - (int)(param_1 + 1)) + _Count) {
    _Count = (param_3 - ((int)pcVar3 - (int)(param_1 + 1))) - 1;
  }
  if (_Count == 0) {
    return param_1;
  }
  pcVar3 = _strncat(param_1,param_2,_Count);
  pcVar3[param_3 - 1] = '\0';
  return pcVar3;
}



int __cdecl FUN_0041e190(char *param_1,char *param_2,int param_3)

{
  if (0 < param_3) {
    do {
      param_3 = param_3 + -1;
      if (*param_1 != *param_2) {
        return (uint)(*param_2 <= *param_1) * 2 + -1;
      }
      if (*param_1 == '\0') {
        return 0;
      }
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
    } while (0 < param_3);
  }
  return 0;
}



void __cdecl FUN_0041e1d0(char *param_1,int param_2,int param_3)

{
  int iVar1;
  char *pcVar2;
  
  pcVar2 = param_1 + param_3 + -1;
  if (param_1 < pcVar2) {
    iVar1 = param_2 - (int)param_1;
    do {
      if (param_1[iVar1] == '\0') break;
      *param_1 = param_1[iVar1];
      param_1 = param_1 + 1;
    } while (param_1 < pcVar2);
  }
  *param_1 = '\0';
  return;
}



int __cdecl FUN_0041e200(char *param_1,uint param_2,byte *param_3,int **param_4)

{
  int iVar1;
  
  iVar1 = FUN_004277a5(param_1,param_2,param_3,param_4);
  if ((iVar1 < 0) || ((0 < (int)param_2 && ((int)param_2 <= iVar1)))) {
    iVar1 = param_2 - 1;
    param_1[param_2 - 1] = '\0';
  }
  return iVar1;
}



int __cdecl FUN_0041e240(char *param_1,uint param_2,byte *param_3,int **param_4,char *param_5)

{
  int iVar1;
  char cVar2;
  
  iVar1 = FUN_004277a5(param_1,param_2,param_3,param_4);
  if ((iVar1 < 0) || ((int)param_2 <= iVar1)) {
    cVar2 = '\x01';
  }
  else {
    cVar2 = '\0';
  }
  if (param_5 != (char *)0x0) {
    *param_5 = cVar2;
  }
  if ((cVar2 != '\0') && (0 < (int)param_2)) {
    iVar1 = param_2 - 1;
    param_1[param_2 - 1] = '\0';
  }
  return iVar1;
}



void __cdecl FUN_0041e290(LPCSTR param_1,LPWSTR param_2,uint param_3)

{
  *param_2 = L'\0';
  if (param_1 == (LPCSTR)0x0) {
    return;
  }
  MultiByteToWideChar(0xfde9,0,param_1,-1,param_2,param_3 >> 1);
  *(undefined2 *)((int)param_2 + ((param_3 & 0xfffffffe) - 2)) = 0;
  return;
}



void __cdecl FUN_0041e2d0(LPCWSTR param_1,LPSTR param_2,int param_3)

{
  if (0 < param_3) {
    *param_2 = '\0';
  }
  WideCharToMultiByte(0xfde9,0,param_1,-1,param_2,param_3,(LPCSTR)0x0,(LPBOOL)0x0);
  if (0 < param_3) {
    param_2[param_3 + -1] = '\0';
  }
  return;
}



// WARNING: Control flow encountered bad instruction data

void * __cdecl FID_conflict__memcpy(void *_Dst,void *_Src,size_t _Size)

{
  undefined8 uVar1;
  undefined auVar2 [32];
  undefined auVar3 [32];
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uVar11;
  undefined4 uVar12;
  undefined4 uVar13;
  undefined4 uVar14;
  undefined4 uVar15;
  int iVar16;
  undefined8 *puVar17;
  void *pvVar18;
  uint uVar19;
  uint uVar20;
  int iVar21;
  undefined8 *puVar22;
  undefined *puVar23;
  undefined4 *puVar24;
  undefined4 *puVar25;
  undefined4 uVar26;
  undefined4 uVar27;
  undefined4 uVar28;
  
  if ((_Src < _Dst) && (_Dst < (void *)(_Size + (int)_Src))) {
    puVar25 = (undefined4 *)((_Size - 4) + (int)_Src);
    puVar24 = (undefined4 *)((_Size - 4) + (int)_Dst);
    if (((uint)puVar24 & 3) == 0) {
      uVar19 = _Size >> 2;
      if (uVar19 < 8) goto LAB_00426c00;
      for (; uVar19 != 0; uVar19 = uVar19 - 1) {
        *puVar24 = *puVar25;
        puVar25 = puVar25 + -1;
        puVar24 = puVar24 + -1;
      }
      switch(_Size & 3) {
      case 1:
        goto switchD_00426c24_caseD_1;
      case 2:
        goto switchD_00426c24_caseD_2;
      case 3:
        goto switchD_00426c24_caseD_3;
      }
    }
    else {
      switch(_Size) {
      case 0:
        break;
      case 1:
switchD_00426c24_caseD_1:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        return _Dst;
      case 2:
switchD_00426c24_caseD_2:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        return _Dst;
      case 3:
switchD_00426c24_caseD_3:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
        return _Dst;
      default:
        uVar20 = _Size - ((uint)puVar24 & 3);
        switch((uint)puVar24 & 3) {
        case 1:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          puVar25 = (undefined4 *)((int)puVar25 + -1);
          uVar19 = uVar20 >> 2;
          puVar24 = (undefined4 *)((int)puVar24 - 1);
          if (uVar19 < 8) {
LAB_00426c00:
                    // WARNING: Could not recover jumptable at 0x00426c02. Too many branches
                    // WARNING: Treating indirect jump as call
            pvVar18 = (void *)(*(code *)(&PTR_LAB_00426cd4)[-uVar19])();
            return pvVar18;
          }
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00426c24_caseD_1;
          case 2:
            goto switchD_00426c24_caseD_2;
          case 3:
            goto switchD_00426c24_caseD_3;
          }
          break;
        case 2:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          puVar25 = (undefined4 *)((int)puVar25 + -2);
          puVar24 = (undefined4 *)((int)puVar24 - 2);
          if (uVar19 < 8) goto LAB_00426c00;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00426c24_caseD_1;
          case 2:
            goto switchD_00426c24_caseD_2;
          case 3:
            goto switchD_00426c24_caseD_3;
          }
          break;
        case 3:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
          puVar25 = (undefined4 *)((int)puVar25 + -3);
          puVar24 = (undefined4 *)((int)puVar24 - 3);
          if (uVar19 < 8) goto LAB_00426c00;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00426c24_caseD_1;
          case 2:
            goto switchD_00426c24_caseD_2;
          case 3:
            goto switchD_00426c24_caseD_3;
          }
        }
      }
    }
    return _Dst;
  }
  puVar23 = (undefined *)_Dst;
  if ((DAT_0045849c >> 1 & 1) != 0) {
                    // WARNING: Load size is inaccurate
    for (; _Size != 0; _Size = _Size - 1) {
      *puVar23 = *_Src;
      _Src = (undefined *)((int)_Src + 1);
      puVar23 = puVar23 + 1;
    }
    return _Dst;
  }
  puVar25 = (undefined4 *)_Dst;
  if (_Size < 0x80) {
LAB_00426a5b:
    if (((uint)_Dst & 3) != 0) {
LAB_00426a78:
      switch(_Size) {
      case 0:
        return _Dst;
      case 1:
        break;
      case 2:
        goto switchD_00426a90_caseD_2;
      case 3:
        goto switchD_00426a90_caseD_3;
      default:
        uVar20 = (_Size - 4) + ((uint)_Dst & 3);
        switch((uint)_Dst & 3) {
        case 0:
                    // WARNING: Bad instruction - Truncating control flow here
          halt_baddata();
        case 1:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 2) = *(undefined *)((int)_Src + 2);
          _Src = (undefined4 *)((int)_Src + 3);
          puVar25 = (undefined4 *)((int)_Dst + 3);
          if (7 < uVar19) {
                    // WARNING: Load size is inaccurate
            for (; uVar19 != 0; uVar19 = uVar19 - 1) {
              *puVar25 = *_Src;
              _Src = (undefined4 *)((int)_Src + 4);
              puVar25 = puVar25 + 1;
            }
            switch(uVar20 & 3) {
            case 0:
              return _Dst;
            case 2:
              goto switchD_00426a90_caseD_2;
            case 3:
              goto switchD_00426a90_caseD_3;
            }
            break;
          }
          goto LAB_00426a98;
        case 2:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          _Src = (undefined4 *)((int)_Src + 2);
          puVar25 = (undefined4 *)((int)_Dst + 2);
          if (uVar19 < 8) goto LAB_00426a98;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_00426a90_caseD_2;
          case 3:
            goto switchD_00426a90_caseD_3;
          }
          break;
        case 3:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          _Src = (undefined4 *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)_Dst + 1);
          if (uVar19 < 8) goto LAB_00426a98;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_00426a90_caseD_2;
          case 3:
            goto switchD_00426a90_caseD_3;
          }
        }
      }
      goto switchD_00426a90_caseD_1;
    }
  }
  else {
    if (((((uint)_Dst ^ (uint)_Src) & 0xf) == 0) && ((DAT_00448004 >> 1 & 1) != 0)) {
      if (((uint)_Src & 0xf) != 0) {
        uVar19 = 0x10 - ((uint)_Src & 0xf);
        _Size = _Size - uVar19;
        for (uVar20 = uVar19 & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          *(undefined *)puVar25 = *_Src;
          _Src = (void *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)puVar25 + 1);
        }
        for (uVar19 = uVar19 >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {
                    // WARNING: Load size is inaccurate
          *puVar25 = *_Src;
          _Src = (void *)((int)_Src + 4);
          puVar25 = puVar25 + 1;
        }
      }
      for (uVar20 = _Size >> 7; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
        uVar26 = *(undefined4 *)((int)_Src + 4);
        uVar27 = *(undefined4 *)((int)_Src + 8);
        uVar28 = *(undefined4 *)((int)_Src + 0xc);
        uVar4 = *(undefined4 *)((int)_Src + 0x10);
        uVar5 = *(undefined4 *)((int)_Src + 0x14);
        uVar6 = *(undefined4 *)((int)_Src + 0x18);
        uVar7 = *(undefined4 *)((int)_Src + 0x1c);
        uVar8 = *(undefined4 *)((int)_Src + 0x20);
        uVar9 = *(undefined4 *)((int)_Src + 0x24);
        uVar10 = *(undefined4 *)((int)_Src + 0x28);
        uVar11 = *(undefined4 *)((int)_Src + 0x2c);
        uVar12 = *(undefined4 *)((int)_Src + 0x30);
        uVar13 = *(undefined4 *)((int)_Src + 0x34);
        uVar14 = *(undefined4 *)((int)_Src + 0x38);
        uVar15 = *(undefined4 *)((int)_Src + 0x3c);
        *puVar25 = *_Src;
        puVar25[1] = uVar26;
        puVar25[2] = uVar27;
        puVar25[3] = uVar28;
        puVar25[4] = uVar4;
        puVar25[5] = uVar5;
        puVar25[6] = uVar6;
        puVar25[7] = uVar7;
        puVar25[8] = uVar8;
        puVar25[9] = uVar9;
        puVar25[10] = uVar10;
        puVar25[0xb] = uVar11;
        puVar25[0xc] = uVar12;
        puVar25[0xd] = uVar13;
        puVar25[0xe] = uVar14;
        puVar25[0xf] = uVar15;
        uVar26 = *(undefined4 *)((int)_Src + 0x44);
        uVar27 = *(undefined4 *)((int)_Src + 0x48);
        uVar28 = *(undefined4 *)((int)_Src + 0x4c);
        uVar4 = *(undefined4 *)((int)_Src + 0x50);
        uVar5 = *(undefined4 *)((int)_Src + 0x54);
        uVar6 = *(undefined4 *)((int)_Src + 0x58);
        uVar7 = *(undefined4 *)((int)_Src + 0x5c);
        uVar8 = *(undefined4 *)((int)_Src + 0x60);
        uVar9 = *(undefined4 *)((int)_Src + 100);
        uVar10 = *(undefined4 *)((int)_Src + 0x68);
        uVar11 = *(undefined4 *)((int)_Src + 0x6c);
        uVar12 = *(undefined4 *)((int)_Src + 0x70);
        uVar13 = *(undefined4 *)((int)_Src + 0x74);
        uVar14 = *(undefined4 *)((int)_Src + 0x78);
        uVar15 = *(undefined4 *)((int)_Src + 0x7c);
        puVar25[0x10] = *(undefined4 *)((int)_Src + 0x40);
        puVar25[0x11] = uVar26;
        puVar25[0x12] = uVar27;
        puVar25[0x13] = uVar28;
        puVar25[0x14] = uVar4;
        puVar25[0x15] = uVar5;
        puVar25[0x16] = uVar6;
        puVar25[0x17] = uVar7;
        puVar25[0x18] = uVar8;
        puVar25[0x19] = uVar9;
        puVar25[0x1a] = uVar10;
        puVar25[0x1b] = uVar11;
        puVar25[0x1c] = uVar12;
        puVar25[0x1d] = uVar13;
        puVar25[0x1e] = uVar14;
        puVar25[0x1f] = uVar15;
        _Src = (void *)((int)_Src + 0x80);
        puVar25 = puVar25 + 0x20;
      }
      if ((_Size & 0x7f) != 0) {
        for (uVar20 = (_Size & 0x7f) >> 4; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          uVar26 = *(undefined4 *)((int)_Src + 4);
          uVar27 = *(undefined4 *)((int)_Src + 8);
          uVar28 = *(undefined4 *)((int)_Src + 0xc);
          *puVar25 = *_Src;
          puVar25[1] = uVar26;
          puVar25[2] = uVar27;
          puVar25[3] = uVar28;
          _Src = (void *)((int)_Src + 0x10);
          puVar25 = puVar25 + 4;
        }
        if ((_Size & 0xf) != 0) {
          for (uVar20 = (_Size & 0xf) >> 2; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *puVar25 = *_Src;
            _Src = (void *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          for (uVar20 = _Size & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *(undefined *)puVar25 = *_Src;
            _Src = (void *)((int)_Src + 1);
            puVar25 = (undefined4 *)((int)puVar25 + 1);
          }
        }
      }
      return _Dst;
    }
    if ((DAT_0045849c & 1) == 0) goto LAB_00426a5b;
    if (((uint)_Dst & 3) != 0) goto LAB_00426a78;
    if (((uint)_Src & 3) == 0) {
      if (((uint)_Dst >> 2 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar26 = *_Src;
        _Size = _Size - 4;
        _Src = (void *)((int)_Src + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if (((uint)_Dst >> 3 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar1 = *_Src;
        _Size = _Size - 8;
        _Src = (void *)((int)_Src + 8);
        *(undefined8 *)_Dst = uVar1;
        _Dst = (void *)((int)_Dst + 8);
      }
      if (((uint)_Src & 7) == 0) {
                    // WARNING: Load size is inaccurate
        puVar17 = (undefined8 *)((int)_Src + -8);
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        do {
          puVar22 = puVar17;
          uVar5 = *(undefined4 *)(puVar22 + 4);
          uVar6 = *(undefined4 *)((int)puVar22 + 0x24);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(puVar22 + 2);
          uVar28 = *(undefined4 *)(puVar22 + 7);
          uVar4 = *(undefined4 *)((int)puVar22 + 0x3c);
          auVar3 = *(undefined (*) [32])(puVar22 + 4);
          *(undefined4 *)((int)_Dst + 8) = uVar26;
          *(undefined4 *)((int)_Dst + 0xc) = uVar27;
          *(undefined4 *)((int)_Dst + 0x10) = uVar5;
          *(undefined4 *)((int)_Dst + 0x14) = uVar6;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x40,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x40,0);
          _Dst = (void *)((int)_Dst + 0x30);
          puVar17 = puVar22 + 6;
          uVar26 = uVar28;
          uVar27 = uVar4;
        } while (0x2f < (int)_Size);
        puVar22 = puVar22 + 7;
      }
      else if (((uint)_Src >> 3 & 1) == 0) {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -4;
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        uVar28 = *(undefined4 *)((int)_Src + 8);
        do {
          iVar21 = iVar16;
          uVar7 = *(undefined4 *)(iVar21 + 0x20);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar4 = *(undefined4 *)(iVar21 + 0x34);
          uVar5 = *(undefined4 *)(iVar21 + 0x38);
          uVar6 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 4) = uVar26;
          *(undefined4 *)((int)_Dst + 8) = uVar27;
          *(undefined4 *)((int)_Dst + 0xc) = uVar28;
          *(undefined4 *)((int)_Dst + 0x10) = uVar7;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x20,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x20,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar4;
          uVar27 = uVar5;
          uVar28 = uVar6;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x34);
      }
      else {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -0xc;
        uVar26 = *_Src;
        do {
          iVar21 = iVar16;
          uVar28 = *(undefined4 *)(iVar21 + 0x20);
          uVar4 = *(undefined4 *)(iVar21 + 0x24);
          uVar5 = *(undefined4 *)(iVar21 + 0x28);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar27 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 0xc) = uVar26;
          *(undefined4 *)((int)_Dst + 0x10) = uVar28;
          *(undefined4 *)((int)_Dst + 0x14) = uVar4;
          *(undefined4 *)((int)_Dst + 0x18) = uVar5;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x60,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x60,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar27;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x3c);
      }
      for (; 0xf < (int)_Size; _Size = _Size - 0x10) {
        uVar26 = *(undefined4 *)puVar22;
        uVar27 = *(undefined4 *)((int)puVar22 + 4);
        uVar28 = *(undefined4 *)(puVar22 + 1);
        uVar4 = *(undefined4 *)((int)puVar22 + 0xc);
        puVar22 = puVar22 + 2;
        *(undefined4 *)_Dst = uVar26;
        *(undefined4 *)((int)_Dst + 4) = uVar27;
        *(undefined4 *)((int)_Dst + 8) = uVar28;
        *(undefined4 *)((int)_Dst + 0xc) = uVar4;
        _Dst = (void *)((int)_Dst + 0x10);
      }
      if ((_Size >> 2 & 1) != 0) {
        uVar26 = *(undefined4 *)puVar22;
        _Size = _Size - 4;
        puVar22 = (undefined8 *)((int)puVar22 + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if ((_Size >> 3 & 1) != 0) {
        _Size = _Size - 8;
        *(undefined8 *)_Dst = *puVar22;
      }
                    // WARNING: Could not recover jumptable at 0x00426a59. Too many branches
                    // WARNING: Treating indirect jump as call
      pvVar18 = (void *)(*(code *)(&switchD_00426a90::switchdataD_00426b88)[_Size])();
      return pvVar18;
    }
  }
  uVar19 = _Size >> 2;
  if (uVar19 < 8) {
LAB_00426a98:
                    // WARNING: Could not recover jumptable at 0x00426a98. Too many branches
                    // WARNING: Treating indirect jump as call
    pvVar18 = (void *)(*(code *)(&PTR_LAB_00426b1c)[uVar19])();
    return pvVar18;
  }
                    // WARNING: Load size is inaccurate
  for (; uVar19 != 0; uVar19 = uVar19 - 1) {
    *puVar25 = *_Src;
    _Src = (undefined4 *)((int)_Src + 4);
    puVar25 = puVar25 + 1;
  }
  switch(_Size & 3) {
  case 0:
    return _Dst;
  case 2:
switchD_00426a90_caseD_2:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    return _Dst;
  case 3:
switchD_00426a90_caseD_3:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    *(undefined *)((int)puVar25 + 2) = *(undefined *)((int)_Src + 2);
    return _Dst;
  }
switchD_00426a90_caseD_1:
                    // WARNING: Load size is inaccurate
  *(undefined *)puVar25 = *_Src;
  return _Dst;
}



// WARNING: Control flow encountered bad instruction data

void * __cdecl FID_conflict__memcpy(void *_Dst,void *_Src,size_t _Size)

{
  undefined8 uVar1;
  undefined auVar2 [32];
  undefined auVar3 [32];
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uVar11;
  undefined4 uVar12;
  undefined4 uVar13;
  undefined4 uVar14;
  undefined4 uVar15;
  int iVar16;
  undefined8 *puVar17;
  void *pvVar18;
  uint uVar19;
  uint uVar20;
  int iVar21;
  undefined8 *puVar22;
  undefined *puVar23;
  undefined4 *puVar24;
  undefined4 *puVar25;
  undefined4 uVar26;
  undefined4 uVar27;
  undefined4 uVar28;
  
  if ((_Src < _Dst) && (_Dst < (void *)(_Size + (int)_Src))) {
    puVar25 = (undefined4 *)((_Size - 4) + (int)_Src);
    puVar24 = (undefined4 *)((_Size - 4) + (int)_Dst);
    if (((uint)puVar24 & 3) == 0) {
      uVar19 = _Size >> 2;
      if (uVar19 < 8) goto LAB_00425da0;
      for (; uVar19 != 0; uVar19 = uVar19 - 1) {
        *puVar24 = *puVar25;
        puVar25 = puVar25 + -1;
        puVar24 = puVar24 + -1;
      }
      switch(_Size & 3) {
      case 1:
        goto switchD_00425dc4_caseD_1;
      case 2:
        goto switchD_00425dc4_caseD_2;
      case 3:
        goto switchD_00425dc4_caseD_3;
      }
    }
    else {
      switch(_Size) {
      case 0:
        break;
      case 1:
switchD_00425dc4_caseD_1:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        return _Dst;
      case 2:
switchD_00425dc4_caseD_2:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        return _Dst;
      case 3:
switchD_00425dc4_caseD_3:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
        return _Dst;
      default:
        uVar20 = _Size - ((uint)puVar24 & 3);
        switch((uint)puVar24 & 3) {
        case 1:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          puVar25 = (undefined4 *)((int)puVar25 + -1);
          uVar19 = uVar20 >> 2;
          puVar24 = (undefined4 *)((int)puVar24 - 1);
          if (uVar19 < 8) {
LAB_00425da0:
                    // WARNING: Could not recover jumptable at 0x00425da2. Too many branches
                    // WARNING: Treating indirect jump as call
            pvVar18 = (void *)(*(code *)(&PTR_LAB_00425e74)[-uVar19])();
            return pvVar18;
          }
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00425dc4_caseD_1;
          case 2:
            goto switchD_00425dc4_caseD_2;
          case 3:
            goto switchD_00425dc4_caseD_3;
          }
          break;
        case 2:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          puVar25 = (undefined4 *)((int)puVar25 + -2);
          puVar24 = (undefined4 *)((int)puVar24 - 2);
          if (uVar19 < 8) goto LAB_00425da0;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00425dc4_caseD_1;
          case 2:
            goto switchD_00425dc4_caseD_2;
          case 3:
            goto switchD_00425dc4_caseD_3;
          }
          break;
        case 3:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
          puVar25 = (undefined4 *)((int)puVar25 + -3);
          puVar24 = (undefined4 *)((int)puVar24 - 3);
          if (uVar19 < 8) goto LAB_00425da0;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00425dc4_caseD_1;
          case 2:
            goto switchD_00425dc4_caseD_2;
          case 3:
            goto switchD_00425dc4_caseD_3;
          }
        }
      }
    }
    return _Dst;
  }
  puVar23 = (undefined *)_Dst;
  if ((DAT_0045849c >> 1 & 1) != 0) {
                    // WARNING: Load size is inaccurate
    for (; _Size != 0; _Size = _Size - 1) {
      *puVar23 = *_Src;
      _Src = (undefined *)((int)_Src + 1);
      puVar23 = puVar23 + 1;
    }
    return _Dst;
  }
  puVar25 = (undefined4 *)_Dst;
  if (_Size < 0x80) {
LAB_00425bfb:
    if (((uint)_Dst & 3) != 0) {
LAB_00425c18:
      switch(_Size) {
      case 0:
        return _Dst;
      case 1:
        break;
      case 2:
        goto switchD_00425c30_caseD_2;
      case 3:
        goto switchD_00425c30_caseD_3;
      default:
        uVar20 = (_Size - 4) + ((uint)_Dst & 3);
        switch((uint)_Dst & 3) {
        case 0:
                    // WARNING: Bad instruction - Truncating control flow here
          halt_baddata();
        case 1:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 2) = *(undefined *)((int)_Src + 2);
          _Src = (undefined4 *)((int)_Src + 3);
          puVar25 = (undefined4 *)((int)_Dst + 3);
          if (7 < uVar19) {
                    // WARNING: Load size is inaccurate
            for (; uVar19 != 0; uVar19 = uVar19 - 1) {
              *puVar25 = *_Src;
              _Src = (undefined4 *)((int)_Src + 4);
              puVar25 = puVar25 + 1;
            }
            switch(uVar20 & 3) {
            case 0:
              return _Dst;
            case 2:
              goto switchD_00425c30_caseD_2;
            case 3:
              goto switchD_00425c30_caseD_3;
            }
            break;
          }
          goto LAB_00425c38;
        case 2:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          _Src = (undefined4 *)((int)_Src + 2);
          puVar25 = (undefined4 *)((int)_Dst + 2);
          if (uVar19 < 8) goto LAB_00425c38;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_00425c30_caseD_2;
          case 3:
            goto switchD_00425c30_caseD_3;
          }
          break;
        case 3:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          _Src = (undefined4 *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)_Dst + 1);
          if (uVar19 < 8) goto LAB_00425c38;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_00425c30_caseD_2;
          case 3:
            goto switchD_00425c30_caseD_3;
          }
        }
      }
      goto switchD_00425c30_caseD_1;
    }
  }
  else {
    if (((((uint)_Dst ^ (uint)_Src) & 0xf) == 0) && ((DAT_00448004 >> 1 & 1) != 0)) {
      if (((uint)_Src & 0xf) != 0) {
        uVar19 = 0x10 - ((uint)_Src & 0xf);
        _Size = _Size - uVar19;
        for (uVar20 = uVar19 & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          *(undefined *)puVar25 = *_Src;
          _Src = (void *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)puVar25 + 1);
        }
        for (uVar19 = uVar19 >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {
                    // WARNING: Load size is inaccurate
          *puVar25 = *_Src;
          _Src = (void *)((int)_Src + 4);
          puVar25 = puVar25 + 1;
        }
      }
      for (uVar20 = _Size >> 7; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
        uVar26 = *(undefined4 *)((int)_Src + 4);
        uVar27 = *(undefined4 *)((int)_Src + 8);
        uVar28 = *(undefined4 *)((int)_Src + 0xc);
        uVar4 = *(undefined4 *)((int)_Src + 0x10);
        uVar5 = *(undefined4 *)((int)_Src + 0x14);
        uVar6 = *(undefined4 *)((int)_Src + 0x18);
        uVar7 = *(undefined4 *)((int)_Src + 0x1c);
        uVar8 = *(undefined4 *)((int)_Src + 0x20);
        uVar9 = *(undefined4 *)((int)_Src + 0x24);
        uVar10 = *(undefined4 *)((int)_Src + 0x28);
        uVar11 = *(undefined4 *)((int)_Src + 0x2c);
        uVar12 = *(undefined4 *)((int)_Src + 0x30);
        uVar13 = *(undefined4 *)((int)_Src + 0x34);
        uVar14 = *(undefined4 *)((int)_Src + 0x38);
        uVar15 = *(undefined4 *)((int)_Src + 0x3c);
        *puVar25 = *_Src;
        puVar25[1] = uVar26;
        puVar25[2] = uVar27;
        puVar25[3] = uVar28;
        puVar25[4] = uVar4;
        puVar25[5] = uVar5;
        puVar25[6] = uVar6;
        puVar25[7] = uVar7;
        puVar25[8] = uVar8;
        puVar25[9] = uVar9;
        puVar25[10] = uVar10;
        puVar25[0xb] = uVar11;
        puVar25[0xc] = uVar12;
        puVar25[0xd] = uVar13;
        puVar25[0xe] = uVar14;
        puVar25[0xf] = uVar15;
        uVar26 = *(undefined4 *)((int)_Src + 0x44);
        uVar27 = *(undefined4 *)((int)_Src + 0x48);
        uVar28 = *(undefined4 *)((int)_Src + 0x4c);
        uVar4 = *(undefined4 *)((int)_Src + 0x50);
        uVar5 = *(undefined4 *)((int)_Src + 0x54);
        uVar6 = *(undefined4 *)((int)_Src + 0x58);
        uVar7 = *(undefined4 *)((int)_Src + 0x5c);
        uVar8 = *(undefined4 *)((int)_Src + 0x60);
        uVar9 = *(undefined4 *)((int)_Src + 100);
        uVar10 = *(undefined4 *)((int)_Src + 0x68);
        uVar11 = *(undefined4 *)((int)_Src + 0x6c);
        uVar12 = *(undefined4 *)((int)_Src + 0x70);
        uVar13 = *(undefined4 *)((int)_Src + 0x74);
        uVar14 = *(undefined4 *)((int)_Src + 0x78);
        uVar15 = *(undefined4 *)((int)_Src + 0x7c);
        puVar25[0x10] = *(undefined4 *)((int)_Src + 0x40);
        puVar25[0x11] = uVar26;
        puVar25[0x12] = uVar27;
        puVar25[0x13] = uVar28;
        puVar25[0x14] = uVar4;
        puVar25[0x15] = uVar5;
        puVar25[0x16] = uVar6;
        puVar25[0x17] = uVar7;
        puVar25[0x18] = uVar8;
        puVar25[0x19] = uVar9;
        puVar25[0x1a] = uVar10;
        puVar25[0x1b] = uVar11;
        puVar25[0x1c] = uVar12;
        puVar25[0x1d] = uVar13;
        puVar25[0x1e] = uVar14;
        puVar25[0x1f] = uVar15;
        _Src = (void *)((int)_Src + 0x80);
        puVar25 = puVar25 + 0x20;
      }
      if ((_Size & 0x7f) != 0) {
        for (uVar20 = (_Size & 0x7f) >> 4; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          uVar26 = *(undefined4 *)((int)_Src + 4);
          uVar27 = *(undefined4 *)((int)_Src + 8);
          uVar28 = *(undefined4 *)((int)_Src + 0xc);
          *puVar25 = *_Src;
          puVar25[1] = uVar26;
          puVar25[2] = uVar27;
          puVar25[3] = uVar28;
          _Src = (void *)((int)_Src + 0x10);
          puVar25 = puVar25 + 4;
        }
        if ((_Size & 0xf) != 0) {
          for (uVar20 = (_Size & 0xf) >> 2; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *puVar25 = *_Src;
            _Src = (void *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          for (uVar20 = _Size & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *(undefined *)puVar25 = *_Src;
            _Src = (void *)((int)_Src + 1);
            puVar25 = (undefined4 *)((int)puVar25 + 1);
          }
        }
      }
      return _Dst;
    }
    if ((DAT_0045849c & 1) == 0) goto LAB_00425bfb;
    if (((uint)_Dst & 3) != 0) goto LAB_00425c18;
    if (((uint)_Src & 3) == 0) {
      if (((uint)_Dst >> 2 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar26 = *_Src;
        _Size = _Size - 4;
        _Src = (void *)((int)_Src + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if (((uint)_Dst >> 3 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar1 = *_Src;
        _Size = _Size - 8;
        _Src = (void *)((int)_Src + 8);
        *(undefined8 *)_Dst = uVar1;
        _Dst = (void *)((int)_Dst + 8);
      }
      if (((uint)_Src & 7) == 0) {
                    // WARNING: Load size is inaccurate
        puVar17 = (undefined8 *)((int)_Src + -8);
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        do {
          puVar22 = puVar17;
          uVar5 = *(undefined4 *)(puVar22 + 4);
          uVar6 = *(undefined4 *)((int)puVar22 + 0x24);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(puVar22 + 2);
          uVar28 = *(undefined4 *)(puVar22 + 7);
          uVar4 = *(undefined4 *)((int)puVar22 + 0x3c);
          auVar3 = *(undefined (*) [32])(puVar22 + 4);
          *(undefined4 *)((int)_Dst + 8) = uVar26;
          *(undefined4 *)((int)_Dst + 0xc) = uVar27;
          *(undefined4 *)((int)_Dst + 0x10) = uVar5;
          *(undefined4 *)((int)_Dst + 0x14) = uVar6;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x40,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x40,0);
          _Dst = (void *)((int)_Dst + 0x30);
          puVar17 = puVar22 + 6;
          uVar26 = uVar28;
          uVar27 = uVar4;
        } while (0x2f < (int)_Size);
        puVar22 = puVar22 + 7;
      }
      else if (((uint)_Src >> 3 & 1) == 0) {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -4;
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        uVar28 = *(undefined4 *)((int)_Src + 8);
        do {
          iVar21 = iVar16;
          uVar7 = *(undefined4 *)(iVar21 + 0x20);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar4 = *(undefined4 *)(iVar21 + 0x34);
          uVar5 = *(undefined4 *)(iVar21 + 0x38);
          uVar6 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 4) = uVar26;
          *(undefined4 *)((int)_Dst + 8) = uVar27;
          *(undefined4 *)((int)_Dst + 0xc) = uVar28;
          *(undefined4 *)((int)_Dst + 0x10) = uVar7;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x20,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x20,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar4;
          uVar27 = uVar5;
          uVar28 = uVar6;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x34);
      }
      else {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -0xc;
        uVar26 = *_Src;
        do {
          iVar21 = iVar16;
          uVar28 = *(undefined4 *)(iVar21 + 0x20);
          uVar4 = *(undefined4 *)(iVar21 + 0x24);
          uVar5 = *(undefined4 *)(iVar21 + 0x28);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar27 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 0xc) = uVar26;
          *(undefined4 *)((int)_Dst + 0x10) = uVar28;
          *(undefined4 *)((int)_Dst + 0x14) = uVar4;
          *(undefined4 *)((int)_Dst + 0x18) = uVar5;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x60,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x60,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar27;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x3c);
      }
      for (; 0xf < (int)_Size; _Size = _Size - 0x10) {
        uVar26 = *(undefined4 *)puVar22;
        uVar27 = *(undefined4 *)((int)puVar22 + 4);
        uVar28 = *(undefined4 *)(puVar22 + 1);
        uVar4 = *(undefined4 *)((int)puVar22 + 0xc);
        puVar22 = puVar22 + 2;
        *(undefined4 *)_Dst = uVar26;
        *(undefined4 *)((int)_Dst + 4) = uVar27;
        *(undefined4 *)((int)_Dst + 8) = uVar28;
        *(undefined4 *)((int)_Dst + 0xc) = uVar4;
        _Dst = (void *)((int)_Dst + 0x10);
      }
      if ((_Size >> 2 & 1) != 0) {
        uVar26 = *(undefined4 *)puVar22;
        _Size = _Size - 4;
        puVar22 = (undefined8 *)((int)puVar22 + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if ((_Size >> 3 & 1) != 0) {
        _Size = _Size - 8;
        *(undefined8 *)_Dst = *puVar22;
      }
                    // WARNING: Could not recover jumptable at 0x00425bf9. Too many branches
                    // WARNING: Treating indirect jump as call
      pvVar18 = (void *)(*(code *)(&switchD_00425c30::switchdataD_00425d28)[_Size])();
      return pvVar18;
    }
  }
  uVar19 = _Size >> 2;
  if (uVar19 < 8) {
LAB_00425c38:
                    // WARNING: Could not recover jumptable at 0x00425c38. Too many branches
                    // WARNING: Treating indirect jump as call
    pvVar18 = (void *)(*(code *)(&PTR_LAB_00425cbc)[uVar19])();
    return pvVar18;
  }
                    // WARNING: Load size is inaccurate
  for (; uVar19 != 0; uVar19 = uVar19 - 1) {
    *puVar25 = *_Src;
    _Src = (undefined4 *)((int)_Src + 4);
    puVar25 = puVar25 + 1;
  }
  switch(_Size & 3) {
  case 0:
    return _Dst;
  case 2:
switchD_00425c30_caseD_2:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    return _Dst;
  case 3:
switchD_00425c30_caseD_3:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    *(undefined *)((int)puVar25 + 2) = *(undefined *)((int)_Src + 2);
    return _Dst;
  }
switchD_00425c30_caseD_1:
                    // WARNING: Load size is inaccurate
  *(undefined *)puVar25 = *_Src;
  return _Dst;
}



uint * __cdecl thunk_FUN_00427870(uint *param_1,byte param_2,uint param_3)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint *puVar4;
  
  if (param_3 == 0) {
    return param_1;
  }
  uVar1 = (uint)param_2;
  puVar4 = param_1;
  if ((DAT_0045849c >> 1 & 1) == 0) {
    if ((0x7f < (int)param_3) && ((DAT_00448004 >> 1 & 1) != 0)) {
      if (uVar1 == 0) {
        uVar1 = 0;
      }
      else {
        uVar1 = SUB164(CONCAT142(ZEXT214(0) & SUB1614((undefined  [16])0xffffffffff000000 >> 0x10,0)
                                 & SUB1614((undefined  [16])0xffffffffff00ffff >> 0x10,0),
                                 CONCAT11(param_2,param_2)),0);
        uVar1 = uVar1 | uVar1 << 0x10;
      }
      if (((uint)param_1 & 0xf) != 0) {
        uVar2 = 0x10 - ((uint)param_1 & 0xf);
        param_3 = param_3 - uVar2;
        for (uVar3 = uVar2 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {
          *(byte *)puVar4 = param_2;
          puVar4 = (uint *)((int)puVar4 + 1);
        }
        for (uVar2 = uVar2 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {
          *puVar4 = uVar1;
          puVar4 = puVar4 + 1;
        }
      }
      for (uVar3 = param_3 >> 7; uVar3 != 0; uVar3 = uVar3 - 1) {
        *puVar4 = uVar1;
        puVar4[1] = uVar1;
        puVar4[2] = uVar1;
        puVar4[3] = uVar1;
        puVar4[4] = uVar1;
        puVar4[5] = uVar1;
        puVar4[6] = uVar1;
        puVar4[7] = uVar1;
        puVar4[8] = uVar1;
        puVar4[9] = uVar1;
        puVar4[10] = uVar1;
        puVar4[0xb] = uVar1;
        puVar4[0xc] = uVar1;
        puVar4[0xd] = uVar1;
        puVar4[0xe] = uVar1;
        puVar4[0xf] = uVar1;
        puVar4[0x10] = uVar1;
        puVar4[0x11] = uVar1;
        puVar4[0x12] = uVar1;
        puVar4[0x13] = uVar1;
        puVar4[0x14] = uVar1;
        puVar4[0x15] = uVar1;
        puVar4[0x16] = uVar1;
        puVar4[0x17] = uVar1;
        puVar4[0x18] = uVar1;
        puVar4[0x19] = uVar1;
        puVar4[0x1a] = uVar1;
        puVar4[0x1b] = uVar1;
        puVar4[0x1c] = uVar1;
        puVar4[0x1d] = uVar1;
        puVar4[0x1e] = uVar1;
        puVar4[0x1f] = uVar1;
        puVar4 = puVar4 + 0x20;
      }
      if ((param_3 & 0x7f) != 0) {
        for (uVar3 = (param_3 & 0x7f) >> 4; uVar3 != 0; uVar3 = uVar3 - 1) {
          *puVar4 = uVar1;
          puVar4[1] = uVar1;
          puVar4[2] = uVar1;
          puVar4[3] = uVar1;
          puVar4 = puVar4 + 4;
        }
        if ((param_3 & 0xf) != 0) {
          for (uVar3 = (param_3 & 0xf) >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {
            *puVar4 = uVar1;
            puVar4 = puVar4 + 1;
          }
          for (uVar1 = param_3 & 3; uVar1 != 0; uVar1 = uVar1 - 1) {
            *(byte *)puVar4 = param_2;
            puVar4 = (uint *)((int)puVar4 + 1);
          }
        }
      }
      return param_1;
    }
    if (3 < param_3) {
      uVar2 = -(int)param_1 & 3;
      uVar3 = param_3;
      if (uVar2 != 0) {
        uVar3 = param_3 - uVar2;
        do {
          *(byte *)puVar4 = param_2;
          puVar4 = (uint *)((int)puVar4 + 1);
          uVar2 = uVar2 - 1;
        } while (uVar2 != 0);
      }
      uVar1 = uVar1 * 0x1010101;
      param_3 = uVar3 & 3;
      uVar3 = uVar3 >> 2;
      if (uVar3 != 0) {
        for (; uVar3 != 0; uVar3 = uVar3 - 1) {
          *puVar4 = uVar1;
          puVar4 = puVar4 + 1;
        }
        if (param_3 == 0) {
          return param_1;
        }
      }
    }
    do {
      *(char *)puVar4 = (char)uVar1;
      puVar4 = (uint *)((int)puVar4 + 1);
      param_3 = param_3 - 1;
    } while (param_3 != 0);
  }
  else {
    for (; param_3 != 0; param_3 = param_3 - 1) {
      *(byte *)puVar4 = param_2;
      puVar4 = (uint *)((int)puVar4 + 1);
    }
  }
  return param_1;
}



uint __cdecl FUN_0041e340(byte *param_1,byte *param_2)

{
  byte bVar1;
  bool bVar2;
  
  while( true ) {
    bVar1 = *param_1;
    bVar2 = bVar1 < *param_2;
    if (bVar1 != *param_2) break;
    if (bVar1 == 0) {
      return 0;
    }
    bVar1 = param_1[1];
    bVar2 = bVar1 < param_2[1];
    if (bVar1 != param_2[1]) break;
    param_1 = param_1 + 2;
    param_2 = param_2 + 2;
    if (bVar1 == 0) {
      return 0;
    }
  }
  return -(uint)bVar2 | 1;
}



void __cdecl FUN_0041e380(int param_1,char *param_2)

{
  char cVar1;
  int iVar2;
  
  iVar2 = param_1 - (int)param_2;
  do {
    cVar1 = *param_2;
    param_2 = param_2 + 1;
    param_2[iVar2 + -1] = cVar1;
  } while (cVar1 != '\0');
  return;
}



uint __cdecl FUN_0041e3a0(byte *param_1,byte *param_2)

{
  uint uVar1;
  uint uVar2;
  
  if (param_1 == param_2) {
    return 0;
  }
  if (param_1 == (byte *)0x0) {
    return 0xffffffff;
  }
  if (param_2 == (byte *)0x0) {
    return 1;
  }
  do {
    while( true ) {
      uVar1 = (uint)*param_1;
      uVar2 = (uint)*param_2;
      if (uVar1 == uVar2) {
        if (uVar1 == 0) {
          return 0;
        }
      }
      else {
        if (uVar2 == 0) {
          return uVar1;
        }
        if (uVar1 - 0x41 < 0x1a) {
          uVar1 = uVar1 + 0x20;
        }
        if (uVar2 - 0x41 < 0x1a) {
          uVar2 = uVar2 + 0x20;
        }
        if (uVar1 != uVar2) goto LAB_0041e438;
      }
      uVar1 = (uint)param_1[1];
      param_1 = param_1 + 2;
      uVar2 = (uint)param_2[1];
      param_2 = param_2 + 2;
      if (uVar1 != uVar2) break;
      if (uVar1 == 0) {
        return 0;
      }
    }
    if (uVar2 == 0) {
      return uVar1;
    }
    if (uVar1 - 0x41 < 0x1a) {
      uVar1 = uVar1 + 0x20;
    }
    if (uVar2 - 0x41 < 0x1a) {
      uVar2 = uVar2 + 0x20;
    }
  } while (uVar1 == uVar2);
LAB_0041e438:
  return uVar1 - uVar2;
}



int __cdecl FUN_0041e440(char *param_1)

{
  char *pcVar1;
  char cVar2;
  
  pcVar1 = param_1 + 1;
  do {
    cVar2 = *param_1;
    param_1 = param_1 + 1;
  } while (cVar2 != '\0');
  return (int)param_1 - (int)pcVar1;
}



void FUN_0041e460(char *param_1)

{
  __strlwr(param_1);
  return;
}



int __cdecl FUN_0041e470(short *param_1)

{
  short *psVar1;
  short sVar2;
  
  psVar1 = param_1 + 1;
  do {
    sVar2 = *param_1;
    param_1 = param_1 + 1;
  } while (sVar2 != 0);
  return (int)param_1 - (int)psVar1 >> 1;
}



float10 __cdecl FUN_0041e4a0(double param_1,uint param_2)

{
  uint uVar1;
  double dVar2;
  
  uVar1 = param_2;
  if ((int)param_2 < 0) {
    uVar1 = -param_2;
  }
  dVar2 = 1.0;
  while( true ) {
    if ((uVar1 & 1) != 0) {
      dVar2 = dVar2 * param_1;
    }
    uVar1 = uVar1 >> 1;
    if (uVar1 == 0) break;
    param_1 = param_1 * param_1;
  }
  if ((int)param_2 < 0) {
    return (float10)(1.0 / dVar2);
  }
  return (float10)dVar2;
}



undefined4 * __thiscall FUN_0041e500(void *this,undefined4 param_1,undefined4 param_2)

{
  *(undefined4 *)((int)this + 4) = param_2;
  *(undefined4 *)this = param_1;
  *(void **)((int)this + 8) = DAT_0044ea80;
  DAT_0044ea80 = this;
  return (undefined4 *)this;
}



void __cdecl FUN_0041e5a0(HMODULE param_1)

{
  if (param_1 == (HMODULE)0x0) {
    return;
  }
  GetProcAddress(param_1,"CreateInterface");
  return;
}



undefined4 FUN_0041e5c0(void)

{
  return 0x41e530;
}



void __cdecl FUN_0041e5d0(char *param_1)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  char *pcVar4;
  HMODULE pHVar5;
  char *pcVar6;
  char local_108 [260];
  
  piVar2 = (int *)CommandLine();
  iVar3 = (**(code **)(*piVar2 + 0x2c))("-xlsp");
  if (iVar3 == 0) {
    piVar2 = (int *)CommandLine();
    iVar3 = (**(code **)(*piVar2 + 0x2c))(&DAT_0043e7e8);
    if (iVar3 == 0) goto LAB_0041e66c;
    pcVar6 = "_ds";
  }
  else {
    pcVar6 = "_xlsp";
  }
  pcVar4 = param_1;
  do {
    cVar1 = *pcVar4;
    pcVar4 = pcVar4 + 1;
    pcVar4[(int)(local_108 + (-1 - (int)param_1))] = cVar1;
  } while (cVar1 != '\0');
  pcVar4 = _strchr(local_108,0x2e);
  if (pcVar4 != (char *)0x0) {
    *pcVar4 = '\0';
  }
  FUN_0041e120(local_108,pcVar6,0x104,0xffffffff);
  pHVar5 = FUN_0041e680((int)local_108);
  if (pHVar5 != (HMODULE)0x0) {
    return;
  }
LAB_0041e66c:
  FUN_0041e680((int)param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

HMODULE __cdecl FUN_0041e680(int param_1)

{
  int iVar1;
  code *pcVar2;
  HMODULE pHVar3;
  DWORD DVar4;
  HANDLE hHandle;
  DWORD dwLanguageId;
  CHAR *lpBuffer;
  DWORD nSize;
  va_list *Arguments;
  CHAR local_810 [1024];
  char local_410 [1024];
  LPCSTR local_10;
  HMODULE local_c;
  undefined4 local_8;
  
  FUN_0041e1d0(local_410,param_1,0x400);
  iVar1 = FUN_0041e000(local_410,".dll");
  if (iVar1 == 0) {
    FUN_0041e120(local_410,".dll",0x400,0xffffffff);
  }
  FUN_0041d790(local_410,'\\');
  pcVar2 = (code *)GetThreadedLoadLibraryFunc();
  local_10 = local_410;
  if (pcVar2 == (code *)0x0) {
    pHVar3 = LoadLibraryExA(local_10,(HANDLE)0x0,8);
    if (pHVar3 != (HMODULE)0x0) {
      StackToolsNotify_LoadedLibrary(local_410);
      return pHVar3;
    }
    Arguments = (va_list *)0x0;
    nSize = 0x3ff;
    lpBuffer = local_810;
    dwLanguageId = 0;
    DVar4 = GetLastError();
    FormatMessageA(0x1200,(LPCVOID)0x0,DVar4,dwLanguageId,lpBuffer,nSize,Arguments);
    FUN_0041e1d0(&DAT_0044ea88,(int)local_810,0x400);
    return (HMODULE)0x0;
  }
  local_8 = 0;
  local_c = (HMODULE)0x0;
  hHandle = (HANDLE)CreateSimpleThread(FUN_0041e9c0,&local_10,0);
  for (DVar4 = WaitForSingleObject(hHandle,0); DVar4 == 0x102;
      DVar4 = WaitForSingleObject(hHandle,DVar4)) {
    DVar4 = (*pcVar2)();
  }
  ReleaseThreadHandle(hHandle);
  if (local_c != (HMODULE)0x0) {
    _DAT_0044ee88 = 0;
    StackToolsNotify_LoadedLibrary(local_410);
    return local_c;
  }
  _DAT_0044ee88 = local_8;
  return local_c;
}



HMODULE __cdecl FUN_0041e800(char *param_1)

{
  char cVar1;
  uint uVar2;
  char *pcVar3;
  HMODULE hModule;
  FARPROC pFVar4;
  int *piVar5;
  int iVar6;
  char *pcVar7;
  char *pcVar8;
  char local_908 [1024];
  char local_508 [259];
  char cStack1029;
  undefined4 local_404;
  
  uVar2 = FUN_0041d7c0(param_1);
  if ((char)uVar2 == '\0') {
    FUN_0042646c((uint *)((char *)((int)register0x00000010 + -0x406) + 2),0x400);
    pcVar7 = (char *)((int)register0x00000010 + -0x406) + 2;
    pcVar8 = (char *)((int)register0x00000010 + -0x406) + 3;
    do {
      cVar1 = *pcVar7;
      pcVar7 = pcVar7 + 1;
    } while (cVar1 != '\0');
    if ((pcVar7[(int)((char *)((int)register0x00000010 + -0x406) + (1 - (int)pcVar8))] == '/') ||
       (pcVar7[(int)((char *)((int)register0x00000010 + -0x406) + (1 - (int)pcVar8))] == '\\')) {
      pcVar7[(int)((char *)((int)register0x00000010 + -0x406) + (1 - (int)pcVar8))] = '\0';
    }
    pcVar7 = (char *)((int)register0x00000010 + -0x406) + 2;
    pcVar8 = (char *)((int)register0x00000010 + -0x406) + 3;
    do {
      cVar1 = *pcVar7;
      pcVar7 = pcVar7 + 1;
    } while (cVar1 != '\0');
    pcVar3 = _strstr(param_1,"bin/");
    if ((pcVar3 == param_1) ||
       (((pcVar7[(int)((char *)((int)register0x00000010 + -0x406) + (1 - (int)pcVar8))] == 'n' &&
         (pcVar7[(int)((char *)((int)register0x00000010 + -0x406) + -(int)pcVar8)] == 'i')) &&
        (pcVar7[(int)(local_508 + (0x101 - (int)pcVar8))] == 'b')))) {
      pcVar8 = "%s/%s";
    }
    else {
      pcVar8 = "%s/bin/%s";
    }
    FUN_0041dfc0(local_908,0x400,(byte *)pcVar8);
    hModule = (HMODULE)FUN_0041e5d0(local_908);
    if (hModule != (HMODULE)0x0) goto LAB_0041e8f9;
  }
  hModule = (HMODULE)FUN_0041e5d0(param_1);
LAB_0041e8f9:
  pFVar4 = GetProcAddress(hModule,"BuiltDebug");
  if (pFVar4 != (FARPROC)0x0) {
    if (hModule != (HMODULE)0x0) {
      piVar5 = (int *)CommandLine();
      iVar6 = (**(code **)(*piVar5 + 0x2c))("-allowdebug");
      if (iVar6 == 0) {
        cVar1 = Plat_IsInDebugSession();
        if (cVar1 == '\0') {
          Error("Module %s is a debug build\n",param_1);
        }
      }
    }
    DevWarning("Module %s is a debug build\n",param_1);
    if (DAT_0044ee8c == '\0') {
      DAT_0044ee8c = '\x01';
      GetCurrentProcessId();
      FUN_0042678d(local_508,(byte *)"VALVE-MODULE-DEBUG-%08X");
      CreateFileMappingA((HANDLE)0xffffffff,(LPSECURITY_ATTRIBUTES)0x0,4,0,0x400,local_508);
    }
  }
  return hModule;
}



void __cdecl FUN_0041e9a0(HMODULE param_1)

{
  if (param_1 != (HMODULE)0x0) {
    FreeLibrary(param_1);
  }
  return;
}



undefined4 __cdecl FUN_0041e9c0(LPCSTR *param_1)

{
  HMODULE pHVar1;
  
  pHVar1 = LoadLibraryExA(*param_1,(HANDLE)0x0,8);
  param_1[1] = (LPCSTR)pHVar1;
  return 0;
}



undefined4 __cdecl CreateInterface(undefined *param_1,undefined4 *param_2)

{
  code **ppcVar1;
  code cVar2;
  code *pcVar3;
  uint uVar4;
  undefined4 uVar5;
  code *pcVar6;
  code **ppcVar7;
  bool bVar8;
  
                    // 0x1e9e0  1  CreateInterface
  ppcVar7 = DAT_0044ea80;
  if (DAT_0044ea80 != (code **)0x0) {
    do {
      pcVar6 = ppcVar7[1];
      pcVar3 = (code *)param_1;
      do {
        cVar2 = *pcVar6;
        bVar8 = (byte)cVar2 < (byte)*pcVar3;
        if (cVar2 != *pcVar3) {
LAB_0041e567:
          uVar4 = -(uint)bVar8 | 1;
          goto LAB_0041e56c;
        }
        if (cVar2 == (code)0x0) break;
        cVar2 = pcVar6[1];
        bVar8 = (byte)cVar2 < (byte)pcVar3[1];
        if (cVar2 != pcVar3[1]) goto LAB_0041e567;
        pcVar6 = pcVar6 + 2;
        pcVar3 = pcVar3 + 2;
      } while (cVar2 != (code)0x0);
      uVar4 = 0;
LAB_0041e56c:
      if (uVar4 == 0) {
        if (param_2 != (undefined4 *)0x0) {
          *param_2 = 0;
        }
                    // WARNING: Could not recover jumptable at 0x0041e59c. Too many branches
                    // WARNING: Treating indirect jump as call
        uVar5 = (**ppcVar7)();
        return uVar5;
      }
      ppcVar1 = ppcVar7 + 2;
      ppcVar7 = (code **)*ppcVar1;
    } while ((code **)*ppcVar1 != (code **)0x0);
  }
  if (param_2 != (undefined4 *)0x0) {
    *param_2 = 1;
  }
  return 0;
}



void __thiscall FUN_0041e9f0(void *this,undefined4 param_1)

{
  undefined4 uVar1;
  
  uVar1 = FUN_00422570(this,4);
  if ((char)uVar1 != '\0') {
    if ((*(byte *)((int)this + 0x2c) & 1) != 0) {
                    // WARNING: Load size is inaccurate
      FUN_0040ef60((void *)((int)this + 0x2c),
                   (void *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this),
                   &param_1,1);
      *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 4;
      FUN_004223b0(this,*(int *)((int)this + 0x10));
      return;
    }
                    // WARNING: Load size is inaccurate
    *(undefined4 *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this) = param_1;
    *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 4;
    FUN_004223b0(this,*(int *)((int)this + 0x10));
  }
  return;
}



void __thiscall FUN_0041ea60(void *this,undefined8 param_1,undefined4 param_2)

{
  int iVar1;
  undefined4 uVar2;
  undefined8 *puVar3;
  int iVar4;
  
  uVar2 = FUN_00422570(this,8);
  if ((char)uVar2 != '\0') {
    if ((*(byte *)((int)this + 0x2c) & 1) == 0) {
      iVar4 = *(int *)((int)this + 0x10) - *(int *)((int)this + 0x20);
                    // WARNING: Load size is inaccurate
      iVar1 = *this;
      *(undefined4 *)(iVar4 + iVar1) = (undefined4)param_1;
      *(undefined4 *)(iVar4 + 4 + iVar1) = param_1._4_4_;
    }
    else {
                    // WARNING: Load size is inaccurate
      puVar3 = (undefined8 *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this);
      if (puVar3 != (undefined8 *)0x0) {
        if ((*(byte *)((int)this + 0x2c) & 1) != 0) {
          FUN_0040ed80(puVar3,(undefined *)&param_1);
          *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 8;
          FUN_004223b0(this,*(int *)((int)this + 0x10));
          return;
        }
        if (puVar3 != &param_1) {
          *puVar3 = param_1;
          *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 8;
          FUN_004223b0(this,*(int *)((int)this + 0x10));
          return;
        }
      }
    }
    *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 8;
    FUN_004223b0(this,*(int *)((int)this + 0x10));
  }
  return;
}



void __thiscall FUN_0041eb00(void *this,void *param_1,void *param_2,uint param_3)

{
  uint uVar1;
  undefined *puVar2;
  
  if ((0 < (int)param_3) && (param_1 != (void *)0x0)) {
    if (param_2 == (void *)0x0) {
      param_2 = param_1;
    }
                    // WARNING: Load size is inaccurate
    if ((*this & 1) == 0) {
      if ((param_2 != (void *)0x0) && (param_1 != param_2)) {
        FID_conflict__memcpy(param_1,param_2,param_3 * 2);
      }
    }
    else if (0 < (int)param_3) {
      puVar2 = (undefined *)((int)param_2 + 1);
      uVar1 = param_3;
      do {
        param_3 = (uint)CONCAT11(puVar2[-1],*puVar2);
        FID_conflict__memcpy(param_1,&param_3,2);
        puVar2 = puVar2 + 2;
        param_1 = (void *)((int)param_1 + 2);
        uVar1 = uVar1 - 1;
      } while (uVar1 != 0);
      return;
    }
  }
  return;
}



uint * __thiscall FUN_0041eb80(void *this,undefined4 param_1)

{
  int *piVar1;
  undefined4 uVar2;
  uint local_8;
  
  local_8 = 0xffffffff;
                    // WARNING: Load size is inaccurate
  *(uint *)this = *this & 0xff000000;
  *(undefined *)((int)this + 3) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x18) = 0;
  *(undefined4 *)((int)this + 0x14) = 0;
  *(undefined4 *)((int)this + 0x1c) = 0;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  piVar1 = (int *)KeyValuesSystem();
  uVar2 = (**(code **)(*piVar1 + 0x24))(&local_8,param_1,1);
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
  *(uint *)this = *this ^ (*this ^ local_8) & 0xffffff;
  *(char *)((int)this + 3) = (char)uVar2;
  *(short *)((int)this + 0x12) = (short)((uint)uVar2 >> 8);
  return (uint *)this;
}



void __fastcall thunk_FUN_00420d90(int param_1)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  
  iVar2 = *(int *)(param_1 + 0x18);
  while (iVar2 != 0) {
    iVar1 = *(int *)(iVar2 + 0x14);
    *(undefined4 *)(iVar2 + 0x14) = 0;
    FUN_00420d90(iVar2);
    piVar3 = (int *)KeyValuesSystem();
    (**(code **)(*piVar3 + 8))(iVar2);
    iVar2 = iVar1;
  }
  iVar2 = *(int *)(param_1 + 0x14);
  while ((iVar2 != 0 && (iVar2 != param_1))) {
    iVar1 = *(int *)(iVar2 + 0x14);
    *(undefined4 *)(iVar2 + 0x14) = 0;
    FUN_00420d90(iVar2);
    piVar3 = (int *)KeyValuesSystem();
    (**(code **)(*piVar3 + 8))(iVar2);
    iVar2 = iVar1;
  }
  FUN_00403c10(*(undefined4 *)(param_1 + 4));
  *(undefined4 *)(param_1 + 4) = 0;
  FUN_00403c10(*(undefined4 *)(param_1 + 8));
  *(undefined4 *)(param_1 + 8) = 0;
  return;
}



void __cdecl FUN_0041ec00(undefined4 param_1)

{
  int *piVar1;
  
  piVar1 = (int *)KeyValuesSystem();
  (**(code **)(*piVar1 + 4))(param_1);
  return;
}



void __cdecl FUN_0041ec20(undefined4 param_1)

{
  int *piVar1;
  
  piVar1 = (int *)KeyValuesSystem();
  (**(code **)(*piVar1 + 8))(param_1);
  return;
}



void __thiscall FUN_0041ec40(void *this,undefined4 param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = *(int *)((int)this + 0x18);
  if (*(int *)((int)this + 0x18) == 0) {
    *(undefined4 *)((int)this + 0x18) = param_1;
    return;
  }
  do {
    iVar1 = *(int *)(iVar2 + 0x14);
    if (iVar1 == 0) break;
    iVar2 = iVar1;
  } while (iVar1 != 0);
  *(undefined4 *)(iVar2 + 0x14) = param_1;
  return;
}



uint * __thiscall FUN_0041ec70(void *this,undefined4 param_1,int param_2)

{
  int *piVar1;
  void *this_00;
  uint *puVar2;
  
  piVar1 = (int *)KeyValuesSystem();
  this_00 = (void *)(**(code **)(*piVar1 + 4))(0x24);
  if (this_00 == (void *)0x0) {
    puVar2 = (uint *)0x0;
  }
  else {
    puVar2 = FUN_0041eb80(this_00,param_1);
  }
  *(bool *)((int)puVar2 + 0x11) = *(char *)((int)this + 0x11) != '\0';
  if (param_2 == 0) {
    *(uint **)((int)this + 0x18) = puVar2;
    return puVar2;
  }
  *(uint **)(param_2 + 0x14) = puVar2;
  return puVar2;
}



uint __thiscall FUN_0041ecc0(void *this,int *param_1,int param_2)

{
  uint uVar1;
  int iVar2;
  void *this_00;
  
  uVar1 = (**(code **)*param_1)(this,param_2);
  if ((char)uVar1 == '\0') {
    return uVar1;
  }
  if (this != (void *)0x0) {
    iVar2 = *(int *)((int)this + 0x18);
    if (iVar2 != 0) {
      do {
        if (*(char *)(iVar2 + 0x10) != '\0') break;
        iVar2 = *(int *)(iVar2 + 0x14);
      } while (iVar2 != 0);
      if (iVar2 != 0) {
        do {
          uVar1 = (**(code **)(*param_1 + 4))(iVar2,param_2 + 1);
          if ((char)uVar1 == '\0') goto LAB_0041edae;
          if (iVar2 == 0) {
            iVar2 = 0;
          }
          else {
            iVar2 = *(int *)(iVar2 + 0x14);
            if (iVar2 == 0) break;
            do {
              if (*(char *)(iVar2 + 0x10) != '\0') break;
              iVar2 = *(int *)(iVar2 + 0x14);
            } while (iVar2 != 0);
          }
        } while (iVar2 != 0);
      }
    }
    this_00 = *(void **)((int)this + 0x18);
    if (this_00 != (void *)0x0) {
      do {
        if (*(char *)((int)this_00 + 0x10) == '\0') break;
        this_00 = *(void **)((int)this_00 + 0x14);
      } while (this_00 != (void *)0x0);
      if (this_00 != (void *)0x0) {
        do {
          uVar1 = FUN_0041ecc0(this_00,param_1,param_2 + 1);
          if ((char)uVar1 == '\0') {
LAB_0041edae:
            return uVar1 & 0xffffff00;
          }
          if (this_00 == (void *)0x0) {
            this_00 = (void *)0x0;
          }
          else {
            this_00 = *(void **)((int)this_00 + 0x14);
            if (this_00 == (void *)0x0) break;
            do {
              if (*(char *)((int)this_00 + 0x10) == '\0') break;
              this_00 = *(void **)((int)this_00 + 0x14);
            } while (this_00 != (void *)0x0);
          }
        } while (this_00 != (void *)0x0);
      }
    }
  }
  uVar1 = (**(code **)(*param_1 + 8))(this,param_2);
  return uVar1;
}



uint __thiscall FUN_0041edc0(uint3 param_1,int *param_2,int *param_3)

{
  uint uVar1;
  undefined4 uStack8;
  
  uStack8 = (uint)param_1;
  uVar1 = FUN_00424bf0(&DAT_00456ea0,(undefined *)((int)&uStack8 + 3),param_2,param_3,(int *)0x0);
  if ((char)uVar1 == '\0') {
    uVar1 = FUN_00420e80(&DAT_00447480,"KV Conditional Evaluation Error");
  }
  return uVar1 & 0xffffff00 | uStack8 >> 0x18;
}



// WARNING: Could not reconcile some variable overlaps

uint * __thiscall FUN_0041ee00(void *this,char *param_1,undefined4 param_2)

{
  char *pcVar1;
  size_t _Size;
  int iVar2;
  int *piVar3;
  uint uVar4;
  uint *puVar5;
  void *this_00;
  size_t _Size_00;
  undefined local_20 [16];
  char *local_10;
  char *local_c;
  uint *local_8;
  
  pcVar1 = param_1;
  if (this == (void *)0x0) {
    return (uint *)0x0;
  }
  if ((param_1 == (char *)0x0) || (*param_1 == '\0')) {
    return (uint *)this;
  }
  local_10 = (char *)0x0;
  local_20 = ZEXT816(0);
  local_8 = (uint *)this;
  local_c = _strchr(param_1,0x2f);
  if (local_c != (char *)0x0) {
    _Size_00 = (int)local_c - (int)param_1;
    iVar2 = _Size_00 + 1;
    if (iVar2 < 1) {
    }
    else {
      FUN_00401b50(local_20,iVar2);
      local_20 = CONCAT412(local_20._12_4_ + iVar2,local_20._0_12_);
      _Size = (local_20._12_4_ + iVar2) - iVar2;
      local_10 = local_20._0_4_;
      if ((0 < (int)_Size) && (0 < iVar2)) {
        FID_conflict__memcpy(local_20._0_4_ + iVar2,local_20._0_4_,_Size);
      }
    }
    FID_conflict__memcpy(local_20._0_4_,param_1,_Size_00);
    local_20._0_4_[_Size_00] = '\0';
    iVar2 = FUN_0041e440(param_1);
    this = local_8;
    if (1 < iVar2) {
      param_1 = local_20._0_4_;
    }
  }
  piVar3 = (int *)KeyValuesSystem();
  uVar4 = (**(code **)(*piVar3 + 0xc))(param_1,param_2);
  if (uVar4 == 0xffffffff) {
LAB_0041ef85:
    puVar5 = (uint *)0x0;
  }
  else {
    local_8 = (uint *)0x0;
    for (puVar5 = *(uint **)((int)this + 0x18); puVar5 != (uint *)0x0; puVar5 = (uint *)puVar5[5]) {
      local_8 = puVar5;
      if ((*puVar5 & 0xffffff) == uVar4) goto LAB_0041ef5d;
    }
    if (*(void **)((int)this + 0x1c) != (void *)0x0) {
      puVar5 = FUN_0041ee00(*(void **)((int)this + 0x1c),pcVar1,0);
    }
    if (puVar5 == (uint *)0x0) {
      if ((char)param_2 == '\0') goto LAB_0041ef85;
      piVar3 = (int *)KeyValuesSystem();
      this_00 = (void *)(**(code **)(*piVar3 + 4))(0x24);
      if (this_00 == (void *)0x0) {
        puVar5 = (uint *)0x0;
      }
      else {
        puVar5 = FUN_0041eb80(this_00,param_1);
      }
      if (local_8 == (uint *)0x0) {
        *(uint **)((int)this + 0x18) = puVar5;
      }
      else {
        local_8[5] = (uint)puVar5;
      }
      puVar5[5] = 0;
      *(undefined *)((int)this + 0x10) = 0;
    }
LAB_0041ef5d:
    if (local_c != (char *)0x0) {
      puVar5 = FUN_0041ee00(puVar5,local_c + 1,param_2);
      FUN_0040a350((int *)local_20);
      return puVar5;
    }
  }
  FUN_0040a350((int *)local_20);
  return puVar5;
}



uint * __thiscall FUN_0041efb0(void *this,uint param_1)

{
  uint *puVar1;
  
  if (this != (void *)0x0) {
    for (puVar1 = *(uint **)((int)this + 0x18); puVar1 != (uint *)0x0; puVar1 = (uint *)puVar1[5]) {
      if ((*puVar1 & 0xffffff) == param_1) {
        return puVar1;
      }
    }
  }
  return (uint *)0x0;
}



int __fastcall FUN_0041efe0(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x18);
  if (iVar1 != 0) {
    for (iVar2 = *(int *)(iVar1 + 0x14); iVar2 != 0; iVar2 = *(int *)(iVar2 + 0x14)) {
      iVar1 = iVar2;
    }
    return iVar1;
  }
  return 0;
}



uint __fastcall FUN_0041f000(uint *param_1)

{
  byte bVar1;
  uint uVar2;
  
  uVar2 = FUN_00422510(param_1,1);
  if ((char)uVar2 != '\0') {
    bVar1 = *(byte *)((param_1[3] - param_1[8]) + *param_1);
    param_1[3] = param_1[3] + 1;
    return *param_1 & 0xffffff00 | (uint)bVar1;
  }
  return uVar2 & 0xffffff00;
}



int __thiscall FUN_0041f030(void *this,char *param_1)

{
  uint *puVar1;
  
  puVar1 = FUN_0041ee00(this,param_1,0);
  if (puVar1 != (uint *)0x0) {
    return (int)*(char *)(puVar1 + 4);
  }
  return 0;
}



undefined4 __fastcall FUN_0041f050(int param_1)

{
  if (param_1 != 0) {
    return *(undefined4 *)(param_1 + 0x18);
  }
  return 0;
}



int __fastcall FUN_0041f060(int param_1)

{
  int iVar1;
  
  if (param_1 == 0) {
    iVar1 = 0;
  }
  else {
    iVar1 = *(int *)(param_1 + 0x18);
    if (iVar1 != 0) {
      while (*(char *)(iVar1 + 0x10) != '\0') {
        iVar1 = *(int *)(iVar1 + 0x14);
        if (iVar1 == 0) {
          return iVar1;
        }
      }
    }
  }
  return iVar1;
}



float10 __thiscall FUN_0041f090(void *this,char *param_1,float param_2)

{
  uint *puVar1;
  float10 fVar2;
  undefined4 in_XMM0_Da;
  undefined4 in_XMM0_Db;
  
  puVar1 = FUN_0041ee00(this,param_1,0);
  if (puVar1 == (uint *)0x0) {
    return (float10)param_2;
  }
  if (true) {
    switch(*(undefined *)(puVar1 + 4)) {
    case 1:
      fVar2 = (float10)FUN_00428c51((byte *)puVar1[1]);
      return fVar2;
    case 2:
      return (float10)puVar1[3];
    case 3:
      return (float10)(float)puVar1[3];
    case 5:
      fVar2 = (float10)FUN_004292bc((WCHAR *)puVar1[2]);
      return fVar2;
    case 7:
      FUN_004016ee(*(undefined4 *)puVar1[1],((undefined4 *)puVar1[1])[1]);
      return (float10)(float)(double)CONCAT44(in_XMM0_Db,in_XMM0_Da);
    }
  }
  return (float10)0;
}



uint __thiscall FUN_0041f130(void *this,char *param_1,uint param_2)

{
  uint *puVar1;
  uint uVar2;
  
  puVar1 = FUN_0041ee00(this,param_1,0);
  if (puVar1 == (uint *)0x0) {
    return param_2;
  }
  if (true) {
    switch(*(undefined *)(puVar1 + 4)) {
    case 1:
      uVar2 = FUN_00427f30((char *)puVar1[1]);
      return uVar2;
    case 3:
      return (int)(float)puVar1[3];
    case 5:
      uVar2 = FUN_00429348((wchar_t *)puVar1[2]);
      return uVar2;
    case 7:
      return 0;
    }
  }
  return puVar1[3];
}



undefined1 * __fastcall FUN_0041f1b0(int param_1)

{
  int *piVar1;
  undefined1 *puVar2;
  
  if (param_1 != 0) {
    piVar1 = (int *)KeyValuesSystem();
    puVar2 = (undefined1 *)
             (**(code **)(*piVar1 + 0x10))
                       ((uint)CONCAT21(*(undefined2 *)(param_1 + 0x12),*(undefined *)(param_1 + 3)))
    ;
    return puVar2;
  }
  return &DAT_0043b3d2;
}



undefined4 __fastcall FUN_0041f1e0(int param_1)

{
  if (param_1 != 0) {
    return *(undefined4 *)(param_1 + 0x14);
  }
  return 0;
}



int __fastcall FUN_0041f1f0(int param_1)

{
  int iVar1;
  
  if (param_1 == 0) {
    iVar1 = 0;
  }
  else {
    iVar1 = *(int *)(param_1 + 0x14);
    if (iVar1 != 0) {
      while (*(char *)(iVar1 + 0x10) != '\0') {
        iVar1 = *(int *)(iVar1 + 0x14);
        if (iVar1 == 0) {
          return iVar1;
        }
      }
    }
  }
  return iVar1;
}



uint __thiscall FUN_0041f220(void *this,char *param_1,uint param_2)

{
  uint *puVar1;
  
  puVar1 = FUN_0041ee00(this,param_1,0);
  if (puVar1 == (uint *)0x0) {
    return param_2;
  }
  if (*(char *)(puVar1 + 4) != '\x04') {
    return 0;
  }
  return puVar1[3];
}



uint __thiscall FUN_0041f250(void *this,char *param_1,uint param_2)

{
  uint *puVar1;
  int iVar2;
  byte *pbVar3;
  CHAR local_244 [512];
  char local_44 [64];
  
  puVar1 = FUN_0041ee00(this,param_1,0);
  if (puVar1 == (uint *)0x0) {
switchD_0041f281_caseD_7:
    return param_2;
  }
  switch(*(undefined *)(puVar1 + 4)) {
  case 2:
    FUN_0041dfc0(local_44,0x40,&DAT_0043d454);
    goto LAB_0041f2ab;
  case 3:
    pbVar3 = &DAT_0043e854;
    break;
  case 4:
    pbVar3 = &DAT_0043e2c8;
    break;
  case 5:
    iVar2 = FUN_0041e2d0((LPCWSTR)puVar1[2],local_244,0x200);
    if (iVar2 == 0) {
      return param_2;
    }
    FUN_00420fd0(this,param_1,local_244);
  case 1:
    return puVar1[1];
  case 6:
    FUN_0041dfc0(local_44,0x40,(byte *)"%d %d %d %d");
    goto LAB_0041f2ab;
  case 7:
    pbVar3 = &DAT_0043e2c8;
    break;
  default:
    goto switchD_0041f281_caseD_7;
  }
  FUN_0041dfc0(local_44,0x40,pbVar3);
LAB_0041f2ab:
  FUN_00420fd0(this,param_1,local_44);
  return puVar1[1];
}



ulonglong __thiscall FUN_0041f380(void *this,char *param_1,ulonglong param_2)

{
  uint *puVar1;
  
  puVar1 = FUN_0041ee00(this,param_1,0);
  if (puVar1 != (uint *)0x0) {
    if (true) {
      switch(*(undefined *)(puVar1 + 4)) {
      case 1:
        FUN_004285ff((char *)puVar1[1],(int)&DAT_0043e2c8);
        return 0;
      case 3:
        return (ulonglong)(int)(float)puVar1[3];
      case 4:
        return (ulonglong)puVar1[3];
      case 5:
        FUN_00429488((wchar_t *)puVar1[2],(int)L"%lld");
        return 0;
      case 7:
        return *(ulonglong *)puVar1[1];
      }
    }
    return (ulonglong)(int)puVar1[3];
  }
  return param_2;
}



uint __thiscall FUN_0041f440(void *this,char *param_1,uint param_2)

{
  longlong lVar1;
  uint *puVar2;
  int iVar3;
  LPWSTR pWVar4;
  wchar_t *pwVar5;
  short local_88 [66];
  
  puVar2 = FUN_0041ee00(this,param_1,0);
  if (puVar2 == (uint *)0x0) {
switchD_0041f471_caseD_7:
    return param_2;
  }
  switch(*(undefined *)(puVar2 + 4)) {
  case 1:
    iVar3 = FUN_0041e440((char *)puVar2[1]);
    lVar1 = (ulonglong)(iVar3 + 1U) * 2;
    pWVar4 = (LPWSTR)FUN_00403c30(-(uint)((int)((ulonglong)lVar1 >> 0x20) != 0) | (uint)lVar1);
    iVar3 = FUN_0041e290((LPCSTR)puVar2[1],pWVar4,(iVar3 + 1U) * 2);
    if (-1 < iVar3) {
      FUN_00421090(this,param_1,pWVar4);
      FUN_00403c10(pWVar4);
      return puVar2[2];
    }
    FUN_00403c10(pWVar4);
    return param_2;
  case 2:
    FUN_004213b0((char *)local_88,0x40,(int)&DAT_0043e980);
    goto LAB_0041f49e;
  case 3:
    pwVar5 = L"%f";
    break;
  case 4:
    pwVar5 = L"%lld";
    break;
  case 5:
    goto switchD_0041f471_caseD_5;
  case 6:
    FUN_004213b0((char *)local_88,0x40,(int)L"%d %d %d %d");
    goto LAB_0041f49e;
  case 7:
    pwVar5 = L"%lld";
    break;
  default:
    goto switchD_0041f471_caseD_7;
  }
  FUN_004213b0((char *)local_88,0x40,(int)pwVar5);
LAB_0041f49e:
  FUN_00421090(this,param_1,local_88);
switchD_0041f471_caseD_5:
  return puVar2[2];
}



uint __thiscall FUN_0041f5b0(void *this,int param_1,undefined4 param_2)

{
  bool bVar1;
  uint uVar2;
  
  if ((DAT_00456f44 & 1) == 0) {
    DAT_00456f44 = DAT_00456f44 | 1;
    FUN_00421620(&DAT_00456f3c,"developer");
  }
  bVar1 = FUN_00421fd0((int *)&DAT_00456f3c);
  if ((bVar1) && ((int)*(uint *)(DAT_00456f40 + 0x30) < *(int *)((int)this + 4))) {
    return *(uint *)(DAT_00456f40 + 0x30) & 0xffffff00;
  }
  uVar2 = FUN_0041f610(this,param_1,param_2);
  return uVar2;
}



undefined4 __thiscall FUN_0041f610(void *this,int param_1,undefined4 param_2)

{
  char cVar1;
  int *piVar2;
  undefined4 uVar3;
  char *pcVar4;
  
                    // WARNING: Load size is inaccurate
  cVar1 = (**(code **)(*this + 0xc))(param_2);
  if (param_1 == 0) {
    if (cVar1 == '\0') {
      return 0;
    }
    pcVar4 = "<< NULL >>\n";
  }
  else {
    if (cVar1 == '\0') {
      return 0;
    }
    piVar2 = (int *)KeyValuesSystem();
    uVar3 = (**(code **)(*piVar2 + 0x10))
                      ((uint)CONCAT21(*(undefined2 *)(param_1 + 0x12),*(undefined *)(param_1 + 3)));
                    // WARNING: Load size is inaccurate
    cVar1 = (**(code **)(*this + 0x10))(uVar3);
    if (cVar1 == '\0') {
      return 0;
    }
    pcVar4 = " {\n";
  }
                    // WARNING: Load size is inaccurate
  cVar1 = (**(code **)(*this + 0x10))(pcVar4);
  if (cVar1 == '\0') {
    return 0;
  }
  return 1;
}



undefined4 __thiscall FUN_0041f690(void *this,int param_1,undefined4 param_2)

{
  char cVar1;
  undefined4 in_EAX;
  
  if (param_1 == 0) {
    return CONCAT31((int3)((uint)in_EAX >> 8),1);
  }
                    // WARNING: Load size is inaccurate
  cVar1 = (**(code **)(*this + 0xc))(param_2);
  if (cVar1 != '\0') {
                    // WARNING: Load size is inaccurate
    cVar1 = (**(code **)(*this + 0x10))(&DAT_0043e95c);
    if (cVar1 != '\0') {
      return 1;
    }
  }
  return 0;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe
// WARNING: Unable to track spacebase fully for stack

void __thiscall FUN_0041f6e0(void *this,int param_1)

{
  int iVar1;
  code *pcVar2;
  int iVar3;
  undefined4 uStack32;
  uint *puStack28;
  undefined4 uStack24;
  uint uStack20;
  
  iVar1 = param_1 * 2;
  uStack20 = 0x41f6fd;
  iVar3 = -(iVar1 + 0x10U & 0xfffffff0);
  *(int *)((int)&uStack20 + iVar3) = iVar1;
  *(undefined4 *)((int)&uStack24 + iVar3) = 0x20;
  *(undefined **)((int)&puStack28 + iVar3) = &stack0xfffffff0 + iVar3;
  *(undefined4 *)((int)&uStack32 + iVar3) = 0x41f70b;
  FUN_00427870(*(uint **)((int)&puStack28 + iVar3),*(byte *)((int)&uStack24 + iVar3),
               *(uint *)((int)&uStack20 + iVar3));
  (&stack0xfffffff0)[iVar1 + iVar3] = 0;
                    // WARNING: Load size is inaccurate
  iVar1 = *this;
  *(undefined **)((int)&uStack20 + iVar3) = &stack0xfffffff0 + iVar3;
  pcVar2 = *(code **)(iVar1 + 0x10);
  *(undefined4 *)((int)&uStack24 + iVar3) = 0x41f71d;
  (*pcVar2)();
  return;
}



undefined4 __thiscall FUN_0041f730(void *this,undefined4 param_1)

{
  undefined4 uVar1;
  
  if (0 < *(int *)((int)this + 4)) {
    uVar1 = DevMsg(*(int *)((int)this + 4));
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  uVar1 = Msg(&DAT_0043b3d4,param_1);
  return CONCAT31((int3)((uint)uVar1 >> 8),1);
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe

uint __thiscall FUN_0041f770(void *this,void *param_1)

{
  char cVar1;
  uint uVar2;
  int *piVar3;
  short *psVar4;
  int iVar5;
  char acStack164 [112];
  undefined4 uStack52;
  
                    // WARNING: Load size is inaccurate
  uVar2 = (**(code **)(*this + 0xc))();
  if (param_1 == (void *)0x0) {
                    // WARNING: Load size is inaccurate
    if (((char)uVar2 != '\0') && (cVar1 = (**(code **)(*this + 0x10))(), cVar1 != '\0')) {
      return 1;
    }
    return 0;
  }
  if ((char)uVar2 == '\0') {
LAB_0041f834:
    return uVar2 & 0xffffff00;
  }
  piVar3 = (int *)KeyValuesSystem();
  (**(code **)(*piVar3 + 0x10))();
                    // WARNING: Load size is inaccurate
  uVar2 = (**(code **)(*this + 0x10))();
                    // WARNING: Load size is inaccurate
  if (((char)uVar2 == '\0') || (uVar2 = (**(code **)(*this + 0x10))(), (char)uVar2 == '\0'))
  goto LAB_0041f834;
  if (false) goto switchD_0041f80d_caseD_6;
  switch(*(undefined *)((int)param_1 + 0x10)) {
  case 1:
                    // WARNING: Load size is inaccurate
    iVar5 = *this;
    FUN_0041f250(param_1,(char *)0x0,(uint)&DAT_0043b3d2);
    uVar2 = (**(code **)(iVar5 + 0x10))();
    if ((char)uVar2 == '\0') goto LAB_0041f834;
    goto switchD_0041f80d_caseD_6;
  case 2:
    FUN_0041f130(param_1,(char *)0x0,0);
    FUN_0041dfc0(acStack164,0x80,(byte *)"int( %d = 0x%X )");
    break;
  case 3:
    FUN_0041f090(param_1,(char *)0x0,0.0);
    FUN_0041dfc0(acStack164,0x80,(byte *)"float( %f )");
    break;
  case 4:
    FUN_0041f220(param_1,(char *)0x0,0);
    FUN_0041dfc0(acStack164,0x80,(byte *)"ptr( 0x%p )");
    break;
  case 5:
    psVar4 = (short *)FUN_0041f440(param_1,(char *)0x0,(uint)&DAT_0043e864);
    iVar5 = FUN_0041e470(psVar4);
    FUN_0041dfc0(acStack164,iVar5 * 2 + 0x40,(byte *)"%ls [wstring, len = %d]");
    break;
  default:
    goto switchD_0041f80d_caseD_6;
  case 7:
    uStack52 = 0x41f95b;
    FUN_0041f380(param_1,(char *)0x0,0);
    FUN_0041dfc0(acStack164,0x80,(byte *)"u64( %lld = 0x%llX )");
                    // WARNING: Load size is inaccurate
    iVar5 = *this;
    goto LAB_0041f873;
  }
                    // WARNING: Load size is inaccurate
  iVar5 = *this;
LAB_0041f873:
  uVar2 = (**(code **)(iVar5 + 0x10))();
  if ((char)uVar2 == '\0') {
    return uVar2;
  }
switchD_0041f80d_caseD_6:
                    // WARNING: Load size is inaccurate
  uVar2 = (**(code **)(*this + 0x10))();
  return uVar2;
}



uint FUN_0041f9d0(uint *param_1,char *param_2,int param_3,undefined4 param_4,int *param_5)

{
  undefined4 in_EAX;
  int iVar1;
  LPSTR pCVar2;
  uint uVar3;
  uint uVar4;
  int local_38 [2];
  int local_30;
  void *local_8;
  
  if (param_2 == (char *)0x0) {
    return CONCAT31((int3)((uint)in_EAX >> 8),1);
  }
  iVar1 = FUN_0041e440(param_2);
  FUN_00422280(local_38,(int)param_2,iVar1,9);
  if (((2 < iVar1) && (*param_2 == -1)) && (param_2[1] == -2)) {
    iVar1 = FUN_0041e2d0((LPCWSTR)(param_2 + 2),(LPSTR)0x0,0);
    pCVar2 = (LPSTR)FUN_00403c30(iVar1);
    FUN_0041e2d0((LPCWSTR)(param_2 + 2),pCVar2,iVar1);
    FUN_00422400(local_38,(int)pCVar2,iVar1,iVar1,9);
  }
  uVar3 = FUN_0041fa90(local_8,param_1,(int)local_38,param_3,param_4,param_5);
  uVar4 = uVar3;
  if ((-1 < local_30) && (local_38[0] != 0)) {
    uVar4 = (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_38[0]);
  }
  return uVar4 & 0xffffff00 | uVar3 & 0xff;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint __thiscall
FUN_0041fa90(void *this,uint *param_1,int param_2,int param_3,undefined4 param_4,int *param_5)

{
  int iVar1;
  void *pvVar2;
  DWORD DVar3;
  DWORD DVar4;
  DWORD DVar5;
  byte *pbVar6;
  uint uVar7;
  char *pcVar8;
  undefined4 uVar9;
  void *pvVar10;
  int *piVar11;
  DWORD *pDVar12;
  undefined *puVar13;
  int iVar14;
  uint *puVar15;
  uint *puVar16;
  bool bVar17;
  undefined local_4c [12];
  int iStack64;
  int local_3c;
  undefined local_38 [12];
  int iStack44;
  int local_28;
  void *local_24;
  int local_20;
  undefined4 local_1c;
  undefined local_18;
  uint local_14;
  uint local_10;
  void *local_c;
  char local_8;
  char local_7;
  char local_6;
  char local_5;
  
  local_c = this;
  DVar4 = GetCurrentThreadId();
  if (DVar4 != DAT_00456e98) {
    DVar5 = 0;
    LOCK();
    DVar3 = DVar4;
    if (DAT_00456e98 != 0) {
      DVar5 = DAT_00456e98;
      DVar3 = DAT_00456e98;
    }
    DAT_00456e98 = DVar3;
    if (DVar5 != 0) {
      CThreadFastMutex::Lock((CThreadFastMutex *)&DAT_00456e98,DVar4,0);
      goto LAB_0041fad2;
    }
  }
  _DAT_00456e9c = _DAT_00456e9c + 1;
LAB_0041fad2:
  puVar15 = (uint *)0x0;
  local_20 = param_2;
  _local_4c = ZEXT816(0);
  local_3c = 0;
  _local_38 = ZEXT816(0);
  local_28 = 0;
  local_1c = 0;
  local_18 = 0;
  PTR_DAT_00447580 = (undefined *)param_1;
  DAT_00447588 = 0;
  local_24 = this;
  do {
    local_8 = '\x01';
    pbVar6 = FUN_004204a0(&local_24,&local_5,&local_6);
    if (((*(char *)(param_2 + 0x14) != '\0') || (pbVar6 == (byte *)0x0)) ||
       ((local_5 == '\0' && (*pbVar6 == 0)))) break;
    uVar7 = FUN_0041e3a0(pbVar6,(byte *)"#include");
    puVar16 = (uint *)this;
    if (uVar7 == 0) {
      pcVar8 = FUN_004204a0(&local_24,&local_5,&local_6);
      if ((pcVar8 == (char *)0x0) || (*pcVar8 == '\0')) {
        FUN_00420e80(&DAT_00447480,"#include is NULL ");
      }
      else {
        puVar13 = local_4c;
LAB_0041fb72:
        FUN_00420270(param_1,pcVar8,param_3,param_4,puVar13,param_5);
      }
    }
    else {
      uVar7 = FUN_0041e3a0(pbVar6,(byte *)"#base");
      if (uVar7 == 0) {
        pcVar8 = FUN_004204a0(&local_24,&local_5,&local_6);
        if ((pcVar8 != (char *)0x0) && (*pcVar8 != '\0')) {
          puVar13 = local_38;
          goto LAB_0041fb72;
        }
        FUN_00420e80(&DAT_00447480,"#base is NULL ");
      }
      else {
        if ((uint *)this == (uint *)0x0) {
          piVar11 = (int *)KeyValuesSystem();
          this = (void *)(**(code **)(*piVar11 + 4))(0x24);
          if ((uint *)this == (uint *)0x0) {
            this = (uint *)0x0;
          }
          else {
                    // WARNING: Load size is inaccurate
            *(uint *)this = *this & 0xff000000;
            *(undefined *)((int)this + 3) = 0;
            *(uint *)((int)this + 0x10) = 0;
            *(uint *)((int)this + 0x18) = 0;
            *(uint *)((int)this + 0x14) = 0;
            *(uint *)((int)this + 0x1c) = 0;
            *(uint *)((int)this + 4) = 0;
            *(uint *)((int)this + 8) = 0;
            *(uint *)((int)this + 0xc) = 0;
            local_10 = 0xffffffff;
            piVar11 = (int *)KeyValuesSystem();
            uVar9 = (**(code **)(*piVar11 + 0x24))(&local_10,pbVar6,1);
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
            *(uint *)this = *this ^ (*this ^ local_10) & 0xffffff;
            *(char *)((int)this + 3) = (char)uVar9;
            *(short *)((int)this + 0x12) = (short)((uint)uVar9 >> 8);
          }
          *(bool *)((int)this + 0x11) = *(char *)((int)local_c + 0x11) != '\0';
          if (puVar15 != (uint *)0x0) {
            puVar15[5] = (uint)this;
          }
        }
        else {
          local_14 = 0xffffffff;
          piVar11 = (int *)KeyValuesSystem();
          uVar9 = (**(code **)(*piVar11 + 0x24))(&local_14,pbVar6,1);
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
          *(uint *)this = *this ^ (*this ^ local_14) & 0xffffff;
          *(char *)((int)this + 3) = (char)uVar9;
          *(short *)((int)this + 0x12) = (short)((uint)uVar9 >> 8);
        }
        piVar11 = (int *)FUN_004204a0(&local_24,&local_5,&local_6);
        if (local_6 != '\0') {
          local_7 = '\0';
          uVar7 = FUN_00424bf0(&DAT_00456ea0,&local_7,piVar11,param_5,(int *)0x0);
          if ((char)uVar7 == '\0') {
            FUN_00420e80(&DAT_00447480,"KV Conditional Evaluation Error");
          }
          local_8 = local_7;
          piVar11 = (int *)FUN_004204a0(&local_24,&local_5,&local_6);
        }
        if (((piVar11 == (int *)0x0) || (*(char *)piVar11 != '{')) || (local_5 != '\0')) {
          FUN_00420e80(&DAT_00447480,"LoadFromBuffer: missing {");
        }
        else {
          FUN_00420690(this,param_1,&local_24,param_5,param_3,param_4);
        }
        if (local_8 == '\0') {
          if (puVar15 != (uint *)0x0) {
            puVar15[5] = 0;
          }
          uVar7 = *(uint *)((int)this + 0x18);
          if (uVar7 != 0) {
            FUN_00420d90(uVar7);
            piVar11 = (int *)KeyValuesSystem();
            (**(code **)(*piVar11 + 8))(uVar7);
          }
          *(uint *)((int)this + 0x18) = 0;
          *(undefined *)((int)this + 0x10) = 0;
          puVar16 = (uint *)this;
        }
        else {
          puVar16 = (uint *)0x0;
          puVar15 = (uint *)this;
        }
      }
    }
    this = puVar16;
  } while (*(char *)(param_2 + 0x14) == '\0');
  iVar14 = 0;
  if (0 < iStack64) {
    do {
      iVar1 = iVar14 * 4;
      pvVar2 = local_c;
      do {
        pvVar10 = pvVar2;
        if (pvVar10 == (void *)0x0) break;
        pvVar2 = *(void **)((int)pvVar10 + 0x14);
      } while (*(void **)((int)pvVar10 + 0x14) != (void *)0x0);
      iVar14 = iVar14 + 1;
      *(undefined4 *)((int)pvVar10 + 0x14) = *(undefined4 *)(local_4c._0_4_ + iVar1);
    } while (iVar14 < iStack64);
  }
  while (iStack64 = iStack64 + -1, 0 < iStack64) {
    iVar14 = *(int *)(local_4c._0_4_ + iStack64 * 4);
    if (iVar14 != 0) {
      FUN_00420d90(iVar14);
      piVar11 = (int *)KeyValuesSystem();
      (**(code **)(*piVar11 + 8))(iVar14);
    }
  }
  local_38._0_4_ = FUN_00420160(local_c,(int *)local_38);
  iStack44 = iStack44 + -1;
  if (-1 < iStack44) {
    do {
      iVar14 = *(int *)(local_38._0_4_ + iStack44 * 4);
      if (iVar14 != 0) {
        FUN_00420d90(iVar14);
        piVar11 = (int *)KeyValuesSystem();
        (**(code **)(*piVar11 + 8))(iVar14);
      }
      iStack44 = iStack44 + -1;
    } while (-1 < iStack44);
  }
  pDVar12 = (DWORD *)(local_38._0_4_ & 0xffffff00);
  bVar17 = DAT_0044758c == '\0';
  PTR_DAT_00447580 = &DAT_0043b3d2;
  DAT_00447588 = 0;
  DAT_0044758c = '\0';
  _local_38 = ZEXT1216(local_38);
  if ((undefined  [12])0xffffffffffffffff < local_38) {
    if (local_38._0_4_ != 0) {
      pDVar12 = (DWORD *)(**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_38._0_4_);
      _local_38 = _local_38 & (undefined  [16])0xffffffff00000000;
    }
    local_38._0_8_ = (ulonglong)local_38._0_4_;
  }
  local_28 = local_38._0_4_;
  if ((undefined  [12])0xffffffffffffffff < local_38) {
    if (local_38._0_4_ != 0) {
      pDVar12 = (DWORD *)(**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_38._0_4_);
      _local_38 = _local_38 & (undefined  [16])0xffffffff00000000;
    }
    local_38._0_8_ = (ulonglong)local_38._0_4_;
  }
  _local_4c = ZEXT1216(local_4c);
  iVar14 = local_4c._0_4_;
  if ((undefined  [12])0xffffffffffffffff < local_4c) {
    if (local_4c._0_4_ != 0) {
      pDVar12 = (DWORD *)(**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(local_4c._0_4_);
      iVar14 = 0;
      _local_4c = _local_4c & (undefined  [16])0xffffffff00000000;
    }
  }
  if (((undefined  [12])0xffffffffffffffff < local_4c) && (iVar14 != 0)) {
    local_3c = iVar14;
    pDVar12 = (DWORD *)(**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(iVar14);
  }
  _DAT_00456e9c = _DAT_00456e9c + -1;
  if (_DAT_00456e9c == 0) {
    pDVar12 = &DAT_00456e98;
    DAT_00456e98 = 0;
  }
  return (uint)pDVar12 & 0xffffff00 | (uint)bVar17;
}



uint FUN_0041ff00(int *param_1,uint *param_2,undefined4 param_3,int *param_4)

{
  int *piVar1;
  uint *puVar2;
  char cVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  int iVar7;
  uint uVar8;
  
  puVar2 = param_2;
  piVar1 = param_1;
  iVar4 = (**(code **)(*param_1 + 0x24))(param_2,&DAT_0043b404,param_3);
  if (iVar4 == 0) {
    return 0;
  }
  (**(code **)(*piVar1 + 0x14))(iVar4,0);
  PTR_s_unknown_00447478 = (undefined *)puVar2;
  iVar5 = (**(code **)(*piVar1 + 0x38))(iVar4);
  uVar8 = iVar5 + 2;
  cVar3 = (**(code **)(piVar1[-1] + 0x158))(iVar4,&param_1,0,0);
  if (cVar3 != '\0') {
    uVar8 = iVar5 + 1 + (int)param_1 & ~((int)param_1 - 1U);
  }
  piVar6 = (int *)(**(code **)(piVar1[-1] + 0x15c))(iVar4,uVar8,0);
  param_1 = piVar6;
  iVar7 = (**(code **)(piVar1[-1] + 0x124))(piVar6,uVar8,iVar5,iVar4);
  param_1 = (int *)((uint)param_1 & 0xffffff | (uint)(iVar7 != 0) << 0x18);
  (**(code **)(*piVar1 + 0x28))(iVar4);
  if (param_1._3_1_ != '\0') {
    *(undefined2 *)((int)piVar6 + iVar5) = 0;
    uVar8 = FUN_0041f9d0(param_2,(char *)piVar6,(int)piVar1,param_3,param_4);
    param_1 = (int *)((uint)param_1 & 0xffffff | uVar8 << 0x18);
  }
  uVar8 = (**(code **)(piVar1[-1] + 0x160))(piVar6);
  return uVar8 & 0xffffff00 | (uint)param_1 >> 0x18;
}



uint * __fastcall FUN_0041fff0(int param_1)

{
  longlong lVar1;
  int *piVar2;
  void *pvVar3;
  undefined4 uVar4;
  uint *puVar5;
  int iVar6;
  uint *puVar7;
  uint *puVar8;
  
  piVar2 = (int *)KeyValuesSystem();
  pvVar3 = (void *)(**(code **)(*piVar2 + 4))(0x24);
  if (pvVar3 == (void *)0x0) {
    puVar5 = (uint *)0x0;
  }
  else if (param_1 == 0) {
    puVar5 = FUN_0041eb80(pvVar3,&DAT_0043b3d2);
  }
  else {
    piVar2 = (int *)KeyValuesSystem();
    uVar4 = (**(code **)(*piVar2 + 0x10))
                      ((uint)CONCAT21(*(undefined2 *)(param_1 + 0x12),*(undefined *)(param_1 + 3)));
    puVar5 = FUN_0041eb80(pvVar3,uVar4);
  }
  *(undefined *)(puVar5 + 4) = *(undefined *)(param_1 + 0x10);
  switch(*(undefined *)(param_1 + 0x10)) {
  case 1:
    if (*(char **)(param_1 + 4) != (char *)0x0) {
      iVar6 = FUN_0041e440(*(char **)(param_1 + 4));
      pvVar3 = (void *)FUN_00403c30(iVar6 + 1U);
      puVar5[1] = (uint)pvVar3;
      FID_conflict__memcpy(pvVar3,*(void **)(param_1 + 4),iVar6 + 1U);
    }
    break;
  case 2:
  case 3:
  case 4:
    puVar5[3] = *(uint *)(param_1 + 0xc);
    break;
  case 5:
    if (*(short **)(param_1 + 8) != (short *)0x0) {
      iVar6 = FUN_0041e470(*(short **)(param_1 + 8));
      lVar1 = (ulonglong)(iVar6 + 1) * 2;
      pvVar3 = (void *)FUN_00403c30(-(uint)((int)((ulonglong)lVar1 >> 0x20) != 0) | (uint)lVar1);
      puVar5[2] = (uint)pvVar3;
      FID_conflict__memcpy(pvVar3,*(void **)(param_1 + 8),iVar6 * 2 + 2);
    }
    break;
  case 6:
    *(undefined *)(puVar5 + 3) = *(undefined *)(param_1 + 0xc);
    *(undefined *)((int)puVar5 + 0xd) = *(undefined *)(param_1 + 0xd);
    *(undefined *)((int)puVar5 + 0xe) = *(undefined *)(param_1 + 0xe);
    *(undefined *)((int)puVar5 + 0xf) = *(undefined *)(param_1 + 0xf);
    break;
  case 7:
    pvVar3 = (void *)FUN_00403c30(8);
    puVar5[1] = (uint)pvVar3;
    FID_conflict__memcpy(pvVar3,*(void **)(param_1 + 4),8);
  }
  iVar6 = *(int *)(param_1 + 0x18);
  if (iVar6 != 0) {
    puVar8 = (uint *)0x0;
    do {
      puVar7 = FUN_0041fff0(iVar6);
      if (puVar8 == (uint *)0x0) {
        puVar5[6] = (uint)puVar7;
      }
      else {
        puVar8[5] = (uint)puVar7;
      }
      puVar7[5] = 0;
      iVar6 = *(int *)(iVar6 + 0x14);
      puVar8 = puVar7;
    } while (iVar6 != 0);
  }
  return puVar5;
}



void __thiscall FUN_00420160(void *this,int *param_1)

{
  int iVar1;
  int iVar2;
  void *this_00;
  int iVar3;
  int *piVar4;
  byte *pbVar5;
  byte *pbVar6;
  uint uVar7;
  uint *puVar8;
  code *pcVar9;
  int iVar10;
  int local_10;
  
  local_10 = 0;
  iVar1 = param_1[3];
  pcVar9 = KeyValuesSystem_exref;
  if (0 < iVar1) {
    do {
      for (iVar2 = *(int *)(*(int *)(*param_1 + local_10 * 4) + 0x18); iVar2 != 0;
          iVar2 = *(int *)(iVar2 + 0x14)) {
        for (this_00 = *(void **)((int)this + 0x18); this_00 != (void *)0x0;
            this_00 = *(void **)((int)this_00 + 0x14)) {
          piVar4 = (int *)(*pcVar9)();
          pbVar5 = (byte *)(**(code **)(*piVar4 + 0x10))
                                     ((uint)CONCAT21(*(undefined2 *)((int)this_00 + 0x12),
                                                     *(undefined *)((int)this_00 + 3)));
          if (iVar2 == 0) {
            pbVar6 = &DAT_0043b3d2;
          }
          else {
            piVar4 = (int *)KeyValuesSystem();
            pbVar6 = (byte *)(**(code **)(*piVar4 + 0x10))
                                       ((uint)CONCAT21(*(undefined2 *)(iVar2 + 0x12),
                                                       *(undefined *)(iVar2 + 3)));
          }
          uVar7 = FUN_0041e340(pbVar6,pbVar5);
          if (uVar7 == 0) {
            FUN_00420cb0(this_00,iVar2);
            goto LAB_00420242;
          }
          pcVar9 = KeyValuesSystem_exref;
        }
        puVar8 = FUN_0041fff0(iVar2);
        iVar10 = *(int *)((int)this + 0x18);
        if (*(int *)((int)this + 0x18) == 0) {
          *(uint **)((int)this + 0x18) = puVar8;
        }
        else {
          do {
            iVar3 = *(int *)(iVar10 + 0x14);
            if (iVar3 == 0) break;
            iVar10 = iVar3;
          } while (iVar3 != 0);
          *(uint **)(iVar10 + 0x14) = puVar8;
        }
LAB_00420242:
        pcVar9 = KeyValuesSystem_exref;
      }
      local_10 = local_10 + 1;
    } while (local_10 < iVar1);
  }
  return;
}



void FUN_00420270(uint *param_1,char *param_2,int param_3,undefined4 param_4,void *param_5,
                 int *param_6)

{
  char cVar1;
  int iVar2;
  int *piVar3;
  void *this;
  uint *puVar4;
  uint uVar5;
  uint local_208 [128];
  int local_8;
  
  if (param_3 != 0) {
    FUN_0041e1d0((char *)local_208,(int)param_1,0x200);
    for (iVar2 = FUN_0041e440((char *)local_208);
        ((0 < iVar2 && (cVar1 = *(char *)((int)local_208 + iVar2 + -1), cVar1 != '\\')) &&
        (cVar1 != '/')); iVar2 = iVar2 + -1) {
      *(undefined *)((int)local_208 + iVar2 + -1) = 0;
    }
    FUN_0041e120((char *)local_208,param_2,0x200,0xffffffff);
    piVar3 = (int *)KeyValuesSystem();
    this = (void *)(**(code **)(*piVar3 + 4))(0x24);
    if (this == (void *)0x0) {
      puVar4 = (uint *)0x0;
    }
    else {
      puVar4 = FUN_0041eb80(this,local_208);
    }
    *(bool *)((int)puVar4 + 0x11) = *(char *)(local_8 + 0x11) != '\0';
    param_1 = puVar4;
    uVar5 = FUN_0041ff00((int *)param_3,local_208,param_4,param_6);
    if ((char)uVar5 != '\0') {
      FUN_004058e0(param_5,&param_1);
      return;
    }
    DevMsg("KeyValues::ParseIncludedKeys: Couldn\'t load included keyvalue file %s\n",local_208);
    FUN_00420d90((int)puVar4);
    piVar3 = (int *)KeyValuesSystem();
    (**(code **)(*piVar3 + 8))(puVar4);
  }
  return;
}



void __fastcall FUN_00420390(int *param_1)

{
  param_1[3] = 0;
  if (-1 < param_1[2]) {
    if (*param_1 != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*param_1);
      *param_1 = 0;
    }
    param_1[1] = 0;
  }
  param_1[4] = *param_1;
  return;
}



void __thiscall FUN_004203d0(void *this,undefined4 param_1)

{
  if ((*(byte *)((int)this + 0x15) & 1) == 0) {
    FUN_0041e9f0(this,param_1);
    return;
  }
  FUN_004230e0(this,&DAT_0043e854);
  return;
}



void __thiscall FUN_00420410(void *this,undefined4 param_1,undefined4 param_2)

{
  undefined4 unaff_EBP;
  
  if ((*(byte *)((int)this + 0x15) & 1) == 0) {
    FUN_0041ea60(this,CONCAT44(param_2,param_1),unaff_EBP);
    return;
  }
  FUN_004230e0(this,&DAT_0043e2c8);
  return;
}



void __thiscall FUN_00420440(void *this,undefined4 param_1)

{
  undefined4 uVar1;
  
  if ((*(byte *)((int)this + 0x15) & 1) == 0) {
    uVar1 = FUN_00422570(this,1);
    if ((char)uVar1 != '\0') {
                    // WARNING: Load size is inaccurate
      *(undefined *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this) =
           (undefined)param_1;
      *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 1;
      FUN_004223b0(this,*(int *)((int)this + 0x10));
      return;
    }
  }
  else {
    FUN_004230e0(this,&DAT_0043d458);
  }
  return;
}



undefined1 * __thiscall FUN_004204a0(void *this,undefined *param_1,undefined *param_2)

{
  char cVar1;
  bool bVar2;
  bool bVar3;
  uint uVar4;
  char *pcVar5;
  undefined4 *puVar6;
  int iVar7;
  
  if (*(char *)((int)this + 0xc) != '\0') {
    *(undefined *)((int)this + 0xc) = 0;
    *param_1 = *(undefined *)((int)this + 0xd);
    *param_2 = *(undefined *)((int)this + 0xe);
    return &DAT_0044ee90;
  }
  *param_1 = 0;
  *(undefined *)((int)this + 0xd) = 0;
  *param_2 = 0;
  *(undefined *)((int)this + 0xe) = 0;
  if (*(char *)(*(int **)((int)this + 4) + 5) == '\0') {
    FUN_00422690(*(int **)((int)this + 4));
    cVar1 = *(char *)(*(int *)((int)this + 4) + 0x14);
    while (cVar1 == '\0') {
      uVar4 = FUN_00422610(*(int **)((int)this + 4));
      if ((char)uVar4 == '\0') {
        pcVar5 = (char *)FUN_00422d70(*(int **)((int)this + 4),1,0);
        if (pcVar5 == (char *)0x0) {
          return (undefined1 *)0x0;
        }
        cVar1 = *pcVar5;
        if (cVar1 == '\"') {
          *param_1 = 1;
                    // WARNING: Load size is inaccurate
          *(undefined *)((int)this + 0xd) = 1;
          if (*(char *)(*this + 0x11) == '\0') {
            puVar6 = (undefined4 *)FUN_00422b00();
          }
          else {
            puVar6 = (undefined4 *)FUN_00422840();
          }
          FUN_004228f0(*(void **)((int)this + 4),puVar6,&DAT_0044ee90,0x8000);
          *(int *)((int)this + 8) = *(int *)((int)this + 8) + 1;
          return &DAT_0044ee90;
        }
        if (((cVar1 == '{') || (cVar1 == '}')) || (cVar1 == '=')) {
          DAT_0044ee91 = 0;
          DAT_0044ee90 = cVar1;
          FUN_0041f000(*(uint **)((int)this + 4));
          *(int *)((int)this + 8) = *(int *)((int)this + 8) + 1;
          return &DAT_0044ee90;
        }
        iVar7 = 0;
        bVar3 = false;
        bVar2 = false;
        pcVar5 = (char *)FUN_00422d70(*(void **)((int)this + 4),1,0);
        goto joined_r0x00420598;
      }
      FUN_00422690(*(int **)((int)this + 4));
      cVar1 = *(char *)(*(int *)((int)this + 4) + 0x14);
    }
  }
  return (undefined1 *)0x0;
joined_r0x00420598:
  if (pcVar5 == (char *)0x0) {
LAB_00420650:
    (&DAT_0044ee90)[iVar7] = 0;
    *(int *)((int)this + 8) = *(int *)((int)this + 8) + 1;
    return &DAT_0044ee90;
  }
  cVar1 = *pcVar5;
  if (((cVar1 == '\0') || (cVar1 == '\"')) || ((cVar1 == '{' || ((cVar1 == '}' || (cVar1 == '=')))))
     ) goto LAB_00420650;
  if (cVar1 == '[') {
    bVar2 = true;
  }
  if ((cVar1 == ']') && (bVar2)) {
    bVar2 = false;
    *param_2 = 1;
    *(undefined *)((int)this + 0xe) = 1;
  }
  cVar1 = *pcVar5;
  if (('\b' < cVar1) && (((cVar1 < '\x0e' || (cVar1 == ' ')) && (!bVar2)))) goto LAB_00420650;
  if (iVar7 < 0x7fff) {
    (&DAT_0044ee90)[iVar7] = cVar1;
    iVar7 = iVar7 + 1;
  }
  else if (!bVar3) {
    bVar3 = true;
    FUN_00420e80(&DAT_00447480," ReadToken overflow");
  }
  FUN_0041f000(*(uint **)((int)this + 4));
  pcVar5 = (char *)FUN_00422d70(*(void **)((int)this + 4),1,0);
  goto joined_r0x00420598;
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall
FUN_00420690(void *this,uint *param_1,void *param_2,int *param_3,int param_4,undefined4 param_5)

{
  bool bVar1;
  char cVar2;
  byte *pbVar3;
  char *pcVar4;
  int *piVar5;
  uint *puVar6;
  int *piVar7;
  uint uVar8;
  uint *puVar9;
  void *pvVar10;
  uint uVar11;
  int iVar12;
  uint uVar13;
  int iVar14;
  size_t _Size;
  float10 fVar15;
  undefined local_48 [16];
  undefined4 local_38;
  undefined8 local_34;
  byte *local_2c;
  byte *local_28;
  uint *local_24;
  uint local_20;
  int local_1c;
  int *local_18;
  byte *local_14;
  uint *local_10;
  void *local_c;
  char local_7;
  char local_6;
  char local_5;
  
  if (this == (void *)0x0) {
    uVar11 = 0xffffffff;
  }
  else {
    uVar11 = (uint)CONCAT21(*(undefined2 *)((int)this + 0x12),*(undefined *)((int)this + 3));
  }
  if (DAT_00447584 < 0x40) {
    *(uint *)(&DAT_00447480 + DAT_00447584 * 4) = uVar11;
  }
  iVar12 = DAT_00447584 + 1;
  if (DAT_00447588 <= DAT_00447584) {
    DAT_00447588 = DAT_00447584;
  }
  local_c = this;
  if (100 < DAT_00447584) {
    DAT_00447584 = iVar12;
    FUN_00420e80(&DAT_00447480,"RecursiveLoadFromBuffer:  recursion overflow");
    DAT_00447584 = DAT_00447584 + -1;
    return;
  }
  if (iVar12 < 0x40) {
    DAT_00447584 = iVar12;
    *(undefined4 *)(&DAT_00447480 + iVar12 * 4) = 0xffffffff;
    iVar12 = DAT_00447584;
  }
  DAT_00447584 = iVar12 + 1;
  if (DAT_00447588 <= iVar12) {
    DAT_00447588 = iVar12;
  }
  local_10 = *(uint **)((int)this + 0x18);
  if (local_10 != (uint *)0x0) {
    for (puVar6 = (uint *)local_10[5]; puVar6 != (uint *)0x0; puVar6 = (uint *)puVar6[5]) {
      local_10 = puVar6;
    }
  }
  local_7 = '\x01';
  local_1c = iVar12;
  pbVar3 = FUN_004204a0(param_2,&local_6,&local_5);
  do {
    if (pbVar3 == (byte *)0x0) {
      pcVar4 = "RecursiveLoadFromBuffer:  got EOF instead of keyname";
LAB_00420c6d:
      FUN_00420e80(&DAT_00447480,pcVar4);
LAB_00420c77:
      DAT_00447584 = DAT_00447584 + -2;
      return;
    }
    if (*pbVar3 == 0) {
      pcVar4 = "RecursiveLoadFromBuffer:  got empty keyname";
      goto LAB_00420c6d;
    }
    if ((*pbVar3 == 0x7d) && (local_6 == '\0')) goto LAB_00420c77;
    uVar11 = FUN_0041e3a0(pbVar3,(byte *)"#include");
    if (uVar11 == 0) {
      pcVar4 = FUN_004204a0(param_2,&local_6,&local_5);
      if ((pcVar4 == (char *)0x0) || (*pcVar4 == '\0')) {
        FUN_00420e80(&DAT_00447480,"#include is NULL ");
        puVar9 = local_10;
      }
      else if (param_4 == 0) {
        FUN_00420e80(&DAT_00447480,"trying to #include but filesystem is NULL ");
        puVar9 = local_10;
      }
      else {
        local_38 = 0;
        local_48 = ZEXT816(0);
        FUN_00420270(param_1,pcVar4,param_4,param_5,local_48,param_3);
        iVar14 = 0;
        if (0 < local_48._12_4_) {
          do {
            FUN_0041ec40(local_c,*(undefined4 *)(local_48._0_4_ + iVar14 * 4));
            iVar14 = iVar14 + 1;
            iVar12 = local_1c;
          } while (iVar14 < local_48._12_4_);
        }
        FUN_00420390((int *)local_48);
LAB_0042083b:
        this = local_c;
        local_10 = (uint *)FUN_0041efe0((int)local_c);
        FUN_0040a350((int *)local_48);
        puVar9 = local_10;
      }
    }
    else {
      uVar11 = FUN_0041e3a0(pbVar3,(byte *)"#base");
      if (uVar11 != 0) {
        puVar6 = FUN_0041ec70(this,pbVar3,(int)local_10);
        if (puVar6 == (uint *)0x0) {
          uVar11 = 0xffffffff;
        }
        else {
          uVar11 = (uint)CONCAT21(*(undefined2 *)((int)puVar6 + 0x12),
                                  *(undefined *)((int)puVar6 + 3));
        }
        if (iVar12 < 0x40) {
          *(uint *)(&DAT_00447480 + iVar12 * 4) = uVar11;
        }
        piVar5 = (int *)FUN_004204a0(param_2,&local_6,&local_5);
        if (local_5 == '\0') {
LAB_004209a9:
          local_18 = piVar5;
          if (piVar5 != (int *)0x0) {
            if (((*(char *)piVar5 == '=') && (local_6 == '\0')) &&
               (piVar5 = (int *)FUN_004204a0(param_2,&local_6,&local_5), local_18 = piVar5,
               local_5 != '\0')) {
              if (piVar5 != (int *)0x0) {
                uVar11 = FUN_0041edc0((uint3)local_c,piVar5,param_3);
                local_7 = (char)uVar11;
                piVar5 = (int *)FUN_004204a0(param_2,&local_6,&local_5);
              }
              local_18 = piVar5;
              if (local_7 != '\0') {
                if (puVar6 == (uint *)0x0) {
                  uVar11 = 0xffffffff;
                }
                else {
                  uVar11 = *puVar6 & 0xffffff;
                }
                local_24 = FUN_0041efb0(local_c,uVar11);
                if ((local_24 != (uint *)0x0) && (local_24 != puVar6)) {
                  FUN_00420e20(local_c,(int)local_24);
                  FUN_00421390((int)local_24);
                }
              }
            }
            if (piVar5 != (int *)0x0) {
              if ((*(char *)piVar5 == '}') && (local_6 == '\0')) {
                pcVar4 = "RecursiveLoadFromBuffer:  got } in key";
                goto LAB_00420c6d;
              }
              if ((*(char *)piVar5 == '{') && (local_6 == '\0')) {
                if (iVar12 < 0x40) {
                  *(undefined4 *)(&DAT_00447480 + iVar12 * 4) = 0xffffffff;
                }
                FUN_00420690(puVar6,param_1,param_2,param_3,param_4,param_5);
                pvVar10 = local_c;
                cVar2 = local_7;
              }
              else {
                if (local_5 != '\0') {
                  pcVar4 = "RecursiveLoadFromBuffer:  got conditional between key and value";
                  goto LAB_00420c6d;
                }
                if (puVar6[1] != 0) {
                  FUN_00403c10(puVar6[1]);
                  puVar6[1] = 0;
                }
                local_24 = (uint *)FUN_0041e440((char *)piVar5);
                local_14 = (byte *)((int)local_24 + (int)piVar5);
                local_20 = FUN_00428173((byte *)piVar5,&local_2c,10);
                fVar15 = (float10)FUN_00428578((byte *)piVar5,&local_28);
                local_34 = local_34 & 0xffffffff | (ulonglong)(uint)(float)fVar15 << 0x20;
                if (((local_20 == 0x7fffffff) || (local_20 == 0x80000000)) &&
                   (piVar7 = __errno(), *piVar7 == 0x22)) {
                  bVar1 = true;
                }
                else {
                  bVar1 = false;
                }
                iVar14 = local_1c;
                if (*(char *)piVar5 == '\0') {
LAB_00420bb9:
                  *(undefined *)(puVar6 + 4) = 1;
                }
                else if (((local_24 == (uint *)0x12) && (*(char *)piVar5 == '0')) &&
                        (*(char *)((int)piVar5 + 1) == 'x')) {
                  iVar12 = 2;
                  local_34 = 0;
                  local_34._0_4_ = 0;
                  local_14 = (byte *)0x0;
                  do {
                    cVar2 = *(char *)(iVar12 + (int)piVar5);
                    if (cVar2 < 'a') {
                      if ('@' < cVar2) {
                        cVar2 = cVar2 + -7;
                      }
                    }
                    else {
                      cVar2 = cVar2 + -0x27;
                    }
                    uVar11 = (uint)local_34 >> 0x1c;
                    uVar8 = (int)cVar2 - 0x30;
                    uVar13 = (uint)local_34 * 0x10;
                    local_34._0_4_ = uVar8 + uVar13;
                    local_14 = (byte *)(((int)uVar8 >> 0x1f) + ((int)local_14 << 4 | uVar11) +
                                       (uint)CARRY4(uVar8,uVar13));
                    iVar12 = iVar12 + 1;
                  } while (iVar12 < 0x12);
                  local_20 = (uint)local_34;
                  puVar9 = (uint *)FUN_00403c30(8);
                  puVar6[1] = (uint)puVar9;
                  *puVar9 = local_20;
                  puVar9[1] = (uint)local_14;
                  *(undefined *)(puVar6 + 4) = 7;
                  iVar12 = iVar14;
                }
                else if ((local_2c < local_28) && (local_28 == local_14)) {
                  puVar6[3] = local_34._4_4_;
                  *(undefined *)(puVar6 + 4) = 3;
                }
                else {
                  if ((local_2c != local_14) || (bVar1)) goto LAB_00420bb9;
                  puVar6[3] = local_20;
                  *(undefined *)(puVar6 + 4) = 2;
                }
                if (*(char *)(puVar6 + 4) == '\x01') {
                  _Size = (int)local_24 + 1;
                  pvVar10 = (void *)FUN_00403c30(_Size);
                  puVar6[1] = (uint)pvVar10;
                  FID_conflict__memcpy(pvVar10,local_18,_Size);
                }
                piVar5 = (int *)FUN_004204a0(param_2,&local_6,&local_5);
                pvVar10 = local_c;
                if (local_5 == '\0') {
                  FUN_00420f20((int)param_2);
                  pvVar10 = local_c;
                  cVar2 = local_7;
                }
                else {
                  uVar11 = FUN_0041edc0((uint3)local_c,piVar5,param_3);
                  cVar2 = (char)uVar11;
                }
              }
              this = local_c;
              puVar9 = puVar6;
              if (cVar2 == '\0') {
                if (local_10 == (uint *)0x0) {
                  *(undefined4 *)((int)pvVar10 + 0x18) = 0;
                }
                else {
                  local_10[5] = 0;
                }
                puVar9 = local_10;
                if (puVar6 != (uint *)0x0) {
                  FUN_00420d90((int)puVar6);
                  piVar5 = (int *)KeyValuesSystem();
                  (**(code **)(*piVar5 + 8))(puVar6);
                  this = local_c;
                  puVar9 = local_10;
                }
              }
              goto LAB_00420c4a;
            }
          }
        }
        else {
          local_18 = piVar5;
          if (piVar5 != (int *)0x0) {
            uVar11 = FUN_0041edc0((uint3)local_c,piVar5,param_3);
            local_7 = (char)uVar11;
            piVar5 = (int *)FUN_004204a0(param_2,&local_6,&local_5);
            goto LAB_004209a9;
          }
        }
        pcVar4 = "RecursiveLoadFromBuffer:  got NULL key";
        goto LAB_00420c6d;
      }
      pcVar4 = FUN_004204a0(param_2,&local_6,&local_5);
      if ((pcVar4 == (char *)0x0) || (*pcVar4 == '\0')) {
        FUN_00420e80(&DAT_00447480,"#base is NULL ");
        puVar9 = local_10;
      }
      else {
        if (param_4 != 0) {
          local_38 = 0;
          local_48 = ZEXT816(0);
          FUN_00420270(param_1,pcVar4,param_4,param_5,local_48,param_3);
          FUN_00420160(this,(int *)local_48);
          local_48._12_4_ = local_48._12_4_ + -1;
          if (-1 < local_48._12_4_) {
            do {
              iVar14 = *(int *)(local_48._0_4_ + local_48._12_4_ * 4);
              if (iVar14 != 0) {
                FUN_00420d90(iVar14);
                piVar5 = (int *)KeyValuesSystem();
                (**(code **)(*piVar5 + 8))(iVar14);
              }
              local_48._12_4_ = local_48._12_4_ + -1;
            } while (-1 < local_48._12_4_);
          }
          goto LAB_0042083b;
        }
        FUN_00420e80(&DAT_00447480,"trying to #include but filesystem is NULL ");
        puVar9 = local_10;
      }
    }
LAB_00420c4a:
    local_10 = puVar9;
    local_7 = '\x01';
    pbVar3 = FUN_004204a0(param_2,&local_6,&local_5);
  } while( true );
}



void __thiscall FUN_00420cb0(void *this,int param_1)

{
  int iVar1;
  void *this_00;
  int iVar2;
  int *piVar3;
  byte *pbVar4;
  byte *pbVar5;
  uint uVar6;
  uint *puVar7;
  int iVar8;
  
  iVar1 = *(int *)(param_1 + 0x18);
  do {
    if (iVar1 == 0) {
      return;
    }
    for (this_00 = *(void **)((int)this + 0x18); this_00 != (void *)0x0;
        this_00 = *(void **)((int)this_00 + 0x14)) {
      piVar3 = (int *)KeyValuesSystem();
      pbVar4 = (byte *)(**(code **)(*piVar3 + 0x10))
                                 ((uint)CONCAT21(*(undefined2 *)((int)this_00 + 0x12),
                                                 *(undefined *)((int)this_00 + 3)));
      if (iVar1 == 0) {
        pbVar5 = &DAT_0043b3d2;
      }
      else {
        piVar3 = (int *)KeyValuesSystem();
        pbVar5 = (byte *)(**(code **)(*piVar3 + 0x10))
                                   ((uint)CONCAT21(*(undefined2 *)(iVar1 + 0x12),
                                                   *(undefined *)(iVar1 + 3)));
      }
      uVar6 = FUN_0041e340(pbVar5,pbVar4);
      if (uVar6 == 0) {
        FUN_00420cb0(this_00,iVar1);
        goto LAB_00420d72;
      }
    }
    puVar7 = FUN_0041fff0(iVar1);
    iVar8 = *(int *)((int)this + 0x18);
    if (*(int *)((int)this + 0x18) == 0) {
      *(uint **)((int)this + 0x18) = puVar7;
    }
    else {
      do {
        iVar2 = *(int *)(iVar8 + 0x14);
        if (iVar2 == 0) break;
        iVar8 = iVar2;
      } while (iVar2 != 0);
      *(uint **)(iVar8 + 0x14) = puVar7;
    }
LAB_00420d72:
    iVar1 = *(int *)(iVar1 + 0x14);
  } while( true );
}



void __fastcall FUN_00420d90(int param_1)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  
  iVar2 = *(int *)(param_1 + 0x18);
  while (iVar2 != 0) {
    iVar1 = *(int *)(iVar2 + 0x14);
    *(undefined4 *)(iVar2 + 0x14) = 0;
    FUN_00420d90(iVar2);
    piVar3 = (int *)KeyValuesSystem();
    (**(code **)(*piVar3 + 8))(iVar2);
    iVar2 = iVar1;
  }
  iVar2 = *(int *)(param_1 + 0x14);
  while ((iVar2 != 0 && (iVar2 != param_1))) {
    iVar1 = *(int *)(iVar2 + 0x14);
    *(undefined4 *)(iVar2 + 0x14) = 0;
    FUN_00420d90(iVar2);
    piVar3 = (int *)KeyValuesSystem();
    (**(code **)(*piVar3 + 8))(iVar2);
    iVar2 = iVar1;
  }
  FUN_00403c10(*(undefined4 *)(param_1 + 4));
  *(undefined4 *)(param_1 + 4) = 0;
  FUN_00403c10(*(undefined4 *)(param_1 + 8));
  *(undefined4 *)(param_1 + 8) = 0;
  return;
}



void __thiscall FUN_00420e20(void *this,int param_1)

{
  int iVar1;
  int iVar2;
  
  if (param_1 != 0) {
    iVar2 = *(int *)((int)this + 0x18);
    if (iVar2 == param_1) {
      *(undefined4 *)((int)this + 0x18) = *(undefined4 *)(param_1 + 0x14);
      *(undefined4 *)(param_1 + 0x14) = 0;
      return;
    }
    if (*(int *)(iVar2 + 0x14) != 0) {
      while (iVar1 = *(int *)(iVar2 + 0x14), iVar1 != param_1) {
        iVar2 = iVar1;
        if (*(int *)(iVar1 + 0x14) == 0) {
          *(undefined4 *)(param_1 + 0x14) = 0;
          return;
        }
      }
      *(undefined4 *)(iVar2 + 0x14) = *(undefined4 *)(param_1 + 0x14);
    }
    *(undefined4 *)(param_1 + 0x14) = 0;
  }
  return;
}



void __thiscall FUN_00420e80(void *this,undefined4 param_1)

{
  int *piVar1;
  undefined4 uVar2;
  code *pcVar3;
  int iVar4;
  char *pcVar5;
  
  Warning("KeyValues Error: %s in file %s\n",param_1,*(undefined4 *)((int)this + 0x100));
  iVar4 = 0;
  pcVar3 = KeyValuesSystem_exref;
  if (0 < *(int *)((int)this + 0x108)) {
    do {
      if ((iVar4 < 0x40) && (*(int *)((int)this + iVar4 * 4) != -1)) {
        if (iVar4 < *(int *)((int)this + 0x104)) {
          piVar1 = (int *)(*pcVar3)();
          uVar2 = (**(code **)(*piVar1 + 0x10))(*(undefined4 *)((int)this + iVar4 * 4));
          pcVar5 = "%s, ";
        }
        else {
          piVar1 = (int *)(*pcVar3)();
          uVar2 = (**(code **)(*piVar1 + 0x10))(*(undefined4 *)((int)this + iVar4 * 4));
          pcVar5 = "(*%s*), ";
        }
        Warning(pcVar5,uVar2);
        pcVar3 = KeyValuesSystem_exref;
      }
      iVar4 = iVar4 + 1;
    } while (iVar4 < *(int *)((int)this + 0x108));
  }
  Warning(&DAT_0043bbc0);
  *(undefined *)((int)this + 0x10c) = 1;
  return;
}



void __fastcall FUN_00420f20(int param_1)

{
  undefined4 local_8;
  
  if (*(char *)(param_1 + 0xc) != '\0') {
    local_8 = 0xff0000ff;
    ConColorMsg((Color *)&local_8,
                "CKeyValuesTokenReader::SeekBackOneToken: It is only possible to seek back one token at a time"
               );
    Plat_ExitProcess(1);
  }
  if (*(int *)(param_1 + 8) == 0) {
    local_8 = 0xff0000ff;
    ConColorMsg((Color *)&local_8,"CkeyValuesTokenReader::SeekBackOneToken: No tokens read yet");
    Plat_ExitProcess(1);
  }
  *(undefined *)(param_1 + 0xc) = 1;
  return;
}



void __thiscall FUN_00420f80(void *this,char *param_1,uint param_2)

{
  uint *puVar1;
  
  puVar1 = FUN_0041ee00(this,param_1,1);
  if (puVar1 != (uint *)0x0) {
    puVar1[3] = param_2;
    *(undefined *)(puVar1 + 4) = 3;
  }
  return;
}



void __thiscall FUN_00420fb0(void *this,char *param_1,uint param_2)

{
  uint *puVar1;
  
  puVar1 = FUN_0041ee00(this,param_1,1);
  if (puVar1 != (uint *)0x0) {
    puVar1[3] = param_2;
    *(undefined *)(puVar1 + 4) = 2;
  }
  return;
}



void __thiscall FUN_00420fd0(void *this,char *param_1,char *param_2)

{
  uint *puVar1;
  int iVar2;
  void *_Dst;
  char *_Src;
  
  puVar1 = FUN_0041ee00(this,param_1,1);
  if (puVar1 != (uint *)0x0) {
    FUN_00403c10(puVar1[1]);
    FUN_00403c10(puVar1[2]);
    puVar1[2] = 0;
    _Src = "";
    if (param_2 != (char *)0x0) {
      _Src = param_2;
    }
    iVar2 = FUN_0041e440(_Src);
    _Dst = (void *)FUN_00403c30(iVar2 + 1U);
    puVar1[1] = (uint)_Dst;
    FID_conflict__memcpy(_Dst,_Src,iVar2 + 1U);
    *(undefined *)(puVar1 + 4) = 1;
  }
  return;
}



void __thiscall FUN_00421040(void *this,char *param_1,undefined4 param_2,undefined4 param_3)

{
  uint *puVar1;
  undefined4 *puVar2;
  
  puVar1 = FUN_0041ee00(this,param_1,1);
  if (puVar1 != (uint *)0x0) {
    FUN_00403c10(puVar1[1]);
    FUN_00403c10(puVar1[2]);
    puVar1[2] = 0;
    puVar2 = (undefined4 *)FUN_00403c30(8);
    puVar1[1] = (uint)puVar2;
    *puVar2 = param_2;
    puVar2[1] = param_3;
    *(undefined *)(puVar1 + 4) = 7;
  }
  return;
}



void __thiscall FUN_00421090(void *this,char *param_1,short *param_2)

{
  longlong lVar1;
  uint *puVar2;
  int iVar3;
  void *_Dst;
  short *_Src;
  
  puVar2 = FUN_0041ee00(this,param_1,1);
  if (puVar2 != (uint *)0x0) {
    FUN_00403c10(puVar2[2]);
    FUN_00403c10(puVar2[1]);
    puVar2[1] = 0;
    _Src = (short *)&DAT_0043e864;
    if (param_2 != (short *)0x0) {
      _Src = param_2;
    }
    iVar3 = FUN_0041e470(_Src);
    lVar1 = (ulonglong)(iVar3 + 1) * 2;
    _Dst = (void *)FUN_00403c30(-(uint)((int)((ulonglong)lVar1 >> 0x20) != 0) | (uint)lVar1);
    puVar2[2] = (uint)_Dst;
    FID_conflict__memcpy(_Dst,_Src,iVar3 * 2 + 2);
    *(undefined *)(puVar2 + 4) = 5;
  }
  return;
}



uint __thiscall FUN_00421110(void *this,int *param_1)

{
  undefined uVar1;
  uint in_EAX;
  undefined4 uVar2;
  int *piVar3;
  char *pcVar4;
  int iVar5;
  int iVar6;
  byte *pbVar7;
  
  if (((*(byte *)((int)param_1 + 0x15) & 1) != 0) || (*(char *)(param_1 + 5) != '\0')) {
    return in_EAX & 0xffffff00;
  }
  if (this != (void *)0x0) {
    do {
      uVar1 = *(undefined *)((int)this + 0x10);
      if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
        uVar2 = FUN_00422570(param_1,1);
        if ((char)uVar2 != '\0') {
          *(undefined *)((*param_1 - param_1[8]) + param_1[4]) = uVar1;
          param_1[4] = param_1[4] + 1;
          FUN_004223b0(param_1,param_1[4]);
        }
      }
      else {
        FUN_004230e0(param_1,&DAT_0043d458);
      }
      piVar3 = (int *)KeyValuesSystem();
      pcVar4 = (char *)(**(code **)(*piVar3 + 0x10))
                                 ((uint)CONCAT21(*(undefined2 *)((int)this + 0x12),
                                                 *(undefined *)((int)this + 3)));
      FUN_00423270(param_1,pcVar4);
      switch(*(undefined *)((int)this + 0x10)) {
      case 0:
        FUN_00421110(*(void **)((int)this + 0x18),param_1);
        break;
      case 1:
        pcVar4 = *(char **)((int)this + 4);
        if ((pcVar4 == (char *)0x0) || (*pcVar4 == '\0')) {
          FUN_00423270(param_1,"");
        }
        else {
          FUN_00423270(param_1,pcVar4);
        }
        break;
      case 2:
        if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
          FUN_0040ee60(param_1,*(undefined4 *)((int)this + 0xc));
        }
        else {
          pbVar7 = &DAT_0043d454;
LAB_004212fb:
          FUN_004230e0(param_1,pbVar7);
        }
        break;
      case 3:
        FUN_004203d0(param_1,*(undefined4 *)((int)this + 0xc));
        break;
      case 4:
        if ((*(byte *)((int)param_1 + 0x15) & 1) != 0) {
          pbVar7 = &DAT_0043e85c;
          goto LAB_004212fb;
        }
        FUN_0040ee60(param_1,*(undefined4 *)((int)this + 0xc));
        break;
      case 5:
        if (*(short **)((int)this + 8) == (short *)0x0) {
          iVar5 = 0;
        }
        else {
          iVar5 = FUN_0041e470(*(short **)((int)this + 8));
        }
        if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
          FUN_0040edf0(param_1,(short)iVar5);
        }
        else {
          FUN_004230e0(param_1,&DAT_0043e858);
        }
        iVar6 = 0;
        if (0 < iVar5) {
          do {
            if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
              FUN_0040edf0(param_1,*(undefined2 *)(*(int *)((int)this + 8) + iVar6 * 2));
            }
            else {
              FUN_004230e0(param_1,&DAT_0043e858);
            }
            iVar6 = iVar6 + 1;
          } while (iVar6 < iVar5);
        }
        break;
      case 6:
        FUN_00420440(param_1,(uint)*(byte *)((int)this + 0xc));
        FUN_00420440(param_1,(uint)*(byte *)((int)this + 0xd));
        FUN_00420440(param_1,(uint)*(byte *)((int)this + 0xe));
        FUN_00420440(param_1,(uint)*(byte *)((int)this + 0xf));
        break;
      case 7:
        FUN_00420410(param_1,**(undefined4 **)((int)this + 4),(*(undefined4 **)((int)this + 4))[1]);
      }
      this = *(void **)((int)this + 0x14);
    } while (this != (void *)0x0);
  }
  if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
    uVar2 = FUN_00422570(param_1,1);
    if ((char)uVar2 != '\0') {
      *(undefined *)((*param_1 - param_1[8]) + param_1[4]) = 0xb;
      param_1[4] = param_1[4] + 1;
      FUN_004223b0(param_1,param_1[4]);
      return (uint)(*(char *)(param_1 + 5) == '\0');
    }
  }
  else {
    FUN_004230e0(param_1,&DAT_0043d458);
  }
  return (uint)(*(char *)(param_1 + 5) == '\0');
}



void __fastcall FUN_00421390(int param_1)

{
  int *piVar1;
  
  if (param_1 != 0) {
    FUN_00420d90(param_1);
    piVar1 = (int *)KeyValuesSystem();
    (**(code **)(*piVar1 + 8))(param_1);
  }
  return;
}



void __cdecl FUN_004213b0(char *param_1,uint param_2,int param_3)

{
  FUN_00429365(param_1,param_2,param_3,0,&stack0x00000010);
  return;
}



undefined4 * __thiscall FUN_004213d0(void *this,char **param_1)

{
  char *pcVar1;
  int iVar2;
  
  *(undefined4 *)this = 0;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  if (param_1[3] == (char *)0x0) {
    iVar2 = FUN_0041e440("");
    FUN_00421570(this,&DAT_0043b3d2,(void *)(iVar2 + 1));
    return (undefined4 *)this;
  }
  pcVar1 = *param_1;
  if (pcVar1 != (char *)0x0) {
    iVar2 = FUN_0041e440(pcVar1);
    FUN_00421570(this,pcVar1,(void *)(iVar2 + 1));
    return (undefined4 *)this;
  }
  FUN_00421570(this,(void *)0x0,(void *)0x0);
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_00421450(void *this,char *param_1)

{
  int iVar1;
  
  *(undefined4 *)this = 0;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined4 *)((int)this + 0xc) = 0;
  if (param_1 != (char *)0x0) {
    iVar1 = FUN_0041e440(param_1);
    FUN_00421570(this,param_1,(void *)(iVar1 + 1));
    return (undefined4 *)this;
  }
  FUN_00421570(this,(void *)0x0,(void *)0x0);
  return (undefined4 *)this;
}



undefined4 * __fastcall FUN_004214b0(undefined4 *param_1)

{
  *param_1 = 0;
  param_1[2] = 0;
  param_1[1] = 0;
  param_1[3] = 0;
  return param_1;
}



void * __thiscall FUN_004214d0(void *this,char *param_1)

{
  int iVar1;
  
  if (param_1 != (char *)0x0) {
    iVar1 = FUN_0041e440(param_1);
    FUN_00421570(this,param_1,(void *)(iVar1 + 1));
    return this;
  }
  FUN_00421570(this,(void *)0x0,(void *)0x0);
  return this;
}



undefined4 __fastcall FUN_00421510(undefined4 *param_1)

{
  if (param_1[3] == 0) {
    param_1[3] = 1;
    if ((int)param_1[1] < 1) {
      FUN_00401b50(param_1,1 - param_1[1]);
      if ((int)param_1[1] < 1) {
        param_1[3] = param_1[1];
      }
    }
    *(undefined *)*param_1 = 0;
  }
  return *param_1;
}



undefined1 * __fastcall FUN_00421550(undefined4 *param_1)

{
  undefined1 *puVar1;
  
  puVar1 = &DAT_0043b3d2;
  if (param_1[3] != 0) {
    puVar1 = (undefined1 *)*param_1;
  }
  return puVar1;
}



int __fastcall FUN_00421560(int param_1)

{
  if (*(int *)(param_1 + 0xc) != 0) {
    return *(int *)(param_1 + 0xc) + -1;
  }
  return 0;
}



void __thiscall FUN_00421570(void *this,void *param_1,void *param_2)

{
  size_t _Size;
  void *_Dst;
  
  if (param_1 == (void *)0x0) {
    param_2 = (void *)0x0;
  }
  *(void **)((int)this + 0xc) = param_2;
  if (*(int *)((int)this + 4) < (int)param_2) {
    FUN_00401b50(this,(int)param_2 - *(int *)((int)this + 4));
    if (*(int *)((int)this + 4) < (int)param_2) {
      *(int *)((int)this + 0xc) = *(int *)((int)this + 4);
    }
  }
  _Size = *(size_t *)((int)this + 0xc);
  if (_Size != 0) {
                    // WARNING: Load size is inaccurate
    _Dst = *this;
    if ((_Dst < (void *)((int)param_1 + (int)param_2)) && (param_1 < (void *)((int)_Dst + _Size))) {
      FID_conflict__memcpy(_Dst,param_1,_Size);
      return;
    }
    FID_conflict__memcpy(_Dst,param_1,_Size);
  }
  return;
}



void __thiscall FUN_004215e0(void *this,char *param_1)

{
  int iVar1;
  
  if (param_1 != (char *)0x0) {
    iVar1 = FUN_0041e440(param_1);
    FUN_00421570(this,param_1,(void *)(iVar1 + 1));
    return;
  }
  FUN_00421570(this,(void *)0x0,(void *)0x0);
  return;
}



undefined4 * __thiscall FUN_00421620(void *this,undefined4 param_1)

{
  undefined **ppuVar1;
  undefined **ppuVar2;
  
  if (DAT_0044a7e8 == (int *)0x0) {
    ppuVar1 = &PTR_vftable_004475a0;
  }
  else {
    ppuVar1 = (undefined **)(**(code **)(*DAT_0044a7e8 + 0x44))(param_1);
    if (ppuVar1 == (undefined **)0x0) {
      ppuVar1 = (undefined **)0x0;
      goto LAB_00421648;
    }
  }
  ppuVar1 = ppuVar1 + 6;
LAB_00421648:
  ppuVar2 = &PTR_vftable_004475b8;
  if (ppuVar1 != (undefined **)0x0) {
    ppuVar2 = ppuVar1;
  }
  *(undefined ***)this = ppuVar2;
  if (ppuVar2 == (undefined **)0x0) {
    ppuVar1 = (undefined **)0x0;
  }
  else {
    ppuVar1 = ppuVar2 + -6;
  }
  *(undefined ***)((int)this + 4) = ppuVar1;
  if ((ppuVar2 == &PTR_vftable_004475b8) && ((DAT_0044a7e8 != (int *)0x0 || (DAT_004475f8 != '\0')))
     ) {
    Warning("ConVarRef %s doesn\'t point to an existing ConVar\n",param_1);
    DAT_004475f8 = '\0';
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_004216a0(void *this,byte param_1)

{
  *(undefined ***)this = ConVar::vftable;
  *(undefined ***)((int)this + 0x18) = ConVar::vftable;
  if (*(int *)((int)this + 0x24) != 0) {
    FUN_00403c10(*(int *)((int)this + 0x24));
    *(undefined4 *)((int)this + 0x24) = 0;
  }
  FUN_0040a350((int *)((int)this + 0x44));
  *(undefined ***)this = ConCommandBase::vftable;
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



undefined4 * __thiscall FUN_004216f0(void *this,byte param_1)

{
  *(undefined ***)this = ConCommandBase::vftable;
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return (undefined4 *)this;
}



void __thiscall FUN_00421720(void *this,uint param_1)

{
  *(uint *)((int)this + 0x14) = (*(uint *)((int)this + 0x14) | param_1) & 0xfffffffd;
  return;
}



void __thiscall FUN_00421740(void *this,uint param_1)

{
  uint *puVar1;
  
  puVar1 = (uint *)(*(int *)((int)this + 0x1c) + 0x14);
  *puVar1 = *puVar1 | param_1;
  puVar1 = (uint *)(*(int *)((int)this + 0x1c) + 0x14);
  *puVar1 = *puVar1 & 0xfffffffd;
  return;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe
// WARNING: Unable to track spacebase fully for stack

void __thiscall FUN_00421760(void *this,undefined4 param_1,undefined4 param_2)

{
  uint uVar1;
  int iVar2;
  code *pcVar3;
  int iVar4;
  int iVar5;
  undefined4 uVar6;
  undefined *puVar7;
  undefined *puVar8;
  undefined *puVar9;
  char *apcStack36 [2];
  void *apvStack28 [2];
  uint uStack20;
  
  uStack20 = 0x421776;
  iVar4 = -(*(int *)((int)this + 0x28) + 0xfU & 0xfffffff0);
  *(int *)((int)&uStack20 + iVar4) = *(int *)((int)this + 0x28);
  *(undefined4 *)((int)apvStack28 + iVar4 + 4) = *(undefined4 *)((int)this + 0x24);
  *(undefined **)((int)apvStack28 + iVar4) = &stack0xfffffff0 + iVar4;
  *(undefined4 *)((int)apcStack36 + iVar4 + 4) = 0x421782;
  FID_conflict__memcpy
            (*(void **)((int)apvStack28 + iVar4),*(void **)((int)apvStack28 + iVar4 + 4),
             *(size_t *)((int)&uStack20 + iVar4));
  *(undefined4 *)((int)apcStack36 + iVar4 + 4) = param_1;
  *(undefined4 *)((int)apcStack36 + iVar4) = 0x42178a;
  iVar5 = FUN_0041e440(*(char **)((int)apcStack36 + iVar4 + 4));
  puVar9 = &stack0xfffffff0 + iVar4;
  uVar1 = iVar5 + 1;
  if (*(uint *)((int)this + 0x28) <= uVar1 && uVar1 != *(uint *)((int)this + 0x28)) {
    if (*(int *)((int)this + 0x24) != 0) {
      *(int *)((int)&uStack20 + iVar4) = *(int *)((int)this + 0x24);
      *(undefined4 *)((int)apvStack28 + iVar4 + 4) = 0x4217a2;
      FUN_00403c10(*(undefined4 *)((int)&uStack20 + iVar4));
    }
    puVar9 = &stack0xfffffff0 + iVar4;
    *(uint *)((int)&uStack20 + iVar4) = uVar1;
    *(undefined4 *)((int)apvStack28 + iVar4 + 4) = 0x4217ab;
    uVar6 = FUN_00403c30(*(undefined4 *)((int)&uStack20 + iVar4));
    *(undefined4 *)((int)this + 0x24) = uVar6;
    *(uint *)((int)this + 0x28) = uVar1;
  }
  *(uint *)(puVar9 + -4) = uVar1;
  *(undefined4 *)(puVar9 + -8) = param_1;
  *(undefined4 *)(puVar9 + -0xc) = *(undefined4 *)((int)this + 0x24);
  *(undefined4 *)(puVar9 + -0x10) = 0x4217c0;
  FID_conflict__memcpy(*(void **)(puVar9 + -0xc),*(void **)(puVar9 + -8),*(size_t *)(puVar9 + -4));
  iVar5 = 0;
  puVar7 = puVar9;
  if (0 < *(int *)((int)this + 0x50)) {
    do {
      iVar2 = *(int *)((int)this + 0x44);
      *(int *)(puVar7 + -4) = (int)this + 0x18;
      *(undefined4 *)(puVar7 + -4) = param_2;
      pcVar3 = *(code **)(iVar2 + iVar5 * 4);
      *(undefined **)(puVar7 + -8) = &stack0xfffffff0 + iVar4;
      *(int *)(puVar7 + -0xc) = (int)this + 0x18;
      puVar8 = puVar7 + -0x10;
      *(undefined4 *)(puVar7 + -0x10) = 0x4217e5;
      (*pcVar3)();
      iVar5 = iVar5 + 1;
      puVar9 = puVar8 + 0xc;
      puVar7 = puVar8 + 0xc;
    } while (iVar5 < *(int *)((int)this + 0x50));
  }
  if (DAT_0044a7e8 != (int *)0x0) {
    iVar5 = *DAT_0044a7e8;
    *(int **)(puVar9 + -4) = DAT_0044a7e8;
    *(undefined4 *)(puVar9 + -4) = param_2;
    *(undefined **)(puVar9 + -8) = &stack0xfffffff0 + iVar4;
    *(void **)(puVar9 + -0xc) = this;
    pcVar3 = *(code **)(iVar5 + 0x58);
    *(undefined4 *)(puVar9 + -0x10) = 0x42180d;
    (*pcVar3)();
  }
  return;
}



undefined4 __thiscall FUN_00421820(void *this,float *param_1)

{
  float fVar1;
  uint3 uVar2;
  
  uVar2 = (uint3)((uint)param_1 >> 8);
  if ((*(char *)((int)this + 0x34) != '\0') &&
     (fVar1 = *(float *)((int)this + 0x38), *param_1 <= fVar1 && fVar1 != *param_1)) {
    *param_1 = fVar1;
    return CONCAT31(uVar2,1);
  }
  if ((*(char *)((int)this + 0x3c) != '\0') && (*(float *)((int)this + 0x40) < *param_1)) {
    *param_1 = *(float *)((int)this + 0x40);
    return CONCAT31(uVar2,1);
  }
  return (uint)uVar2 << 8;
}



void __cdecl FUN_00421870(undefined4 param_1,undefined **param_2)

{
  int *piVar1;
  int *piVar2;
  
  if ((DAT_0044a7e8 != (int *)0x0) && (DAT_00457064 == '\0')) {
    DAT_00457060 = param_1;
    DAT_00457064 = '\x01';
    DAT_00447590 = (**(code **)(*DAT_0044a7e8 + 0x24))();
    DAT_00456f54 = &PTR_vftable_00447594;
    piVar2 = DAT_00456f50;
    if (param_2 != (undefined **)0x0) {
      DAT_00456f54 = param_2;
    }
    while (piVar2 != (int *)0x0) {
      piVar1 = (int *)piVar2[1];
      (**(code **)(*piVar2 + 0xc))(DAT_00457060);
      (**(code **)(*piVar2 + 0x2c))();
      piVar2 = piVar1;
    }
    (**(code **)(*DAT_0044a7e8 + 0x80))();
    (**(code **)(*DAT_0044a7e8 + 0xa4))();
    DAT_00456f50 = (int *)0x0;
  }
  return;
}



void FUN_00421910(void)

{
  if ((DAT_0044a7e8 != (int *)0x0) && (DAT_00457064 != '\0')) {
    (**(code **)(*DAT_0044a7e8 + 0x84))(DAT_00447590);
    (**(code **)(*DAT_0044a7e8 + 0x30))(DAT_00447590);
    DAT_00447590 = 0xffffffff;
    DAT_00457064 = '\0';
  }
  return;
}



void __thiscall FUN_00421960(void *this,int param_1,undefined *param_2,uint param_3)

{
  undefined *puVar1;
  
  puVar1 = PTR_DAT_00447598;
  *(int *)((int)this + 0xc) = param_1;
  *(undefined *)((int)this + 8) = 0;
  if (param_2 != (undefined *)0x0) {
    puVar1 = param_2;
  }
  *(undefined **)((int)this + 0x10) = puVar1;
  *(uint *)((int)this + 0x14) = param_3 & 0xfffffffd;
  if ((param_3 & 1) == 0) {
    *(void **)((int)this + 4) = DAT_00456f50;
    DAT_00456f50 = this;
  }
  else {
    *(undefined4 *)((int)this + 4) = 0;
  }
  if (DAT_00456f54 != 0) {
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x2c))();
  }
  return;
}



void __thiscall
FUN_004219c0(void *this,int param_1,undefined *param_2,uint param_3,undefined *param_4,
            undefined param_5,int param_6,undefined param_7,int param_8,int param_9)

{
  char *pcVar1;
  char cVar2;
  void *_Dst;
  uint uVar3;
  char *pcVar4;
  undefined *puVar5;
  float10 fVar6;
  
  puVar5 = PTR_DAT_0044759c;
  if (param_2 != (undefined *)0x0) {
    puVar5 = param_2;
  }
  *(undefined *)((int)this + 0x34) = param_5;
  *(int *)((int)this + 0x38) = param_6;
  *(void **)((int)this + 0x1c) = this;
  *(undefined **)((int)this + 0x20) = puVar5;
  *(undefined *)((int)this + 0x3c) = param_7;
  *(int *)((int)this + 0x40) = param_8;
  if (param_9 != 0) {
    FUN_004058e0((void *)((int)this + 0x44),&param_9);
  }
  pcVar4 = *(char **)((int)this + 0x20);
  pcVar1 = pcVar4 + 1;
  do {
    cVar2 = *pcVar4;
    pcVar4 = pcVar4 + 1;
  } while (cVar2 != '\0');
  *(char **)((int)this + 0x28) = pcVar4 + (1 - (int)pcVar1);
  _Dst = (void *)FUN_00403c30(pcVar4 + (1 - (int)pcVar1));
  *(void **)((int)this + 0x24) = _Dst;
  FID_conflict__memcpy(_Dst,*(void **)((int)this + 0x20),*(size_t *)((int)this + 0x28));
  uVar3 = FUN_00421bb0(this,*(char **)((int)this + 0x24));
  if ((char)uVar3 == '\0') {
    fVar6 = FUN_0041db20(*(char **)((int)this + 0x24));
    *(float *)((int)this + 0x2c) = (float)fVar6;
    if ((*(uint *)((int)this + 0x2c) & 0x7f800000) == 0x7f800000) {
      Warning("ConVar(%s) defined with infinite float value (%s)\n",param_1,
              *(undefined4 *)((int)this + 0x24));
      *(undefined4 *)((int)this + 0x2c) = 0x7f7fffff;
    }
    *(int *)((int)this + 0x30) = (int)fVar6;
  }
  puVar5 = PTR_DAT_00447598;
  if (param_4 != (undefined *)0x0) {
    puVar5 = param_4;
  }
  *(int *)((int)this + 0xc) = param_1;
  *(undefined *)((int)this + 8) = 0;
  *(undefined **)((int)this + 0x10) = puVar5;
  *(uint *)((int)this + 0x14) = param_3 & 0xfffffffd;
  if ((param_3 & 1) == 0) {
    *(void **)((int)this + 4) = DAT_00456f50;
    DAT_00456f50 = this;
  }
  else {
    *(undefined4 *)((int)this + 4) = 0;
  }
  if (DAT_00456f54 != 0) {
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x2c))();
  }
  return;
}



undefined4 __fastcall FUN_00421af0(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 4) + 0xc);
}



undefined4 FUN_00421b00(void)

{
  return DAT_00447590;
}



undefined4 __fastcall FUN_00421b10(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x1c) + 0x14);
}



float10 __fastcall FUN_00421b20(int *param_1)

{
  float10 fVar1;
  
  if ((int *)param_1[7] == param_1) {
    return (float10)(float)param_1[0xb];
  }
                    // WARNING: Could not recover jumptable at 0x00421b32. Too many branches
                    // WARNING: Treating indirect jump as call
  fVar1 = (float10)(**(code **)(*(int *)param_1[7] + 0x30))();
  return fVar1;
}



undefined4 __fastcall FUN_00421b40(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x1c) + 0x10);
}



int __fastcall FUN_00421b50(int *param_1)

{
  int iVar1;
  
  if ((int *)param_1[7] == param_1) {
    return param_1[0xc];
  }
                    // WARNING: Could not recover jumptable at 0x00421b5f. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = (**(code **)(*(int *)param_1[7] + 0x34))();
  return iVar1;
}



undefined1 * FUN_00421b70(void)

{
  return &DAT_0043b3d2;
}



void FUN_00421b76(void)

{
  FUN_00421b70();
  return;
}



undefined4 __fastcall FUN_00421b80(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x1c) + 0xc);
}



void __fastcall FUN_00421b87(int param_1)

{
  FUN_00421b80(param_1 + -0x18);
  return;
}



void __fastcall FUN_00421b90(undefined4 param_1)

{
  if (DAT_00456f54 != (undefined4 *)0x0) {
    (**(code **)*DAT_00456f54)(param_1);
  }
  return;
}



uint __thiscall FUN_00421bb0(void *this,char *param_1)

{
  uint uVar1;
  uint local_18;
  uint local_14;
  uint local_10;
  uint local_c;
  
  uVar1 = FUN_004285ff(param_1,(int)"%i %i %i %i");
  if ((int)uVar1 < 3) {
    return uVar1 & 0xffffff00;
  }
  if (uVar1 == 3) {
    local_c = 0xff;
  }
  if ((((local_18 < 0x100) && (local_14 < 0x100)) && (local_10 < 0x100)) && (local_c < 0x100)) {
    *(char *)((int)this + 0x30) = (char)local_18;
    *(char *)((int)this + 0x33) = (char)local_c;
    *(char *)((int)this + 0x31) = (char)local_14;
    *(char *)((int)this + 0x32) = (char)local_10;
    *(float *)((int)this + 0x2c) = (float)*(int *)((int)this + 0x30);
    return local_c & 0xffffff00 | 1;
  }
  return local_c & 0xffffff00;
}



// WARNING: Could not reconcile some variable overlaps

void __thiscall FUN_00421c50(void *this,uint param_1)

{
  uint local_8;
  
  local_8._0_3_ = (uint3)param_1 & 0xff | (uint3)((param_1 >> 8 & 0xff) << 8);
                    // WARNING: Load size is inaccurate
  local_8._0_3_ = (uint3)local_8 | (uint3)(byte)(param_1 >> 0x10) << 0x10;
  local_8 = param_1 & 0xff000000 | (uint)(uint3)local_8;
  (**(code **)(*this + 0x40))(local_8);
  return;
}



void __thiscall FUN_00421c80(void *this,float param_1)

{
  char cVar1;
  char local_28 [32];
  undefined4 local_8;
  
  if (param_1 != *(float *)((int)this + 0x2c)) {
                    // WARNING: Load size is inaccurate
    cVar1 = (**(code **)(*this + 8))(0xb00000);
    if ((cVar1 != '\0') && (DAT_0044a7e8 != (int *)0x0)) {
      cVar1 = (**(code **)(*DAT_0044a7e8 + 0x90))();
      if (cVar1 == '\0') {
        (**(code **)(*DAT_0044a7e8 + 0x94))();
        return;
      }
    }
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x48))(&param_1);
    local_8 = *(undefined4 *)((int)this + 0x2c);
    *(float *)((int)this + 0x2c) = param_1;
    *(int *)((int)this + 0x30) = (int)param_1;
    if ((*(uint *)((int)this + 0x14) & 0x1000) == 0) {
      FUN_0041dfc0(local_28,0x20,&DAT_0043e854);
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x4c))(local_28,local_8);
    }
  }
  return;
}



void __thiscall FUN_00421d50(void *this,float param_1)

{
  char cVar1;
  float fVar2;
  char local_28 [32];
  undefined4 local_8;
  
  fVar2 = param_1;
  if (param_1 != *(float *)((int)this + 0x30)) {
                    // WARNING: Load size is inaccurate
    cVar1 = (**(code **)(*this + 8))(0xb00000);
    if ((cVar1 != '\0') && (DAT_0044a7e8 != (int *)0x0)) {
      cVar1 = (**(code **)(*DAT_0044a7e8 + 0x90))();
      if (cVar1 == '\0') {
        (**(code **)(*DAT_0044a7e8 + 0x98))(this,fVar2);
        return;
      }
    }
                    // WARNING: Load size is inaccurate
    param_1 = (float)(int)fVar2;
    cVar1 = (**(code **)(*this + 0x48))(&param_1);
    if (cVar1 != '\0') {
      fVar2 = (float)(int)param_1;
    }
    local_8 = *(undefined4 *)((int)this + 0x2c);
    *(float *)((int)this + 0x2c) = param_1;
    *(float *)((int)this + 0x30) = fVar2;
    if ((*(uint *)((int)this + 0x14) & 0x1000) == 0) {
      FUN_0041dfc0(local_28,0x20,&DAT_0043d454);
                    // WARNING: Load size is inaccurate
      (**(code **)(*this + 0x4c))(local_28,local_8);
    }
  }
  return;
}



void __thiscall FUN_00421e20(void *this,char *param_1)

{
  char *pcVar1;
  char cVar2;
  uint uVar3;
  undefined4 uVar4;
  char *pcVar5;
  float10 fVar6;
  char local_30 [32];
  double local_10;
  undefined4 local_8;
  
                    // WARNING: Load size is inaccurate
  cVar2 = (**(code **)(*this + 8))(0xb00000);
  if ((cVar2 != '\0') && (DAT_0044a7e8 != (int *)0x0)) {
    cVar2 = (**(code **)(*DAT_0044a7e8 + 0x90))();
    if (cVar2 == '\0') {
      (**(code **)(*DAT_0044a7e8 + 0x9c))(this,param_1);
      return;
    }
  }
  local_8 = *(undefined4 *)((int)this + 0x2c);
  pcVar5 = "";
  if (param_1 != (char *)0x0) {
    pcVar5 = param_1;
  }
  uVar3 = FUN_00421bb0(this,param_1);
  if ((char)uVar3 == '\0') {
    fVar6 = FUN_0041db20(param_1);
    local_10 = (double)fVar6;
    pcVar1 = (char *)(float)fVar6;
    if (((uint)(char *)(float)fVar6 & 0x7f800000) == 0x7f800000) {
                    // WARNING: Load size is inaccurate
      uVar4 = (**(code **)(*this + 0x18))();
      Warning("Warning:  %s = \'%s\' is infinite, clamping value.\n",uVar4,param_1);
      param_1 = (char *)0x7f7fffff;
      local_10 = 3.402823466385289e+38;
      pcVar1 = param_1;
    }
    param_1 = pcVar1;
                    // WARNING: Load size is inaccurate
    cVar2 = (**(code **)(*this + 0x48))();
    if (cVar2 != '\0') {
      local_10 = (double)(float)param_1;
      FUN_0041dfc0(local_30,0x20,&DAT_0043e854);
      pcVar5 = local_30;
    }
    *(char **)((int)this + 0x2c) = param_1;
    *(int *)((int)this + 0x30) = (int)local_10;
  }
  if ((*(uint *)((int)this + 0x14) & 0x1000) == 0) {
                    // WARNING: Load size is inaccurate
    (**(code **)(*this + 0x4c))(pcVar5,local_8);
  }
  return;
}



undefined FUN_00421f70(void)

{
  return 0;
}



void FUN_00421f75(void)

{
  FUN_00421f70();
  return;
}



uint __thiscall FUN_00421f80(void *this,uint param_1)

{
  return param_1 & 0xffffff00 | (uint)((*(uint *)((int)this + 0x14) & param_1) != 0);
}



uint __thiscall FUN_00421f90(void *this,uint param_1)

{
  return param_1 & 0xffffff00 |
         (uint)((*(uint *)(*(int *)((int)this + 0x1c) + 0x14) & param_1) != 0);
}



void __thiscall FUN_00421fa3(void *this,uint param_1)

{
  FUN_00421f90((void *)((int)this + -0x18),param_1);
  return;
}



undefined __fastcall FUN_00421fb0(int param_1)

{
  return *(undefined *)(param_1 + 8);
}



uint __fastcall FUN_00421fc0(int param_1)

{
  return *(uint *)(param_1 + 0x1c) & 0xffffff00 | (uint)*(byte *)(*(uint *)(param_1 + 0x1c) + 8);
}



bool __fastcall FUN_00421fd0(int *param_1)

{
  return (undefined **)*param_1 != &PTR_vftable_004475b8;
}



undefined4 FUN_00421fe0(undefined4 param_1)

{
  undefined4 uVar1;
  
  uVar1 = (**(code **)(*DAT_0044a7e8 + 0x28))(param_1);
  return CONCAT31((int3)((uint)uVar1 >> 8),1);
}



void __thiscall FUN_00422000(void *this,uint param_1)

{
  *(uint *)((int)this + 0x14) = *(uint *)((int)this + 0x14) & ~param_1;
  return;
}



void FUN_00422010(void)

{
  return;
}



void __fastcall FUN_00422020(int param_1)

{
                    // WARNING: Could not recover jumptable at 0x00422029. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(**(int **)(param_1 + 4) + 0x40))();
  return;
}



void __thiscall FUN_00422030(void *this,undefined4 param_1)

{
  (**(code **)(**(int **)((int)this + 4) + 0x3c))(param_1);
  return;
}



void __fastcall FUN_00422050(int param_1)

{
                    // WARNING: Could not recover jumptable at 0x00422059. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(code **)(**(int **)(param_1 + 4) + 0x38))();
  return;
}



void __thiscall FUN_00422060(void *this,undefined4 param_1)

{
  (**(code **)(**(int **)((int)this + 4) + 0x44))(param_1);
  return;
}



void __cdecl thunk_FUN_0041cbe0(undefined **param_1,int param_2)

{
  int *piVar1;
  bool bVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  uint uVar6;
  int iStack12;
  code **ppcStack8;
  
  if (DAT_0044aa6c < 0) {
    Error("APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %d!\n",DAT_0044aa6c);
    DAT_0044aa68 = DAT_0044aa68 + 1;
    return;
  }
  if (DAT_0044aa6c == 0) {
    ppcStack8 = (code **)param_2;
    if (0 < param_2) {
      do {
        uVar6 = 0;
        do {
          piVar1 = *(int **)((int)&PTR_DAT_004472dc + uVar6);
          if (*piVar1 == 0) {
            iVar4 = (*(code *)*param_1)(*(undefined4 *)((int)&PTR_s_VEngineCvar007_004472d8 + uVar6)
                                        ,0);
            *piVar1 = iVar4;
            if (iVar4 != 0) {
              (&DAT_0044a8c0)[DAT_0044aa6c * 2] = piVar1;
              iVar4 = DAT_0044aa6c * 2;
              DAT_0044aa6c = DAT_0044aa6c + 1;
              (&DAT_0044a8c4)[iVar4] = DAT_0044aa68;
            }
          }
          uVar6 = uVar6 + 8;
        } while (uVar6 < 0x1a0);
        param_1 = (code **)param_1 + 1;
        ppcStack8 = (code **)((int)ppcStack8 + -1);
      } while (ppcStack8 != (code **)0x0);
    }
  }
  else {
    iStack12 = param_2;
    if (0 < param_2) {
      ppcStack8 = (code **)param_1;
      do {
        uVar6 = 0;
        do {
          piVar1 = *(int **)((int)&PTR_DAT_004472dc + uVar6);
          iVar5 = (**ppcStack8)(*(undefined4 *)((int)&PTR_s_VEngineCvar007_004472d8 + uVar6),0);
          iVar3 = DAT_0044aa6c;
          iVar4 = DAT_0044aa68;
          bVar2 = false;
          *piVar1 = iVar5;
          iVar5 = 0;
          if (iVar3 < 1) {
LAB_0041ccdb:
            if (*piVar1 != 0) {
              DAT_0044aa6c = iVar3 + 1;
              (&DAT_0044a8c0)[iVar3 * 2] = piVar1;
              (&DAT_0044a8c4)[iVar3 * 2] = iVar4;
            }
          }
          else {
            do {
              if ((int *)(&DAT_0044a8c0)[iVar5 * 2] == piVar1) {
                (&DAT_0044a8c0)[iVar5 * 2] = piVar1;
                bVar2 = true;
              }
              iVar5 = iVar5 + 1;
            } while (iVar5 < iVar3);
            if (!bVar2) goto LAB_0041ccdb;
          }
          uVar6 = uVar6 + 8;
        } while (uVar6 < 0x1a0);
        ppcStack8 = ppcStack8 + 1;
        iStack12 = iStack12 + -1;
        if (iStack12 == 0) {
          DAT_0044aa68 = iVar4 + 1;
          return;
        }
      } while( true );
    }
  }
  DAT_0044aa68 = DAT_0044aa68 + 1;
  return;
}



void __thiscall FUN_004220a0(void *this,undefined *param_1)

{
  int iVar1;
  char cVar2;
  
  if ((*(byte *)((int)this + 0x14) & 2) == 0) {
    iVar1 = *(int *)((int)this + 0xc);
    if (iVar1 + 1 <= *(int *)((int)this + 0x1c)) {
      if ((iVar1 < *(int *)((int)this + 0x20)) ||
         (*(int *)((int)this + 4) < (iVar1 - *(int *)((int)this + 0x20)) + 1)) {
        cVar2 = (**(code **)((int)this + 0x24))(1);
        if (cVar2 == '\0') {
          *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
          *param_1 = 0;
          return;
        }
      }
                    // WARNING: Load size is inaccurate
      *param_1 = *(undefined *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this);
      *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
      return;
    }
    *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
  }
  *param_1 = 0;
  return;
}



void __thiscall FUN_00422110(void *this,undefined param_1)

{
  int iVar1;
  char cVar2;
  undefined4 uVar3;
  
  if (((*(byte *)((int)this + 0x14) & 1) == 0) && ((*(byte *)((int)this + 0x15) & 8) == 0)) {
    if (((*(int *)((int)this + 0x10) < *(int *)((int)this + 0x20)) ||
        (*(int *)((int)this + 4) < (*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + 1))
       && (cVar2 = (**(code **)((int)this + 0x28))(1), cVar2 == '\0')) {
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 1;
      return;
    }
                    // WARNING: Load size is inaccurate
    *(undefined *)((*this - *(int *)((int)this + 0x20)) + *(int *)((int)this + 0x10)) = param_1;
    *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + 1;
    iVar1 = *(int *)((int)this + 0x10);
    if (*(int *)((int)this + 0x1c) < iVar1) {
      if (((*(byte *)((int)this + 0x15) & 8) == 0) && ((*(byte *)((int)this + 0x14) & 1) == 0)) {
        uVar3 = FUN_00422570(this,1);
        if ((char)uVar3 != '\0') {
                    // WARNING: Load size is inaccurate
          *(undefined *)((*this - *(int *)((int)this + 0x20)) + iVar1) = 0;
          *(int *)((int)this + 0x1c) = iVar1;
          return;
        }
        *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfe;
      }
      *(int *)((int)this + 0x1c) = iVar1;
    }
  }
  return;
}



int * __thiscall FUN_004221a0(void *this,int param_1,int param_2,byte param_3)

{
  undefined4 uVar1;
  
  *(undefined4 *)this = 0;
  *(undefined4 *)((int)this + 4) = 0;
  *(undefined4 *)((int)this + 8) = 0;
  *(undefined *)((int)this + 0x14) = 0;
  *(uint *)((int)this + 0x2c) = *(uint *)((int)this + 0x2c) & 0xfffffffc;
  if (-1 < *(int *)((int)this + 8)) {
                    // WARNING: Load size is inaccurate
    if (*this != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*this);
      *(undefined4 *)this = 0;
    }
    *(undefined4 *)((int)this + 4) = 0;
  }
  *(int *)((int)this + 8) = param_1;
  *(int *)((int)this + 4) = param_2;
  if (param_2 != 0) {
    uVar1 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(param_2);
    *(undefined4 *)this = uVar1;
  }
  *(undefined4 *)((int)this + 0xc) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x18) = 0;
  *(undefined4 *)((int)this + 0x20) = 0;
  *(byte *)((int)this + 0x15) = param_3;
  if (((param_2 != 0) && ((param_3 & 8) == 0)) &&
     (*(undefined4 *)((int)this + 0x1c) = 0xffffffff, (*(byte *)((int)this + 0x14) & 1) == 0)) {
    uVar1 = FUN_00422570(this,1);
    if ((char)uVar1 == '\0') {
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfe;
    }
    else {
                    // WARNING: Load size is inaccurate
      *(undefined *)(*this - *(int *)((int)this + 0x20)) = 0;
    }
  }
  *(undefined4 *)((int)this + 0x1c) = 0;
  *(code **)((int)this + 0x24) = FUN_00421f70;
  *(code **)((int)this + 0x28) = FUN_004231f0;
  return (int *)this;
}



int * __thiscall FUN_00422280(void *this,int param_1,int param_2,byte param_3)

{
  undefined4 uVar1;
  
  *(int *)this = param_1;
  *(int *)((int)this + 4) = param_2;
  *(undefined4 *)((int)this + 8) = 0xffffffff;
  *(undefined *)((int)this + 0x14) = 0;
  *(uint *)((int)this + 0x2c) = *(uint *)((int)this + 0x2c) & 0xfffffffc;
  *(undefined4 *)((int)this + 0xc) = 0;
  *(undefined4 *)((int)this + 0x10) = 0;
  *(undefined4 *)((int)this + 0x18) = 0;
  *(undefined4 *)((int)this + 0x20) = 0;
  *(byte *)((int)this + 0x15) = param_3;
  if ((param_3 & 8) == 0) {
    *(undefined4 *)((int)this + 0x1c) = 0xffffffff;
    if ((*(byte *)((int)this + 0x14) & 1) == 0) {
      uVar1 = FUN_00422570(this,1);
      if ((char)uVar1 == '\0') {
        *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfe;
      }
      else {
                    // WARNING: Load size is inaccurate
        *(undefined *)(*this - *(int *)((int)this + 0x20)) = 0;
      }
    }
    *(undefined4 *)((int)this + 0x1c) = 0;
  }
  else {
    *(int *)((int)this + 0x10) = param_2;
    *(int *)((int)this + 0x1c) = param_2;
  }
  *(code **)((int)this + 0x24) = FUN_00421f70;
  *(code **)((int)this + 0x28) = FUN_004231f0;
  return (int *)this;
}



undefined4 * __thiscall
FUN_00422320(void *this,undefined param_1,char *param_2,int param_3,int param_4)

{
  byte bVar1;
  char *pcVar2;
  int iVar3;
  int iVar4;
  
  *(undefined *)((int)this + 4) = param_1;
  *(undefined ***)this = CUtlCharConversion::vftable;
  *(char **)((int)this + 8) = param_2;
  *(int *)((int)this + 0x10) = param_3;
  iVar3 = FUN_0041e440(param_2);
  *(int *)((int)this + 0xc) = iVar3;
  *(undefined4 *)((int)this + 0x14) = 0;
  FUN_00427870((uint *)((int)this + 0x118),0,0x800);
  iVar3 = 0;
  if (0 < param_3) {
    do {
      bVar1 = *(byte *)(param_4 + iVar3 * 8);
      *(byte *)((int)this + iVar3 + 0x18) = bVar1;
      pcVar2 = *(char **)(param_4 + 4 + iVar3 * 8);
      *(char **)((int)this + (uint)bVar1 * 8 + 0x11c) = pcVar2;
      iVar4 = FUN_0041e440(pcVar2);
      *(int *)((int)this + (uint)bVar1 * 8 + 0x118) = iVar4;
      if (*(int *)((int)this + 0x14) < iVar4) {
        *(int *)((int)this + 0x14) = iVar4;
      }
      iVar3 = iVar3 + 1;
    } while (iVar3 < param_3);
  }
  return (undefined4 *)this;
}



void __thiscall FUN_004223b0(void *this,int param_1)

{
  undefined4 uVar1;
  
  if (*(int *)((int)this + 0x1c) < param_1) {
    if (((*(byte *)((int)this + 0x15) & 8) == 0) && ((*(byte *)((int)this + 0x14) & 1) == 0)) {
      uVar1 = FUN_00422570(this,1);
      if ((char)uVar1 != '\0') {
                    // WARNING: Load size is inaccurate
        *(undefined *)((*this - *(int *)((int)this + 0x20)) + param_1) = 0;
        *(int *)((int)this + 0x1c) = param_1;
        return;
      }
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfe;
    }
    *(int *)((int)this + 0x1c) = param_1;
  }
  return;
}



void __thiscall FUN_00422400(void *this,int param_1,int param_2,int param_3,byte param_4)

{
  undefined4 uVar1;
  
  if (-1 < *(int *)((int)this + 8)) {
                    // WARNING: Load size is inaccurate
    if (*this != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*this);
      *(undefined4 *)this = 0;
    }
    *(undefined4 *)((int)this + 4) = 0;
  }
  *(int *)this = param_1;
  *(int *)((int)this + 4) = param_2;
  *(undefined4 *)((int)this + 0xc) = 0;
  *(int *)((int)this + 0x10) = param_3;
  *(undefined4 *)((int)this + 0x18) = 0;
  *(undefined *)((int)this + 0x14) = 0;
  *(undefined4 *)((int)this + 0x20) = 0;
  *(byte *)((int)this + 0x15) = param_4;
  *(undefined4 *)((int)this + 0x1c) = 0xffffffff;
  if (-1 < param_3) {
    if ((param_4 & 8) == 0) {
      uVar1 = FUN_00422570(this,1);
      if ((char)uVar1 != '\0') {
                    // WARNING: Load size is inaccurate
        *(undefined *)((*this - *(int *)((int)this + 0x20)) + param_3) = 0;
        *(int *)((int)this + 0x1c) = param_3;
        return;
      }
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfe;
    }
    *(int *)((int)this + 0x1c) = param_3;
  }
  return;
}



uint __thiscall FUN_004224a0(void *this,int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  
  iVar2 = *(int *)((int)this + 0xc);
  iVar1 = *(int *)((int)this + 0x1c);
  if (iVar1 <= iVar2 + param_1) {
    *param_2 = 0;
    return (uint)param_2 & 0xffffff00;
  }
  if (iVar1 < *param_2 + iVar2 + param_1) {
    *param_2 = (iVar1 - iVar2) - param_1;
  }
  if ((*(byte *)((int)this + 0x14) & 2) == 0) {
    FUN_00422510(this,*param_2 + param_1);
    *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
  }
  iVar2 = *(int *)((int)this + 0x1c) - *(int *)((int)this + 0xc);
  if (iVar2 < *param_2) {
    *param_2 = iVar2;
  }
  return (uint)(*param_2 != 0);
}



undefined __thiscall FUN_00422510(void *this,int param_1)

{
  int iVar1;
  char cVar2;
  
  if ((*(byte *)((int)this + 0x14) & 2) != 0) {
    return 0;
  }
  iVar1 = *(int *)((int)this + 0xc);
  if (*(int *)((int)this + 0x1c) < iVar1 + param_1) {
    *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
    return 0;
  }
  if ((iVar1 < *(int *)((int)this + 0x20)) ||
     (*(int *)((int)this + 4) < (iVar1 - *(int *)((int)this + 0x20)) + param_1)) {
    cVar2 = (**(code **)((int)this + 0x24))(param_1);
    if (cVar2 == '\0') {
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
      return 0;
    }
  }
  return 1;
}



uint __thiscall FUN_00422570(void *this,int param_1)

{
  uint in_EAX;
  
  if (((*(byte *)((int)this + 0x14) & 1) == 0) && ((*(byte *)((int)this + 0x15) & 8) == 0)) {
    if ((*(int *)((int)this + 0x10) < *(int *)((int)this + 0x20)) ||
       (in_EAX = (*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + param_1,
       *(int *)((int)this + 4) < (int)in_EAX)) {
      in_EAX = (**(code **)((int)this + 0x28))(param_1);
      if ((char)in_EAX == '\0') {
        *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 1;
        goto LAB_004225a8;
      }
    }
    return CONCAT31((int3)(in_EAX >> 8),1);
  }
LAB_004225a8:
  return in_EAX & 0xffffff00;
}



void __thiscall FUN_004225c0(void *this,void *param_1)

{
  size_t _Size;
  void *_Dst;
  
  if (*(int *)((int)this + 8) < 0) {
    _Size = *(size_t *)((int)this + 4);
    *(void **)((int)this + 8) = param_1;
    if (_Size != 0) {
      _Dst = (void *)(**(code **)(**(int **)g_pMemAlloc_exref + 4))(_Size);
                    // WARNING: Load size is inaccurate
      FID_conflict__memcpy(_Dst,*this,_Size);
      *(void **)this = _Dst;
      return;
    }
    *(undefined4 *)this = 0;
  }
  return;
}



uint __fastcall FUN_00422610(int *param_1)

{
  char cVar1;
  char *in_EAX;
  uint uVar2;
  undefined4 uStack8;
  
  if (((*(byte *)((int)param_1 + 0x15) & 1) != 0) && (*(char *)(param_1 + 5) == '\0')) {
    uStack8 = param_1;
    in_EAX = (char *)FUN_00422510(param_1,2);
    *(byte *)(param_1 + 5) = *(byte *)(param_1 + 5) & 0xfd;
    if ((char)in_EAX != '\0') {
      in_EAX = (char *)((param_1[3] - param_1[8]) + *param_1);
      if (((in_EAX != (char *)0x0) && (*in_EAX == '/')) && (in_EAX[1] == '/')) {
        param_1[3] = param_1[3] + 2;
        uVar2 = FUN_004220a0(param_1,(undefined *)((int)&uStack8 + 3));
        cVar1 = *(char *)(param_1 + 5);
        for (uVar2 = uVar2 & 0xffffff00 | (uint)uStack8 >> 0x18;
            (cVar1 == '\0' && ((char)uVar2 != '\n'));
            uVar2 = uVar2 & 0xffffff00 | (uint)uStack8 >> 0x18) {
          uVar2 = FUN_004220a0(param_1,(undefined *)((int)&uStack8 + 3));
          cVar1 = *(char *)(param_1 + 5);
        }
        return CONCAT31((int3)(uVar2 >> 8),1);
      }
    }
  }
  return (uint)in_EAX & 0xffffff00;
}



void __fastcall FUN_00422690(int *param_1)

{
  byte bVar1;
  int iVar2;
  char cVar3;
  
  if (((*(byte *)((int)param_1 + 0x15) & 1) != 0) && (*(char *)(param_1 + 5) == '\0')) {
    while ((*(byte *)(param_1 + 5) & 2) == 0) {
      iVar2 = param_1[3];
      if ((param_1[7] < iVar2 + 1) ||
         (((iVar2 < param_1[8] || (param_1[1] < (iVar2 - param_1[8]) + 1)) &&
          (cVar3 = (*(code *)param_1[9])(1), cVar3 == '\0')))) {
        *(byte *)(param_1 + 5) = *(byte *)(param_1 + 5) | 2;
        return;
      }
      bVar1 = *(byte *)((param_1[3] - param_1[8]) + *param_1);
      if (bVar1 < 9) {
        return;
      }
      if ((0xd < bVar1) && (bVar1 != 0x20)) {
        return;
      }
      param_1[3] = param_1[3] + 1;
    }
  }
  return;
}



void __thiscall FUN_00422700(void *this,int param_1)

{
  undefined4 uVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = param_1 + 1;
  iVar3 = iVar2;
  if (((*(int *)((int)this + 8) < 0) && (iVar3 = param_1, (*(byte *)((int)this + 0x15) & 2) != 0))
     && (*(int *)((int)this + 4) < iVar2)) {
    FUN_004225c0(this,(void *)0x0);
    iVar3 = iVar2;
  }
  if ((*(int *)((int)this + 4) < iVar3) && (-1 < *(int *)((int)this + 8))) {
                    // WARNING: Load size is inaccurate
    *(int *)((int)this + 4) = iVar3;
    if (*this != 0) {
      uVar1 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this);
      *(undefined4 *)this = uVar1;
      return;
    }
    uVar1 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(iVar3);
    *(undefined4 *)this = uVar1;
  }
  return;
}



void __thiscall FUN_00422760(void *this,byte *param_1,uint *param_2)

{
  *param_2 = (uint)(*(char *)(*param_1 + 0x918 + (int)this) != '\0');
  return;
}



uint __thiscall FUN_00422780(void *this,byte *param_1,undefined4 *param_2)

{
  uint uVar1;
  int iVar2;
  
  iVar2 = 0;
  if (0 < *(int *)((int)this + 0x10)) {
    do {
      uVar1 = FUN_0041e340(param_1,*(byte **)((int)this +
                                             (uint)*(byte *)((int)this + iVar2 + 0x18) * 8 + 0x11c))
      ;
      if (uVar1 == 0) {
        *param_2 = *(undefined4 *)
                    ((int)this + (uint)*(byte *)(iVar2 + 0x18 + (int)this) * 8 + 0x118);
        return (uint)*(byte *)(iVar2 + 0x18 + (int)this);
      }
      iVar2 = iVar2 + 1;
    } while (iVar2 < *(int *)((int)this + 0x10));
  }
  *param_2 = 0;
  return (uint)param_2 & 0xffffff00;
}



uint FUN_004227e0(undefined4 param_1,undefined4 *param_2)

{
  *param_2 = 0;
  return (uint)param_2 & 0xffffff00;
}



undefined4 __thiscall FUN_00422800(void *this,void *param_1,size_t param_2)

{
  uint in_EAX;
  void *pvVar1;
  
  if (0 < (int)param_2) {
    in_EAX = FUN_00422510(this,param_2);
    if ((char)in_EAX != '\0') {
                    // WARNING: Load size is inaccurate
      pvVar1 = FID_conflict__memcpy
                         (param_1,(void *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20))
                                          + *this),param_2);
      *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + param_2;
      return CONCAT31((int3)((uint)pvVar1 >> 8),1);
    }
  }
  return in_EAX & 0xffffff00;
}



undefined * FUN_00422840(void)

{
  return &DAT_00457070;
}



// WARNING: Could not reconcile some variable overlaps

uint __thiscall FUN_00422850(void *this,undefined4 *param_1)

{
  int iVar1;
  undefined4 *puVar2;
  uint uVar3;
  undefined4 uStack8;
  
  uStack8 = this;
  uVar3 = FUN_004220a0(this,(undefined *)((int)&uStack8 + 3));
  puVar2 = param_1;
  if (uStack8._3_1_ == *(byte *)(param_1 + 1)) {
    param_1 = (undefined4 *)param_1[5];
    uVar3 = FUN_004224a0(this,0,(int *)&param_1);
    if ((char)uVar3 == '\0') {
      return uVar3;
    }
                    // WARNING: Load size is inaccurate
    uVar3 = (**(code **)*puVar2)
                      ((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this,&param_1);
    uStack8._3_1_ = (byte)uVar3;
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + (int)param_1;
    iVar1 = *(int *)((int)this + 0xc);
    if (*(int *)((int)this + 0x1c) < iVar1) {
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
      return uVar3;
    }
    *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
    if ((iVar1 < *(int *)((int)this + 0x20)) ||
       (uVar3 = *(int *)((int)this + 4) + *(int *)((int)this + 0x20), (int)uVar3 <= iVar1)) {
      uVar3 = (**(code **)((int)this + 0x24))(0xffffffff);
    }
  }
  return uVar3 & 0xffffff00 | (uint)uStack8._3_1_;
}



void __thiscall FUN_004228f0(void *this,undefined4 *param_1,undefined *param_2,size_t param_3)

{
  char *pcVar1;
  char cVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  
  if (((*(byte *)((int)this + 0x15) & 1) == 0) || (param_1 == (undefined4 *)0x0)) {
    FUN_00422b10(this,param_2,param_3);
  }
  else {
    if (*(char *)((int)this + 0x14) != '\0') {
      *param_2 = 0;
      return;
    }
    if (param_3 == 0) {
      param_3 = 0x7fffffff;
    }
    FUN_00422690((int *)this);
    uVar3 = FUN_00422fe0(this,0,(char *)param_1[2],param_1[3]);
    if ((char)uVar3 != '\0') {
      *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + param_1[3];
      iVar5 = *(int *)((int)this + 0xc);
      if (*(int *)((int)this + 0x1c) < iVar5) {
        *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
      }
      else {
        *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
        if ((iVar5 < *(int *)((int)this + 0x20)) ||
           (*(int *)((int)this + 4) + *(int *)((int)this + 0x20) <= iVar5)) {
          (**(code **)((int)this + 0x24))(0xffffffff);
        }
      }
      iVar5 = 0;
      cVar2 = *(char *)((int)this + 0x14);
      do {
        if (cVar2 != '\0') {
LAB_00422a21:
          if ((int)param_3 <= iVar5) {
            iVar5 = param_3 - 1;
          }
          param_2[iVar5] = 0;
          return;
        }
        iVar4 = param_1[3];
        pcVar1 = (char *)param_1[2];
        if ((*(byte *)((int)this + 0x14) & 2) == 0) {
          cVar2 = FUN_00422510(this,iVar4);
          *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
                    // WARNING: Load size is inaccurate
          if ((cVar2 != '\0') &&
             (iVar4 = FUN_0041e190((char *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20))
                                           + *this),pcVar1,iVar4), iVar4 == 0)) {
            *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + param_1[3];
            iVar4 = *(int *)((int)this + 0xc);
            if (*(int *)((int)this + 0x1c) < iVar4) {
              *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
            }
            else {
              *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
              if ((iVar4 < *(int *)((int)this + 0x20)) ||
                 (*(int *)((int)this + 4) + *(int *)((int)this + 0x20) <= iVar4)) {
                (**(code **)((int)this + 0x24))(0xffffffff);
              }
            }
            goto LAB_00422a21;
          }
        }
        uVar3 = FUN_00422850(this,param_1);
        if (iVar5 < (int)param_3) {
          param_2[iVar5] = (char)uVar3;
          iVar5 = iVar5 + 1;
        }
        cVar2 = *(char *)((int)this + 0x14);
      } while( true );
    }
  }
  return;
}



void __thiscall FUN_00422a50(void *this,undefined *param_1,int param_2)

{
  int iVar1;
  
  if (*(char *)((int)this + 0x14) != '\0') {
    *param_1 = 0;
    return;
  }
  if (param_2 == 0) {
    param_2 = 0x7fffffff;
  }
  iVar1 = FUN_00422db0((int *)this);
  if (iVar1 == 0) {
    *param_1 = 0;
  }
  else {
    if (iVar1 <= param_2) {
      FUN_00422800(this,param_1,iVar1 - 1);
      param_1[iVar1 + -1] = 0;
      return;
    }
    FUN_00422800(this,param_1,param_2 - 1);
    param_1[param_2 + -1] = 0;
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + (iVar1 - param_2) + -1;
    iVar1 = *(int *)((int)this + 0xc);
    if (iVar1 <= *(int *)((int)this + 0x1c)) {
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
      if ((iVar1 < *(int *)((int)this + 0x20)) ||
         (*(int *)((int)this + 4) + *(int *)((int)this + 0x20) <= iVar1)) {
        (**(code **)((int)this + 0x24))(0xffffffff);
      }
      return;
    }
  }
  *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
  return;
}



undefined * FUN_00422b00(void)

{
  return &DAT_00457a90;
}



void __thiscall FUN_00422b10(void *this,undefined *param_1,size_t param_2)

{
  int iVar1;
  undefined *puVar2;
  size_t sVar3;
  size_t sVar4;
  
  sVar4 = param_2;
  if (*(char *)((int)this + 0x14) != '\0') {
    *param_1 = 0;
    return;
  }
  if (0 < (int)param_2) {
    sVar3 = FUN_00422e90((int *)this);
    if ((*(byte *)((int)this + 0x15) & 1) != 0) {
      FUN_00422690((int *)this);
    }
    puVar2 = param_1;
    if ((int)sVar3 < 1) {
      *param_1 = 0;
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
      return;
    }
    if ((int)sVar3 < (int)sVar4) {
      sVar4 = sVar3;
    }
    param_2 = sVar4 - 1;
    FUN_00422800(this,param_1,param_2);
    puVar2[param_2] = 0;
    if ((int)(param_2 + 1) < (int)sVar3) {
      *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + (sVar3 - param_2) + -1;
      iVar1 = *(int *)((int)this + 0xc);
      if (*(int *)((int)this + 0x1c) < iVar1) {
        *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
      }
      else {
        *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
        if ((iVar1 < *(int *)((int)this + 0x20)) ||
           (*(int *)((int)this + 4) + *(int *)((int)this + 0x20) <= iVar1)) {
          (**(code **)((int)this + 0x24))(0xffffffff);
        }
      }
    }
    if ((*(byte *)((int)this + 0x15) & 1) == 0) {
      FUN_004220a0(this,(undefined *)((int)&param_1 + 3));
    }
  }
  return;
}



int __thiscall FUN_00422bd0(void *this,int param_1,byte *param_2,int param_3,undefined4 param_4)

{
  byte bVar1;
  int iVar2;
  char cVar3;
  uint uVar4;
  int iVar5;
  
  *param_2 = 0;
  if (*(char *)((int)this + 0x14) == '\0') {
    while( true ) {
      FUN_00422690((int *)this);
      if ((char)param_4 == '\0') break;
      uVar4 = FUN_00422610((int *)this);
      if ((char)uVar4 == '\0') break;
      if (*(char *)((int)this + 0x14) != '\0') {
        return -1;
      }
    }
    FUN_004220a0(this,(undefined *)((int)&param_4 + 3));
    if (param_4._3_1_ != 0) {
      if (param_4._3_1_ != 0x22) {
        cVar3 = *(char *)((uint)param_4._3_1_ + param_1);
        *param_2 = param_4._3_1_;
        if (cVar3 != '\0') {
          param_2[1] = 0;
          return 1;
        }
        iVar5 = 1;
        if (param_3 != 1) {
          do {
            FUN_004220a0(this,(undefined *)((int)&param_4 + 3));
            if (*(char *)((int)this + 0x14) != '\0') goto LAB_00422c97;
            if (((*(char *)((uint)param_4._3_1_ + param_1) != '\0') || (param_4._3_1_ == 0x22)) ||
               ((char)param_4._3_1_ < '!')) {
              *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + -1;
              iVar2 = *(int *)((int)this + 0xc);
              if (*(int *)((int)this + 0x1c) < iVar2) goto LAB_00422ca4;
              *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
              if ((iVar2 < *(int *)((int)this + 0x20)) ||
                 (*(int *)((int)this + 4) + *(int *)((int)this + 0x20) <= iVar2)) {
                (**(code **)((int)this + 0x24))(0xffffffff);
                param_2[iVar5] = 0;
                return iVar5;
              }
              goto LAB_00422c97;
            }
            param_2[iVar5] = param_4._3_1_;
            iVar5 = iVar5 + 1;
          } while (iVar5 != param_3);
        }
LAB_00422d27:
        param_2[iVar5 + -1] = 0;
        return param_3;
      }
      iVar5 = 0;
      if (*(char *)((int)this + 0x14) == '\0') {
        while ((*(byte *)((int)this + 0x14) & 2) == 0) {
          iVar2 = *(int *)((int)this + 0xc);
          if (*(int *)((int)this + 0x1c) < iVar2 + 1) {
            *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
            param_2[iVar5] = 0;
            return iVar5;
          }
          if ((iVar2 < *(int *)((int)this + 0x20)) ||
             (*(int *)((int)this + 4) < (iVar2 - *(int *)((int)this + 0x20)) + 1)) {
            cVar3 = (**(code **)((int)this + 0x24))(1);
            if (cVar3 == '\0') {
LAB_00422ca4:
              *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
              param_2[iVar5] = 0;
              return iVar5;
            }
          }
                    // WARNING: Load size is inaccurate
          bVar1 = *(byte *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this);
          *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
          if ((bVar1 == 0x22) || (bVar1 == 0)) break;
          param_2[iVar5] = bVar1;
          iVar5 = iVar5 + 1;
          if (iVar5 == param_3) goto LAB_00422d27;
          if (*(char *)((int)this + 0x14) != '\0') break;
        }
      }
LAB_00422c97:
      param_2[iVar5] = 0;
      return iVar5;
    }
  }
  return -1;
}



int __thiscall FUN_00422d70(void *this,int param_1,int param_2)

{
  char cVar1;
  
  if ((*(byte *)((int)this + 0x14) & 2) == 0) {
    cVar1 = FUN_00422510(this,param_1 + param_2);
    *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
    if (cVar1 != '\0') {
                    // WARNING: Load size is inaccurate
      return (*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this + param_2;
    }
  }
  return 0;
}



int __fastcall FUN_00422db0(int *param_1)

{
  int iVar1;
  char cVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  if (*(char *)(param_1 + 5) != '\0') {
    return 0;
  }
  iVar4 = 0;
  while( true ) {
    iVar3 = param_1[3];
    iVar5 = 0x80;
    iVar1 = param_1[7];
    if (iVar1 <= iVar3 + iVar4) break;
    if (iVar1 < iVar3 + 0x80 + iVar4) {
      iVar5 = (iVar1 - iVar3) - iVar4;
    }
    if ((*(byte *)(param_1 + 5) & 2) == 0) {
      if (param_1[7] < iVar5 + iVar4 + iVar3) {
        *(byte *)(param_1 + 5) = *(byte *)(param_1 + 5) | 2;
      }
      else if (((iVar3 < param_1[8]) || (param_1[1] < (iVar3 - param_1[8]) + iVar5 + iVar4)) &&
              (cVar2 = (*(code *)param_1[9])(iVar5 + iVar4), cVar2 == '\0')) {
        *(byte *)(param_1 + 5) = *(byte *)(param_1 + 5) | 2;
      }
      *(byte *)(param_1 + 5) = *(byte *)(param_1 + 5) & 0xfd;
    }
    iVar3 = param_1[7] - param_1[3];
    if (iVar3 < iVar5) {
      iVar5 = iVar3;
    }
    if (iVar5 == 0) break;
    iVar3 = 0;
    if (0 < iVar5) {
      do {
        cVar2 = *(char *)(iVar3 + (param_1[3] - param_1[8]) + *param_1 + iVar4);
        if ((cVar2 == '\n') || (cVar2 == '\r')) {
          iVar3 = iVar3 + 2;
LAB_00422e72:
          return iVar3 + iVar4;
        }
        iVar3 = iVar3 + 1;
        if (cVar2 == '\0') goto LAB_00422e72;
      } while (iVar3 < iVar5);
    }
    iVar4 = iVar4 + iVar5;
  }
  if (iVar4 != 0) {
    return iVar4 + 1;
  }
  return 0;
}



int __fastcall FUN_00422e90(int *param_1)

{
  byte bVar1;
  int iVar2;
  char cVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int local_8;
  
  if (*(char *)(param_1 + 5) != '\0') {
    return 0;
  }
  local_8 = 0;
  iVar2 = local_8;
  if ((*(byte *)((int)param_1 + 0x15) & 1) != 0) {
    local_8 = FUN_00423040(param_1,0);
    iVar2 = local_8;
  }
  while( true ) {
    iVar4 = param_1[3];
    iVar6 = 0x80;
    iVar5 = param_1[7];
    if (iVar5 <= iVar4 + local_8) break;
    if (iVar5 < iVar4 + 0x80 + local_8) {
      iVar6 = (iVar5 - iVar4) - local_8;
    }
    if ((*(byte *)(param_1 + 5) & 2) == 0) {
      if (param_1[7] < iVar6 + local_8 + iVar4) {
        *(byte *)(param_1 + 5) = *(byte *)(param_1 + 5) | 2;
      }
      else if (((iVar4 < param_1[8]) || (param_1[1] < (iVar4 - param_1[8]) + iVar6 + local_8)) &&
              (cVar3 = (*(code *)param_1[9])(iVar6 + local_8), cVar3 == '\0')) {
        *(byte *)(param_1 + 5) = *(byte *)(param_1 + 5) | 2;
      }
      *(byte *)(param_1 + 5) = *(byte *)(param_1 + 5) & 0xfd;
    }
    iVar4 = param_1[7] - param_1[3];
    if (iVar4 < iVar6) {
      iVar6 = iVar4;
    }
    if (iVar6 == 0) break;
    iVar4 = 0;
    iVar5 = (param_1[3] - param_1[8]) + *param_1 + local_8;
    if ((*(byte *)((int)param_1 + 0x15) & 1) == 0) {
      if (iVar6 < 1) goto LAB_00422f92;
      do {
        if (*(char *)(iVar4 + iVar5) == '\0') {
          return (iVar4 - iVar2) + 1 + local_8;
        }
        iVar4 = iVar4 + 1;
      } while (iVar4 < iVar6);
      local_8 = local_8 + iVar6;
    }
    else {
      if (0 < iVar6) {
        do {
          bVar1 = *(byte *)(iVar4 + iVar5);
          if (((8 < bVar1) && ((bVar1 < 0xe || (bVar1 == 0x20)))) || (bVar1 == 0)) {
            return (iVar4 - iVar2) + local_8 + 1;
          }
          iVar4 = iVar4 + 1;
        } while (iVar4 < iVar6);
      }
LAB_00422f92:
      local_8 = local_8 + iVar6;
    }
  }
  if (local_8 != iVar2) {
    return (local_8 - iVar2) + 1;
  }
  return 0;
}



uint __thiscall FUN_00422fe0(void *this,int param_1,char *param_2,int param_3)

{
  uint in_EAX;
  int iVar1;
  
  if ((*(byte *)((int)this + 0x14) & 2) == 0) {
    in_EAX = FUN_00422510(this,param_1 + param_3);
    *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
    if ((char)in_EAX != '\0') {
                    // WARNING: Load size is inaccurate
      iVar1 = FUN_0041e190((char *)((*(int *)((int)this + 0xc) - *(int *)((int)this + 0x20)) + *this
                                   + param_1),param_2,param_3);
      return (uint)(iVar1 == 0);
    }
  }
  return in_EAX & 0xffffff00;
}



int __thiscall FUN_00423040(void *this,int param_1)

{
  byte bVar1;
  int iVar2;
  char cVar3;
  
  if (((*(byte *)((int)this + 0x15) & 1) == 0) || (*(char *)((int)this + 0x14) != '\0')) {
    return 0;
  }
  while( true ) {
    if ((*(byte *)((int)this + 0x14) & 2) != 0) {
      return param_1;
    }
    iVar2 = *(int *)((int)this + 0xc);
    if (*(int *)((int)this + 0x1c) < iVar2 + 1 + param_1) {
      cVar3 = '\0';
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
    }
    else if (((iVar2 < *(int *)((int)this + 0x20)) ||
             (*(int *)((int)this + 4) < (iVar2 - *(int *)((int)this + 0x20)) + 1 + param_1)) &&
            (cVar3 = (**(code **)((int)this + 0x24))(param_1 + 1), cVar3 == '\0')) {
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
    }
    else {
      cVar3 = '\x01';
    }
    *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
    if (cVar3 == '\0') {
      return param_1;
    }
                    // WARNING: Load size is inaccurate
    bVar1 = *(byte *)((*this - *(int *)((int)this + 0x20)) + param_1 + *(int *)((int)this + 0xc));
    if (bVar1 < 9) {
      return param_1;
    }
    if ((0xd < bVar1) && (bVar1 != 0x20)) break;
    param_1 = param_1 + 1;
  }
  return param_1;
}



// WARNING: Function: __alloca_probe replaced with injection: alloca_probe

void __cdecl FUN_004230e0(void *param_1,byte *param_2)

{
  uint uVar1;
  char local_2004 [8188];
  undefined4 uStack8;
  
  uStack8 = 0x4230ed;
  uVar1 = FUN_0041e200(local_2004,0x2000,param_2,(int **)&stack0x0000000c);
  if (0x1fff < uVar1) {
    Error("CUtlBuffer::VaPrintf: String overflowed buffer [%d]\n",0x2000);
  }
  FUN_00423270(param_1,local_2004);
  return;
}



void __thiscall FUN_00423140(void *this,void *param_1,size_t param_2)

{
  int iVar1;
  char cVar2;
  undefined4 uVar3;
  
  if (((param_2 != 0) && ((*(byte *)((int)this + 0x14) & 1) == 0)) &&
     ((*(byte *)((int)this + 0x15) & 8) == 0)) {
    if ((*(int *)((int)this + 0x10) < *(int *)((int)this + 0x20)) ||
       (*(int *)((int)this + 4) <
        (int)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + param_2))) {
      cVar2 = (**(code **)((int)this + 0x28))(param_2);
      if (cVar2 == '\0') {
        *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 1;
        return;
      }
    }
                    // WARNING: Load size is inaccurate
    FID_conflict__memcpy
              ((void *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + *this),param_1,
               param_2);
    *(int *)((int)this + 0x10) = *(int *)((int)this + 0x10) + param_2;
    iVar1 = *(int *)((int)this + 0x10);
    if (*(int *)((int)this + 0x1c) < iVar1) {
      if (((*(byte *)((int)this + 0x15) & 8) == 0) && ((*(byte *)((int)this + 0x14) & 1) == 0)) {
        uVar3 = FUN_00422570(this,1);
        if ((char)uVar3 != '\0') {
                    // WARNING: Load size is inaccurate
          *(undefined *)((*this - *(int *)((int)this + 0x20)) + iVar1) = 0;
          *(int *)((int)this + 0x1c) = iVar1;
          return;
        }
        *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfe;
      }
      *(int *)((int)this + 0x1c) = iVar1;
    }
  }
  return;
}



uint __thiscall FUN_004231f0(void *this,int param_1)

{
  size_t _Size;
  uint in_EAX;
  void *_Dst;
  int iVar1;
  
  if (*(int *)((int)this + 8) < 0) {
    if ((*(byte *)((int)this + 0x15) & 2) == 0) {
      return in_EAX & 0xffffff00;
    }
    *(undefined4 *)((int)this + 8) = 0;
    _Size = *(size_t *)((int)this + 4);
    if (_Size == 0) {
      *(undefined4 *)this = 0;
    }
    else {
      _Dst = (void *)(**(code **)(**(int **)g_pMemAlloc_exref + 4))(_Size);
                    // WARNING: Load size is inaccurate
      FID_conflict__memcpy(_Dst,*this,_Size);
      *(void **)this = _Dst;
    }
  }
  iVar1 = (param_1 - *(int *)((int)this + 0x20)) + *(int *)((int)this + 0x10);
  if (*(int *)((int)this + 4) < iVar1) {
    do {
      FUN_00401b50(this,1);
      iVar1 = (param_1 - *(int *)((int)this + 0x20)) + *(int *)((int)this + 0x10);
    } while (*(int *)((int)this + 4) < iVar1);
  }
  return CONCAT31((int3)((uint)iVar1 >> 8),1);
}



void __thiscall FUN_00423270(void *this,char *param_1)

{
  int iVar1;
  char *pcVar2;
  size_t sVar3;
  
  if ((*(byte *)((int)this + 0x15) & 1) == 0) {
    if (param_1 != (char *)0x0) {
      iVar1 = FUN_0041e440(param_1);
      FUN_00423140(this,param_1,iVar1 + 1);
      return;
    }
    FUN_00422110(this,0);
    return;
  }
  if (param_1 != (char *)0x0) {
    if (((*(byte *)((int)this + 0x15) & 0x10) == 0) && (0 < *(int *)((int)this + 0x18))) {
                    // WARNING: Load size is inaccurate
      if ((*(int *)((int)this + 0x10) != 0) &&
         (*(char *)((*(int *)((int)this + 0x10) - *(int *)((int)this + 0x20)) + -1 + *this) == '\n')
         ) {
        FUN_004091f0((int *)this);
      }
      pcVar2 = _strchr(param_1,10);
      while (pcVar2 != (char *)0x0) {
        FUN_00423140(this,param_1,(size_t)(pcVar2 + (1 - (int)param_1)));
        param_1 = pcVar2 + 1;
        if (pcVar2[1] == '\0') break;
        FUN_004091f0((int *)this);
        pcVar2 = _strchr(param_1,10);
      }
    }
    sVar3 = FUN_0041e440(param_1);
    if (sVar3 != 0) {
      FUN_00423140(this,param_1,sVar3);
    }
  }
  return;
}



void __thiscall FUN_00423340(void *this,int param_1,int param_2)

{
  int iVar1;
  
  if (param_1 != 0) {
    if (param_1 == 1) {
      *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + param_2;
      goto LAB_00423369;
    }
    if (param_1 != 2) goto LAB_00423369;
    param_2 = *(int *)((int)this + 0x1c) - param_2;
  }
  *(int *)((int)this + 0xc) = param_2;
LAB_00423369:
  iVar1 = *(int *)((int)this + 0xc);
  if (iVar1 <= *(int *)((int)this + 0x1c)) {
    *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfd;
    if ((iVar1 < *(int *)((int)this + 0x20)) ||
       (*(int *)((int)this + 4) + *(int *)((int)this + 0x20) <= iVar1)) {
      (**(code **)((int)this + 0x24))(0xffffffff);
    }
    return;
  }
  *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) | 2;
  return;
}



void __thiscall FUN_004233a0(void *this,int param_1,int param_2)

{
  undefined4 uVar1;
  int iVar2;
  
  iVar2 = param_2;
  if (param_1 != 0) {
    if (param_1 == 1) {
      iVar2 = *(int *)((int)this + 0x10) + param_2;
    }
    else {
      iVar2 = *(int *)((int)this + 0x10);
      if (param_1 == 2) {
        iVar2 = *(int *)((int)this + 0x1c) - param_2;
      }
    }
  }
  (**(code **)((int)this + 0x28))(-1 - iVar2);
  *(int *)((int)this + 0x10) = iVar2;
  if (*(int *)((int)this + 0x1c) < iVar2) {
    if (((*(byte *)((int)this + 0x15) & 8) == 0) && ((*(byte *)((int)this + 0x14) & 1) == 0)) {
      uVar1 = FUN_00422570(this,1);
      if ((char)uVar1 != '\0') {
                    // WARNING: Load size is inaccurate
        *(undefined *)((*this - *(int *)((int)this + 0x20)) + iVar2) = 0;
        *(int *)((int)this + 0x1c) = iVar2;
        return;
      }
      *(byte *)((int)this + 0x14) = *(byte *)((int)this + 0x14) & 0xfe;
    }
    *(int *)((int)this + 0x1c) = iVar2;
  }
  return;
}



void __cdecl FUN_00423420(uint *param_1,char *param_2)

{
  char cVar1;
  
  if ((param_1 != (uint *)0x0) && (param_2 != (char *)0x0)) {
    FUN_00427870(param_1,0,0x100);
    cVar1 = *param_2;
    while (cVar1 != '\0') {
      param_2 = param_2 + 1;
      *(undefined *)((int)cVar1 + (int)param_1) = 1;
      cVar1 = *param_2;
    }
  }
  return;
}



int __thiscall FUN_00423470(void *this,undefined4 param_1,int param_2,undefined param_3)

{
  undefined4 uVar1;
  
  *(undefined4 *)((int)this + 4) = 0;
  *(int *)((int)this + 8) = param_2;
  *(undefined4 *)((int)this + 0xc) = param_1;
  if (param_2 != 0) {
    uVar1 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(param_2 * 0xc);
    *(undefined4 *)((int)this + 4) = uVar1;
  }
  *(undefined4 *)((int)this + 0x18) = *(undefined4 *)((int)this + 4);
  *(undefined4 *)((int)this + 0x10) = 0xffff;
  *(undefined4 *)((int)this + 0x14) = 0xffffffff;
  *(undefined *)((int)this + 0x1c) = param_3;
  *(undefined4 *)((int)this + 0x24) = 0;
  *(undefined4 *)((int)this + 0x28) = 0;
  *(undefined4 *)((int)this + 0x2c) = 8;
  *(undefined4 *)((int)this + 0x34) = *(undefined4 *)((int)this + 0x24);
  *(undefined4 *)((int)this + 0x30) = 0;
  return (int)this;
}



void __fastcall FUN_004234f0(int param_1)

{
  FUN_00423e70(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  return;
}



void __fastcall FUN_00423560(int param_1)

{
  FUN_00423f20(param_1);
  FUN_0040a350((int *)(param_1 + 0x24));
  FUN_004234f0(param_1);
  return;
}



uint __thiscall FUN_00423580(void *this,ushort *param_1,ushort *param_2)

{
  byte bVar1;
  ushort uVar2;
  uint3 uVar4;
  uint uVar3;
  int iVar5;
  byte *pbVar6;
  ushort uVar7;
  byte *pbVar8;
  bool bVar9;
  
  if ((*param_1 == 0xffff) && (param_1[1] == 0xffff)) {
    pbVar8 = *(byte **)((int)this + 0x20);
    uVar7 = *(ushort *)((int)this + 0x1e);
  }
  else {
    iVar5 = *(int *)(*(int *)((int)this + 0x24) + (uint)*param_1 * 4) + (uint)param_1[1];
    uVar7 = *(ushort *)(iVar5 + 8);
    pbVar8 = (byte *)(iVar5 + 10);
  }
  if ((*param_2 == 0xffff) && (param_2[1] == 0xffff)) {
    pbVar6 = *(byte **)((int)this + 0x20);
    uVar2 = *(ushort *)((int)this + 0x1e);
  }
  else {
    iVar5 = (uint)param_2[1] + *(int *)(*(int *)((int)this + 0x24) + (uint)*param_2 * 4);
    uVar2 = *(ushort *)(iVar5 + 8);
    pbVar6 = (byte *)(iVar5 + 10);
  }
  if (uVar7 != uVar2) {
    return (uint)(uVar7 < uVar2);
  }
  uVar4 = (uint3)(byte)(uVar2 >> 8);
  if (pbVar8 == (byte *)0x0) {
    if (pbVar6 == (byte *)0x0) {
      return (uint)uVar4 << 8;
    }
  }
  else if (pbVar6 != (byte *)0x0) {
    if (*(char *)((int)this + 0x1c) != '\0') {
      uVar3 = FUN_0041e3a0(pbVar8,pbVar6);
      return uVar3 & 0xffffff00 | (uint)((int)uVar3 < 0);
    }
    while( true ) {
      bVar1 = *pbVar8;
      bVar9 = bVar1 < *pbVar6;
      if (bVar1 != *pbVar6) break;
      if (bVar1 == 0) {
        return 0;
      }
      bVar1 = pbVar8[1];
      bVar9 = bVar1 < pbVar6[1];
      if (bVar1 != pbVar6[1]) break;
      pbVar8 = pbVar8 + 2;
      pbVar6 = pbVar6 + 2;
      if (bVar1 == 0) {
        return 0;
      }
    }
    return (uint)((int)(-(uint)bVar9 | 1) < 0);
  }
  return CONCAT31(uVar4,1);
}



short * __thiscall FUN_00423690(void *this,short *param_1,int *param_2)

{
  int **ppiVar1;
  char cVar2;
  ushort uVar3;
  int iVar4;
  int iVar5;
  int *_Src;
  undefined2 uVar6;
  int *piVar8;
  uint uVar9;
  char *local_c;
  uint local_8;
  uint uVar7;
  
  _Src = param_2;
  if (param_2 == (int *)0x0) {
    *param_1 = -1;
    return param_1;
  }
  *(int **)((int)this + 0x20) = param_2;
  if (*(char *)((int)this + 0x1c) == '\0') {
    uVar7 = FUN_00425170((byte *)param_2);
    uVar6 = (undefined2)uVar7;
  }
  else {
    uVar7 = FUN_004251b0((byte *)param_2);
    uVar6 = (undefined2)uVar7;
  }
  *(undefined2 *)((int)this + 0x1e) = uVar6;
  param_2 = (int *)0xffffffff;
  uVar7 = FUN_00423820(this,(ushort *)&param_2);
  if ((short)uVar7 == -1) {
    piVar8 = _Src;
    do {
      cVar2 = *(char *)piVar8;
      piVar8 = (int *)((int)piVar8 + 1);
    } while (cVar2 != '\0');
    local_c = (char *)((int)piVar8 + (1 - ((int)_Src + 1)));
    uVar7 = (uint)((int)piVar8 + (4 - ((int)_Src + 1))) & 0xfffffffe;
    local_8 = uVar7;
    piVar8 = (int *)FUN_00423970(this,uVar7);
    if (piVar8 == (int *)0xffffffff) {
      uVar9 = 0x800;
      if (0x800 < uVar7 + 0xc) {
        uVar9 = uVar7 + 0xc;
      }
      param_2 = piVar8;
      param_2 = (int *)(**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar9);
      *param_2 = uVar9 - 0xc;
      param_2[1] = 0;
      piVar8 = (int *)FUN_004058e0((void *)((int)this + 0x24),&param_2);
    }
    param_2 = piVar8;
    if (*(char *)((int)this + 0x1c) == '\0') {
      uVar7 = FUN_00425170((byte *)_Src);
      uVar6 = (undefined2)uVar7;
    }
    else {
      uVar7 = FUN_004251b0((byte *)_Src);
      uVar6 = (undefined2)uVar7;
    }
    iVar4 = *(int *)(*(int *)((int)this + 0x24) + (int)piVar8 * 4);
    iVar5 = *(int *)(iVar4 + 4);
    uVar3 = *(ushort *)(iVar4 + 4);
    *(undefined2 *)(iVar5 + 8 + iVar4) = uVar6;
    FID_conflict__memcpy((void *)(iVar5 + 10 + iVar4),_Src,(size_t)local_c);
    *(int *)(iVar4 + 4) = *(int *)(iVar4 + 4) + local_8;
    param_2 = (int *)((uint)param_2 & 0xffff | (uint)uVar3 << 0x10);
    local_c = (char *)0xffff;
    local_8 = local_8 & 0xffffff00;
    FUN_00423900(this,(ushort *)&param_2,(ushort *)&local_c,(undefined *)&local_8);
    uVar7 = FUN_00423d70((int)this);
    uVar7 = uVar7 & 0xffff;
    FUN_00423cf0(this,uVar7,(ushort)local_c,(char)local_8);
    *(short *)((int)this + 0x12) = *(short *)((int)this + 0x12) + 1;
    ppiVar1 = (int **)(*(int *)((int)this + 4) + (uVar7 * 3 + 2) * 4);
    if (ppiVar1 != (int **)0x0) {
      *ppiVar1 = param_2;
    }
    *param_1 = (short)uVar7;
    return param_1;
  }
  *param_1 = (short)uVar7;
  return param_1;
}



uint __thiscall FUN_00423820(void *this,ushort *param_1)

{
  uint uVar1;
  int iVar2;
  ushort uVar3;
  
  uVar3 = *(ushort *)((int)this + 0x10);
  if (uVar3 == 0xffff) {
    return 0xffff;
  }
  do {
    iVar2 = (uint)uVar3 * 0xc;
    uVar1 = FUN_00423580(this,param_1,(ushort *)(*(int *)((int)this + 4) + 8 + iVar2));
    if ((char)uVar1 == '\0') {
      uVar1 = FUN_00423580(this,(ushort *)(*(int *)((int)this + 4) + 8 + iVar2),param_1);
      if ((char)uVar1 == '\0') break;
      uVar3 = *(ushort *)(*(int *)((int)this + 4) + 2 + iVar2);
    }
    else {
      uVar3 = *(ushort *)(iVar2 + *(int *)((int)this + 4));
    }
    uVar1 = 0;
  } while (uVar3 != 0xffff);
  return uVar1 & 0xffff0000 | (uint)uVar3;
}



undefined2 * __thiscall FUN_004238a0(void *this,undefined2 *param_1,byte *param_2)

{
  undefined2 uVar1;
  uint uVar2;
  
  if (param_2 == (byte *)0x0) {
    *param_1 = 0xffff;
    return param_1;
  }
  *(byte **)((int)this + 0x20) = param_2;
  if (*(char *)((int)this + 0x1c) == '\0') {
    uVar2 = FUN_00425170(param_2);
    uVar1 = (undefined2)uVar2;
  }
  else {
    uVar2 = FUN_004251b0(param_2);
    uVar1 = (undefined2)uVar2;
  }
  *(undefined2 *)((int)this + 0x1e) = uVar1;
  param_2 = (byte *)0xffffffff;
  uVar2 = FUN_00423820(this,(ushort *)&param_2);
  *param_1 = (short)uVar2;
  return param_1;
}



void __thiscall FUN_00423900(void *this,ushort *param_1,ushort *param_2,undefined *param_3)

{
  ushort uVar1;
  uint uVar2;
  int iVar3;
  
  uVar1 = *(ushort *)((int)this + 0x10);
  *param_2 = 0xffff;
  *param_3 = 0;
  while (uVar1 != 0xffff) {
    *param_2 = uVar1;
    iVar3 = (uint)uVar1 * 0xc;
    uVar2 = FUN_00423580(this,param_1,(ushort *)(*(int *)((int)this + 4) + 8 + iVar3));
    if ((char)uVar2 == '\0') {
      *param_3 = 0;
      uVar1 = *(ushort *)(iVar3 + 2 + *(int *)((int)this + 4));
    }
    else {
      *param_3 = 1;
      uVar1 = *(ushort *)(iVar3 + *(int *)((int)this + 4));
    }
  }
  return;
}



int __thiscall FUN_00423970(void *this,int param_1)

{
  int iVar1;
  int **ppiVar2;
  
  iVar1 = 0;
  if (0 < *(int *)((int)this + 0x30)) {
    ppiVar2 = *(int ***)((int)this + 0x24);
    do {
      if (param_1 <= **ppiVar2 - (*ppiVar2)[1]) {
        return iVar1;
      }
      iVar1 = iVar1 + 1;
      ppiVar2 = ppiVar2 + 1;
    } while (iVar1 < *(int *)((int)this + 0x30));
  }
  return -1;
}



void __thiscall FUN_004239b0(void *this,int param_1)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  
  iVar1 = *(int *)((int)this + 8);
  if (-1 < iVar1) {
    uVar2 = *(uint *)((int)this + 4);
    uVar4 = param_1 + uVar2;
    if (iVar1 == 0) {
      if (uVar2 == 0) {
        uVar2 = 3;
        if (3 < (int)uVar4) {
          uVar2 = uVar4;
        }
      }
      else {
        for (; (int)uVar2 < (int)uVar4; uVar2 = uVar2 * 2) {
        }
      }
    }
    else {
      uVar2 = ((int)(uVar4 - 1) / iVar1 + 1) * iVar1;
    }
    if ((int)(uVar2 & 0xffff) < (int)uVar4) {
      if (((short)uVar2 == 0) && ((int)uVar4 < 0x10000)) {
        uVar2 = uVar2 - 1;
      }
      else {
        if ((uVar4 & 0xffff) != uVar4) {
          return;
        }
        do {
          uVar2 = (int)(uVar2 + uVar4) / 2;
        } while ((int)(uVar2 & 0xffff) < (int)uVar4);
      }
    }
                    // WARNING: Load size is inaccurate
    *(uint *)((int)this + 4) = uVar2;
    if (*this != 0) {
      uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 0xc))(*this,uVar2 * 0xc);
      *(undefined4 *)this = uVar3;
      return;
    }
    uVar3 = (**(code **)(**(int **)g_pMemAlloc_exref + 4))(uVar2 * 0xc);
    *(undefined4 *)this = uVar3;
  }
  return;
}



void __thiscall FUN_00423a70(void *this,uint param_1)

{
  ushort uVar1;
  int iVar2;
  ushort uVar3;
  short sVar4;
  uint uVar5;
  int iVar6;
  uint uVar7;
  short sVar8;
  uint uVar9;
  
  if ((short)param_1 != *(short *)((int)this + 0x10)) {
    while (sVar8 = (short)param_1, sVar8 != -1) {
      iVar2 = *(int *)((int)this + 4);
      uVar1 = *(ushort *)(iVar2 + 4 + (param_1 & 0xffff) * 0xc);
      uVar7 = (uint)uVar1;
      if ((uVar1 == 0xffff) || (*(short *)(iVar2 + 6 + uVar7 * 0xc) != 0)) break;
      if (uVar1 == 0xffff) {
        uVar5 = 0xffff;
LAB_00423af4:
        uVar3 = 0xffff;
      }
      else {
        uVar3 = *(ushort *)(iVar2 + 4 + uVar7 * 0xc);
        uVar5 = (uint)uVar3;
        if (uVar3 == 0xffff) goto LAB_00423af4;
        uVar3 = *(ushort *)(iVar2 + uVar5 * 0xc);
      }
      if (uVar3 == uVar1) {
        if ((short)uVar5 != -1) {
          uVar3 = *(ushort *)(uVar5 * 0xc + 2 + iVar2);
          if ((uVar3 != 0xffff) && (iVar6 = (uint)uVar3 * 0xc, *(short *)(iVar6 + 6 + iVar2) == 0))
          {
            *(undefined2 *)(iVar2 + 6 + uVar7 * 0xc) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar6) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0xc) = 0;
            param_1 = uVar5;
            goto LAB_00423cbf;
          }
        }
        if (uVar1 == 0xffff) {
          sVar4 = -1;
        }
        else {
          sVar4 = *(short *)(iVar2 + 2 + uVar7 * 0xc);
        }
        uVar9 = uVar7;
        if (sVar4 == sVar8) {
          FUN_00423f90(this,uVar1);
          uVar5 = 0xffff;
          if (uVar1 == 0xffff) {
            uVar9 = 0xffff;
            param_1 = uVar7;
          }
          else {
            uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + uVar7 * 0xc);
            uVar9 = (uint)uVar1;
            param_1 = uVar7;
            if (uVar1 != 0xffff) {
              uVar5 = (uint)*(ushort *)(*(int *)((int)this + 4) + 4 + uVar9 * 0xc);
            }
          }
        }
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar9 * 0xc) = 1;
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0xc) = 0;
        FUN_004240d0(this,(ushort)uVar5);
      }
      else {
        if ((short)uVar5 != -1) {
          uVar3 = *(ushort *)(uVar5 * 0xc + iVar2);
          if ((uVar3 != 0xffff) && (iVar6 = (uint)uVar3 * 0xc, *(short *)(iVar6 + 6 + iVar2) == 0))
          {
            *(undefined2 *)(iVar2 + 6 + uVar7 * 0xc) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + iVar6) = 1;
            *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0xc) = 0;
            param_1 = uVar5;
            goto LAB_00423cbf;
          }
        }
        if (uVar1 == 0xffff) {
          sVar4 = -1;
        }
        else {
          sVar4 = *(short *)(iVar2 + uVar7 * 0xc);
        }
        uVar9 = uVar7;
        if (sVar4 == sVar8) {
          FUN_004240d0(this,uVar1);
          uVar5 = 0xffff;
          if (uVar1 == 0xffff) {
            uVar9 = 0xffff;
            param_1 = uVar7;
          }
          else {
            uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + uVar7 * 0xc);
            uVar9 = (uint)uVar1;
            param_1 = uVar7;
            if (uVar1 != 0xffff) {
              uVar5 = (uint)*(ushort *)(*(int *)((int)this + 4) + 4 + uVar9 * 0xc);
            }
          }
        }
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar9 * 0xc) = 1;
        *(undefined2 *)(*(int *)((int)this + 4) + 6 + uVar5 * 0xc) = 0;
        FUN_00423f90(this,(ushort)uVar5);
      }
LAB_00423cbf:
      if ((short)param_1 == *(short *)((int)this + 0x10)) break;
    }
  }
  *(undefined2 *)(*(int *)((int)this + 4) + 6 + (uint)*(ushort *)((int)this + 0x10) * 0xc) = 1;
  return;
}



void __thiscall FUN_00423cf0(void *this,uint param_1,ushort param_2,char param_3)

{
  int iVar1;
  uint uVar2;
  undefined2 uVar3;
  
  uVar2 = param_1 & 0xffff;
  iVar1 = *(int *)((int)this + 4);
  *(ushort *)(iVar1 + 4 + uVar2 * 0xc) = param_2;
  *(undefined4 *)(iVar1 + uVar2 * 0xc) = 0xffffffff;
  *(undefined2 *)(iVar1 + 6 + uVar2 * 0xc) = 0;
  uVar3 = (undefined2)param_1;
  if (param_2 == 0xffff) {
    *(undefined2 *)((int)this + 0x10) = uVar3;
    FUN_00423a70(this,param_1);
    return;
  }
  if (param_3 != '\0') {
    *(undefined2 *)(*(int *)((int)this + 4) + (uint)param_2 * 0xc) = uVar3;
    FUN_00423a70(this,param_1);
    return;
  }
  *(undefined2 *)(*(int *)((int)this + 4) + 2 + (uint)param_2 * 0xc) = uVar3;
  FUN_00423a70(this,param_1);
  return;
}



uint __fastcall FUN_00423d70(int param_1)

{
  uint uVar1;
  ushort uVar2;
  uint uVar3;
  
  uVar2 = *(ushort *)(param_1 + 0x14);
  if (uVar2 == 0xffff) {
    uVar1 = *(uint *)(param_1 + 8);
    if (*(ushort *)(param_1 + 0x16) < uVar1) {
      uVar2 = *(short *)(param_1 + 0x16) + 1;
      if (uVar1 <= (ushort)(*(short *)(param_1 + 0x16) + 1)) {
        uVar2 = 0xffff;
      }
    }
    else {
      uVar2 = (-(ushort)(uVar1 != 0) & 1) - 1;
    }
    uVar3 = (uint)uVar2;
    if (uVar1 <= uVar3) {
      FUN_004239b0((void *)(param_1 + 4),1);
      uVar1 = *(uint *)(param_1 + 8);
      if (*(ushort *)(param_1 + 0x16) < uVar1) {
        uVar2 = *(short *)(param_1 + 0x16) + 1;
        if (uVar1 <= (ushort)(*(short *)(param_1 + 0x16) + 1)) {
          uVar2 = 0xffff;
        }
      }
      else {
        uVar2 = (-(ushort)(uVar1 != 0) & 1) - 1;
      }
      uVar3 = (uint)uVar2;
      if (uVar1 <= uVar3) {
        uVar3 = Error("CUtlRBTree overflow!\n");
      }
    }
    *(ushort *)(param_1 + 0x16) = uVar2;
    *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(param_1 + 4);
    return uVar3 & 0xffff0000 | (uint)uVar2;
  }
  *(undefined2 *)(param_1 + 0x14) = *(undefined2 *)(*(int *)(param_1 + 4) + 2 + (uint)uVar2 * 0xc);
  *(undefined4 *)(param_1 + 0x18) = *(undefined4 *)(param_1 + 4);
  return (uint)uVar2;
}



void __fastcall FUN_00423e70(int param_1)

{
  ushort uVar1;
  uint uVar2;
  ushort uVar3;
  uint uVar4;
  uint local_8;
  
  uVar1 = *(ushort *)(param_1 + 0x16);
  if (uVar1 != 0xffff) {
    uVar2 = *(uint *)(param_1 + 8);
    if (uVar2 != 0) {
      uVar3 = 0;
      local_8 = 0;
      do {
        uVar4 = (uint)uVar3;
        if ((uVar4 < uVar2) && (uVar3 <= uVar1)) {
          if (uVar3 == 0xffff) {
            uVar1 = 0xffff;
          }
          else {
            uVar1 = *(ushort *)(*(int *)(param_1 + 4) + uVar4 * 0xc);
          }
          if (uVar1 != uVar3) {
            *(undefined2 *)(*(int *)(param_1 + 4) + 2 + uVar4 * 0xc) =
                 *(undefined2 *)(param_1 + 0x14);
            *(ushort *)(*(int *)(param_1 + 4) + uVar4 * 0xc) = uVar3;
            *(ushort *)(param_1 + 0x14) = uVar3;
          }
        }
        uVar1 = *(ushort *)(param_1 + 0x16);
        if (uVar3 == uVar1) break;
        uVar2 = *(uint *)(param_1 + 8);
        if ((local_8 + 1 & 0xffff) < uVar2) {
          uVar3 = uVar3 + 1;
        }
        else {
          uVar3 = 0xffff;
        }
        local_8 = (uint)uVar3;
      } while (uVar3 != 0xffff);
    }
    *(undefined4 *)(param_1 + 0x10) = 0xffff;
  }
  return;
}



void __fastcall FUN_00423f20(int param_1)

{
  int iVar1;
  
  FUN_00423e70(param_1);
  *(undefined2 *)(param_1 + 0x14) = 0xffff;
  if (-1 < *(int *)(param_1 + 0xc)) {
    if (*(int *)(param_1 + 4) != 0) {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))(*(int *)(param_1 + 4));
      *(undefined4 *)(param_1 + 4) = 0;
    }
    *(undefined4 *)(param_1 + 8) = 0;
  }
  *(undefined2 *)(param_1 + 0x16) = 0xffff;
  iVar1 = 0;
  if (0 < *(int *)(param_1 + 0x30)) {
    do {
      (**(code **)(**(int **)g_pMemAlloc_exref + 0x14))
                (*(undefined4 *)(*(int *)(param_1 + 0x24) + iVar1 * 4));
      iVar1 = iVar1 + 1;
    } while (iVar1 < *(int *)(param_1 + 0x30));
  }
  *(undefined4 *)(param_1 + 0x30) = 0;
  return;
}



void __thiscall FUN_00423f90(void *this,ushort param_1)

{
  ushort uVar1;
  ushort uVar2;
  undefined2 uVar3;
  int iVar4;
  ushort uVar5;
  
  if (param_1 == 0xffff) {
    uVar5 = 0xffff;
LAB_00423fcc:
    uVar3 = 0xffff;
  }
  else {
    uVar5 = *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)param_1 * 0xc);
    if (uVar5 == 0xffff) goto LAB_00423fcc;
    uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + (uint)uVar5 * 0xc);
  }
  iVar4 = (uint)param_1 * 0xc;
  *(undefined2 *)(*(int *)((int)this + 4) + 2 + iVar4) = uVar3;
  if (uVar5 != 0xffff) {
    uVar1 = *(ushort *)((uint)uVar5 * 0xc + *(int *)((int)this + 4));
    if (uVar1 != 0xffff) {
      *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar1 * 0xc) = param_1;
    }
    if (param_1 == 0xffff) {
      uVar3 = 0xffff;
    }
    else {
      uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(undefined2 *)(*(int *)((int)this + 4) + 4 + (uint)uVar5 * 0xc) = uVar3;
  }
  if (param_1 == *(ushort *)((int)this + 0x10)) {
    *(ushort *)((int)this + 0x10) = uVar5;
    goto LAB_004240a4;
  }
  if (param_1 == 0xffff) {
LAB_00424058:
    uVar1 = 0xffff;
  }
  else {
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    if (uVar1 == 0xffff) goto LAB_00424058;
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + (uint)uVar1 * 0xc);
  }
  uVar2 = 0xffff;
  if (uVar1 == param_1) {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + (uint)uVar2 * 0xc) = uVar5;
  }
  else {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar2 * 0xc) = uVar5;
  }
LAB_004240a4:
  *(ushort *)(*(int *)((int)this + 4) + (uint)uVar5 * 0xc) = param_1;
  if (param_1 != 0xffff) {
    *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4) = uVar5;
  }
  return;
}



void __thiscall FUN_004240d0(void *this,ushort param_1)

{
  ushort uVar1;
  ushort uVar2;
  undefined2 uVar3;
  int iVar4;
  ushort uVar5;
  
  if (param_1 == 0xffff) {
    uVar5 = 0xffff;
LAB_0042410c:
    uVar3 = 0xffff;
  }
  else {
    uVar5 = *(ushort *)(*(int *)((int)this + 4) + (uint)param_1 * 0xc);
    if (uVar5 == 0xffff) goto LAB_0042410c;
    uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 2 + (uint)uVar5 * 0xc);
  }
  iVar4 = (uint)param_1 * 0xc;
  *(undefined2 *)(iVar4 + *(int *)((int)this + 4)) = uVar3;
  if (uVar5 != 0xffff) {
    uVar1 = *(ushort *)((uint)uVar5 * 0xc + 2 + *(int *)((int)this + 4));
    if (uVar1 != 0xffff) {
      *(ushort *)(*(int *)((int)this + 4) + 4 + (uint)uVar1 * 0xc) = param_1;
    }
    if (param_1 == 0xffff) {
      uVar3 = 0xffff;
    }
    else {
      uVar3 = *(undefined2 *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(undefined2 *)(*(int *)((int)this + 4) + 4 + (uint)uVar5 * 0xc) = uVar3;
  }
  if (param_1 == *(ushort *)((int)this + 0x10)) {
    *(ushort *)((int)this + 0x10) = uVar5;
    goto LAB_004241e5;
  }
  if (param_1 == 0xffff) {
LAB_00424199:
    uVar1 = 0xffff;
  }
  else {
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    if (uVar1 == 0xffff) goto LAB_00424199;
    uVar1 = *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar1 * 0xc);
  }
  uVar2 = 0xffff;
  if (uVar1 == param_1) {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar2 * 0xc) = uVar5;
  }
  else {
    if (param_1 != 0xffff) {
      uVar2 = *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4);
    }
    *(ushort *)(*(int *)((int)this + 4) + (uint)uVar2 * 0xc) = uVar5;
  }
LAB_004241e5:
  *(ushort *)(*(int *)((int)this + 4) + 2 + (uint)uVar5 * 0xc) = param_1;
  if (param_1 != 0xffff) {
    *(ushort *)(*(int *)((int)this + 4) + 4 + iVar4) = uVar5;
  }
  return;
}



undefined1 * __thiscall FUN_00424210(void *this,ushort param_1)

{
  if (param_1 == 0xffff) {
    return &DAT_0043b3d2;
  }
  return (undefined1 *)
         (*(int *)(*(int *)((int)this + 0x24) +
                  (uint)*(ushort *)(*(int *)((int)this + 4) + 8 + (uint)param_1 * 0xc) * 4) +
         *(ushort *)(*(int *)((int)this + 4) + (uint)param_1 * 0xc + 10) + 10);
}



void __cdecl FUN_00424260(uint *param_1,uint *param_2)

{
  uint uVar1;
  uint uVar2;
  uint *puVar3;
  uint uVar4;
  
  uVar2 = param_2[4] >> 3 & 0x3f;
  uVar4 = -uVar2 + 0x3f;
  *(undefined *)((int)param_2 + uVar2 + 0x18) = 0x80;
  puVar3 = (uint *)((int)param_2 + uVar2 + 0x19);
  if (uVar4 < 8) {
    FUN_00427870(puVar3,0,uVar4);
    FUN_00424330((int *)param_2,(int *)(param_2 + 6));
    FUN_00427870(param_2 + 6,0,0x38);
  }
  else {
    FUN_00427870(puVar3,0,-uVar2 + 0x37);
  }
  param_2[0x14] = param_2[4];
  param_2[0x15] = param_2[5];
  FUN_00424330((int *)param_2,(int *)(param_2 + 6));
  uVar2 = param_2[1];
  uVar4 = param_2[2];
  uVar1 = param_2[3];
  *param_1 = *param_2;
  param_1[1] = uVar2;
  param_1[2] = uVar4;
  param_1[3] = uVar1;
  FUN_00427870(param_2,0,0x58);
  return;
}



void __cdecl FUN_004242f0(undefined4 *param_1)

{
  *param_1 = 0x67452301;
  param_1[1] = 0xefcdab89;
  param_1[2] = 0x98badcfe;
  param_1[3] = 0x10325476;
  param_1[4] = 0;
  param_1[5] = 0;
  return;
}



void __cdecl FUN_00424330(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  int iVar10;
  int iVar11;
  int iVar12;
  int iVar13;
  int iVar14;
  int iVar15;
  int iVar16;
  uint uVar17;
  uint uVar18;
  uint uVar19;
  uint uVar20;
  uint uVar21;
  uint uVar22;
  
  uVar18 = param_1[3];
  uVar20 = param_1[2];
  iVar1 = *param_2;
  uVar17 = *param_1 + -0x28955b88 + ((uVar18 ^ uVar20) & param_1[1] ^ uVar18) + iVar1;
  uVar17 = (uVar17 * 0x80 | uVar17 >> 0x19) + param_1[1];
  iVar2 = param_2[1];
  uVar18 = uVar18 + 0xe8c7b756 + ((uVar20 ^ param_1[1]) & uVar17 ^ uVar20) + iVar2;
  iVar3 = param_2[2];
  uVar19 = (uVar18 * 0x1000 | uVar18 >> 0x14) + uVar17;
  uVar18 = uVar20 + 0x242070db + ((param_1[1] ^ uVar17) & uVar19 ^ param_1[1]) + iVar3;
  iVar4 = param_2[3];
  uVar21 = (uVar18 >> 0xf | uVar18 * 0x20000) + uVar19;
  uVar18 = param_1[1] + -0x3e423112 + ((uVar19 ^ uVar17) & uVar21 ^ uVar17) + iVar4;
  uVar22 = (uVar18 >> 10 | uVar18 * 0x400000) + uVar21;
  iVar5 = param_2[4];
  uVar17 = uVar17 + ((uVar19 ^ uVar21) & uVar22 ^ uVar19) + 0xf57c0faf + param_2[4];
  iVar6 = param_2[5];
  uVar18 = (uVar17 * 0x80 | uVar17 >> 0x19) + uVar22;
  uVar19 = uVar19 + ((uVar21 ^ uVar22) & uVar18 ^ uVar21) + 0x4787c62a + param_2[5];
  iVar7 = param_2[6];
  uVar20 = (uVar19 * 0x1000 | uVar19 >> 0x14) + uVar18;
  uVar21 = uVar21 + ((uVar22 ^ uVar18) & uVar20 ^ uVar22) + 0xa8304613 + param_2[6];
  iVar8 = param_2[7];
  uVar19 = (uVar21 >> 0xf | uVar21 * 0x20000) + uVar20;
  uVar22 = uVar22 + ((uVar20 ^ uVar18) & uVar19 ^ uVar18) + 0xfd469501 + param_2[7];
  iVar9 = param_2[8];
  uVar21 = (uVar22 >> 10 | uVar22 * 0x400000) + uVar19;
  iVar10 = param_2[9];
  uVar18 = uVar18 + ((uVar20 ^ uVar19) & uVar21 ^ uVar20) + 0x698098d8 + param_2[8];
  uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar21;
  uVar20 = uVar20 + 0x8b44f7af + ((uVar19 ^ uVar21) & uVar18 ^ uVar19) + iVar10;
  uVar17 = (uVar20 * 0x1000 | uVar20 >> 0x14) + uVar18;
  iVar11 = param_2[10];
  uVar19 = uVar19 + (((uVar21 ^ uVar18) & uVar17 ^ uVar21) - 0xa44f) + param_2[10];
  iVar12 = param_2[0xb];
  uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar17;
  iVar13 = param_2[0xc];
  uVar21 = uVar21 + ((uVar17 ^ uVar18) & uVar19 ^ uVar18) + 0x895cd7be + param_2[0xb];
  uVar21 = (uVar21 >> 10 | uVar21 * 0x400000) + uVar19;
  uVar18 = uVar18 + 0x6b901122 + ((uVar17 ^ uVar19) & uVar21 ^ uVar17) + iVar13;
  uVar20 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar21;
  iVar14 = param_2[0xd];
  uVar18 = uVar17 + 0xfd987193 + ((uVar19 ^ uVar21) & uVar20 ^ uVar19) + param_2[0xd];
  iVar15 = param_2[0xe];
  uVar17 = (uVar18 * 0x1000 | uVar18 >> 0x14) + uVar20;
  uVar18 = uVar19 + 0xa679438e + ((uVar21 ^ uVar20) & uVar17 ^ uVar21) + iVar15;
  uVar19 = (uVar18 >> 0xf | uVar18 * 0x20000) + uVar17;
  iVar16 = param_2[0xf];
  uVar18 = uVar21 + 0x49b40821 + ((uVar17 ^ uVar20) & uVar19 ^ uVar20) + iVar16;
  uVar18 = (uVar18 >> 10 | uVar18 * 0x400000) + uVar19;
  uVar20 = uVar20 + ((uVar19 ^ uVar18) & uVar17 ^ uVar19) + 0xf61e2562 + iVar2;
  uVar20 = (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar18;
  uVar17 = uVar17 + ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + 0xc040b340 + iVar7;
  uVar17 = (uVar17 * 0x200 | uVar17 >> 0x17) + uVar20;
  uVar19 = uVar19 + ((uVar17 ^ uVar20) & uVar18 ^ uVar20) + 0x265e5a51 + iVar12;
  uVar19 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar17;
  uVar18 = uVar18 + ((uVar17 ^ uVar19) & uVar20 ^ uVar17) + 0xe9b6c7aa + iVar1;
  uVar18 = (uVar18 >> 0xc | uVar18 * 0x100000) + uVar19;
  uVar20 = uVar20 + ((uVar19 ^ uVar18) & uVar17 ^ uVar19) + 0xd62f105d + iVar6;
  uVar20 = (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar18;
  uVar17 = uVar17 + ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + 0x2441453 + iVar11;
  uVar17 = (uVar17 * 0x200 | uVar17 >> 0x17) + uVar20;
  uVar19 = uVar19 + ((uVar17 ^ uVar20) & uVar18 ^ uVar20) + 0xd8a1e681 + iVar16;
  uVar19 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar17;
  uVar18 = uVar18 + ((uVar17 ^ uVar19) & uVar20 ^ uVar17) + 0xe7d3fbc8 + iVar5;
  uVar18 = (uVar18 >> 0xc | uVar18 * 0x100000) + uVar19;
  uVar20 = uVar20 + ((uVar19 ^ uVar18) & uVar17 ^ uVar19) + 0x21e1cde6 + iVar10;
  uVar20 = (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar18;
  uVar17 = uVar17 + 0xc33707d6 + ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + iVar15;
  uVar17 = (uVar17 * 0x200 | uVar17 >> 0x17) + uVar20;
  uVar19 = uVar19 + ((uVar17 ^ uVar20) & uVar18 ^ uVar20) + 0xf4d50d87 + iVar4;
  uVar21 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar17;
  uVar18 = uVar18 + ((uVar17 ^ uVar21) & uVar20 ^ uVar17) + 0x455a14ed + iVar9;
  uVar18 = (uVar18 >> 0xc | uVar18 * 0x100000) + uVar21;
  uVar20 = uVar20 + 0xa9e3e905 + ((uVar21 ^ uVar18) & uVar17 ^ uVar21) + iVar14;
  uVar19 = (uVar20 * 0x20 | uVar20 >> 0x1b) + uVar18;
  uVar20 = uVar17 + 0xfcefa3f8 + ((uVar18 ^ uVar19) & uVar21 ^ uVar18) + iVar3;
  uVar22 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar19;
  uVar20 = uVar21 + 0x676f02d9 + ((uVar22 ^ uVar19) & uVar18 ^ uVar19) + iVar8;
  uVar20 = (uVar20 * 0x4000 | uVar20 >> 0x12) + uVar22;
  uVar18 = uVar18 + 0x8d2a4c8a + ((uVar22 ^ uVar20) & uVar19 ^ uVar22) + iVar13;
  uVar18 = (uVar18 >> 0xc | uVar18 * 0x100000) + uVar20;
  uVar19 = uVar19 + ((uVar22 ^ uVar20 ^ uVar18) - 0x5c6be) + iVar6;
  uVar17 = (uVar19 * 0x10 | uVar19 >> 0x1c) + uVar18;
  uVar22 = uVar22 + (uVar20 ^ uVar18 ^ uVar17) + 0x8771f681 + iVar9;
  uVar19 = (uVar22 * 0x800 | uVar22 >> 0x15) + uVar17;
  uVar20 = uVar20 + (uVar19 ^ uVar18 ^ uVar17) + 0x6d9d6122 + iVar12;
  uVar20 = (uVar20 * 0x10000 | uVar20 >> 0x10) + uVar19;
  uVar18 = uVar18 + (uVar19 ^ uVar20 ^ uVar17) + 0xfde5380c + iVar15;
  uVar18 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar20;
  uVar17 = uVar17 + (uVar19 ^ uVar20 ^ uVar18) + 0xa4beea44 + iVar2;
  uVar17 = (uVar17 * 0x10 | uVar17 >> 0x1c) + uVar18;
  uVar19 = uVar19 + (uVar20 ^ uVar18 ^ uVar17) + 0x4bdecfa9 + iVar5;
  uVar21 = (uVar19 * 0x800 | uVar19 >> 0x15) + uVar17;
  uVar20 = uVar20 + (uVar21 ^ uVar18 ^ uVar17) + 0xf6bb4b60 + iVar8;
  uVar20 = (uVar20 * 0x10000 | uVar20 >> 0x10) + uVar21;
  uVar18 = uVar18 + (uVar21 ^ uVar20 ^ uVar17) + 0xbebfbc70 + iVar11;
  uVar18 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar20;
  uVar17 = uVar17 + (uVar21 ^ uVar20 ^ uVar18) + 0x289b7ec6 + iVar14;
  uVar19 = (uVar17 * 0x10 | uVar17 >> 0x1c) + uVar18;
  uVar21 = uVar21 + (uVar20 ^ uVar18 ^ uVar19) + 0xeaa127fa + iVar1;
  uVar21 = (uVar21 * 0x800 | uVar21 >> 0x15) + uVar19;
  uVar20 = uVar20 + (uVar21 ^ uVar18 ^ uVar19) + 0xd4ef3085 + iVar4;
  uVar17 = (uVar20 * 0x10000 | uVar20 >> 0x10) + uVar21;
  uVar18 = uVar18 + (uVar21 ^ uVar17 ^ uVar19) + 0x4881d05 + iVar7;
  uVar20 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar17;
  uVar18 = (uVar21 ^ uVar17 ^ uVar20) + iVar10 + uVar19 + 0xd9d4d039;
  uVar18 = (uVar18 * 0x10 | uVar18 >> 0x1c) + uVar20;
  uVar19 = uVar21 + 0xe6db99e5 + (uVar17 ^ uVar20 ^ uVar18) + iVar13;
  uVar19 = (uVar19 * 0x800 | uVar19 >> 0x15) + uVar18;
  uVar17 = (uVar19 ^ uVar20 ^ uVar18) + 0x1fa27cf8 + iVar16 + uVar17;
  uVar21 = (uVar17 * 0x10000 | uVar17 >> 0x10) + uVar19;
  uVar20 = uVar20 + (uVar19 ^ uVar21 ^ uVar18) + 0xc4ac5665 + iVar3;
  uVar20 = (uVar20 >> 9 | uVar20 * 0x800000) + uVar21;
  uVar18 = uVar18 + ((~uVar19 | uVar20) ^ uVar21) + 0xf4292244 + iVar1;
  uVar18 = (uVar18 * 0x40 | uVar18 >> 0x1a) + uVar20;
  uVar19 = uVar19 + ((~uVar21 | uVar18) ^ uVar20) + 0x432aff97 + iVar8;
  uVar17 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar18;
  uVar21 = uVar21 + ((~uVar20 | uVar17) ^ uVar18) + 0xab9423a7 + iVar15;
  uVar19 = (uVar21 * 0x8000 | uVar21 >> 0x11) + uVar17;
  uVar20 = uVar20 + ((~uVar18 | uVar19) ^ uVar17) + 0xfc93a039 + iVar6;
  uVar20 = (uVar20 >> 0xb | uVar20 * 0x200000) + uVar19;
  uVar18 = uVar18 + ((~uVar17 | uVar20) ^ uVar19) + 0x655b59c3 + iVar13;
  uVar18 = (uVar18 * 0x40 | uVar18 >> 0x1a) + uVar20;
  uVar17 = uVar17 + ((~uVar19 | uVar18) ^ uVar20) + 0x8f0ccc92 + iVar4;
  uVar17 = (uVar17 * 0x400 | uVar17 >> 0x16) + uVar18;
  uVar19 = uVar19 + (((~uVar20 | uVar17) ^ uVar18) - 0x100b83) + iVar11;
  uVar21 = (uVar19 * 0x8000 | uVar19 >> 0x11) + uVar17;
  uVar20 = uVar20 + ((~uVar18 | uVar21) ^ uVar17) + 0x85845dd1 + iVar2;
  uVar20 = (uVar20 >> 0xb | uVar20 * 0x200000) + uVar21;
  uVar18 = uVar18 + ((~uVar17 | uVar20) ^ uVar21) + 0x6fa87e4f + iVar9;
  uVar18 = (uVar18 * 0x40 | uVar18 >> 0x1a) + uVar20;
  uVar17 = uVar17 + ((~uVar21 | uVar18) ^ uVar20) + 0xfe2ce6e0 + iVar16;
  uVar19 = (uVar17 * 0x400 | uVar17 >> 0x16) + uVar18;
  uVar17 = uVar21 + 0xa3014314 + ((~uVar20 | uVar19) ^ uVar18) + iVar7;
  uVar17 = (uVar17 * 0x8000 | uVar17 >> 0x11) + uVar19;
  uVar20 = uVar20 + ((~uVar18 | uVar17) ^ uVar19) + 0x4e0811a1 + iVar14;
  uVar20 = (uVar20 >> 0xb | uVar20 * 0x200000) + uVar17;
  uVar18 = uVar18 + 0xf7537e82 + ((~uVar19 | uVar20) ^ uVar17) + iVar5;
  uVar21 = (uVar18 * 0x40 | uVar18 >> 0x1a) + uVar20;
  uVar19 = uVar19 + ((~uVar17 | uVar21) ^ uVar20) + 0xbd3af235 + iVar12;
  uVar19 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar21;
  uVar18 = uVar17 + 0x2ad7d2bb + ((~uVar20 | uVar19) ^ uVar21) + iVar3;
  *param_1 = *param_1 + uVar21;
  uVar17 = (uVar18 * 0x8000 | uVar18 >> 0x11) + uVar19;
  param_1[2] = param_1[2] + uVar17;
  uVar18 = uVar20 + 0xeb86d391 + ((~uVar21 | uVar17) ^ uVar19) + iVar10;
  param_1[1] = param_1[1] + (uVar18 >> 0xb | uVar18 * 0x200000) + uVar17;
  param_1[3] = param_1[3] + uVar19;
  return;
}



void __cdecl FUN_004249b0(int *param_1,int *param_2,uint param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  uint uVar5;
  uint uVar6;
  void *_Dst;
  
  piVar4 = param_1;
  uVar5 = param_1[4];
  uVar6 = uVar5 + param_3 * 8;
  param_1[4] = uVar6;
  if (uVar6 < uVar5) {
    param_1[5] = param_1[5] + 1;
  }
  param_1[5] = param_1[5] + (param_3 >> 0x1d);
  uVar6 = uVar5 >> 3 & 0x3f;
  if (uVar6 != 0) {
    uVar5 = 0x40 - uVar6;
    _Dst = (void *)((int)param_1 + uVar6 + 0x18);
    if (param_3 < uVar5) {
      FID_conflict__memcpy(_Dst,param_2,param_3);
      return;
    }
    FID_conflict__memcpy(_Dst,param_2,uVar5);
    FUN_00424330(param_1,param_1 + 6);
    param_2 = (int *)((int)param_2 + uVar5);
    param_3 = param_3 - uVar5;
  }
  if (0x3f < param_3) {
    param_1 = (int *)(param_3 >> 6);
    do {
      iVar1 = param_2[1];
      iVar2 = param_2[2];
      iVar3 = param_2[3];
      piVar4[6] = *param_2;
      piVar4[7] = iVar1;
      piVar4[8] = iVar2;
      piVar4[9] = iVar3;
      iVar1 = param_2[5];
      iVar2 = param_2[6];
      iVar3 = param_2[7];
      piVar4[10] = param_2[4];
      piVar4[0xb] = iVar1;
      piVar4[0xc] = iVar2;
      piVar4[0xd] = iVar3;
      iVar1 = param_2[9];
      iVar2 = param_2[10];
      iVar3 = param_2[0xb];
      piVar4[0xe] = param_2[8];
      piVar4[0xf] = iVar1;
      piVar4[0x10] = iVar2;
      piVar4[0x11] = iVar3;
      iVar1 = param_2[0xd];
      iVar2 = param_2[0xe];
      iVar3 = param_2[0xf];
      piVar4[0x12] = param_2[0xc];
      piVar4[0x13] = iVar1;
      piVar4[0x14] = iVar2;
      piVar4[0x15] = iVar3;
      FUN_00424330(piVar4,piVar4 + 6);
      param_2 = param_2 + 0x10;
      param_3 = param_3 - 0x40;
      param_1 = (int *)((int)param_1 + -1);
    } while (param_1 != (int *)0x0);
  }
  FID_conflict__memcpy(piVar4 + 6,param_2,param_3);
  return;
}



undefined * __cdecl FUN_00424a90(undefined4 param_1,int param_2)

{
  FUN_0041df30(param_1,param_2,&DAT_004583b8,0x40);
  return &DAT_004583b8;
}



undefined4 * __fastcall FUN_00424ab0(undefined4 *param_1)

{
  *param_1 = 0;
  return param_1;
}



void __fastcall FUN_00424ac0(int **param_1)

{
  if (*param_1 != (int *)0x0) {
    FUN_00424d20(*param_1);
    FUN_00424d20(*param_1 + 1);
    FUN_00403c10(*param_1);
    *param_1 = (int *)0x0;
  }
  return;
}



void __cdecl FUN_00424af0(undefined4 param_1)

{
  Warning("Conditional Error: %s\n",param_1);
  return;
}



undefined4 __cdecl FUN_00424b10(byte *param_1)

{
  uint uVar1;
  int *piVar2;
  undefined4 uVar3;
  
  if (*param_1 == 0x24) {
    param_1 = param_1 + 1;
  }
  uVar1 = FUN_0041e3a0(param_1,(byte *)"WIN32");
  if (uVar1 != 0) {
    uVar1 = FUN_0041e3a0(param_1,(byte *)"WINDOWS");
    if (uVar1 != 0) {
      uVar1 = FUN_0041e3a0(param_1,&DAT_0043ee94);
      if (uVar1 != 0) {
        uVar1 = FUN_0041e3a0(param_1,&DAT_0043ee9c);
        if (uVar1 != 0) {
          uVar1 = FUN_0041e3a0(param_1,&DAT_0043eea0);
          if (uVar1 != 0) {
            uVar1 = FUN_0041e3a0(param_1,(byte *)"LINUX");
            if (uVar1 != 0) {
              uVar1 = FUN_0041e3a0(param_1,(byte *)"POSIX");
              if (uVar1 != 0) {
                uVar1 = FUN_0041e3a0(param_1,(byte *)"GAMECONSOLE");
                if (uVar1 != 0) {
                  uVar1 = FUN_0041e3a0(param_1,&DAT_0043eec0);
                  if (uVar1 != 0) {
                    FUN_0041e3a0(param_1,(byte *)"LOWVIOLENCE");
                    piVar2 = (int *)KeyValuesSystem();
                    uVar3 = (**(code **)(*piVar2 + 0x20))(param_1);
                    return uVar3;
                  }
                }
              }
            }
          }
        }
      }
      return uVar1 & 0xffffff00;
    }
  }
  return CONCAT31((int3)(uVar1 >> 8),1);
}



uint __thiscall FUN_00424bf0(void *this,undefined *param_1,int *param_2,int *param_3,int *param_4)

{
  uint in_EAX;
  uint uVar1;
  int iVar2;
  uint uVar3;
  int *piVar4;
  code *pcVar5;
  int local_204 [128];
  
  if (param_2 == (int *)0x0) {
    return in_EAX & 0xffffff00;
  }
  if (*(char *)param_2 == '[') {
    uVar1 = FUN_0041e440((char *)param_2);
    if (0x200 < uVar1 + 1) {
      return uVar1 & 0xffffff00;
    }
    FUN_0041e1d0((char *)local_204,(int)param_2 + 1,uVar1);
    if (*(char *)((int)local_204 + (uVar1 - 2)) == ']') {
      *(undefined *)((int)local_204 + (uVar1 - 2)) = 0;
    }
    param_2 = local_204;
  }
  pcVar5 = FUN_00424b10;
  *(int **)((int)this + 8) = param_2;
  *(undefined4 *)this = 0;
  if (param_3 != (int *)0x0) {
    pcVar5 = (code *)param_3;
  }
  *(undefined4 *)((int)this + 0xc) = 0;
  *(code **)((int)this + 0x90) = pcVar5;
  pcVar5 = FUN_00424af0;
  if (param_4 != (int *)0x0) {
    pcVar5 = (code *)param_4;
  }
  *(undefined *)((int)this + 4) = 0;
  *(code **)((int)this + 0x94) = pcVar5;
  if (*(char *)param_2 == ' ') {
    iVar2 = 0;
    do {
      iVar2 = iVar2 + 1;
      *(int *)((int)this + 0xc) = iVar2;
    } while (*(char *)(iVar2 + (int)param_2) == ' ');
  }
  *(char *)((int)this + 4) = *(char *)(*(int *)((int)this + 0xc) + (int)param_2);
  *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
  uVar1 = FUN_00424e30(this,(int **)this);
  if ((char)(uVar1 & 0xff) != '\0') {
    uVar3 = FUN_004250f0((uint *)this);
    *param_1 = (char)uVar3;
  }
                    // WARNING: Load size is inaccurate
  piVar4 = *this;
  if (piVar4 != (int *)0x0) {
    FUN_00424d20(piVar4);
                    // WARNING: Load size is inaccurate
    FUN_00424d20((int *)(*this + 4));
                    // WARNING: Load size is inaccurate
    piVar4 = (int *)FUN_00403c10(*this);
    *(undefined4 *)this = 0;
  }
  *(undefined4 *)this = 0;
  return (uint)piVar4 & 0xffffff00 | uVar1 & 0xff;
}



void FUN_00424d20(int *param_1)

{
  if ((int *)*param_1 != (int *)0x0) {
    FUN_00424d20((int *)*param_1);
    FUN_00424d20((int *)(*param_1 + 4));
    FUN_00403c10(*param_1);
    *param_1 = 0;
  }
  return;
}



undefined4 __thiscall FUN_00424d60(void *this,char param_1)

{
  byte bVar1;
  uint uVar2;
  int iVar3;
  
  if (param_1 != '$') {
    uVar2 = ((uint)this & 0xffffff00 | (uint)(byte)param_1) - 0x30;
    if ((byte)uVar2 < 10) {
      *(char *)((int)this + 0x10) = param_1;
      iVar3 = 1;
      while( true ) {
        bVar1 = *(byte *)(*(uint *)((int)this + 8) + *(int *)((int)this + 0xc));
        uVar2 = (*(uint *)((int)this + 8) & 0xffffff00 | (uint)bVar1) - 0x30;
        if ((9 < (byte)uVar2) || (0x7f < iVar3)) break;
        *(byte *)((int)this + iVar3 + 0x10) = bVar1;
        *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
        iVar3 = iVar3 + 1;
      }
      if (iVar3 < 0x7f) {
        *(undefined *)(iVar3 + 0x10 + (int)this) = 0;
        return CONCAT31((int3)(uVar2 >> 8),1);
      }
    }
    return uVar2 & 0xffffff00;
  }
  *(undefined *)((int)this + 0x10) = 0x24;
  iVar3 = 1;
  while( true ) {
    uVar2 = _isalnum((uint)*(byte *)(*(int *)((int)this + 8) + *(int *)((int)this + 0xc)));
    if (((uVar2 == 0) &&
        (uVar2 = *(uint *)((int)this + 0xc), *(char *)(*(int *)((int)this + 8) + uVar2) != '_')) ||
       (0x7f < iVar3)) break;
    *(undefined *)((int)this + iVar3 + 0x10) =
         *(undefined *)(*(int *)((int)this + 8) + *(int *)((int)this + 0xc));
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
    iVar3 = iVar3 + 1;
  }
  if (iVar3 < 0x7f) {
    *(undefined *)(iVar3 + 0x10 + (int)this) = 0;
    return CONCAT31((int3)(uVar2 >> 8),1);
  }
  return uVar2 & 0xffffff00;
}



uint __thiscall FUN_00424e30(void *this,int **param_1)

{
  byte bVar1;
  byte bVar2;
  char cVar3;
  int *piVar4;
  uint uVar5;
  int **ppiVar6;
  int iVar7;
  int iVar8;
  undefined4 *puVar9;
  undefined4 *puVar10;
  char *pcVar11;
  undefined4 local_110 [67];
  
  uVar5 = FUN_00425060(this,param_1);
  if ((char)uVar5 == '\0') {
    return uVar5;
  }
  while ((bVar1 = *(byte *)((int)this + 4), bVar1 == 0x7c || (bVar1 == 0x26))) {
    bVar2 = *(byte *)(*(int *)((int)this + 0xc) + *(int *)((int)this + 8));
    uVar5 = *(int *)((int)this + 0xc) + 1;
    *(uint *)((int)this + 0xc) = uVar5;
    uVar5 = uVar5 & 0xffffff00;
    if ((bVar2 & bVar1) != bVar1) {
      if (*(int *)((int)this + 0x94) != 0) {
        iVar7 = (int)(char)bVar2;
        iVar8 = (int)(char)bVar1;
        puVar10 = local_110;
        pcVar11 = "Bad expression operator: \'%c%c\', expected C style operator";
        puVar9 = FUN_004017b0(puVar10,(byte *)
                                      "Bad expression operator: \'%c%c\', expected C style operator"
                             );
        uVar5 = (**(code **)((int)this + 0x94))((int)puVar9 + 5,puVar10,pcVar11,iVar8,iVar7);
        return uVar5 & 0xffffff00;
      }
      break;
    }
    piVar4 = *param_1;
    ppiVar6 = (int **)FUN_00403c30(0x10);
    *param_1 = (int *)ppiVar6;
    *ppiVar6 = piVar4;
    (*param_1)[1] = 0;
    (*param_1)[2] = 0;
    *(byte *)(*param_1 + 3) = bVar1;
    iVar7 = *(int *)((int)this + 0xc);
    iVar8 = *(int *)((int)this + 8);
    cVar3 = *(char *)(iVar8 + iVar7);
    while (cVar3 == ' ') {
      iVar7 = iVar7 + 1;
      *(int *)((int)this + 0xc) = iVar7;
      cVar3 = *(char *)(iVar8 + iVar7);
    }
    *(undefined *)((int)this + 4) = *(undefined *)(iVar8 + *(int *)((int)this + 0xc));
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
    uVar5 = FUN_00425060(this,(int **)(*param_1 + 1));
    if ((char)uVar5 == '\0') {
      return uVar5;
    }
  }
  return CONCAT31((int3)(uVar5 >> 8),1);
}



uint __thiscall FUN_00424f40(void *this,int *param_1)

{
  char cVar1;
  int iVar2;
  undefined uVar3;
  int iVar4;
  uint uVar5;
  undefined4 *puVar6;
  undefined4 *puVar7;
  char *pcVar8;
  undefined4 local_110 [67];
  
  if (*(char *)((int)this + 4) == '(') {
    iVar4 = *(int *)((int)this + 0xc);
    iVar2 = *(int *)((int)this + 8);
    cVar1 = *(char *)(iVar2 + iVar4);
    while (cVar1 == ' ') {
      iVar4 = iVar4 + 1;
      *(int *)((int)this + 0xc) = iVar4;
      cVar1 = *(char *)(iVar2 + iVar4);
    }
    *(undefined *)((int)this + 4) = *(undefined *)(iVar2 + *(int *)((int)this + 0xc));
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
    uVar5 = FUN_00424e30(this,(int **)param_1);
    if ((char)uVar5 == '\0') {
      return uVar5;
    }
  }
  else {
    uVar5 = FUN_00424d60(this,*(char *)((int)this + 4));
    if ((char)uVar5 == '\0') {
      uVar5 = uVar5 & 0xffffff00;
      if (*(char *)((int)this + 4) != '!') {
        if (*(int *)((int)this + 0x94) != 0) {
          iVar4 = (int)*(char *)((int)this + 4);
          puVar6 = local_110;
          pcVar8 = "Bad expression token: %c";
          puVar7 = FUN_004017b0(puVar6,(byte *)"Bad expression token: %c");
          uVar5 = (**(code **)((int)this + 0x94))((int)puVar7 + 5,puVar6,pcVar8,iVar4);
        }
        return uVar5 & 0xffffff00;
      }
      goto LAB_0042501a;
    }
    puVar6 = (undefined4 *)FUN_00403c30(0x10);
    *param_1 = (int)puVar6;
    *puVar6 = 0;
    *(undefined4 *)(*param_1 + 4) = 0;
    *(undefined4 *)(*param_1 + 8) = 2;
    if ((byte)(*(char *)((int)this + 0x10) - 0x30U) < 10) {
      iVar4 = FUN_00427f30((char *)((int)this + 0x10));
      *(bool *)(*param_1 + 0xc) = iVar4 != 0;
    }
    else {
      uVar3 = (**(code **)((int)this + 0x90))();
      *(undefined *)(*param_1 + 0xc) = uVar3;
    }
  }
  iVar4 = *(int *)((int)this + 0xc);
  iVar2 = *(int *)((int)this + 8);
  cVar1 = *(char *)(iVar2 + iVar4);
  while (cVar1 == ' ') {
    iVar4 = iVar4 + 1;
    *(int *)((int)this + 0xc) = iVar4;
    cVar1 = *(char *)(iVar2 + iVar4);
  }
  *(undefined *)((int)this + 4) = *(undefined *)(iVar2 + *(int *)((int)this + 0xc));
  uVar5 = *(int *)((int)this + 0xc) + 1;
  *(uint *)((int)this + 0xc) = uVar5;
LAB_0042501a:
  return CONCAT31((int3)(uVar5 >> 8),1);
}



uint __thiscall FUN_00425060(void *this,int **param_1)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  uint uVar4;
  int **ppiVar5;
  int iVar6;
  
  uVar4 = FUN_00424f40(this,(int *)param_1);
  if ((char)uVar4 == '\0') {
    return uVar4;
  }
  do {
    if (*(char *)((int)this + 4) != '!') {
      return CONCAT31((int3)(uVar4 >> 8),1);
    }
    piVar2 = *param_1;
    ppiVar5 = (int **)FUN_00403c30(0x10);
    *param_1 = (int *)ppiVar5;
    *ppiVar5 = piVar2;
    (*param_1)[1] = 0;
    (*param_1)[2] = 1;
    iVar6 = *(int *)((int)this + 0xc);
    iVar3 = *(int *)((int)this + 8);
    cVar1 = *(char *)(iVar3 + iVar6);
    while (cVar1 == ' ') {
      iVar6 = iVar6 + 1;
      *(int *)((int)this + 0xc) = iVar6;
      cVar1 = *(char *)(iVar3 + iVar6);
    }
    *(undefined *)((int)this + 4) = *(undefined *)(iVar3 + *(int *)((int)this + 0xc));
    *(int *)((int)this + 0xc) = *(int *)((int)this + 0xc) + 1;
    uVar4 = FUN_00424f40(this,*param_1 + 1);
  } while ((char)uVar4 != '\0');
  return uVar4;
}



uint FUN_004250f0(uint *param_1)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  bool bVar4;
  
  if ((uint *)*param_1 == (uint *)0x0) {
    return 0;
  }
  uVar2 = FUN_004250f0((uint *)*param_1);
  uVar3 = FUN_004250f0((uint *)(*param_1 + 4));
  uVar1 = *param_1;
  if (*(int *)(uVar1 + 8) == 0) {
    if (*(char *)(uVar1 + 0xc) == '&') {
      if ((char)uVar2 != '\0') {
joined_r0x00425163:
        if ((char)uVar3 != '\0') goto LAB_00425140;
      }
      bVar4 = false;
    }
    else {
      if ((char)uVar2 == '\0') goto joined_r0x00425163;
LAB_00425140:
      bVar4 = true;
    }
  }
  else {
    if (*(int *)(uVar1 + 8) != 1) goto LAB_00425148;
    bVar4 = (char)uVar3 == '\0';
  }
  *(bool *)(uVar1 + 0xc) = bVar4;
LAB_00425148:
  *(undefined4 *)(*param_1 + 8) = 2;
  return *param_1 & 0xffffff00 | (uint)*(byte *)(*param_1 + 0xc);
}



uint __fastcall FUN_00425170(byte *param_1)

{
  byte bVar1;
  uint uVar2;
  uint uVar3;
  
  uVar2 = 0;
  uVar3 = 0;
  bVar1 = *param_1;
  while (bVar1 != 0) {
    uVar2 = *(uint *)(&DAT_00447660 + (bVar1 ^ uVar3) * 4);
    if (param_1[1] == 0) break;
    uVar3 = *(uint *)(&DAT_00447660 + (param_1[1] ^ uVar2) * 4);
    bVar1 = param_1[2];
    param_1 = param_1 + 2;
  }
  return uVar2 << 8 | uVar3;
}



uint __fastcall FUN_004251b0(byte *param_1)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  
  uVar2 = 0;
  uVar3 = 0;
  uVar1 = _toupper((uint)*param_1);
  while (uVar1 != 0) {
    uVar3 = *(uint *)(&DAT_00447660 + (uVar1 ^ uVar2) * 4);
    uVar1 = _toupper((uint)param_1[1]);
    param_1 = param_1 + 2;
    if (uVar1 == 0) break;
    uVar2 = *(uint *)(&DAT_00447660 + (uVar1 ^ uVar3) * 4);
    uVar1 = _toupper((uint)*param_1);
  }
  return uVar3 << 8 | uVar2;
}



void FUN_00425220(void)

{
  int iVar1;
  
  if ((DAT_0044a850 != 0) && (DAT_00458413 == '\0')) {
    FUN_004252a0();
    DAT_00458413 = '\x01';
  }
  if ((DAT_0044a814 != (int *)0x0) && (DAT_00458412 == '\0')) {
    (**(code **)(*DAT_0044a814 + 0x24))(&DAT_00458408);
    DAT_00458412 = 1;
    for (iVar1 = DAT_00458430; iVar1 != 0; iVar1 = *(int *)(iVar1 + 0xc)) {
      (**(code **)(*DAT_0044a814 + 0x34))(iVar1);
    }
    return;
  }
  return;
}



void FUN_00425270(void)

{
  if ((DAT_0044a814 != (int *)0x0) && (DAT_00458412 != '\0')) {
    (**(code **)(*DAT_0044a814 + 0x28))(&DAT_00458408);
    DAT_00458412 = '\0';
  }
  return;
}



void FUN_004252a0(void)

{
  int iVar1;
  
  iVar1 = 0;
  do {
    (**(code **)(*DAT_0044a850 + 0x2c))((&DAT_00458414)[iVar1],iVar1);
    iVar1 = iVar1 + 1;
  } while (iVar1 < 5);
  return;
}



// Library Function - Single Match
//  __errcode
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

int __cdecl __errcode(uint param_1)

{
  int iStack8;
  
  if ((param_1 & 0x20) == 0) {
    if ((param_1 & 8) != 0) {
      return 1;
    }
    if ((param_1 & 4) == 0) {
      if ((param_1 & 1) == 0) {
        return (param_1 & 2) * 2;
      }
      iStack8 = 3;
    }
    else {
      iStack8 = 2;
    }
  }
  else {
    iStack8 = 5;
  }
  return iStack8;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __handle_exc
// 
// Library: Visual Studio 2019 Release

bool __cdecl __handle_exc(uint param_1,double *param_2,uint param_3)

{
  double dVar1;
  double dVar2;
  float10 fVar3;
  double dVar4;
  uint uVar5;
  int iVar6;
  uint uVar7;
  bool bVar8;
  float10 fVar9;
  float10 fVar10;
  uint local_10;
  byte bStack12;
  undefined uStack11;
  ushort uStack10;
  
  uVar5 = param_1;
  uVar7 = param_1 & 0x1f;
  if (((param_1 & 8) != 0) && ((param_3 & 1) != 0)) {
    __set_statfp(1);
    uVar7 = uVar5 & 0x17;
    goto LAB_004255aa;
  }
  if (((param_1 & 4) != 0) && ((param_3 & 4) != 0)) {
    __set_statfp(4);
    uVar7 = uVar5 & 0x1b;
    goto LAB_004255aa;
  }
  if (((param_1 & 1) == 0) || ((param_3 & 8) == 0)) {
    if (((param_1 & 2) != 0) && ((param_3 & 0x10) != 0)) {
      bVar8 = (param_1 & 0x10) != 0;
      if (*param_2 == 0.0) {
        bVar8 = true;
      }
      else {
        fVar9 = (float10)__decomp(SUB84(*param_2,0),(uint)((ulonglong)*param_2 >> 0x20),
                                  (int *)&param_1);
        param_1 = param_1 - 0x600;
        dVar2 = (double)fVar9;
        local_10 = SUB84(dVar2,0);
        bStack12 = (byte)((ulonglong)dVar2 >> 0x20);
        uStack11 = (undefined)((ulonglong)dVar2 >> 0x28);
        uStack10 = (ushort)((ulonglong)dVar2 >> 0x30);
        fVar3 = (float10)0;
        if ((int)param_1 < -0x432) {
          fVar10 = fVar3 * fVar9;
          bVar8 = true;
        }
        else {
          uStack10 = uStack10 & 0xf | 0x10;
          if ((int)param_1 < -0x3fd) {
            iVar6 = -0x3fd - param_1;
            do {
              if (((local_10 & 1) != 0) && (!bVar8)) {
                bVar8 = true;
              }
              local_10 = local_10 >> 1;
              if ((bStack12 & 1) != 0) {
                local_10 = local_10 | 0x80000000;
              }
              uVar7 = CONCAT22(uStack10,CONCAT11(uStack11,bStack12)) >> 1;
              bStack12 = (byte)uVar7;
              uStack11 = (undefined)(uVar7 >> 8);
              uStack10 = uStack10 >> 1;
              iVar6 = iVar6 + -1;
            } while (iVar6 != 0);
          }
          fVar10 = (float10)(double)CONCAT26(uStack10,CONCAT15(uStack11,CONCAT14(bStack12,local_10))
                                            );
          if ((ushort)((ushort)(fVar3 < fVar9) << 8 | (ushort)(fVar3 == fVar9) << 0xe) == 0) {
            fVar10 = -fVar10;
          }
        }
        *param_2 = (double)fVar10;
      }
      if (bVar8) {
        __set_statfp(0x10);
      }
      uVar7 = uVar5 & 0x1d;
    }
    goto LAB_004255aa;
  }
  __set_statfp(8);
  uVar7 = param_3 & 0xc00;
  dVar2 = _DAT_00447fb0;
  dVar4 = _DAT_00447fb0;
  if (uVar7 == 0) {
    dVar1 = *param_2;
joined_r0x00425490:
    if (dVar1 <= 0.0) {
      dVar2 = -dVar4;
    }
    *param_2 = dVar2;
  }
  else {
    if (uVar7 == 0x400) {
      dVar1 = *param_2;
      dVar2 = _DAT_00447fc0;
      goto joined_r0x00425490;
    }
    dVar4 = _DAT_00447fc0;
    if (uVar7 == 0x800) {
      dVar1 = *param_2;
      goto joined_r0x00425490;
    }
    if (uVar7 == 0xc00) {
      dVar1 = *param_2;
      dVar2 = _DAT_00447fc0;
      goto joined_r0x00425490;
    }
  }
  uVar7 = uVar5 & 0x1e;
LAB_004255aa:
  if (((uVar5 & 0x10) != 0) && ((param_3 & 0x20) != 0)) {
    __set_statfp(0x20);
    uVar7 = uVar7 & 0xffffffef;
  }
  return uVar7 == 0;
}



// Library Function - Single Match
//  __raise_exc
// 
// Library: Visual Studio 2019 Release

void __cdecl
__raise_exc(uint *param_1,uint *param_2,uint param_3,int param_4,undefined8 *param_5,
           undefined8 *param_6)

{
  FUN_004255ee(param_1,param_2,param_3,param_4,param_5,param_6,0);
  return;
}



void __cdecl
FUN_004255ee(uint *param_1,uint *param_2,uint param_3,int param_4,undefined8 *param_5,
            undefined8 *param_6,int param_7)

{
  uint *puVar1;
  undefined8 *puVar2;
  uint uVar3;
  DWORD dwExceptionCode;
  
  puVar1 = param_2;
  param_1[1] = 0;
  dwExceptionCode = 0xc000000d;
  param_1[2] = 0;
  param_1[3] = 0;
  if ((param_3 & 0x10) != 0) {
    dwExceptionCode = 0xc000008f;
    param_1[1] = param_1[1] | 1;
  }
  if ((param_3 & 2) != 0) {
    dwExceptionCode = 0xc0000093;
    param_1[1] = param_1[1] | 2;
  }
  if ((param_3 & 1) != 0) {
    dwExceptionCode = 0xc0000091;
    param_1[1] = param_1[1] | 4;
  }
  if ((param_3 & 4) != 0) {
    dwExceptionCode = 0xc000008e;
    param_1[1] = param_1[1] | 8;
  }
  if ((param_3 & 8) != 0) {
    dwExceptionCode = 0xc0000090;
    param_1[1] = param_1[1] | 0x10;
  }
  param_1[2] = param_1[2] ^ (~(*param_2 << 4) ^ param_1[2]) & 0x10;
  param_1[2] = param_1[2] ^ (~(*param_2 * 2) ^ param_1[2]) & 8;
  param_1[2] = param_1[2] ^ (~(*param_2 >> 1) ^ param_1[2]) & 4;
  param_1[2] = param_1[2] ^ (~(*param_2 >> 3) ^ param_1[2]) & 2;
  param_1[2] = param_1[2] ^ (~(*param_2 >> 5) ^ param_1[2]) & 1;
  uVar3 = FUN_0042989a();
  puVar2 = param_6;
  if ((uVar3 & 1) != 0) {
    param_1[3] = param_1[3] | 0x10;
  }
  if ((uVar3 & 4) != 0) {
    param_1[3] = param_1[3] | 8;
  }
  if ((uVar3 & 8) != 0) {
    param_1[3] = param_1[3] | 4;
  }
  if ((uVar3 & 0x10) != 0) {
    param_1[3] = param_1[3] | 2;
  }
  if ((uVar3 & 0x20) != 0) {
    param_1[3] = param_1[3] | 1;
  }
  uVar3 = *puVar1 & 0xc00;
  if (uVar3 == 0) {
    *param_1 = *param_1 & 0xfffffffc;
  }
  else {
    if (uVar3 == 0x400) {
      uVar3 = *param_1 & 0xfffffffd | 1;
    }
    else {
      if (uVar3 != 0x800) {
        if (uVar3 == 0xc00) {
          *param_1 = *param_1 | 3;
        }
        goto LAB_0042574e;
      }
      uVar3 = *param_1 & 0xfffffffe | 2;
    }
    *param_1 = uVar3;
  }
LAB_0042574e:
  uVar3 = *puVar1 & 0x300;
  if (uVar3 == 0) {
    uVar3 = *param_1 & 0xffffffeb | 8;
LAB_00425784:
    *param_1 = uVar3;
  }
  else {
    if (uVar3 == 0x200) {
      uVar3 = *param_1 & 0xffffffe7 | 4;
      goto LAB_00425784;
    }
    if (uVar3 == 0x300) {
      *param_1 = *param_1 & 0xffffffe3;
    }
  }
  *param_1 = *param_1 ^ (param_4 << 5 ^ *param_1) & 0x1ffe0;
  param_1[8] = param_1[8] | 1;
  if (param_7 == 0) {
    param_1[8] = param_1[8] & 0xffffffe3 | 2;
    *(undefined8 *)(param_1 + 4) = *param_5;
    param_1[0x18] = param_1[0x18] | 1;
    param_1[0x18] = param_1[0x18] & 0xffffffe3 | 2;
    *(undefined8 *)(param_1 + 0x14) = *param_6;
  }
  else {
    param_1[8] = param_1[8] & 0xffffffe1;
    param_1[4] = *(uint *)param_5;
    param_1[0x18] = param_1[0x18] | 1;
    param_1[0x18] = param_1[0x18] & 0xffffffe1;
    param_1[0x14] = *(uint *)param_6;
  }
  FUN_00429806();
  RaiseException(dwExceptionCode,0,1,(ULONG_PTR *)&param_1);
  if ((*(byte *)(param_1 + 2) & 0x10) != 0) {
    *puVar1 = *puVar1 & 0xfffffffe;
  }
  if ((*(byte *)(param_1 + 2) & 8) != 0) {
    *puVar1 = *puVar1 & 0xfffffffb;
  }
  if ((*(byte *)(param_1 + 2) & 4) != 0) {
    *puVar1 = *puVar1 & 0xfffffff7;
  }
  if ((*(byte *)(param_1 + 2) & 2) != 0) {
    *puVar1 = *puVar1 & 0xffffffef;
  }
  if ((*(byte *)(param_1 + 2) & 1) != 0) {
    *puVar1 = *puVar1 & 0xffffffdf;
  }
  uVar3 = *param_1 & 3;
  if (uVar3 == 0) {
    *puVar1 = *puVar1 & 0xfffff3ff;
  }
  else {
    if (uVar3 == 1) {
      uVar3 = *puVar1 & 0xfffff7ff | 0x400;
    }
    else {
      if (uVar3 != 2) {
        if (uVar3 == 3) {
          *puVar1 = *puVar1 | 0xc00;
        }
        goto LAB_0042588f;
      }
      uVar3 = *puVar1 & 0xfffffbff | 0x800;
    }
    *puVar1 = uVar3;
  }
LAB_0042588f:
  uVar3 = *param_1 >> 2 & 7;
  if (uVar3 == 0) {
    uVar3 = *puVar1 & 0xfffff3ff | 0x300;
  }
  else {
    if (uVar3 != 1) {
      if (uVar3 == 2) {
        *puVar1 = *puVar1 & 0xfffff3ff;
      }
      goto LAB_004258bc;
    }
    uVar3 = *puVar1 & 0xfffff3ff | 0x200;
  }
  *puVar1 = uVar3;
LAB_004258bc:
  if (param_7 == 0) {
    *puVar2 = *(undefined8 *)(param_1 + 0x14);
  }
  else {
    *(uint *)puVar2 = param_1[0x14];
  }
  return;
}



// Library Function - Single Match
//  __set_errno_from_matherr
// 
// Library: Visual Studio 2019 Release

void __cdecl __set_errno_from_matherr(int param_1)

{
  int *piVar1;
  
  if (param_1 == 1) {
    piVar1 = __errno();
    *piVar1 = 0x21;
  }
  else if (param_1 - 2U < 2) {
    piVar1 = __errno();
    *piVar1 = 0x22;
    return;
  }
  return;
}



// Library Function - Single Match
//  __umatherr
// 
// Library: Visual Studio 2019 Release

float10 __cdecl __umatherr(int param_1,int param_2)

{
  int iVar1;
  undefined *puVar2;
  undefined4 in_stack_0000001c;
  undefined4 in_stack_00000020;
  undefined4 in_stack_00000024;
  
  puVar2 = (undefined *)0x0;
  iVar1 = 0;
  do {
    if ((&DAT_00447a60)[iVar1 * 2] == param_2) {
      puVar2 = (&PTR_DAT_00447a64)[iVar1 * 2];
      break;
    }
    iVar1 = iVar1 + 1;
  } while (iVar1 < 0x1d);
  if (puVar2 == (undefined *)0x0) {
    __ctrlfp(in_stack_00000024,0xffff);
    __set_errno_from_matherr(param_1);
  }
  else {
    __ctrlfp(in_stack_00000024,0xffff);
    iVar1 = FUN_00408410();
    if (iVar1 == 0) {
      __set_errno_from_matherr(param_1);
    }
  }
  return (float10)(double)CONCAT44(in_stack_00000020,in_stack_0000001c);
}



void FUN_004259a0(void)

{
  code *pcVar1;
  
  pcVar1 = (code *)DecodePointer(DAT_00458494);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)();
  }
  FUN_004298b9(0,1);
  _abort();
  return;
}



PVOID __cdecl FUN_004259c2(PVOID param_1)

{
  PVOID pvVar1;
  
  pvVar1 = DecodePointer(DAT_00458494);
  DAT_00458494 = EncodePointer(param_1);
  return pvVar1;
}



// WARNING: Control flow encountered bad instruction data
// Library Function - Multiple Matches With Different Base Names
//  _memcpy
//  _memmove
// 
// Libraries: Visual Studio 2012 Debug, Visual Studio 2012 Release

void * __cdecl FID_conflict__memcpy(void *_Dst,void *_Src,size_t _Size)

{
  undefined8 uVar1;
  undefined auVar2 [32];
  undefined auVar3 [32];
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uVar11;
  undefined4 uVar12;
  undefined4 uVar13;
  undefined4 uVar14;
  undefined4 uVar15;
  int iVar16;
  undefined8 *puVar17;
  void *pvVar18;
  uint uVar19;
  uint uVar20;
  int iVar21;
  undefined8 *puVar22;
  undefined *puVar23;
  undefined4 *puVar24;
  undefined4 *puVar25;
  undefined4 uVar26;
  undefined4 uVar27;
  undefined4 uVar28;
  
  if ((_Src < _Dst) && (_Dst < (void *)(_Size + (int)_Src))) {
    puVar25 = (undefined4 *)((_Size - 4) + (int)_Src);
    puVar24 = (undefined4 *)((_Size - 4) + (int)_Dst);
    if (((uint)puVar24 & 3) == 0) {
      uVar19 = _Size >> 2;
      if (uVar19 < 8) goto LAB_00425da0;
      for (; uVar19 != 0; uVar19 = uVar19 - 1) {
        *puVar24 = *puVar25;
        puVar25 = puVar25 + -1;
        puVar24 = puVar24 + -1;
      }
      switch(_Size & 3) {
      case 1:
        goto switchD_00425dc4_caseD_1;
      case 2:
        goto switchD_00425dc4_caseD_2;
      case 3:
        goto switchD_00425dc4_caseD_3;
      }
    }
    else {
      switch(_Size) {
      case 0:
        break;
      case 1:
switchD_00425dc4_caseD_1:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        return _Dst;
      case 2:
switchD_00425dc4_caseD_2:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        return _Dst;
      case 3:
switchD_00425dc4_caseD_3:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
        return _Dst;
      default:
        uVar20 = _Size - ((uint)puVar24 & 3);
        switch((uint)puVar24 & 3) {
        case 1:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          puVar25 = (undefined4 *)((int)puVar25 + -1);
          uVar19 = uVar20 >> 2;
          puVar24 = (undefined4 *)((int)puVar24 - 1);
          if (uVar19 < 8) {
LAB_00425da0:
                    // WARNING: Could not recover jumptable at 0x00425da2. Too many branches
                    // WARNING: Treating indirect jump as call
            pvVar18 = (void *)(*(code *)(&PTR_LAB_00425e74)[-uVar19])();
            return pvVar18;
          }
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00425dc4_caseD_1;
          case 2:
            goto switchD_00425dc4_caseD_2;
          case 3:
            goto switchD_00425dc4_caseD_3;
          }
          break;
        case 2:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          puVar25 = (undefined4 *)((int)puVar25 + -2);
          puVar24 = (undefined4 *)((int)puVar24 - 2);
          if (uVar19 < 8) goto LAB_00425da0;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00425dc4_caseD_1;
          case 2:
            goto switchD_00425dc4_caseD_2;
          case 3:
            goto switchD_00425dc4_caseD_3;
          }
          break;
        case 3:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
          puVar25 = (undefined4 *)((int)puVar25 + -3);
          puVar24 = (undefined4 *)((int)puVar24 - 3);
          if (uVar19 < 8) goto LAB_00425da0;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00425dc4_caseD_1;
          case 2:
            goto switchD_00425dc4_caseD_2;
          case 3:
            goto switchD_00425dc4_caseD_3;
          }
        }
      }
    }
    return _Dst;
  }
  puVar23 = (undefined *)_Dst;
  if ((DAT_0045849c >> 1 & 1) != 0) {
                    // WARNING: Load size is inaccurate
    for (; _Size != 0; _Size = _Size - 1) {
      *puVar23 = *_Src;
      _Src = (undefined *)((int)_Src + 1);
      puVar23 = puVar23 + 1;
    }
    return _Dst;
  }
  puVar25 = (undefined4 *)_Dst;
  if (_Size < 0x80) {
LAB_00425bfb:
    if (((uint)_Dst & 3) != 0) {
LAB_00425c18:
      switch(_Size) {
      case 0:
        return _Dst;
      case 1:
        break;
      case 2:
        goto switchD_00425c30_caseD_2;
      case 3:
        goto switchD_00425c30_caseD_3;
      default:
        uVar20 = (_Size - 4) + ((uint)_Dst & 3);
        switch((uint)_Dst & 3) {
        case 0:
                    // WARNING: Bad instruction - Truncating control flow here
          halt_baddata();
        case 1:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 2) = *(undefined *)((int)_Src + 2);
          _Src = (undefined4 *)((int)_Src + 3);
          puVar25 = (undefined4 *)((int)_Dst + 3);
          if (7 < uVar19) {
                    // WARNING: Load size is inaccurate
            for (; uVar19 != 0; uVar19 = uVar19 - 1) {
              *puVar25 = *_Src;
              _Src = (undefined4 *)((int)_Src + 4);
              puVar25 = puVar25 + 1;
            }
            switch(uVar20 & 3) {
            case 0:
              return _Dst;
            case 2:
              goto switchD_00425c30_caseD_2;
            case 3:
              goto switchD_00425c30_caseD_3;
            }
            break;
          }
          goto LAB_00425c38;
        case 2:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          _Src = (undefined4 *)((int)_Src + 2);
          puVar25 = (undefined4 *)((int)_Dst + 2);
          if (uVar19 < 8) goto LAB_00425c38;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_00425c30_caseD_2;
          case 3:
            goto switchD_00425c30_caseD_3;
          }
          break;
        case 3:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          _Src = (undefined4 *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)_Dst + 1);
          if (uVar19 < 8) goto LAB_00425c38;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_00425c30_caseD_2;
          case 3:
            goto switchD_00425c30_caseD_3;
          }
        }
      }
      goto switchD_00425c30_caseD_1;
    }
  }
  else {
    if (((((uint)_Dst ^ (uint)_Src) & 0xf) == 0) && ((DAT_00448004 >> 1 & 1) != 0)) {
      if (((uint)_Src & 0xf) != 0) {
        uVar19 = 0x10 - ((uint)_Src & 0xf);
        _Size = _Size - uVar19;
        for (uVar20 = uVar19 & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          *(undefined *)puVar25 = *_Src;
          _Src = (void *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)puVar25 + 1);
        }
        for (uVar19 = uVar19 >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {
                    // WARNING: Load size is inaccurate
          *puVar25 = *_Src;
          _Src = (void *)((int)_Src + 4);
          puVar25 = puVar25 + 1;
        }
      }
      for (uVar20 = _Size >> 7; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
        uVar26 = *(undefined4 *)((int)_Src + 4);
        uVar27 = *(undefined4 *)((int)_Src + 8);
        uVar28 = *(undefined4 *)((int)_Src + 0xc);
        uVar4 = *(undefined4 *)((int)_Src + 0x10);
        uVar5 = *(undefined4 *)((int)_Src + 0x14);
        uVar6 = *(undefined4 *)((int)_Src + 0x18);
        uVar7 = *(undefined4 *)((int)_Src + 0x1c);
        uVar8 = *(undefined4 *)((int)_Src + 0x20);
        uVar9 = *(undefined4 *)((int)_Src + 0x24);
        uVar10 = *(undefined4 *)((int)_Src + 0x28);
        uVar11 = *(undefined4 *)((int)_Src + 0x2c);
        uVar12 = *(undefined4 *)((int)_Src + 0x30);
        uVar13 = *(undefined4 *)((int)_Src + 0x34);
        uVar14 = *(undefined4 *)((int)_Src + 0x38);
        uVar15 = *(undefined4 *)((int)_Src + 0x3c);
        *puVar25 = *_Src;
        puVar25[1] = uVar26;
        puVar25[2] = uVar27;
        puVar25[3] = uVar28;
        puVar25[4] = uVar4;
        puVar25[5] = uVar5;
        puVar25[6] = uVar6;
        puVar25[7] = uVar7;
        puVar25[8] = uVar8;
        puVar25[9] = uVar9;
        puVar25[10] = uVar10;
        puVar25[0xb] = uVar11;
        puVar25[0xc] = uVar12;
        puVar25[0xd] = uVar13;
        puVar25[0xe] = uVar14;
        puVar25[0xf] = uVar15;
        uVar26 = *(undefined4 *)((int)_Src + 0x44);
        uVar27 = *(undefined4 *)((int)_Src + 0x48);
        uVar28 = *(undefined4 *)((int)_Src + 0x4c);
        uVar4 = *(undefined4 *)((int)_Src + 0x50);
        uVar5 = *(undefined4 *)((int)_Src + 0x54);
        uVar6 = *(undefined4 *)((int)_Src + 0x58);
        uVar7 = *(undefined4 *)((int)_Src + 0x5c);
        uVar8 = *(undefined4 *)((int)_Src + 0x60);
        uVar9 = *(undefined4 *)((int)_Src + 100);
        uVar10 = *(undefined4 *)((int)_Src + 0x68);
        uVar11 = *(undefined4 *)((int)_Src + 0x6c);
        uVar12 = *(undefined4 *)((int)_Src + 0x70);
        uVar13 = *(undefined4 *)((int)_Src + 0x74);
        uVar14 = *(undefined4 *)((int)_Src + 0x78);
        uVar15 = *(undefined4 *)((int)_Src + 0x7c);
        puVar25[0x10] = *(undefined4 *)((int)_Src + 0x40);
        puVar25[0x11] = uVar26;
        puVar25[0x12] = uVar27;
        puVar25[0x13] = uVar28;
        puVar25[0x14] = uVar4;
        puVar25[0x15] = uVar5;
        puVar25[0x16] = uVar6;
        puVar25[0x17] = uVar7;
        puVar25[0x18] = uVar8;
        puVar25[0x19] = uVar9;
        puVar25[0x1a] = uVar10;
        puVar25[0x1b] = uVar11;
        puVar25[0x1c] = uVar12;
        puVar25[0x1d] = uVar13;
        puVar25[0x1e] = uVar14;
        puVar25[0x1f] = uVar15;
        _Src = (void *)((int)_Src + 0x80);
        puVar25 = puVar25 + 0x20;
      }
      if ((_Size & 0x7f) != 0) {
        for (uVar20 = (_Size & 0x7f) >> 4; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          uVar26 = *(undefined4 *)((int)_Src + 4);
          uVar27 = *(undefined4 *)((int)_Src + 8);
          uVar28 = *(undefined4 *)((int)_Src + 0xc);
          *puVar25 = *_Src;
          puVar25[1] = uVar26;
          puVar25[2] = uVar27;
          puVar25[3] = uVar28;
          _Src = (void *)((int)_Src + 0x10);
          puVar25 = puVar25 + 4;
        }
        if ((_Size & 0xf) != 0) {
          for (uVar20 = (_Size & 0xf) >> 2; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *puVar25 = *_Src;
            _Src = (void *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          for (uVar20 = _Size & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *(undefined *)puVar25 = *_Src;
            _Src = (void *)((int)_Src + 1);
            puVar25 = (undefined4 *)((int)puVar25 + 1);
          }
        }
      }
      return _Dst;
    }
    if ((DAT_0045849c & 1) == 0) goto LAB_00425bfb;
    if (((uint)_Dst & 3) != 0) goto LAB_00425c18;
    if (((uint)_Src & 3) == 0) {
      if (((uint)_Dst >> 2 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar26 = *_Src;
        _Size = _Size - 4;
        _Src = (void *)((int)_Src + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if (((uint)_Dst >> 3 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar1 = *_Src;
        _Size = _Size - 8;
        _Src = (void *)((int)_Src + 8);
        *(undefined8 *)_Dst = uVar1;
        _Dst = (void *)((int)_Dst + 8);
      }
      if (((uint)_Src & 7) == 0) {
                    // WARNING: Load size is inaccurate
        puVar17 = (undefined8 *)((int)_Src + -8);
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        do {
          puVar22 = puVar17;
          uVar5 = *(undefined4 *)(puVar22 + 4);
          uVar6 = *(undefined4 *)((int)puVar22 + 0x24);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(puVar22 + 2);
          uVar28 = *(undefined4 *)(puVar22 + 7);
          uVar4 = *(undefined4 *)((int)puVar22 + 0x3c);
          auVar3 = *(undefined (*) [32])(puVar22 + 4);
          *(undefined4 *)((int)_Dst + 8) = uVar26;
          *(undefined4 *)((int)_Dst + 0xc) = uVar27;
          *(undefined4 *)((int)_Dst + 0x10) = uVar5;
          *(undefined4 *)((int)_Dst + 0x14) = uVar6;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x40,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x40,0);
          _Dst = (void *)((int)_Dst + 0x30);
          puVar17 = puVar22 + 6;
          uVar26 = uVar28;
          uVar27 = uVar4;
        } while (0x2f < (int)_Size);
        puVar22 = puVar22 + 7;
      }
      else if (((uint)_Src >> 3 & 1) == 0) {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -4;
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        uVar28 = *(undefined4 *)((int)_Src + 8);
        do {
          iVar21 = iVar16;
          uVar7 = *(undefined4 *)(iVar21 + 0x20);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar4 = *(undefined4 *)(iVar21 + 0x34);
          uVar5 = *(undefined4 *)(iVar21 + 0x38);
          uVar6 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 4) = uVar26;
          *(undefined4 *)((int)_Dst + 8) = uVar27;
          *(undefined4 *)((int)_Dst + 0xc) = uVar28;
          *(undefined4 *)((int)_Dst + 0x10) = uVar7;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x20,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x20,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar4;
          uVar27 = uVar5;
          uVar28 = uVar6;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x34);
      }
      else {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -0xc;
        uVar26 = *_Src;
        do {
          iVar21 = iVar16;
          uVar28 = *(undefined4 *)(iVar21 + 0x20);
          uVar4 = *(undefined4 *)(iVar21 + 0x24);
          uVar5 = *(undefined4 *)(iVar21 + 0x28);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar27 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 0xc) = uVar26;
          *(undefined4 *)((int)_Dst + 0x10) = uVar28;
          *(undefined4 *)((int)_Dst + 0x14) = uVar4;
          *(undefined4 *)((int)_Dst + 0x18) = uVar5;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x60,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x60,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar27;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x3c);
      }
      for (; 0xf < (int)_Size; _Size = _Size - 0x10) {
        uVar26 = *(undefined4 *)puVar22;
        uVar27 = *(undefined4 *)((int)puVar22 + 4);
        uVar28 = *(undefined4 *)(puVar22 + 1);
        uVar4 = *(undefined4 *)((int)puVar22 + 0xc);
        puVar22 = puVar22 + 2;
        *(undefined4 *)_Dst = uVar26;
        *(undefined4 *)((int)_Dst + 4) = uVar27;
        *(undefined4 *)((int)_Dst + 8) = uVar28;
        *(undefined4 *)((int)_Dst + 0xc) = uVar4;
        _Dst = (void *)((int)_Dst + 0x10);
      }
      if ((_Size >> 2 & 1) != 0) {
        uVar26 = *(undefined4 *)puVar22;
        _Size = _Size - 4;
        puVar22 = (undefined8 *)((int)puVar22 + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if ((_Size >> 3 & 1) != 0) {
        _Size = _Size - 8;
        *(undefined8 *)_Dst = *puVar22;
      }
                    // WARNING: Could not recover jumptable at 0x00425bf9. Too many branches
                    // WARNING: Treating indirect jump as call
      pvVar18 = (void *)(*(code *)(&switchD_00425c30::switchdataD_00425d28)[_Size])();
      return pvVar18;
    }
  }
  uVar19 = _Size >> 2;
  if (uVar19 < 8) {
LAB_00425c38:
                    // WARNING: Could not recover jumptable at 0x00425c38. Too many branches
                    // WARNING: Treating indirect jump as call
    pvVar18 = (void *)(*(code *)(&PTR_LAB_00425cbc)[uVar19])();
    return pvVar18;
  }
                    // WARNING: Load size is inaccurate
  for (; uVar19 != 0; uVar19 = uVar19 - 1) {
    *puVar25 = *_Src;
    _Src = (undefined4 *)((int)_Src + 4);
    puVar25 = puVar25 + 1;
  }
  switch(_Size & 3) {
  case 0:
    return _Dst;
  case 2:
switchD_00425c30_caseD_2:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    return _Dst;
  case 3:
switchD_00425c30_caseD_3:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    *(undefined *)((int)puVar25 + 2) = *(undefined *)((int)_Src + 2);
    return _Dst;
  }
switchD_00425c30_caseD_1:
                    // WARNING: Load size is inaccurate
  *(undefined *)puVar25 = *_Src;
  return _Dst;
}



void __fastcall FUN_00425cdc(int param_1,int param_2)

{
  int unaff_ESI;
  int unaff_EDI;
  
  *(undefined4 *)(unaff_EDI + -0x1c + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x1c + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x18 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x18 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x14 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x14 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x10 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x10 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0xc + param_1 * 4) = *(undefined4 *)(unaff_ESI + -0xc + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -8 + param_1 * 4) = *(undefined4 *)(unaff_ESI + -8 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -4 + param_1 * 4) = *(undefined4 *)(unaff_ESI + -4 + param_1 * 4);
                    // WARNING: Could not recover jumptable at 0x00425d1f. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)(&switchD_00425c30::switchdataD_00425d28)[param_2])();
  return;
}



void __fastcall FUN_00425e78(int param_1,int param_2)

{
  int unaff_ESI;
  int unaff_EDI;
  
  *(undefined4 *)(unaff_EDI + 0x1c + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x1c + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x18 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x18 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x14 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x14 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x10 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x10 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0xc + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0xc + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 8 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 8 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 4 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 4 + param_1 * 4);
                    // WARNING: Could not recover jumptable at 0x00425ebb. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)(&switchD_00425dc4::switchdataD_00425ec4)[param_2])();
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

int __cdecl FUN_00426034(uint **param_1,rsize_t *param_2,char *param_3)

{
  rsize_t _SizeInBytes;
  int *piVar1;
  char *_Str;
  size_t sVar2;
  uint *_Dst;
  errno_t eVar3;
  int iVar4;
  
  iVar4 = 0;
  __lock(7);
  if (param_1 != (uint **)0x0) {
    *param_1 = (uint *)0x0;
    if (param_2 != (rsize_t *)0x0) {
      *param_2 = 0;
    }
    if (param_3 != (char *)0x0) {
      _Str = __getenv_helper_nolock(param_3);
      if (_Str != (char *)0x0) {
        sVar2 = _strlen(_Str);
        _SizeInBytes = sVar2 + 1;
        _Dst = FUN_00403d40(_SizeInBytes,1);
        *param_1 = _Dst;
        if (_Dst == (uint *)0x0) {
          piVar1 = __errno();
          *piVar1 = 0xc;
          piVar1 = __errno();
          iVar4 = *piVar1;
        }
        else {
          eVar3 = _strcpy_s((char *)_Dst,_SizeInBytes,_Str);
          if (eVar3 != 0) {
            __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
            iVar4 = FUN_00429e85(7);
            return iVar4;
          }
          if (param_2 != (rsize_t *)0x0) {
            *param_2 = _SizeInBytes;
          }
        }
      }
      goto LAB_004260de;
    }
  }
  piVar1 = __errno();
  iVar4 = 0x16;
  *piVar1 = 0x16;
  FUN_00429bfe();
LAB_004260de:
  FUN_00426102();
  return iVar4;
}



void FUN_00426102(void)

{
  FUN_00429e85(7);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __getenv_helper_nolock
// 
// Library: Visual Studio 2012 Release

char * __cdecl __getenv_helper_nolock(char *param_1)

{
  int iVar1;
  size_t _MaxCount;
  size_t sVar2;
  uchar **ppuVar3;
  
  if (((_DAT_004592c0 != 0) &&
      ((DAT_0045845c != (uchar **)0x0 ||
       (((DAT_00458460 != 0 && (iVar1 = FUN_00429e9a(), iVar1 == 0)) &&
        (DAT_0045845c != (uchar **)0x0)))))) && (ppuVar3 = DAT_0045845c, param_1 != (char *)0x0)) {
    _MaxCount = _strlen(param_1);
    for (; *ppuVar3 != (uchar *)0x0; ppuVar3 = ppuVar3 + 1) {
      sVar2 = _strlen((char *)*ppuVar3);
      if (((_MaxCount < sVar2) && ((*ppuVar3)[_MaxCount] == '=')) &&
         (iVar1 = __mbsnbicoll(*ppuVar3,(uchar *)param_1,_MaxCount), iVar1 == 0)) {
        return (char *)(*ppuVar3 + _MaxCount + 1);
      }
    }
  }
  return (char *)0x0;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

char * __cdecl FUN_0042618f(char *param_1)

{
  int *piVar1;
  size_t sVar2;
  char *pcVar3;
  
  if ((param_1 != (char *)0x0) && (sVar2 = _strnlen(param_1,0x7fff), sVar2 < 0x7fff)) {
    __lock(7);
    pcVar3 = __getenv_helper_nolock(param_1);
    FUN_00426206();
    return pcVar3;
  }
  piVar1 = __errno();
  *piVar1 = 0x16;
  FUN_00429bfe();
  return (char *)0x0;
}



void FUN_00426206(void)

{
  FUN_00429e85(7);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_0042620f(byte *param_1)

{
  undefined4 uVar1;
  
  __lock(7);
  uVar1 = FUN_0042625b(param_1,(char *)0x0);
  FUN_00426252();
  return uVar1;
}



void FUN_00426252(void)

{
  FUN_00429e85(7);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 __cdecl FUN_0042625b(byte *param_1,char *param_2)

{
  uint *puVar1;
  int *piVar2;
  int iVar3;
  size_t sVar4;
  int iVar5;
  uint *local_c;
  uint *local_8;
  
  local_c = (uint *)0x0;
  if (_DAT_004592c0 == 0) {
    return 0xffffffff;
  }
  if (param_1 == (byte *)0x0) {
    piVar2 = __errno();
    *piVar2 = 0x16;
    FUN_00429bfe();
    return 0xffffffff;
  }
  if (param_2 == (char *)0x0) {
    iVar3 = FUN_0042a83d(param_1,0x3d);
    if ((iVar3 != 0) &&
       ((0x7ffe < iVar3 - (int)param_1 ||
        (sVar4 = _strnlen((char *)(iVar3 + 1),0x7fff), 0x7ffe < sVar4)))) {
LAB_00426315:
      piVar2 = __errno();
      *piVar2 = 0x16;
      FUN_00429bfe();
      return 0xffffffff;
    }
    sVar4 = _strlen((char *)param_1);
    local_c = FUN_00403d40(sVar4 + 1,1);
    if (local_c == (uint *)0x0) {
      return 0xffffffff;
    }
    _strcpy_s((char *)local_c,sVar4 + 1,(char *)param_1);
  }
  else {
    local_8 = (uint *)_strnlen((char *)param_1,0x7fff);
    sVar4 = _strnlen(param_2,0x7fff);
    puVar1 = local_8;
    if (((uint *)0x7ffe < local_8) || (0x7ffe < sVar4)) goto LAB_00426315;
    local_8 = (uint *)(sVar4 + 2 + (int)local_8);
    local_c = FUN_00403d40((int)local_8,1);
    if (local_c == (uint *)0x0) {
      return 0xffffffff;
    }
    _strcpy_s((char *)local_c,(rsize_t)local_8,(char *)param_1);
    *(undefined *)((int)puVar1 + (int)local_c) = 0x3d;
    iVar3 = (int)puVar1 + 1;
    _strcpy_s((char *)((int)local_c + iVar3),(int)local_8 - iVar3,param_2);
  }
  iVar3 = FUN_0042a20d((byte **)&local_c,1);
  puVar1 = local_c;
  if (iVar3 != 0) goto joined_r0x00426386;
  if (DAT_00458460 == 0) {
    return 0;
  }
  local_8 = (uint *)0x0;
  iVar3 = MultiByteToWideChar(0,0,(LPCSTR)param_1,-1,(LPWSTR)0x0,0);
  if (iVar3 == 0) goto LAB_00426431;
  if (param_2 != (char *)0x0) {
    iVar5 = MultiByteToWideChar(0,0,param_2,-1,(LPWSTR)0x0,0);
    if (iVar5 == 0) goto LAB_00426431;
    iVar3 = iVar3 + 1 + iVar5;
  }
  local_8 = FUN_00403d40(iVar3,2);
  if (local_8 == (uint *)0x0) {
    return 0xffffffff;
  }
  iVar5 = MultiByteToWideChar(0,0,(LPCSTR)param_1,-1,(LPWSTR)local_8,iVar3);
  if (iVar5 == 0) {
LAB_00426428:
    FUN_00403c10(local_8);
LAB_00426431:
    piVar2 = __errno();
    *piVar2 = 0x2a;
    return 0xffffffff;
  }
  if (param_2 != (char *)0x0) {
    sVar4 = _wcslen((wchar_t *)local_8);
    *(undefined2 *)((int)local_8 + sVar4 * 2) = 0x3d;
    iVar3 = MultiByteToWideChar(0,0,param_2,-1,(LPWSTR)((int)local_8 + (sVar4 + 1) * 2),
                                iVar3 - (sVar4 + 1));
    if (iVar3 == 0) goto LAB_00426428;
  }
  iVar3 = FUN_0042a510((LPCWSTR *)&local_8,0);
  puVar1 = local_8;
  if (iVar3 == 0) {
    return 0;
  }
joined_r0x00426386:
  if (puVar1 == (uint *)0x0) {
    return 0xffffffff;
  }
  FUN_00403c10(puVar1);
  return 0xffffffff;
}



void __cdecl FUN_0042646c(uint *param_1,DWORD param_2)

{
  FUN_00426481(0,param_1,param_2);
  return;
}



uint * __cdecl FUN_00426481(uint param_1,uint *param_2,DWORD param_3)

{
  int iVar1;
  ulong *puVar2;
  int *piVar3;
  uint uVar4;
  DWORD DVar5;
  uint *puVar6;
  DWORD DVar7;
  LPSTR local_c;
  DWORD local_8;
  
  uVar4 = param_1;
  if (param_1 == 0) {
    uVar4 = FUN_0042a8ef();
  }
  else {
    iVar1 = is_valid_drive(param_1);
    if (iVar1 == 0) {
      puVar2 = ___doserrno();
      *puVar2 = 0xf;
      piVar3 = __errno();
      *piVar3 = 0xd;
      FUN_00429bfe();
      return (uint *)0x0;
    }
  }
  DVar7 = param_3;
  puVar6 = param_2;
  if (param_2 == (uint *)0x0) {
    local_8 = 0;
  }
  else {
    if ((int)param_3 < 1) {
      piVar3 = __errno();
      *piVar3 = 0x16;
      FUN_00429bfe();
      return (uint *)0x0;
    }
    local_8 = param_3;
    *(undefined *)param_2 = 0;
  }
  if (uVar4 == 0) {
    param_1 = CONCAT22(param_1._2_2_,0x2e);
  }
  else {
    param_1 = CONCAT31(0x2e3a,(char)uVar4 + '@');
  }
  DVar5 = GetFullPathNameA((LPCSTR)&param_1,local_8,(LPSTR)param_2,&local_c);
  if (DVar5 != 0) {
    if (puVar6 != (uint *)0x0) {
      if ((int)local_8 <= (int)DVar5) {
        piVar3 = __errno();
        *piVar3 = 0x22;
        *(undefined *)puVar6 = 0;
        return (uint *)0x0;
      }
      return puVar6;
    }
    if ((int)DVar7 < (int)DVar5) {
      DVar7 = DVar5;
    }
    puVar6 = FUN_00403d40(DVar7,1);
    if (puVar6 == (uint *)0x0) {
      piVar3 = __errno();
      *piVar3 = 0xc;
      puVar2 = ___doserrno();
      *puVar2 = 8;
      return (uint *)0x0;
    }
    DVar5 = GetFullPathNameA((LPCSTR)&param_1,DVar7,(LPSTR)puVar6,&local_c);
    if ((DVar5 != 0) && ((int)DVar5 < (int)DVar7)) {
      return puVar6;
    }
  }
  DVar7 = GetLastError();
  FID_conflict___dosmaperr(DVar7);
  return (uint *)0x0;
}



// Library Function - Single Match
//  int __cdecl is_valid_drive(unsigned int)
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release

int __cdecl is_valid_drive(uint param_1)

{
  uint uVar1;
  ulong *puVar2;
  int *piVar3;
  int iVar4;
  undefined in_DL;
  undefined extraout_DL;
  undefined extraout_DL_00;
  char in_stack_fffffff0;
  
  uVar1 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  if (param_1 < 0x1b) {
    if (param_1 != 0) {
      in_stack_fffffff0 = (char)param_1 + '@';
      GetDriveTypeW((LPCWSTR)&stack0xfffffff0);
      in_DL = extraout_DL_00;
    }
  }
  else {
    puVar2 = ___doserrno();
    *puVar2 = 0xf;
    piVar3 = __errno();
    *piVar3 = 0xd;
    FUN_00429bfe();
    in_DL = extraout_DL;
  }
  iVar4 = FUN_004298aa(uVar1 ^ (uint)&stack0xfffffffc,in_DL,in_stack_fffffff0);
  return iVar4;
}



int __cdecl FUN_00426619(LPCSTR param_1,uint param_2)

{
  int iVar1;
  int *piVar2;
  LPCWSTR local_8;
  
  local_8 = (LPCWSTR)0x0;
  if ((param_1 == (LPCSTR)0x0) || (iVar1 = FUN_00427900(param_1,&local_8), iVar1 != 0)) {
    iVar1 = FUN_0042a9be(local_8,param_2);
    FUN_00403c10(local_8);
  }
  else {
    piVar2 = __errno();
    iVar1 = *piVar2;
  }
  return iVar1;
}



// Library Function - Single Match
//  __spawnv
// 
// Library: Visual Studio 2012 Release

intptr_t __cdecl __spawnv(int _Mode,char *_Filename,char **_ArgList)

{
  int *piVar1;
  HANDLE pvVar2;
  
  if ((((_Filename != (char *)0x0) && (*_Filename != '\0')) && (_ArgList != (char **)0x0)) &&
     ((*_ArgList != (char *)0x0 && (**_ArgList != '\0')))) {
    pvVar2 = FUN_0042aa5c(_Mode,(uint *)_Filename,_ArgList,(byte **)0x0);
    return (intptr_t)pvVar2;
  }
  piVar1 = __errno();
  *piVar1 = 0x16;
  FUN_00429bfe();
  return -1;
}



// Library Function - Single Match
//  __fclose_nolock
// 
// Library: Visual Studio 2012 Release

int __cdecl __fclose_nolock(FILE *_File)

{
  int *piVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = -1;
  if (_File == (FILE *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    iVar4 = -1;
  }
  else {
    if ((*(byte *)&_File->_flag & 0x83) != 0) {
      iVar4 = FUN_0042aeca(_File);
      __freebuf(_File);
      uVar2 = __fileno(_File);
      iVar3 = FUN_0042acdf(uVar2);
      if (iVar3 < 0) {
        iVar4 = -1;
      }
      else if (_File->_tmpfname != (char *)0x0) {
        FUN_00403c10(_File->_tmpfname);
        _File->_tmpfname = (char *)0x0;
      }
    }
    _File->_flag = 0;
  }
  return iVar4;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

int __cdecl FUN_00426716(FILE *param_1)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = -1;
  if (param_1 == (FILE *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
  }
  else if ((*(byte *)&param_1->_flag & 0x40) == 0) {
    __lock_file(param_1);
    iVar2 = __fclose_nolock(param_1);
    FUN_00426785();
  }
  else {
    param_1->_flag = 0;
  }
  return iVar2;
}



void FUN_00426785(void)

{
  FILE *unaff_ESI;
  
  __unlock_file(unaff_ESI);
  return;
}



undefined4 __cdecl FUN_0042678d(char *param_1,byte *param_2)

{
  int *piVar1;
  undefined4 uVar2;
  int iVar3;
  char **ppcVar4;
  FILE local_24;
  
  local_24._ptr = (char *)0x0;
  ppcVar4 = (char **)&local_24._cnt;
  for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {
    *ppcVar4 = (char *)0x0;
    ppcVar4 = ppcVar4 + 1;
  }
  if ((param_2 == (byte *)0x0) || (param_1 == (char *)0x0)) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar2 = 0xffffffff;
  }
  else {
    local_24._base = param_1;
    local_24._ptr = param_1;
    local_24._cnt = 0x7fffffff;
    local_24._flag = 0x42;
    uVar2 = FUN_0042c0aa(&local_24,param_2,(pthreadlocinfo *)0x0,(int **)&stack0x0000000c);
    local_24._cnt = local_24._cnt + -1;
    if (local_24._cnt < 0) {
      FUN_0042bf5b(0,&local_24);
    }
    else {
      *local_24._ptr = '\0';
    }
  }
  return uVar2;
}



// WARNING: This is an inlined function
// Library Function - Single Match
//  __chkstk
// 
// Library: Visual Studio

void __alloca_probe(void)

{
  undefined *in_EAX;
  undefined4 *puVar1;
  undefined4 *puVar2;
  undefined4 unaff_retaddr;
  undefined auStack4 [4];
  
  puVar2 = (undefined4 *)((int)&stack0x00000000 - (int)in_EAX & ~-(uint)(&stack0x00000000 < in_EAX))
  ;
  for (puVar1 = (undefined4 *)((uint)auStack4 & 0xfffff000); puVar2 < puVar1;
      puVar1 = puVar1 + -0x400) {
  }
  *puVar2 = unaff_retaddr;
  return;
}



// WARNING: Control flow encountered bad instruction data
// Library Function - Multiple Matches With Different Base Names
//  _memcpy
//  _memmove
// 
// Libraries: Visual Studio 2012 Debug, Visual Studio 2012 Release

void * __cdecl FID_conflict__memcpy(void *_Dst,void *_Src,size_t _Size)

{
  undefined8 uVar1;
  undefined auVar2 [32];
  undefined auVar3 [32];
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uVar11;
  undefined4 uVar12;
  undefined4 uVar13;
  undefined4 uVar14;
  undefined4 uVar15;
  int iVar16;
  undefined8 *puVar17;
  void *pvVar18;
  uint uVar19;
  uint uVar20;
  int iVar21;
  undefined8 *puVar22;
  undefined *puVar23;
  undefined4 *puVar24;
  undefined4 *puVar25;
  undefined4 uVar26;
  undefined4 uVar27;
  undefined4 uVar28;
  
  if ((_Src < _Dst) && (_Dst < (void *)(_Size + (int)_Src))) {
    puVar25 = (undefined4 *)((_Size - 4) + (int)_Src);
    puVar24 = (undefined4 *)((_Size - 4) + (int)_Dst);
    if (((uint)puVar24 & 3) == 0) {
      uVar19 = _Size >> 2;
      if (uVar19 < 8) goto LAB_00426c00;
      for (; uVar19 != 0; uVar19 = uVar19 - 1) {
        *puVar24 = *puVar25;
        puVar25 = puVar25 + -1;
        puVar24 = puVar24 + -1;
      }
      switch(_Size & 3) {
      case 1:
        goto switchD_00426c24_caseD_1;
      case 2:
        goto switchD_00426c24_caseD_2;
      case 3:
        goto switchD_00426c24_caseD_3;
      }
    }
    else {
      switch(_Size) {
      case 0:
        break;
      case 1:
switchD_00426c24_caseD_1:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        return _Dst;
      case 2:
switchD_00426c24_caseD_2:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        return _Dst;
      case 3:
switchD_00426c24_caseD_3:
        *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
        *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
        *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
        return _Dst;
      default:
        uVar20 = _Size - ((uint)puVar24 & 3);
        switch((uint)puVar24 & 3) {
        case 1:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          puVar25 = (undefined4 *)((int)puVar25 + -1);
          uVar19 = uVar20 >> 2;
          puVar24 = (undefined4 *)((int)puVar24 - 1);
          if (uVar19 < 8) {
LAB_00426c00:
                    // WARNING: Could not recover jumptable at 0x00426c02. Too many branches
                    // WARNING: Treating indirect jump as call
            pvVar18 = (void *)(*(code *)(&PTR_LAB_00426cd4)[-uVar19])();
            return pvVar18;
          }
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00426c24_caseD_1;
          case 2:
            goto switchD_00426c24_caseD_2;
          case 3:
            goto switchD_00426c24_caseD_3;
          }
          break;
        case 2:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          puVar25 = (undefined4 *)((int)puVar25 + -2);
          puVar24 = (undefined4 *)((int)puVar24 - 2);
          if (uVar19 < 8) goto LAB_00426c00;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00426c24_caseD_1;
          case 2:
            goto switchD_00426c24_caseD_2;
          case 3:
            goto switchD_00426c24_caseD_3;
          }
          break;
        case 3:
          *(undefined *)((int)puVar24 + 3) = *(undefined *)((int)puVar25 + 3);
          *(undefined *)((int)puVar24 + 2) = *(undefined *)((int)puVar25 + 2);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)puVar24 + 1) = *(undefined *)((int)puVar25 + 1);
          puVar25 = (undefined4 *)((int)puVar25 + -3);
          puVar24 = (undefined4 *)((int)puVar24 - 3);
          if (uVar19 < 8) goto LAB_00426c00;
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar24 = *puVar25;
            puVar25 = puVar25 + -1;
            puVar24 = puVar24 + -1;
          }
          switch(uVar20 & 3) {
          case 1:
            goto switchD_00426c24_caseD_1;
          case 2:
            goto switchD_00426c24_caseD_2;
          case 3:
            goto switchD_00426c24_caseD_3;
          }
        }
      }
    }
    return _Dst;
  }
  puVar23 = (undefined *)_Dst;
  if ((DAT_0045849c >> 1 & 1) != 0) {
                    // WARNING: Load size is inaccurate
    for (; _Size != 0; _Size = _Size - 1) {
      *puVar23 = *_Src;
      _Src = (undefined *)((int)_Src + 1);
      puVar23 = puVar23 + 1;
    }
    return _Dst;
  }
  puVar25 = (undefined4 *)_Dst;
  if (_Size < 0x80) {
LAB_00426a5b:
    if (((uint)_Dst & 3) != 0) {
LAB_00426a78:
      switch(_Size) {
      case 0:
        return _Dst;
      case 1:
        break;
      case 2:
        goto switchD_00426a90_caseD_2;
      case 3:
        goto switchD_00426a90_caseD_3;
      default:
        uVar20 = (_Size - 4) + ((uint)_Dst & 3);
        switch((uint)_Dst & 3) {
        case 0:
                    // WARNING: Bad instruction - Truncating control flow here
          halt_baddata();
        case 1:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 2) = *(undefined *)((int)_Src + 2);
          _Src = (undefined4 *)((int)_Src + 3);
          puVar25 = (undefined4 *)((int)_Dst + 3);
          if (7 < uVar19) {
                    // WARNING: Load size is inaccurate
            for (; uVar19 != 0; uVar19 = uVar19 - 1) {
              *puVar25 = *_Src;
              _Src = (undefined4 *)((int)_Src + 4);
              puVar25 = puVar25 + 1;
            }
            switch(uVar20 & 3) {
            case 0:
              return _Dst;
            case 2:
              goto switchD_00426a90_caseD_2;
            case 3:
              goto switchD_00426a90_caseD_3;
            }
            break;
          }
          goto LAB_00426a98;
        case 2:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          *(undefined *)((int)_Dst + 1) = *(undefined *)((int)_Src + 1);
          _Src = (undefined4 *)((int)_Src + 2);
          puVar25 = (undefined4 *)((int)_Dst + 2);
          if (uVar19 < 8) goto LAB_00426a98;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_00426a90_caseD_2;
          case 3:
            goto switchD_00426a90_caseD_3;
          }
          break;
        case 3:
                    // WARNING: Load size is inaccurate
          *(undefined *)_Dst = *_Src;
          uVar19 = uVar20 >> 2;
          _Src = (undefined4 *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)_Dst + 1);
          if (uVar19 < 8) goto LAB_00426a98;
                    // WARNING: Load size is inaccurate
          for (; uVar19 != 0; uVar19 = uVar19 - 1) {
            *puVar25 = *_Src;
            _Src = (undefined4 *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          switch(uVar20 & 3) {
          case 0:
            return _Dst;
          case 2:
            goto switchD_00426a90_caseD_2;
          case 3:
            goto switchD_00426a90_caseD_3;
          }
        }
      }
      goto switchD_00426a90_caseD_1;
    }
  }
  else {
    if (((((uint)_Dst ^ (uint)_Src) & 0xf) == 0) && ((DAT_00448004 >> 1 & 1) != 0)) {
      if (((uint)_Src & 0xf) != 0) {
        uVar19 = 0x10 - ((uint)_Src & 0xf);
        _Size = _Size - uVar19;
        for (uVar20 = uVar19 & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          *(undefined *)puVar25 = *_Src;
          _Src = (void *)((int)_Src + 1);
          puVar25 = (undefined4 *)((int)puVar25 + 1);
        }
        for (uVar19 = uVar19 >> 2; uVar19 != 0; uVar19 = uVar19 - 1) {
                    // WARNING: Load size is inaccurate
          *puVar25 = *_Src;
          _Src = (void *)((int)_Src + 4);
          puVar25 = puVar25 + 1;
        }
      }
      for (uVar20 = _Size >> 7; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
        uVar26 = *(undefined4 *)((int)_Src + 4);
        uVar27 = *(undefined4 *)((int)_Src + 8);
        uVar28 = *(undefined4 *)((int)_Src + 0xc);
        uVar4 = *(undefined4 *)((int)_Src + 0x10);
        uVar5 = *(undefined4 *)((int)_Src + 0x14);
        uVar6 = *(undefined4 *)((int)_Src + 0x18);
        uVar7 = *(undefined4 *)((int)_Src + 0x1c);
        uVar8 = *(undefined4 *)((int)_Src + 0x20);
        uVar9 = *(undefined4 *)((int)_Src + 0x24);
        uVar10 = *(undefined4 *)((int)_Src + 0x28);
        uVar11 = *(undefined4 *)((int)_Src + 0x2c);
        uVar12 = *(undefined4 *)((int)_Src + 0x30);
        uVar13 = *(undefined4 *)((int)_Src + 0x34);
        uVar14 = *(undefined4 *)((int)_Src + 0x38);
        uVar15 = *(undefined4 *)((int)_Src + 0x3c);
        *puVar25 = *_Src;
        puVar25[1] = uVar26;
        puVar25[2] = uVar27;
        puVar25[3] = uVar28;
        puVar25[4] = uVar4;
        puVar25[5] = uVar5;
        puVar25[6] = uVar6;
        puVar25[7] = uVar7;
        puVar25[8] = uVar8;
        puVar25[9] = uVar9;
        puVar25[10] = uVar10;
        puVar25[0xb] = uVar11;
        puVar25[0xc] = uVar12;
        puVar25[0xd] = uVar13;
        puVar25[0xe] = uVar14;
        puVar25[0xf] = uVar15;
        uVar26 = *(undefined4 *)((int)_Src + 0x44);
        uVar27 = *(undefined4 *)((int)_Src + 0x48);
        uVar28 = *(undefined4 *)((int)_Src + 0x4c);
        uVar4 = *(undefined4 *)((int)_Src + 0x50);
        uVar5 = *(undefined4 *)((int)_Src + 0x54);
        uVar6 = *(undefined4 *)((int)_Src + 0x58);
        uVar7 = *(undefined4 *)((int)_Src + 0x5c);
        uVar8 = *(undefined4 *)((int)_Src + 0x60);
        uVar9 = *(undefined4 *)((int)_Src + 100);
        uVar10 = *(undefined4 *)((int)_Src + 0x68);
        uVar11 = *(undefined4 *)((int)_Src + 0x6c);
        uVar12 = *(undefined4 *)((int)_Src + 0x70);
        uVar13 = *(undefined4 *)((int)_Src + 0x74);
        uVar14 = *(undefined4 *)((int)_Src + 0x78);
        uVar15 = *(undefined4 *)((int)_Src + 0x7c);
        puVar25[0x10] = *(undefined4 *)((int)_Src + 0x40);
        puVar25[0x11] = uVar26;
        puVar25[0x12] = uVar27;
        puVar25[0x13] = uVar28;
        puVar25[0x14] = uVar4;
        puVar25[0x15] = uVar5;
        puVar25[0x16] = uVar6;
        puVar25[0x17] = uVar7;
        puVar25[0x18] = uVar8;
        puVar25[0x19] = uVar9;
        puVar25[0x1a] = uVar10;
        puVar25[0x1b] = uVar11;
        puVar25[0x1c] = uVar12;
        puVar25[0x1d] = uVar13;
        puVar25[0x1e] = uVar14;
        puVar25[0x1f] = uVar15;
        _Src = (void *)((int)_Src + 0x80);
        puVar25 = puVar25 + 0x20;
      }
      if ((_Size & 0x7f) != 0) {
        for (uVar20 = (_Size & 0x7f) >> 4; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
          uVar26 = *(undefined4 *)((int)_Src + 4);
          uVar27 = *(undefined4 *)((int)_Src + 8);
          uVar28 = *(undefined4 *)((int)_Src + 0xc);
          *puVar25 = *_Src;
          puVar25[1] = uVar26;
          puVar25[2] = uVar27;
          puVar25[3] = uVar28;
          _Src = (void *)((int)_Src + 0x10);
          puVar25 = puVar25 + 4;
        }
        if ((_Size & 0xf) != 0) {
          for (uVar20 = (_Size & 0xf) >> 2; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *puVar25 = *_Src;
            _Src = (void *)((int)_Src + 4);
            puVar25 = puVar25 + 1;
          }
          for (uVar20 = _Size & 3; uVar20 != 0; uVar20 = uVar20 - 1) {
                    // WARNING: Load size is inaccurate
            *(undefined *)puVar25 = *_Src;
            _Src = (void *)((int)_Src + 1);
            puVar25 = (undefined4 *)((int)puVar25 + 1);
          }
        }
      }
      return _Dst;
    }
    if ((DAT_0045849c & 1) == 0) goto LAB_00426a5b;
    if (((uint)_Dst & 3) != 0) goto LAB_00426a78;
    if (((uint)_Src & 3) == 0) {
      if (((uint)_Dst >> 2 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar26 = *_Src;
        _Size = _Size - 4;
        _Src = (void *)((int)_Src + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if (((uint)_Dst >> 3 & 1) != 0) {
                    // WARNING: Load size is inaccurate
        uVar1 = *_Src;
        _Size = _Size - 8;
        _Src = (void *)((int)_Src + 8);
        *(undefined8 *)_Dst = uVar1;
        _Dst = (void *)((int)_Dst + 8);
      }
      if (((uint)_Src & 7) == 0) {
                    // WARNING: Load size is inaccurate
        puVar17 = (undefined8 *)((int)_Src + -8);
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        do {
          puVar22 = puVar17;
          uVar5 = *(undefined4 *)(puVar22 + 4);
          uVar6 = *(undefined4 *)((int)puVar22 + 0x24);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(puVar22 + 2);
          uVar28 = *(undefined4 *)(puVar22 + 7);
          uVar4 = *(undefined4 *)((int)puVar22 + 0x3c);
          auVar3 = *(undefined (*) [32])(puVar22 + 4);
          *(undefined4 *)((int)_Dst + 8) = uVar26;
          *(undefined4 *)((int)_Dst + 0xc) = uVar27;
          *(undefined4 *)((int)_Dst + 0x10) = uVar5;
          *(undefined4 *)((int)_Dst + 0x14) = uVar6;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x40,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x40,0);
          _Dst = (void *)((int)_Dst + 0x30);
          puVar17 = puVar22 + 6;
          uVar26 = uVar28;
          uVar27 = uVar4;
        } while (0x2f < (int)_Size);
        puVar22 = puVar22 + 7;
      }
      else if (((uint)_Src >> 3 & 1) == 0) {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -4;
        uVar26 = *_Src;
        uVar27 = *(undefined4 *)((int)_Src + 4);
        uVar28 = *(undefined4 *)((int)_Src + 8);
        do {
          iVar21 = iVar16;
          uVar7 = *(undefined4 *)(iVar21 + 0x20);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar4 = *(undefined4 *)(iVar21 + 0x34);
          uVar5 = *(undefined4 *)(iVar21 + 0x38);
          uVar6 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 4) = uVar26;
          *(undefined4 *)((int)_Dst + 8) = uVar27;
          *(undefined4 *)((int)_Dst + 0xc) = uVar28;
          *(undefined4 *)((int)_Dst + 0x10) = uVar7;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x20,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x20,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar4;
          uVar27 = uVar5;
          uVar28 = uVar6;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x34);
      }
      else {
                    // WARNING: Load size is inaccurate
        iVar16 = (int)_Src + -0xc;
        uVar26 = *_Src;
        do {
          iVar21 = iVar16;
          uVar28 = *(undefined4 *)(iVar21 + 0x20);
          uVar4 = *(undefined4 *)(iVar21 + 0x24);
          uVar5 = *(undefined4 *)(iVar21 + 0x28);
          _Size = _Size - 0x30;
          auVar2 = *(undefined (*) [32])(iVar21 + 0x10);
          uVar27 = *(undefined4 *)(iVar21 + 0x3c);
          auVar3 = *(undefined (*) [32])(iVar21 + 0x20);
          *(undefined4 *)((int)_Dst + 0xc) = uVar26;
          *(undefined4 *)((int)_Dst + 0x10) = uVar28;
          *(undefined4 *)((int)_Dst + 0x14) = uVar4;
          *(undefined4 *)((int)_Dst + 0x18) = uVar5;
          *(undefined (*) [16])((int)_Dst + 0x10) = SUB3216(auVar2 >> 0x60,0);
          *(undefined (*) [16])((int)_Dst + 0x20) = SUB3216(auVar3 >> 0x60,0);
          _Dst = (void *)((int)_Dst + 0x30);
          iVar16 = iVar21 + 0x30;
          uVar26 = uVar27;
        } while (0x2f < (int)_Size);
        puVar22 = (undefined8 *)(iVar21 + 0x3c);
      }
      for (; 0xf < (int)_Size; _Size = _Size - 0x10) {
        uVar26 = *(undefined4 *)puVar22;
        uVar27 = *(undefined4 *)((int)puVar22 + 4);
        uVar28 = *(undefined4 *)(puVar22 + 1);
        uVar4 = *(undefined4 *)((int)puVar22 + 0xc);
        puVar22 = puVar22 + 2;
        *(undefined4 *)_Dst = uVar26;
        *(undefined4 *)((int)_Dst + 4) = uVar27;
        *(undefined4 *)((int)_Dst + 8) = uVar28;
        *(undefined4 *)((int)_Dst + 0xc) = uVar4;
        _Dst = (void *)((int)_Dst + 0x10);
      }
      if ((_Size >> 2 & 1) != 0) {
        uVar26 = *(undefined4 *)puVar22;
        _Size = _Size - 4;
        puVar22 = (undefined8 *)((int)puVar22 + 4);
        *(undefined4 *)_Dst = uVar26;
        _Dst = (void *)((int)_Dst + 4);
      }
      if ((_Size >> 3 & 1) != 0) {
        _Size = _Size - 8;
        *(undefined8 *)_Dst = *puVar22;
      }
                    // WARNING: Could not recover jumptable at 0x00426a59. Too many branches
                    // WARNING: Treating indirect jump as call
      pvVar18 = (void *)(*(code *)(&switchD_00426a90::switchdataD_00426b88)[_Size])();
      return pvVar18;
    }
  }
  uVar19 = _Size >> 2;
  if (uVar19 < 8) {
LAB_00426a98:
                    // WARNING: Could not recover jumptable at 0x00426a98. Too many branches
                    // WARNING: Treating indirect jump as call
    pvVar18 = (void *)(*(code *)(&PTR_LAB_00426b1c)[uVar19])();
    return pvVar18;
  }
                    // WARNING: Load size is inaccurate
  for (; uVar19 != 0; uVar19 = uVar19 - 1) {
    *puVar25 = *_Src;
    _Src = (undefined4 *)((int)_Src + 4);
    puVar25 = puVar25 + 1;
  }
  switch(_Size & 3) {
  case 0:
    return _Dst;
  case 2:
switchD_00426a90_caseD_2:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    return _Dst;
  case 3:
switchD_00426a90_caseD_3:
                    // WARNING: Load size is inaccurate
    *(undefined *)puVar25 = *_Src;
    *(undefined *)((int)puVar25 + 1) = *(undefined *)((int)_Src + 1);
    *(undefined *)((int)puVar25 + 2) = *(undefined *)((int)_Src + 2);
    return _Dst;
  }
switchD_00426a90_caseD_1:
                    // WARNING: Load size is inaccurate
  *(undefined *)puVar25 = *_Src;
  return _Dst;
}



void __fastcall FUN_00426b3c(int param_1,int param_2)

{
  int unaff_ESI;
  int unaff_EDI;
  
  *(undefined4 *)(unaff_EDI + -0x1c + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x1c + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x18 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x18 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x14 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x14 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0x10 + param_1 * 4) =
       *(undefined4 *)(unaff_ESI + -0x10 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -0xc + param_1 * 4) = *(undefined4 *)(unaff_ESI + -0xc + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -8 + param_1 * 4) = *(undefined4 *)(unaff_ESI + -8 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + -4 + param_1 * 4) = *(undefined4 *)(unaff_ESI + -4 + param_1 * 4);
                    // WARNING: Could not recover jumptable at 0x00426b7f. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)(&switchD_00426a90::switchdataD_00426b88)[param_2])();
  return;
}



void __fastcall FUN_00426cd8(int param_1,int param_2)

{
  int unaff_ESI;
  int unaff_EDI;
  
  *(undefined4 *)(unaff_EDI + 0x1c + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x1c + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x18 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x18 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x14 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x14 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0x10 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0x10 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 0xc + param_1 * 4) = *(undefined4 *)(unaff_ESI + 0xc + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 8 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 8 + param_1 * 4);
  *(undefined4 *)(unaff_EDI + 4 + param_1 * 4) = *(undefined4 *)(unaff_ESI + 4 + param_1 * 4);
                    // WARNING: Could not recover jumptable at 0x00426d1b. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)(&switchD_00426c24::switchdataD_00426d24)[param_2])();
  return;
}



// Library Function - Single Match
//  public: virtual __thiscall type_info::~type_info(void)
// 
// Library: Visual Studio 2012 Release

void __thiscall type_info::_type_info(type_info *this)

{
  *(undefined ***)this = vftable;
  _Type_info_dtor(this);
  return;
}



// Library Function - Single Match
//  public: virtual void * __thiscall type_info::`scalar deleting destructor'(unsigned int)
// 
// Libraries: Visual Studio 2008 Release, Visual Studio 2010 Release, Visual Studio 2012 Release

void * __thiscall type_info::_scalar_deleting_destructor_(type_info *this,uint param_1)

{
  _type_info(this);
  if ((param_1 & 1) != 0) {
    FUN_00403c10(this);
  }
  return this;
}



// Library Function - Single Match
//  __fpmath
// 
// Library: Visual Studio 2012 Release

void __cdecl __fpmath(int param_1)

{
  FUN_00426ed8();
  if (param_1 != 0) {
    __setdefaultprecision();
  }
  return;
}



void FUN_00426ed8(void)

{
  PTR_FUN_004482a0 = __cfltcvt;
  PTR_FUN_004482a4 = FUN_0042d7c9;
  PTR_FUN_004482a8 = FUN_0042d85a;
  PTR_FUN_004482ac = FUN_0042d8b4;
  PTR_FUN_004482b0 = __positive;
  PTR_FUN_004482b4 = __cfltcvt;
  PTR_FUN_004482b8 = __cfltcvt_l;
  PTR_FUN_004482bc = FUN_0042d872;
  PTR_FUN_004482c0 = FUN_0042d7da;
  PTR_FUN_004482c4 = FUN_0042d8c5;
  return;
}



undefined4 FUN_00426f38(void)

{
  uint *Ptr;
  
  Ptr = FUN_00403d40(0x20,4);
  DAT_004592b4 = EncodePointer(Ptr);
  if (Ptr == (uint *)0x0) {
    DAT_004592b8 = DAT_004592b4;
    return 0x18;
  }
  DAT_004592b8 = DAT_004592b4;
  *Ptr = 0;
  return 0;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

PVOID __cdecl FUN_00426f67(PVOID param_1)

{
  PVOID pvVar1;
  
  FUN_00427b5e();
  pvVar1 = FUN_00426fab(param_1);
  FUN_00426fa5();
  return pvVar1;
}



void FUN_00426fa5(void)

{
  FUN_00427b67();
  return;
}



PVOID __cdecl FUN_00426fab(PVOID param_1)

{
  PVOID *ppvVar1;
  PVOID *ppvVar2;
  uint uVar3;
  uint uVar4;
  PVOID pvVar5;
  int iVar6;
  
  ppvVar1 = (PVOID *)DecodePointer(DAT_004592b8);
  ppvVar2 = (PVOID *)DecodePointer(DAT_004592b4);
  if ((ppvVar2 < ppvVar1) || (iVar6 = (int)ppvVar2 - (int)ppvVar1, iVar6 + 4U < 4)) {
    return (PVOID)0x0;
  }
  uVar3 = FUN_00403c80(ppvVar1);
  if (uVar3 < iVar6 + 4U) {
    uVar4 = 0x800;
    if (uVar3 < 0x800) {
      uVar4 = uVar3;
    }
    if ((uVar4 + uVar3 < uVar3) ||
       (pvVar5 = (PVOID)FUN_00403ca0(ppvVar1,uVar4 + uVar3), pvVar5 == (PVOID)0x0)) {
      if (uVar3 + 0x10 < uVar3) {
        return (PVOID)0x0;
      }
      pvVar5 = (PVOID)FUN_00403ca0(ppvVar1,uVar3 + 0x10);
      if (pvVar5 == (PVOID)0x0) {
        return (PVOID)0x0;
      }
    }
    ppvVar2 = (PVOID *)((int)pvVar5 + (iVar6 >> 2) * 4);
    DAT_004592b8 = EncodePointer(pvVar5);
  }
  pvVar5 = EncodePointer(param_1);
  *ppvVar2 = pvVar5;
  DAT_004592b4 = EncodePointer(ppvVar2 + 1);
  return param_1;
}



int __cdecl FUN_00427063(PVOID param_1)

{
  PVOID pvVar1;
  
  pvVar1 = FUN_00426f67(param_1);
  return (pvVar1 != (PVOID)0x0) - 1;
}



pthreadlocinfo * __thiscall FUN_00427078(void *this,pthreadlocinfo *param_1)

{
  uint uVar1;
  _ptiddata p_Var2;
  pthreadlocinfo ptVar3;
  pthreadmbcinfo ptVar4;
  
  *(undefined *)((int)this + 0xc) = 0;
  if (param_1 == (pthreadlocinfo *)0x0) {
    p_Var2 = __getptd();
    *(_ptiddata *)((int)this + 8) = p_Var2;
    ptVar3 = p_Var2->ptlocinfo;
    *(pthreadlocinfo *)this = ptVar3;
    *(pthreadmbcinfo *)((int)this + 4) = p_Var2->ptmbcinfo;
    if ((ptVar3 != (pthreadlocinfo)PTR_DAT_0044895c) && ((p_Var2->_ownlocale & DAT_00448a20) == 0))
    {
      ptVar3 = FUN_0042dc50();
      *(pthreadlocinfo *)this = ptVar3;
    }
    if ((*(undefined **)((int)this + 4) != PTR_DAT_004486f4) &&
       ((*(uint *)(*(int *)((int)this + 8) + 0x70) & DAT_00448a20) == 0)) {
      ptVar4 = FUN_0042dfd2();
      *(pthreadmbcinfo *)((int)this + 4) = ptVar4;
    }
    uVar1 = *(uint *)(*(int *)((int)this + 8) + 0x70);
    if ((uVar1 & 2) == 0) {
      *(uint *)(*(int *)((int)this + 8) + 0x70) = uVar1 | 2;
      *(undefined *)((int)this + 0xc) = 1;
    }
  }
  else {
    *(pthreadlocinfo *)this = *param_1;
    *(pthreadlocinfo *)((int)this + 4) = param_1[1];
  }
  return (pthreadlocinfo *)this;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe

void __cdecl FUN_00427100(char *param_1,uint param_2,pthreadlocinfo *param_3)

{
  uint uVar1;
  char cVar2;
  wchar_t *pwVar3;
  uint uVar4;
  int *piVar5;
  size_t sVar6;
  uint uVar7;
  pthreadlocinfo *extraout_EDX;
  pthreadlocinfo *extraout_EDX_00;
  pthreadlocinfo *extraout_EDX_01;
  undefined4 *_Src;
  undefined4 *puVar8;
  int iVar9;
  undefined extraout_var;
  undefined extraout_var_00;
  undefined uVar10;
  
  uVar4 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  if (param_1 == (char *)0x0) {
LAB_00427118:
    piVar5 = __errno();
    iVar9 = 0x16;
    uVar10 = extraout_var;
  }
  else {
    sVar6 = _strnlen(param_1,param_2);
    if (param_2 <= sVar6) {
      *param_1 = '\0';
      goto LAB_00427118;
    }
    pwVar3 = (*param_3)->locale_name[2];
    if (pwVar3 == (wchar_t *)0x0) {
      for (; uVar10 = extraout_var_00, *param_1 != '\0'; param_1 = param_1 + 1) {
        cVar2 = *param_1;
        if (('@' < cVar2) && (cVar2 < '[')) {
          *param_1 = cVar2 + ' ';
        }
      }
      goto LAB_00427262;
    }
    _Src = (undefined4 *)0x0;
    uVar7 = FUN_0042e60f(param_3,pwVar3,0x100,param_1,-1,(LPWSTR)0x0,0,(*param_3)->lc_codepage,1);
    if (uVar7 == 0) {
      piVar5 = __errno();
      uVar10 = (undefined)uVar7;
      *piVar5 = 0x2a;
LAB_0042717f:
      __errno();
      param_3 = extraout_EDX_00;
      goto LAB_00427262;
    }
    if (uVar7 <= param_2) {
      if (((0 < (int)uVar7) && (0xffffffe0 / uVar7 != 0)) && (uVar1 = uVar7 + 8, uVar7 < uVar1)) {
        if (uVar1 < 0x401) {
          puVar8 = (undefined4 *)&stack0xffffffec;
          _Src = (undefined4 *)&stack0xffffffec;
          if (&stack0x00000000 != &DAT_00000014) {
LAB_004271fd:
            _Src = puVar8 + 2;
          }
        }
        else {
          _Src = (undefined4 *)FUN_00403c30(uVar1);
          if (_Src != (undefined4 *)0x0) {
            *_Src = 0xdddd;
            puVar8 = _Src;
            goto LAB_004271fd;
          }
        }
      }
      if (_Src != (undefined4 *)0x0) {
        iVar9 = FUN_0042e60f(param_3,(*param_3)->locale_name[2],0x100,param_1,-1,(LPWSTR)_Src,uVar7,
                             (*param_3)->lc_codepage,1);
        uVar10 = (undefined)uVar7;
        if (iVar9 == 0) {
          piVar5 = __errno();
          *piVar5 = 0x2a;
        }
        else {
          _strcpy_s(param_1,param_2,(char *)_Src);
        }
        FUN_00427275((int)_Src);
        param_3 = extraout_EDX_01;
        goto LAB_00427262;
      }
      piVar5 = __errno();
      uVar10 = (undefined)uVar7;
      *piVar5 = 0xc;
      goto LAB_0042717f;
    }
    *param_1 = '\0';
    piVar5 = __errno();
    uVar10 = (undefined)uVar7;
    iVar9 = 0x22;
  }
  *piVar5 = iVar9;
  FUN_00429bfe();
  param_3 = extraout_EDX;
LAB_00427262:
  FUN_004298aa(uVar4 ^ (uint)&stack0xfffffffc,(char)param_3,uVar10);
  return;
}



void __cdecl FUN_00427275(int param_1)

{
  if ((param_1 != 0) && (*(int *)(param_1 + -8) == 0xdddd)) {
    FUN_00403c10((int *)(param_1 + -8));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __strlwr
// 
// Library: Visual Studio 2012 Release

char * __cdecl __strlwr(char *_String)

{
  char cVar1;
  char *pcVar2;
  int *piVar3;
  
  if (_DAT_0045871c == 0) {
    pcVar2 = _String;
    if (_String == (char *)0x0) {
      piVar3 = __errno();
      *piVar3 = 0x16;
      FUN_00429bfe();
      return (char *)0x0;
    }
    if (*_String != '\0') {
      do {
        cVar1 = *_String;
        if (('@' < cVar1) && (cVar1 < '[')) {
          *_String = cVar1 + ' ';
        }
        _String = _String + 1;
      } while (*_String != '\0');
      return pcVar2;
    }
  }
  else {
    FUN_004272ee(_String,0xffffffff,(pthreadlocinfo *)0x0);
  }
  return _String;
}



void __cdecl FUN_004272ee(char *param_1,uint param_2,pthreadlocinfo *param_3)

{
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_3);
  FUN_00427100(param_1,param_2,local_14);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _strrchr
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017, Visual Studio 2019

char * __cdecl _strrchr(char *_Str,int _Ch)

{
  uint uVar1;
  undefined (*pauVar2) [16];
  uint uVar3;
  int iVar4;
  char *pcVar5;
  char *pcVar6;
  undefined (*pauVar7) [16];
  undefined auVar8 [16];
  undefined auVar10 [16];
  char cVar13;
  char cVar14;
  char cVar15;
  char cVar16;
  char cVar17;
  char cVar18;
  char cVar19;
  undefined auVar12 [16];
  byte bVar9;
  byte bVar11;
  
  if (_DAT_00458498 != 0) {
    if (_DAT_00458498 < 2) {
      auVar12 = pshuflw(ZEXT216(CONCAT11((char)_Ch,(char)_Ch)),
                        ZEXT216(CONCAT11((char)_Ch,(char)_Ch)),0);
      uVar1 = -1 << (sbyte)((uint)_Str & 0xf);
      pcVar6 = _Str + -((uint)_Str & 0xf);
      pcVar5 = (char *)0x0;
      while( true ) {
        bVar11 = -(pcVar6[0xf] == '\0');
        auVar10 = CONCAT115(bVar11,CONCAT114(-(pcVar6[0xe] == '\0'),
                                             CONCAT113(-(pcVar6[0xd] == '\0'),
                                                       CONCAT112(-(pcVar6[0xc] == '\0'),
                                                                 CONCAT111(-(pcVar6[0xb] == '\0'),
                                                                           CONCAT110(-(pcVar6[10] ==
                                                                                      '\0'),CONCAT19
                                                  (-(pcVar6[9] == '\0'),
                                                   CONCAT18(-(pcVar6[8] == '\0'),
                                                            CONCAT17(-(pcVar6[7] == '\0'),
                                                                     CONCAT16(-(pcVar6[6] == '\0'),
                                                                              CONCAT15(-(pcVar6[5]
                                                                                        == '\0'),
                                                                                       CONCAT14(-(
                                                  pcVar6[4] == '\0'),
                                                  CONCAT13(-(pcVar6[3] == '\0'),
                                                           CONCAT12(-(pcVar6[2] == '\0'),
                                                                    CONCAT11(-(pcVar6[1] == '\0'),
                                                                             -(*pcVar6 == '\0'))))))
                                                  ))))))))));
        cVar13 = SUB161(auVar12 >> 8,0);
        cVar14 = SUB161(auVar12 >> 0x10,0);
        cVar15 = SUB161(auVar12 >> 0x18,0);
        cVar16 = SUB161(auVar12 >> 0x20,0);
        cVar17 = SUB161(auVar12 >> 0x28,0);
        cVar18 = SUB161(auVar12 >> 0x30,0);
        cVar19 = SUB161(auVar12 >> 0x38,0);
        bVar9 = -(pcVar6[0xf] == cVar19);
        auVar8 = CONCAT115(bVar9,CONCAT114(-(pcVar6[0xe] == cVar18),
                                           CONCAT113(-(pcVar6[0xd] == cVar17),
                                                     CONCAT112(-(pcVar6[0xc] == cVar16),
                                                               CONCAT111(-(pcVar6[0xb] == cVar15),
                                                                         CONCAT110(-(pcVar6[10] ==
                                                                                    cVar14),CONCAT19
                                                  (-(pcVar6[9] == cVar13),
                                                   CONCAT18(-(pcVar6[8] == SUB161(auVar12,0)),
                                                            CONCAT17(-(pcVar6[7] == cVar19),
                                                                     CONCAT16(-(pcVar6[6] == cVar18)
                                                                              ,CONCAT15(-(pcVar6[5]
                                                                                         == cVar17),
                                                                                        CONCAT14(-(
                                                  pcVar6[4] == cVar16),
                                                  CONCAT13(-(pcVar6[3] == cVar15),
                                                           CONCAT12(-(pcVar6[2] == cVar14),
                                                                    CONCAT11(-(pcVar6[1] == cVar13),
                                                                             -(*pcVar6 ==
                                                                              SUB161(auVar12,0))))))
                                                  )))))))))));
        uVar3 = (ushort)((ushort)(SUB161(auVar10 >> 7,0) & 1) |
                         (ushort)(SUB161(auVar10 >> 0xf,0) & 1) << 1 |
                         (ushort)(SUB161(auVar10 >> 0x17,0) & 1) << 2 |
                         (ushort)(SUB161(auVar10 >> 0x1f,0) & 1) << 3 |
                         (ushort)(SUB161(auVar10 >> 0x27,0) & 1) << 4 |
                         (ushort)(SUB161(auVar10 >> 0x2f,0) & 1) << 5 |
                         (ushort)(SUB161(auVar10 >> 0x37,0) & 1) << 6 |
                         (ushort)(SUB161(auVar10 >> 0x3f,0) & 1) << 7 |
                         (ushort)(SUB161(auVar10 >> 0x47,0) & 1) << 8 |
                         (ushort)(SUB161(auVar10 >> 0x4f,0) & 1) << 9 |
                         (ushort)(SUB161(auVar10 >> 0x57,0) & 1) << 10 |
                         (ushort)(SUB161(auVar10 >> 0x5f,0) & 1) << 0xb |
                         (ushort)(SUB161(auVar10 >> 0x67,0) & 1) << 0xc |
                         (ushort)(SUB161(auVar10 >> 0x6f,0) & 1) << 0xd |
                         (ushort)(SUB161(auVar10 >> 0x77,0) & 1) << 0xe |
                        (ushort)(bVar11 >> 7) << 0xf) & uVar1;
        if (uVar3 != 0) break;
        uVar1 = (ushort)((ushort)(SUB161(auVar8 >> 7,0) & 1) |
                         (ushort)(SUB161(auVar8 >> 0xf,0) & 1) << 1 |
                         (ushort)(SUB161(auVar8 >> 0x17,0) & 1) << 2 |
                         (ushort)(SUB161(auVar8 >> 0x1f,0) & 1) << 3 |
                         (ushort)(SUB161(auVar8 >> 0x27,0) & 1) << 4 |
                         (ushort)(SUB161(auVar8 >> 0x2f,0) & 1) << 5 |
                         (ushort)(SUB161(auVar8 >> 0x37,0) & 1) << 6 |
                         (ushort)(SUB161(auVar8 >> 0x3f,0) & 1) << 7 |
                         (ushort)(SUB161(auVar8 >> 0x47,0) & 1) << 8 |
                         (ushort)(SUB161(auVar8 >> 0x4f,0) & 1) << 9 |
                         (ushort)(SUB161(auVar8 >> 0x57,0) & 1) << 10 |
                         (ushort)(SUB161(auVar8 >> 0x5f,0) & 1) << 0xb |
                         (ushort)(SUB161(auVar8 >> 0x67,0) & 1) << 0xc |
                         (ushort)(SUB161(auVar8 >> 0x6f,0) & 1) << 0xd |
                         (ushort)(SUB161(auVar8 >> 0x77,0) & 1) << 0xe | (ushort)(bVar9 >> 7) << 0xf
                        ) & uVar1;
        iVar4 = 0x1f;
        if (uVar1 != 0) {
          for (; uVar1 >> iVar4 == 0; iVar4 = iVar4 + -1) {
          }
        }
        if (uVar1 != 0) {
          pcVar5 = pcVar6 + iVar4;
        }
        uVar1 = 0xffffffff;
        pcVar6 = pcVar6 + 0x10;
      }
      uVar1 = (uVar3 * 2 & uVar3 * -2) - 1 &
              (ushort)((ushort)(SUB161(auVar8 >> 7,0) & 1) |
                       (ushort)(SUB161(auVar8 >> 0xf,0) & 1) << 1 |
                       (ushort)(SUB161(auVar8 >> 0x17,0) & 1) << 2 |
                       (ushort)(SUB161(auVar8 >> 0x1f,0) & 1) << 3 |
                       (ushort)(SUB161(auVar8 >> 0x27,0) & 1) << 4 |
                       (ushort)(SUB161(auVar8 >> 0x2f,0) & 1) << 5 |
                       (ushort)(SUB161(auVar8 >> 0x37,0) & 1) << 6 |
                       (ushort)(SUB161(auVar8 >> 0x3f,0) & 1) << 7 |
                       (ushort)(SUB161(auVar8 >> 0x47,0) & 1) << 8 |
                       (ushort)(SUB161(auVar8 >> 0x4f,0) & 1) << 9 |
                       (ushort)(SUB161(auVar8 >> 0x57,0) & 1) << 10 |
                       (ushort)(SUB161(auVar8 >> 0x5f,0) & 1) << 0xb |
                       (ushort)(SUB161(auVar8 >> 0x67,0) & 1) << 0xc |
                       (ushort)(SUB161(auVar8 >> 0x6f,0) & 1) << 0xd |
                       (ushort)(SUB161(auVar8 >> 0x77,0) & 1) << 0xe | (ushort)(bVar9 >> 7) << 0xf)
              & uVar1;
      iVar4 = 0x1f;
      if (uVar1 != 0) {
        for (; uVar1 >> iVar4 == 0; iVar4 = iVar4 + -1) {
        }
      }
      pcVar6 = pcVar6 + iVar4;
      if (uVar1 == 0) {
        pcVar6 = pcVar5;
      }
      return pcVar6;
    }
    uVar1 = _Ch & 0xff;
    if (uVar1 == 0) {
      pcVar5 = (char *)((uint)_Str & 0xfffffff0);
      auVar12 = CONCAT115(-(pcVar5[0xf] == '\0'),
                          CONCAT114(-(pcVar5[0xe] == '\0'),
                                    CONCAT113(-(pcVar5[0xd] == '\0'),
                                              CONCAT112(-(pcVar5[0xc] == '\0'),
                                                        CONCAT111(-(pcVar5[0xb] == '\0'),
                                                                  CONCAT110(-(pcVar5[10] == '\0'),
                                                                            CONCAT19(-(pcVar5[9] ==
                                                                                      '\0'),CONCAT18
                                                  (-(pcVar5[8] == '\0'),
                                                   CONCAT17(-(pcVar5[7] == '\0'),
                                                            CONCAT16(-(pcVar5[6] == '\0'),
                                                                     CONCAT15(-(pcVar5[5] == '\0'),
                                                                              CONCAT14(-(pcVar5[4]
                                                                                        == '\0'),
                                                                                       CONCAT13(-(
                                                  pcVar5[3] == '\0'),
                                                  CONCAT12(-(pcVar5[2] == '\0'),
                                                           CONCAT11(-(pcVar5[1] == '\0'),
                                                                    -(*pcVar5 == '\0')))))))))))))))
                         );
      uVar1 = (uint)(ushort)((ushort)(SUB161(auVar12 >> 7,0) & 1) |
                             (ushort)(SUB161(auVar12 >> 0xf,0) & 1) << 1 |
                             (ushort)(SUB161(auVar12 >> 0x17,0) & 1) << 2 |
                             (ushort)(SUB161(auVar12 >> 0x1f,0) & 1) << 3 |
                             (ushort)(SUB161(auVar12 >> 0x27,0) & 1) << 4 |
                             (ushort)(SUB161(auVar12 >> 0x2f,0) & 1) << 5 |
                             (ushort)(SUB161(auVar12 >> 0x37,0) & 1) << 6 |
                             (ushort)(SUB161(auVar12 >> 0x3f,0) & 1) << 7 |
                             (ushort)(SUB161(auVar12 >> 0x47,0) & 1) << 8 |
                             (ushort)(SUB161(auVar12 >> 0x4f,0) & 1) << 9 |
                             (ushort)(SUB161(auVar12 >> 0x57,0) & 1) << 10 |
                             (ushort)(SUB161(auVar12 >> 0x5f,0) & 1) << 0xb |
                             (ushort)(SUB161(auVar12 >> 0x67,0) & 1) << 0xc |
                             (ushort)(SUB161(auVar12 >> 0x6f,0) & 1) << 0xd |
                             (ushort)(SUB161(auVar12 >> 0x77,0) & 1) << 0xe |
                            (ushort)((byte)-(pcVar5[0xf] == '\0') >> 7) << 0xf) &
              -1 << ((byte)_Str & 0xf);
      while (uVar1 == 0) {
        pcVar6 = pcVar5 + 0x1f;
        auVar12 = CONCAT115(-(*pcVar6 == '\0'),
                            CONCAT114(-(pcVar5[0x1e] == '\0'),
                                      CONCAT113(-(pcVar5[0x1d] == '\0'),
                                                CONCAT112(-(pcVar5[0x1c] == '\0'),
                                                          CONCAT111(-(pcVar5[0x1b] == '\0'),
                                                                    CONCAT110(-(pcVar5[0x1a] == '\0'
                                                                               ),CONCAT19(-(pcVar5[
                                                  0x19] == '\0'),
                                                  CONCAT18(-(pcVar5[0x18] == '\0'),
                                                           CONCAT17(-(pcVar5[0x17] == '\0'),
                                                                    CONCAT16(-(pcVar5[0x16] == '\0')
                                                                             ,CONCAT15(-(pcVar5[0x15
                                                  ] == '\0'),
                                                  CONCAT14(-(pcVar5[0x14] == '\0'),
                                                           CONCAT13(-(pcVar5[0x13] == '\0'),
                                                                    CONCAT12(-(pcVar5[0x12] == '\0')
                                                                             ,CONCAT11(-(pcVar5[0x11
                                                  ] == '\0'),-(pcVar5[0x10] == '\0'))))))))))))))));
        pcVar5 = pcVar5 + 0x10;
        uVar1 = (uint)(ushort)((ushort)(SUB161(auVar12 >> 7,0) & 1) |
                               (ushort)(SUB161(auVar12 >> 0xf,0) & 1) << 1 |
                               (ushort)(SUB161(auVar12 >> 0x17,0) & 1) << 2 |
                               (ushort)(SUB161(auVar12 >> 0x1f,0) & 1) << 3 |
                               (ushort)(SUB161(auVar12 >> 0x27,0) & 1) << 4 |
                               (ushort)(SUB161(auVar12 >> 0x2f,0) & 1) << 5 |
                               (ushort)(SUB161(auVar12 >> 0x37,0) & 1) << 6 |
                               (ushort)(SUB161(auVar12 >> 0x3f,0) & 1) << 7 |
                               (ushort)(SUB161(auVar12 >> 0x47,0) & 1) << 8 |
                               (ushort)(SUB161(auVar12 >> 0x4f,0) & 1) << 9 |
                               (ushort)(SUB161(auVar12 >> 0x57,0) & 1) << 10 |
                               (ushort)(SUB161(auVar12 >> 0x5f,0) & 1) << 0xb |
                               (ushort)(SUB161(auVar12 >> 0x67,0) & 1) << 0xc |
                               (ushort)(SUB161(auVar12 >> 0x6f,0) & 1) << 0xd |
                               (ushort)(SUB161(auVar12 >> 0x77,0) & 1) << 0xe |
                              (ushort)((byte)-(*pcVar6 == '\0') >> 7) << 0xf);
      }
      iVar4 = 0;
      if (uVar1 != 0) {
        for (; (uVar1 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {
        }
      }
      pauVar2 = (undefined (*) [16])(pcVar5 + iVar4);
    }
    else {
      pauVar2 = (undefined (*) [16])0x0;
      uVar3 = (uint)_Str & 0xf;
      while (uVar3 != 0) {
        if ((byte)*_Str == uVar1) {
          pauVar2 = (undefined (*) [16])_Str;
        }
        if ((byte)*_Str == 0) {
          return (char *)pauVar2;
        }
        _Str = _Str + 1;
        uVar3 = (uint)_Str & 0xf;
      }
      do {
        pauVar7 = (undefined (*) [16])((int)_Str + 0x10);
        iVar4 = pcmpistri(ZEXT416(uVar1),*(undefined (*) [16])_Str,0x40);
        if ((undefined (*) [16])0xffffffef < _Str) {
          pauVar2 = (undefined (*) [16])(_Str + iVar4);
        }
        _Str = (char *)pauVar7;
      } while (pauVar7 != (undefined (*) [16])0x0);
    }
    return (char *)pauVar2;
  }
  iVar4 = -1;
  do {
    pcVar5 = _Str;
    if (iVar4 == 0) break;
    iVar4 = iVar4 + -1;
    pcVar5 = _Str + 1;
    cVar13 = *_Str;
    _Str = pcVar5;
  } while (cVar13 != '\0');
  iVar4 = -(iVar4 + 1);
  pcVar5 = pcVar5 + -1;
  do {
    pcVar6 = pcVar5;
    if (iVar4 == 0) break;
    iVar4 = iVar4 + -1;
    pcVar6 = pcVar5 + -1;
    cVar13 = *pcVar5;
    pcVar5 = pcVar6;
  } while ((char)_Ch != cVar13);
  pcVar6 = pcVar6 + 1;
  if (*pcVar6 != (char)_Ch) {
    pcVar6 = (char *)0x0;
  }
  return pcVar6;
}



void __cdecl FUN_00427467(LPCSTR param_1)

{
  byte bVar1;
  ulong *puVar2;
  int *piVar3;
  BOOL BVar4;
  DWORD DVar5;
  uint *lpBuffer;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined uVar6;
  undefined extraout_DL_04;
  int iVar7;
  CHAR local_114;
  undefined local_113;
  undefined2 local_112;
  uint local_110 [66];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  iVar7 = 0;
  lpBuffer = local_110;
  if (param_1 == (LPCSTR)0x0) {
    puVar2 = ___doserrno();
    *puVar2 = 0;
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
    uVar6 = extraout_DL;
    goto LAB_00427571;
  }
  BVar4 = SetCurrentDirectoryA(param_1);
  if (BVar4 == 0) {
LAB_00427553:
    DVar5 = GetLastError();
    FID_conflict___dosmaperr(DVar5);
    uVar6 = extraout_DL_03;
  }
  else {
    DVar5 = GetCurrentDirectoryA(0x105,(LPSTR)local_110);
    uVar6 = extraout_DL_00;
    if (0x104 < (int)DVar5) {
      lpBuffer = FUN_00403d40(DVar5 + 1,1);
      if ((lpBuffer == (uint *)0x0) || (iVar7 = 1, DVar5 == 0)) goto LAB_00427553;
      DVar5 = GetCurrentDirectoryA(DVar5 + 1,(LPSTR)lpBuffer);
      uVar6 = extraout_DL_01;
    }
    if (DVar5 == 0) goto LAB_00427553;
    bVar1 = *(byte *)lpBuffer;
    if (((bVar1 != 0x5c) && (bVar1 != 0x2f)) || (bVar1 != *(byte *)((int)lpBuffer + 1))) {
      local_114 = '=';
      local_113 = FUN_0042ea19((uint)*(byte *)lpBuffer);
      local_112 = 0x3a;
      BVar4 = SetEnvironmentVariableA(&local_114,(LPCSTR)lpBuffer);
      uVar6 = extraout_DL_02;
      if (BVar4 == 0) goto LAB_00427553;
    }
  }
  if (iVar7 != 0) {
    FUN_00403c10(lpBuffer);
    uVar6 = extraout_DL_04;
  }
LAB_00427571:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar6,(char)iVar7);
  return;
}



undefined4 FUN_00427583(void)

{
  undefined **ppuVar1;
  int iVar2;
  
  iVar2 = 0x14;
  if (DAT_0045a2e4 == 0) {
    iVar2 = 0x200;
  }
  else if (0x13 < DAT_0045a2e4) goto LAB_004275a2;
  DAT_0045a2e4 = iVar2;
LAB_004275a2:
  DAT_0045a2e0 = FUN_00403d40(DAT_0045a2e4,4);
  if (DAT_0045a2e0 == (uint *)0x0) {
    DAT_0045a2e4 = 0x14;
    DAT_0045a2e0 = FUN_00403d40(0x14,4);
    if (DAT_0045a2e0 == (uint *)0x0) {
      return 0x1a;
    }
  }
  iVar2 = 0;
  ppuVar1 = &PTR_DAT_00447b60;
  do {
    *(undefined ***)(iVar2 + (int)DAT_0045a2e0) = ppuVar1;
    ppuVar1 = ppuVar1 + 8;
    iVar2 = iVar2 + 4;
  } while ((int)ppuVar1 < 0x447de0);
  return 0;
}



void FUN_004275f6(void)

{
  FUN_0042af2e();
  if (DAT_00458470 != '\0') {
    FUN_0042eac1();
  }
  FUN_00403c10(DAT_0045a2e0);
  DAT_0045a2e0 = 0;
  return;
}



undefined ** FUN_0042761d(void)

{
  return &PTR_DAT_00447b60;
}



// Library Function - Single Match
//  __lock_file
// 
// Library: Visual Studio 2012 Release

void __cdecl __lock_file(FILE *_File)

{
  if ((_File < &PTR_DAT_00447b60) || ((FILE *)&DAT_00447dc0 < _File)) {
    EnterCriticalSection((LPCRITICAL_SECTION)(_File + 1));
  }
  else {
    __lock(((int)(_File + -0x223db) >> 5) + 0x10);
    _File->_flag = _File->_flag | 0x8000;
  }
  return;
}



// Library Function - Single Match
//  __lock_file2
// 
// Library: Visual Studio 2012 Release

void __cdecl __lock_file2(int _Index,void *_File)

{
  if (_Index < 0x14) {
    __lock(_Index + 0x10);
    *(uint *)((int)_File + 0xc) = *(uint *)((int)_File + 0xc) | 0x8000;
    return;
  }
  EnterCriticalSection((LPCRITICAL_SECTION)((int)_File + 0x20));
  return;
}



// Library Function - Single Match
//  __unlock_file
// 
// Libraries: Visual Studio 2008 Release, Visual Studio 2010 Release, Visual Studio 2012 Release

void __cdecl __unlock_file(FILE *_File)

{
  if (((FILE *)0x447b5f < _File) && (_File < (FILE *)0x447dc1)) {
    _File->_flag = _File->_flag & 0xffff7fff;
    FUN_00429e85(((int)(_File + -0x223db) >> 5) + 0x10);
    return;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)(_File + 1));
  return;
}



// Library Function - Single Match
//  __unlock_file2
// 
// Library: Visual Studio 2012 Release

void __cdecl __unlock_file2(int _Index,void *_File)

{
  if (_Index < 0x14) {
    *(uint *)((int)_File + 0xc) = *(uint *)((int)_File + 0xc) & 0xffff7fff;
    FUN_00429e85(_Index + 0x10);
    return;
  }
  LeaveCriticalSection((LPCRITICAL_SECTION)((int)_File + 0x20));
  return;
}



undefined4 __cdecl FUN_004276f9(char *param_1,uint param_2,byte *param_3)

{
  int *piVar1;
  undefined4 uVar2;
  int iVar3;
  char **ppcVar4;
  FILE local_24;
  
  local_24._ptr = (char *)0x0;
  ppcVar4 = (char **)&local_24._cnt;
  for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {
    *ppcVar4 = (char *)0x0;
    ppcVar4 = ppcVar4 + 1;
  }
  if (param_3 == (byte *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar2 = 0xffffffff;
  }
  else if ((param_2 == 0) || (param_1 != (char *)0x0)) {
    local_24._cnt = 0x7fffffff;
    if (param_2 < 0x80000000) {
      local_24._cnt = param_2;
    }
    local_24._flag = 0x42;
    local_24._base = param_1;
    local_24._ptr = param_1;
    uVar2 = FUN_0042c0aa(&local_24,param_3,(pthreadlocinfo *)0x0,(int **)&stack0x00000010);
    if (param_1 != (char *)0x0) {
      local_24._cnt = local_24._cnt - 1;
      if (local_24._cnt < 0) {
        FUN_0042bf5b(0,&local_24);
      }
      else {
        *local_24._ptr = '\0';
      }
    }
  }
  else {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar2 = 0xffffffff;
  }
  return uVar2;
}



void __cdecl FUN_004277a5(char *param_1,uint param_2,byte *param_3,int **param_4)

{
  FUN_004277c0(param_1,param_2,param_3,(pthreadlocinfo *)0x0,param_4);
  return;
}



undefined4 __cdecl
FUN_004277c0(char *param_1,uint param_2,byte *param_3,pthreadlocinfo *param_4,int **param_5)

{
  int *piVar1;
  undefined4 uVar2;
  int iVar3;
  char **ppcVar4;
  FILE local_24;
  
  local_24._ptr = (char *)0x0;
  ppcVar4 = (char **)&local_24._cnt;
  for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {
    *ppcVar4 = (char *)0x0;
    ppcVar4 = ppcVar4 + 1;
  }
  if (param_3 == (byte *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar2 = 0xffffffff;
  }
  else if ((param_2 == 0) || (param_1 != (char *)0x0)) {
    local_24._cnt = 0x7fffffff;
    if (param_2 < 0x80000000) {
      local_24._cnt = param_2;
    }
    local_24._flag = 0x42;
    local_24._base = param_1;
    local_24._ptr = param_1;
    uVar2 = FUN_0042c0aa(&local_24,param_3,param_4,param_5);
    if (param_1 != (char *)0x0) {
      local_24._cnt = local_24._cnt - 1;
      if (local_24._cnt < 0) {
        FUN_0042bf5b(0,&local_24);
      }
      else {
        *local_24._ptr = '\0';
      }
    }
  }
  else {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar2 = 0xffffffff;
  }
  return uVar2;
}



uint * __cdecl FUN_00427870(uint *param_1,byte param_2,uint param_3)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint *puVar4;
  
  if (param_3 == 0) {
    return param_1;
  }
  uVar1 = (uint)param_2;
  puVar4 = param_1;
  if ((DAT_0045849c >> 1 & 1) == 0) {
    if ((0x7f < (int)param_3) && ((DAT_00448004 >> 1 & 1) != 0)) {
      if (uVar1 == 0) {
        uVar1 = 0;
      }
      else {
        uVar1 = SUB164(CONCAT142(ZEXT214(0) & SUB1614((undefined  [16])0xffffffffff000000 >> 0x10,0)
                                 & SUB1614((undefined  [16])0xffffffffff00ffff >> 0x10,0),
                                 CONCAT11(param_2,param_2)),0);
        uVar1 = uVar1 | uVar1 << 0x10;
      }
      if (((uint)param_1 & 0xf) != 0) {
        uVar2 = 0x10 - ((uint)param_1 & 0xf);
        param_3 = param_3 - uVar2;
        for (uVar3 = uVar2 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {
          *(byte *)puVar4 = param_2;
          puVar4 = (uint *)((int)puVar4 + 1);
        }
        for (uVar2 = uVar2 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {
          *puVar4 = uVar1;
          puVar4 = puVar4 + 1;
        }
      }
      for (uVar3 = param_3 >> 7; uVar3 != 0; uVar3 = uVar3 - 1) {
        *puVar4 = uVar1;
        puVar4[1] = uVar1;
        puVar4[2] = uVar1;
        puVar4[3] = uVar1;
        puVar4[4] = uVar1;
        puVar4[5] = uVar1;
        puVar4[6] = uVar1;
        puVar4[7] = uVar1;
        puVar4[8] = uVar1;
        puVar4[9] = uVar1;
        puVar4[10] = uVar1;
        puVar4[0xb] = uVar1;
        puVar4[0xc] = uVar1;
        puVar4[0xd] = uVar1;
        puVar4[0xe] = uVar1;
        puVar4[0xf] = uVar1;
        puVar4[0x10] = uVar1;
        puVar4[0x11] = uVar1;
        puVar4[0x12] = uVar1;
        puVar4[0x13] = uVar1;
        puVar4[0x14] = uVar1;
        puVar4[0x15] = uVar1;
        puVar4[0x16] = uVar1;
        puVar4[0x17] = uVar1;
        puVar4[0x18] = uVar1;
        puVar4[0x19] = uVar1;
        puVar4[0x1a] = uVar1;
        puVar4[0x1b] = uVar1;
        puVar4[0x1c] = uVar1;
        puVar4[0x1d] = uVar1;
        puVar4[0x1e] = uVar1;
        puVar4[0x1f] = uVar1;
        puVar4 = puVar4 + 0x20;
      }
      if ((param_3 & 0x7f) != 0) {
        for (uVar3 = (param_3 & 0x7f) >> 4; uVar3 != 0; uVar3 = uVar3 - 1) {
          *puVar4 = uVar1;
          puVar4[1] = uVar1;
          puVar4[2] = uVar1;
          puVar4[3] = uVar1;
          puVar4 = puVar4 + 4;
        }
        if ((param_3 & 0xf) != 0) {
          for (uVar3 = (param_3 & 0xf) >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {
            *puVar4 = uVar1;
            puVar4 = puVar4 + 1;
          }
          for (uVar1 = param_3 & 3; uVar1 != 0; uVar1 = uVar1 - 1) {
            *(byte *)puVar4 = param_2;
            puVar4 = (uint *)((int)puVar4 + 1);
          }
        }
      }
      return param_1;
    }
    if (3 < param_3) {
      uVar2 = -(int)param_1 & 3;
      uVar3 = param_3;
      if (uVar2 != 0) {
        uVar3 = param_3 - uVar2;
        do {
          *(byte *)puVar4 = param_2;
          puVar4 = (uint *)((int)puVar4 + 1);
          uVar2 = uVar2 - 1;
        } while (uVar2 != 0);
      }
      uVar1 = uVar1 * 0x1010101;
      param_3 = uVar3 & 3;
      uVar3 = uVar3 >> 2;
      if (uVar3 != 0) {
        for (; uVar3 != 0; uVar3 = uVar3 - 1) {
          *puVar4 = uVar1;
          puVar4 = puVar4 + 1;
        }
        if (param_3 == 0) {
          return param_1;
        }
      }
    }
    do {
      *(char *)puVar4 = (char)uVar1;
      puVar4 = (uint *)((int)puVar4 + 1);
      param_3 = param_3 - 1;
    } while (param_3 != 0);
  }
  else {
    for (; param_3 != 0; param_3 = param_3 - 1) {
      *(byte *)puVar4 = param_2;
      puVar4 = (uint *)((int)puVar4 + 1);
    }
  }
  return param_1;
}



undefined4 __cdecl FUN_00427900(LPCSTR param_1,LPWSTR *param_2)

{
  bool bVar1;
  int *piVar2;
  undefined3 extraout_var;
  BOOL BVar3;
  int iVar4;
  DWORD DVar5;
  LPWSTR lpWideCharStr;
  UINT CodePage;
  undefined4 uVar6;
  
  CodePage = 0;
  if ((param_1 == (LPCSTR)0x0) || (param_2 == (LPWSTR *)0x0)) {
    piVar2 = __errno();
    uVar6 = 0x16;
    *piVar2 = 0x16;
    FUN_00429bfe();
  }
  else {
    bVar1 = FUN_0042ed35();
    if ((CONCAT31(extraout_var,bVar1) == 0) && (BVar3 = AreFileApisANSI(), BVar3 == 0)) {
      CodePage = 1;
    }
    *param_2 = (LPWSTR)0x0;
    iVar4 = MultiByteToWideChar(CodePage,0,param_1,-1,(LPWSTR)0x0,0);
    if (iVar4 == 0) {
      DVar5 = GetLastError();
      FID_conflict___dosmaperr(DVar5);
    }
    else {
      lpWideCharStr = (LPWSTR)FUN_00403c30(iVar4 * 2);
      *param_2 = lpWideCharStr;
      if (lpWideCharStr != (LPWSTR)0x0) {
        iVar4 = MultiByteToWideChar(CodePage,0,param_1,-1,lpWideCharStr,iVar4);
        if (iVar4 != 0) {
          return 1;
        }
        DVar5 = GetLastError();
        FID_conflict___dosmaperr(DVar5);
        FUN_00403c10(*param_2);
        *param_2 = (LPWSTR)0x0;
      }
    }
    uVar6 = 0;
  }
  return uVar6;
}



void __cdecl FUN_004279b2(undefined4 param_1)

{
  BOOL BVar1;
  FARPROC pFVar2;
  HMODULE local_8;
  
  BVar1 = GetModuleHandleExW(0,L"mscoree.dll",&local_8);
  if (BVar1 != 0) {
    pFVar2 = GetProcAddress(local_8,"CorExitProcess");
    if (pFVar2 != (FARPROC)0x0) {
      (*pFVar2)(param_1);
    }
  }
  return;
}



// Library Function - Single Match
//  ___crtExitProcess
// 
// Library: Visual Studio 2012 Release

void __cdecl ___crtExitProcess(int param_1)

{
  FUN_004279b2(param_1);
                    // WARNING: Subroutine does not return
  ExitProcess(param_1);
}



// Library Function - Single Match
//  __amsg_exit
// 
// Library: Visual Studio 2012 Release

void __cdecl __amsg_exit(int param_1)

{
  code *pcVar1;
  
  __FF_MSGBANNER();
  FUN_0042f096(param_1);
  __exit(0xff);
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



// Library Function - Single Match
//  __cexit
// 
// Library: Visual Studio 2012 Release

void __cdecl __cexit(void)

{
  _doexit(0,0,1);
  return;
}



int __cdecl FUN_00427a36(int param_1)

{
  BOOL BVar1;
  int iVar2;
  
  if (true) {
    BVar1 = __IsNonwritableInCurrentImage((PBYTE)&PTR___fpmath_0043f014);
    if (BVar1 != 0) {
      __fpmath(param_1);
    }
  }
  FUN_0042d9a2();
  iVar2 = __initterm_e((undefined **)&DAT_0043b2d4,(undefined **)&DAT_0043b2ec);
  if (iVar2 == 0) {
    FUN_00427063(FUN_0042ec46);
    FUN_00427b06((undefined **)&DAT_0043b270,(undefined **)&DAT_0043b2d0);
    if (DAT_004592b0 != (code *)0x0) {
      BVar1 = __IsNonwritableInCurrentImage((PBYTE)&DAT_004592b0);
      if (BVar1 != 0) {
        (*DAT_004592b0)(0,2,0);
      }
    }
    iVar2 = 0;
  }
  return iVar2;
}



// Library Function - Single Match
//  __exit
// 
// Library: Visual Studio 2012 Release

void __cdecl __exit(int param_1)

{
  _doexit(param_1,1,0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00427ace(void)

{
  PVOID pvVar1;
  HMODULE hModule;
  FARPROC pFVar2;
  
  pvVar1 = EncodePointer((PVOID)0x0);
  FUN_0042f3e6(pvVar1);
  FUN_00429bc6(pvVar1);
  FUN_0042991b(pvVar1);
  FUN_0042f400(pvVar1);
  FUN_0042f3d5();
  FUN_0042f611(pvVar1);
  hModule = GetModuleHandleW(L"kernel32.dll");
  pFVar2 = GetProcAddress(hModule,"FlsAlloc");
  DAT_00459220 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"FlsFree");
  DAT_00459224 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"FlsGetValue");
  DAT_00459228 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"FlsSetValue");
  DAT_0045922c = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"InitializeCriticalSectionEx");
  DAT_00459230 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"CreateEventExW");
  _DAT_00459234 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"CreateSemaphoreExW");
  _DAT_00459238 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"SetThreadStackGuarantee");
  _DAT_0045923c = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"CreateThreadpoolTimer");
  _DAT_00459240 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"SetThreadpoolTimer");
  _DAT_00459244 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"WaitForThreadpoolTimerCallbacks");
  _DAT_00459248 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"CloseThreadpoolTimer");
  _DAT_0045924c = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"CreateThreadpoolWait");
  _DAT_00459250 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"SetThreadpoolWait");
  _DAT_00459254 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"CloseThreadpoolWait");
  _DAT_00459258 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"FlushProcessWriteBuffers");
  _DAT_0045925c = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"FreeLibraryWhenCallbackReturns");
  _DAT_00459260 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"GetCurrentProcessorNumber");
  _DAT_00459264 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"GetLogicalProcessorInformation");
  _DAT_00459268 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"CreateSymbolicLinkW");
  _DAT_0045926c = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"SetDefaultDllDirectories");
  _DAT_00459270 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"EnumSystemLocalesEx");
  _DAT_00459278 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"CompareStringEx");
  DAT_00459274 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"GetDateFormatEx");
  _DAT_0045927c = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"GetLocaleInfoEx");
  _DAT_00459280 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"GetTimeFormatEx");
  _DAT_00459284 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"GetUserDefaultLocaleName");
  _DAT_00459288 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"IsValidLocaleName");
  _DAT_0045928c = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"LCMapStringEx");
  DAT_00459290 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"GetCurrentPackageId");
  DAT_00459294 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"GetTickCount64");
  _DAT_00459298 = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"GetFileInformationByHandleExW");
  _DAT_0045929c = (uint)pFVar2 ^ DAT_00447ff8;
  pFVar2 = GetProcAddress(hModule,"SetFileInformationByHandleW");
  _DAT_004592a0 = (uint)pFVar2 ^ DAT_00447ff8;
  return;
}



void __cdecl FUN_00427b06(undefined **param_1,undefined **param_2)

{
  uint uVar1;
  uint uVar2;
  
  uVar1 = 0;
  uVar2 = ~-(uint)(param_2 < param_1) & (uint)((int)param_2 + (3 - (int)param_1)) >> 2;
  if (uVar2 != 0) {
    do {
      if ((code *)*param_1 != (code *)0x0) {
        (*(code *)*param_1)();
      }
      param_1 = (code **)param_1 + 1;
      uVar1 = uVar1 + 1;
    } while (uVar1 < uVar2);
  }
  return;
}



// Library Function - Single Match
//  __initterm_e
// 
// Libraries: Visual Studio 2008 Release, Visual Studio 2010 Release, Visual Studio 2012 Release

void __cdecl __initterm_e(undefined **param_1,undefined **param_2)

{
  int iVar1;
  
  iVar1 = 0;
  while ((param_1 < param_2 && (iVar1 == 0))) {
    if ((code *)*param_1 != (code *)0x0) {
      iVar1 = (*(code *)*param_1)();
    }
    param_1 = (code **)param_1 + 1;
  }
  return;
}



void FUN_00427b5e(void)

{
  __lock(8);
  return;
}



void FUN_00427b67(void)

{
  FUN_00429e85(8);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _doexit
// 
// Library: Visual Studio 2012 Release

void __cdecl _doexit(int param_1,int param_2,int param_3)

{
  PVOID *ppvVar1;
  PVOID pvVar2;
  code *pcVar3;
  PVOID *ppvVar4;
  PVOID *ppvVar5;
  PVOID *ppvVar6;
  PVOID *local_20;
  
  __lock(8);
  pcVar3 = DecodePointer_exref;
  if (_DAT_0045844c != 1) {
    _DAT_00458474 = 1;
    DAT_00458470 = (undefined)param_3;
    if (param_2 == 0) {
      local_20 = (PVOID *)DecodePointer(DAT_004592b8);
      if (local_20 != (PVOID *)0x0) {
        ppvVar1 = (PVOID *)DecodePointer(DAT_004592b4);
        ppvVar6 = ppvVar1;
        while (ppvVar1 = ppvVar1 + -1, local_20 <= ppvVar1) {
          pvVar2 = EncodePointer((PVOID)0x0);
          if (*ppvVar1 != pvVar2) {
            if (ppvVar1 < local_20) break;
            pcVar3 = (code *)(*pcVar3)(*ppvVar1);
            pvVar2 = EncodePointer((PVOID)0x0);
            *ppvVar1 = pvVar2;
            (*pcVar3)();
            pcVar3 = DecodePointer_exref;
            ppvVar4 = (PVOID *)DecodePointer(DAT_004592b8);
            ppvVar5 = (PVOID *)DecodePointer(DAT_004592b4);
            if ((local_20 != ppvVar4) || (ppvVar6 != ppvVar5)) {
              ppvVar1 = ppvVar5;
              local_20 = ppvVar4;
              ppvVar6 = ppvVar5;
            }
          }
        }
      }
      FUN_00427b06((undefined **)&DAT_0043b2f0,(undefined **)&DAT_0043b300);
    }
    FUN_00427b06((undefined **)&DAT_0043b304,(undefined **)&DAT_0043b308);
  }
  FUN_00427c8a();
  if (param_3 != 0) {
    return;
  }
  _DAT_0045844c = 1;
  FUN_00429e85(8);
  ___crtExitProcess(param_1);
  if (false) {
    FUN_00429e85(8);
  }
  return;
}



void FUN_00427c8a(void)

{
  int unaff_EBP;
  
  if (*(int *)(unaff_EBP + 0x10) != 0) {
    FUN_00429e85(8);
  }
  return;
}



// Library Function - Single Match
//  _exit
// 
// Library: Visual Studio 2012 Release

void __cdecl _exit(int _Code)

{
  _doexit(_Code,0,0);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

int entry(void)

{
  bool bVar1;
  undefined3 extraout_var;
  int iVar2;
  
  ___security_init_cookie();
  FUN_0042ece4();
  FUN_0042fbaf(2);
  bVar1 = FUN_00403c70();
  if (CONCAT31(extraout_var,bVar1) == 0) {
    _fast_error_exit(0x1c);
  }
  iVar2 = FUN_0042e8c4();
  if (iVar2 == 0) {
    _fast_error_exit(0x10);
  }
  FUN_0042ec26();
  iVar2 = FUN_0042bca7();
  if (iVar2 < 0) {
    _fast_error_exit(0x1b);
  }
  DAT_004592ac = GetCommandLineA();
  DAT_00458480 = FUN_0042fc98();
  iVar2 = FUN_0042f89f();
  if (iVar2 < 0) {
    __amsg_exit(8);
  }
  iVar2 = FUN_0042face();
  if (iVar2 < 0) {
    __amsg_exit(9);
  }
  iVar2 = FUN_00427a36(1);
  if (iVar2 != 0) {
    __amsg_exit(iVar2);
  }
  __wincmdln();
  iVar2 = FUN_00403b60((HMODULE)&IMAGE_DOS_HEADER_00400000);
  if (true) {
    _exit(iVar2);
  }
  __cexit();
  return iVar2;
}



// Library Function - Single Match
//  _fast_error_exit
// 
// Libraries: Visual Studio 2008 Release, Visual Studio 2010 Release, Visual Studio 2012 Release

void __cdecl _fast_error_exit(int param_1)

{
  if (DAT_00458e80 == 1) {
    __FF_MSGBANNER();
  }
  FUN_0042f096(param_1);
  ___crtExitProcess(0xff);
  return;
}



// WARNING: This is an inlined function
// WARNING: Function: __alloca_probe replaced with injection: alloca_probe
// Library Function - Single Match
//  __alloca_probe_16
// 
// Library: Visual Studio

uint __alloca_probe_16(undefined1 param_1)

{
  uint in_EAX;
  uint uVar1;
  
  uVar1 = 4 - in_EAX & 0xf;
  return in_EAX + uVar1 | -(uint)CARRY4(in_EAX,uVar1);
}



// WARNING: This is an inlined function
// WARNING: Function: __alloca_probe replaced with injection: alloca_probe
// Library Function - Single Match
//  __alloca_probe_8
// 
// Library: Visual Studio

uint __alloca_probe_8(undefined1 param_1)

{
  uint in_EAX;
  uint uVar1;
  
  uVar1 = 4 - in_EAX & 7;
  return in_EAX + uVar1 | -(uint)CARRY4(in_EAX,uVar1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool FUN_00427e6c(void)

{
  return _DAT_00458488 == (DAT_00447ff8 | 1);
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_00427e81(byte *param_1)

{
  int *piVar1;
  undefined4 uVar2;
  undefined **ppuVar3;
  int _Flag;
  pthreadlocinfo *pptVar4;
  int **ppiVar5;
  
  if (param_1 == (byte *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar2 = 0xffffffff;
  }
  else {
    ppuVar3 = FUN_0042761d();
    __lock_file2(1,ppuVar3 + 8);
    ppuVar3 = FUN_0042761d();
    _Flag = FUN_0042f64f((FILE *)(ppuVar3 + 8));
    ppiVar5 = (int **)&stack0x00000008;
    pptVar4 = (pthreadlocinfo *)0x0;
    ppuVar3 = FUN_0042761d();
    uVar2 = FUN_0042c0aa((FILE *)(ppuVar3 + 8),param_1,pptVar4,ppiVar5);
    ppuVar3 = FUN_0042761d();
    __ftbuf(_Flag,(FILE *)(ppuVar3 + 8));
    FUN_00427f1d();
  }
  return uVar2;
}



void FUN_00427f1d(void)

{
  undefined **ppuVar1;
  
  ppuVar1 = FUN_0042761d();
  __unlock_file2(1,ppuVar1 + 8);
  return;
}



void FUN_00427f30(char *param_1)

{
  _atol(param_1);
  return;
}



// Library Function - Single Match
//  _atol
// 
// Library: Visual Studio 2012 Release

long __cdecl _atol(char *_Str)

{
  long lVar1;
  
  lVar1 = FUN_00428173((byte *)_Str,(byte **)0x0,10);
  return lVar1;
}



uint __cdecl
FUN_00427f4d(pthreadlocinfo *param_1,byte *param_2,byte **param_3,uint param_4,uint param_5)

{
  byte *pbVar1;
  ushort uVar2;
  int *piVar3;
  undefined2 extraout_var;
  uint uVar4;
  uint uVar5;
  int iVar6;
  byte *pbVar7;
  pthreadlocinfo ptVar8;
  pthreadlocinfo local_28 [2];
  int local_20;
  char local_1c;
  ushort *local_18;
  uint local_14;
  uint local_10;
  uint local_c;
  byte local_5;
  
  FUN_00427078(local_28,param_1);
  if (param_3 != (byte **)0x0) {
    *param_3 = param_2;
  }
  if ((param_2 == (byte *)0x0) || ((param_4 != 0 && (((int)param_4 < 2 || (0x24 < (int)param_4))))))
  {
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
  }
  else {
    local_10 = 0;
    local_5 = *param_2;
    ptVar8 = local_28[0];
    pbVar1 = param_2;
    while( true ) {
      pbVar7 = pbVar1 + 1;
      if (ptVar8->mb_cur_max < 2) {
        uVar4 = ptVar8->pctype[local_5] & 8;
      }
      else {
        uVar2 = FUN_0042fd84((uint)local_5,8,local_28);
        uVar4 = CONCAT22(extraout_var,uVar2);
        ptVar8 = local_28[0];
      }
      if (uVar4 == 0) break;
      local_5 = *pbVar7;
      pbVar1 = pbVar7;
    }
    if (local_5 == 0x2d) {
      param_5 = param_5 | 2;
LAB_00427feb:
      local_5 = *pbVar7;
      pbVar7 = pbVar1 + 2;
    }
    else if (local_5 == 0x2b) goto LAB_00427feb;
    if (((-1 < (int)param_4) && (param_4 != 1)) && ((int)param_4 < 0x25)) {
      if (param_4 == 0) {
        if (local_5 != 0x30) {
          param_4 = 10;
          goto LAB_0042805c;
        }
        if ((*pbVar7 != 0x78) && (*pbVar7 != 0x58)) {
          param_4 = 8;
          goto LAB_0042805c;
        }
        param_4 = 0x10;
      }
      else if ((param_4 != 0x10) || (local_5 != 0x30)) goto LAB_0042805c;
      if ((*pbVar7 == 0x78) || (*pbVar7 == 0x58)) {
        local_5 = pbVar7[1];
        pbVar7 = pbVar7 + 2;
      }
LAB_0042805c:
      uVar4 = (uint)(0xffffffff / (ulonglong)param_4);
      local_14 = (uint)(0xffffffff % (ulonglong)param_4);
      local_18 = local_28[0]->pctype;
      do {
        if ((local_18[local_5] & 4) == 0) {
          if ((local_18[local_5] & 0x103) == 0) goto LAB_004280dd;
          iVar6 = (int)(char)local_5;
          if ((byte)(local_5 + 0x9f) < 0x1a) {
            iVar6 = iVar6 + -0x20;
          }
          uVar5 = iVar6 - 0x37;
        }
        else {
          uVar5 = (int)(char)local_5 - 0x30;
        }
        if (param_4 <= uVar5) goto LAB_004280dd;
        if ((local_10 < uVar4) || ((local_10 == uVar4 && (uVar5 <= local_14)))) {
          local_10 = local_10 * param_4 + uVar5;
          param_5 = param_5 | 8;
        }
        else {
          param_5 = param_5 | 0xc;
          if (param_3 == (byte **)0x0) goto LAB_004280dd;
        }
        local_5 = *pbVar7;
        pbVar7 = pbVar7 + 1;
      } while( true );
    }
    if (param_3 != (byte **)0x0) {
      *param_3 = param_2;
    }
  }
  local_10 = 0;
LAB_0042815d:
  if (local_1c != '\0') {
    *(uint *)(local_20 + 0x70) = *(uint *)(local_20 + 0x70) & 0xfffffffd;
  }
  return local_10;
LAB_004280dd:
  pbVar7 = pbVar7 + -1;
  if ((param_5 & 8) == 0) {
    if (param_3 != (byte **)0x0) {
      pbVar7 = param_2;
    }
    local_10 = 0;
  }
  else if (((param_5 & 4) != 0) ||
          (((param_5 & 1) == 0 &&
           ((((param_5 & 2) != 0 && (0x80000000 < local_10)) ||
            (((param_5 & 2) == 0 && (0x7fffffff < local_10)))))))) {
    local_10 = uVar4;
    local_c = param_5;
    piVar3 = __errno();
    *piVar3 = 0x22;
    param_5 = local_c;
    if ((local_c & 1) == 0) {
      local_10 = ((local_c & 2) != 0) + 0x7fffffff;
    }
    else {
      local_10 = 0xffffffff;
    }
  }
  if (param_3 != (byte **)0x0) {
    *param_3 = pbVar7;
  }
  if ((param_5 & 2) != 0) {
    local_10 = -local_10;
  }
  goto LAB_0042815d;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_00428173(byte *param_1,byte **param_2,uint param_3)

{
  undefined **ppuVar1;
  
  if (_DAT_0045871c == 0) {
    ppuVar1 = &PTR_DAT_00448a18;
  }
  else {
    ppuVar1 = (undefined **)0x0;
  }
  FUN_00427f4d((pthreadlocinfo *)ppuVar1,param_1,param_2,param_3,0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_0042819d(byte *param_1,byte **param_2,uint param_3)

{
  undefined **ppuVar1;
  
  if (_DAT_0045871c == 0) {
    ppuVar1 = &PTR_DAT_00448a18;
  }
  else {
    ppuVar1 = (undefined **)0x0;
  }
  FUN_00427f4d((pthreadlocinfo *)ppuVar1,param_1,param_2,param_3,1);
  return;
}



ulonglong __cdecl
FUN_004281c7(pthreadlocinfo *param_1,byte *param_2,byte **param_3,uint param_4,uint param_5)

{
  byte *pbVar1;
  ulonglong uVar2;
  ushort uVar3;
  int *piVar4;
  undefined2 extraout_var;
  uint uVar5;
  byte bVar6;
  uint extraout_ECX;
  int iVar7;
  pthreadlocinfo ptVar8;
  byte *pbVar9;
  ulonglong uVar10;
  ulonglong uVar11;
  pthreadlocinfo local_44 [2];
  int local_3c;
  char local_38;
  uint local_30;
  uint local_2c;
  uint local_28;
  uint local_24;
  ushort *local_20;
  uint local_1c;
  undefined4 local_18;
  uint local_14;
  uint local_10;
  uint local_c;
  byte local_5;
  
  FUN_00427078(local_44,param_1);
  if (param_3 != (byte **)0x0) {
    *param_3 = param_2;
  }
  if ((param_2 == (byte *)0x0) || ((param_4 != 0 && (((int)param_4 < 2 || (0x24 < (int)param_4))))))
  {
    piVar4 = __errno();
    *piVar4 = 0x16;
    FUN_00429bfe();
    uVar2 = 0;
    goto LAB_00428422;
  }
  local_5 = *param_2;
  local_c = 0;
  ptVar8 = local_44[0];
  pbVar1 = param_2;
  while( true ) {
    pbVar9 = pbVar1 + 1;
    if (ptVar8->mb_cur_max < 2) {
      uVar5 = ptVar8->pctype[local_5] & 8;
    }
    else {
      uVar3 = FUN_0042fd84((uint)local_5,8,local_44);
      uVar5 = CONCAT22(extraout_var,uVar3);
      ptVar8 = local_44[0];
    }
    if (uVar5 == 0) break;
    local_5 = *pbVar9;
    pbVar1 = pbVar9;
  }
  if (local_5 == 0x2d) {
    param_5 = param_5 | 2;
LAB_00428272:
    local_5 = *pbVar9;
    pbVar9 = pbVar1 + 2;
  }
  else if (local_5 == 0x2b) goto LAB_00428272;
  if (param_4 == 0) {
    if (local_5 != 0x30) {
      param_4 = 10;
      goto LAB_004282c0;
    }
    if ((*pbVar9 != 0x78) && (*pbVar9 != 0x58)) {
      param_4 = 8;
      goto LAB_004282c0;
    }
    param_4 = 0x10;
  }
  if (((param_4 == 0x10) && (local_5 == 0x30)) && ((*pbVar9 == 0x78 || (*pbVar9 == 0x58)))) {
    local_5 = pbVar9[1];
    pbVar9 = pbVar9 + 2;
  }
LAB_004282c0:
  local_2c = (int)param_4 >> 0x1f;
  local_30 = param_4;
  local_10 = param_5;
  uVar10 = __aulldvrm(0xffffffff,0xffffffff,param_4,local_2c);
  uVar11 = (ulonglong)local_c;
  local_20 = local_44[0]->pctype;
  bVar6 = local_5;
  local_28 = extraout_ECX;
  local_24 = param_4;
  do {
    local_c = (uint)uVar11;
    local_14 = (uint)uVar10;
    uVar2 = 0;
    uVar3 = local_20[bVar6];
    local_1c = (uint)uVar3;
    if ((uVar3 & 4) == 0) {
      if ((uVar3 & 0x103) == 0) break;
      iVar7 = (int)(char)bVar6;
      if ((byte)(bVar6 + 0x9f) < 0x1a) {
        iVar7 = iVar7 + -0x20;
      }
      local_1c = iVar7 - 0x37;
    }
    else {
      local_1c = (int)(char)bVar6 - 0x30;
    }
    if (param_4 <= local_1c) break;
    if (((uVar11 < uVar10) || ((false && (local_c < local_14)))) ||
       (((uVar10 == uVar11 && (true)) && ((local_24 != 0 || ((true && (local_1c <= local_28))))))))
    {
      local_10 = local_10 | 8;
      uVar11 = __allmul(local_30,local_2c,local_c,(uint)(uVar11 >> 0x20));
      local_18 = (undefined4)(uVar10 >> 0x20);
      local_14 = (uint)uVar10;
      uVar11 = uVar11 - 0x1c;
    }
    else {
      local_10 = local_10 | 0xc;
      if (param_3 == (byte **)0x0) break;
    }
    bVar6 = *pbVar9;
    pbVar9 = pbVar9 + 1;
  } while( true );
  uVar5 = local_10;
  pbVar9 = pbVar9 + -1;
  if ((local_10 & 8) == 0) {
    if (param_3 != (byte **)0x0) {
      pbVar9 = param_2;
    }
  }
  else if (((local_10 & 4) != 0) ||
          ((uVar2 = uVar11, (local_10 & 1) == 0 &&
           ((((local_10 & 2) != 0 && ((0x8000000000000000 < uVar11 || ((false && (local_c != 0))))))
            || (((local_10 & 2) == 0 &&
                ((0x7ffffffeffffffff < uVar11 && ((0x7fffffffffffffff < uVar11 || (false))))))))))))
  {
    piVar4 = __errno();
    local_18 = (undefined4)(uVar10 >> 0x20);
    local_14 = (uint)uVar10;
    *piVar4 = 0x22;
    if ((uVar5 & 1) == 0) {
      if ((uVar5 & 2) == 0) {
        uVar2 = 0x7fffffffffffffff;
      }
      else {
        uVar2 = 0x8000000000000000;
      }
    }
    else {
      uVar2 = 0xffffffffffffffff;
    }
  }
  if (param_3 != (byte **)0x0) {
    *param_3 = pbVar9;
  }
  if ((uVar5 & 2) != 0) {
    uVar2 = CONCAT44(-((int)(uVar2 >> 0x20) + (uint)((int)uVar2 != 0)),-(int)uVar2);
  }
LAB_00428422:
  if (local_38 != '\0') {
    *(uint *)(local_3c + 0x70) = *(uint *)(local_3c + 0x70) & 0xfffffffd;
  }
  return uVar2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

ulonglong __cdecl FUN_00428437(byte *param_1,byte **param_2,uint param_3)

{
  ulonglong uVar1;
  undefined **ppuVar2;
  
  if (_DAT_0045871c == 0) {
    ppuVar2 = &PTR_DAT_00448a18;
  }
  else {
    ppuVar2 = (undefined **)0x0;
  }
  uVar1 = FUN_004281c7((pthreadlocinfo *)ppuVar2,param_1,param_2,param_3,0);
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_00428461(byte *param_1,byte **param_2,pthreadlocinfo *param_3)

{
  double dVar1;
  ushort uVar2;
  int *piVar3;
  undefined2 extraout_var;
  uint uVar4;
  uint *puVar5;
  uint *extraout_EDX;
  pthreadlocinfo ptVar6;
  uint *extraout_EDX_00;
  uint *extraout_EDX_01;
  byte *pbVar7;
  undefined uVar8;
  undefined8 in_stack_ffffffc8;
  pthreadlocinfo local_30 [2];
  int local_28;
  char local_24;
  uint local_20 [6];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  FUN_00427078(local_30,param_3);
  uVar8 = (undefined)in_stack_ffffffc8;
  if (param_2 != (byte **)0x0) {
    *param_2 = param_1;
  }
  ptVar6 = local_30[0];
  pbVar7 = param_1;
  if (param_1 == (byte *)0x0) {
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
    puVar5 = extraout_EDX;
  }
  else {
    while( true ) {
      if (ptVar6->mb_cur_max < 2) {
        uVar4 = ptVar6->pctype[*pbVar7] & 8;
      }
      else {
        uVar2 = FUN_0042fd84((uint)*pbVar7,8,local_30);
        uVar4 = CONCAT22(extraout_var,uVar2);
        ptVar6 = local_30[0];
      }
      uVar8 = (undefined)in_stack_ffffffc8;
      if (uVar4 == 0) break;
      pbVar7 = pbVar7 + 1;
    }
    puVar5 = (uint *)FUN_00430015(local_20,(char *)pbVar7,(int *)local_30);
    if (param_2 != (byte **)0x0) {
      *param_2 = pbVar7 + puVar5[1];
    }
    if ((*puVar5 & 0x240) == 0) {
      if ((*(byte *)puVar5 & 0x81) == 0) {
        if (((*puVar5 & 0x100) != 0) && (*(double *)(puVar5 + 4) == 0.0)) {
          piVar3 = __errno();
          *piVar3 = 0x22;
          puVar5 = extraout_EDX_01;
        }
      }
      else {
        dVar1 = _DAT_00448a30;
        if (*pbVar7 == 0x2d) {
          dVar1 = -_DAT_00448a30;
        }
        uVar8 = SUB81(dVar1,0);
        piVar3 = __errno();
        *piVar3 = 0x22;
        puVar5 = extraout_EDX_00;
      }
    }
    else if (param_2 != (byte **)0x0) {
      *param_2 = param_1;
    }
  }
  if (local_24 != '\0') {
    *(uint *)(local_28 + 0x70) = *(uint *)(local_28 + 0x70) & 0xfffffffd;
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,(char)puVar5,uVar8);
  return;
}



void __cdecl FUN_00428578(byte *param_1,byte **param_2)

{
  FUN_00428461(param_1,param_2,(pthreadlocinfo *)0x0);
  return;
}



void __cdecl FUN_0042858d(undefined4 *param_1)

{
  longlong lVar1;
  _FILETIME local_c;
  
  GetSystemTimeAsFileTime(&local_c);
  lVar1 = __aulldiv(local_c.dwLowDateTime + 0x2ac18000,
                    local_c.dwHighDateTime + 0xfe624e21 + (uint)(0xd53e7fff < local_c.dwLowDateTime)
                    ,10000000,0);
  if ((0x793406fff < lVar1) && ((true || (0x93406fff < (uint)lVar1)))) {
    lVar1 = -1;
  }
  if (param_1 != (undefined4 *)0x0) {
    *param_1 = (int)lVar1;
    param_1[1] = (int)((ulonglong)lVar1 >> 0x20);
  }
  return;
}



// Library Function - Single Match
//  __aullshr
// 
// Library: Visual Studio

ulonglong __fastcall __aullshr(byte param_1,uint param_2)

{
  uint in_EAX;
  
  if (0x3f < param_1) {
    return 0;
  }
  if (param_1 < 0x20) {
    return CONCAT44(param_2 >> (param_1 & 0x1f),
                    in_EAX >> (param_1 & 0x1f) | param_2 << 0x20 - (param_1 & 0x1f));
  }
  return (ulonglong)(param_2 >> (param_1 & 0x1f));
}



void __cdecl FUN_004285ff(char *param_1,int param_2)

{
  FUN_0042861d(FUN_004301ca,param_1,param_2,0,&stack0x0000000c);
  return;
}



undefined4 __cdecl
FUN_0042861d(undefined *param_1,char *param_2,int param_3,undefined4 param_4,undefined4 param_5)

{
  int *piVar1;
  undefined4 uVar2;
  size_t sVar3;
  int iVar4;
  size_t *psVar5;
  char *local_24;
  size_t local_20;
  char *local_1c;
  undefined4 local_18;
  
  local_24 = (char *)0x0;
  psVar5 = &local_20;
  for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {
    *psVar5 = 0;
    psVar5 = psVar5 + 1;
  }
  if ((param_2 == (char *)0x0) || (param_3 == 0)) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar2 = 0xffffffff;
  }
  else {
    sVar3 = _strlen(param_2);
    local_18 = 0x49;
    local_1c = param_2;
    local_24 = param_2;
    local_20 = 0x7fffffff;
    if (sVar3 < 0x80000000) {
      local_20 = sVar3;
    }
    uVar2 = (*(code *)param_1)(&local_24,param_3,param_4,param_5);
  }
  return uVar2;
}



undefined * FUN_00428690(void)

{
  _ptiddata p_Var1;
  
  p_Var1 = __getptd();
  if ((p_Var1->ptlocinfo != (pthreadlocinfo)PTR_DAT_0044895c) &&
     ((p_Var1->_ownlocale & DAT_00448a20) == 0)) {
    FUN_0042dc50();
  }
  return PTR_PTR_DAT_00447de0;
}



// Library Function - Single Match
//  _strnlen
// 
// Libraries: Visual Studio 2008 Release, Visual Studio 2010 Release, Visual Studio 2012 Release,
// Visual Studio 2019 Release

size_t __cdecl _strnlen(char *_Str,size_t _MaxCount)

{
  uint uVar1;
  
  uVar1 = 0;
  if (_MaxCount != 0) {
    do {
      if (*_Str == '\0') {
        return uVar1;
      }
      uVar1 = uVar1 + 1;
      _Str = _Str + 1;
    } while (uVar1 < _MaxCount);
  }
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _strchr
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017, Visual Studio 2019

char * __cdecl _strchr(char *_Str,int _Val)

{
  int iVar1;
  char cVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  char *pcVar6;
  uint *puVar7;
  undefined auVar8 [16];
  char cVar10;
  char cVar11;
  char cVar12;
  char cVar13;
  char cVar14;
  char cVar15;
  char cVar16;
  undefined auVar9 [16];
  
  if (_DAT_00458498 != 0) {
    auVar9 = pshuflw(ZEXT216(CONCAT11((char)_Val,(char)_Val)),
                     ZEXT216(CONCAT11((char)_Val,(char)_Val)),0);
    uVar3 = -1 << (sbyte)((uint)_Str & 0xf);
    pcVar6 = _Str + -((uint)_Str & 0xf);
    while( true ) {
      cVar2 = SUB161(auVar9,0);
      cVar10 = SUB161(auVar9 >> 8,0);
      cVar11 = SUB161(auVar9 >> 0x10,0);
      cVar12 = SUB161(auVar9 >> 0x18,0);
      cVar13 = SUB161(auVar9 >> 0x20,0);
      cVar14 = SUB161(auVar9 >> 0x28,0);
      cVar15 = SUB161(auVar9 >> 0x30,0);
      cVar16 = SUB161(auVar9 >> 0x38,0);
      auVar8 = CONCAT115(-(pcVar6[0xf] == '\0'),
                         CONCAT114(-(pcVar6[0xe] == '\0'),
                                   CONCAT113(-(pcVar6[0xd] == '\0'),
                                             CONCAT112(-(pcVar6[0xc] == '\0'),
                                                       CONCAT111(-(pcVar6[0xb] == '\0'),
                                                                 CONCAT110(-(pcVar6[10] == '\0'),
                                                                           CONCAT19(-(pcVar6[9] ==
                                                                                     '\0'),CONCAT18(
                                                  -(pcVar6[8] == '\0'),
                                                  CONCAT17(-(pcVar6[7] == '\0'),
                                                           CONCAT16(-(pcVar6[6] == '\0'),
                                                                    CONCAT15(-(pcVar6[5] == '\0'),
                                                                             CONCAT14(-(pcVar6[4] ==
                                                                                       '\0'),
                                                  CONCAT13(-(pcVar6[3] == '\0'),
                                                           CONCAT12(-(pcVar6[2] == '\0'),
                                                                    CONCAT11(-(pcVar6[1] == '\0'),
                                                                             -(*pcVar6 == '\0'))))))
                                                  )))))))))) |
               CONCAT115(-(pcVar6[0xf] == cVar16),
                         CONCAT114(-(pcVar6[0xe] == cVar15),
                                   CONCAT113(-(pcVar6[0xd] == cVar14),
                                             CONCAT112(-(pcVar6[0xc] == cVar13),
                                                       CONCAT111(-(pcVar6[0xb] == cVar12),
                                                                 CONCAT110(-(pcVar6[10] == cVar11),
                                                                           CONCAT19(-(pcVar6[9] ==
                                                                                     cVar10),
                                                  CONCAT18(-(pcVar6[8] == cVar2),
                                                           CONCAT17(-(pcVar6[7] == cVar16),
                                                                    CONCAT16(-(pcVar6[6] == cVar15),
                                                                             CONCAT15(-(pcVar6[5] ==
                                                                                       cVar14),
                                                  CONCAT14(-(pcVar6[4] == cVar13),
                                                           CONCAT13(-(pcVar6[3] == cVar12),
                                                                    CONCAT12(-(pcVar6[2] == cVar11),
                                                                             CONCAT11(-(pcVar6[1] ==
                                                                                       cVar10),-(*
                                                  pcVar6 == cVar2))))))))))))))));
      uVar3 = (ushort)((ushort)(SUB161(auVar8 >> 7,0) & 1) |
                       (ushort)(SUB161(auVar8 >> 0xf,0) & 1) << 1 |
                       (ushort)(SUB161(auVar8 >> 0x17,0) & 1) << 2 |
                       (ushort)(SUB161(auVar8 >> 0x1f,0) & 1) << 3 |
                       (ushort)(SUB161(auVar8 >> 0x27,0) & 1) << 4 |
                       (ushort)(SUB161(auVar8 >> 0x2f,0) & 1) << 5 |
                       (ushort)(SUB161(auVar8 >> 0x37,0) & 1) << 6 |
                       (ushort)(SUB161(auVar8 >> 0x3f,0) & 1) << 7 |
                       (ushort)(SUB161(auVar8 >> 0x47,0) & 1) << 8 |
                       (ushort)(SUB161(auVar8 >> 0x4f,0) & 1) << 9 |
                       (ushort)(SUB161(auVar8 >> 0x57,0) & 1) << 10 |
                       (ushort)(SUB161(auVar8 >> 0x5f,0) & 1) << 0xb |
                       (ushort)(SUB161(auVar8 >> 0x67,0) & 1) << 0xc |
                       (ushort)(SUB161(auVar8 >> 0x6f,0) & 1) << 0xd |
                       (ushort)(SUB161(auVar8 >> 0x77,0) & 1) << 0xe |
                      (ushort)SUB161(auVar8 >> 0x7f,0) << 0xf) & uVar3;
      if (uVar3 != 0) break;
      uVar3 = 0xffffffff;
      pcVar6 = pcVar6 + 0x10;
    }
    iVar1 = 0;
    if (uVar3 != 0) {
      for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {
      }
    }
    pcVar6 = pcVar6 + iVar1;
    if (cVar2 != *pcVar6) {
      pcVar6 = (char *)0x0;
    }
    return pcVar6;
  }
  uVar3 = (uint)_Str & 3;
  while (uVar3 != 0) {
    if (*_Str == (char)_Val) {
      return (char *)(uint *)_Str;
    }
    if (*_Str == '\0') {
      return (char *)0x0;
    }
    uVar3 = (uint)(uint *)((int)_Str + 1) & 3;
    _Str = (char *)(uint *)((int)_Str + 1);
  }
  while( true ) {
    while( true ) {
      uVar3 = *(uint *)_Str;
      uVar5 = uVar3 ^ CONCAT22(CONCAT11((char)_Val,(char)_Val),CONCAT11((char)_Val,(char)_Val));
      uVar4 = uVar3 ^ 0xffffffff ^ uVar3 + 0x7efefeff;
      puVar7 = (uint *)((int)_Str + 4);
      if (((uVar5 ^ 0xffffffff ^ uVar5 + 0x7efefeff) & 0x81010100) != 0) break;
      _Str = (char *)puVar7;
      if ((uVar4 & 0x81010100) != 0) {
        if ((uVar4 & 0x1010100) != 0) {
          return (char *)0x0;
        }
        if ((uVar3 + 0x7efefeff & 0x80000000) == 0) {
          return (char *)0x0;
        }
      }
    }
    uVar3 = *(uint *)_Str;
    if ((char)uVar3 == (char)_Val) {
      return (char *)(uint *)_Str;
    }
    if ((char)uVar3 == '\0') {
      return (char *)0x0;
    }
    cVar2 = (char)(uVar3 >> 8);
    if (cVar2 == (char)_Val) {
      return (char *)((int)_Str + 1);
    }
    if (cVar2 == '\0') break;
    cVar2 = (char)(uVar3 >> 0x10);
    if (cVar2 == (char)_Val) {
      return (char *)((int)_Str + 2);
    }
    if (cVar2 == '\0') {
      return (char *)0x0;
    }
    cVar2 = (char)(uVar3 >> 0x18);
    if (cVar2 == (char)_Val) {
      return (char *)((int)_Str + 3);
    }
    _Str = (char *)puVar7;
    if (cVar2 == '\0') {
      return (char *)0x0;
    }
  }
  return (char *)0x0;
}



// Library Function - Single Match
//  _strncat
// 
// Library: Visual Studio

char * __cdecl _strncat(char *_Dest,char *_Source,size_t _Count)

{
  byte bVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint *puVar5;
  uint *puVar6;
  
  if (_Count != 0) {
    uVar4 = (uint)_Dest & 3;
    puVar5 = (uint *)_Dest;
    while (uVar4 != 0) {
      bVar1 = *(byte *)puVar5;
      puVar5 = (uint *)((int)puVar5 + 1);
      if (bVar1 == 0) goto LAB_0042886d;
      uVar4 = (uint)puVar5 & 3;
    }
    do {
      do {
        puVar6 = puVar5;
        puVar5 = puVar6 + 1;
      } while (((*puVar6 ^ 0xffffffff ^ *puVar6 + 0x7efefeff) & 0x81010100) == 0);
      uVar4 = *puVar6;
      if ((char)uVar4 == '\0') goto LAB_0042887f;
      if ((char)(uVar4 >> 8) == '\0') {
        puVar6 = (uint *)((int)puVar6 + 1);
        goto LAB_0042887f;
      }
      if ((uVar4 & 0xff0000) == 0) {
        puVar6 = (uint *)((int)puVar6 + 2);
        goto LAB_0042887f;
      }
    } while ((uVar4 & 0xff000000) != 0);
LAB_0042886d:
    puVar6 = (uint *)((int)puVar5 + -1);
LAB_0042887f:
    if (((uint)_Source & 3) == 0) {
      uVar3 = _Count >> 2;
    }
    else {
      do {
        bVar1 = *_Source;
        uVar4 = (uint)bVar1;
        _Source = (char *)((int)_Source + 1);
        if (bVar1 == 0) goto LAB_004288da;
        *(byte *)puVar6 = bVar1;
        puVar6 = (uint *)((int)puVar6 + 1);
        _Count = _Count - 1;
        if (_Count == 0) goto LAB_004288d0;
      } while (((uint)_Source & 3) != 0);
      uVar3 = _Count >> 2;
    }
    for (; uVar3 != 0; uVar3 = uVar3 - 1) {
      uVar2 = *(uint *)_Source;
      uVar4 = *(uint *)_Source;
      _Source = (char *)((int)_Source + 4);
      if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {
        if ((char)uVar4 == '\0') {
LAB_004288da:
          *(byte *)puVar6 = (byte)uVar4;
          return _Dest;
        }
        if ((char)(uVar4 >> 8) == '\0') {
          *(short *)puVar6 = (short)uVar4;
          return _Dest;
        }
        if ((uVar4 & 0xff0000) == 0) {
          *(short *)puVar6 = (short)uVar4;
          *(byte *)((int)puVar6 + 2) = 0;
          return _Dest;
        }
        if ((uVar4 & 0xff000000) == 0) {
          *puVar6 = uVar4;
          return _Dest;
        }
      }
      *puVar6 = uVar4;
      puVar6 = puVar6 + 1;
    }
    for (_Count = _Count & 3; _Count != 0; _Count = _Count - 1) {
      bVar1 = *_Source;
      _Source = (char *)((int)_Source + 1);
      *(byte *)puVar6 = bVar1;
      puVar6 = (uint *)((int)puVar6 + 1);
      if (bVar1 == 0) {
        return _Dest;
      }
    }
LAB_004288d0:
    *(byte *)puVar6 = (byte)_Count;
  }
  return _Dest;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _strstr
// 
// Libraries: Visual Studio 2012, Visual Studio 2015, Visual Studio 2017, Visual Studio 2019

char * __cdecl _strstr(char *_Str,char *_SubStr)

{
  char *pcVar1;
  ushort uVar2;
  char cVar3;
  uint uVar4;
  undefined (*pauVar5) [16];
  uint uVar6;
  char *pcVar7;
  char *pcVar8;
  int iVar9;
  uint *puVar10;
  undefined4 in_EDX;
  uint uVar11;
  char *pcVar12;
  undefined (*pauVar13) [16];
  undefined (*pauVar14) [16];
  undefined (*pauVar15) [16];
  undefined in_XMM0 [16];
  undefined auVar16 [16];
  char cVar17;
  char cVar19;
  char cVar20;
  char cVar21;
  char cVar22;
  char cVar23;
  char cVar24;
  undefined auVar18 [16];
  
  if (_DAT_00458498 == 0) {
    cVar17 = *_SubStr;
    if (cVar17 == '\0') {
      return _Str;
    }
    if (_SubStr[1] == '\0') {
      uVar11 = (uint)_Str & 3;
      while (uVar11 != 0) {
        if (*_Str == cVar17) {
          return (char *)(uint *)_Str;
        }
        if (*_Str == '\0') {
          return (char *)0x0;
        }
        uVar11 = (uint)(uint *)((int)_Str + 1) & 3;
        _Str = (char *)(uint *)((int)_Str + 1);
      }
      while( true ) {
        while( true ) {
          uVar11 = *(uint *)_Str;
          uVar6 = uVar11 ^ CONCAT22(CONCAT11(cVar17,cVar17),CONCAT11(cVar17,cVar17));
          uVar4 = uVar11 ^ 0xffffffff ^ uVar11 + 0x7efefeff;
          puVar10 = (uint *)((int)_Str + 4);
          if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;
          _Str = (char *)puVar10;
          if ((uVar4 & 0x81010100) != 0) {
            if ((uVar4 & 0x1010100) != 0) {
              return (char *)0x0;
            }
            if ((uVar11 + 0x7efefeff & 0x80000000) == 0) {
              return (char *)0x0;
            }
          }
        }
        uVar11 = *(uint *)_Str;
        if ((char)uVar11 == cVar17) {
          return (char *)(uint *)_Str;
        }
        if ((char)uVar11 == '\0') {
          return (char *)0x0;
        }
        cVar3 = (char)(uVar11 >> 8);
        if (cVar3 == cVar17) {
          return (char *)((int)_Str + 1);
        }
        if (cVar3 == '\0') break;
        cVar3 = (char)(uVar11 >> 0x10);
        if (cVar3 == cVar17) {
          return (char *)((int)_Str + 2);
        }
        if (cVar3 == '\0') {
          return (char *)0x0;
        }
        cVar3 = (char)(uVar11 >> 0x18);
        if (cVar3 == cVar17) {
          return (char *)((int)_Str + 3);
        }
        _Str = (char *)puVar10;
        if (cVar3 == '\0') {
          return (char *)0x0;
        }
      }
      return (char *)0x0;
    }
    do {
      cVar3 = *_Str;
      do {
        while (_Str = _Str + 1, cVar3 != cVar17) {
          if (cVar3 == '\0') {
            return (char *)0x0;
          }
          cVar3 = *_Str;
        }
        cVar3 = *_Str;
        pcVar8 = _Str + 1;
        pcVar7 = _SubStr;
      } while (cVar3 != _SubStr[1]);
      do {
        if (pcVar7[2] == '\0') {
LAB_00428ba6:
          return _Str + -1;
        }
        if (*pcVar8 != pcVar7[2]) break;
        pcVar12 = pcVar7 + 3;
        if (*pcVar12 == '\0') goto LAB_00428ba6;
        pcVar1 = pcVar8 + 1;
        pcVar7 = pcVar7 + 2;
        pcVar8 = pcVar8 + 2;
      } while (*pcVar12 == *pcVar1);
    } while( true );
  }
  if (_DAT_00458498 < 2) {
    uVar11 = (uint)CONCAT11(*_SubStr,*_SubStr);
    if (uVar11 != 0) {
      auVar18 = pshuflw(ZEXT416(uVar11),ZEXT416(uVar11),0);
      uVar11 = 0xffffffff;
      pcVar7 = _SubStr;
      do {
        pcVar8 = pcVar7;
        pcVar7 = pcVar8 + 1;
        if (*pcVar8 == '\0') goto LAB_004289be;
      } while (((uint)pcVar7 & 0xf) != 0);
      auVar16 = CONCAT115(-(pcVar8[0x10] == '\0'),
                          CONCAT114(-(pcVar8[0xf] == '\0'),
                                    CONCAT113(-(pcVar8[0xe] == '\0'),
                                              CONCAT112(-(pcVar8[0xd] == '\0'),
                                                        CONCAT111(-(pcVar8[0xc] == '\0'),
                                                                  CONCAT110(-(pcVar8[0xb] == '\0'),
                                                                            CONCAT19(-(pcVar8[10] ==
                                                                                      '\0'),CONCAT18
                                                  (-(pcVar8[9] == '\0'),
                                                   CONCAT17(-(pcVar8[8] == '\0'),
                                                            CONCAT16(-(pcVar8[7] == '\0'),
                                                                     CONCAT15(-(pcVar8[6] == '\0'),
                                                                              CONCAT14(-(pcVar8[5]
                                                                                        == '\0'),
                                                                                       CONCAT13(-(
                                                  pcVar8[4] == '\0'),
                                                  CONCAT12(-(pcVar8[3] == '\0'),
                                                           CONCAT11(-(pcVar8[2] == '\0'),
                                                                    -(*pcVar7 == '\0')))))))))))))))
                         );
      if ((ushort)((ushort)(SUB161(auVar16 >> 7,0) & 1) |
                   (ushort)(SUB161(auVar16 >> 0xf,0) & 1) << 1 |
                   (ushort)(SUB161(auVar16 >> 0x17,0) & 1) << 2 |
                   (ushort)(SUB161(auVar16 >> 0x1f,0) & 1) << 3 |
                   (ushort)(SUB161(auVar16 >> 0x27,0) & 1) << 4 |
                   (ushort)(SUB161(auVar16 >> 0x2f,0) & 1) << 5 |
                   (ushort)(SUB161(auVar16 >> 0x37,0) & 1) << 6 |
                   (ushort)(SUB161(auVar16 >> 0x3f,0) & 1) << 7 |
                   (ushort)(SUB161(auVar16 >> 0x47,0) & 1) << 8 |
                   (ushort)(SUB161(auVar16 >> 0x4f,0) & 1) << 9 |
                   (ushort)(SUB161(auVar16 >> 0x57,0) & 1) << 10 |
                   (ushort)(SUB161(auVar16 >> 0x5f,0) & 1) << 0xb |
                   (ushort)(SUB161(auVar16 >> 0x67,0) & 1) << 0xc |
                   (ushort)(SUB161(auVar16 >> 0x6f,0) & 1) << 0xd |
                   (ushort)(SUB161(auVar16 >> 0x77,0) & 1) << 0xe |
                  (ushort)((byte)-(pcVar8[0x10] == '\0') >> 7) << 0xf) == 0) {
        uVar11 = 0xf;
      }
LAB_004289be:
      pcVar7 = _Str;
      cVar17 = SUB161(auVar18,0);
      if (((uint)pcVar7 & 0xfff) < 0xff1) goto code_r0x004289cd;
      goto LAB_004289f4;
    }
  }
  else if (*_SubStr != '\0') {
    if (0xff0 < ((uint)_SubStr & 0xfff)) {
      iVar9 = 0xf;
      pcVar7 = _SubStr;
      do {
        cVar17 = *pcVar7;
        pcVar7 = pcVar7 + 1;
        do {
          auVar18 = pinsrb(in_XMM0,(char)((uint)in_EDX >> 8),0xf);
          in_XMM0 = auVar18 >> 8;
          iVar9 = iVar9 + -1;
          if (iVar9 == 0) goto LAB_00428aad;
        } while (cVar17 == '\0');
      } while( true );
    }
    in_XMM0 = *(undefined (*) [16])_SubStr;
LAB_00428aad:
    do {
      pauVar15 = (undefined (*) [16])_Str;
      pauVar13 = (undefined (*) [16])_SubStr;
      if (((uint)pauVar15 & 0xfff) < 0xff1) goto LAB_00428acc;
      if ((*pauVar15)[0] == '\0') {
        return (char *)0x0;
      }
      pauVar5 = pauVar15;
      if (SUB161(in_XMM0,0) == (*pauVar15)[0]) goto LAB_00428ae3;
      _Str = (char *)(*pauVar15 + 1);
    } while( true );
  }
  return _Str;
LAB_00428acc:
  iVar9 = pcmpistri(in_XMM0,*pauVar15,0xc);
  _Str = (char *)pauVar15[1];
  if (pauVar15 >= (undefined (*) [16])0xfffffff0 || pauVar15[1] == (undefined (*) [16])0x0) {
    if (pauVar15 < (undefined (*) [16])0xfffffff0) {
      return (char *)0x0;
    }
    pauVar15 = (undefined (*) [16])(*pauVar15 + iVar9);
    pauVar5 = pauVar15;
LAB_00428ae3:
    while( true ) {
      for (; (0xff0 < ((uint)pauVar15 & 0xfff) || (0xff0 < ((uint)pauVar13 & 0xfff)));
          pauVar13 = (undefined (*) [16])(*pauVar13 + 1)) {
        if ((*pauVar13)[0] == '\0') {
          return (char *)pauVar5;
        }
        if ((*pauVar13)[0] != (*pauVar15)[0]) goto LAB_00428aa6;
        pauVar15 = (undefined (*) [16])(*pauVar15 + 1);
      }
      pauVar14 = pauVar13[1];
      pcmpistri(*pauVar13,*pauVar15,0xc);
      if (!SCARRY4((int)pauVar13,0x10)) break;
      pauVar13 = pauVar14;
      pauVar15 = pauVar15[1];
      if ((int)pauVar14 < 0) {
        return (char *)pauVar5;
      }
    }
LAB_00428aa6:
    _Str = (char *)(*pauVar5 + 1);
  }
  goto LAB_00428aad;
code_r0x004289cd:
  cVar3 = SUB161(auVar18 >> 8,0);
  cVar19 = SUB161(auVar18 >> 0x10,0);
  cVar20 = SUB161(auVar18 >> 0x18,0);
  cVar21 = SUB161(auVar18 >> 0x20,0);
  cVar22 = SUB161(auVar18 >> 0x28,0);
  cVar23 = SUB161(auVar18 >> 0x30,0);
  cVar24 = SUB161(auVar18 >> 0x38,0);
  auVar16 = CONCAT115(-(pcVar7[0xf] == cVar24),
                      CONCAT114(-(pcVar7[0xe] == cVar23),
                                CONCAT113(-(pcVar7[0xd] == cVar22),
                                          CONCAT112(-(pcVar7[0xc] == cVar21),
                                                    CONCAT111(-(pcVar7[0xb] == cVar20),
                                                              CONCAT110(-(pcVar7[10] == cVar19),
                                                                        CONCAT19(-(pcVar7[9] ==
                                                                                  cVar3),CONCAT18(-(
                                                  pcVar7[8] == cVar17),
                                                  CONCAT17(-(pcVar7[7] == cVar24),
                                                           CONCAT16(-(pcVar7[6] == cVar23),
                                                                    CONCAT15(-(pcVar7[5] == cVar22),
                                                                             CONCAT14(-(pcVar7[4] ==
                                                                                       cVar21),
                                                  CONCAT13(-(pcVar7[3] == cVar20),
                                                           CONCAT12(-(pcVar7[2] == cVar19),
                                                                    CONCAT11(-(pcVar7[1] == cVar3),
                                                                             -(*pcVar7 == cVar17))))
                                                  )))))))))))) |
            CONCAT115(-(pcVar7[0xf] == '\0'),
                      CONCAT114(-(pcVar7[0xe] == '\0'),
                                CONCAT113(-(pcVar7[0xd] == '\0'),
                                          CONCAT112(-(pcVar7[0xc] == '\0'),
                                                    CONCAT111(-(pcVar7[0xb] == '\0'),
                                                              CONCAT110(-(pcVar7[10] == '\0'),
                                                                        CONCAT19(-(pcVar7[9] == '\0'
                                                                                  ),CONCAT18(-(
                                                  pcVar7[8] == '\0'),
                                                  CONCAT17(-(pcVar7[7] == '\0'),
                                                           CONCAT16(-(pcVar7[6] == '\0'),
                                                                    CONCAT15(-(pcVar7[5] == '\0'),
                                                                             CONCAT14(-(pcVar7[4] ==
                                                                                       '\0'),
                                                  CONCAT13(-(pcVar7[3] == '\0'),
                                                           CONCAT12(-(pcVar7[2] == '\0'),
                                                                    CONCAT11(-(pcVar7[1] == '\0'),
                                                                             -(*pcVar7 == '\0'))))))
                                                  ))))))))));
  uVar2 = (ushort)(SUB161(auVar16 >> 7,0) & 1) | (ushort)(SUB161(auVar16 >> 0xf,0) & 1) << 1 |
          (ushort)(SUB161(auVar16 >> 0x17,0) & 1) << 2 |
          (ushort)(SUB161(auVar16 >> 0x1f,0) & 1) << 3 |
          (ushort)(SUB161(auVar16 >> 0x27,0) & 1) << 4 |
          (ushort)(SUB161(auVar16 >> 0x2f,0) & 1) << 5 |
          (ushort)(SUB161(auVar16 >> 0x37,0) & 1) << 6 |
          (ushort)(SUB161(auVar16 >> 0x3f,0) & 1) << 7 |
          (ushort)(SUB161(auVar16 >> 0x47,0) & 1) << 8 |
          (ushort)(SUB161(auVar16 >> 0x4f,0) & 1) << 9 |
          (ushort)(SUB161(auVar16 >> 0x57,0) & 1) << 10 |
          (ushort)(SUB161(auVar16 >> 0x5f,0) & 1) << 0xb |
          (ushort)(SUB161(auVar16 >> 0x67,0) & 1) << 0xc |
          (ushort)(SUB161(auVar16 >> 0x6f,0) & 1) << 0xd |
          (ushort)(SUB161(auVar16 >> 0x77,0) & 1) << 0xe | (ushort)SUB161(auVar16 >> 0x7f,0) << 0xf;
  _Str = pcVar7 + 0x10;
  if (uVar2 != 0) {
    iVar9 = 0;
    if (uVar2 != 0) {
      for (; (uVar2 >> iVar9 & 1) == 0; iVar9 = iVar9 + 1) {
      }
    }
    pcVar7 = pcVar7 + iVar9;
LAB_004289f4:
    if (*pcVar7 == '\0') {
      return (char *)0x0;
    }
    _Str = pcVar7 + 1;
    if (cVar17 == *pcVar7) {
      pcVar8 = _SubStr + 1;
      pcVar12 = _Str;
LAB_00428a07:
      for (; ((uVar11 & (uint)pcVar8) == 0 && (((uint)pcVar12 & 0xfff) < 0xff1));
          pcVar12 = pcVar12 + 0x10) {
        auVar16 = CONCAT115(-(pcVar8[0xf] == '\0'),
                            CONCAT114(-(pcVar8[0xe] == '\0'),
                                      CONCAT113(-(pcVar8[0xd] == '\0'),
                                                CONCAT112(-(pcVar8[0xc] == '\0'),
                                                          CONCAT111(-(pcVar8[0xb] == '\0'),
                                                                    CONCAT110(-(pcVar8[10] == '\0'),
                                                                              CONCAT19(-(pcVar8[9]
                                                                                        == '\0'),
                                                                                       CONCAT18(-(
                                                  pcVar8[8] == '\0'),
                                                  CONCAT17(-(pcVar8[7] == '\0'),
                                                           CONCAT16(-(pcVar8[6] == '\0'),
                                                                    CONCAT15(-(pcVar8[5] == '\0'),
                                                                             CONCAT14(-(pcVar8[4] ==
                                                                                       '\0'),
                                                  CONCAT13(-(pcVar8[3] == '\0'),
                                                           CONCAT12(-(pcVar8[2] == '\0'),
                                                                    CONCAT11(-(pcVar8[1] == '\0'),
                                                                             -(*pcVar8 == '\0'))))))
                                                  )))))))))) |
                  CONCAT115(-(pcVar12[0xf] != pcVar8[0xf]),
                            CONCAT114(-(pcVar12[0xe] != pcVar8[0xe]),
                                      CONCAT113(-(pcVar12[0xd] != pcVar8[0xd]),
                                                CONCAT112(-(pcVar12[0xc] != pcVar8[0xc]),
                                                          CONCAT111(-(pcVar12[0xb] != pcVar8[0xb]),
                                                                    CONCAT110(-(pcVar12[10] !=
                                                                               pcVar8[10]),
                                                                              CONCAT19(-(pcVar12[9]
                                                                                        != pcVar8[9]
                                                                                        ),CONCAT18(-
                                                  (pcVar12[8] != pcVar8[8]),
                                                  CONCAT17(-(pcVar12[7] != pcVar8[7]),
                                                           CONCAT16(-(pcVar12[6] != pcVar8[6]),
                                                                    CONCAT15(-(pcVar12[5] !=
                                                                              pcVar8[5]),
                                                                             CONCAT14(-(pcVar12[4]
                                                                                       != pcVar8[4])
                                                                                      ,CONCAT13(-(
                                                  pcVar12[3] != pcVar8[3]),
                                                  CONCAT12(-(pcVar12[2] != pcVar8[2]),
                                                           CONCAT11(-(pcVar12[1] != pcVar8[1]),
                                                                    -(*pcVar12 != *pcVar8)))))))))))
                                                  )))));
        uVar2 = (ushort)(SUB161(auVar16 >> 7,0) & 1) | (ushort)(SUB161(auVar16 >> 0xf,0) & 1) << 1 |
                (ushort)(SUB161(auVar16 >> 0x17,0) & 1) << 2 |
                (ushort)(SUB161(auVar16 >> 0x1f,0) & 1) << 3 |
                (ushort)(SUB161(auVar16 >> 0x27,0) & 1) << 4 |
                (ushort)(SUB161(auVar16 >> 0x2f,0) & 1) << 5 |
                (ushort)(SUB161(auVar16 >> 0x37,0) & 1) << 6 |
                (ushort)(SUB161(auVar16 >> 0x3f,0) & 1) << 7 |
                (ushort)(SUB161(auVar16 >> 0x47,0) & 1) << 8 |
                (ushort)(SUB161(auVar16 >> 0x4f,0) & 1) << 9 |
                (ushort)(SUB161(auVar16 >> 0x57,0) & 1) << 10 |
                (ushort)(SUB161(auVar16 >> 0x5f,0) & 1) << 0xb |
                (ushort)(SUB161(auVar16 >> 0x67,0) & 1) << 0xc |
                (ushort)(SUB161(auVar16 >> 0x6f,0) & 1) << 0xd |
                (ushort)(SUB161(auVar16 >> 0x77,0) & 1) << 0xe |
                (ushort)SUB161(auVar16 >> 0x7f,0) << 0xf;
        if (uVar2 != 0) {
          iVar9 = 0;
          if (uVar2 != 0) {
            for (; (uVar2 >> iVar9 & 1) == 0; iVar9 = iVar9 + 1) {
            }
          }
          pcVar12 = pcVar12 + iVar9;
          pcVar8 = pcVar8 + iVar9;
          break;
        }
        pcVar8 = pcVar8 + 0x10;
      }
      if (*pcVar8 == '\0') {
        return pcVar7;
      }
      if (*pcVar8 == *pcVar12) {
        pcVar12 = pcVar12 + 1;
        pcVar8 = pcVar8 + 1;
        goto LAB_00428a07;
      }
    }
  }
  goto LAB_004289be;
}



void __cdecl FUN_00428bb3(byte *param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  int *piVar2;
  undefined2 extraout_var;
  uint uVar3;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined uVar4;
  undefined uVar5;
  pthreadlocinfo in_stack_ffffffd0;
  int local_28;
  char local_24;
  uint local_20 [6];
  uint local_8;
  pthreadlocinfo ptVar6;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  FUN_00427078(&stack0xffffffd0,param_2);
  ptVar6 = in_stack_ffffffd0;
  if (param_1 == (byte *)0x0) {
    piVar2 = __errno();
    uVar5 = SUB41(in_stack_ffffffd0,0);
    *piVar2 = 0x16;
    FUN_00429bfe();
    uVar4 = extraout_DL;
  }
  else {
    while( true ) {
      if (in_stack_ffffffd0->mb_cur_max < 2) {
        uVar3 = in_stack_ffffffd0->pctype[*param_1] & 8;
      }
      else {
        in_stack_ffffffd0 = ptVar6;
        uVar1 = FUN_0042fd84((uint)*param_1,8,(pthreadlocinfo *)&stack0xffffffd0);
        uVar3 = CONCAT22(extraout_var,uVar1);
        ptVar6 = in_stack_ffffffd0;
      }
      if (uVar3 == 0) break;
      param_1 = param_1 + 1;
    }
    FUN_00430015(local_20,(char *)param_1,(int *)&stack0xffffffd0);
    uVar5 = SUB41(ptVar6,0);
    uVar4 = extraout_DL_00;
  }
  if (local_24 != '\0') {
    *(uint *)(local_28 + 0x70) = *(uint *)(local_28 + 0x70) & 0xfffffffd;
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar4,uVar5);
  return;
}



void __cdecl FUN_00428c51(byte *param_1)

{
  FUN_00428bb3(param_1,(pthreadlocinfo *)0x0);
  return;
}



ushort __cdecl FUN_00428c62(int param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_2);
  if (local_14[0]->mb_cur_max < 2) {
    uVar1 = local_14[0]->pctype[param_1] & 0x107;
  }
  else {
    uVar1 = FUN_0042fd84(param_1,0x107,local_14);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar1;
}



ushort __cdecl FUN_00428cba(int param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_2);
  if (local_14[0]->mb_cur_max < 2) {
    uVar1 = local_14[0]->pctype[param_1] & 4;
  }
  else {
    uVar1 = FUN_0042fd84(param_1,4,local_14);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar1;
}



ushort __cdecl FUN_00428d0c(int param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_2);
  if (local_14[0]->mb_cur_max < 2) {
    uVar1 = local_14[0]->pctype[param_1] & 8;
  }
  else {
    uVar1 = FUN_0042fd84(param_1,8,local_14);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar1;
}



ushort __cdecl FUN_00428d5e(int param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_2);
  if (local_14[0]->mb_cur_max < 2) {
    uVar1 = local_14[0]->pctype[param_1] & 0x80;
  }
  else {
    uVar1 = FUN_0042fd84(param_1,0x80,local_14);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _isalnum
// 
// Library: Visual Studio 2012 Release

int __cdecl _isalnum(int _C)

{
  ushort uVar1;
  undefined2 extraout_var;
  
  if (_DAT_0045871c == 0) {
    return *(ushort *)(PTR_DAT_004489f0 + _C * 2) & 0x107;
  }
  uVar1 = FUN_00428c62(_C,(pthreadlocinfo *)0x0);
  return CONCAT22(extraout_var,uVar1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _isdigit
// 
// Library: Visual Studio 2012 Release

int __cdecl _isdigit(int _C)

{
  ushort uVar1;
  undefined2 extraout_var;
  
  if (_DAT_0045871c == 0) {
    return *(ushort *)(PTR_DAT_004489f0 + _C * 2) & 4;
  }
  uVar1 = FUN_00428cba(_C,(pthreadlocinfo *)0x0);
  return CONCAT22(extraout_var,uVar1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _isspace
// 
// Library: Visual Studio 2012 Release

int __cdecl _isspace(int _C)

{
  ushort uVar1;
  undefined2 extraout_var;
  
  if (_DAT_0045871c == 0) {
    return *(ushort *)(PTR_DAT_004489f0 + _C * 2) & 8;
  }
  uVar1 = FUN_00428d0c(_C,(pthreadlocinfo *)0x0);
  return CONCAT22(extraout_var,uVar1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _isxdigit
// 
// Library: Visual Studio 2012 Release

int __cdecl _isxdigit(int _C)

{
  ushort uVar1;
  undefined2 extraout_var;
  
  if (_DAT_0045871c == 0) {
    return *(ushort *)(PTR_DAT_004489f0 + _C * 2) & 0x80;
  }
  uVar1 = FUN_00428d5e(_C,(pthreadlocinfo *)0x0);
  return CONCAT22(extraout_var,uVar1);
}



uint __cdecl FUN_00428e66(uint param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  undefined2 extraout_var;
  uint uVar2;
  undefined2 extraout_var_00;
  int *piVar3;
  int iVar4;
  pthreadlocinfo local_1c [2];
  int local_14;
  char local_10;
  byte local_c;
  undefined local_b;
  CHAR local_8;
  CHAR local_7;
  undefined local_6;
  
  FUN_00427078(local_1c,param_2);
  if (param_1 < 0x100) {
    if (local_1c[0]->mb_cur_max < 2) {
      uVar2 = local_1c[0]->pctype[param_1] & 1;
    }
    else {
      uVar1 = FUN_0042fd84(param_1,1,local_1c);
      uVar2 = CONCAT22(extraout_var,uVar1);
    }
    if (uVar2 == 0) {
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
    else {
      param_1 = (uint)local_1c[0]->pclmap[param_1];
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
  }
  else {
    if ((local_1c[0]->mb_cur_max < 2) ||
       (uVar1 = FUN_00428fd5((int)param_1 >> 8 & 0xff,local_1c),
       CONCAT22(extraout_var_00,uVar1) == 0)) {
      piVar3 = __errno();
      iVar4 = 1;
      *piVar3 = 0x2a;
      local_7 = '\0';
      local_8 = (CHAR)param_1;
    }
    else {
      local_6 = 0;
      iVar4 = 2;
      local_8 = (CHAR)(param_1 >> 8);
      local_7 = (CHAR)param_1;
    }
    iVar4 = FUN_0042e60f(local_1c,local_1c[0]->locale_name[2],0x100,&local_8,iVar4,(LPWSTR)&local_c,
                         3,local_1c[0]->lc_codepage,1);
    if (iVar4 == 0) {
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
    else if (iVar4 == 1) {
      param_1 = (uint)local_c;
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
    else {
      param_1 = (uint)CONCAT11(local_c,local_b);
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _tolower
// 
// Library: Visual Studio 2012 Release

int __cdecl _tolower(int _C)

{
  uint uVar1;
  
  if (_DAT_0045871c == 0) {
    if (_C - 0x41U < 0x1a) {
      _C = _C + 0x20;
    }
    return _C;
  }
  uVar1 = FUN_00428e66(_C,(pthreadlocinfo *)0x0);
  return uVar1;
}



ushort __cdecl FUN_00428fd5(uint param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_2);
  uVar1 = *(ushort *)(*(int *)(local_14[0] + 0x90) + (param_1 & 0xff) * 2);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar1 & 0x8000;
}



void __cdecl FUN_0042900f(uint param_1)

{
  FUN_00428fd5(param_1,(pthreadlocinfo *)0x0);
  return;
}



// Library Function - Single Match
//  __allmul
// 
// Library: Visual Studio

ulonglong __allmul(uint param_1,uint param_2,uint param_3,uint param_4)

{
  if ((param_4 | param_2) == 0) {
    return (ulonglong)param_1 * (ulonglong)param_3;
  }
  return (ulonglong)param_1 * (ulonglong)param_3 & 0xffffffff |
         (ulonglong)
         ((int)((ulonglong)param_1 * (ulonglong)param_3 >> 0x20) +
         param_2 * param_3 + param_1 * param_4) << 0x20;
}



// Library Function - Single Match
//  ___doserrno
// 
// Library: Visual Studio 2012 Release

ulong * __cdecl ___doserrno(void)

{
  _ptiddata p_Var1;
  
  p_Var1 = __getptd_noexit();
  if (p_Var1 == (_ptiddata)0x0) {
    return (ulong *)&DAT_00447fac;
  }
  return &p_Var1->_tdoserrno;
}



// Library Function - Multiple Matches With Different Base Names
//  ___acrt_errno_map_os_error
//  __dosmaperr
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

void __cdecl FID_conflict___dosmaperr(ulong param_1)

{
  ulong *puVar1;
  int iVar2;
  int *piVar3;
  
  puVar1 = ___doserrno();
  *puVar1 = param_1;
  iVar2 = FID_conflict____acrt_errno_from_os_error(param_1);
  piVar3 = __errno();
  *piVar3 = iVar2;
  return;
}



// Library Function - Single Match
//  __errno
// 
// Library: Visual Studio 2012 Release

int * __cdecl __errno(void)

{
  _ptiddata p_Var1;
  
  p_Var1 = __getptd_noexit();
  if (p_Var1 == (_ptiddata)0x0) {
    return (int *)&DAT_00447fa8;
  }
  return &p_Var1->_terrno;
}



// Library Function - Multiple Matches With Different Base Names
//  ___acrt_errno_from_os_error
//  __get_errno_from_oserr
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

int __cdecl FID_conflict____acrt_errno_from_os_error(ulong param_1)

{
  uint uVar1;
  
  uVar1 = 0;
  do {
    if (param_1 == (&DAT_00447e40)[uVar1 * 2]) {
      return (&DAT_00447e44)[uVar1 * 2];
    }
    uVar1 = uVar1 + 1;
  } while (uVar1 < 0x2d);
  if (param_1 - 0x13 < 0x12) {
    return 0xd;
  }
  return (-(uint)(0xe < param_1 - 0xbc) & 0xe) + 8;
}



void __cdecl FUN_004292bc(WCHAR *param_1)

{
  FUN_004292cd(param_1,(pthreadlocinfo *)0x0);
  return;
}



void __cdecl FUN_004292cd(WCHAR *param_1,pthreadlocinfo *param_2)

{
  int *piVar1;
  uint uVar2;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined uVar3;
  undefined in_stack_ffffffd0;
  int local_28;
  char local_24;
  uint local_20 [6];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  FUN_00427078(&stack0xffffffd0,param_2);
  if (param_1 == (WCHAR *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar3 = extraout_DL;
  }
  else {
    while( true ) {
      uVar2 = FUN_00432849(*param_1,8);
      if (uVar2 == 0) break;
      param_1 = param_1 + 1;
    }
    FUN_0043289f(local_20,(ushort *)param_1,(int *)&stack0xffffffd0);
    uVar3 = extraout_DL_00;
  }
  if (local_24 != '\0') {
    *(uint *)(local_28 + 0x70) = *(uint *)(local_28 + 0x70) & 0xfffffffd;
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar3,in_stack_ffffffd0);
  return;
}



void FUN_00429348(wchar_t *param_1)

{
  __wtol(param_1);
  return;
}



// Library Function - Single Match
//  __wtol
// 
// Libraries: Visual Studio 2010 Release, Visual Studio 2012 Release

long __cdecl __wtol(wchar_t *_Str)

{
  long lVar1;
  
  lVar1 = _wcstol(_Str,(wchar_t **)0x0,10);
  return lVar1;
}



int __cdecl
FUN_00429365(char *param_1,uint param_2,int param_3,undefined4 param_4,undefined4 param_5)

{
  int iVar1;
  
  iVar1 = FUN_0042938d(FUN_00431347,param_1,param_2,param_3,param_4,param_5);
  if (iVar1 < 0) {
    iVar1 = -1;
  }
  return iVar1;
}



int __cdecl
FUN_0042938d(undefined *param_1,char *param_2,uint param_3,int param_4,undefined4 param_5,
            undefined4 param_6)

{
  int *piVar1;
  uint uVar2;
  int iVar3;
  char **ppcVar4;
  FILE local_24;
  
  local_24._ptr = (char *)0x0;
  ppcVar4 = (char **)&local_24._cnt;
  for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {
    *ppcVar4 = (char *)0x0;
    ppcVar4 = ppcVar4 + 1;
  }
  if (param_4 == 0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    return -1;
  }
  if ((param_3 != 0) && (param_2 == (char *)0x0)) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    return -1;
  }
  local_24._flag = 0x42;
  local_24._base = param_2;
  local_24._ptr = param_2;
  if (param_3 < 0x40000000) {
    local_24._cnt = param_3 * 2;
  }
  else {
    local_24._cnt = 0x7fffffff;
  }
  iVar3 = (*(code *)param_1)(&local_24,param_4,param_5,param_6);
  if (param_2 == (char *)0x0) {
    return iVar3;
  }
  if (-1 < iVar3) {
    local_24._cnt = local_24._cnt + -1;
    if (local_24._cnt < 0) {
      uVar2 = FUN_0042bf5b(0,&local_24);
      if (uVar2 == 0xffffffff) goto LAB_00429471;
    }
    else {
      *local_24._ptr = '\0';
      local_24._ptr = local_24._ptr + 1;
    }
    local_24._cnt = local_24._cnt + -1;
    if (-1 < local_24._cnt) {
      *local_24._ptr = '\0';
      return iVar3;
    }
    uVar2 = FUN_0042bf5b(0,&local_24);
    if (uVar2 != 0xffffffff) {
      return iVar3;
    }
  }
LAB_00429471:
  *(undefined2 *)(param_2 + param_3 * 2 + -2) = 0;
  return (-1 < local_24._cnt) - 2;
}



void __cdecl FUN_00429488(wchar_t *param_1,int param_2)

{
  FUN_004294a6(FUN_0043346f,param_1,param_2,0,&stack0x0000000c);
  return;
}



undefined4 __cdecl
FUN_004294a6(undefined *param_1,wchar_t *param_2,int param_3,undefined4 param_4,undefined4 param_5)

{
  int *piVar1;
  undefined4 uVar2;
  size_t sVar3;
  int iVar4;
  wchar_t *local_24;
  int local_20;
  wchar_t *local_1c;
  undefined4 local_18;
  
  local_24 = (wchar_t *)0x0;
  piVar1 = &local_20;
  for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {
    *piVar1 = 0;
    piVar1 = piVar1 + 1;
  }
  if ((param_2 == (wchar_t *)0x0) || (param_3 == 0)) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar2 = 0xffffffff;
  }
  else {
    sVar3 = _wcslen(param_2);
    local_18 = 0x49;
    local_1c = param_2;
    local_24 = param_2;
    if (sVar3 < 0x40000000) {
      local_20 = sVar3 * 2;
    }
    else {
      local_20 = 0x7fffffff;
    }
    uVar2 = (*(code *)param_1)(&local_24,param_3,param_4,param_5);
  }
  return uVar2;
}



uint __cdecl FUN_0042951f(uint param_1,pthreadlocinfo *param_2)

{
  ushort uVar1;
  undefined2 extraout_var;
  uint uVar2;
  undefined2 extraout_var_00;
  int *piVar3;
  int iVar4;
  pthreadlocinfo local_1c [2];
  int local_14;
  char local_10;
  byte local_c;
  undefined local_b;
  CHAR local_8;
  CHAR local_7;
  undefined local_6;
  
  FUN_00427078(local_1c,param_2);
  if (param_1 < 0x100) {
    if (local_1c[0]->mb_cur_max < 2) {
      uVar2 = local_1c[0]->pctype[param_1] & 2;
    }
    else {
      uVar1 = FUN_0042fd84(param_1,2,local_1c);
      uVar2 = CONCAT22(extraout_var,uVar1);
    }
    if (uVar2 == 0) {
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
    else {
      param_1 = (uint)local_1c[0]->pcumap[param_1];
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
  }
  else {
    if ((local_1c[0]->mb_cur_max < 2) ||
       (uVar1 = FUN_00428fd5((int)param_1 >> 8 & 0xff,local_1c),
       CONCAT22(extraout_var_00,uVar1) == 0)) {
      piVar3 = __errno();
      iVar4 = 1;
      *piVar3 = 0x2a;
      local_7 = '\0';
      local_8 = (CHAR)param_1;
    }
    else {
      local_6 = 0;
      iVar4 = 2;
      local_8 = (CHAR)(param_1 >> 8);
      local_7 = (CHAR)param_1;
    }
    iVar4 = FUN_0042e60f(local_1c,local_1c[0]->locale_name[2],0x200,&local_8,iVar4,(LPWSTR)&local_c,
                         3,local_1c[0]->lc_codepage,1);
    if (iVar4 == 0) {
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
    else if (iVar4 == 1) {
      param_1 = (uint)local_c;
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
    else {
      param_1 = (uint)CONCAT11(local_c,local_b);
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
    }
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  _toupper
// 
// Library: Visual Studio 2012 Release

int __cdecl _toupper(int _C)

{
  uint uVar1;
  
  if (_DAT_0045871c == 0) {
    if (_C - 0x61U < 0x1a) {
      _C = _C + -0x20;
    }
    return _C;
  }
  uVar1 = FUN_0042951f(_C,(pthreadlocinfo *)0x0);
  return uVar1;
}



// Library Function - Single Match
//  __decomp
// 
// Library: Visual Studio 2019 Release

void __cdecl __decomp(int param_1,uint param_2,int *param_3)

{
  uint uVar1;
  double dVar2;
  ushort uVar3;
  int iVar4;
  
  dVar2 = (double)CONCAT17(param_2._3_1_,CONCAT16(param_2._2_1_,CONCAT24((ushort)param_2,param_1)));
  if (dVar2 == 0.0) {
    iVar4 = 0;
  }
  else if (((param_2 & 0x7ff00000) == 0) && (((param_2 & 0xfffff) != 0 || (param_1 != 0)))) {
    iVar4 = -0x3fd;
    if ((param_2 & 0x100000) == 0) {
      do {
        uVar1 = param_2 * 2;
        param_2._0_2_ = (ushort)uVar1;
        param_2 = uVar1;
        if (param_1 < 0) {
          param_2 = uVar1 | 1;
        }
        param_1 = param_1 * 2;
        iVar4 = iVar4 + -1;
      } while ((uVar1 & 0x100000) == 0);
      param_2 = uVar1 & 0xffff0000 | (uint)(ushort)param_2;
    }
    uVar3 = (ushort)(param_2 >> 0x10) & 0xffef;
    param_2._2_1_ = (undefined)uVar3;
    param_2._3_1_ = (byte)(uVar3 >> 8);
    if ((ushort)((ushort)(0.0 < dVar2) << 8 | (ushort)(dVar2 == 0.0) << 0xe) == 0) {
      param_2._3_1_ = param_2._3_1_ | 0x80;
    }
    __set_exp(CONCAT17(param_2._3_1_,CONCAT16(param_2._2_1_,CONCAT24((ushort)param_2,param_1))),0);
  }
  else {
    __set_exp((ulonglong)dVar2,0);
    iVar4 = (param_2 >> 0x14 & 0x7ff) - 0x3fe;
  }
  *param_3 = iVar4;
  return;
}



// Library Function - Single Match
//  __set_exp
// 
// Library: Visual Studio 2019 Release

float10 __cdecl __set_exp(ulonglong param_1,short param_2)

{
  double local_c;
  
  local_c = (double)(param_1 & 0xffffffffffff |
                    (ulonglong)(ushort)((param_2 + 0x3fe) * 0x10 | param_1._6_2_ & 0x800f) << 0x30);
  return (float10)local_c;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___set_fpsr_sse2
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release

void ___set_fpsr_sse2(uint param_1)

{
  return;
}



int FUN_00429806(void)

{
  short in_FPUStatusWord;
  
  return (int)in_FPUStatusWord;
}



// Library Function - Single Match
//  __ctrlfp
// 
// Library: Visual Studio 2019 Release

int __ctrlfp(undefined4 param_1,undefined4 param_2)

{
  short in_FPUControlWord;
  
  return (int)in_FPUControlWord;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __set_statfp
// 
// Library: Visual Studio 2019 Release

void __set_statfp(uint param_1)

{
  return;
}



int FUN_0042989a(void)

{
  short in_FPUStatusWord;
  
  return (int)in_FPUStatusWord;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __fastcall FUN_004298aa(int param_1,undefined param_2,undefined param_3)

{
  code *pcVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  uint uVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar5;
  undefined4 extraout_EDX;
  undefined4 unaff_EBX;
  undefined4 unaff_EBP;
  undefined4 unaff_ESI;
  undefined4 unaff_EDI;
  undefined2 in_ES;
  undefined2 in_CS;
  undefined2 in_SS;
  undefined2 in_DS;
  undefined2 in_FS;
  undefined2 in_GS;
  byte bVar6;
  byte bVar7;
  byte in_AF;
  byte bVar8;
  byte bVar9;
  byte in_TF;
  byte in_IF;
  byte bVar10;
  byte in_NT;
  byte in_AC;
  byte in_VIF;
  byte in_VIP;
  byte in_ID;
  undefined8 uVar11;
  undefined4 unaff_retaddr;
  
  if (param_1 == DAT_00447ff8) {
    return;
  }
  uVar4 = IsProcessorFeaturePresent(0x17);
  uVar11 = CONCAT44(extraout_EDX,uVar4);
  bVar6 = 0;
  bVar10 = 0;
  bVar9 = (int)uVar4 < 0;
  bVar8 = uVar4 == 0;
  bVar7 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;
  uVar5 = extraout_ECX;
  uVar2 = unaff_retaddr;
  uVar3 = unaff_EBP;
  if (!(bool)bVar8) {
    pcVar1 = (code *)swi(0x29);
    uVar11 = (*pcVar1)();
    uVar5 = extraout_ECX_00;
    uVar2 = unaff_retaddr;
    uVar3 = unaff_EBP;
  }
  _DAT_00458f8c = uVar3;
  _DAT_00458e94 = uVar2;
  _DAT_00458f98 =
       (uint)(in_NT & 1) * 0x4000 | (uint)(bVar10 & 1) * 0x800 | (uint)(in_IF & 1) * 0x200 |
       (uint)(in_TF & 1) * 0x100 | (uint)(bVar9 & 1) * 0x80 | (uint)(bVar8 & 1) * 0x40 |
       (uint)(in_AF & 1) * 0x10 | (uint)(bVar7 & 1) * 4 | (uint)(bVar6 & 1) |
       (uint)(in_ID & 1) * 0x200000 | (uint)(in_VIP & 1) * 0x100000 | (uint)(in_VIF & 1) * 0x80000 |
       (uint)(in_AC & 1) * 0x40000;
  _DAT_00458f9c = &param_3;
  _DAT_00458ed8 = 0x10001;
  _DAT_00458e88 = 0xc0000409;
  _DAT_00458e8c = 1;
  _DAT_00458e98 = 1;
  DAT_00458e9c = 2;
  _DAT_00458f64 = in_GS;
  _DAT_00458f68 = in_FS;
  _DAT_00458f6c = in_ES;
  _DAT_00458f70 = in_DS;
  _DAT_00458f74 = unaff_EDI;
  _DAT_00458f78 = unaff_ESI;
  _DAT_00458f7c = unaff_EBX;
  _DAT_00458f84 = uVar5;
  DAT_00458f90 = _DAT_00458e94;
  _DAT_00458f94 = in_CS;
  _DAT_00458fa0 = in_SS;
  ___raise_securityfailure((EXCEPTION_POINTERS *)&PTR_DAT_00440300);
  _DAT_00458f80 = (undefined4)((ulonglong)uVar11 >> 0x20);
  _DAT_00458f88 = (undefined4)uVar11;
  return;
}



void __cdecl FUN_004298b9(uint param_1,uint param_2)

{
  DAT_00448000 = ~param_2 & DAT_00448000 | param_1 & param_2;
  return;
}



// Library Function - Single Match
//  _abort
// 
// Library: Visual Studio 2012 Release

void __cdecl _abort(void)

{
  code *pcVar1;
  int iVar2;
  BOOL BVar3;
  
  iVar2 = FUN_0042f3f3();
  if (iVar2 != 0) {
    FUN_0042f41c(0x16);
  }
  if (((byte)DAT_00448000 & 2) != 0) {
    BVar3 = IsProcessorFeaturePresent(0x17);
    if (BVar3 != 0) {
      pcVar1 = (code *)swi(0x29);
      (*pcVar1)();
    }
    FUN_00429aa1(3,0x40000015,1);
  }
  __exit(3);
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



void __cdecl FUN_0042991b(undefined4 param_1)

{
  DAT_00458494 = param_1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_00429928(void)

{
  int *piVar1;
  uint *puVar2;
  int iVar3;
  BOOL BVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  
  _DAT_00458498 = 0;
  DAT_00448004 = DAT_00448004 | 1;
  BVar4 = IsProcessorFeaturePresent(10);
  uVar5 = DAT_00448004;
  if (BVar4 != 0) {
    _DAT_00458498 = 1;
    if (true) {
      piVar1 = (int *)cpuid_basic_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Version_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_cache_tlb_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_serial_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Deterministic_Cache_Parameters_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_MONITOR_MWAIT_Features_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Thermal_Power_Management_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Extended_Feature_Enumeration_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Direct_Cache_Access_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Architectural_Performance_Monitoring_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Extended_Topology_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Processor_Extended_States_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_Quality_of_Service_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_brand_part1_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_brand_part2_info(0);
    }
    else if (false) {
      piVar1 = (int *)cpuid_brand_part3_info(0);
    }
    else {
      piVar1 = (int *)cpuid(0);
    }
    if (false) {
      puVar2 = (uint *)cpuid_basic_info(0);
    }
    else if (true) {
      puVar2 = (uint *)cpuid_Version_info(1);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_cache_tlb_info(2);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_serial_info(3);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Deterministic_Cache_Parameters_info(4);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_MONITOR_MWAIT_Features_info(5);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Thermal_Power_Management_info(6);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Extended_Feature_Enumeration_info(7);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Direct_Cache_Access_info(9);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Architectural_Performance_Monitoring_info(10);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Extended_Topology_info(0xb);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Processor_Extended_States_info(0xd);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_Quality_of_Service_info(0xf);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_brand_part1_info(0x80000002);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_brand_part2_info(0x80000003);
    }
    else if (false) {
      puVar2 = (uint *)cpuid_brand_part3_info(0x80000004);
    }
    else {
      puVar2 = (uint *)cpuid(1);
    }
    uVar6 = puVar2[3];
    if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&
       (((((uVar5 = *puVar2 & 0xfff3ff0, uVar5 == 0x106c0 || (uVar5 == 0x20660)) ||
          (uVar5 == 0x20670)) || ((uVar5 == 0x30650 || (uVar5 == 0x30660)))) || (uVar5 == 0x30670)))
       ) {
      DAT_0045849c = DAT_0045849c | 1;
    }
    if (*piVar1 < 7) {
      uVar7 = 0;
    }
    else {
      if (false) {
        iVar3 = cpuid_basic_info(0);
      }
      else if (false) {
        iVar3 = cpuid_Version_info(1);
      }
      else if (false) {
        iVar3 = cpuid_cache_tlb_info(2);
      }
      else if (false) {
        iVar3 = cpuid_serial_info(3);
      }
      else if (false) {
        iVar3 = cpuid_Deterministic_Cache_Parameters_info(4);
      }
      else if (false) {
        iVar3 = cpuid_MONITOR_MWAIT_Features_info(5);
      }
      else if (false) {
        iVar3 = cpuid_Thermal_Power_Management_info(6);
      }
      else if (true) {
        iVar3 = cpuid_Extended_Feature_Enumeration_info(7);
      }
      else if (false) {
        iVar3 = cpuid_Direct_Cache_Access_info(9);
      }
      else if (false) {
        iVar3 = cpuid_Architectural_Performance_Monitoring_info(10);
      }
      else if (false) {
        iVar3 = cpuid_Extended_Topology_info(0xb);
      }
      else if (false) {
        iVar3 = cpuid_Processor_Extended_States_info(0xd);
      }
      else if (false) {
        iVar3 = cpuid_Quality_of_Service_info(0xf);
      }
      else if (false) {
        iVar3 = cpuid_brand_part1_info(0x80000002);
      }
      else if (false) {
        iVar3 = cpuid_brand_part2_info(0x80000003);
      }
      else if (false) {
        iVar3 = cpuid_brand_part3_info(0x80000004);
      }
      else {
        iVar3 = cpuid(7);
      }
      uVar7 = *(uint *)(iVar3 + 4);
      if ((uVar7 & 0x200) != 0) {
        DAT_0045849c = DAT_0045849c | 2;
      }
    }
    uVar5 = DAT_00448004 | 2;
    if ((uVar6 & 0x100000) != 0) {
      _DAT_00458498 = 2;
      uVar5 = DAT_00448004 | 6;
      if (((uVar6 & 0x8000000) != 0) && ((uVar6 & 0x10000000) != 0)) {
        _DAT_00458498 = 3;
        uVar5 = DAT_00448004 | 0xe;
        if ((uVar7 & 0x20) != 0) {
          _DAT_00458498 = 5;
          uVar5 = DAT_00448004 | 0x2e;
        }
      }
    }
  }
  DAT_00448004 = uVar5;
  return 0;
}



void __cdecl FUN_00429aa1(int param_1,DWORD param_2,DWORD param_3)

{
  uint uVar1;
  BOOL BVar2;
  LONG LVar3;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined uVar4;
  undefined uVar5;
  DWORD local_324;
  DWORD local_320 [19];
  undefined4 local_2d4;
  
  uVar1 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  if (param_1 != -1) {
    FUN_00434a98();
  }
  local_324 = 0;
  FUN_00427870(local_320,0,0x4c);
  uVar5 = SUB41(&local_324,0);
  local_2d4 = 0x10001;
  local_324 = param_2;
  local_320[0] = param_3;
  BVar2 = IsDebuggerPresent();
  LVar3 = ___crtUnhandledException((EXCEPTION_POINTERS *)&stack0xfffffcd4);
  uVar4 = extraout_DL;
  if (((LVar3 == 0) && (BVar2 == 0)) && (param_1 != -1)) {
    FUN_00434a98();
    uVar4 = extraout_DL_00;
  }
  FUN_004298aa(uVar1 ^ (uint)&stack0xfffffffc,uVar4,uVar5);
  return;
}



void __cdecl FUN_00429bc6(undefined4 param_1)

{
  DAT_004584a0 = param_1;
  return;
}



// Library Function - Single Match
//  __invalid_parameter
// 
// Libraries: Visual Studio 2010 Release, Visual Studio 2012 Release

void __invalid_parameter(wchar_t *param_1,wchar_t *param_2,wchar_t *param_3,uint param_4,
                        uintptr_t param_5)

{
  code *UNRECOVERED_JUMPTABLE;
  
  UNRECOVERED_JUMPTABLE = (code *)DecodePointer(DAT_004584a0);
  if (UNRECOVERED_JUMPTABLE != (code *)0x0) {
                    // WARNING: Could not recover jumptable at 0x00429be7. Too many branches
                    // WARNING: Treating indirect jump as call
    (*UNRECOVERED_JUMPTABLE)();
    return;
  }
  __invoke_watson(param_1,param_2,param_3,param_4,param_5);
  UNRECOVERED_JUMPTABLE = (code *)swi(3);
  (*UNRECOVERED_JUMPTABLE)();
  return;
}



void FUN_00429bfe(void)

{
  __invalid_parameter((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
  return;
}



// Library Function - Single Match
//  __invoke_watson
// 
// Library: Visual Studio 2012 Release

void __cdecl
__invoke_watson(wchar_t *param_1,wchar_t *param_2,wchar_t *param_3,uint param_4,uintptr_t param_5)

{
  code *pcVar1;
  BOOL BVar2;
  
  BVar2 = IsProcessorFeaturePresent(0x17);
  if (BVar2 != 0) {
    pcVar1 = (code *)swi(0x29);
    (*pcVar1)();
  }
  FUN_00429aa1(2,0xc0000417,1);
  ___crtTerminateProcess(0xc0000417);
  return;
}



// Library Function - Single Match
//  _strcpy_s
// 
// Library: Visual Studio 2012 Release

errno_t __cdecl _strcpy_s(char *_Dst,rsize_t _SizeInBytes,char *_Src)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  
  if ((_Dst != (char *)0x0) && (_SizeInBytes != 0)) {
    if (_Src != (char *)0x0) {
      iVar3 = (int)_Dst - (int)_Src;
      do {
        cVar1 = *_Src;
        _Src[iVar3] = cVar1;
        _Src = _Src + 1;
        if (cVar1 == '\0') break;
        _SizeInBytes = _SizeInBytes - 1;
      } while (_SizeInBytes != 0);
      if (_SizeInBytes != 0) {
        return 0;
      }
      *_Dst = '\0';
      piVar2 = __errno();
      iVar3 = 0x22;
      goto LAB_00429c5b;
    }
    *_Dst = '\0';
  }
  piVar2 = __errno();
  iVar3 = 0x16;
LAB_00429c5b:
  *piVar2 = iVar3;
  FUN_00429bfe();
  return iVar3;
}



// Library Function - Single Match
//  _strlen
// 
// Library: Visual Studio

size_t __cdecl _strlen(char *_Str)

{
  char cVar1;
  uint uVar2;
  uint *puVar3;
  uint *puVar4;
  
  uVar2 = (uint)_Str & 3;
  puVar3 = (uint *)_Str;
  while (uVar2 != 0) {
    cVar1 = *(char *)puVar3;
    puVar3 = (uint *)((int)puVar3 + 1);
    if (cVar1 == '\0') goto LAB_00429cf3;
    uVar2 = (uint)puVar3 & 3;
  }
  do {
    do {
      puVar4 = puVar3;
      puVar3 = puVar4 + 1;
    } while (((*puVar4 ^ 0xffffffff ^ *puVar4 + 0x7efefeff) & 0x81010100) == 0);
    uVar2 = *puVar4;
    if ((char)uVar2 == '\0') {
      return (int)puVar4 - (int)_Str;
    }
    if ((char)(uVar2 >> 8) == '\0') {
      return (size_t)((int)puVar4 + (1 - (int)_Str));
    }
    if ((uVar2 & 0xff0000) == 0) {
      return (size_t)((int)puVar4 + (2 - (int)_Str));
    }
  } while ((uVar2 & 0xff000000) != 0);
LAB_00429cf3:
  return (size_t)((int)puVar3 + (-1 - (int)_Str));
}



// Library Function - Single Match
//  __lock
// 
// Library: Visual Studio 2012 Release

void __cdecl __lock(int _File)

{
  int iVar1;
  
  if ((&DAT_00448010)[_File * 2] == 0) {
    iVar1 = FUN_00429da3(_File);
    if (iVar1 == 0) {
      __amsg_exit(0x11);
    }
  }
  EnterCriticalSection((LPCRITICAL_SECTION)(&DAT_00448010)[_File * 2]);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 __cdecl FUN_00429da3(int param_1)

{
  LPCRITICAL_SECTION p_Var1;
  int *piVar2;
  
  if (_DAT_0044700c == 0) {
    __FF_MSGBANNER();
    FUN_0042f096(0x1e);
    ___crtExitProcess(0xff);
  }
  if ((&DAT_00448010)[param_1 * 2] == 0) {
    p_Var1 = (LPCRITICAL_SECTION)FUN_00403c30(0x18);
    if (p_Var1 == (LPCRITICAL_SECTION)0x0) {
      piVar2 = __errno();
      *piVar2 = 0xc;
      return 0;
    }
    __lock(10);
    if ((&DAT_00448010)[param_1 * 2] == 0) {
      FUN_0042ed07(p_Var1,4000,0);
      (&DAT_00448010)[param_1 * 2] = p_Var1;
    }
    else {
      FUN_00403c10(p_Var1);
    }
    FUN_00429e43();
  }
  return 1;
}



void FUN_00429e43(void)

{
  FUN_00429e85(10);
  return;
}



undefined4 FUN_00429e4c(void)

{
  LPCRITICAL_SECTION *pp_Var1;
  LPCRITICAL_SECTION p_Var2;
  
  pp_Var1 = (LPCRITICAL_SECTION *)&DAT_00448010;
  p_Var2 = (LPCRITICAL_SECTION)&DAT_004584a8;
  do {
    if (pp_Var1[1] == (LPCRITICAL_SECTION)0x1) {
      *pp_Var1 = p_Var2;
      p_Var2 = p_Var2 + 1;
      FUN_0042ed07(*pp_Var1,4000,0);
    }
    pp_Var1 = pp_Var1 + 2;
  } while ((int)pp_Var1 < 0x448130);
  return 1;
}



void __cdecl FUN_00429e85(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(&DAT_00448010)[param_1 * 2]);
  return;
}



undefined4 FUN_00429e9a(void)

{
  int iVar1;
  LPCWSTR *ppWVar2;
  uint *local_8;
  
  local_8 = (uint *)0x0;
  ppWVar2 = DAT_00458460;
  while( true ) {
    if (*ppWVar2 == (LPCWSTR)0x0) {
      return 0;
    }
    iVar1 = WideCharToMultiByte(0,0,*ppWVar2,-1,(LPSTR)0x0,0,(LPCSTR)0x0,(LPBOOL)0x0);
    if ((iVar1 == 0) || (local_8 = FUN_00403d40(iVar1,1), local_8 == (uint *)0x0)) break;
    iVar1 = WideCharToMultiByte(0,0,*ppWVar2,-1,(LPSTR)local_8,iVar1,(LPCSTR)0x0,(LPBOOL)0x0);
    if (iVar1 == 0) {
      FUN_00403c10(local_8);
      return 0xffffffff;
    }
    iVar1 = FUN_0042a20d((byte **)&local_8,0);
    if ((iVar1 < 0) && (local_8 != (uint *)0x0)) {
      FUN_00403c10(local_8);
      local_8 = (uint *)0x0;
    }
    ppWVar2 = ppWVar2 + 1;
  }
  return 0xffffffff;
}



// Library Function - Single Match
//  __mbsnbicoll
// 
// Library: Visual Studio 2012 Release

int __cdecl __mbsnbicoll(uchar *_Str1,uchar *_Str2,size_t _MaxCount)

{
  int iVar1;
  
  iVar1 = FUN_00429f41(_Str1,_Str2,_MaxCount,(pthreadlocinfo *)0x0);
  return iVar1;
}



int __cdecl FUN_00429f41(byte *param_1,byte *param_2,uint param_3,pthreadlocinfo *param_4)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  pthreadlocinfo local_14;
  int local_10;
  int local_c;
  char local_8;
  
  FUN_00427078(&local_14,param_4);
  if (param_3 == 0) {
    iVar3 = 0;
  }
  else if ((param_1 == (byte *)0x0) || (param_2 == (byte *)0x0)) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    iVar3 = 0x7fffffff;
  }
  else {
    iVar3 = 0x7fffffff;
    if (param_3 < 0x80000000) {
      if (*(int *)(local_10 + 8) == 0) {
        iVar3 = FUN_00434aa0(param_1,param_2,param_3,param_4);
      }
      else {
        iVar2 = FUN_00434e09(&local_14,*(wchar_t **)(local_10 + 0x21c),0x1001,param_1,param_3,
                             param_2,param_3,*(UINT *)(local_10 + 4));
        if (iVar2 != 0) {
          iVar3 = iVar2 + -2;
        }
      }
    }
    else {
      piVar1 = __errno();
      *piVar1 = 0x16;
      FUN_00429bfe();
    }
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return iVar3;
}



// WARNING: This is an inlined function
// WARNING: Unable to track spacebase fully for stack
// WARNING: Variable defined which should be unmapped: param_2
// Library Function - Single Match
//  __SEH_prolog4
// 
// Library: Visual Studio

void __cdecl __SEH_prolog4(undefined4 param_1,int param_2)

{
  int iVar1;
  undefined4 unaff_EBX;
  undefined4 unaff_ESI;
  undefined4 unaff_EDI;
  int *in_FS_OFFSET;
  undefined4 unaff_retaddr;
  uint auStack28 [5];
  undefined local_8 [8];
  
  iVar1 = -param_2;
  *(undefined4 *)((int)auStack28 + iVar1 + 0x10) = unaff_EBX;
  *(undefined4 *)((int)auStack28 + iVar1 + 0xc) = unaff_ESI;
  *(undefined4 *)((int)auStack28 + iVar1 + 8) = unaff_EDI;
  *(uint *)((int)auStack28 + iVar1 + 4) = DAT_00447ff8 ^ (uint)&param_2;
  *(undefined4 *)((int)auStack28 + iVar1) = unaff_retaddr;
  *in_FS_OFFSET = (int)local_8;
  return;
}



// WARNING: This is an inlined function
// Library Function - Single Match
//  __SEH_epilog4
// 
// Library: Visual Studio

void __SEH_epilog4(void)

{
  undefined4 *unaff_EBP;
  undefined4 *in_FS_OFFSET;
  undefined4 unaff_retaddr;
  
  *in_FS_OFFSET = unaff_EBP[-4];
  *unaff_EBP = unaff_retaddr;
  return;
}



undefined4 __cdecl FUN_0042a060(PEXCEPTION_RECORD param_1,PVOID param_2,undefined4 param_3)

{
  int iVar1;
  uint uVar2;
  code *pcVar3;
  BOOL BVar4;
  undefined4 uVar5;
  undefined in_DL;
  undefined extraout_DL;
  undefined uVar6;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined4 extraout_EDX;
  uint extraout_EDX_00;
  uint uVar7;
  undefined4 unaff_EDI;
  int *piVar8;
  undefined8 uVar9;
  undefined uVar10;
  PEXCEPTION_RECORD local_1c;
  undefined4 local_18;
  uint *local_14;
  undefined4 local_10;
  uint local_c;
  char local_5;
  
  local_5 = '\0';
  iVar1 = (int)param_2 + 0x10;
  piVar8 = (int *)(*(uint *)((int)param_2 + 8) ^ DAT_00447ff8);
  local_10 = 1;
  if (*piVar8 != -2) {
    FUN_004298aa(piVar8[1] + iVar1 ^ *(uint *)(*piVar8 + iVar1),in_DL,(char)unaff_EDI);
    in_DL = extraout_DL;
  }
  FUN_004298aa(piVar8[3] + iVar1 ^ *(uint *)(piVar8[2] + iVar1),in_DL,(char)unaff_EDI);
  uVar10 = (undefined)unaff_EDI;
  if ((*(byte *)&param_1->ExceptionFlags & 0x66) == 0) {
    local_1c = param_1;
    local_18 = param_3;
    *(PEXCEPTION_RECORD **)((int)param_2 + -4) = &local_1c;
    local_c = *(uint *)((int)param_2 + 0xc);
    uVar5 = extraout_EDX;
    if (*(uint *)((int)param_2 + 0xc) == 0xfffffffe) {
      return local_10;
    }
    do {
      local_14 = (uint *)(piVar8 + local_c * 3 + 4);
      uVar2 = *local_14;
      if ((undefined *)piVar8[local_c * 3 + 5] != (undefined *)0x0) {
        uVar9 = __EH4_CallFilterFunc_8((undefined *)piVar8[local_c * 3 + 5]);
        uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);
        uVar10 = (undefined)unaff_EDI;
        uVar6 = (undefined)((ulonglong)uVar9 >> 0x20);
        local_5 = '\x01';
        if ((int)uVar9 < 0) {
          local_10 = 0;
          goto LAB_0042a19b;
        }
        if (0 < (int)uVar9) {
          if (((param_1->ExceptionCode == 0xe06d7363) && (DAT_004592a8 != (code *)0x0)) &&
             (BVar4 = __IsNonwritableInCurrentImage((PBYTE)&DAT_004592a8), BVar4 != 0)) {
            (*DAT_004592a8)(param_1,1);
          }
          __EH4_GlobalUnwind2_8(param_2,param_1);
          uVar7 = local_c;
          if (*(uint *)((int)param_2 + 0xc) != local_c) {
            __EH4_LocalUnwind_16((int)param_2,local_c,iVar1,&DAT_00447ff8);
            uVar7 = extraout_EDX_00;
          }
          uVar6 = (undefined)uVar7;
          *(uint *)((int)param_2 + 0xc) = uVar2;
          if (*piVar8 != -2) {
            FUN_004298aa(piVar8[1] + iVar1 ^ *(uint *)(*piVar8 + iVar1),uVar6,uVar10);
            uVar6 = extraout_DL_01;
          }
          FUN_004298aa(piVar8[3] + iVar1 ^ *(uint *)(piVar8[2] + iVar1),uVar6,uVar10);
          __EH4_TransferToHandler_8((undefined *)local_14[2]);
          pcVar3 = (code *)swi(3);
          uVar5 = (*pcVar3)();
          return uVar5;
        }
      }
      uVar10 = (undefined)unaff_EDI;
      uVar6 = (undefined)uVar5;
      local_c = uVar2;
    } while (uVar2 != 0xfffffffe);
    if (local_5 == '\0') {
      return local_10;
    }
  }
  else {
    if (*(int *)((int)param_2 + 0xc) == -2) {
      return local_10;
    }
    __EH4_LocalUnwind_16((int)param_2,0xfffffffe,iVar1,&DAT_00447ff8);
    uVar6 = extraout_DL_00;
  }
LAB_0042a19b:
  if (*piVar8 != -2) {
    FUN_004298aa(piVar8[1] + iVar1 ^ *(uint *)(*piVar8 + iVar1),uVar6,uVar10);
  }
  FUN_004298aa(piVar8[3] + iVar1 ^ *(uint *)(piVar8[2] + iVar1),(char)piVar8[2],uVar10);
  return local_10;
}



// Library Function - Single Match
//  _wcslen
// 
// Libraries: Visual Studio 2010 Release, Visual Studio 2012 Release, Visual Studio 2015 Release,
// Visual Studio 2019 Release

size_t __cdecl _wcslen(wchar_t *_Str)

{
  wchar_t wVar1;
  wchar_t *pwVar2;
  
  pwVar2 = _Str;
  do {
    wVar1 = *pwVar2;
    pwVar2 = pwVar2 + 1;
  } while (wVar1 != L'\0');
  return ((int)pwVar2 - (int)_Str >> 1) - 1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 __cdecl FUN_0042a20d(byte **param_1,int param_2)

{
  uint uVar1;
  byte *_Str;
  code *pcVar2;
  int *piVar3;
  byte *pbVar4;
  int iVar5;
  uint uVar6;
  char **ppcVar7;
  size_t sVar8;
  uint *_Dst;
  errno_t eVar9;
  BOOL BVar10;
  undefined4 uVar11;
  bool bVar12;
  byte *_Src;
  undefined4 local_c;
  
  local_c = 0;
  if (param_1 == (byte **)0x0) {
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
    return 0xffffffff;
  }
  _Str = *param_1;
  if (((_Str == (byte *)0x0) || (pbVar4 = (byte *)FUN_0042a83d(_Str,0x3d), pbVar4 == (byte *)0x0))
     || (_Str == pbVar4)) {
LAB_0042a298:
    piVar3 = __errno();
    *piVar3 = 0x16;
    return 0xffffffff;
  }
  bVar12 = pbVar4[1] == 0;
  if (DAT_0045845c == _DAT_0045847c) {
    DAT_0045845c = FUN_0042a455(DAT_0045845c);
  }
  if (DAT_0045845c == (char **)0x0) {
    if ((param_2 == 0) || (DAT_00458460 == (undefined4 *)0x0)) {
      if (bVar12) {
        return 0;
      }
      DAT_0045845c = (char **)FUN_00403c30(4);
      if (DAT_0045845c == (char **)0x0) {
        return 0xffffffff;
      }
      *DAT_0045845c = (char *)0x0;
      if (DAT_00458460 == (undefined4 *)0x0) {
        DAT_00458460 = (undefined4 *)FUN_00403c30(4);
        if (DAT_00458460 == (undefined4 *)0x0) {
          return 0xffffffff;
        }
        *DAT_00458460 = 0;
      }
    }
    else {
      iVar5 = FUN_00429e9a();
      if (iVar5 != 0) goto LAB_0042a298;
    }
    if (DAT_0045845c == (char **)0x0) {
      return 0xffffffff;
    }
  }
  ppcVar7 = DAT_0045845c;
  uVar6 = _findenv(_Str,(int)pbVar4 - (int)_Str);
  if (((int)uVar6 < 0) || (*ppcVar7 == (char *)0x0)) {
    if (bVar12) {
      FUN_00403c10(_Str);
      *param_1 = (byte *)0x0;
      return 0;
    }
    if ((int)uVar6 < 0) {
      uVar6 = -uVar6;
    }
    uVar1 = uVar6 + 2;
    if ((int)uVar1 < (int)uVar6) {
      return 0xffffffff;
    }
    if (0x3ffffffe < uVar1) {
      return 0xffffffff;
    }
    ppcVar7 = (char **)FUN_00403cc0(DAT_0045845c,4,uVar1);
    if (ppcVar7 == (char **)0x0) {
      return 0xffffffff;
    }
    ppcVar7[uVar6 + 1] = (char *)0x0;
    ppcVar7[uVar6] = (char *)_Str;
    *param_1 = (byte *)0x0;
  }
  else {
    FUN_00403c10(ppcVar7[uVar6]);
    if (!bVar12) {
      ppcVar7[uVar6] = (char *)_Str;
      *param_1 = (byte *)0x0;
      goto LAB_0042a3ac;
    }
    for (; ppcVar7[uVar6] != (char *)0x0; uVar6 = uVar6 + 1) {
      ppcVar7[uVar6] = ppcVar7[uVar6 + 1];
    }
    if ((0x3ffffffe < uVar6) ||
       (ppcVar7 = (char **)FUN_00403cc0(DAT_0045845c,uVar6,4), ppcVar7 == (char **)0x0))
    goto LAB_0042a3ac;
  }
  DAT_0045845c = ppcVar7;
LAB_0042a3ac:
  if (param_2 != 0) {
    iVar5 = 1;
    sVar8 = _strlen((char *)_Str);
    _Dst = FUN_00403d40(sVar8 + 2,iVar5);
    if (_Dst != (uint *)0x0) {
      _Src = _Str;
      sVar8 = _strlen((char *)_Str);
      eVar9 = _strcpy_s((char *)_Dst,sVar8 + 2,(char *)_Src);
      if (eVar9 != 0) {
        __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
        pcVar2 = (code *)swi(3);
        uVar11 = (*pcVar2)();
        return uVar11;
      }
      pbVar4[(int)_Dst - (int)_Str] = 0;
      BVar10 = SetEnvironmentVariableA
                         ((LPCSTR)_Dst,
                          (LPCSTR)(~-(uint)bVar12 & (uint)(pbVar4 + ((int)_Dst - (int)_Str) + 1)));
      if (BVar10 == 0) {
        local_c = 0xffffffff;
        piVar3 = __errno();
        *piVar3 = 0x2a;
      }
      FUN_00403c10(_Dst);
    }
  }
  if (bVar12) {
    FUN_00403c10(_Str);
    *param_1 = (byte *)0x0;
    return local_c;
  }
  return local_c;
}



char ** __cdecl FUN_0042a455(char **param_1)

{
  char **ppcVar1;
  char *pcVar2;
  int iVar3;
  char **ppcVar4;
  
  iVar3 = 0;
  ppcVar1 = param_1;
  if (param_1 != (char **)0x0) {
    pcVar2 = *param_1;
    while (pcVar2 != (char *)0x0) {
      ppcVar1 = ppcVar1 + 1;
      iVar3 = iVar3 + 1;
      pcVar2 = *ppcVar1;
    }
    ppcVar1 = (char **)FUN_00403d40(iVar3 + 1,4);
    if (ppcVar1 == (char **)0x0) {
      __amsg_exit(9);
    }
    pcVar2 = *param_1;
    ppcVar4 = ppcVar1;
    if (pcVar2 != (char *)0x0) {
      do {
        pcVar2 = (char *)FUN_00403cf0(pcVar2);
        *ppcVar4 = pcVar2;
        ppcVar4 = ppcVar4 + 1;
        pcVar2 = *(char **)(((int)param_1 - (int)ppcVar1) + (int)ppcVar4);
      } while (pcVar2 != (char *)0x0);
    }
    *ppcVar4 = (char *)0x0;
  }
  return ppcVar1;
}



// Library Function - Single Match
//  _findenv
// 
// Library: Visual Studio 2012 Release

int __cdecl _findenv(uchar *param_1,size_t param_2)

{
  uchar *_Str2;
  int iVar1;
  uchar **ppuVar2;
  
  _Str2 = *DAT_0045845c;
  ppuVar2 = DAT_0045845c;
  while( true ) {
    if (_Str2 == (uchar *)0x0) {
      return -((int)ppuVar2 - (int)DAT_0045845c >> 2);
    }
    iVar1 = __mbsnbicoll(param_1,_Str2,param_2);
    if ((iVar1 == 0) && (((*ppuVar2)[param_2] == '=' || ((*ppuVar2)[param_2] == '\0')))) break;
    ppuVar2 = ppuVar2 + 1;
    _Str2 = *ppuVar2;
  }
  return (int)ppuVar2 - (int)DAT_0045845c >> 2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 __cdecl FUN_0042a510(LPCWSTR *param_1,int param_2)

{
  uint uVar1;
  undefined2 *puVar2;
  LPCWSTR _Str;
  code *pcVar3;
  int *piVar4;
  LPCWSTR pWVar5;
  int iVar6;
  uint uVar7;
  size_t sVar8;
  uint *puVar9;
  errno_t eVar10;
  BOOL BVar11;
  undefined4 uVar12;
  uint uVar13;
  bool bVar14;
  undefined4 local_c;
  
  local_c = 0;
  if (param_1 == (LPCWSTR *)0x0) {
    piVar4 = __errno();
    *piVar4 = 0x16;
    FUN_00429bfe();
    return 0xffffffff;
  }
  _Str = *param_1;
  if (((_Str == (LPCWSTR)0x0) ||
      (pWVar5 = (LPCWSTR)FUN_00434e4c((ushort *)_Str,0x3d), pWVar5 == (LPCWSTR)0x0)) ||
     (_Str == pWVar5)) {
LAB_0042a5b6:
    piVar4 = __errno();
    *piVar4 = 0x16;
    return 0xffffffff;
  }
  bVar14 = pWVar5[1] == L'\0';
  if (DAT_00458460 == _DAT_00458478) {
    DAT_00458460 = FUN_0042a77f(DAT_00458460);
  }
  if (DAT_00458460 == (uint *)0x0) {
    if ((param_2 != 0) && (DAT_0045845c != (undefined4 *)0x0)) {
      DAT_00458484 = FUN_0043524b();
      iVar6 = FUN_004350ec();
      if ((iVar6 < 0) && (iVar6 = FUN_004351ce(), iVar6 != 0)) goto LAB_0042a5b6;
LAB_0042a609:
      if (DAT_00458460 == (uint *)0x0) {
        return 0xffffffff;
      }
      goto LAB_0042a613;
    }
    if (!bVar14) {
      if (DAT_0045845c == (undefined4 *)0x0) {
        DAT_0045845c = (undefined4 *)FUN_00403c30(4);
        if (DAT_0045845c == (undefined4 *)0x0) {
          return 0xffffffff;
        }
        *DAT_0045845c = 0;
        if (DAT_00458460 != (uint *)0x0) goto LAB_0042a613;
      }
      DAT_00458460 = (uint *)FUN_00403c30(4);
      if (DAT_00458460 == (uint *)0x0) {
        return 0xffffffff;
      }
      *DAT_00458460 = 0;
      goto LAB_0042a609;
    }
LAB_0042a76b:
    local_c = 0;
  }
  else {
LAB_0042a613:
    puVar9 = DAT_00458460;
    uVar13 = (int)pWVar5 - (int)_Str >> 1;
    uVar7 = _wfindenv(_Str,uVar13);
    if (((int)uVar7 < 0) || (*puVar9 == 0)) {
      if (bVar14) {
        FUN_00403c10(_Str);
        *param_1 = (LPCWSTR)0x0;
        goto LAB_0042a76b;
      }
      if ((int)uVar7 < 0) {
        uVar7 = -uVar7;
      }
      uVar1 = uVar7 + 2;
      if ((((int)uVar1 < (int)uVar7) || (0x3ffffffe < uVar1)) ||
         (puVar9 = FUN_00403cc0(DAT_00458460,4,uVar1), puVar9 == (uint *)0x0)) {
        return 0xffffffff;
      }
      puVar9[uVar7 + 1] = 0;
      puVar9[uVar7] = (uint)_Str;
      *param_1 = (LPCWSTR)0x0;
LAB_0042a679:
      DAT_00458460 = puVar9;
    }
    else {
      FUN_00403c10(puVar9[uVar7]);
      if (bVar14) {
        for (; puVar9[uVar7] != 0; uVar7 = uVar7 + 1) {
          puVar9[uVar7] = puVar9[uVar7 + 1];
        }
        if ((uVar7 < 0x3fffffff) &&
           (puVar9 = FUN_00403cc0(DAT_00458460,uVar7,4), puVar9 != (uint *)0x0)) goto LAB_0042a679;
      }
      else {
        puVar9[uVar7] = (uint)_Str;
        *param_1 = (LPCWSTR)0x0;
      }
    }
    if (param_2 != 0) {
      iVar6 = 2;
      sVar8 = _wcslen(_Str);
      puVar9 = FUN_00403d40(sVar8 + 2,iVar6);
      if (puVar9 != (uint *)0x0) {
        pWVar5 = _Str;
        sVar8 = _wcslen(_Str);
        eVar10 = _wcscpy_s((wchar_t *)puVar9,sVar8 + 2,pWVar5);
        if (eVar10 != 0) {
          __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
          pcVar3 = (code *)swi(3);
          uVar12 = (*pcVar3)();
          return uVar12;
        }
        puVar2 = (undefined2 *)((int)puVar9 + uVar13 * 2);
        *puVar2 = 0;
        BVar11 = SetEnvironmentVariableW
                           ((LPCWSTR)puVar9,(LPCWSTR)(~-(uint)bVar14 & (uint)(puVar2 + 1)));
        if (BVar11 == 0) {
          local_c = 0xffffffff;
          piVar4 = __errno();
          *piVar4 = 0x2a;
        }
        FUN_00403c10(puVar9);
      }
    }
    if (bVar14) {
      FUN_00403c10(_Str);
      *param_1 = (LPCWSTR)0x0;
    }
  }
  return local_c;
}



uint * __cdecl FUN_0042a77f(uint *param_1)

{
  uint *puVar1;
  uint uVar2;
  int iVar3;
  uint *puVar4;
  
  iVar3 = 0;
  puVar1 = param_1;
  if (param_1 != (uint *)0x0) {
    uVar2 = *param_1;
    while (uVar2 != 0) {
      puVar1 = puVar1 + 1;
      iVar3 = iVar3 + 1;
      uVar2 = *puVar1;
    }
    puVar1 = FUN_00403d40(iVar3 + 1,4);
    if (puVar1 == (uint *)0x0) {
      __amsg_exit(9);
    }
    puVar4 = puVar1;
    if (*param_1 != 0) {
      do {
        uVar2 = FUN_00408410();
        *puVar4 = uVar2;
        puVar4 = puVar4 + 1;
      } while (*(int *)(((int)param_1 - (int)puVar1) + (int)puVar4) != 0);
    }
    *puVar4 = 0;
  }
  return puVar1;
}



// Library Function - Single Match
//  _wfindenv
// 
// Library: Visual Studio 2012 Release

int __cdecl _wfindenv(LPCWSTR param_1,uint param_2)

{
  LPCWSTR pWVar1;
  int iVar2;
  LPCWSTR *ppWVar3;
  
  pWVar1 = *DAT_00458460;
  ppWVar3 = DAT_00458460;
  while( true ) {
    if (pWVar1 == (LPCWSTR)0x0) {
      return -((int)ppWVar3 - (int)DAT_00458460 >> 2);
    }
    iVar2 = FUN_00434efa(param_1,pWVar1,param_2);
    if ((iVar2 == 0) && (((*ppWVar3)[param_2] == L'=' || ((*ppWVar3)[param_2] == L'\0')))) break;
    ppWVar3 = ppWVar3 + 1;
    pWVar1 = *ppWVar3;
  }
  return (int)ppWVar3 - (int)DAT_00458460 >> 2;
}



void __cdecl FUN_0042a83d(byte *param_1,uint param_2)

{
  FUN_0042a852(param_1,param_2,(pthreadlocinfo *)0x0);
  return;
}



byte * __cdecl FUN_0042a852(byte *param_1,uint param_2,pthreadlocinfo *param_3)

{
  byte bVar1;
  byte bVar2;
  int *piVar3;
  byte *pbVar4;
  uint uVar5;
  byte *pbVar6;
  undefined local_14 [4];
  int local_10;
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_3);
  if (param_1 == (byte *)0x0) {
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
    pbVar4 = (byte *)0x0;
  }
  else if (*(int *)(local_10 + 8) == 0) {
    pbVar4 = (byte *)_strchr((char *)param_1,param_2);
  }
  else {
    while( true ) {
      bVar2 = *param_1;
      uVar5 = (uint)bVar2;
      pbVar4 = (byte *)0x0;
      if (bVar2 == 0) break;
      if ((*(byte *)(uVar5 + 0x19 + local_10) & 4) == 0) {
        pbVar6 = param_1;
        if (param_2 == uVar5) break;
      }
      else {
        bVar1 = param_1[1];
        if ((bVar1 == 0) ||
           (pbVar6 = param_1 + 1, pbVar4 = param_1, param_2 == CONCAT11(bVar2,bVar1)))
        goto LAB_0042a8da;
      }
      param_1 = pbVar6 + 1;
    }
    if (param_2 == uVar5) {
      pbVar4 = param_1;
    }
  }
LAB_0042a8da:
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return pbVar4;
}



void FUN_0042a8ef(void)

{
  bool bVar1;
  DWORD DVar2;
  uint *lpBuffer;
  int *piVar3;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined uVar4;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined uVar5;
  DWORD in_stack_fffffde4;
  uint local_214 [131];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  lpBuffer = local_214;
  bVar1 = false;
  DVar2 = GetCurrentDirectoryW(0x105,(LPWSTR)lpBuffer);
  uVar4 = extraout_DL;
  if ((int)DVar2 < 0x105) {
LAB_0042a970:
    uVar5 = (undefined)in_stack_fffffde4;
    if (DVar2 != 0) goto LAB_0042a99b;
  }
  else {
    in_stack_fffffde4 = DVar2 + 1;
    lpBuffer = FUN_00403d40(in_stack_fffffde4,2);
    if (lpBuffer == (uint *)0x0) {
      piVar3 = __errno();
      DVar2 = 0;
      *piVar3 = 0xc;
      uVar4 = extraout_DL_00;
      goto LAB_0042a970;
    }
    bVar1 = true;
    if (DVar2 != 0) {
      DVar2 = GetCurrentDirectoryW(in_stack_fffffde4,(LPWSTR)lpBuffer);
      uVar4 = extraout_DL_01;
      goto LAB_0042a970;
    }
  }
  uVar5 = (undefined)in_stack_fffffde4;
  piVar3 = __errno();
  *piVar3 = 0xc;
  uVar4 = extraout_DL_02;
LAB_0042a99b:
  if (bVar1) {
    FUN_00403c10(lpBuffer);
    uVar4 = extraout_DL_03;
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar4,uVar5);
  return;
}



void __cdecl FUN_0042a9be(LPCWSTR param_1,uint param_2)

{
  uint uVar1;
  ulong *puVar2;
  int *piVar3;
  BOOL BVar4;
  DWORD DVar5;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined uVar6;
  byte in_stack_ffffffd4;
  
  uVar1 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  if ((param_1 == (LPCWSTR)0x0) || ((param_2 & 0xfffffff9) != 0)) {
    puVar2 = ___doserrno();
    *puVar2 = 0;
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
    uVar6 = extraout_DL;
  }
  else {
    BVar4 = GetFileAttributesExW(param_1,GetFileExInfoStandard,&stack0xffffffd4);
    if (BVar4 == 0) {
      DVar5 = GetLastError();
      FID_conflict___dosmaperr(DVar5);
    }
    else {
      uVar6 = extraout_DL_00;
      if ((((in_stack_ffffffd4 & 0x10) != 0) || ((in_stack_ffffffd4 & 1) == 0)) ||
         ((param_2 & 2) == 0)) goto LAB_0042aa4d;
      puVar2 = ___doserrno();
      *puVar2 = 5;
      piVar3 = __errno();
      *piVar3 = 0xd;
    }
    __errno();
    uVar6 = extraout_DL_01;
  }
LAB_0042aa4d:
  FUN_004298aa(uVar1 ^ (uint)&stack0xfffffffc,uVar6,in_stack_ffffffd4);
  return;
}



HANDLE __cdecl FUN_0042aa5c(uint param_1,uint *param_2,char **param_3,byte **param_4)

{
  code *pcVar1;
  int *piVar2;
  byte *pbVar3;
  byte *pbVar4;
  size_t sVar5;
  uint *puVar6;
  errno_t eVar7;
  int iVar8;
  HANDLE pvVar9;
  rsize_t rVar10;
  uint *_Dst;
  int iVar11;
  undefined **local_8;
  
  if ((((param_2 == (uint *)0x0) || (*(char *)param_2 == '\0')) || (param_3 == (char **)0x0)) ||
     ((*param_3 == (char *)0x0 || (**param_3 == '\0')))) {
    piVar2 = __errno();
    *piVar2 = 0x16;
    FUN_00429bfe();
    return (HANDLE)0xffffffff;
  }
  pbVar3 = (byte *)FUN_004358ea((byte *)param_2,0x5c);
  pbVar4 = (byte *)FUN_004358ea((byte *)param_2,0x2f);
  puVar6 = param_2;
  if (pbVar4 == (byte *)0x0) {
    if ((pbVar3 != (byte *)0x0) ||
       (pbVar3 = (byte *)FUN_0042a83d((byte *)param_2,0x3a), pbVar3 != (byte *)0x0))
    goto LAB_0042ab21;
    sVar5 = _strlen((char *)param_2);
    rVar10 = sVar5 + 3;
    puVar6 = FUN_00403d40(rVar10,1);
    if (puVar6 != (uint *)0x0) {
      eVar7 = _strcpy_s((char *)puVar6,rVar10,".\\");
      if ((eVar7 != 0) || (eVar7 = _strcat_s((char *)puVar6,rVar10,(char *)param_2), eVar7 != 0))
      goto LAB_0042ac43;
      pbVar3 = (byte *)((int)puVar6 + 2);
      goto LAB_0042ab21;
    }
LAB_0042ab7a:
    pvVar9 = (HANDLE)0xffffffff;
  }
  else {
    if ((pbVar3 == (byte *)0x0) || (pbVar3 < pbVar4)) {
      pbVar3 = pbVar4;
    }
LAB_0042ab21:
    iVar8 = FUN_004358ea(pbVar3,0x2e);
    if (iVar8 == 0) {
      sVar5 = _strlen((char *)puVar6);
      rVar10 = sVar5 + 5;
      _Dst = FUN_00403d40(rVar10,1);
      if (_Dst == (uint *)0x0) goto LAB_0042ab7a;
      eVar7 = _strcpy_s((char *)_Dst,rVar10,(char *)puVar6);
      if (eVar7 != 0) {
LAB_0042ac43:
        __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
        pcVar1 = (code *)swi(3);
        pvVar9 = (HANDLE)(*pcVar1)();
        return pvVar9;
      }
      sVar5 = _strlen((char *)puVar6);
      piVar2 = __errno();
      iVar8 = *piVar2;
      local_8 = &PTR_DAT_0044813c;
      do {
        eVar7 = _strcpy_s((char *)(sVar5 + (int)_Dst),
                          (rVar10 - (int)(char *)(sVar5 + (int)_Dst)) + (int)_Dst,*local_8);
        if (eVar7 != 0) goto LAB_0042ac43;
        iVar11 = FUN_00426619((LPCSTR)_Dst,0);
        if (iVar11 == 0) {
          piVar2 = __errno();
          *piVar2 = iVar8;
          pvVar9 = FUN_0042ac4d(param_1,_Dst,param_3,param_4);
          goto LAB_0042ac1e;
        }
        local_8 = local_8 + -1;
      } while (0x44812f < (int)local_8);
      pvVar9 = (HANDLE)0xffffffff;
LAB_0042ac1e:
      FUN_00403c10(_Dst);
    }
    else {
      iVar8 = FUN_00426619((LPCSTR)puVar6,0);
      if (iVar8 == 0) {
        pvVar9 = FUN_0042ac4d(param_1,puVar6,param_3,param_4);
      }
      else {
        pvVar9 = (HANDLE)0xffffffff;
      }
    }
    if (puVar6 != param_2) {
      FUN_00403c10(puVar6);
    }
  }
  return pvVar9;
}



HANDLE __cdecl FUN_0042ac4d(uint param_1,uint *param_2,char **param_3,byte **param_4)

{
  uint *puVar1;
  int *piVar2;
  int iVar3;
  HANDLE pvVar4;
  uint *local_8;
  
  puVar1 = param_2;
  if ((param_2 == (uint *)0x0) || (param_3 == (char **)0x0)) {
    piVar2 = __errno();
    *piVar2 = 0x16;
    FUN_00429bfe();
  }
  else {
    iVar3 = FUN_00435523(param_3,param_4,&param_2,&local_8);
    if (iVar3 != -1) {
      pvVar4 = FUN_0043530b(param_1,(LPCSTR)puVar1,(char *)param_2,local_8);
      FUN_00403c10(param_2);
      FUN_00403c10(local_8);
      return pvVar4;
    }
  }
  return (HANDLE)0xffffffff;
}



// Library Function - Single Match
//  __fileno
// 
// Library: Visual Studio 2012 Release

int __cdecl __fileno(FILE *_File)

{
  int *piVar1;
  
  if (_File == (FILE *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    return -1;
  }
  return _File->_file;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_0042acdf(uint param_1)

{
  ulong *puVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  
  if (param_1 == 0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    if (((int)param_1 < 0) || (DAT_004592a4 <= param_1)) {
      puVar1 = ___doserrno();
      *puVar1 = 0;
    }
    else {
      iVar4 = (param_1 & 0x1f) * 0x40;
      if ((*(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + iVar4) & 1) != 0) {
        FUN_00435990(param_1);
        if ((*(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + iVar4) & 1) == 0) {
          piVar2 = __errno();
          *piVar2 = 9;
          uVar3 = 0xffffffff;
        }
        else {
          uVar3 = FUN_0042adba(param_1);
        }
        FUN_0042ad92();
        return uVar3;
      }
      puVar1 = ___doserrno();
      *puVar1 = 0;
    }
    piVar2 = __errno();
    *piVar2 = 9;
    FUN_00429bfe();
  }
  return 0xffffffff;
}



void FUN_0042ad92(void)

{
  uint unaff_ESI;
  
  FUN_00435b0b(unaff_ESI);
  return;
}



undefined4 __cdecl FUN_0042adba(uint param_1)

{
  int iVar1;
  int iVar2;
  HANDLE hObject;
  BOOL BVar3;
  DWORD DVar4;
  undefined4 uVar5;
  
  iVar1 = FUN_00435aa4(param_1);
  if (iVar1 != -1) {
    if (((param_1 == 1) && ((*(byte *)(DAT_004585f8 + 0x84) & 1) != 0)) ||
       ((param_1 == 2 && ((*(byte *)(DAT_004585f8 + 0x44) & 1) != 0)))) {
      iVar1 = FUN_00435aa4(2);
      iVar2 = FUN_00435aa4(1);
      if (iVar2 == iVar1) goto LAB_0042ae1e;
    }
    hObject = (HANDLE)FUN_00435aa4(param_1);
    BVar3 = CloseHandle(hObject);
    if (BVar3 == 0) {
      DVar4 = GetLastError();
      goto LAB_0042ae20;
    }
  }
LAB_0042ae1e:
  DVar4 = 0;
LAB_0042ae20:
  FUN_00435a1e(param_1);
  *(undefined *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + (param_1 & 0x1f) * 0x40) = 0;
  if (DVar4 == 0) {
    uVar5 = 0;
  }
  else {
    FID_conflict___dosmaperr(DVar4);
    uVar5 = 0xffffffff;
  }
  return uVar5;
}



// Library Function - Single Match
//  __freebuf
// 
// Library: Visual Studio 2012 Release

void __cdecl __freebuf(FILE *_File)

{
  if (((*(byte *)&_File->_flag & 0x83) != 0) && ((*(byte *)&_File->_flag & 8) != 0)) {
    FUN_00403c10(_File->_base);
    _File->_flag = _File->_flag & 0xfffffbf7;
    _File->_ptr = (char *)0x0;
    _File->_base = (char *)0x0;
    _File->_cnt = 0;
  }
  return;
}



int __cdecl FUN_0042ae84(FILE *param_1)

{
  int iVar1;
  uint uVar2;
  DWORD DVar3;
  
  if (param_1 == (FILE *)0x0) {
    iVar1 = _flsall(0);
  }
  else {
    iVar1 = FUN_0042aeca(param_1);
    if (iVar1 == 0) {
      if ((param_1->_flag & 0x4000U) == 0) {
        iVar1 = 0;
      }
      else {
        uVar2 = __fileno(param_1);
        DVar3 = FUN_00435b31(uVar2);
        iVar1 = -(uint)(DVar3 != 0);
      }
    }
    else {
      iVar1 = -1;
    }
  }
  return iVar1;
}



undefined4 __cdecl FUN_0042aeca(FILE *param_1)

{
  WCHAR *pWVar1;
  uint uVar2;
  undefined4 uVar3;
  uint uVar4;
  WCHAR *pWVar5;
  
  uVar3 = 0;
  if (((((byte)param_1->_flag & 3) == 2) && ((param_1->_flag & 0x108U) != 0)) &&
     (uVar4 = (int)param_1->_ptr - (int)param_1->_base, 0 < (int)uVar4)) {
    pWVar5 = (WCHAR *)param_1->_base;
    uVar2 = uVar4;
    pWVar1 = (WCHAR *)__fileno(param_1);
    uVar2 = FUN_00435c1a(pWVar1,pWVar5,uVar2);
    if (uVar2 == uVar4) {
      if ((char)param_1->_flag < '\0') {
        param_1->_flag = param_1->_flag & 0xfffffffd;
      }
    }
    else {
      param_1->_flag = param_1->_flag | 0x20;
      uVar3 = 0xffffffff;
    }
  }
  param_1->_cnt = 0;
  param_1->_ptr = param_1->_base;
  return uVar3;
}



void FUN_0042af2e(void)

{
  _flsall(1);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// Library Function - Single Match
//  _flsall
// 
// Library: Visual Studio 2012 Release

int __cdecl _flsall(int param_1)

{
  void *_File;
  FILE *pFVar1;
  int iVar2;
  int _Index;
  int iVar3;
  int local_28;
  
  iVar3 = 0;
  local_28 = 0;
  __lock(1);
  for (_Index = 0; _Index < DAT_0045a2e4; _Index = _Index + 1) {
    _File = *(void **)(DAT_0045a2e0 + _Index * 4);
    if ((_File != (void *)0x0) && ((*(byte *)((int)_File + 0xc) & 0x83) != 0)) {
      __lock_file2(_Index,_File);
      pFVar1 = *(FILE **)(DAT_0045a2e0 + _Index * 4);
      if ((*(byte *)&pFVar1->_flag & 0x83) != 0) {
        if (param_1 == 1) {
          iVar2 = FUN_0042ae84(pFVar1);
          if (iVar2 != -1) {
            iVar3 = iVar3 + 1;
          }
        }
        else if ((param_1 == 0) && ((*(byte *)&pFVar1->_flag & 2) != 0)) {
          iVar2 = FUN_0042ae84(pFVar1);
          if (iVar2 == -1) {
            local_28 = -1;
          }
        }
      }
      FUN_0042afdf();
    }
  }
  FUN_0042b012();
  if (param_1 != 1) {
    iVar3 = local_28;
  }
  return iVar3;
}



void FUN_0042afdf(void)

{
  int unaff_ESI;
  
  __unlock_file2(unaff_ESI,*(void **)(DAT_0045a2e0 + unaff_ESI * 4));
  return;
}



void FUN_0042b012(void)

{
  FUN_00429e85(1);
  return;
}



// Library Function - Single Match
//  __local_unwind4
// 
// Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual
// Studio 2019 Release

void __cdecl __local_unwind4(uint *param_1,int param_2,uint param_3)

{
  undefined4 *puVar1;
  uint uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  code *pcStack36;
  uint local_20;
  uint uStack28;
  int iStack24;
  uint *puStack20;
  
  puStack20 = param_1;
  iStack24 = param_2;
  uStack28 = param_3;
  pcStack36 = FUN_0042b0b0;
  uStack40 = *in_FS_OFFSET;
  local_20 = DAT_00447ff8 ^ (uint)&uStack40;
  *in_FS_OFFSET = &uStack40;
  while( true ) {
    uVar2 = *(uint *)(param_2 + 0xc);
    if ((uVar2 == 0xfffffffe) || ((param_3 != 0xfffffffe && (uVar2 <= param_3)))) break;
    puVar1 = (undefined4 *)((*(uint *)(param_2 + 8) ^ *param_1) + 0x10 + uVar2 * 0xc);
    *(undefined4 *)(param_2 + 0xc) = *puVar1;
    if (puVar1[1] == 0) {
      __NLG_Notify(0x101);
      FUN_004366a4();
    }
  }
  *in_FS_OFFSET = uStack40;
  return;
}



undefined4 __fastcall
FUN_0042b0b0(undefined4 param_1,undefined param_2,int param_3,uint param_4,undefined4 param_5,
            uint *param_6)

{
  undefined4 uVar1;
  int iVar2;
  undefined1 unaff_retaddr;
  
  uVar1 = 1;
  if ((*(uint *)(param_3 + 4) & 6) != 0) {
    iVar2 = FUN_004298aa(*(uint *)(param_4 + 8) ^ param_4,param_2,unaff_retaddr);
    __local_unwind4(*(uint **)(iVar2 + 0x14),*(int *)(iVar2 + 0x10),*(uint *)(iVar2 + 0xc));
    *param_6 = param_4;
    uVar1 = 3;
  }
  return uVar1;
}



void FUN_0042b0f6(int param_1)

{
  __local_unwind4(*(uint **)(param_1 + 0x28),*(int *)(param_1 + 0x18),*(uint *)(param_1 + 0x1c));
  return;
}



void FUN_0042b0f7(undefined4 param_1,int param_2)

{
  __local_unwind4(*(uint **)(param_2 + 0x28),*(int *)(param_2 + 0x18),*(uint *)(param_2 + 0x1c));
  return;
}



// Library Function - Single Match
//  @_EH4_CallFilterFunc@8
// 
// Library: Visual Studio

void __fastcall __EH4_CallFilterFunc_8(undefined *param_1)

{
  (*(code *)param_1)();
  return;
}



// Library Function - Single Match
//  @_EH4_TransferToHandler@8
// 
// Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual
// Studio 2019 Release

void __fastcall __EH4_TransferToHandler_8(undefined *UNRECOVERED_JUMPTABLE)

{
  __NLG_Notify(1);
                    // WARNING: Could not recover jumptable at 0x0042b140. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)UNRECOVERED_JUMPTABLE)();
  return;
}



// Library Function - Single Match
//  @_EH4_GlobalUnwind2@8
// 
// Libraries: Visual Studio 2010, Visual Studio 2012, Visual Studio 2015

void __fastcall __EH4_GlobalUnwind2_8(PVOID param_1,PEXCEPTION_RECORD param_2)

{
  RtlUnwind(param_1,(PVOID)0x42b156,param_2,(PVOID)0x0);
  return;
}



// Library Function - Single Match
//  @_EH4_LocalUnwind@16
// 
// Library: Visual Studio

void __fastcall __EH4_LocalUnwind_16(int param_1,uint param_2,undefined4 param_3,uint *param_4)

{
  __local_unwind4(param_4,param_1,param_2);
  return;
}



uint __cdecl FUN_0042b172(FILE *param_1)

{
  byte bVar1;
  int *piVar2;
  uint uVar3;
  uint uVar4;
  int iVar5;
  undefined *puVar6;
  LPWSTR pWVar7;
  
  if (param_1 == (FILE *)0x0) {
    piVar2 = __errno();
    *piVar2 = 0x16;
    FUN_00429bfe();
  }
  else {
    uVar4 = param_1->_flag;
    if (((uVar4 & 0x83) != 0) && ((uVar4 & 0x40) == 0)) {
      if ((uVar4 & 2) == 0) {
        param_1->_flag = uVar4 | 1;
        if ((uVar4 & 0x10c) == 0) {
          __getbuf(param_1);
        }
        else {
          param_1->_ptr = param_1->_base;
        }
        uVar4 = param_1->_bufsiz;
        pWVar7 = (LPWSTR)param_1->_base;
        uVar3 = __fileno(param_1);
        uVar4 = FUN_0042b293(uVar3,pWVar7,uVar4);
        param_1->_cnt = uVar4;
        if ((uVar4 != 0) && (uVar4 != 0xffffffff)) {
          if ((*(byte *)&param_1->_flag & 0x82) == 0) {
            iVar5 = __fileno(param_1);
            if ((iVar5 == -1) || (iVar5 = __fileno(param_1), iVar5 == -2)) {
              puVar6 = &DAT_00448240;
            }
            else {
              iVar5 = __fileno(param_1);
              uVar4 = __fileno(param_1);
              puVar6 = (undefined *)((uVar4 & 0x1f) * 0x40 + (&DAT_004585f8)[iVar5 >> 5]);
            }
            if ((puVar6[4] & 0x82) == 0x82) {
              param_1->_flag = param_1->_flag | 0x2000;
            }
          }
          if (((param_1->_bufsiz == 0x200) && ((*(byte *)&param_1->_flag & 8) != 0)) &&
             ((param_1->_flag & 0x400U) == 0)) {
            param_1->_bufsiz = 0x1000;
          }
          param_1->_cnt = param_1->_cnt + -1;
          bVar1 = *param_1->_ptr;
          param_1->_ptr = param_1->_ptr + 1;
          return (uint)bVar1;
        }
        param_1->_flag = param_1->_flag | (-(uint)(uVar4 != 0) & 0x10) + 0x10;
        param_1->_cnt = 0;
      }
      else {
        param_1->_flag = uVar4 | 0x20;
      }
    }
  }
  return 0xffffffff;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

uint __cdecl FUN_0042b293(uint param_1,LPWSTR param_2,uint param_3)

{
  ulong *puVar1;
  int *piVar2;
  uint uVar3;
  int iVar4;
  
  if (param_1 == 0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
    return 0xffffffff;
  }
  if (((int)param_1 < 0) || (DAT_004592a4 <= param_1)) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
  }
  else {
    iVar4 = (param_1 & 0x1f) * 0x40;
    if ((*(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + iVar4) & 1) != 0) {
      if (param_3 < 0x80000000) {
        FUN_00435990(param_1);
        if ((*(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + iVar4) & 1) == 0) {
          piVar2 = __errno();
          *piVar2 = 9;
          puVar1 = ___doserrno();
          *puVar1 = 0;
          uVar3 = 0xffffffff;
        }
        else {
          uVar3 = FUN_0042b3a7(param_1,param_2,param_3);
        }
        FUN_0042b37f();
        return uVar3;
      }
      puVar1 = ___doserrno();
      *puVar1 = 0;
      piVar2 = __errno();
      *piVar2 = 0x16;
      goto LAB_0042b399;
    }
    puVar1 = ___doserrno();
    *puVar1 = 0;
  }
  piVar2 = __errno();
  *piVar2 = 9;
LAB_0042b399:
  FUN_00429bfe();
  return 0xffffffff;
}



void FUN_0042b37f(void)

{
  uint unaff_ESI;
  
  FUN_00435b0b(unaff_ESI);
  return;
}



// WARNING: Could not reconcile some variable overlaps

uint __cdecl FUN_0042b3a7(uint param_1,LPWSTR param_2,uint param_3)

{
  byte *pbVar1;
  char cVar2;
  undefined uVar3;
  char cVar4;
  byte bVar5;
  WCHAR WVar6;
  ulong *puVar7;
  int *piVar8;
  undefined3 extraout_var;
  BOOL BVar9;
  ulong uVar10;
  DWORD DVar11;
  int iVar12;
  int iVar13;
  uint uVar14;
  uint nNumberOfBytesToRead;
  LPWSTR pWVar15;
  LPWSTR pWVar16;
  uint uVar17;
  LPWSTR pWVar18;
  WCHAR *pWVar19;
  bool bVar20;
  undefined8 uVar21;
  WCHAR *local_24;
  LPWSTR local_20;
  uint local_1c;
  uint local_18;
  LPWSTR local_14;
  int local_10;
  undefined2 local_c;
  char local_5;
  
  uVar17 = 0;
  local_1c = 0xfffffffe;
  local_24 = (WCHAR *)0x0;
  if (param_1 == 0xfffffffe) {
    puVar7 = ___doserrno();
    *puVar7 = 0;
    piVar8 = __errno();
    *piVar8 = 9;
    return 0xffffffff;
  }
  if ((-1 < (int)param_1) && (param_1 < DAT_004592a4)) {
    local_10 = (int)param_1 >> 5;
    iVar13 = (param_1 & 0x1f) * 0x40;
    bVar5 = *(byte *)((&DAT_004585f8)[local_10] + 4 + iVar13);
    if ((bVar5 & 1) != 0) {
      if (param_3 < 0x80000000) {
        if ((param_3 == 0) || ((bVar5 & 2) != 0)) {
          return 0;
        }
        if (param_2 != (LPWSTR)0x0) {
          cVar4 = (char)(*(char *)((&DAT_004585f8)[local_10] + 0x24 + iVar13) * '\x02') >> 1;
          if (cVar4 == '\x01') {
            if ((~param_3 & 1) == 0) goto LAB_0042b44d;
            uVar14 = param_3 >> 1;
            if (uVar14 < 4) {
              uVar14 = 4;
            }
            local_14 = (LPWSTR)FUN_00403c30(uVar14);
            if (local_14 == (LPWSTR)0x0) {
              piVar8 = __errno();
              *piVar8 = 0xc;
              puVar7 = ___doserrno();
              *puVar7 = 8;
              return 0xffffffff;
            }
            uVar21 = FUN_0042bc34(param_1,0,0,1);
            iVar12 = (&DAT_004585f8)[local_10];
            *(int *)(iVar12 + 0x28 + iVar13) = (int)uVar21;
            *(int *)(iVar12 + 0x2c + iVar13) = (int)((ulonglong)uVar21 >> 0x20);
          }
          else {
            uVar14 = param_3;
            if (cVar4 == '\x02') {
              if ((~param_3 & 1) == 0) goto LAB_0042b44d;
              uVar14 = param_3 & 0xfffffffe;
            }
            local_14 = param_2;
          }
          nNumberOfBytesToRead = uVar14;
          local_20 = local_14;
          if ((((*(byte *)((&DAT_004585f8)[local_10] + 4 + iVar13) & 0x48) != 0) &&
              (cVar2 = *(char *)((&DAT_004585f8)[local_10] + 5 + iVar13), cVar2 != '\n')) &&
             (uVar14 != 0)) {
            *(char *)local_14 = cVar2;
            local_20 = (LPWSTR)((int)local_14 + 1);
            uVar17 = 1;
            nNumberOfBytesToRead = uVar14 - 1;
            *(undefined *)((&DAT_004585f8)[local_10] + 5 + iVar13) = 10;
            if (((cVar4 != '\0') &&
                (cVar2 = *(char *)((&DAT_004585f8)[local_10] + 0x25 + iVar13), cVar2 != '\n')) &&
               (nNumberOfBytesToRead != 0)) {
              *(char *)local_20 = cVar2;
              local_20 = local_14 + 1;
              nNumberOfBytesToRead = uVar14 - 2;
              uVar17 = 2;
              *(undefined *)((&DAT_004585f8)[local_10] + 0x25 + iVar13) = 10;
              if (((cVar4 == '\x01') &&
                  (cVar2 = *(char *)((&DAT_004585f8)[local_10] + 0x26 + iVar13), cVar2 != '\n')) &&
                 (nNumberOfBytesToRead != 0)) {
                *(char *)local_20 = cVar2;
                local_20 = (LPWSTR)((int)local_14 + 3);
                nNumberOfBytesToRead = uVar14 - 3;
                uVar17 = 3;
                *(undefined *)((&DAT_004585f8)[local_10] + 0x26 + iVar13) = 10;
              }
            }
          }
          bVar5 = FUN_004366ed(param_1);
          if ((((CONCAT31(extraout_var,bVar5) == 0) ||
               ((*(byte *)((&DAT_004585f8)[local_10] + 4 + iVar13) & 0x80) == 0)) ||
              (local_24 = (WCHAR *)GetConsoleMode(*(HANDLE *)((&DAT_004585f8)[local_10] + iVar13),
                                                  (LPDWORD)&local_24), local_24 == (WCHAR *)0x0)) ||
             (cVar4 != '\x02')) {
            BVar9 = ReadFile(*(HANDLE *)((&DAT_004585f8)[local_10] + iVar13),local_20,
                             nNumberOfBytesToRead,&local_18,(LPOVERLAPPED)0x0);
            if (((BVar9 != 0) && (-1 < (int)local_18)) && (local_18 <= nNumberOfBytesToRead))
            goto LAB_0042b634;
            uVar10 = GetLastError();
            if (uVar10 != 5) {
              if (uVar10 == 0x6d) {
                uVar14 = 0;
                goto LAB_0042b8a9;
              }
              goto LAB_0042b5df;
            }
            piVar8 = __errno();
            *piVar8 = 9;
            puVar7 = ___doserrno();
            *puVar7 = 5;
          }
          else {
            BVar9 = ReadConsoleW(*(HANDLE *)((&DAT_004585f8)[local_10] + iVar13),local_20,
                                 nNumberOfBytesToRead >> 1,&local_18,
                                 (PCONSOLE_READCONSOLE_CONTROL)0x0);
            if (BVar9 != 0) {
              local_18 = local_18 * 2;
LAB_0042b634:
              uVar17 = uVar17 + local_18;
              iVar12 = (&DAT_004585f8)[local_10];
              bVar5 = *(byte *)(iVar12 + 4 + iVar13);
              uVar14 = local_1c;
              if (-1 < (char)bVar5) goto LAB_0042b8a9;
              if (cVar4 == '\x02') {
                if (local_24 == (WCHAR *)0x0) {
                  if ((local_18 == 0) || (*local_14 != L'\n')) {
                    bVar5 = bVar5 & 0xfb;
                  }
                  else {
                    bVar5 = bVar5 | 4;
                  }
                  *(byte *)(iVar12 + 4 + iVar13) = bVar5;
                  local_24 = (WCHAR *)((int)local_14 + uVar17);
                  iVar12 = local_10;
                  pWVar15 = local_14;
                  pWVar19 = local_14;
                  if (local_14 < local_24) {
                    do {
                      WVar6 = *pWVar19;
                      if (WVar6 == L'\x1a') {
                        bVar5 = *(byte *)((&DAT_004585f8)[iVar12] + 4 + iVar13);
                        if ((bVar5 & 0x40) == 0) {
                          *(byte *)((&DAT_004585f8)[iVar12] + 4 + iVar13) = bVar5 | 2;
                        }
                        else {
                          *pWVar15 = *pWVar19;
                          pWVar15 = pWVar15 + 1;
                        }
                        break;
                      }
                      if (WVar6 == L'\r') {
                        if (pWVar19 < local_24 + -1) {
                          if (pWVar19[1] != L'\n') {
                            *pWVar15 = L'\r';
                            iVar12 = local_10;
                            goto LAB_0042b9be;
                          }
                          pWVar19 = pWVar19 + 2;
                          *pWVar15 = L'\n';
LAB_0042baa0:
                          pWVar15 = pWVar15 + 1;
                          iVar12 = local_10;
                        }
                        else {
                          pWVar19 = pWVar19 + 1;
                          BVar9 = ReadFile(*(HANDLE *)((&DAT_004585f8)[iVar12] + iVar13),&local_c,2,
                                           &local_18,(LPOVERLAPPED)0x0);
                          if (((BVar9 == 0) && (DVar11 = GetLastError(), DVar11 != 0)) ||
                             (local_18 == 0)) {
                            *pWVar15 = L'\r';
                            pWVar15 = pWVar15 + 1;
                            iVar12 = local_10;
                          }
                          else {
                            iVar12 = local_10;
                            if ((*(byte *)((&DAT_004585f8)[local_10] + 4 + iVar13) & 0x48) == 0) {
                              if ((pWVar15 == local_14) && (local_c == 10)) {
                                *pWVar15 = L'\n';
                                pWVar15 = pWVar15 + 1;
                              }
                              else {
                                FUN_0042bc34(param_1,0xfffffffe,0xffffffff,1);
                                iVar12 = local_10;
                                if (local_c != 10) {
                                  *pWVar15 = L'\r';
                                  goto LAB_0042baa0;
                                }
                              }
                            }
                            else if (local_c == 10) {
                              *pWVar15 = L'\n';
                              pWVar15 = pWVar15 + 1;
                            }
                            else {
                              *pWVar15 = L'\r';
                              pWVar15 = pWVar15 + 1;
                              *(undefined *)((&DAT_004585f8)[local_10] + 5 + iVar13) =
                                   (undefined)local_c;
                              *(undefined *)((&DAT_004585f8)[local_10] + 0x25 + iVar13) =
                                   local_c._1_1_;
                              *(undefined *)((&DAT_004585f8)[local_10] + 0x26 + iVar13) = 10;
                            }
                          }
                        }
                      }
                      else {
                        *pWVar15 = WVar6;
LAB_0042b9be:
                        pWVar15 = pWVar15 + 1;
                        pWVar19 = pWVar19 + 1;
                      }
                    } while (pWVar19 < local_24);
                  }
                  uVar17 = (int)pWVar15 - (int)local_14;
                  uVar14 = local_1c;
                }
                else {
                  pWVar15 = local_14;
                  pWVar19 = local_14;
                  while (pWVar15 < local_14 + (int)uVar17 / 2) {
                    WVar6 = *pWVar15;
                    if (WVar6 == L'\x1a') {
                      pbVar1 = (byte *)((&DAT_004585f8)[local_10] + 4 + iVar13);
                      *pbVar1 = *pbVar1 | 2;
                      break;
                    }
                    if (WVar6 == L'\r') {
                      if (pWVar15 < local_14 + (int)uVar17 / 2 + -1) {
                        pWVar15 = pWVar15 + 1;
                        WVar6 = L'\n';
                        if (*pWVar15 != L'\n') {
                          WVar6 = L'\r';
                        }
                        *pWVar19 = WVar6;
                        pWVar19 = pWVar19 + 1;
                      }
                    }
                    else {
                      *pWVar19 = WVar6;
                      pWVar19 = pWVar19 + 1;
                      pWVar15 = pWVar15 + 1;
                    }
                  }
                  uVar17 = (int)pWVar19 - (int)local_14 & 0xfffffffe;
                }
                goto LAB_0042b8a9;
              }
              if ((local_18 == 0) || (*(char *)local_14 != '\n')) {
                bVar5 = bVar5 & 0xfb;
              }
              else {
                bVar5 = bVar5 | 4;
              }
              *(byte *)(iVar12 + 4 + iVar13) = bVar5;
              local_24 = local_14;
              local_20 = (LPWSTR)((int)local_14 + uVar17);
              iVar12 = local_10;
              pWVar15 = local_14;
              pWVar16 = local_14;
              if (local_14 < local_20) {
                do {
                  cVar2 = *(char *)pWVar16;
                  if (cVar2 == '\x1a') {
                    bVar5 = *(byte *)((&DAT_004585f8)[iVar12] + 4 + iVar13);
                    if ((bVar5 & 0x40) == 0) {
                      *(byte *)((&DAT_004585f8)[iVar12] + 4 + iVar13) = bVar5 | 2;
                    }
                    else {
                      *(undefined *)pWVar15 = *(undefined *)pWVar16;
                      pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                    }
                    break;
                  }
                  if (cVar2 == '\r') {
                    if (pWVar16 < (LPWSTR)((int)local_20 + -1)) {
                      pWVar18 = (LPWSTR)((int)pWVar16 + 1);
                      if (*(char *)pWVar18 == '\n') {
                        pWVar18 = pWVar16 + 1;
                        *(undefined *)pWVar15 = 10;
LAB_0042b766:
                        pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                      }
                      else {
                        *(undefined *)pWVar15 = 0xd;
                        pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                      }
                    }
                    else {
                      pWVar18 = (LPWSTR)((int)pWVar16 + 1);
                      BVar9 = ReadFile(*(HANDLE *)((&DAT_004585f8)[iVar12] + iVar13),&local_5,1,
                                       &local_18,(LPOVERLAPPED)0x0);
                      if (((BVar9 == 0) && (DVar11 = GetLastError(), DVar11 != 0)) ||
                         (local_18 == 0)) {
                        *(undefined *)pWVar15 = 0xd;
                        pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                        iVar12 = local_10;
                      }
                      else {
                        iVar12 = local_10;
                        if ((*(byte *)((&DAT_004585f8)[local_10] + 4 + iVar13) & 0x48) == 0) {
                          if ((pWVar15 == local_14) && (local_5 == '\n')) {
                            *(undefined *)pWVar15 = 10;
                            pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                          }
                          else {
                            FUN_0042bc34(param_1,0xffffffff,0xffffffff,1);
                            iVar12 = local_10;
                            if (local_5 != '\n') {
                              *(undefined *)pWVar15 = 0xd;
                              goto LAB_0042b766;
                            }
                          }
                        }
                        else if (local_5 == '\n') {
                          *(undefined *)pWVar15 = 10;
                          pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                        }
                        else {
                          *(undefined *)pWVar15 = 0xd;
                          pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                          *(char *)((&DAT_004585f8)[local_10] + 5 + iVar13) = local_5;
                        }
                      }
                    }
                  }
                  else {
                    *(char *)pWVar15 = cVar2;
                    pWVar15 = (LPWSTR)((int)pWVar15 + 1);
                    pWVar18 = (LPWSTR)((int)pWVar16 + 1);
                  }
                  pWVar16 = pWVar18;
                } while (pWVar18 < local_20);
              }
              uVar17 = (int)pWVar15 - (int)local_14;
              uVar14 = local_1c;
              if ((cVar4 != '\x01') || (uVar17 == 0)) goto LAB_0042b8a9;
              bVar5 = *(byte *)(LPWSTR)((int)pWVar15 + -1);
              if ((char)bVar5 < '\0') {
                iVar12 = 1;
                cVar4 = (&DAT_00448140)[bVar5];
                pWVar15 = (LPWSTR)((int)pWVar15 + -1);
                while (((cVar4 == '\0' && (iVar12 < 5)) && (local_14 <= pWVar15))) {
                  pWVar15 = (LPWSTR)((int)pWVar15 + -1);
                  iVar12 = iVar12 + 1;
                  cVar4 = (&DAT_00448140)[*(byte *)pWVar15];
                }
                if ((char)(&DAT_00448140)[*(byte *)pWVar15] == 0) {
                  piVar8 = __errno();
                  *piVar8 = 0x2a;
                  goto LAB_0042b5e6;
                }
                if ((char)(&DAT_00448140)[*(byte *)pWVar15] + 1 == iVar12) {
                  pWVar15 = (LPWSTR)((int)pWVar15 + iVar12);
                }
                else if ((*(byte *)((&DAT_004585f8)[local_10] + 4 + iVar13) & 0x48) == 0) {
                  FUN_0042bc34(param_1,-iVar12,-iVar12 >> 0x1f,1);
                }
                else {
                  pWVar16 = (LPWSTR)((int)pWVar15 + 1);
                  *(undefined *)((&DAT_004585f8)[local_10] + 5 + iVar13) = *(undefined *)pWVar15;
                  if (1 < iVar12) {
                    uVar3 = *(undefined *)pWVar16;
                    pWVar16 = pWVar15 + 1;
                    *(undefined *)((&DAT_004585f8)[local_10] + 0x25 + iVar13) = uVar3;
                  }
                  if (iVar12 == 3) {
                    uVar3 = *(undefined *)pWVar16;
                    pWVar16 = (LPWSTR)((int)pWVar16 + 1);
                    *(undefined *)((&DAT_004585f8)[local_10] + 0x26 + iVar13) = uVar3;
                  }
                  pWVar15 = (LPWSTR)((int)pWVar16 - iVar12);
                }
              }
              uVar14 = (int)pWVar15 - (int)local_14;
              uVar17 = MultiByteToWideChar(0xfde9,0,(LPCSTR)local_14,uVar14,param_2,param_3 >> 1);
              if (uVar17 != 0) {
                bVar20 = uVar17 != uVar14;
                uVar17 = uVar17 * 2;
                *(uint *)((&DAT_004585f8)[local_10] + 0x30 + iVar13) = (uint)bVar20;
                uVar14 = local_1c;
                goto LAB_0042b8a9;
              }
            }
            uVar10 = GetLastError();
LAB_0042b5df:
            FID_conflict___dosmaperr(uVar10);
          }
LAB_0042b5e6:
          uVar14 = 0xffffffff;
LAB_0042b8a9:
          if (local_14 != param_2) {
            FUN_00403c10(local_14);
          }
          if (uVar14 != 0xfffffffe) {
            return uVar14;
          }
          return uVar17;
        }
LAB_0042b44d:
        puVar7 = ___doserrno();
        *puVar7 = 0;
      }
      else {
        puVar7 = ___doserrno();
        *puVar7 = 0;
      }
      piVar8 = __errno();
      *piVar8 = 0x16;
      goto LAB_0042bb29;
    }
  }
  puVar7 = ___doserrno();
  *puVar7 = 0;
  piVar8 = __errno();
  *piVar8 = 9;
LAB_0042bb29:
  FUN_00429bfe();
  return 0xffffffff;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined8 __cdecl FUN_0042bb38(uint param_1,undefined4 param_2,undefined4 param_3,DWORD param_4)

{
  ulong *puVar1;
  int *piVar2;
  int iVar3;
  undefined8 uVar4;
  
  if (param_1 == 0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    if ((-1 < (int)param_1) && (param_1 < DAT_004592a4)) {
      iVar3 = (param_1 & 0x1f) * 0x40;
      if ((*(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + iVar3) & 1) != 0) {
        FUN_00435990(param_1);
        if ((*(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + iVar3) & 1) == 0) {
          piVar2 = __errno();
          *piVar2 = 9;
          puVar1 = ___doserrno();
          *puVar1 = 0;
          uVar4 = 0xffffffffffffffff;
        }
        else {
          uVar4 = FUN_0042bc34(param_1,param_2,param_3,param_4);
        }
        FUN_0042bc0a();
        return uVar4;
      }
    }
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
    FUN_00429bfe();
  }
  return 0xffffffffffffffff;
}



void FUN_0042bc0a(void)

{
  uint unaff_EDI;
  
  FUN_00435b0b(unaff_EDI);
  return;
}



undefined8 __cdecl FUN_0042bc34(uint param_1,undefined4 param_2,undefined4 param_3,DWORD param_4)

{
  byte *pbVar1;
  HANDLE hFile;
  int *piVar2;
  BOOL BVar3;
  DWORD DVar4;
  undefined4 local_c;
  undefined4 local_8;
  
  hFile = (HANDLE)FUN_00435aa4(param_1);
  if (hFile == (HANDLE)0xffffffff) {
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    BVar3 = SetFilePointerEx(hFile,CONCAT44(param_3,param_2),(PLARGE_INTEGER)&local_c,param_4);
    if (BVar3 != 0) {
      pbVar1 = (byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + (param_1 & 0x1f) * 0x40);
      *pbVar1 = *pbVar1 & 0xfd;
      goto LAB_0042bca1;
    }
    DVar4 = GetLastError();
    FID_conflict___dosmaperr(DVar4);
  }
  local_c = 0xffffffff;
  local_8 = 0xffffffff;
LAB_0042bca1:
  return CONCAT44(local_8,local_c);
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 FUN_0042bca7(void)

{
  HANDLE hFile;
  uint uVar1;
  byte bVar2;
  undefined4 uVar3;
  DWORD DVar4;
  HANDLE pvVar5;
  HANDLE *ppvVar6;
  int iVar7;
  _STARTUPINFOW local_78;
  int local_34;
  uint local_30;
  HANDLE *local_2c;
  HANDLE *local_28;
  HANDLE *local_24;
  HANDLE local_20;
  undefined local_14 [8];
  undefined4 uStack12;
  undefined *local_8;
  
  local_8 = &DAT_00445168;
  uStack12 = 0x42bcb3;
  __lock(0xb);
  local_8 = (undefined *)0x0;
  local_28 = (HANDLE *)FUN_00403d40(0x20,0x40);
  if (local_28 == (HANDLE *)0x0) {
    __local_unwind4(&DAT_00447ff8,(int)local_14,0xfffffffe);
    uVar3 = 0xffffffff;
  }
  else {
    DAT_004592a4 = (HANDLE)0x20;
    DAT_004585f8 = local_28;
    for (; local_28 < DAT_004585f8 + 0x200; local_28 = local_28 + 0x10) {
      *(undefined2 *)(local_28 + 1) = 0xa00;
      *local_28 = (HANDLE)0xffffffff;
      local_28[2] = (HANDLE)0x0;
      *(byte *)(local_28 + 9) = *(byte *)(local_28 + 9) & 0x80;
      *(byte *)(local_28 + 9) = *(byte *)(local_28 + 9) & 0x7f;
      *(undefined2 *)((int)local_28 + 0x25) = 0xa0a;
      local_28[0xe] = (HANDLE)0x0;
      *(undefined *)(local_28 + 0xd) = 0;
    }
    GetStartupInfoW(&local_78);
    if ((local_78.cbReserved2 != 0) && ((HANDLE *)local_78.lpReserved2 != (HANDLE *)0x0)) {
      local_20 = *(HANDLE *)local_78.lpReserved2;
      local_2c = (HANDLE *)((int)local_78.lpReserved2 + 4);
      local_24 = (HANDLE *)((int)local_2c + (int)local_20);
      if (0x7ff < (int)local_20) {
        local_20 = (HANDLE)0x800;
      }
      local_34 = 1;
      while (iVar7 = local_34, (int)DAT_004592a4 < (int)local_20) {
        local_28 = (HANDLE *)FUN_00403d40(0x20,0x40);
        if (local_28 == (HANDLE *)0x0) {
          local_20 = DAT_004592a4;
          break;
        }
        (&DAT_004585f8)[iVar7] = local_28;
        DAT_004592a4 = (HANDLE)((int)DAT_004592a4 + 0x20);
        for (; local_28 < (HANDLE *)((int)(&DAT_004585f8)[iVar7] + 0x800);
            local_28 = local_28 + 0x10) {
          *(undefined2 *)(local_28 + 1) = 0xa00;
          *local_28 = (HANDLE)0xffffffff;
          local_28[2] = (HANDLE)0x0;
          *(byte *)(local_28 + 9) = *(byte *)(local_28 + 9) & 0x80;
          *(undefined2 *)((int)local_28 + 0x25) = 0xa0a;
          local_28[0xe] = (HANDLE)0x0;
          *(undefined *)(local_28 + 0xd) = 0;
        }
        local_34 = iVar7 + 1;
      }
      local_30 = 0;
      pvVar5 = local_20;
      while (uVar1 = local_30, (int)local_30 < (int)pvVar5) {
        hFile = *local_24;
        if ((((hFile != (HANDLE)0xffffffff) && (hFile != (HANDLE)0xfffffffe)) &&
            ((*(byte *)local_2c & 1) != 0)) &&
           (((*(byte *)local_2c & 8) != 0 ||
            (DVar4 = GetFileType(hFile), pvVar5 = local_20, DVar4 != 0)))) {
          ppvVar6 = (HANDLE *)((uVar1 & 0x1f) * 0x40 + (int)(&DAT_004585f8)[(int)uVar1 >> 5]);
          *ppvVar6 = *local_24;
          *(byte *)(ppvVar6 + 1) = *(byte *)local_2c;
          local_28 = ppvVar6;
          FUN_0042ed07((LPCRITICAL_SECTION)(ppvVar6 + 3),4000,0);
          ppvVar6[2] = (HANDLE)((int)ppvVar6[2] + 1);
          pvVar5 = local_20;
        }
        local_2c = (HANDLE *)((int)local_2c + 1);
        local_24 = local_24 + 1;
        local_30 = uVar1 + 1;
      }
    }
    for (iVar7 = 0; local_30 = iVar7, iVar7 < 3; iVar7 = iVar7 + 1) {
      ppvVar6 = DAT_004585f8 + iVar7 * 0x10;
      local_28 = ppvVar6;
      if ((*ppvVar6 == (HANDLE)0xffffffff) || (*ppvVar6 == (HANDLE)0xfffffffe)) {
        *(undefined *)(ppvVar6 + 1) = 0x81;
        if (iVar7 == 0) {
          DVar4 = 0xfffffff6;
        }
        else {
          DVar4 = 0xfffffff5 - (iVar7 != 1);
        }
        local_20 = GetStdHandle(DVar4);
        if (((local_20 == (HANDLE)0xffffffff) || (local_20 == (HANDLE)0x0)) ||
           (DVar4 = GetFileType(local_20), DVar4 == 0)) {
          *(byte *)(ppvVar6 + 1) = *(byte *)(ppvVar6 + 1) | 0x40;
          *ppvVar6 = (HANDLE)0xfffffffe;
          if (DAT_0045a2e0 != 0) {
            *(undefined4 *)(*(int *)(DAT_0045a2e0 + iVar7 * 4) + 0x10) = 0xfffffffe;
          }
        }
        else {
          *ppvVar6 = local_20;
          if ((DVar4 & 0xff) == 2) {
            bVar2 = *(byte *)(ppvVar6 + 1) | 0x40;
LAB_0042bf07:
            *(byte *)(ppvVar6 + 1) = bVar2;
          }
          else if ((DVar4 & 0xff) == 3) {
            bVar2 = *(byte *)(ppvVar6 + 1) | 8;
            goto LAB_0042bf07;
          }
          FUN_0042ed07((LPCRITICAL_SECTION)(ppvVar6 + 3),4000,0);
          ppvVar6[2] = (HANDLE)((int)ppvVar6[2] + 1);
        }
      }
      else {
        *(byte *)(ppvVar6 + 1) = *(byte *)(ppvVar6 + 1) | 0x80;
      }
    }
    local_8 = (undefined *)0xfffffffe;
    FUN_0042bf52();
    uVar3 = 0;
  }
  return uVar3;
}



void FUN_0042bf52(void)

{
  FUN_00429e85(0xb);
  return;
}



uint __cdecl FUN_0042bf5b(uint param_1,FILE *param_2)

{
  uint uVar1;
  WCHAR *pWVar2;
  FILE *_File;
  byte bVar3;
  WCHAR *pWVar4;
  int *piVar5;
  undefined **ppuVar6;
  undefined3 extraout_var;
  undefined *puVar7;
  FILE *pFVar8;
  longlong lVar9;
  
  _File = param_2;
  pWVar4 = (WCHAR *)__fileno(param_2);
  uVar1 = _File->_flag;
  if ((uVar1 & 0x82) == 0) {
    piVar5 = __errno();
    *piVar5 = 9;
LAB_0042bf7f:
    _File->_flag = _File->_flag | 0x20;
    return 0xffffffff;
  }
  if ((uVar1 & 0x40) != 0) {
    piVar5 = __errno();
    *piVar5 = 0x22;
    goto LAB_0042bf7f;
  }
  pFVar8 = (FILE *)0x0;
  if ((uVar1 & 1) != 0) {
    _File->_cnt = 0;
    if ((uVar1 & 0x10) == 0) {
      _File->_flag = uVar1 | 0x20;
      return 0xffffffff;
    }
    _File->_ptr = _File->_base;
    _File->_flag = uVar1 & 0xfffffffe;
  }
  uVar1 = _File->_flag;
  _File->_cnt = 0;
  _File->_flag = uVar1 & 0xffffffef | 2;
  if (((uVar1 & 0x10c) == 0) &&
     (((ppuVar6 = FUN_0042761d(), _File != (FILE *)(ppuVar6 + 8) &&
       (ppuVar6 = FUN_0042761d(), _File != (FILE *)(ppuVar6 + 0x10))) ||
      (bVar3 = FUN_004366ed((uint)pWVar4), CONCAT31(extraout_var,bVar3) == 0)))) {
    __getbuf(_File);
  }
  if ((_File->_flag & 0x108U) == 0) {
    param_2 = (FILE *)0x1;
    pFVar8 = (FILE *)FUN_00435c1a(pWVar4,(WCHAR *)&param_1,1);
  }
  else {
    pWVar2 = (WCHAR *)_File->_base;
    param_2 = (FILE *)(_File->_ptr + -(int)pWVar2);
    _File->_ptr = (char *)((int)pWVar2 + 1);
    _File->_cnt = _File->_bufsiz + -1;
    if ((int)param_2 < 1) {
      if ((pWVar4 == (WCHAR *)0xffffffff) || (pWVar4 == (WCHAR *)0xfffffffe)) {
        puVar7 = &DAT_00448240;
      }
      else {
        puVar7 = (undefined *)(((uint)pWVar4 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)pWVar4 >> 5]);
      }
      if (((puVar7[4] & 0x20) != 0) && (lVar9 = FUN_0042bb38((uint)pWVar4,0,0,2), lVar9 == -1))
      goto LAB_0042c096;
    }
    else {
      pFVar8 = (FILE *)FUN_00435c1a(pWVar4,pWVar2,(uint)param_2);
    }
    *_File->_base = (char)param_1;
  }
  if (pFVar8 == param_2) {
    return param_1 & 0xff;
  }
LAB_0042c096:
  _File->_flag = _File->_flag | 0x20;
  return 0xffffffff;
}



void __cdecl FUN_0042c0aa(FILE *param_1,byte *param_2,pthreadlocinfo *param_3,int **param_4)

{
  byte bVar1;
  WCHAR WVar2;
  byte *pbVar3;
  ushort uVar4;
  uint uVar5;
  undefined2 extraout_var_00;
  int *piVar6;
  undefined3 extraout_var;
  code *pcVar7;
  char *pcVar8;
  byte *pbVar9;
  int iVar10;
  int *piVar11;
  int extraout_ECX;
  byte bVar12;
  byte extraout_DL;
  undefined *puVar13;
  uint uVar14;
  int *piVar15;
  char *pcVar16;
  bool bVar17;
  longlong lVar18;
  int **ppiVar19;
  undefined4 uVar20;
  pthreadlocinfo *pptVar21;
  undefined in_stack_fffffd7c;
  int *local_27c;
  int *local_278;
  pthreadlocinfo local_274 [2];
  int local_26c;
  char local_268;
  int local_264;
  undefined4 local_260;
  int *local_25c;
  int local_258;
  int *local_254;
  int local_250;
  uint local_24c;
  int local_248;
  int *local_244;
  char *local_240;
  int local_23c;
  int local_238;
  FILE *local_234;
  byte local_230;
  char local_22f;
  int *local_22c;
  char *local_228;
  int local_224;
  int **local_220;
  uint local_21c;
  byte local_215;
  byte *local_214;
  undefined local_210;
  undefined local_11 [9];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  local_234 = param_1;
  local_214 = param_2;
  uVar14 = 0;
  local_220 = param_4;
  local_258 = 0;
  piVar15 = (int *)0x0;
  local_21c = 0;
  local_244 = (int *)0x0;
  local_22c = (int *)0x0;
  local_238 = 0;
  local_260 = 0;
  local_250 = 0;
  local_23c = 0;
  FUN_00427078(local_274,param_3);
  local_25c = __errno();
  if (local_234 != (FILE *)0x0) {
    if ((*(byte *)&local_234->_flag & 0x40) == 0) {
      uVar5 = __fileno(local_234);
      if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {
        puVar13 = &DAT_00448240;
      }
      else {
        puVar13 = (undefined *)((uVar5 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)uVar5 >> 5]);
      }
      if ((puVar13[0x24] & 0x7f) == 0) {
        if ((uVar5 == 0xffffffff) || (uVar5 == 0xfffffffe)) {
          puVar13 = &DAT_00448240;
        }
        else {
          puVar13 = (undefined *)((uVar5 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)uVar5 >> 5]);
        }
        if ((puVar13[0x24] & 0x80) == 0) goto LAB_0042c1a1;
      }
    }
    else {
LAB_0042c1a1:
      if (local_214 != (byte *)0x0) {
        bVar12 = *local_214;
        local_228 = (char *)0x0;
        iVar10 = 0;
        local_224 = 0;
        local_248 = 0;
        local_254 = (int *)0x0;
        local_24c = local_24c & 0xffffff00 | (uint)bVar12;
        pbVar3 = local_214;
        while ((local_215 = bVar12, bVar12 != 0 && (local_214 = pbVar3 + 1, -1 < iVar10))) {
          if ((byte)(bVar12 - 0x20) < 0x59) {
            uVar5 = (int)"UNICODE"[(char)bVar12] & 0xf;
          }
          else {
            uVar5 = 0;
          }
          local_248 = (int)(char)(&DAT_0043f098)[uVar5 * 8 + local_248] >> 4;
          pbVar9 = local_214;
          switch(local_248) {
          case 0:
LAB_0042c43d:
            local_23c = 0;
            uVar4 = FUN_00428fd5((uint)bVar12,local_274);
            if (CONCAT22(extraout_var_00,uVar4) != 0) {
              _write_char((byte)local_24c,local_234,&local_224);
              bVar12 = *local_214;
              local_214 = local_214 + 1;
              local_24c = local_24c & 0xffffff00 | (uint)bVar12;
              if (bVar12 == 0) goto LAB_0042cbf5;
            }
            _write_char((byte)local_24c,local_234,&local_224);
            pbVar9 = local_214;
            iVar10 = local_224;
            break;
          case 1:
            local_22c = (int *)0xffffffff;
            uVar14 = 0;
            local_260 = 0;
            local_250 = 0;
            local_244 = (int *)0x0;
            local_238 = 0;
            local_21c = 0;
            local_23c = 0;
            break;
          case 2:
            if (bVar12 == 0x20) {
              uVar14 = uVar14 | 2;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x23) {
              uVar14 = uVar14 | 0x80;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x2b) {
              uVar14 = uVar14 | 1;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x2d) {
              uVar14 = uVar14 | 4;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x30) {
              uVar14 = uVar14 | 8;
              local_21c = uVar14;
            }
            break;
          case 3:
            if (bVar12 == 0x2a) {
              local_244 = *local_220;
              local_220 = local_220 + 1;
              if ((int)local_244 < 0) {
                uVar14 = uVar14 | 4;
                local_244 = (int *)-(int)local_244;
                local_21c = uVar14;
              }
            }
            else {
              local_244 = (int *)((int)(char)bVar12 + (int)local_244 * 10 + -0x30);
              iVar10 = local_224;
            }
            break;
          case 4:
            local_22c = (int *)0x0;
            break;
          case 5:
            if (bVar12 == 0x2a) {
              local_22c = *local_220;
              local_220 = local_220 + 1;
              if ((int)local_22c < 0) {
                local_22c = (int *)0xffffffff;
              }
            }
            else {
              local_22c = (int *)((int)(char)bVar12 + (int)local_22c * 10 + -0x30);
              iVar10 = local_224;
            }
            break;
          case 6:
            if (bVar12 == 0x49) {
              bVar1 = *local_214;
              if ((bVar1 == 0x36) && (pbVar3[2] == 0x34)) {
                uVar14 = uVar14 | 0x8000;
                pbVar9 = pbVar3 + 3;
                local_21c = uVar14;
              }
              else if ((bVar1 == 0x33) && (pbVar3[2] == 0x32)) {
                uVar14 = uVar14 & 0xffff7fff;
                pbVar9 = pbVar3 + 3;
                local_21c = uVar14;
              }
              else if ((((bVar1 != 100) && (bVar1 != 0x69)) && (bVar1 != 0x6f)) &&
                      (((bVar1 != 0x75 && (bVar1 != 0x78)) && (bVar1 != 0x58)))) {
                local_248 = 0;
                goto LAB_0042c43d;
              }
            }
            else if (bVar12 == 0x68) {
              uVar14 = uVar14 | 0x20;
              local_21c = uVar14;
            }
            else if (bVar12 == 0x6c) {
              if (*local_214 == 0x6c) {
                uVar14 = uVar14 | 0x1000;
                pbVar9 = pbVar3 + 2;
                local_21c = uVar14;
              }
              else {
                uVar14 = uVar14 | 0x10;
                local_21c = uVar14;
              }
            }
            else if (bVar12 == 0x77) {
              uVar14 = uVar14 | 0x800;
              local_21c = uVar14;
            }
            break;
          case 7:
            if ((char)bVar12 < 'e') {
              if (bVar12 == 100) {
LAB_0042c714:
                uVar14 = uVar14 | 0x40;
                local_21c = uVar14;
LAB_0042c71d:
                local_228 = (char *)0xa;
LAB_0042c727:
                if (((uVar14 & 0x8000) == 0) && ((uVar14 & 0x1000) == 0)) {
                  if ((uVar14 & 0x20) == 0) {
                    if ((uVar14 & 0x40) == 0) {
                      piVar15 = *local_220;
                      piVar11 = (int *)0x0;
                      local_220 = local_220 + 1;
                      goto LAB_0042c8fe;
                    }
                    piVar15 = *local_220;
                  }
                  else if ((uVar14 & 0x40) == 0) {
                    piVar15 = (int *)(uint)*(ushort *)local_220;
                  }
                  else {
                    piVar15 = (int *)(int)*(short *)local_220;
                  }
                  piVar11 = (int *)((int)piVar15 >> 0x1f);
                  local_220 = local_220 + 1;
                }
                else {
                  piVar15 = *local_220;
                  piVar11 = local_220[1];
                  local_220 = local_220 + 2;
                }
LAB_0042c8fe:
                if ((((uVar14 & 0x40) != 0) && ((int)piVar11 < 1)) &&
                   (((int)piVar11 < 0 || (false)))) {
                  bVar17 = piVar15 != (int *)0x0;
                  piVar15 = (int *)-(int)piVar15;
                  piVar11 = (int *)-(int)((int)piVar11 + (uint)bVar17);
                  uVar14 = uVar14 | 0x100;
                  local_21c = uVar14;
                }
                if ((uVar14 & 0x9000) == 0) {
                  piVar11 = (int *)0x0;
                }
                lVar18 = CONCAT44(piVar11,piVar15);
                if ((int)local_22c < 0) {
                  local_22c = (int *)0x1;
                }
                else {
                  local_21c = uVar14 & 0xfffffff7;
                  if (0x200 < (int)local_22c) {
                    local_22c = (int *)0x200;
                  }
                }
                if (((uint)piVar15 | (uint)piVar11) == 0) {
                  local_238 = 0;
                }
                piVar11 = (int *)local_11;
                while( true ) {
                  piVar6 = (int *)((int)local_22c + -1);
                  if (((int)local_22c < 1) && (lVar18 == 0)) break;
                  local_22c = piVar6;
                  lVar18 = __aulldvrm((uint)lVar18,(uint)((ulonglong)lVar18 >> 0x20),(uint)local_228
                                      ,(int)local_228 >> 0x1f);
                  local_240 = (char *)lVar18;
                  iVar10 = extraout_ECX + 0x30;
                  if (0x39 < iVar10) {
                    iVar10 = iVar10 + local_258;
                  }
                  *(char *)piVar11 = (char)iVar10;
                  piVar11 = (int *)((int)piVar11 + -1);
                }
                local_228 = local_11 + -(int)piVar11;
                piVar15 = (int *)((int)piVar11 + 1);
                uVar14 = local_21c;
                local_22c = piVar6;
                if (((local_21c & 0x200) != 0) &&
                   ((local_228 == (char *)0x0 || (*(char *)piVar15 != '0')))) {
                  local_228 = local_11 + -(int)piVar11 + 1;
                  *(undefined *)piVar11 = 0x30;
                  piVar15 = piVar11;
                }
              }
              else if ((char)bVar12 < 'T') {
                if (bVar12 == 0x53) {
                  if ((uVar14 & 0x830) == 0) {
                    uVar14 = uVar14 | 0x800;
                    local_21c = uVar14;
                  }
                  goto LAB_0042c55e;
                }
                if (bVar12 == 0x41) {
LAB_0042c4e3:
                  local_260 = 1;
                  local_215 = bVar12 + 0x20;
LAB_0042c4f6:
                  uVar5 = uVar14 | 0x40;
                  local_240 = (char *)0x200;
                  piVar6 = (int *)&local_210;
                  pcVar16 = local_240;
                  local_21c = uVar5;
                  if ((int)local_22c < 0) {
                    local_22c = (int *)0x6;
                  }
                  else if (local_22c == (int *)0x0) {
                    if (local_215 == 0x67) {
                      local_22c = (int *)0x1;
                    }
                  }
                  else {
                    if (0x200 < (int)local_22c) {
                      local_22c = (int *)0x200;
                    }
                    if (0xa3 < (int)local_22c) {
                      pcVar16 = (char *)((int)local_22c + 0x15d);
                      local_254 = (int *)FUN_00403c30(pcVar16);
                      piVar6 = local_254;
                      if (local_254 == (int *)0x0) {
                        local_22c = (int *)0xa3;
                        piVar6 = (int *)&local_210;
                        pcVar16 = local_240;
                      }
                    }
                  }
                  local_240 = pcVar16;
                  local_27c = *local_220;
                  local_278 = local_220[1];
                  pptVar21 = local_274;
                  iVar10 = (int)(char)local_215;
                  ppiVar19 = &local_27c;
                  piVar15 = piVar6;
                  pcVar16 = local_240;
                  piVar11 = local_22c;
                  uVar20 = local_260;
                  local_220 = local_220 + 2;
                  pcVar7 = (code *)DecodePointer(PTR_FUN_004482b8);
                  (*pcVar7)(ppiVar19,piVar15,pcVar16,iVar10,piVar11,uVar20,pptVar21);
                  if (((uVar14 & 0x80) != 0) && (local_22c == (int *)0x0)) {
                    pptVar21 = local_274;
                    piVar15 = piVar6;
                    pcVar7 = (code *)DecodePointer(PTR_FUN_004482c4);
                    (*pcVar7)(piVar15,pptVar21);
                  }
                  if ((local_215 == 0x67) && ((uVar14 & 0x80) == 0)) {
                    pptVar21 = local_274;
                    piVar15 = piVar6;
                    pcVar7 = (code *)DecodePointer(PTR_FUN_004482c0);
                    (*pcVar7)(piVar15,pptVar21);
                  }
                  if (*(char *)piVar6 == '-') {
                    local_21c = uVar14 | 0x140;
                    uVar5 = local_21c;
                    piVar6 = (int *)((int)piVar6 + 1);
                  }
LAB_0042c67e:
                  piVar15 = piVar6;
                  uVar14 = uVar5;
                  local_228 = (char *)_strlen((char *)piVar15);
                }
                else if (bVar12 == 0x43) {
                  if ((uVar14 & 0x830) == 0) {
                    uVar14 = uVar14 | 0x800;
                    local_21c = uVar14;
                  }
LAB_0042c5d7:
                  if ((uVar14 & 0x810) == 0) {
                    local_210 = *(undefined *)local_220;
                    local_228 = (char *)0x1;
                    local_220 = local_220 + 1;
                  }
                  else {
                    WVar2 = *(WCHAR *)local_220;
                    local_220 = local_220 + 1;
                    iVar10 = FUN_00436865((int *)&local_228,(uint *)&local_210,0x200,WVar2);
                    if (iVar10 != 0) {
                      local_250 = 1;
                    }
                  }
                  piVar15 = (int *)&local_210;
                }
                else if ((bVar12 == 0x45) || (bVar12 == 0x47)) goto LAB_0042c4e3;
              }
              else {
                if (bVar12 == 0x58) goto LAB_0042c872;
                if (bVar12 == 0x5a) {
                  piVar11 = *local_220;
                  local_220 = local_220 + 1;
                  uVar5 = uVar14;
                  piVar6 = (int *)PTR_DAT_00448280;
                  if ((piVar11 == (int *)0x0) ||
                     (piVar15 = (int *)piVar11[1], piVar15 == (int *)0x0)) goto LAB_0042c67e;
                  local_228 = (char *)(int)*(WCHAR *)piVar11;
                  if ((uVar14 & 0x800) == 0) {
                    local_23c = 0;
                  }
                  else {
                    local_23c = 1;
                    local_228 = (char *)((int)local_228 / 2);
                  }
                }
                else {
                  if (bVar12 == 0x61) goto LAB_0042c4f6;
                  if (bVar12 == 99) goto LAB_0042c5d7;
                }
              }
LAB_0042c9fb:
              if (local_250 == 0) {
                if ((uVar14 & 0x40) != 0) {
                  if ((uVar14 & 0x100) == 0) {
                    if ((uVar14 & 1) == 0) {
                      if ((uVar14 & 2) == 0) goto LAB_0042ca42;
                      local_230 = 0x20;
                    }
                    else {
                      local_230 = 0x2b;
                    }
                  }
                  else {
                    local_230 = 0x2d;
                  }
                  local_238 = 1;
                }
LAB_0042ca42:
                pcVar16 = (char *)((int)local_244 + (-local_238 - (int)local_228));
                if ((uVar14 & 0xc) == 0) {
                  _write_multi_char(0x20,(int)pcVar16,local_234,&local_224);
                }
                FUN_0042cc9e(&local_230,local_238,local_234,&local_224,local_25c);
                if (((uVar14 & 8) != 0) && ((uVar14 & 4) == 0)) {
                  _write_multi_char(0x30,(int)pcVar16,local_234,&local_224);
                }
                if ((local_23c == 0) || (pcVar8 = local_228, piVar11 = piVar15, (int)local_228 < 1))
                {
                  FUN_0042cc9e((byte *)piVar15,(int)local_228,local_234,&local_224,local_25c);
                }
                else {
                  do {
                    local_240 = pcVar8 + -1;
                    iVar10 = FUN_00436865(&local_264,(uint *)(local_11 + 1),6,*(WCHAR *)piVar11);
                    if ((iVar10 != 0) || (local_264 == 0)) {
                      local_224 = -1;
                      break;
                    }
                    FUN_0042cc9e(local_11 + 1,local_264,local_234,&local_224,local_25c);
                    pcVar8 = local_240;
                    piVar11 = (int *)((int)piVar11 + 2);
                  } while (local_240 != (char *)0x0);
                }
                if ((-1 < local_224) && ((uVar14 & 4) != 0)) {
                  _write_multi_char(0x20,(int)pcVar16,local_234,&local_224);
                }
              }
            }
            else {
              if ('p' < (char)bVar12) {
                if (bVar12 == 0x73) {
LAB_0042c55e:
                  piVar11 = (int *)0x7fffffff;
                  if (local_22c != (int *)0xffffffff) {
                    piVar11 = local_22c;
                  }
                  piVar6 = *local_220;
                  local_220 = local_220 + 1;
                  piVar15 = piVar6;
                  if ((uVar14 & 0x810) == 0) {
                    if (piVar6 == (int *)0x0) {
                      piVar6 = (int *)PTR_DAT_00448280;
                      piVar15 = (int *)PTR_DAT_00448280;
                    }
                    for (; (piVar11 != (int *)0x0 &&
                           (piVar11 = (int *)((int)piVar11 + -1), *(char *)piVar6 != '\0'));
                        piVar6 = (int *)((int)piVar6 + 1)) {
                    }
                    local_228 = (char *)((int)piVar6 - (int)piVar15);
                  }
                  else {
                    if (piVar6 == (int *)0x0) {
                      piVar15 = (int *)PTR_DAT_00448284;
                    }
                    local_23c = 1;
                    for (piVar6 = piVar15;
                        (piVar11 != (int *)0x0 &&
                        (piVar11 = (int *)((int)piVar11 + -1), *(WCHAR *)piVar6 != L'\0'));
                        piVar6 = (int *)((int)piVar6 + 2)) {
                    }
                    local_228 = (char *)((int)piVar6 - (int)piVar15 >> 1);
                  }
                  goto LAB_0042c9fb;
                }
                if (bVar12 == 0x75) goto LAB_0042c71d;
                if (bVar12 != 0x78) goto LAB_0042c9fb;
                local_258 = 0x27;
LAB_0042c892:
                local_228 = (char *)0x10;
                if ((char)uVar14 < '\0') {
                  local_22f = (char)local_258 + 'Q';
                  local_230 = 0x30;
                  local_238 = 2;
                }
                goto LAB_0042c727;
              }
              if (bVar12 == 0x70) {
                local_22c = (int *)&DAT_00000008;
LAB_0042c872:
                local_258 = 7;
                goto LAB_0042c892;
              }
              if ((char)bVar12 < 'e') goto LAB_0042c9fb;
              if ((char)bVar12 < 'h') goto LAB_0042c4f6;
              if (bVar12 == 0x69) goto LAB_0042c714;
              if (bVar12 != 0x6e) {
                if (bVar12 != 0x6f) goto LAB_0042c9fb;
                local_228 = (char *)0x8;
                if ((char)uVar14 < '\0') {
                  uVar14 = uVar14 | 0x200;
                  local_21c = uVar14;
                }
                goto LAB_0042c727;
              }
              piVar11 = *local_220;
              local_220 = local_220 + 1;
              bVar17 = FUN_00427e6c();
              if (CONCAT31(extraout_var,bVar17) == 0) goto LAB_0042cbf5;
              if ((uVar14 & 0x20) == 0) {
                *piVar11 = local_224;
              }
              else {
                *(WCHAR *)piVar11 = (WCHAR)local_224;
              }
              local_250 = 1;
            }
            pbVar9 = local_214;
            iVar10 = local_224;
            if (local_254 != (int *)0x0) {
              FUN_00403c10(local_254);
              local_254 = (int *)0x0;
              pbVar9 = local_214;
              iVar10 = local_224;
            }
          }
          bVar12 = *pbVar9;
          local_24c = local_24c & 0xffffff00 | (uint)bVar12;
          pbVar3 = pbVar9;
        }
        goto LAB_0042cbd1;
      }
    }
  }
LAB_0042cbf5:
  piVar15 = __errno();
  *piVar15 = 0x16;
  FUN_00429bfe();
  bVar12 = extraout_DL;
LAB_0042cbd1:
  if (local_268 != '\0') {
    *(uint *)(local_26c + 0x70) = *(uint *)(local_26c + 0x70) & 0xfffffffd;
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,bVar12,in_stack_fffffd7c);
  return;
}



// Library Function - Single Match
//  _write_char
// 
// Library: Visual Studio 2019 Release

void __cdecl _write_char(byte param_1,FILE *param_2,int *param_3)

{
  int *piVar1;
  uint uVar2;
  
  if (((*(byte *)&param_2->_flag & 0x40) == 0) || (param_2->_base != (char *)0x0)) {
    piVar1 = &param_2->_cnt;
    *piVar1 = *piVar1 + -1;
    if (*piVar1 < 0) {
      uVar2 = FUN_0042bf5b((int)(char)param_1,param_2);
    }
    else {
      *param_2->_ptr = param_1;
      param_2->_ptr = param_2->_ptr + 1;
      uVar2 = (uint)param_1;
    }
    if (uVar2 == 0xffffffff) {
      *param_3 = -1;
      return;
    }
  }
  *param_3 = *param_3 + 1;
  return;
}



// Library Function - Single Match
//  _write_multi_char
// 
// Library: Visual Studio 2019 Release

void __cdecl _write_multi_char(byte param_1,int param_2,FILE *param_3,int *param_4)

{
  if (0 < param_2) {
    do {
      param_2 = param_2 + -1;
      _write_char(param_1,param_3,param_4);
      if (*param_4 == -1) {
        return;
      }
    } while (0 < param_2);
  }
  return;
}



void __cdecl FUN_0042cc9e(byte *param_1,int param_2,FILE *param_3,int *param_4,int *param_5)

{
  int iVar1;
  
  iVar1 = *param_5;
  if (((*(byte *)&param_3->_flag & 0x40) == 0) || (param_3->_base != (char *)0x0)) {
    *param_5 = 0;
    if (0 < param_2) {
      do {
        param_2 = param_2 + -1;
        _write_char(*param_1,param_3,param_4);
        param_1 = param_1 + 1;
        if (*param_4 == -1) {
          if (*param_5 != 0x2a) break;
          _write_char(0x3f,param_3,param_4);
        }
      } while (0 < param_2);
      if (*param_5 != 0) {
        return;
      }
    }
    *param_5 = iVar1;
  }
  else {
    *param_4 = *param_4 + param_2;
  }
  return;
}



undefined8 FUN_0042cd20(void)

{
  undefined4 extraout_ECX;
  uint extraout_EDX;
  float10 in_ST0;
  undefined8 uVar1;
  double dVar2;
  
  dVar2 = (double)in_ST0;
  FUN_00436b38(SUB84(dVar2,0),(uint)((ulonglong)dVar2 >> 0x20));
  uVar1 = FUN_0042cd3d(extraout_ECX,extraout_EDX,SUB84(dVar2,0),(uint)((ulonglong)dVar2 >> 0x20));
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined8 __fastcall FUN_0042cd3d(undefined4 param_1,uint param_2,int param_3,uint param_4)

{
  uint uVar1;
  uint uVar2;
  undefined4 uVar3;
  bool in_ZF;
  ushort in_FPUControlWord;
  ushort in_FPUStatusWord;
  undefined4 unaff_retaddr;
  uint uVar4;
  
  uVar4 = param_2 & 0xffff0000 | (uint)in_FPUControlWord;
  if (in_ZF) {
    if (((param_4 & 0xfffff) != 0) || (param_3 != 0)) {
      uVar1 = FUN_00436adc();
      goto LAB_0042cdbb;
    }
    uVar1 = param_4 & 0x80000000;
    if (uVar1 != 0) goto LAB_0042cdae;
  }
  else {
    uVar1 = param_4;
    if (in_FPUControlWord != 0x27f) {
      uVar1 = FUN_00436ac5(uVar4);
    }
    if (((uVar1 & 0x80000000) != 0) &&
       ((((uVar1 & 0x7ff00000) != 0 || ((uVar1 & 0xfffff) != 0)) || (param_3 != 0)))) {
LAB_0042cdae:
      uVar1 = 1;
LAB_0042cdbb:
      if (_DAT_00458444 == 0) {
        __startOneArgErrorHandling(&DAT_00448290,5,(ushort)uVar4,unaff_retaddr,param_3,param_4);
        return CONCAT44(uVar4,uVar1);
      }
      goto LAB_00436b4e;
    }
  }
  if (_DAT_00458444 == 0) {
    uVar2 = uVar1 & 0xffff0000 | uVar4 & 0xffff;
    if ((short)(uVar4 & 0xffff) != 0x27f) {
      if (((uVar4 & 0x20) != 0) &&
         (uVar2 = uVar1 & 0xffff0000 | (uint)in_FPUStatusWord, (in_FPUStatusWord & 0x20) != 0)) {
        uVar3 = 8;
        __startOneArgErrorHandling(&DAT_00448290,5,(ushort)uVar4,unaff_retaddr,param_3,param_4);
        return CONCAT44(uVar4,uVar3);
      }
      uVar2 = uVar2 & 0xffff0020;
    }
    return CONCAT44(uVar4,uVar2);
  }
LAB_00436b4e:
  return CONCAT44(uVar4,uVar1);
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// Library Function - Single Match
//  private: static void __cdecl type_info::_Type_info_dtor(class type_info *)
// 
// Library: Visual Studio 2012 Release

void __cdecl type_info::_Type_info_dtor(type_info *param_1)

{
  int *piVar1;
  int *piVar2;
  int *piVar3;
  
  __lock(0xe);
  piVar1 = DAT_004586fc;
  if (*(int *)(param_1 + 4) != 0) {
    piVar2 = (int *)&DAT_004586f8;
    do {
      piVar3 = piVar2;
      if (DAT_004586fc == (int *)0x0) goto LAB_0042ceb1;
      piVar2 = DAT_004586fc;
    } while (*DAT_004586fc != *(int *)(param_1 + 4));
    piVar3[1] = DAT_004586fc[1];
    FUN_00403c10(piVar1);
LAB_0042ceb1:
    FUN_00403c10(*(undefined4 *)(param_1 + 4));
    *(undefined4 *)(param_1 + 4) = 0;
  }
  FUN_0042ced4();
  return;
}



void FUN_0042ced4(void)

{
  FUN_00429e85(0xe);
  return;
}



// Library Function - Single Match
//  __cfltcvt
// 
// Libraries: Visual Studio 2005 Release, Visual Studio 2008 Release, Visual Studio 2010 Release,
// Visual Studio 2012 Release

errno_t __cdecl
__cfltcvt(double *arg,char *buffer,size_t sizeInBytes,int format,int precision,int caps)

{
  errno_t eVar1;
  
  eVar1 = __cfltcvt_l(arg,buffer,sizeInBytes,format,precision,caps,(_locale_t)0x0);
  return eVar1;
}



// Library Function - Single Match
//  __cfltcvt_l
// 
// Libraries: Visual Studio 2005 Release, Visual Studio 2008 Release, Visual Studio 2010 Release,
// Visual Studio 2012 Release

errno_t __cdecl
__cfltcvt_l(double *arg,char *buffer,size_t sizeInBytes,int format,int precision,int caps,
           _locale_t plocinfo)

{
  errno_t eVar1;
  
  if ((format == 0x65) || (format == 0x45)) {
    eVar1 = FUN_0042d44f((undefined4 *)arg,buffer,sizeInBytes,precision,caps,&plocinfo->locinfo);
  }
  else {
    if (format == 0x66) {
      eVar1 = FUN_0042d609((undefined4 *)arg,buffer,sizeInBytes,precision,&plocinfo->locinfo);
      return eVar1;
    }
    if ((format == 0x61) || (format == 0x41)) {
      eVar1 = FUN_0042cf84((uint *)arg,buffer,sizeInBytes,precision,caps,&plocinfo->locinfo);
    }
    else {
      eVar1 = FUN_0042d6ca((undefined4 *)arg,buffer,sizeInBytes,precision,caps,&plocinfo->locinfo);
    }
  }
  return eVar1;
}



int __cdecl
FUN_0042cf84(uint *param_1,undefined *param_2,uint param_3,uint param_4,int param_5,
            pthreadlocinfo *param_6)

{
  uint *puVar1;
  int *piVar2;
  uint uVar3;
  char *pcVar4;
  uint *puVar5;
  uint uVar6;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint uVar7;
  uint *puVar8;
  char *pcVar9;
  bool bVar10;
  ulonglong uVar11;
  undefined8 uVar12;
  int iVar13;
  int local_30 [2];
  int local_28;
  char local_24;
  uint local_1c;
  uint local_18;
  int local_14;
  uint *local_10;
  uint local_c;
  int local_8;
  
  local_c = 0x3ff;
  local_8 = 0x30;
  FUN_00427078(local_30,param_6);
  if ((int)param_4 < 0) {
    param_4 = 0;
  }
  if ((param_2 == (undefined *)0x0) || (param_3 == 0)) {
    piVar2 = __errno();
    iVar13 = 0x16;
  }
  else {
    *param_2 = 0;
    if (param_4 + 0xb < param_3) {
      local_18 = *param_1;
      if (((param_1[1] >> 0x14 & 0x7ff) == 0x7ff) && (true)) {
        uVar3 = 0xffffffff;
        if (param_3 != 0xffffffff) {
          uVar3 = param_3 - 2;
        }
        iVar13 = FUN_0042d2e0(param_1,param_2 + 2,uVar3,param_4,0);
        if (iVar13 == 0) {
          if (param_2[2] == '-') {
            *param_2 = 0x2d;
            param_2 = param_2 + 1;
          }
          *param_2 = 0x30;
          param_2[1] = ((param_5 == 0) - 1U & 0xe0) + 0x78;
          pcVar4 = _strrchr(param_2 + 2,0x65);
          if (pcVar4 != (char *)0x0) {
            *pcVar4 = ((param_5 == 0) - 1U & 0xe0) + 0x70;
            pcVar4[3] = '\0';
          }
          iVar13 = 0;
        }
        else {
          *param_2 = 0;
        }
        goto LAB_0042d2ca;
      }
      if ((param_1[1] & 0x80000000) != 0) {
        *param_2 = 0x2d;
        param_2 = param_2 + 1;
      }
      *param_2 = 0x30;
      param_2[1] = ((param_5 == 0) - 1U & 0xe0) + 0x78;
      iVar13 = (-(uint)(param_5 != 0) & 0xffffffe0) + 0x27;
      if ((param_1[1] & 0x7ff00000) == 0) {
        param_2[2] = 0x30;
        if ((*param_1 | param_1[1] & 0xfffff) == 0) {
          local_c = 0;
        }
        else {
          local_c = 0x3fe;
        }
      }
      else {
        param_2[2] = 0x31;
      }
      local_10 = (uint *)(param_2 + 3);
      puVar8 = (uint *)(param_2 + 4);
      if (param_4 == 0) {
        *(char *)local_10 = '\0';
      }
      else {
        *(char *)local_10 = ***(char ***)(local_30[0] + 0x84);
      }
      local_1c = param_1[1] & 0xfffff;
      local_14 = iVar13;
      if ((local_1c != 0) || (*param_1 != 0)) {
        param_2 = (undefined *)0xf0000;
        do {
          if ((int)param_4 < 1) break;
          uVar11 = __aullshr((byte)local_8,param_1[1] & (uint)param_2);
          uVar3 = (uint)(ushort)((short)uVar11 + 0x30);
          if (0x39 < uVar3) {
            uVar3 = uVar3 + iVar13;
          }
          *(char *)puVar8 = (char)uVar3;
          puVar8 = (uint *)((int)puVar8 + 1);
          param_2 = (undefined *)((uint)param_2 >> 4);
          local_8 = local_8 + -4;
          param_4 = param_4 - 1;
        } while (-1 < (short)local_8);
        if ((-1 < (short)local_8) &&
           (uVar11 = __aullshr((byte)local_8,param_1[1] & (uint)param_2), puVar1 = puVar8,
           8 < (ushort)uVar11)) {
          while( true ) {
            puVar5 = (uint *)((int)puVar1 + -1);
            if ((*(char *)puVar5 != 'f') && (*(char *)puVar5 != 'F')) break;
            *(char *)puVar5 = '0';
            puVar1 = puVar5;
          }
          if (puVar5 == local_10) {
            *(char *)((int)puVar1 + -2) = *(char *)((int)puVar1 + -2) + '\x01';
          }
          else if (*(char *)puVar5 == '9') {
            *(char *)puVar5 = (char)local_14 + ':';
          }
          else {
            *(char *)puVar5 = *(char *)puVar5 + '\x01';
          }
        }
      }
      if (0 < (int)param_4) {
        FUN_00427870(puVar8,0x30,param_4);
        puVar8 = (uint *)((int)puVar8 + param_4);
      }
      if (*(char *)local_10 == '\0') {
        puVar8 = local_10;
      }
      *(byte *)puVar8 = ((param_5 == 0) - 1U & 0xe0) + 0x70;
      uVar11 = __aullshr(0x34,param_1[1]);
      uVar3 = (uint)(uVar11 & 0x7ff);
      uVar6 = uVar3 - local_c;
      uVar3 = (uint)(uVar3 < local_c);
      uVar7 = -uVar3;
      if ((uVar3 != 0) || ((uVar7 == 0 || uVar3 != 0 && (false)))) {
        *(char *)((int)puVar8 + 1) = '-';
        bVar10 = uVar6 != 0;
        uVar6 = -uVar6;
        uVar7 = -(uVar7 + bVar10);
      }
      else {
        *(char *)((int)puVar8 + 1) = '+';
      }
      pcVar9 = (char *)((int)puVar8 + 2);
      *pcVar9 = '0';
      pcVar4 = pcVar9;
      if (-1 < (int)uVar7) {
        if (((int)uVar7 < 1) && (uVar6 < 1000)) {
LAB_0042d27b:
          if (((int)uVar7 < 0) || (((int)uVar7 < 1 && (uVar6 < 100)))) goto LAB_0042d29a;
        }
        else {
          uVar12 = __alldvrm(uVar6,uVar7,1000,0);
          local_1c = (uint)((ulonglong)uVar12 >> 0x20);
          *pcVar9 = (char)uVar12 + '0';
          pcVar4 = (char *)((int)puVar8 + 3);
          uVar6 = extraout_ECX;
          if (pcVar4 == pcVar9) goto LAB_0042d27b;
        }
        uVar12 = __alldvrm(uVar6,uVar7,100,0);
        local_1c = (uint)((ulonglong)uVar12 >> 0x20);
        *pcVar4 = (char)uVar12 + '0';
        pcVar4 = pcVar4 + 1;
        uVar6 = extraout_ECX_00;
      }
LAB_0042d29a:
      if ((pcVar4 != pcVar9) || ((-1 < (int)uVar7 && ((0 < (int)uVar7 || (9 < uVar6)))))) {
        uVar12 = __alldvrm(uVar6,uVar7,10,0);
        *pcVar4 = (char)uVar12 + '0';
        pcVar4 = pcVar4 + 1;
        uVar6 = extraout_ECX_01;
      }
      iVar13 = 0;
      *pcVar4 = (char)uVar6 + '0';
      pcVar4[1] = '\0';
      goto LAB_0042d2ca;
    }
    piVar2 = __errno();
    iVar13 = 0x22;
  }
  *piVar2 = iVar13;
  FUN_00429bfe();
LAB_0042d2ca:
  if (local_24 != '\0') {
    *(uint *)(local_28 + 0x70) = *(uint *)(local_28 + 0x70) & 0xfffffffd;
  }
  return iVar13;
}



void __cdecl
FUN_0042d2e0(undefined4 *param_1,undefined *param_2,uint param_3,int param_4,int param_5)

{
  FUN_0042d44f(param_1,param_2,param_3,param_4,param_5,(pthreadlocinfo *)0x0);
  return;
}



int __cdecl
FUN_0042d2fe(undefined *param_1,uint param_2,int param_3,int param_4,int *param_5,char param_6,
            pthreadlocinfo *param_7)

{
  code *pcVar1;
  int *piVar2;
  int iVar3;
  errno_t eVar4;
  int iVar5;
  undefined *puVar6;
  char *_Dst;
  int iVar7;
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_7);
  if ((param_1 == (undefined *)0x0) || (param_2 == 0)) {
    piVar2 = __errno();
    iVar7 = 0x16;
  }
  else {
    iVar7 = 0;
    iVar3 = param_3;
    if (param_3 < 1) {
      iVar3 = 0;
    }
    if (iVar3 + 9U < param_2) {
      if (param_6 != '\0') {
        __shift(param_1 + (*param_5 == 0x2d),(uint)(0 < param_3));
      }
      puVar6 = param_1;
      if (*param_5 == 0x2d) {
        *param_1 = 0x2d;
        puVar6 = param_1 + 1;
      }
      if (0 < param_3) {
        *puVar6 = puVar6[1];
        puVar6 = puVar6 + 1;
        *puVar6 = *(undefined *)**(undefined4 **)(local_14[0] + 0x84);
      }
      _Dst = puVar6 + (uint)(param_6 == '\0') + param_3;
      puVar6 = (undefined *)0xffffffff;
      if (param_2 != 0xffffffff) {
        puVar6 = param_1 + (param_2 - (int)_Dst);
      }
      eVar4 = _strcpy_s(_Dst,(rsize_t)puVar6,"e+000");
      if (eVar4 != 0) {
        __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
        pcVar1 = (code *)swi(3);
        iVar3 = (*pcVar1)();
        return iVar3;
      }
      if (param_4 != 0) {
        *_Dst = 'E';
      }
      if (*(char *)param_5[3] != '0') {
        iVar3 = param_5[1] + -1;
        if (iVar3 < 0) {
          iVar3 = -iVar3;
          _Dst[1] = '-';
        }
        if (99 < iVar3) {
          iVar5 = iVar3 / 100;
          iVar3 = iVar3 % 100;
          _Dst[2] = _Dst[2] + (char)iVar5;
        }
        if (9 < iVar3) {
          iVar5 = iVar3 / 10;
          iVar3 = iVar3 % 10;
          _Dst[3] = _Dst[3] + (char)iVar5;
        }
        _Dst[4] = _Dst[4] + (char)iVar3;
      }
      if (((DAT_004591ec & 1) != 0) && (_Dst[2] == '0')) {
        FID_conflict__memcpy(_Dst + 2,_Dst + 3,3);
      }
      goto LAB_0042d42f;
    }
    piVar2 = __errno();
    iVar7 = 0x22;
  }
  *piVar2 = iVar7;
  FUN_00429bfe();
LAB_0042d42f:
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return iVar7;
}



void __cdecl
FUN_0042d44f(undefined4 *param_1,undefined *param_2,uint param_3,int param_4,int param_5,
            pthreadlocinfo *param_6)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined uVar4;
  undefined uVar5;
  int in_stack_ffffffd0;
  char local_20 [24];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  FUN_00436db4(*param_1,param_1[1],(int *)&stack0xffffffd0,local_20,0x16);
  if (param_2 == (undefined *)0x0) {
    piVar1 = __errno();
    uVar5 = (undefined)in_stack_ffffffd0;
  }
  else {
    if (param_3 != 0) {
      uVar3 = 0xffffffff;
      if (param_3 != 0xffffffff) {
        uVar3 = (param_3 - (in_stack_ffffffd0 == 0x2d)) - (uint)(0 < param_4);
      }
      iVar2 = FUN_00436c3c(param_2 + (uint)(0 < param_4) + (uint)(in_stack_ffffffd0 == 0x2d),uVar3,
                           param_4 + 1,(int)&stack0xffffffd0);
      uVar5 = (undefined)in_stack_ffffffd0;
      if (iVar2 == 0) {
        FUN_0042d2fe(param_2,param_3,param_4,param_5,(int *)&stack0xffffffd0,'\0',param_6);
        uVar4 = extraout_DL_01;
      }
      else {
        *param_2 = 0;
        uVar4 = extraout_DL_00;
      }
      goto LAB_0042d50c;
    }
    piVar1 = __errno();
    uVar5 = (undefined)in_stack_ffffffd0;
  }
  *piVar1 = 0x16;
  FUN_00429bfe();
  uVar4 = extraout_DL;
LAB_0042d50c:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar4,uVar5);
  return;
}



undefined4 __cdecl
FUN_0042d51d(char *param_1,int param_2,uint param_3,int *param_4,char param_5,
            pthreadlocinfo *param_6)

{
  int iVar1;
  int *piVar2;
  undefined4 uVar3;
  char *pcVar4;
  int local_18 [2];
  int local_10;
  char local_c;
  uint local_8;
  
  local_8 = param_4[1] - 1;
  FUN_00427078(local_18,param_6);
  if ((param_1 == (char *)0x0) || (param_2 == 0)) {
    piVar2 = __errno();
    uVar3 = 0x16;
    *piVar2 = 0x16;
    FUN_00429bfe();
  }
  else {
    uVar3 = 0;
    if ((param_5 != '\0') && (local_8 == param_3)) {
      *(undefined2 *)(param_1 + (*param_4 == 0x2d) + local_8) = 0x30;
    }
    if (*param_4 == 0x2d) {
      *param_1 = '-';
      param_1 = param_1 + 1;
    }
    if (param_4[1] < 1) {
      __shift(param_1,1);
      *param_1 = '0';
      pcVar4 = param_1 + 1;
    }
    else {
      pcVar4 = param_1 + param_4[1];
    }
    if (0 < (int)param_3) {
      __shift(pcVar4,1);
      *pcVar4 = ***(char ***)(local_18[0] + 0x84);
      iVar1 = param_4[1];
      if (iVar1 < 0) {
        if (param_5 == '\0') {
          if (SBORROW4(param_3,-iVar1) == (int)(param_3 + iVar1) < 0) {
            param_3 = -iVar1;
          }
        }
        else {
          param_3 = -iVar1;
        }
        __shift(pcVar4 + 1,param_3);
        FUN_00427870((uint *)(pcVar4 + 1),0x30,param_3);
      }
    }
  }
  if (local_c != '\0') {
    *(uint *)(local_10 + 0x70) = *(uint *)(local_10 + 0x70) & 0xfffffffd;
  }
  return uVar3;
}



void __cdecl
FUN_0042d609(undefined4 *param_1,char *param_2,int param_3,uint param_4,pthreadlocinfo *param_5)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined uVar4;
  undefined uVar5;
  int in_stack_ffffffd0;
  int local_2c;
  char local_20 [24];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  FUN_00436db4(*param_1,param_1[1],(int *)&stack0xffffffd0,local_20,0x16);
  if (param_2 == (char *)0x0) {
    piVar1 = __errno();
    uVar5 = (undefined)in_stack_ffffffd0;
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar4 = extraout_DL;
  }
  else if (param_3 == 0) {
    piVar1 = __errno();
    uVar5 = (undefined)in_stack_ffffffd0;
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar4 = extraout_DL_00;
  }
  else {
    uVar3 = 0xffffffff;
    if (param_3 != -1) {
      uVar3 = param_3 - (uint)(in_stack_ffffffd0 == 0x2d);
    }
    iVar2 = FUN_00436c3c(param_2 + (in_stack_ffffffd0 == 0x2d),uVar3,local_2c + param_4,
                         (int)&stack0xffffffd0);
    uVar5 = (undefined)in_stack_ffffffd0;
    if (iVar2 == 0) {
      FUN_0042d51d(param_2,param_3,param_4,(int *)&stack0xffffffd0,'\0',param_5);
      uVar4 = extraout_DL_02;
    }
    else {
      *param_2 = '\0';
      uVar4 = extraout_DL_01;
    }
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar4,uVar5);
  return;
}



void __cdecl
FUN_0042d6ca(undefined4 *param_1,char *param_2,uint param_3,uint param_4,int param_5,
            pthreadlocinfo *param_6)

{
  char *pcVar1;
  int *piVar2;
  uint uVar3;
  int iVar4;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined uVar5;
  char *pcVar6;
  bool bVar7;
  undefined uVar8;
  int in_stack_ffffffcc;
  int local_30;
  char local_20 [24];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  FUN_00436db4(*param_1,param_1[1],(int *)&stack0xffffffcc,local_20,0x16);
  if (param_2 == (char *)0x0) {
    piVar2 = __errno();
    uVar8 = (undefined)in_stack_ffffffcc;
    *piVar2 = 0x16;
    FUN_00429bfe();
    uVar5 = extraout_DL;
  }
  else if (param_3 == 0) {
    piVar2 = __errno();
    uVar8 = (undefined)in_stack_ffffffcc;
    *piVar2 = 0x16;
    FUN_00429bfe();
    uVar5 = extraout_DL_00;
  }
  else {
    bVar7 = in_stack_ffffffcc == 0x2d;
    uVar3 = 0xffffffff;
    if (param_3 != 0xffffffff) {
      uVar3 = param_3 - bVar7;
    }
    iVar4 = FUN_00436c3c(param_2 + bVar7,uVar3,param_4,(int)&stack0xffffffcc);
    uVar8 = (undefined)in_stack_ffffffcc;
    if (iVar4 == 0) {
      if ((local_30 + -1 < -4) || ((int)param_4 <= local_30 + -1)) {
        FUN_0042d2fe(param_2,param_3,param_4,param_5,(int *)&stack0xffffffcc,'\x01',param_6);
        uVar5 = extraout_DL_03;
      }
      else {
        pcVar1 = param_2 + bVar7;
        if (false) {
          do {
            pcVar6 = pcVar1;
            pcVar1 = pcVar6 + 1;
          } while (*pcVar6 != '\0');
          pcVar6[-1] = '\0';
        }
        FUN_0042d51d(param_2,param_3,param_4,(int *)&stack0xffffffcc,'\x01',param_6);
        uVar5 = extraout_DL_02;
      }
    }
    else {
      *param_2 = '\0';
      uVar5 = extraout_DL_01;
    }
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar5,uVar8);
  return;
}



void __cdecl FUN_0042d7c9(char *param_1)

{
  FUN_0042d7da(param_1,(pthreadlocinfo *)0x0);
  return;
}



void __cdecl FUN_0042d7da(char *param_1,pthreadlocinfo *param_2)

{
  char cVar1;
  char *pcVar2;
  int local_14 [2];
  int local_c;
  char local_8;
  char *pcVar3;
  
  FUN_00427078(local_14,param_2);
  cVar1 = *param_1;
  if (cVar1 != '\0') {
    do {
      if (cVar1 == ***(char ***)(local_14[0] + 0x84)) break;
      param_1 = param_1 + 1;
      cVar1 = *param_1;
    } while (cVar1 != '\0');
  }
  if (*param_1 != '\0') {
    do {
      param_1 = param_1 + 1;
      cVar1 = *param_1;
      pcVar2 = param_1;
      if ((cVar1 == '\0') || (cVar1 == 'e')) break;
    } while (cVar1 != 'E');
    do {
      pcVar3 = pcVar2;
      pcVar2 = pcVar3 + -1;
    } while (*pcVar2 == '0');
    if (*pcVar2 == ***(char ***)(local_14[0] + 0x84)) {
      pcVar2 = pcVar3 + -2;
    }
    do {
      cVar1 = *param_1;
      pcVar2 = pcVar2 + 1;
      param_1 = param_1 + 1;
      *pcVar2 = cVar1;
    } while (cVar1 != '\0');
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



void __cdecl FUN_0042d85a(uint param_1,uint *param_2,char *param_3)

{
  FUN_0042d872(param_1,param_2,param_3,(pthreadlocinfo *)0x0);
  return;
}



void __cdecl FUN_0042d872(uint param_1,uint *param_2,char *param_3,pthreadlocinfo *param_4)

{
  uint local_c;
  uint local_8;
  
  if (param_1 == 0) {
    FUN_0042ff67(&param_1,param_3,param_4);
    *param_2 = param_1;
  }
  else {
    FUN_0042fed9(&local_c,param_3,param_4);
    *param_2 = local_c;
    param_2[1] = local_8;
  }
  return;
}



void __cdecl FUN_0042d8b4(byte *param_1)

{
  FUN_0042d8c5(param_1,(pthreadlocinfo *)0x0);
  return;
}



void __cdecl FUN_0042d8c5(byte *param_1,pthreadlocinfo *param_2)

{
  byte bVar1;
  int iVar2;
  byte bVar3;
  bool bVar4;
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_2);
  iVar2 = _tolower((int)(char)*param_1);
  bVar4 = iVar2 == 0x65;
  while (!bVar4) {
    param_1 = param_1 + 1;
    iVar2 = _isdigit((uint)*param_1);
    bVar4 = iVar2 == 0;
  }
  iVar2 = _tolower((int)(char)*param_1);
  if (iVar2 == 0x78) {
    param_1 = param_1 + 2;
  }
  bVar3 = *param_1;
  *param_1 = ***(byte ***)(local_14[0] + 0x84);
  do {
    param_1 = param_1 + 1;
    bVar1 = *param_1;
    *param_1 = bVar3;
    bVar3 = bVar1;
  } while (*param_1 != 0);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



// Library Function - Single Match
//  __positive
// 
// Library: Visual Studio 2012 Release

int __cdecl __positive(double *arg)

{
  if (0.0 < *arg != (*arg == 0.0)) {
    return 1;
  }
  return 0;
}



// Library Function - Single Match
//  __shift
// 
// Library: Visual Studio 2012 Release

void __cdecl __shift(char *param_1,int param_2)

{
  size_t sVar1;
  
  if (param_2 != 0) {
    sVar1 = _strlen(param_1);
    FID_conflict__memcpy(param_1 + param_2,param_1,sVar1 + 1);
  }
  return;
}



// Library Function - Single Match
//  __setdefaultprecision
// 
// Library: Visual Studio 2012 Release

void __setdefaultprecision(void)

{
  code *pcVar1;
  errno_t eVar2;
  
  eVar2 = __controlfp_s((uint *)0x0,0x10000,0x30000);
  if (eVar2 == 0) {
    return;
  }
  __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



void FUN_0042d9a2(void)

{
  PVOID pvVar1;
  uint uVar2;
  
  uVar2 = 0;
  do {
    pvVar1 = EncodePointer(*(PVOID *)((int)&PTR_FUN_004482a0 + uVar2));
    *(PVOID *)((int)&PTR_FUN_004482a0 + uVar2) = pvVar1;
    uVar2 = uVar2 + 4;
  } while (uVar2 < 0x28);
  return;
}



void __cdecl FUN_0042d9c1(int *param_1)

{
  int *piVar1;
  int iVar2;
  int **ppiVar3;
  
  LOCK();
  *param_1 = *param_1 + 1;
  piVar1 = (int *)param_1[0x1e];
  if (piVar1 != (int *)0x0) {
    LOCK();
    *piVar1 = *piVar1 + 1;
  }
  piVar1 = (int *)param_1[0x20];
  if (piVar1 != (int *)0x0) {
    LOCK();
    *piVar1 = *piVar1 + 1;
  }
  piVar1 = (int *)param_1[0x1f];
  if (piVar1 != (int *)0x0) {
    LOCK();
    *piVar1 = *piVar1 + 1;
  }
  piVar1 = (int *)param_1[0x22];
  if (piVar1 != (int *)0x0) {
    LOCK();
    *piVar1 = *piVar1 + 1;
  }
  ppiVar3 = (int **)(param_1 + 7);
  iVar2 = 6;
  do {
    if ((ppiVar3[-2] != (int *)&DAT_004487f0) && (piVar1 = *ppiVar3, piVar1 != (int *)0x0)) {
      LOCK();
      *piVar1 = *piVar1 + 1;
    }
    if ((ppiVar3[-3] != (int *)0x0) && (piVar1 = ppiVar3[-1], piVar1 != (int *)0x0)) {
      LOCK();
      *piVar1 = *piVar1 + 1;
    }
    ppiVar3 = ppiVar3 + 4;
    iVar2 = iVar2 + -1;
  } while (iVar2 != 0);
  LOCK();
  *(int *)(param_1[0x27] + 0xb0) = *(int *)(param_1[0x27] + 0xb0) + 1;
  return;
}



void __cdecl FUN_0042da56(int param_1)

{
  int *piVar1;
  undefined **ppuVar2;
  int iVar3;
  undefined4 *puVar4;
  int **ppiVar5;
  
  iVar3 = param_1;
  if ((((*(undefined ***)(param_1 + 0x84) != (undefined **)0x0) &&
       (*(undefined ***)(param_1 + 0x84) != &PTR_DAT_00447de8)) &&
      (*(int **)(param_1 + 0x78) != (int *)0x0)) && (**(int **)(param_1 + 0x78) == 0)) {
    piVar1 = *(int **)(param_1 + 0x80);
    if ((piVar1 != (int *)0x0) && (*piVar1 == 0)) {
      FUN_00403c10(piVar1);
      FID_conflict____acrt_locale_free_monetary(*(int *)(param_1 + 0x84));
    }
    piVar1 = *(int **)(param_1 + 0x7c);
    if ((piVar1 != (int *)0x0) && (*piVar1 == 0)) {
      FUN_00403c10(piVar1);
      FID_conflict____free_lconv_num(*(int **)(param_1 + 0x84));
    }
    FUN_00403c10(*(undefined4 *)(param_1 + 0x78));
    FUN_00403c10(*(undefined4 *)(param_1 + 0x84));
  }
  if ((*(int **)(param_1 + 0x88) != (int *)0x0) && (**(int **)(param_1 + 0x88) == 0)) {
    FUN_00403c10(*(int *)(param_1 + 0x8c) + -0xfe);
    FUN_00403c10(*(int *)(param_1 + 0x94) + -0x80);
    FUN_00403c10(*(int *)(param_1 + 0x98) + -0x80);
    FUN_00403c10(*(undefined4 *)(param_1 + 0x88));
  }
  ppuVar2 = *(undefined ***)(param_1 + 0x9c);
  if ((ppuVar2 != &PTR_DAT_004487f8) && (ppuVar2[0x2c] == (undefined *)0x0)) {
    ___free_lc_time(ppuVar2);
    FUN_00403c10(*(undefined4 *)(param_1 + 0x9c));
  }
  puVar4 = (undefined4 *)(param_1 + 0xa0);
  param_1 = 6;
  ppiVar5 = (int **)(iVar3 + 0x1c);
  do {
    if (((ppiVar5[-2] != (int *)&DAT_004487f0) && (piVar1 = *ppiVar5, piVar1 != (int *)0x0)) &&
       (*piVar1 == 0)) {
      FUN_00403c10(piVar1);
      FUN_00403c10(*puVar4);
    }
    if (((ppiVar5[-3] != (int *)0x0) && (piVar1 = ppiVar5[-1], piVar1 != (int *)0x0)) &&
       (*piVar1 == 0)) {
      FUN_00403c10(piVar1);
    }
    puVar4 = puVar4 + 1;
    ppiVar5 = ppiVar5 + 4;
    param_1 = param_1 + -1;
  } while (param_1 != 0);
  FUN_00403c10(iVar3);
  return;
}



int * __cdecl FUN_0042dbb0(int *param_1)

{
  int *piVar1;
  int **ppiVar2;
  int iVar3;
  
  if (param_1 != (int *)0x0) {
    LOCK();
    *param_1 = *param_1 + -1;
    piVar1 = (int *)param_1[0x1e];
    if (piVar1 != (int *)0x0) {
      LOCK();
      *piVar1 = *piVar1 + -1;
    }
    piVar1 = (int *)param_1[0x20];
    if (piVar1 != (int *)0x0) {
      LOCK();
      *piVar1 = *piVar1 + -1;
    }
    piVar1 = (int *)param_1[0x1f];
    if (piVar1 != (int *)0x0) {
      LOCK();
      *piVar1 = *piVar1 + -1;
    }
    piVar1 = (int *)param_1[0x22];
    if (piVar1 != (int *)0x0) {
      LOCK();
      *piVar1 = *piVar1 + -1;
    }
    ppiVar2 = (int **)(param_1 + 7);
    iVar3 = 6;
    do {
      if ((ppiVar2[-2] != (int *)&DAT_004487f0) && (piVar1 = *ppiVar2, piVar1 != (int *)0x0)) {
        LOCK();
        *piVar1 = *piVar1 + -1;
      }
      if ((ppiVar2[-3] != (int *)0x0) && (piVar1 = ppiVar2[-1], piVar1 != (int *)0x0)) {
        LOCK();
        *piVar1 = *piVar1 + -1;
      }
      ppiVar2 = ppiVar2 + 4;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
    LOCK();
    *(int *)(param_1[0x27] + 0xb0) = *(int *)(param_1[0x27] + 0xb0) + -1;
  }
  return param_1;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

pthreadlocinfo FUN_0042dc50(void)

{
  _ptiddata p_Var1;
  pthreadlocinfo ptVar2;
  
  p_Var1 = __getptd();
  if (((p_Var1->_ownlocale & DAT_00448a20) == 0) || (p_Var1->ptlocinfo == (pthreadlocinfo)0x0)) {
    __lock(0xc);
    ptVar2 = (pthreadlocinfo)
             __updatetlocinfoEx_nolock((int **)&p_Var1->ptlocinfo,(int *)PTR_DAT_0044895c);
    FUN_0042dcc7();
  }
  else {
    p_Var1 = __getptd();
    ptVar2 = p_Var1->ptlocinfo;
  }
  if (ptVar2 == (pthreadlocinfo)0x0) {
    __amsg_exit(0x20);
  }
  return ptVar2;
}



void FUN_0042dcc7(void)

{
  FUN_00429e85(0xc);
  return;
}



// Library Function - Single Match
//  __updatetlocinfoEx_nolock
// 
// Libraries: Visual Studio 2010 Release, Visual Studio 2012 Release, Visual Studio 2019 Release

int * __cdecl __updatetlocinfoEx_nolock(int **param_1,int *param_2)

{
  int *piVar1;
  
  if ((param_2 == (int *)0x0) || (param_1 == (int **)0x0)) {
    param_2 = (int *)0x0;
  }
  else {
    piVar1 = *param_1;
    if (piVar1 != param_2) {
      *param_1 = param_2;
      FUN_0042d9c1(param_2);
      if (((piVar1 != (int *)0x0) && (FUN_0042dbb0(piVar1), *piVar1 == 0)) &&
         (piVar1 != (int *)&DAT_00448960)) {
        FUN_0042da56((int)piVar1);
      }
    }
  }
  return param_2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___initmbctable
// 
// Library: Visual Studio 2012 Release

undefined4 ___initmbctable(void)

{
  if (_DAT_004592bc == 0) {
    FUN_0042e078(0xfffffffd);
    _DAT_004592bc = 1;
  }
  return 0;
}



// Library Function - Single Match
//  wchar_t const * __cdecl CPtoLocaleName(int)
// 
// Library: Visual Studio 2012 Release

wchar_t * __cdecl CPtoLocaleName(int param_1)

{
  if (param_1 == 0x3a4) {
    return (wchar_t *)L"ja-JP";
  }
  if (param_1 == 0x3a8) {
    return (wchar_t *)L"zh-CN";
  }
  if (param_1 == 0x3b5) {
    return (wchar_t *)L"ko-KR";
  }
  if (param_1 != 0x3b6) {
    return (wchar_t *)0x0;
  }
  return (wchar_t *)L"zh-TW";
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

UINT __cdecl FUN_0042dd73(UINT param_1)

{
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,(pthreadlocinfo *)0x0);
  _DAT_00458718 = 0;
  if (param_1 == 0xfffffffe) {
    _DAT_00458718 = 1;
    param_1 = GetOEMCP();
  }
  else if (param_1 == 0xfffffffd) {
    _DAT_00458718 = 1;
    param_1 = GetACP();
  }
  else if (param_1 == 0xfffffffc) {
    _DAT_00458718 = 1;
    param_1 = *(UINT *)(local_14[0] + 4);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return param_1;
}



void __cdecl FUN_0042dde1(int param_1)

{
  int iVar1;
  undefined *puVar2;
  uint *puVar3;
  
  puVar3 = (uint *)(param_1 + 0x18);
  FUN_00427870(puVar3,0,0x101);
  *(undefined4 *)(param_1 + 4) = 0;
  *(undefined4 *)(param_1 + 8) = 0;
  *(undefined4 *)(param_1 + 0x21c) = 0;
  iVar1 = 0x101;
  *(undefined4 *)(param_1 + 0xc) = 0;
  *(undefined4 *)(param_1 + 0x10) = 0;
  *(undefined4 *)(param_1 + 0x14) = 0;
  do {
    *(undefined *)puVar3 = *(undefined *)(((int)&DAT_004484d0 - param_1) + (int)puVar3);
    puVar3 = (uint *)((int)puVar3 + 1);
    iVar1 = iVar1 + -1;
  } while (iVar1 != 0);
  puVar2 = (undefined *)(param_1 + 0x119);
  iVar1 = 0x100;
  do {
    *puVar2 = puVar2[(int)&DAT_004484d0 - param_1];
    puVar2 = puVar2 + 1;
    iVar1 = iVar1 + -1;
  } while (iVar1 != 0);
  return;
}



// Library Function - Single Match
//  void __cdecl setSBUpLow(struct __crt_multibyte_data *)
// 
// Library: Visual Studio 2015 Release

void __cdecl setSBUpLow(__crt_multibyte_data *param_1)

{
  byte bVar1;
  __crt_multibyte_data _Var2;
  BOOL BVar3;
  uint uVar4;
  BYTE *pBVar5;
  char extraout_DL;
  char cVar6;
  __crt_multibyte_data *p_Var7;
  int in_stack_fffffadc;
  _cpinfo local_51c;
  WORD local_508 [256];
  WCHAR local_308 [128];
  WCHAR local_208 [128];
  CHAR local_108 [256];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  BVar3 = GetCPInfo(*(UINT *)(param_1 + 4),&local_51c);
  if (BVar3 == 0) {
    uVar4 = 0;
    in_stack_fffffadc = -0x61 - (int)(param_1 + 0x119);
    do {
      p_Var7 = param_1 + uVar4 + 0x119;
      if (p_Var7 + in_stack_fffffadc + 0x20 < (__crt_multibyte_data *)0x1a) {
        param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x10);
        _Var2 = (__crt_multibyte_data)((char)uVar4 + ' ');
LAB_0042dfaa:
        *p_Var7 = _Var2;
      }
      else {
        if (p_Var7 + in_stack_fffffadc < (__crt_multibyte_data *)0x1a) {
          param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x20);
          _Var2 = (__crt_multibyte_data)((char)uVar4 + -0x20);
          goto LAB_0042dfaa;
        }
        *p_Var7 = (__crt_multibyte_data)0x0;
      }
      cVar6 = (char)param_1 + '\x19';
      uVar4 = uVar4 + 1;
    } while (uVar4 < 0x100);
  }
  else {
    uVar4 = 0;
    do {
      local_108[uVar4] = (CHAR)uVar4;
      uVar4 = uVar4 + 1;
    } while (uVar4 < 0x100);
    pBVar5 = local_51c.LeadByte;
    local_108[0] = ' ';
    while (local_51c.LeadByte[0] != 0) {
      bVar1 = pBVar5[1];
      for (uVar4 = (uint)local_51c.LeadByte[0]; (uVar4 <= bVar1 && (uVar4 < 0x100));
          uVar4 = uVar4 + 1) {
        local_108[uVar4] = ' ';
      }
      pBVar5 = pBVar5 + 2;
      local_51c.LeadByte[0] = *pBVar5;
    }
    FUN_00437570((pthreadlocinfo *)0x0,1,local_108,0x100,local_508,*(UINT *)(param_1 + 4),0);
    FUN_0042e60f((pthreadlocinfo *)0x0,*(wchar_t **)(param_1 + 0x21c),0x100,local_108,0x100,
                 local_208,0x100,*(UINT *)(param_1 + 4),0);
    FUN_0042e60f((pthreadlocinfo *)0x0,*(wchar_t **)(param_1 + 0x21c),0x200,local_108,0x100,
                 local_308,0x100,*(UINT *)(param_1 + 4),0);
    uVar4 = 0;
    do {
      if ((local_508[uVar4] & 1) == 0) {
        if ((local_508[uVar4] & 2) != 0) {
          param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x20);
          _Var2 = *(__crt_multibyte_data *)((int)local_308 + uVar4);
          goto LAB_0042df51;
        }
        param_1[uVar4 + 0x119] = (__crt_multibyte_data)0x0;
      }
      else {
        param_1[uVar4 + 0x19] = (__crt_multibyte_data)((byte)param_1[uVar4 + 0x19] | 0x10);
        _Var2 = *(__crt_multibyte_data *)((int)local_208 + uVar4);
LAB_0042df51:
        param_1[uVar4 + 0x119] = _Var2;
      }
      uVar4 = uVar4 + 1;
      cVar6 = extraout_DL;
    } while (uVar4 < 0x100);
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,cVar6,(char)in_stack_fffffadc);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

pthreadmbcinfo FUN_0042dfd2(void)

{
  int iVar1;
  _ptiddata p_Var2;
  pthreadmbcinfo ptVar3;
  
  p_Var2 = __getptd();
  if (((p_Var2->_ownlocale & DAT_00448a20) == 0) || (p_Var2->ptlocinfo == (pthreadlocinfo)0x0)) {
    __lock(0xd);
    ptVar3 = p_Var2->ptmbcinfo;
    if (ptVar3 != (pthreadmbcinfo)PTR_DAT_004486f4) {
      if (ptVar3 != (pthreadmbcinfo)0x0) {
        LOCK();
        iVar1 = ptVar3->refcount + -1;
        ptVar3->refcount = iVar1;
        if ((iVar1 == 0) && (ptVar3 != (pthreadmbcinfo)&DAT_004484d0)) {
          FUN_00403c10(ptVar3);
        }
      }
      p_Var2->ptmbcinfo = (pthreadmbcinfo)PTR_DAT_004486f4;
      ptVar3 = (pthreadmbcinfo)PTR_DAT_004486f4;
      LOCK();
      *(int *)PTR_DAT_004486f4 = *(int *)PTR_DAT_004486f4 + 1;
    }
    FUN_0042e06f();
  }
  else {
    ptVar3 = p_Var2->ptmbcinfo;
  }
  if (ptVar3 == (pthreadmbcinfo)0x0) {
    __amsg_exit(0x20);
  }
  return ptVar3;
}



void FUN_0042e06f(void)

{
  FUN_00429e85(0xd);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int __cdecl FUN_0042e078(UINT param_1)

{
  _ptiddata p_Var1;
  UINT UVar2;
  pthreadmbcinfo ptVar3;
  int *piVar4;
  int iVar5;
  pthreadmbcinfo ptVar6;
  int iVar7;
  int iVar8;
  pthreadmbcinfo ptVar9;
  
  iVar8 = -1;
  p_Var1 = __getptd();
  FUN_0042dfd2();
  ptVar3 = p_Var1->ptmbcinfo;
  UVar2 = FUN_0042dd73(param_1);
  if (UVar2 == ptVar3->mbcodepage) {
    iVar8 = 0;
  }
  else {
    ptVar3 = (pthreadmbcinfo)FUN_00403c30(0x220);
    if (ptVar3 != (pthreadmbcinfo)0x0) {
      ptVar6 = p_Var1->ptmbcinfo;
      ptVar9 = ptVar3;
      for (iVar8 = 0x88; iVar8 != 0; iVar8 = iVar8 + -1) {
        ptVar9->refcount = ptVar6->refcount;
        ptVar6 = (pthreadmbcinfo)&ptVar6->mbcodepage;
        ptVar9 = (pthreadmbcinfo)&ptVar9->mbcodepage;
      }
      iVar7 = 0;
      ptVar3->refcount = 0;
      iVar8 = FUN_0042e220(UVar2,(__crt_multibyte_data *)ptVar3);
      if (iVar8 == 0) {
        LOCK();
        iVar5 = p_Var1->ptmbcinfo->refcount + -1;
        p_Var1->ptmbcinfo->refcount = iVar5;
        if ((iVar5 == 0) && (p_Var1->ptmbcinfo != (pthreadmbcinfo)&DAT_004484d0)) {
          FUN_00403c10(p_Var1->ptmbcinfo);
        }
        p_Var1->ptmbcinfo = ptVar3;
        LOCK();
        ptVar3->refcount = ptVar3->refcount + 1;
        if (((*(byte *)&p_Var1->_ownlocale & 2) == 0) && (((byte)DAT_00448a20 & 1) == 0)) {
          __lock(0xd);
          _DAT_00458700 = ptVar3->mbcodepage;
          _DAT_00458704 = ptVar3->ismbcodepage;
          _DAT_00458714 = ptVar3->mblocalename;
          for (iVar5 = 0; iVar5 < 5; iVar5 = iVar5 + 1) {
            (&DAT_00458708)[iVar5] = ptVar3->mbulinfo[iVar5];
          }
          for (iVar5 = 0; iVar5 < 0x101; iVar5 = iVar5 + 1) {
            (&DAT_004482c8)[iVar5] = ptVar3->mbctype[iVar5];
          }
          for (; iVar7 < 0x100; iVar7 = iVar7 + 1) {
            (&DAT_004483d0)[iVar7] = ptVar3->mbcasemap[iVar7];
          }
          LOCK();
          iVar7 = *(int *)PTR_DAT_004486f4;
          *(int *)PTR_DAT_004486f4 = iVar7 + -1;
          if ((iVar7 + -1 == 0) && ((undefined4 *)PTR_DAT_004486f4 != &DAT_004484d0)) {
            FUN_00403c10(PTR_DAT_004486f4);
          }
          LOCK();
          PTR_DAT_004486f4 = (undefined *)ptVar3;
          ptVar3->refcount = ptVar3->refcount + 1;
          FUN_0042e1ea();
        }
      }
      else if (iVar8 == -1) {
        if (ptVar3 != (pthreadmbcinfo)&DAT_004484d0) {
          FUN_00403c10(ptVar3);
        }
        piVar4 = __errno();
        *piVar4 = 0x16;
      }
    }
  }
  return iVar8;
}



void FUN_0042e1ea(void)

{
  FUN_00429e85(0xd);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_0042e220(UINT param_1,__crt_multibyte_data *param_2)

{
  byte bVar1;
  undefined2 uVar2;
  UINT CodePage;
  uint uVar3;
  BOOL BVar4;
  BYTE *pBVar5;
  __crt_multibyte_data *p_Var6;
  wchar_t *pwVar7;
  byte *pbVar8;
  int iVar9;
  byte *pbVar10;
  undefined2 *puVar11;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined extraout_DL_04;
  undefined uVar12;
  undefined2 *puVar13;
  uint uVar14;
  undefined uVar15;
  int in_stack_ffffffdc;
  int local_20;
  _cpinfo local_1c;
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  CodePage = FUN_0042dd73(param_1);
  uVar15 = (undefined)in_stack_ffffffdc;
  if (CodePage != 0) {
    uVar14 = 0;
    uVar3 = 0;
    local_20 = 0;
LAB_0042e25c:
    if (*(UINT *)((int)&DAT_004486f8 + uVar3) != CodePage) goto code_r0x0042e268;
    FUN_00427870((uint *)(param_2 + 0x18),0,0x101);
    in_stack_ffffffdc = local_20 * 0x30;
    pbVar8 = &DAT_00448708 + in_stack_ffffffdc;
    do {
      bVar1 = *pbVar8;
      pbVar10 = pbVar8;
      while ((bVar1 != 0 && (bVar1 = pbVar10[1], bVar1 != 0))) {
        for (uVar3 = (uint)*pbVar10; (uVar3 <= bVar1 && (uVar3 < 0x100)); uVar3 = uVar3 + 1) {
          param_2[uVar3 + 0x19] =
               (__crt_multibyte_data)((byte)param_2[uVar3 + 0x19] | (&DAT_004486f0)[uVar14]);
          bVar1 = pbVar10[1];
        }
        pbVar10 = pbVar10 + 2;
        bVar1 = *pbVar10;
      }
      uVar14 = uVar14 + 1;
      pbVar8 = pbVar8 + 8;
    } while (uVar14 < 4);
    *(UINT *)(param_2 + 4) = CodePage;
    *(undefined4 *)(param_2 + 8) = 1;
    pwVar7 = CPtoLocaleName(CodePage);
    *(wchar_t **)(param_2 + 0x21c) = pwVar7;
    puVar11 = (undefined2 *)(param_2 + 0xc);
    puVar13 = (undefined2 *)(&DAT_004486fc + in_stack_ffffffdc);
    iVar9 = 6;
    do {
      uVar2 = *puVar13;
      puVar13 = puVar13 + 1;
      *puVar11 = uVar2;
      puVar11 = puVar11 + 1;
      iVar9 = iVar9 + -1;
    } while (iVar9 != 0);
    goto LAB_0042e3f1;
  }
  FUN_0042dde1((int)param_2);
  uVar12 = extraout_DL_00;
LAB_0042e3fb:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar12,uVar15);
  return;
code_r0x0042e268:
  local_20 = local_20 + 1;
  uVar3 = uVar3 + 0x30;
  if (0xef < uVar3) goto code_r0x0042e276;
  goto LAB_0042e25c;
code_r0x0042e276:
  uVar12 = extraout_DL;
  if ((CodePage != 65000) && (CodePage != 0xfde9)) {
    BVar4 = IsValidCodePage(CodePage & 0xffff);
    uVar15 = (undefined)in_stack_ffffffdc;
    uVar12 = extraout_DL_01;
    if (BVar4 != 0) {
      BVar4 = GetCPInfo(CodePage,&local_1c);
      uVar15 = (undefined)in_stack_ffffffdc;
      if (BVar4 == 0) {
        uVar12 = extraout_DL_02;
        if (_DAT_00458718 != 0) {
          FUN_0042dde1((int)param_2);
          uVar12 = extraout_DL_03;
        }
      }
      else {
        FUN_00427870((uint *)(param_2 + 0x18),0,0x101);
        *(UINT *)(param_2 + 4) = CodePage;
        *(undefined4 *)(param_2 + 0x21c) = 0;
        if (local_1c.MaxCharSize < 2) {
          *(undefined4 *)(param_2 + 8) = 0;
        }
        else {
          pBVar5 = local_1c.LeadByte;
          while ((local_1c.LeadByte[0] != 0 && (bVar1 = pBVar5[1], bVar1 != 0))) {
            for (uVar3 = (uint)*pBVar5; uVar3 <= bVar1; uVar3 = uVar3 + 1) {
              param_2[uVar3 + 0x19] = (__crt_multibyte_data)((byte)param_2[uVar3 + 0x19] | 4);
            }
            pBVar5 = pBVar5 + 2;
            local_1c.LeadByte[0] = *pBVar5;
          }
          p_Var6 = param_2 + 0x1a;
          iVar9 = 0xfe;
          do {
            *p_Var6 = (__crt_multibyte_data)((byte)*p_Var6 | 8);
            p_Var6 = p_Var6 + 1;
            iVar9 = iVar9 + -1;
          } while (iVar9 != 0);
          pwVar7 = CPtoLocaleName(*(int *)(param_2 + 4));
          *(wchar_t **)(param_2 + 0x21c) = pwVar7;
          *(undefined4 *)(param_2 + 8) = 1;
        }
        *(undefined4 *)(param_2 + 0xc) = 0;
        *(undefined4 *)(param_2 + 0x10) = 0;
        *(undefined4 *)(param_2 + 0x14) = 0;
LAB_0042e3f1:
        uVar15 = (undefined)in_stack_ffffffdc;
        setSBUpLow(param_2);
        uVar12 = extraout_DL_04;
      }
    }
  }
  goto LAB_0042e3fb;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe

void __cdecl
FUN_0042e40b(int *param_1,wchar_t *param_2,uint param_3,LPCSTR param_4,int param_5,LPWSTR param_6,
            int param_7,UINT param_8,int param_9)

{
  uint uVar1;
  char *pcVar2;
  int iVar3;
  uint uVar4;
  undefined4 *lpWideCharStr;
  uint cchWideChar;
  undefined4 *puVar5;
  int iVar6;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined uVar7;
  undefined uVar8;
  uint uVar9;
  
  uVar1 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  pcVar2 = param_4;
  iVar6 = param_5;
  if (0 < param_5) {
    do {
      iVar6 = iVar6 + -1;
      if (*pcVar2 == '\0') goto LAB_0042e437;
      pcVar2 = pcVar2 + 1;
    } while (iVar6 != 0);
    iVar6 = -1;
LAB_0042e437:
    iVar3 = (param_5 - iVar6) + -1;
    iVar6 = param_5 - iVar6;
    if (param_5 <= iVar3) {
      iVar6 = iVar3;
    }
  }
  if (param_8 == 0) {
    param_8 = *(UINT *)(*param_1 + 4);
  }
  uVar4 = MultiByteToWideChar(param_8,(uint)(param_9 != 0) * 8 + 1,param_4,iVar6,(LPWSTR)0x0,0);
  uVar7 = extraout_DL;
  if (uVar4 != 0) {
    if ((((int)uVar4 < 1) || (uVar7 = (undefined)(0xffffffe0 % uVar4), 0xffffffe0 / uVar4 < 2)) ||
       (uVar4 * 2 + 8 <= uVar4 * 2)) {
      lpWideCharStr = (undefined4 *)0x0;
    }
    else {
      uVar9 = uVar4 * 2 + 8;
      if (uVar9 < 0x401) {
        puVar5 = (undefined4 *)&stack0xffffffe8;
        lpWideCharStr = (undefined4 *)&stack0xffffffe8;
        if (&stack0x00000000 != (undefined *)0x18) {
LAB_0042e4d8:
          lpWideCharStr = puVar5 + 2;
        }
      }
      else {
        lpWideCharStr = (undefined4 *)FUN_00403c30(uVar9);
        uVar7 = extraout_DL_00;
        if (lpWideCharStr != (undefined4 *)0x0) {
          *lpWideCharStr = 0xdddd;
          puVar5 = lpWideCharStr;
          goto LAB_0042e4d8;
        }
      }
    }
    if (lpWideCharStr != (undefined4 *)0x0) {
      iVar6 = MultiByteToWideChar(param_8,1,param_4,iVar6,(LPWSTR)lpWideCharStr,uVar4);
      uVar9 = uVar4;
      if ((iVar6 != 0) &&
         (cchWideChar = FUN_004349de(param_2,param_3,(LPCWSTR)lpWideCharStr,uVar4,(LPWSTR)0x0,0),
         cchWideChar != 0)) {
        if ((param_3 & 0x400) == 0) {
          if ((((int)cchWideChar < 1) || (0xffffffe0 / cchWideChar < 2)) ||
             (cchWideChar * 2 + 8 <= cchWideChar * 2)) {
            puVar5 = (undefined4 *)0x0;
LAB_0042e5ad:
            if (puVar5 != (undefined4 *)0x0) {
              iVar6 = FUN_004349de(param_2,param_3,(LPCWSTR)lpWideCharStr,uVar9,(LPWSTR)puVar5,
                                   cchWideChar);
              if (iVar6 != 0) {
                if (param_7 == 0) {
                  param_7 = 0;
                  param_6 = (LPWSTR)0x0;
                }
                WideCharToMultiByte(param_8,0,(LPCWSTR)puVar5,cchWideChar,(LPSTR)param_6,param_7,
                                    (LPCSTR)0x0,(LPBOOL)0x0);
              }
              FUN_00427275((int)puVar5);
            }
          }
          else {
            uVar4 = cchWideChar * 2 + 8;
            if (uVar4 < 0x401) {
              puVar5 = (undefined4 *)&stack0xffffffe8;
              if (&stack0x00000000 != (undefined *)0x18) {
LAB_0042e5a6:
                puVar5 = puVar5 + 2;
                goto LAB_0042e5ad;
              }
            }
            else {
              puVar5 = (undefined4 *)FUN_00403c30(uVar4);
              if (puVar5 != (undefined4 *)0x0) {
                *puVar5 = 0xdddd;
                goto LAB_0042e5a6;
              }
            }
          }
        }
        else if ((param_7 != 0) && ((int)cchWideChar <= param_7)) {
          FUN_004349de(param_2,param_3,(LPCWSTR)lpWideCharStr,uVar4,param_6,param_7);
        }
      }
      uVar8 = (undefined)uVar9;
      FUN_00427275((int)lpWideCharStr);
      uVar7 = extraout_DL_01;
      goto LAB_0042e5fb;
    }
  }
  uVar8 = (undefined)uVar4;
LAB_0042e5fb:
  FUN_004298aa(uVar1 ^ (uint)&stack0xfffffffc,uVar7,uVar8);
  return;
}



void __cdecl
FUN_0042e60f(pthreadlocinfo *param_1,wchar_t *param_2,uint param_3,LPCSTR param_4,int param_5,
            LPWSTR param_6,int param_7,UINT param_8,int param_9)

{
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_1);
  FUN_0042e40b(local_14,param_2,param_3,param_4,param_5,param_6,param_7,param_8,param_9);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

void FUN_0042e655(int param_1)

{
  int *piVar1;
  int iVar2;
  
  if (param_1 != 0) {
    if (*(int *)(param_1 + 0x24) != 0) {
      FUN_00403c10(*(undefined4 *)(param_1 + 0x24));
    }
    if (*(int *)(param_1 + 0x2c) != 0) {
      FUN_00403c10(*(undefined4 *)(param_1 + 0x2c));
    }
    if (*(int *)(param_1 + 0x34) != 0) {
      FUN_00403c10(*(undefined4 *)(param_1 + 0x34));
    }
    if (*(int *)(param_1 + 0x3c) != 0) {
      FUN_00403c10(*(undefined4 *)(param_1 + 0x3c));
    }
    if (*(int *)(param_1 + 0x40) != 0) {
      FUN_00403c10(*(undefined4 *)(param_1 + 0x40));
    }
    if (*(int *)(param_1 + 0x44) != 0) {
      FUN_00403c10(*(undefined4 *)(param_1 + 0x44));
    }
    if (*(int *)(param_1 + 0x48) != 0) {
      FUN_00403c10(*(undefined4 *)(param_1 + 0x48));
    }
    if (*(undefined **)(param_1 + 0x5c) != &DAT_00440260) {
      FUN_00403c10(*(undefined4 *)(param_1 + 0x5c));
    }
    __lock(0xd);
    piVar1 = *(int **)(param_1 + 0x68);
    if (piVar1 != (int *)0x0) {
      LOCK();
      iVar2 = *piVar1;
      *piVar1 = iVar2 + -1;
      if ((iVar2 + -1 == 0) && (piVar1 != &DAT_004484d0)) {
        FUN_00403c10(piVar1);
      }
    }
    FUN_0042e775();
    __lock(0xc);
    piVar1 = *(int **)(param_1 + 0x6c);
    if (piVar1 != (int *)0x0) {
      FUN_0042dbb0(piVar1);
      if (((piVar1 != (int *)PTR_DAT_0044895c) && (piVar1 != (int *)&DAT_00448960)) &&
         (*piVar1 == 0)) {
        FUN_0042da56((int)piVar1);
      }
    }
    FUN_0042e781();
    FUN_00403c10(param_1);
  }
  return;
}



void FUN_0042e775(void)

{
  FUN_00429e85(0xd);
  return;
}



void FUN_0042e781(void)

{
  FUN_00429e85(0xc);
  return;
}



// Library Function - Single Match
//  __getptd
// 
// Library: Visual Studio 2012 Release

_ptiddata __cdecl __getptd(void)

{
  _ptiddata p_Var1;
  
  p_Var1 = __getptd_noexit();
  if (p_Var1 == (_ptiddata)0x0) {
    __amsg_exit(0x10);
  }
  return p_Var1;
}



// Library Function - Single Match
//  __getptd_noexit
// 
// Library: Visual Studio 2012 Release

_ptiddata __cdecl __getptd_noexit(void)

{
  DWORD dwErrCode;
  _ptiddata p_Var1;
  int iVar2;
  DWORD DVar3;
  
  dwErrCode = GetLastError();
  p_Var1 = (_ptiddata)FUN_0042eca3(DAT_004487e8);
  if (p_Var1 == (_ptiddata)0x0) {
    p_Var1 = (_ptiddata)FUN_00403d40(1,0x3bc);
    if (p_Var1 != (_ptiddata)0x0) {
      iVar2 = FUN_0042ecc2(DAT_004487e8,p_Var1);
      if (iVar2 == 0) {
        FUN_00403c10(p_Var1);
        p_Var1 = (_ptiddata)0x0;
      }
      else {
        FUN_0042e811((int)p_Var1,0);
        DVar3 = GetCurrentThreadId();
        p_Var1->_thandle = 0xffffffff;
        p_Var1->_tid = DVar3;
      }
    }
  }
  SetLastError(dwErrCode);
  return p_Var1;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

void __cdecl FUN_0042e811(int param_1,int param_2)

{
  *(undefined **)(param_1 + 0x5c) = &DAT_00440260;
  *(undefined4 *)(param_1 + 8) = 0;
  *(undefined4 *)(param_1 + 0x14) = 1;
  *(undefined4 *)(param_1 + 0x70) = 1;
  *(undefined2 *)(param_1 + 0xb8) = 0x43;
  *(undefined2 *)(param_1 + 0x1be) = 0x43;
  *(undefined4 **)(param_1 + 0x68) = &DAT_004484d0;
  *(undefined4 *)(param_1 + 0x3b8) = 0;
  __lock(0xd);
  LOCK();
  **(int **)(param_1 + 0x68) = **(int **)(param_1 + 0x68) + 1;
  FUN_0042e8b2();
  __lock(0xc);
  *(int *)(param_1 + 0x6c) = param_2;
  if (param_2 == 0) {
    *(undefined **)(param_1 + 0x6c) = PTR_DAT_0044895c;
  }
  FUN_0042d9c1(*(int **)(param_1 + 0x6c));
  FUN_0042e8bb();
  return;
}



void FUN_0042e8b2(void)

{
  FUN_00429e85(0xd);
  return;
}



void FUN_0042e8bb(void)

{
  FUN_00429e85(0xc);
  return;
}



undefined4 FUN_0042e8c4(void)

{
  int iVar1;
  uint *puVar2;
  DWORD DVar3;
  
  FUN_00427ace();
  iVar1 = FUN_00429e4c();
  if (iVar1 != 0) {
    DAT_004487e8 = FUN_0042ec66(FUN_0042e655);
    if (DAT_004487e8 != 0xffffffff) {
      puVar2 = FUN_00403d40(1,0x3bc);
      if (puVar2 != (uint *)0x0) {
        iVar1 = FUN_0042ecc2(DAT_004487e8,puVar2);
        if (iVar1 != 0) {
          FUN_0042e811((int)puVar2,0);
          DVar3 = GetCurrentThreadId();
          puVar2[1] = 0xffffffff;
          *puVar2 = DVar3;
          return 1;
        }
      }
      FUN_0042e93a();
      return 0;
    }
  }
  FUN_0042e93a();
  return 0;
}



void FUN_0042e93a(void)

{
  LPCRITICAL_SECTION lpCriticalSection;
  LPCRITICAL_SECTION *pp_Var1;
  LPCRITICAL_SECTION *pp_Var2;
  
  if (DAT_004487e8 != 0xffffffff) {
    FUN_0042ec84(DAT_004487e8);
    DAT_004487e8 = 0xffffffff;
  }
  pp_Var1 = (LPCRITICAL_SECTION *)&DAT_00448010;
  pp_Var2 = (LPCRITICAL_SECTION *)&DAT_00448010;
  do {
    lpCriticalSection = *pp_Var2;
    if ((lpCriticalSection != (LPCRITICAL_SECTION)0x0) && (pp_Var2[1] != (LPCRITICAL_SECTION)0x1)) {
      DeleteCriticalSection(lpCriticalSection);
      FUN_00403c10(lpCriticalSection);
      *pp_Var2 = (LPCRITICAL_SECTION)0x0;
    }
    pp_Var2 = pp_Var2 + 2;
  } while ((int)pp_Var2 < 0x448130);
  do {
    if ((*pp_Var1 != (LPCRITICAL_SECTION)0x0) && (pp_Var1[1] == (LPCRITICAL_SECTION)0x1)) {
      DeleteCriticalSection(*pp_Var1);
    }
    pp_Var1 = pp_Var1 + 2;
  } while ((int)pp_Var1 < 0x448130);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

void FUN_0042e957(void)

{
  if (PTR_DAT_0044895c != &DAT_00448960) {
    __lock(0xc);
    PTR_DAT_0044895c =
         (undefined *)__updatetlocinfoEx_nolock((int **)&PTR_DAT_0044895c,(int *)&DAT_00448960);
    FUN_0042e9a0();
  }
  return;
}



void FUN_0042e9a0(void)

{
  FUN_00429e85(0xc);
  return;
}



undefined4 __cdecl FUN_0042e9a9(pthreadlocinfo *param_1,uint param_2,uint param_3,byte param_4)

{
  uint uVar1;
  undefined4 uVar2;
  int local_14;
  int local_10;
  int local_c;
  char local_8;
  
  FUN_00427078(&local_14,param_1);
  if ((*(byte *)(local_10 + 0x19 + (param_2 & 0xff)) & param_4) == 0) {
    uVar2 = 0;
    if (param_3 == 0) {
      uVar1 = 0;
    }
    else {
      uVar1 = *(ushort *)(*(int *)(local_14 + 0x90) + (param_2 & 0xff) * 2) & param_3;
    }
    if (uVar1 == 0) goto LAB_0042e9ef;
  }
  uVar2 = 1;
LAB_0042e9ef:
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return uVar2;
}



// Library Function - Single Match
//  __ismbblead
// 
// Library: Visual Studio 2012 Release

int __cdecl __ismbblead(uint _C)

{
  int iVar1;
  
  iVar1 = FUN_0042e9a9((pthreadlocinfo *)0x0,_C,0,4);
  return iVar1;
}



void __cdecl FUN_0042ea19(uint param_1)

{
  FUN_0042ea2a(param_1,(pthreadlocinfo *)0x0);
  return;
}



uint __cdecl FUN_0042ea2a(uint param_1,pthreadlocinfo *param_2)

{
  int iVar1;
  pthreadlocinfo local_1c;
  int local_18;
  int local_14;
  char local_10;
  uint local_c;
  CHAR local_8;
  undefined local_7;
  
  FUN_00427078(&local_1c,param_2);
  if (param_1 < 0x100) {
    if ((*(byte *)(local_18 + 0x19 + param_1) & 0x20) != 0) {
      param_1 = (uint)*(byte *)(local_18 + 0x119 + param_1);
    }
  }
  else {
    local_8 = (CHAR)(param_1 >> 8);
    local_7 = (undefined)param_1;
    if ((*(byte *)((param_1 >> 8 & 0xff) + 0x19 + local_18) & 4) != 0) {
      iVar1 = FUN_0042e60f(&local_1c,*(wchar_t **)(local_18 + 0x21c),0x200,&local_8,2,
                           (LPWSTR)&local_c,2,*(UINT *)(local_18 + 4),1);
      if (iVar1 != 0) {
        param_1 = (local_c & 0xff) * 0x100 + (local_c >> 8 & 0xff);
      }
    }
  }
  if (local_10 != '\0') {
    *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
  }
  return param_1;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

int FUN_0042eac1(void)

{
  FILE *pFVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = 0;
  __lock(1);
  for (iVar3 = 3; iVar3 < DAT_0045a2e4; iVar3 = iVar3 + 1) {
    pFVar1 = *(FILE **)(DAT_0045a2e0 + iVar3 * 4);
    if (pFVar1 != (FILE *)0x0) {
      if ((*(byte *)&pFVar1->_flag & 0x83) != 0) {
        iVar2 = FUN_00426716(pFVar1);
        if (iVar2 != -1) {
          iVar4 = iVar4 + 1;
        }
      }
      if (0x13 < iVar3) {
        DeleteCriticalSection((LPCRITICAL_SECTION)(*(int *)(DAT_0045a2e0 + iVar3 * 4) + 0x20));
        FUN_00403c10(*(undefined4 *)(DAT_0045a2e0 + iVar3 * 4));
        *(undefined4 *)(DAT_0045a2e0 + iVar3 * 4) = 0;
      }
    }
  }
  FUN_0042eb55();
  return iVar4;
}



void FUN_0042eb55(void)

{
  FUN_00429e85(1);
  return;
}



void FUN_0042ec26(void)

{
  code **ppcVar1;
  
  for (ppcVar1 = (code **)&DAT_00444f94; ppcVar1 < &DAT_00444f94; ppcVar1 = ppcVar1 + 1) {
    if (*ppcVar1 != (code *)0x0) {
      (**ppcVar1)();
    }
  }
  return;
}



void FUN_0042ec46(void)

{
  code **ppcVar1;
  
  for (ppcVar1 = (code **)&DAT_00444f9c; ppcVar1 < &DAT_00444f9c; ppcVar1 = ppcVar1 + 1) {
    if (*ppcVar1 != (code *)0x0) {
      (**ppcVar1)();
    }
  }
  return;
}



void __cdecl FUN_0042ec66(undefined4 param_1)

{
  if ((code *)(DAT_00459220 ^ DAT_00447ff8) != (code *)0x0) {
    (*(code *)(DAT_00459220 ^ DAT_00447ff8))(param_1);
    return;
  }
                    // WARNING: Could not recover jumptable at 0x0042ec7e. Too many branches
                    // WARNING: Treating indirect jump as call
  TlsAlloc();
  return;
}



void __cdecl FUN_0042ec84(DWORD param_1)

{
  if ((code *)(DAT_00459224 ^ DAT_00447ff8) != (code *)0x0) {
    (*(code *)(DAT_00459224 ^ DAT_00447ff8))();
    return;
  }
  TlsFree(param_1);
  return;
}



void __cdecl FUN_0042eca3(DWORD param_1)

{
  if ((code *)(DAT_00459228 ^ DAT_00447ff8) != (code *)0x0) {
    (*(code *)(DAT_00459228 ^ DAT_00447ff8))();
    return;
  }
  TlsGetValue(param_1);
  return;
}



void __cdecl FUN_0042ecc2(DWORD param_1,LPVOID param_2)

{
  if ((code *)(DAT_0045922c ^ DAT_00447ff8) != (code *)0x0) {
    (*(code *)(DAT_0045922c ^ DAT_00447ff8))();
    return;
  }
  TlsSetValue(param_1,param_2);
  return;
}



WORD FUN_0042ece4(void)

{
  undefined local_48 [48];
  WORD local_18;
  
  GetStartupInfoW((LPSTARTUPINFOW)local_48);
  if ((local_48[44] & 1) == 0) {
    local_18 = 10;
  }
  return local_18;
}



undefined4 __cdecl FUN_0042ed07(LPCRITICAL_SECTION param_1,DWORD param_2,undefined4 param_3)

{
  undefined4 uVar1;
  
  if ((code *)(DAT_00459230 ^ DAT_00447ff8) != (code *)0x0) {
    uVar1 = (*(code *)(DAT_00459230 ^ DAT_00447ff8))(param_1,param_2,param_3);
    return uVar1;
  }
  InitializeCriticalSectionAndSpinCount(param_1,param_2);
  return 1;
}



bool FUN_0042ed35(void)

{
  int iVar1;
  int iVar2;
  undefined4 local_8;
  
  iVar1 = DAT_00448a28;
  if (DAT_00448a28 < 0) {
    local_8 = 0;
    iVar1 = 0;
    if (((code *)(DAT_00459294 ^ DAT_00447ff8) != (code *)0x0) &&
       (iVar2 = (*(code *)(DAT_00459294 ^ DAT_00447ff8))(&local_8,0), iVar2 == 0x7a)) {
      iVar1 = 1;
    }
  }
  DAT_00448a28 = iVar1;
  return 0 < DAT_00448a28;
}



void __cdecl FUN_0042f000(LPTOP_LEVEL_EXCEPTION_FILTER param_1)

{
  SetUnhandledExceptionFilter(param_1);
  return;
}



// Library Function - Single Match
//  ___crtTerminateProcess
// 
// Library: Visual Studio 2012 Release

void __cdecl ___crtTerminateProcess(UINT uExitCode)

{
  HANDLE hProcess;
  
  hProcess = GetCurrentProcess();
  TerminateProcess(hProcess,uExitCode);
  return;
}



// Library Function - Single Match
//  ___crtUnhandledException
// 
// Library: Visual Studio 2012 Release

LONG __cdecl ___crtUnhandledException(EXCEPTION_POINTERS *exceptionInfo)

{
  LONG LVar1;
  
  SetUnhandledExceptionFilter((LPTOP_LEVEL_EXCEPTION_FILTER)0x0);
  LVar1 = UnhandledExceptionFilter(exceptionInfo);
  return LVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __FF_MSGBANNER
// 
// Library: Visual Studio 2012 Release

void __cdecl __FF_MSGBANNER(void)

{
  int iVar1;
  
  iVar1 = __set_error_mode(3);
  if (iVar1 != 1) {
    iVar1 = __set_error_mode(3);
    if (iVar1 != 0) {
      return;
    }
    if (_DAT_00458720 != 1) {
      return;
    }
  }
  FUN_0042f096(0xfc);
  FUN_0042f096(0xff);
  return;
}



// Library Function - Single Match
//  __GET_RTERRMSG
// 
// Library: Visual Studio 2012 Release

wchar_t * __cdecl __GET_RTERRMSG(int param_1)

{
  uint uVar1;
  
  uVar1 = 0;
  do {
    if (param_1 == (&DAT_0043f7f8)[uVar1 * 2]) {
      return (wchar_t *)(&PTR_u_R6002___floating_point_support_n_0043f7fc)[uVar1 * 2];
    }
    uVar1 = uVar1 + 1;
  } while (uVar1 < 0x17);
  return (wchar_t *)0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_0042f096(int param_1)

{
  code *pcVar1;
  wchar_t *_Src;
  int iVar2;
  errno_t eVar3;
  DWORD DVar4;
  size_t sVar5;
  HANDLE hFile;
  uint uVar6;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined uVar7;
  LPDWORD lpNumberOfBytesWritten;
  LPOVERLAPPED lpOverlapped;
  undefined in_stack_fffffe00;
  char local_1fc [500];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  _Src = __GET_RTERRMSG(param_1);
  uVar7 = extraout_DL;
  if (_Src != (wchar_t *)0x0) {
    iVar2 = __set_error_mode(3);
    if ((iVar2 == 1) || ((iVar2 = __set_error_mode(3), iVar2 == 0 && (_DAT_00458720 == 1)))) {
      hFile = GetStdHandle(0xfffffff4);
      uVar7 = extraout_DL_02;
      if ((hFile != (HANDLE)0x0) && (hFile != (HANDLE)0xffffffff)) {
        uVar6 = 0;
        do {
          local_1fc[uVar6] = *(char *)(_Src + uVar6);
          if (_Src[uVar6] == L'\0') break;
          uVar6 = uVar6 + 1;
        } while (uVar6 < 500);
        lpOverlapped = (LPOVERLAPPED)0x0;
        lpNumberOfBytesWritten = (LPDWORD)&stack0xfffffe00;
        local_1fc[499] = 0;
        sVar5 = _strlen(local_1fc);
        WriteFile(hFile,local_1fc,sVar5,lpNumberOfBytesWritten,lpOverlapped);
        uVar7 = extraout_DL_03;
      }
    }
    else {
      uVar7 = extraout_DL_00;
      if (param_1 != 0xfc) {
        eVar3 = _wcscpy_s((wchar_t *)&DAT_00458728,0x314,L"Runtime Error!\n\nProgram: ");
        if (eVar3 == 0) {
          _DAT_00458962 = 0;
          DVar4 = GetModuleFileNameW((HMODULE)0x0,(LPWSTR)&DAT_0045875a,0x104);
          if ((DVar4 != 0) ||
             (eVar3 = _wcscpy_s((wchar_t *)&DAT_0045875a,0x2fb,L"<program name unknown>"),
             eVar3 == 0)) {
            sVar5 = _wcslen((wchar_t *)&DAT_0045875a);
            if (0x3c < sVar5 + 1) {
              sVar5 = _wcslen((wchar_t *)&DAT_0045875a);
              iVar2 = FUN_0043761c((short *)(&DAT_004586e4 + sVar5 * 2),
                                   0x2fb - ((int)(sVar5 * 2 + -0x76) >> 1),(short *)&DAT_004401fc,3)
              ;
              if (iVar2 != 0) goto LAB_0042f248;
            }
            eVar3 = _wcscat_s((wchar_t *)&DAT_00458728,0x314,L"\n\n");
            if ((eVar3 == 0) && (eVar3 = _wcscat_s((wchar_t *)&DAT_00458728,0x314,_Src), eVar3 == 0)
               ) {
              FUN_004376da((LPCWSTR)&DAT_00458728,L"Microsoft Visual C++ Runtime Library",0x12010);
              uVar7 = extraout_DL_01;
              goto LAB_0042f238;
            }
          }
        }
LAB_0042f248:
        __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
        pcVar1 = (code *)swi(3);
        (*pcVar1)();
        return;
      }
    }
  }
LAB_0042f238:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar7,in_stack_fffffe00);
  return;
}



// Library Function - Single Match
//  __FindPESection
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release

PIMAGE_SECTION_HEADER __cdecl __FindPESection(PBYTE pImageBase,DWORD_PTR rva)

{
  int iVar1;
  PIMAGE_SECTION_HEADER p_Var2;
  uint uVar3;
  
  uVar3 = 0;
  iVar1 = *(int *)(pImageBase + 0x3c);
  p_Var2 = (PIMAGE_SECTION_HEADER)
           (pImageBase + *(ushort *)(pImageBase + iVar1 + 0x14) + 0x18 + iVar1);
  if (*(ushort *)(pImageBase + iVar1 + 6) != 0) {
    do {
      if ((p_Var2->VirtualAddress <= rva) && (rva < p_Var2->Misc + p_Var2->VirtualAddress)) {
        return p_Var2;
      }
      uVar3 = uVar3 + 1;
      p_Var2 = p_Var2 + 1;
    } while (uVar3 < *(ushort *)(pImageBase + iVar1 + 6));
  }
  return (PIMAGE_SECTION_HEADER)0x0;
}



// Library Function - Single Match
//  __IsNonwritableInCurrentImage
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2019 Release

BOOL __cdecl __IsNonwritableInCurrentImage(PBYTE pTarget)

{
  uint uVar1;
  BOOL BVar2;
  PIMAGE_SECTION_HEADER p_Var3;
  int **in_FS_OFFSET;
  int *local_14;
  code *pcStack16;
  uint local_c;
  undefined4 local_8;
  
  pcStack16 = FUN_0042a060;
  local_14 = *in_FS_OFFSET;
  local_c = DAT_00447ff8 ^ 0x445298;
  *in_FS_OFFSET = (int *)&local_14;
  local_8 = 0;
  BVar2 = __ValidateImageBase((PBYTE)&IMAGE_DOS_HEADER_00400000);
  if (BVar2 != 0) {
    p_Var3 = __FindPESection((PBYTE)&IMAGE_DOS_HEADER_00400000,(DWORD_PTR)(pTarget + -0x400000));
    if (p_Var3 != (PIMAGE_SECTION_HEADER)0x0) {
      uVar1 = p_Var3->Characteristics;
      *in_FS_OFFSET = local_14;
      return ~(uVar1 >> 0x1f) & 1;
    }
  }
  *in_FS_OFFSET = local_14;
  return 0;
}



// Library Function - Single Match
//  __ValidateImageBase
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release

BOOL __cdecl __ValidateImageBase(PBYTE pImageBase)

{
  uint uVar1;
  
  if (*(short *)pImageBase != 0x5a4d) {
    return 0;
  }
  uVar1 = 0;
  if (*(int *)(pImageBase + *(int *)(pImageBase + 0x3c)) == 0x4550) {
    uVar1 = (uint)(*(short *)((int)(pImageBase + *(int *)(pImageBase + 0x3c)) + 0x18) == 0x10b);
  }
  return uVar1;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// Library Function - Single Match
//  void __cdecl terminate(void)
// 
// Library: Visual Studio 2012 Release

void __cdecl terminate(void)

{
  code *pcVar1;
  _ptiddata p_Var2;
  
  p_Var2 = __getptd();
  if ((code *)p_Var2->_terminate != (code *)0x0) {
    (*(code *)p_Var2->_terminate)();
  }
  _abort();
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0042f3d5(void)

{
  _DAT_00458d50 = EncodePointer(terminate);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_0042f3e6(undefined4 param_1)

{
  _DAT_00458d54 = param_1;
  return;
}



void FUN_0042f3f3(void)

{
  DecodePointer(DAT_00458d60);
  return;
}



void __cdecl FUN_0042f400(undefined4 param_1)

{
  DAT_00458d58 = param_1;
  DAT_00458d5c = param_1;
  DAT_00458d60 = param_1;
  DAT_00458d64 = param_1;
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_0042f41c(int param_1)

{
  bool bVar1;
  uint uVar2;
  int *piVar3;
  PVOID Ptr;
  code *pcVar4;
  code *pcVar5;
  int iVar6;
  _ptiddata p_Var7;
  int local_34;
  void *local_30;
  code **local_20;
  
  local_30 = (void *)0x0;
  local_34 = 0;
  bVar1 = false;
  p_Var7 = (_ptiddata)0x0;
  if (param_1 < 0xc) {
    if (param_1 != 0xb) {
      if (param_1 == 2) {
        local_20 = (code **)&DAT_00458d58;
        Ptr = DAT_00458d58;
        goto LAB_0042f4db;
      }
      if (param_1 != 4) {
        if (param_1 == 6) goto LAB_0042f4b3;
        if (param_1 != 8) goto LAB_0042f4a1;
      }
    }
    p_Var7 = __getptd_noexit();
    if (p_Var7 == (_ptiddata)0x0) {
      return 0xffffffff;
    }
    uVar2 = FUN_0042f5d7(param_1,(uint)p_Var7->_pxcptacttab);
    local_20 = (code **)(uVar2 + 8);
    pcVar4 = *local_20;
  }
  else {
    if (param_1 == 0xf) {
      local_20 = (code **)&DAT_00458d64;
      Ptr = DAT_00458d64;
    }
    else if (param_1 == 0x15) {
      local_20 = (code **)&DAT_00458d5c;
      Ptr = DAT_00458d5c;
    }
    else {
      if (param_1 != 0x16) {
LAB_0042f4a1:
        piVar3 = __errno();
        *piVar3 = 0x16;
        FUN_00429bfe();
        return 0xffffffff;
      }
LAB_0042f4b3:
      local_20 = (code **)&DAT_00458d60;
      Ptr = DAT_00458d60;
    }
LAB_0042f4db:
    bVar1 = true;
    pcVar4 = (code *)DecodePointer(Ptr);
  }
  if (pcVar4 == (code *)0x1) {
    return 0;
  }
  if (pcVar4 == (code *)0x0) {
    __exit(3);
  }
  if (bVar1) {
    __lock(0);
  }
  if (((param_1 == 8) || (param_1 == 0xb)) || (param_1 == 4)) {
    local_30 = p_Var7->_tpxcptinfoptrs;
    p_Var7->_tpxcptinfoptrs = (void *)0x0;
    if (param_1 == 8) {
      local_34 = p_Var7->_tfpecode;
      p_Var7->_tfpecode = 0x8c;
      goto LAB_0042f53a;
    }
  }
  else {
LAB_0042f53a:
    if (param_1 == 8) {
      for (iVar6 = 3; iVar6 < 0xc; iVar6 = iVar6 + 1) {
        *(undefined4 *)((int)p_Var7->_pxcptacttab + iVar6 * 0xc + 8) = 0;
      }
      goto LAB_0042f579;
    }
  }
  pcVar5 = (code *)EncodePointer((PVOID)0x0);
  *local_20 = pcVar5;
LAB_0042f579:
  FUN_0042f59d();
  if (param_1 == 8) {
    (*pcVar4)(8,p_Var7->_tfpecode);
  }
  else {
    (*pcVar4)(param_1);
    if ((param_1 != 0xb) && (param_1 != 4)) {
      return 0;
    }
  }
  p_Var7->_tpxcptinfoptrs = local_30;
  if (param_1 == 8) {
    p_Var7->_tfpecode = local_34;
  }
  return 0;
}



void FUN_0042f59d(void)

{
  int unaff_EBX;
  
  if (unaff_EBX != 0) {
    FUN_00429e85(0);
  }
  return;
}



uint __cdecl FUN_0042f5d7(int param_1,uint param_2)

{
  uint uVar1;
  
  uVar1 = param_2;
  do {
    if (*(int *)(uVar1 + 4) == param_1) break;
    uVar1 = uVar1 + 0xc;
  } while (uVar1 < param_2 + 0x90);
  if ((param_2 + 0x90 <= uVar1) || (*(int *)(uVar1 + 4) != param_1)) {
    uVar1 = 0;
  }
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_0042f611(undefined4 param_1)

{
  _DAT_00458d6c = param_1;
  return;
}



// Library Function - Single Match
//  __ftbuf
// 
// Library: Visual Studio 2012 Release

void __cdecl __ftbuf(int _Flag,FILE *_File)

{
  if ((_Flag != 0) && ((_File->_flag & 0x1000U) != 0)) {
    FUN_0042aeca(_File);
    _File->_flag = _File->_flag & 0xffffeeff;
    _File->_bufsiz = 0;
    _File->_ptr = (char *)0x0;
    _File->_base = (char *)0x0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 __cdecl FUN_0042f64f(FILE *param_1)

{
  char *pcVar1;
  byte bVar2;
  uint uVar3;
  undefined3 extraout_var;
  undefined **ppuVar4;
  int iVar5;
  int iVar6;
  
  uVar3 = __fileno(param_1);
  bVar2 = FUN_004366ed(uVar3);
  if (CONCAT31(extraout_var,bVar2) == 0) {
    return 0;
  }
  ppuVar4 = FUN_0042761d();
  if (param_1 == (FILE *)(ppuVar4 + 8)) {
    iVar6 = 0;
  }
  else {
    ppuVar4 = FUN_0042761d();
    if (param_1 != (FILE *)(ppuVar4 + 0x10)) {
      return 0;
    }
    iVar6 = 1;
  }
  _DAT_00458448 = _DAT_00458448 + 1;
  if ((param_1->_flag & 0x10cU) != 0) {
    return 0;
  }
  if ((&DAT_00458d70)[iVar6] == 0) {
    iVar5 = FUN_00403c30(0x1000);
    (&DAT_00458d70)[iVar6] = iVar5;
    if (iVar5 == 0) {
      param_1->_base = (char *)&param_1->_charbuf;
      param_1->_ptr = (char *)&param_1->_charbuf;
      param_1->_bufsiz = 2;
      param_1->_cnt = 2;
      goto LAB_0042f6e2;
    }
  }
  pcVar1 = (char *)(&DAT_00458d70)[iVar6];
  param_1->_base = pcVar1;
  param_1->_ptr = pcVar1;
  param_1->_bufsiz = 0x1000;
  param_1->_cnt = 0x1000;
LAB_0042f6e2:
  param_1->_flag = param_1->_flag | 0x1102;
  return 1;
}



// Library Function - Single Match
//  long __stdcall __CxxUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *)
// 
// Library: Visual Studio 2012 Release

long __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *param_1)

{
  PEXCEPTION_RECORD pEVar1;
  ULONG_PTR UVar2;
  code *pcVar3;
  long lVar4;
  
  pEVar1 = param_1->ExceptionRecord;
  if (((pEVar1->ExceptionCode == 0xe06d7363) && (pEVar1->NumberParameters == 3)) &&
     ((UVar2 = pEVar1->ExceptionInformation[0], UVar2 == 0x19930520 ||
      (((UVar2 == 0x19930521 || (UVar2 == 0x19930522)) || (UVar2 == 0x1994000)))))) {
    terminate();
    pcVar3 = (code *)swi(3);
    lVar4 = (*pcVar3)();
    return lVar4;
  }
  return 0;
}



undefined4 FUN_0042f736(void)

{
  FUN_0042f000(__CxxUnhandledExceptionFilter);
  return 0;
}



_ptiddata __cdecl FUN_0042f744(int param_1,void *param_2)

{
  int *piVar1;
  code *pcVar2;
  void *pvVar3;
  _ptiddata p_Var4;
  int *piVar5;
  int iVar6;
  
  p_Var4 = __getptd_noexit();
  if (p_Var4 != (_ptiddata)0x0) {
    piVar1 = (int *)p_Var4->_pxcptacttab;
    piVar5 = piVar1;
    do {
      if (*piVar5 == param_1) break;
      piVar5 = piVar5 + 3;
    } while (piVar5 < piVar1 + 0x24);
    if ((piVar1 + 0x24 <= piVar5) || (*piVar5 != param_1)) {
      piVar5 = (int *)0x0;
    }
    if ((piVar5 == (int *)0x0) || (pcVar2 = (code *)piVar5[2], pcVar2 == (code *)0x0)) {
      p_Var4 = (_ptiddata)0x0;
    }
    else if (pcVar2 == (code *)0x5) {
      piVar5[2] = 0;
      p_Var4 = (_ptiddata)0x1;
    }
    else if (pcVar2 == (code *)0x1) {
      p_Var4 = (_ptiddata)0xffffffff;
    }
    else {
      pvVar3 = p_Var4->_tpxcptinfoptrs;
      p_Var4->_tpxcptinfoptrs = param_2;
      if (piVar5[1] == 8) {
        iVar6 = 0x24;
        do {
          *(undefined4 *)(iVar6 + 8 + (int)p_Var4->_pxcptacttab) = 0;
          iVar6 = iVar6 + 0xc;
        } while (iVar6 < 0x90);
        iVar6 = p_Var4->_tfpecode;
        if (*piVar5 == -0x3fffff72) {
          p_Var4->_tfpecode = 0x83;
        }
        else if (*piVar5 == -0x3fffff70) {
          p_Var4->_tfpecode = 0x81;
        }
        else if (*piVar5 == -0x3fffff6f) {
          p_Var4->_tfpecode = 0x84;
        }
        else if (*piVar5 == -0x3fffff6d) {
          p_Var4->_tfpecode = 0x85;
        }
        else if (*piVar5 == -0x3fffff73) {
          p_Var4->_tfpecode = 0x82;
        }
        else if (*piVar5 == -0x3fffff71) {
          p_Var4->_tfpecode = 0x86;
        }
        else if (*piVar5 == -0x3fffff6e) {
          p_Var4->_tfpecode = 0x8a;
        }
        else if (*piVar5 == -0x3ffffd4b) {
          p_Var4->_tfpecode = 0x8d;
        }
        else if (*piVar5 == -0x3ffffd4c) {
          p_Var4->_tfpecode = 0x8e;
        }
        (*pcVar2)(8,p_Var4->_tfpecode);
        p_Var4->_tfpecode = iVar6;
      }
      else {
        piVar5[2] = 0;
        (*pcVar2)(piVar5[1]);
      }
      p_Var4->_tpxcptinfoptrs = pvVar3;
      p_Var4 = (_ptiddata)0xffffffff;
    }
  }
  return p_Var4;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_0042f89f(void)

{
  uint uVar1;
  uint uVar2;
  byte **ppbVar3;
  byte *pbVar4;
  uint local_c;
  uint local_8;
  
  if (_DAT_004592bc == 0) {
    ___initmbctable();
  }
  DAT_00458e7c = 0;
  GetModuleFileNameA((HMODULE)0x0,&DAT_00458d78,0x104);
  _DAT_00458464 = &DAT_00458d78;
  if ((DAT_004592ac == (byte *)0x0) || (pbVar4 = DAT_004592ac, *DAT_004592ac == 0)) {
    pbVar4 = &DAT_00458d78;
  }
  FUN_0042f952(pbVar4,(byte **)0x0,(byte *)0x0,(int *)&local_8,(int *)&local_c);
  uVar2 = local_8;
  if ((((local_8 < 0x3fffffff) && (local_c != 0xffffffff)) &&
      (uVar1 = local_c + local_8 * 4, local_c <= uVar1)) &&
     (ppbVar3 = (byte **)FUN_00403c30(uVar1), ppbVar3 != (byte **)0x0)) {
    FUN_0042f952(pbVar4,ppbVar3,(byte *)(ppbVar3 + uVar2),(int *)&local_8,(int *)&local_c);
    _DAT_00458450 = local_8 - 1;
    _DAT_00458454 = ppbVar3;
    return 0;
  }
  return 0xffffffff;
}



void __cdecl FUN_0042f952(byte *param_1,byte **param_2,byte *param_3,int *param_4,int *param_5)

{
  bool bVar1;
  bool bVar2;
  byte bVar3;
  int iVar4;
  uint uVar5;
  byte *pbVar6;
  byte *pbVar7;
  
  *param_5 = 0;
  *param_4 = 1;
  if (param_2 != (byte **)0x0) {
    *param_2 = param_3;
    param_2 = param_2 + 1;
  }
  bVar2 = false;
  do {
    if (*param_1 == 0x22) {
      bVar2 = !bVar2;
      pbVar6 = param_1 + 1;
      bVar3 = 0x22;
    }
    else {
      *param_5 = *param_5 + 1;
      if (param_3 != (byte *)0x0) {
        *param_3 = *param_1;
        param_3 = param_3 + 1;
      }
      bVar3 = *param_1;
      pbVar6 = param_1 + 1;
      iVar4 = __ismbblead((uint)bVar3);
      if (iVar4 != 0) {
        *param_5 = *param_5 + 1;
        if (param_3 != (byte *)0x0) {
          *param_3 = *pbVar6;
          param_3 = param_3 + 1;
        }
        pbVar6 = param_1 + 2;
      }
      if (bVar3 == 0) {
        pbVar6 = pbVar6 + -1;
        goto LAB_0042f9e3;
      }
    }
    param_1 = pbVar6;
  } while ((bVar2) || ((bVar3 != 0x20 && (bVar3 != 9))));
  if (param_3 != (byte *)0x0) {
    param_3[-1] = 0;
  }
LAB_0042f9e3:
  bVar2 = false;
  while (pbVar7 = pbVar6, *pbVar6 != 0) {
    for (; (*pbVar7 == 0x20 || (*pbVar7 == 9)); pbVar7 = pbVar7 + 1) {
    }
    if (*pbVar7 == 0) break;
    if (param_2 != (byte **)0x0) {
      *param_2 = param_3;
      param_2 = param_2 + 1;
    }
    *param_4 = *param_4 + 1;
    while( true ) {
      bVar1 = true;
      uVar5 = 0;
      for (; *pbVar7 == 0x5c; pbVar7 = pbVar7 + 1) {
        uVar5 = uVar5 + 1;
      }
      pbVar6 = pbVar7;
      if (*pbVar7 == 0x22) {
        if (((uVar5 & 1) == 0) && ((!bVar2 || (pbVar6 = pbVar7 + 1, *pbVar6 != 0x22)))) {
          bVar1 = false;
          bVar2 = !bVar2;
          pbVar6 = pbVar7;
        }
        uVar5 = uVar5 >> 1;
      }
      while (uVar5 != 0) {
        uVar5 = uVar5 - 1;
        if (param_3 != (byte *)0x0) {
          *param_3 = 0x5c;
          param_3 = param_3 + 1;
        }
        *param_5 = *param_5 + 1;
      }
      bVar3 = *pbVar6;
      if ((bVar3 == 0) || ((!bVar2 && ((bVar3 == 0x20 || (bVar3 == 9)))))) break;
      if (bVar1) {
        iVar4 = __ismbblead((int)(char)bVar3);
        if (param_3 == (byte *)0x0) {
          if (iVar4 != 0) {
            pbVar6 = pbVar6 + 1;
            *param_5 = *param_5 + 1;
          }
        }
        else {
          if (iVar4 != 0) {
            *param_3 = *pbVar6;
            param_3 = param_3 + 1;
            pbVar6 = pbVar6 + 1;
            *param_5 = *param_5 + 1;
          }
          *param_3 = *pbVar6;
          param_3 = param_3 + 1;
        }
        *param_5 = *param_5 + 1;
      }
      pbVar7 = pbVar6 + 1;
    }
    if (param_3 != (byte *)0x0) {
      *param_3 = 0;
      param_3 = param_3 + 1;
    }
    *param_5 = *param_5 + 1;
  }
  if (param_2 != (byte **)0x0) {
    *param_2 = (byte *)0x0;
  }
  *param_4 = *param_4 + 1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_0042face(void)

{
  rsize_t _SizeInBytes;
  char cVar1;
  code *pcVar2;
  size_t sVar3;
  uint *_Dst;
  errno_t eVar4;
  undefined4 uVar5;
  char *pcVar6;
  int iVar7;
  uint **ppuVar8;
  
  if (_DAT_004592bc == 0) {
    ___initmbctable();
  }
  iVar7 = 0;
  pcVar6 = DAT_00458480;
  if (DAT_00458480 != (char *)0x0) {
    for (; *pcVar6 != '\0'; pcVar6 = pcVar6 + sVar3 + 1) {
      if (*pcVar6 != '=') {
        iVar7 = iVar7 + 1;
      }
      sVar3 = _strlen(pcVar6);
    }
    DAT_0045845c = (uint **)FUN_00403d40(iVar7 + 1,4);
    if (DAT_0045845c != (uint **)0x0) {
      cVar1 = *DAT_00458480;
      ppuVar8 = DAT_0045845c;
      pcVar6 = DAT_00458480;
      do {
        if (cVar1 == '\0') {
          FUN_00403c10(DAT_00458480);
          DAT_00458480 = (char *)0x0;
          *ppuVar8 = (uint *)0x0;
          _DAT_004592c0 = 1;
          return 0;
        }
        sVar3 = _strlen(pcVar6);
        _SizeInBytes = sVar3 + 1;
        if (*pcVar6 != '=') {
          _Dst = FUN_00403d40(_SizeInBytes,1);
          *ppuVar8 = _Dst;
          if (_Dst == (uint *)0x0) {
            FUN_00403c10(DAT_0045845c);
            DAT_0045845c = (uint **)0x0;
            return 0xffffffff;
          }
          eVar4 = _strcpy_s((char *)_Dst,_SizeInBytes,pcVar6);
          if (eVar4 != 0) {
            __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
            pcVar2 = (code *)swi(3);
            uVar5 = (*pcVar2)();
            return uVar5;
          }
          ppuVar8 = ppuVar8 + 1;
        }
        pcVar6 = pcVar6 + _SizeInBytes;
        cVar1 = *pcVar6;
      } while( true );
    }
  }
  return 0xffffffff;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_0042fbaf(undefined4 param_1)

{
  _DAT_00458720 = param_1;
  return;
}



// Library Function - Single Match
//  __set_error_mode
// 
// Library: Visual Studio 2012 Release

int __cdecl __set_error_mode(int _Mode)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = DAT_00458e80;
  if (_Mode < 0) {
LAB_0042fbe7:
    piVar2 = __errno();
    *piVar2 = 0x16;
    FUN_00429bfe();
    return -1;
  }
  if (_Mode < 3) {
    DAT_00458e80 = _Mode;
  }
  else if (_Mode != 3) goto LAB_0042fbe7;
  return iVar1;
}



// Library Function - Single Match
//  ___security_init_cookie
// 
// Library: Visual Studio 2015 Release

void __cdecl ___security_init_cookie(void)

{
  DWORD DVar1;
  uint local_18;
  uint local_14;
  _FILETIME local_10;
  uint local_8;
  
  local_10.dwLowDateTime = 0;
  local_10.dwHighDateTime = 0;
  if ((DAT_00447ff8 == 0xbb40e64e) || ((DAT_00447ff8 & 0xffff0000) == 0)) {
    GetSystemTimeAsFileTime(&local_10);
    local_8 = local_10.dwHighDateTime ^ local_10.dwLowDateTime;
    DVar1 = GetCurrentThreadId();
    local_8 = local_8 ^ DVar1;
    DVar1 = GetCurrentProcessId();
    local_8 = local_8 ^ DVar1;
    QueryPerformanceCounter((LARGE_INTEGER *)&local_18);
    DAT_00447ff8 = local_14 ^ local_18 ^ local_8 ^ (uint)&local_8;
    if (DAT_00447ff8 == 0xbb40e64e) {
      DAT_00447ff8 = 0xbb40e64f;
    }
    else if ((DAT_00447ff8 & 0xffff0000) == 0) {
      DAT_00447ff8 = DAT_00447ff8 | (DAT_00447ff8 | 0x4711) << 0x10;
    }
    DAT_00447ffc = ~DAT_00447ff8;
  }
  else {
    DAT_00447ffc = ~DAT_00447ff8;
  }
  return;
}



LPSTR FUN_0042fc98(void)

{
  WCHAR WVar1;
  LPWCH lpWideCharStr;
  LPSTR lpMultiByteStr;
  int iVar2;
  WCHAR *pWVar3;
  int cchWideChar;
  WCHAR *pWVar4;
  
  lpWideCharStr = GetEnvironmentStringsW();
  lpMultiByteStr = (LPSTR)0x0;
  if (lpWideCharStr != (LPWCH)0x0) {
    WVar1 = *lpWideCharStr;
    pWVar3 = lpWideCharStr;
    while (WVar1 != L'\0') {
      do {
        pWVar4 = pWVar3;
        pWVar3 = pWVar4 + 1;
      } while (*pWVar3 != L'\0');
      pWVar3 = pWVar4 + 2;
      WVar1 = *pWVar3;
    }
    cchWideChar = ((int)pWVar3 - (int)lpWideCharStr >> 1) + 1;
    iVar2 = WideCharToMultiByte(0,0,lpWideCharStr,cchWideChar,(LPSTR)0x0,0,(LPCSTR)0x0,(LPBOOL)0x0);
    if ((iVar2 == 0) || (lpMultiByteStr = (LPSTR)FUN_00403c30(iVar2), lpMultiByteStr == (LPSTR)0x0))
    {
      FreeEnvironmentStringsW(lpWideCharStr);
      lpMultiByteStr = (LPSTR)0x0;
    }
    else {
      iVar2 = WideCharToMultiByte(0,0,lpWideCharStr,cchWideChar,lpMultiByteStr,iVar2,(LPCSTR)0x0,
                                  (LPBOOL)0x0);
      if (iVar2 == 0) {
        FUN_00403c10(lpMultiByteStr);
        lpMultiByteStr = (LPSTR)0x0;
      }
      FreeEnvironmentStringsW(lpWideCharStr);
    }
  }
  return lpMultiByteStr;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __wincmdln
// 
// Library: Visual Studio 2012 Release

byte * __wincmdln(void)

{
  byte bVar1;
  bool bVar2;
  int iVar3;
  byte *pbVar4;
  
  bVar2 = false;
  if (_DAT_004592bc == 0) {
    ___initmbctable();
  }
  pbVar4 = DAT_004592ac;
  if (DAT_004592ac == (byte *)0x0) {
    pbVar4 = &DAT_0043b3d2;
  }
  do {
    bVar1 = *pbVar4;
    if (bVar1 < 0x21) {
      if (bVar1 == 0) {
        return pbVar4;
      }
      if (!bVar2) {
        for (; (*pbVar4 != 0 && (*pbVar4 < 0x21)); pbVar4 = pbVar4 + 1) {
        }
        return pbVar4;
      }
    }
    if (bVar1 == 0x22) {
      bVar2 = !bVar2;
    }
    iVar3 = __ismbblead((uint)bVar1);
    if (iVar3 != 0) {
      pbVar4 = pbVar4 + 1;
    }
    pbVar4 = pbVar4 + 1;
  } while( true );
}



ushort __cdecl FUN_0042fd84(int param_1,ushort param_2,pthreadlocinfo *param_3)

{
  ushort uVar1;
  undefined2 extraout_var;
  int iVar2;
  pthreadlocinfo local_1c [2];
  int local_14;
  char local_10;
  CHAR local_c;
  CHAR local_b;
  undefined local_a;
  ushort local_8 [2];
  
  FUN_00427078(local_1c,param_3);
  if (param_1 + 1U < 0x101) {
    local_8[0] = local_1c[0]->pctype[param_1];
  }
  else {
    uVar1 = FUN_00428fd5(param_1 >> 8 & 0xff,local_1c);
    if (CONCAT22(extraout_var,uVar1) == 0) {
      local_b = '\0';
      iVar2 = 1;
      local_c = (CHAR)param_1;
    }
    else {
      local_a = 0;
      iVar2 = 2;
      local_c = (CHAR)((uint)param_1 >> 8);
      local_b = (CHAR)param_1;
    }
    iVar2 = FUN_00437570(local_1c,1,&local_c,iVar2,local_8,local_1c[0]->lc_codepage,1);
    if (iVar2 == 0) {
      if (local_10 != '\0') {
        *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
      }
      return 0;
    }
  }
  if (local_10 != '\0') {
    *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
  }
  return local_8[0] & param_2;
}



void __cdecl FUN_0042fe35(uint *param_1,char *param_2,pthreadlocinfo *param_3,char **param_4)

{
  undefined extraout_DL;
  undefined in_stack_ffffffd0;
  int local_28;
  char local_24;
  char *local_1c;
  uint *local_18;
  ushort local_14 [6];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  local_18 = param_1;
  FUN_00427078(&stack0xffffffd0,param_3);
  FUN_004320a1(local_14,&local_1c,param_2,0,0,0,0,(int *)&stack0xffffffd0);
  if (param_4 != (char **)0x0) {
    *param_4 = local_1c;
  }
  FUN_00437e32(local_14,local_18);
  if (local_24 != '\0') {
    *(uint *)(local_28 + 0x70) = *(uint *)(local_28 + 0x70) & 0xfffffffd;
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,extraout_DL,in_stack_ffffffd0);
  return;
}



void __cdecl FUN_0042fed9(uint *param_1,char *param_2,pthreadlocinfo *param_3)

{
  undefined extraout_DL;
  undefined in_stack_ffffffd4;
  int local_24;
  char local_20;
  char *local_1c;
  undefined4 local_18;
  ushort local_14 [6];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  FUN_00427078(&stack0xffffffd4,param_3);
  local_18 = FUN_004320a1(local_14,&local_1c,param_2,0,0,0,0,(int *)&stack0xffffffd4);
  FUN_004378c0(local_14,param_1);
  if (local_20 != '\0') {
    *(uint *)(local_24 + 0x70) = *(uint *)(local_24 + 0x70) & 0xfffffffd;
  }
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,extraout_DL,in_stack_ffffffd4);
  return;
}



void __cdecl FUN_0042ff67(uint *param_1,char *param_2,pthreadlocinfo *param_3)

{
  FUN_0042fe35(param_1,param_2,param_3,(char **)0x0);
  return;
}



// Library Function - Single Match
//  __aulldvrm
// 
// Library: Visual Studio

undefined8 __aulldvrm(uint param_1,uint param_2,uint param_3,uint param_4)

{
  ulonglong uVar1;
  longlong lVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  
  uVar3 = param_1;
  uVar8 = param_4;
  uVar6 = param_2;
  uVar9 = param_3;
  if (param_4 == 0) {
    uVar3 = param_2 / param_3;
    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) /
                 (ulonglong)param_3);
  }
  else {
    do {
      uVar5 = uVar8 >> 1;
      uVar9 = uVar9 >> 1 | (uint)((uVar8 & 1) != 0) << 0x1f;
      uVar7 = uVar6 >> 1;
      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) << 0x1f;
      uVar8 = uVar5;
      uVar6 = uVar7;
    } while (uVar5 != 0);
    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar9;
    iVar4 = (int)uVar1;
    lVar2 = (ulonglong)param_3 * (uVar1 & 0xffffffff);
    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);
    uVar8 = uVar3 + iVar4 * param_4;
    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar8)) ||
       ((param_2 <= uVar8 && (param_1 < (uint)lVar2)))) {
      iVar4 = iVar4 + -1;
    }
    uVar3 = 0;
  }
  return CONCAT44(uVar3,iVar4);
}



void __cdecl FUN_00430015(uint *param_1,char *param_2,int *param_3)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  char *local_24;
  char *local_20;
  uint local_1c;
  uint local_18;
  ushort local_14 [6];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  uVar3 = 0;
  local_20 = param_2;
  uVar1 = FUN_004320a1(local_14,&local_24,param_2,0,0,0,0,param_3);
  if ((uVar1 & 4) == 0) {
    iVar2 = FUN_004378c0(local_14,&local_1c);
    if (((uVar1 & 2) != 0) || (iVar2 == 1)) {
      uVar3 = 0x80;
    }
    if (((uVar1 & 1) != 0) || (iVar2 == 2)) {
      uVar3 = uVar3 | 0x100;
    }
  }
  else {
    uVar3 = 0x200;
    local_18 = 0;
    local_1c = 0;
  }
  *param_1 = uVar3;
  param_1[1] = (int)local_24 - (int)local_20;
  param_1[4] = local_1c;
  param_1[5] = local_18;
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,(char)param_1,(char)param_1);
  return;
}



// Library Function - Single Match
//  __aulldiv
// 
// Library: Visual Studio

undefined8 __aulldiv(uint param_1,uint param_2,uint param_3,uint param_4)

{
  ulonglong uVar1;
  longlong lVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  
  uVar3 = param_1;
  uVar8 = param_4;
  uVar6 = param_2;
  uVar9 = param_3;
  if (param_4 == 0) {
    uVar3 = param_2 / param_3;
    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) /
                 (ulonglong)param_3);
  }
  else {
    do {
      uVar5 = uVar8 >> 1;
      uVar9 = uVar9 >> 1 | (uint)((uVar8 & 1) != 0) << 0x1f;
      uVar7 = uVar6 >> 1;
      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) << 0x1f;
      uVar8 = uVar5;
      uVar6 = uVar7;
    } while (uVar5 != 0);
    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar9;
    iVar4 = (int)uVar1;
    lVar2 = (ulonglong)param_3 * (uVar1 & 0xffffffff);
    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);
    uVar8 = uVar3 + iVar4 * param_4;
    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar8)) ||
       ((param_2 <= uVar8 && (param_1 < (uint)lVar2)))) {
      iVar4 = iVar4 + -1;
    }
    uVar3 = 0;
  }
  return CONCAT44(uVar3,iVar4);
}



undefined4 __cdecl
FUN_00430128(size_t param_1,size_t *param_2,uint **param_3,uint *param_4,undefined4 *param_5)

{
  size_t sVar1;
  uint *puVar2;
  undefined4 uVar3;
  
  sVar1 = *param_2;
  if (param_1 == sVar1) {
    if (*param_3 == param_4) {
      puVar2 = FUN_00403d40(sVar1,2);
      *param_3 = puVar2;
      if (puVar2 != (uint *)0x0) {
        *param_5 = 1;
        FID_conflict__memcpy(*param_3,param_4,*param_2);
LAB_0043017e:
        *param_2 = *param_2 << 1;
        goto LAB_00430180;
      }
    }
    else {
      puVar2 = FUN_00403cc0(*param_3,sVar1,2);
      if (puVar2 != (uint *)0x0) {
        *param_3 = puVar2;
        goto LAB_0043017e;
      }
    }
    uVar3 = 0;
  }
  else {
LAB_00430180:
    uVar3 = 1;
  }
  return uVar3;
}



uint __cdecl FUN_00430187(byte param_1)

{
  int iVar1;
  uint uVar2;
  
  iVar1 = _isdigit((uint)param_1);
  uVar2 = (uint)(char)param_1;
  if (iVar1 == 0) {
    uVar2 = (uVar2 & 0xffffffdf) - 7;
  }
  return uVar2;
}



// Library Function - Single Match
//  __inc
// 
// Library: Visual Studio 2012 Release

uint __cdecl __inc(FILE *param_1)

{
  int *piVar1;
  uint uVar2;
  
  piVar1 = &param_1->_cnt;
  *piVar1 = *piVar1 + -1;
  if (*piVar1 < 0) {
    uVar2 = FUN_0042b172(param_1);
  }
  else {
    uVar2 = (uint)(byte)*param_1->_ptr;
    param_1->_ptr = param_1->_ptr + 1;
  }
  return uVar2;
}



// WARNING: Could not reconcile some variable overlaps

void __cdecl FUN_004301ca(FILE *param_1,byte *param_2,pthreadlocinfo *param_3,int **param_4)

{
  byte bVar1;
  FILE *pFVar2;
  int *piVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  code *pcVar7;
  int iVar8;
  uint uVar9;
  byte extraout_DL;
  byte extraout_DL_00;
  byte extraout_DL_01;
  byte extraout_DL_02;
  byte extraout_DL_03;
  byte extraout_DL_04;
  byte extraout_DL_05;
  byte extraout_DL_06;
  byte extraout_DL_07;
  byte extraout_DL_08;
  byte extraout_DL_09;
  byte extraout_DL_10;
  byte bVar10;
  byte extraout_DL_11;
  byte extraout_DL_12;
  byte extraout_DL_13;
  byte extraout_DL_14;
  byte extraout_DL_15;
  byte bVar11;
  undefined *puVar12;
  uint extraout_EDX;
  uint extraout_EDX_00;
  uint extraout_EDX_01;
  uint extraout_EDX_02;
  uint extraout_EDX_03;
  uint extraout_EDX_04;
  uint extraout_EDX_05;
  uint extraout_EDX_06;
  uint extraout_EDX_07;
  uint extraout_EDX_08;
  uint extraout_EDX_09;
  uint extraout_EDX_10;
  uint extraout_EDX_11;
  uint extraout_EDX_12;
  uint extraout_EDX_13;
  uint extraout_EDX_14;
  uint extraout_EDX_15;
  uint extraout_EDX_16;
  uint extraout_EDX_17;
  uint extraout_EDX_18;
  uint extraout_EDX_19;
  uint extraout_EDX_20;
  uint extraout_EDX_21;
  char cVar13;
  char cVar15;
  uint uVar14;
  int iVar16;
  size_t sVar17;
  size_t sVar18;
  uint uVar19;
  byte *pbVar20;
  byte *pbVar21;
  bool bVar22;
  ulonglong uVar23;
  longlong lVar24;
  uint *puVar25;
  undefined uVar26;
  pthreadlocinfo in_stack_fffffe00;
  int local_1f8;
  char local_1f4;
  int **local_1f0;
  int **local_1ec;
  undefined4 local_1e8;
  byte local_1e4;
  undefined local_1e3;
  int local_1e0;
  size_t local_1dc;
  int local_1d8;
  int local_1d4;
  int local_1d0;
  uint local_1cc;
  int *local_1c8;
  int local_1c4;
  uint local_1c0;
  byte *local_1bc;
  uint *local_1b8;
  byte local_1b1;
  uint local_1b0;
  char local_1aa;
  byte local_1a9;
  uint local_1a8;
  uint local_1a4;
  int local_1a0;
  char local_19a;
  char local_199;
  FILE *local_198;
  int local_194;
  uint local_190;
  char local_18c;
  char local_18b;
  char local_18a;
  char local_189;
  uint local_188 [88];
  uint local_28 [2];
  undefined local_1d;
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  uVar14 = 0;
  local_1ec = param_4;
  local_1b8 = local_188;
  local_198 = param_1;
  local_1dc = 0x15e;
  local_1d8 = 0;
  local_1cc = 0;
  local_1b0 = 0;
  local_1e8 = 0;
  local_1a4 = 0;
  local_1f0 = (int **)0x0;
  if ((param_2 == (byte *)0x0) || (param_1 == (FILE *)0x0)) {
    piVar3 = __errno();
    uVar26 = SUB41(in_stack_fffffe00,0);
    *piVar3 = 0x16;
    FUN_00429bfe();
    lVar24 = CONCAT44(local_1b0,local_1cc);
    bVar11 = extraout_DL;
    goto LAB_00431309;
  }
  if ((*(byte *)&param_1->_flag & 0x40) == 0) {
    uVar4 = __fileno(param_1);
    if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {
      puVar12 = &DAT_00448240;
    }
    else {
      puVar12 = (undefined *)((uVar4 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)uVar4 >> 5]);
    }
    if ((puVar12[0x24] & 0x7f) == 0) {
      if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {
        puVar12 = &DAT_00448240;
      }
      else {
        puVar12 = (undefined *)((uVar4 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)uVar4 >> 5]);
      }
      if ((puVar12[0x24] & 0x80) == 0) goto LAB_004302cb;
    }
    piVar3 = __errno();
    uVar26 = SUB41(in_stack_fffffe00,0);
    *piVar3 = 0x16;
    FUN_00429bfe();
    lVar24 = CONCAT44(local_1b0,local_1cc);
    bVar11 = extraout_DL_00;
    goto LAB_00431309;
  }
LAB_004302cb:
  FUN_00427078(&stack0xfffffe00,param_3);
  lVar24 = CONCAT44(local_1b0,local_1cc);
  bVar10 = *param_2;
  iVar16 = 0;
  local_18b = '\0';
  local_194 = 0;
  local_1a0 = 0;
  local_1d4 = 0;
  bVar11 = extraout_DL_01;
  if (bVar10 == 0) {
LAB_004312f3:
    uVar26 = SUB41(in_stack_fffffe00,0);
  }
  else {
LAB_004302ff:
    iVar5 = _isspace((uint)bVar10);
    pFVar2 = local_198;
    local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
    local_1cc = (uint)lVar24;
    if (iVar5 != 0) {
      local_1a0 = iVar16 + -1;
      uVar4 = __whiteout(&local_1a0,local_198);
      local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
      local_1cc = (uint)lVar24;
      pbVar20 = param_2;
      if (uVar4 != 0xffffffff) {
        FUN_004383a4(uVar4,pFVar2);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
      }
      do {
        pbVar20 = pbVar20 + 1;
        iVar16 = _isspace((uint)*pbVar20);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
      } while (iVar16 != 0);
      local_194 = local_1a0;
      iVar16 = local_1a0;
      bVar11 = extraout_DL_02;
      goto LAB_0043128a;
    }
    if (*param_2 == 0x25) {
      if (param_2[1] == 0x25) {
        if ((true) && (param_2[1] == 0x25)) {
          param_2 = param_2 + 1;
        }
        goto LAB_00431223;
      }
      local_1d0 = 0;
      uVar4 = 0;
      local_1b1 = 0;
      uVar14 = 0x100;
      local_1c0 = 0;
      local_1c4 = 0;
      local_1a9 = 0;
      local_1aa = '\0';
      local_18a = '\0';
      local_19a = '\0';
      local_189 = '\0';
      local_1e0 = 0;
      do {
        pbVar21 = param_2 + 1;
        local_1c8 = (int *)(uint)*pbVar21;
        iVar16 = _isdigit((int)local_1c8);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        pbVar20 = pbVar21;
        if (iVar16 == 0) {
          cVar13 = (char)uVar14;
          cVar15 = (char)(uVar14 >> 8);
          if ((int)local_1c8 < 0x4f) {
            if (local_1c8 != (int *)0x4e) {
              if (local_1c8 == (int *)0x2a) {
                local_18a = local_18a + '\x01';
              }
              else if (local_1c8 != (int *)0x46) {
                if (local_1c8 == (int *)0x49) {
                  bVar11 = param_2[2];
                  if ((bVar11 == 0x36) && (pbVar20 = param_2 + 3, *pbVar20 == 0x34))
                  goto LAB_00430477;
                  if ((((bVar11 != 0x33) || (pbVar20 = param_2 + 3, *pbVar20 != 0x32)) &&
                      (pbVar20 = pbVar21, bVar11 != 100)) &&
                     (((bVar11 != 0x69 && (bVar11 != 0x6f)) &&
                      ((bVar11 != 0x78 && (bVar11 != 0x58)))))) goto LAB_004304ea;
                }
                else if (local_1c8 == (int *)0x4c) {
                  uVar14 = (uint)CONCAT11(cVar15 + '\x01',cVar13);
                }
                else {
LAB_004304ea:
                  uVar14 = uVar14 & 0xffffff00 | (uint)(byte)(cVar13 + 1);
                  pbVar20 = pbVar21;
                }
              }
            }
          }
          else if (local_1c8 == (int *)0x68) {
            uVar14 = (uint)CONCAT11(cVar15 + -1,cVar13);
            local_189 = local_189 + -1;
          }
          else {
            if (local_1c8 == (int *)0x6c) {
              pbVar20 = param_2 + 2;
              if (*pbVar20 == 0x6c) {
LAB_00430477:
                local_1e0 = local_1e0 + 1;
                lVar24 = 0;
                goto LAB_004303e9;
              }
              uVar14 = (uint)CONCAT11(cVar15 + '\x01',cVar13);
            }
            else if (local_1c8 != (int *)0x77) goto LAB_004304ea;
            local_189 = local_189 + '\x01';
            pbVar20 = pbVar21;
          }
        }
        else {
          local_1c4 = local_1c4 + 1;
          uVar4 = ((int)local_1c8 - 0x30U) + uVar4 * 10;
        }
LAB_004303e9:
        param_2 = pbVar20;
      } while ((char)uVar14 == '\0');
      local_199 = (char)(uVar14 >> 8);
      if (local_18a == '\0') {
        local_1f0 = local_1ec;
        local_1c8 = *local_1ec;
        local_1ec = local_1ec + 1;
      }
      else {
        local_1c8 = (int *)0x0;
      }
      local_18c = '\0';
      if ((local_189 == '\0') && ((*pbVar20 == 0x53 || (local_189 = -1, *pbVar20 == 0x43)))) {
        local_189 = '\x01';
      }
      local_1a8 = *pbVar20 | 0x20;
      iVar16 = local_194;
      local_1bc = pbVar20;
      local_190 = uVar4;
      if (local_1a8 != 0x6e) {
        if ((local_1a8 == 99) || (local_1a8 == 0x7b)) {
          iVar16 = local_194 + 1;
          local_1a0 = iVar16;
          local_194 = iVar16;
          uVar14 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          bVar11 = extraout_DL_04;
        }
        else {
          uVar14 = __whiteout(&local_1a0,local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          local_194 = local_1a0;
          iVar16 = local_1a0;
          bVar11 = extraout_DL_03;
        }
        local_1a4 = uVar14;
        if (uVar14 == 0xffffffff) goto LAB_004312c5;
      }
      pFVar2 = local_198;
      uVar14 = local_1a4;
      uVar4 = local_190;
      if ((local_1c4 != 0) && (local_190 == 0)) goto LAB_004312b2;
      if ((int)local_1a8 < 0x70) {
        if (local_1a8 == 0x6f) {
LAB_00430eba:
          if (local_1a4 == 0x2d) {
            local_1aa = '\x01';
          }
          else {
            cVar13 = local_18c;
            if (local_1a4 != 0x2b) goto LAB_00430f0b;
          }
          local_190 = local_190 - 1;
          if ((local_190 == 0) && (local_1c4 != 0)) {
            uVar4 = local_190;
            cVar13 = '\x01';
          }
          else {
            iVar16 = iVar16 + 1;
            local_1a0 = iVar16;
            local_194 = iVar16;
            local_1a4 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_13;
            cVar13 = local_18c;
          }
          goto LAB_00430f0b;
        }
        if (local_1a8 == 99) {
          if (local_1c4 == 0) {
            local_190 = local_190 + 1;
            local_1c4 = 1;
          }
LAB_00430a1c:
          pbVar21 = local_1bc;
          if ('\0' < local_189) {
            local_19a = '\x01';
          }
LAB_00430a2d:
          local_1bc = pbVar21;
          piVar3 = local_1c8;
          local_1a0 = local_194 + -1;
          local_194 = local_1a0;
          uVar9 = local_1a8;
          if (uVar14 != 0xffffffff) {
            FUN_004383a4(uVar14,local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar9 = local_1a8;
          }
          do {
            if ((local_1c4 != 0) &&
               (uVar4 = local_190 - 1, bVar22 = local_190 == 0, local_190 = uVar4, bVar22))
            goto LAB_00430e62;
            local_1a0 = local_194 + 1;
            local_194 = local_1a0;
            uVar14 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_07;
            local_1a4 = uVar14;
            if (uVar14 == 0xffffffff) goto LAB_00430e3c;
            bVar11 = (byte)uVar14;
            if (uVar9 != 99) {
              if (uVar9 == 0x73) {
                if ((8 < (int)uVar14) && ((int)uVar14 < 0xe)) goto LAB_00430e3c;
                if (uVar14 != 0x20) goto LAB_00430afa;
              }
              if ((uVar9 != 0x7b) ||
                 (uVar4 = 1 << (bVar11 & 7),
                 ((int)(char)(*(byte *)((int)local_28 + ((int)uVar14 >> 3)) ^ local_1a9) & uVar4) ==
                 0)) goto LAB_00430e3c;
            }
LAB_00430afa:
            if (local_18a == '\0') {
              if (local_19a == '\0') {
                *(byte *)local_1c8 = bVar11;
                local_1c8 = (int *)((int)local_1c8 + 1);
              }
              else {
                local_1e4 = bVar11;
                iVar16 = FUN_0042900f(uVar14 & 0xff);
                local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
                local_1cc = (uint)lVar24;
                if (iVar16 != 0) {
                  local_1a0 = local_194 + 1;
                  local_194 = local_1a0;
                  uVar4 = __inc(local_198);
                  local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
                  local_1cc = (uint)lVar24;
                  local_1e3 = (undefined)uVar4;
                }
                local_1e8 = 0x3f;
                FUN_004384f4((LPWSTR)&local_1e8,&local_1e4,in_stack_fffffe00->mb_cur_max,
                             (pthreadlocinfo *)&stack0xfffffe00);
                local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
                local_1cc = (uint)lVar24;
                *(undefined2 *)local_1c8 = (undefined2)local_1e8;
                local_1c8 = (int *)((int)local_1c8 + 2);
              }
            }
            else {
              piVar3 = (int *)((int)piVar3 + 1);
            }
          } while( true );
        }
        if (local_1a8 == 100) goto LAB_00430eba;
        if ((int)local_1a8 < 0x65) {
LAB_00430bc5:
          if (*pbVar20 != local_1a4) goto LAB_004312b2;
          local_18b = local_18b + -1;
          if (local_18a == '\0') {
            local_1ec = local_1f0;
          }
          goto LAB_004309f3;
        }
        if (0x67 < (int)local_1a8) {
          if (local_1a8 == 0x69) {
            local_1a8 = 100;
            goto LAB_00430ce0;
          }
          if (local_1a8 != 0x6e) goto LAB_00430bc5;
          if (local_18a != '\0') goto LAB_004309f3;
          goto LAB_004311d5;
        }
        sVar17 = 0;
        if (local_1a4 == 0x2d) {
          sVar17 = 1;
          *(undefined *)local_1b8 = 0x2d;
LAB_00430651:
          local_190 = local_190 - 1;
          iVar16 = local_194 + 1;
          local_1a4 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
        }
        else {
          iVar16 = local_194;
          if (local_1a4 == 0x2b) goto LAB_00430651;
        }
        uVar14 = local_1a4;
        if (local_1c4 == 0) {
          local_190 = 0xffffffff;
        }
        iVar5 = _isdigit(local_1a4 & 0xff);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        uVar4 = extraout_EDX;
        while ((iVar5 != 0 &&
               (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22))) {
          local_1c0 = local_1c0 + 1;
          *(byte *)(sVar17 + (int)local_1b8) = (byte)uVar14;
          sVar17 = sVar17 + 1;
          iVar5 = FUN_00430128(sVar17,&local_1dc,&local_1b8,local_188,&local_1d8);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          bVar11 = extraout_DL_05;
          if (iVar5 == 0) goto LAB_004312c5;
          iVar16 = iVar16 + 1;
          uVar14 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          local_1a4 = uVar14;
          iVar5 = _isdigit(uVar14 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_00;
        }
        local_1a9 = *in_stack_fffffe00->lconv->decimal_point;
        if ((local_1a9 == (byte)uVar14) &&
           (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22)) {
          uVar14 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          *(byte *)(sVar17 + (int)local_1b8) = local_1a9;
          sVar17 = sVar17 + 1;
          local_1a4 = uVar14;
          iVar5 = FUN_00430128(sVar17,&local_1dc,&local_1b8,local_188,&local_1d8);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          bVar11 = extraout_DL_06;
          if (iVar5 == 0) goto LAB_004312c5;
          iVar5 = _isdigit(uVar14 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_01;
          while ((iVar16 = iVar16 + 1, iVar5 != 0 &&
                 (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22))) {
            local_1c0 = local_1c0 + 1;
            *(char *)(sVar17 + (int)local_1b8) = (char)uVar14;
            sVar17 = sVar17 + 1;
            iVar5 = FUN_00430128(sVar17,&local_1dc,&local_1b8,local_188,&local_1d8);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            bVar11 = extraout_DL_07;
            if (iVar5 == 0) goto LAB_004312c5;
            uVar14 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            local_1a4 = uVar14;
            iVar5 = _isdigit(uVar14 & 0xff);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_02;
          }
        }
        if ((local_1c0 != 0) &&
           (((uVar14 == 0x65 || (uVar14 == 0x45)) &&
            (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22)))) {
          *(undefined *)(sVar17 + (int)local_1b8) = 0x65;
          sVar18 = sVar17 + 1;
          iVar5 = FUN_00430128(sVar18,&local_1dc,&local_1b8,local_188,&local_1d8);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          bVar11 = extraout_DL_08;
          if (iVar5 == 0) goto LAB_004312c5;
          uVar14 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          iVar5 = iVar16 + 1;
          local_1a4 = uVar14;
          if (uVar14 == 0x2d) {
            *(undefined *)(sVar18 + (int)local_1b8) = 0x2d;
            sVar18 = sVar17 + 2;
            iVar6 = FUN_00430128(sVar18,&local_1dc,&local_1b8,local_188,&local_1d8);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            bVar11 = extraout_DL_09;
            if (iVar6 == 0) goto LAB_004312c5;
LAB_004308ca:
            sVar17 = sVar18;
            if (local_190 == 0) {
              local_190 = 0;
            }
            else {
              local_190 = local_190 - 1;
              uVar14 = __inc(local_198);
              local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
              local_1cc = (uint)lVar24;
              iVar5 = iVar16 + 2;
              local_1a4 = uVar14;
            }
          }
          else {
            sVar17 = sVar18;
            if (uVar14 == 0x2b) goto LAB_004308ca;
          }
          iVar16 = iVar5;
          iVar5 = _isdigit(uVar14 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_03;
          while ((iVar5 != 0 &&
                 (uVar9 = local_190 - 1, bVar22 = local_190 != 0, local_190 = uVar9, bVar22))) {
            local_1c0 = local_1c0 + 1;
            *(char *)(sVar17 + (int)local_1b8) = (char)uVar14;
            sVar17 = sVar17 + 1;
            iVar5 = FUN_00430128(sVar17,&local_1dc,&local_1b8,local_188,&local_1d8);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            bVar11 = extraout_DL_10;
            if (iVar5 == 0) goto LAB_004312c5;
            iVar16 = iVar16 + 1;
            uVar14 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            local_1a4 = uVar14;
            iVar5 = _isdigit(uVar14 & 0xff);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_04;
          }
        }
        local_1a0 = iVar16 + -1;
        local_194 = local_1a0;
        if (uVar14 != 0xffffffff) {
          FUN_004383a4(uVar14,local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_05;
        }
        bVar11 = (byte)uVar4;
        if (local_1c0 != 0) {
          pbVar20 = local_1bc;
          if (local_18a == '\0') {
            puVar12 = &stack0xfffffe00;
            local_1d4 = local_1d4 + 1;
            *(undefined *)(sVar17 + (int)local_1b8) = 0;
            iVar16 = local_199 + -1;
            piVar3 = local_1c8;
            puVar25 = local_1b8;
            pcVar7 = (code *)DecodePointer(PTR_FUN_004482bc);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            (*pcVar7)(iVar16,piVar3,puVar25,puVar12);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_06;
            pbVar20 = local_1bc;
          }
          goto LAB_004309f3;
        }
        goto LAB_004312c5;
      }
      if (local_1a8 == 0x70) {
        local_199 = '\x01';
        goto LAB_00430eba;
      }
      if (local_1a8 == 0x73) goto LAB_00430a1c;
      if (local_1a8 == 0x75) goto LAB_00430eba;
      if (local_1a8 != 0x78) {
        if (local_1a8 != 0x7b) goto LAB_00430bc5;
        if ('\0' < local_189) {
          local_19a = '\x01';
        }
        pbVar21 = pbVar20 + 1;
        if (*pbVar21 == 0x5e) {
          pbVar21 = pbVar20 + 2;
          local_1a9 = 0xff;
        }
        FUN_00427870(local_28,0,0x20);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        bVar11 = local_1b1;
        if (*pbVar21 == 0x5d) {
          local_1d = 0x20;
          pbVar21 = pbVar21 + 1;
          bVar11 = 0x5d;
        }
        while (bVar10 = *pbVar21, bVar10 != 0x5d) {
          if (((bVar10 == 0x2d) && (bVar11 != 0)) && (bVar1 = pbVar21[1], bVar1 != 0x5d)) {
            local_1bc = pbVar21 + 2;
            bVar10 = bVar1;
            if (bVar11 < bVar1) {
              bVar10 = bVar11;
              bVar11 = bVar1;
            }
            uVar4 = (uint)bVar11 << 8;
            if (bVar10 < bVar11) {
              uVar19 = (uint)bVar10;
              uVar4 = (uint)CONCAT11(bVar11,bVar11 - bVar10);
              uVar9 = (uint)(byte)(bVar11 - bVar10);
              do {
                uVar4 = uVar4 & 0xffffff00;
                pbVar20 = (byte *)((int)local_28 + (uVar19 >> 3));
                *pbVar20 = *pbVar20 | '\x01' << ((byte)uVar19 & 7);
                uVar19 = uVar19 + 1;
                uVar9 = uVar9 - 1;
              } while (uVar9 != 0);
            }
            pbVar20 = (byte *)((int)local_28 + (uVar4 >> 0xb));
            *pbVar20 = *pbVar20 | '\x01' << ((byte)(uVar4 >> 8) & 7);
            pbVar21 = local_1bc;
            bVar11 = 0;
          }
          else {
            pbVar20 = (byte *)((int)local_28 + (uint)(bVar10 >> 3));
            *pbVar20 = *pbVar20 | '\x01' << (bVar10 & 7);
            pbVar21 = pbVar21 + 1;
            bVar11 = bVar10;
            local_1b1 = bVar10;
          }
        }
        if (true) goto LAB_00430a2d;
        goto LAB_004312c5;
      }
LAB_00430ce0:
      if (local_1a4 == 0x2d) {
        local_1aa = '\x01';
LAB_00430cf3:
        local_190 = local_190 - 1;
        if ((local_190 == 0) && (local_1c4 != 0)) {
          local_18c = '\x01';
          uVar4 = local_190;
        }
        else {
          iVar16 = iVar16 + 1;
          local_1a0 = iVar16;
          local_194 = iVar16;
          local_1a4 = __inc(local_198);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_09;
        }
      }
      else if (local_1a4 == 0x2b) goto LAB_00430cf3;
      cVar13 = local_18c;
      if (local_1a4 == 0x30) {
        iVar5 = iVar16 + 1;
        local_1a0 = iVar5;
        local_194 = iVar5;
        local_1a4 = __inc(pFVar2);
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        if (((char)local_1a4 == 'x') || ((char)local_1a4 == 'X')) {
          iVar16 = iVar16 + 2;
          local_1a0 = iVar16;
          local_194 = iVar16;
          local_1a4 = __inc(pFVar2);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          if ((local_1c4 != 0) && (local_190 = local_190 - 2, (int)local_190 < 1)) {
            local_18c = local_18c + '\x01';
          }
          local_1a8 = 0x78;
          uVar4 = extraout_EDX_11;
          cVar13 = local_18c;
        }
        else {
          local_1c0 = 1;
          uVar4 = extraout_EDX_08;
          if (local_1a8 == 0x78) {
            local_1a0 = iVar16;
            local_194 = iVar16;
            if (local_1a4 != 0xffffffff) {
              FUN_004383a4(local_1a4,pFVar2);
              local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
              local_1cc = (uint)lVar24;
              uVar4 = extraout_EDX_10;
            }
            local_1a4 = 0x30;
            cVar13 = local_18c;
          }
          else {
            if ((local_1c4 != 0) && (local_190 = local_190 - 1, local_190 == 0)) {
              local_18c = local_18c + '\x01';
            }
            local_1a8 = 0x6f;
            iVar16 = iVar5;
            cVar13 = local_18c;
          }
        }
      }
LAB_00430f0b:
      uVar9 = local_1a8;
      uVar14 = local_1a4;
      if (local_1e0 == 0) {
        if (cVar13 == '\0') {
          while ((uVar14 = local_1a4, local_1a8 != 0x78 && (local_1a8 != 0x70))) {
            iVar5 = _isdigit(local_1a4 & 0xff);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_17;
            if (iVar5 == 0) goto LAB_00431164;
            if (local_1a8 == 0x6f) {
              if (0x37 < (int)uVar14) goto LAB_00431164;
              local_1d0 = local_1d0 << 3;
            }
            else {
              local_1d0 = local_1d0 * 10;
            }
LAB_00431110:
            local_1c0 = local_1c0 + 1;
            local_1d0 = local_1d0 + -0x30 + uVar14;
            if ((local_1c4 != 0) && (local_190 = local_190 - 1, uVar9 = local_1a8, local_190 == 0))
            goto LAB_00431192;
            iVar16 = iVar16 + 1;
            local_1a0 = iVar16;
            local_194 = iVar16;
            local_1a4 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
          }
          iVar5 = _isxdigit(local_1a4 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_18;
          if (iVar5 != 0) {
            local_1d0 = local_1d0 << 4;
            uVar14 = FUN_00430187((byte)uVar14);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_19;
            local_1a4 = uVar14;
            goto LAB_00431110;
          }
LAB_00431164:
          uVar9 = local_1a8;
          local_1a0 = iVar16 + -1;
          local_194 = local_1a0;
          if (uVar14 != 0xffffffff) {
            FUN_004383a4(uVar14,local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_20;
          }
        }
LAB_00431192:
        if (local_1aa != '\0') {
          local_1d0 = -local_1d0;
        }
      }
      else {
        if (cVar13 == '\0') {
          while ((uVar14 = local_1a4, local_1a8 != 0x78 && (local_1a8 != 0x70))) {
            iVar5 = _isdigit(local_1a4 & 0xff);
            uVar9 = local_1a8;
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_14;
            if (iVar5 == 0) goto LAB_0043103b;
            if (local_1a8 == 0x6f) {
              if (0x37 < (int)uVar14) goto LAB_0043103b;
              uVar23 = lVar24 << 3;
            }
            else {
              uVar23 = __allmul(local_1cc,local_1b0,10,0);
              local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
              local_1cc = (uint)lVar24;
            }
LAB_00430fd8:
            local_1c0 = local_1c0 + 1;
            uVar4 = (int)(uVar14 - 0x30) >> 0x1f;
            lVar24 = uVar23 + (longlong)(int)(uVar14 - 0x30);
            if ((local_1c4 != 0) && (local_190 = local_190 - 1, local_190 == 0)) goto LAB_0043106f;
            iVar16 = iVar16 + 1;
            local_1a0 = iVar16;
            local_194 = iVar16;
            local_1a4 = __inc(local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
          }
          iVar5 = _isxdigit(local_1a4 & 0xff);
          local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
          local_1cc = (uint)lVar24;
          uVar4 = extraout_EDX_15;
          if (iVar5 != 0) {
            uVar23 = lVar24 << 4;
            uVar14 = FUN_00430187((byte)uVar14);
            local_1b0 = (uint)(uVar23 >> 0x20);
            local_1cc = (uint)uVar23;
            uVar9 = local_1a8;
            local_1a4 = uVar14;
            goto LAB_00430fd8;
          }
LAB_0043103b:
          uVar9 = local_1a8;
          local_1a0 = iVar16 + -1;
          local_194 = local_1a0;
          if (uVar14 != 0xffffffff) {
            FUN_004383a4(uVar14,local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            uVar4 = extraout_EDX_16;
          }
        }
LAB_0043106f:
        if (local_1aa != '\0') {
          lVar24 = CONCAT44(-((int)((ulonglong)lVar24 >> 0x20) + (uint)((int)lVar24 != 0)),
                            -(int)lVar24);
        }
      }
      bVar11 = (byte)uVar4;
      if ((-(uint)(uVar9 != 0x46) & local_1c0) == 0) goto LAB_004312c5;
      pbVar20 = local_1bc;
      if (local_18a == '\0') {
        local_1d4 = local_1d4 + 1;
        iVar16 = local_1d0;
LAB_004311d5:
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        if (local_1e0 == 0) {
          if (local_199 == '\0') {
            *(short *)local_1c8 = (short)iVar16;
          }
          else {
            *local_1c8 = iVar16;
          }
        }
        else {
          *local_1c8 = local_1cc;
          local_1c8[1] = local_1b0;
        }
      }
LAB_004309f3:
      bVar11 = (byte)uVar4;
      local_18b = local_18b + '\x01';
      pbVar20 = pbVar20 + 1;
      iVar16 = local_194;
      iVar5 = local_1a0;
      iVar6 = local_194;
LAB_0043127a:
      local_194 = iVar6;
      local_1a0 = iVar5;
      if ((uVar14 == 0xffffffff) && ((*pbVar20 != 0x25 || (pbVar20[1] != 0x6e)))) goto LAB_004312c5;
LAB_0043128a:
      bVar10 = *pbVar20;
      param_2 = pbVar20;
      if (bVar10 == 0) goto LAB_004312c5;
      goto LAB_004302ff;
    }
LAB_00431223:
    iVar16 = iVar16 + 1;
    local_1a0 = iVar16;
    local_194 = iVar16;
    uVar14 = __inc(local_198);
    local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
    local_1cc = (uint)lVar24;
    pbVar20 = param_2 + 1;
    uVar4 = extraout_EDX_21;
    local_1a4 = uVar14;
    if (*param_2 == uVar14) {
      iVar8 = FUN_0042900f(uVar14 & 0xff);
      local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
      local_1cc = (uint)lVar24;
      bVar11 = extraout_DL_11;
      iVar5 = local_1a0;
      iVar6 = local_194;
      if (iVar8 != 0) {
        uVar4 = __inc(local_198);
        pFVar2 = local_198;
        local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
        local_1cc = (uint)lVar24;
        bVar10 = *pbVar20;
        pbVar20 = param_2 + 2;
        bVar11 = extraout_DL_12;
        iVar5 = iVar16;
        iVar6 = iVar16;
        if (bVar10 != uVar4) {
          if (uVar4 != 0xffffffff) {
            FUN_004383a4(uVar4,local_198);
            local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
            local_1cc = (uint)lVar24;
            bVar11 = extraout_DL_13;
          }
          goto joined_r0x004312b5;
        }
      }
      goto LAB_0043127a;
    }
LAB_004312b2:
    bVar11 = (byte)uVar4;
    uVar14 = local_1a4;
    pFVar2 = local_198;
joined_r0x004312b5:
    if (uVar14 != 0xffffffff) {
      FUN_004383a4(uVar14,pFVar2);
      local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
      local_1cc = (uint)lVar24;
      bVar11 = extraout_DL_14;
    }
LAB_004312c5:
    if (local_1d8 == 1) {
      FUN_00403c10(local_1b8);
      local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
      local_1cc = (uint)lVar24;
      bVar11 = extraout_DL_15;
    }
    uVar26 = SUB41(in_stack_fffffe00,0);
    if (((uVar14 != 0xffffffff) || (local_1d4 != 0)) || (local_18b != '\0')) goto LAB_004312f3;
  }
  if (local_1f4 != '\0') {
    *(uint *)(local_1f8 + 0x70) = *(uint *)(local_1f8 + 0x70) & 0xfffffffd;
  }
LAB_00431309:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,bVar11,uVar26);
  local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
  local_1cc = (uint)lVar24;
  return;
LAB_00430e3c:
  local_1a0 = local_194 + -1;
  local_194 = local_1a0;
  if (uVar14 != 0xffffffff) {
    FUN_004383a4(uVar14,local_198);
    local_1b0 = (uint)((ulonglong)lVar24 >> 0x20);
    local_1cc = (uint)lVar24;
    uVar4 = extraout_EDX_12;
  }
LAB_00430e62:
  bVar11 = (byte)uVar4;
  if (piVar3 == local_1c8) goto LAB_004312c5;
  pbVar20 = local_1bc;
  if ((local_18a == '\0') && (local_1d4 = local_1d4 + 1, uVar9 != 99)) {
    if (local_19a == '\0') {
      *(undefined *)local_1c8 = 0;
    }
    else {
      *(undefined2 *)local_1c8 = 0;
    }
  }
  goto LAB_004309f3;
}



// Library Function - Single Match
//  __whiteout
// 
// Library: Visual Studio 2012 Release

uint __cdecl __whiteout(int *param_1,FILE *param_2)

{
  uint uVar1;
  int iVar2;
  
  do {
    *param_1 = *param_1 + 1;
    uVar1 = __inc(param_2);
    if (uVar1 == 0xffffffff) {
      return 0xffffffff;
    }
    iVar2 = _isspace(uVar1 & 0xff);
  } while (iVar2 != 0);
  return uVar1;
}



// WARNING: Could not reconcile some variable overlaps

void __cdecl FUN_00431347(FILE *param_1,ushort *param_2,pthreadlocinfo *param_3,int **param_4)

{
  WCHAR WVar1;
  WCHAR WVar2;
  WCHAR *pWVar3;
  ushort uVar4;
  int *piVar5;
  uint uVar6;
  undefined2 extraout_var_00;
  undefined3 extraout_var;
  int iVar7;
  code *pcVar8;
  byte *pbVar9;
  byte *pbVar10;
  int extraout_ECX;
  undefined extraout_DL;
  undefined uVar11;
  undefined extraout_DL_00;
  uint uVar12;
  int *piVar13;
  int **ppiVar14;
  int *piVar15;
  int *piVar16;
  int *piVar17;
  bool bVar18;
  longlong lVar19;
  undefined *puVar20;
  undefined4 uVar21;
  pthreadlocinfo *pptVar22;
  undefined uVar23;
  int *in_stack_fffffb74;
  uint local_464;
  int local_460;
  undefined4 local_45c;
  int *local_458;
  pthreadlocinfo local_454 [2];
  int local_44c;
  char local_448;
  int local_444;
  byte local_440;
  undefined local_43f;
  WCHAR local_43c;
  short local_43a;
  int local_438;
  int *local_434;
  int local_430;
  FILE *local_42c;
  uint local_428;
  int local_424;
  int *local_420;
  int *local_41c;
  uint local_418;
  int **local_414;
  byte *local_410;
  WCHAR *local_40c;
  int local_408 [127];
  undefined4 local_209;
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  local_42c = param_1;
  local_40c = (WCHAR *)param_2;
  uVar12 = 0;
  local_414 = param_4;
  local_460 = 0;
  piVar13 = (int *)0x0;
  local_418 = 0;
  local_434 = (int *)0x0;
  local_41c = (int *)0x0;
  local_428 = 0;
  local_45c = 0;
  local_444 = 0;
  local_430 = 0;
  FUN_00427078(local_454,param_3);
  piVar5 = __errno();
  uVar23 = SUB41(in_stack_fffffb74,0);
  if ((local_42c == (FILE *)0x0) || (local_40c == (WCHAR *)0x0)) {
    piVar13 = __errno();
    *piVar13 = 0x16;
    FUN_00429bfe();
    uVar11 = extraout_DL;
    if (local_448 != '\0') {
      *(uint *)(local_44c + 0x70) = *(uint *)(local_44c + 0x70) & 0xfffffffd;
    }
  }
  else {
    WVar1 = *local_40c;
    pbVar10 = (byte *)0x0;
    local_410 = (byte *)0x0;
    local_424 = 0;
    local_438 = 0;
    local_458 = (int *)0x0;
    piVar16 = (int *)PTR_DAT_00448280;
    pWVar3 = local_40c;
    while (local_420 = (int *)(uint)(ushort)WVar1, local_40c = pWVar3,
          PTR_DAT_00448280 = (undefined *)piVar16, WVar1 != L'\0') {
      uVar23 = SUB41(in_stack_fffffb74,0);
      local_40c = pWVar3 + 1;
      if (local_424 < 0) break;
      if ((ushort)(WVar1 + L'￠') < 0x59) {
        uVar6 = (int)(char)*(byte *)(local_420 + 0x10fc1e) & 0xf;
      }
      else {
        uVar6 = 0;
      }
      local_438 = (int)(char)(&DAT_0043f098)[uVar6 * 8 + local_438] >> 4;
      switch(local_438) {
      case 0:
switchD_004314b2_caseD_0:
        local_430 = 1;
        _write_char(WVar1,local_42c,&local_424);
        pbVar10 = local_410;
        break;
      case 1:
        local_41c = (int *)0xffffffff;
        uVar12 = 0;
        local_45c = 0;
        local_444 = 0;
        local_434 = (int *)0x0;
        local_428 = 0;
        local_418 = 0;
        local_430 = 0;
        break;
      case 2:
        if (local_420 == (int *)0x20) {
          uVar12 = uVar12 | 2;
          local_418 = uVar12;
        }
        else if (local_420 == (int *)0x23) {
          uVar12 = uVar12 | 0x80;
          local_418 = uVar12;
        }
        else if (local_420 == (int *)0x2b) {
          uVar12 = uVar12 | 1;
          local_418 = uVar12;
        }
        else if (local_420 == (int *)0x2d) {
          uVar12 = uVar12 | 4;
          local_418 = uVar12;
        }
        else if (local_420 == (int *)0x30) {
          uVar12 = uVar12 | 8;
          local_418 = uVar12;
        }
        break;
      case 3:
        if (WVar1 == L'*') {
          local_434 = *local_414;
          local_414 = local_414 + 1;
          if ((int)local_434 < 0) {
            uVar12 = uVar12 | 4;
            local_434 = (int *)-(int)local_434;
            local_418 = uVar12;
          }
        }
        else {
          local_434 = (int *)((int)local_420 + (int)local_434 * 10 + -0x30);
          pbVar10 = local_410;
        }
        break;
      case 4:
        local_41c = (int *)0x0;
        break;
      case 5:
        if (WVar1 == L'*') {
          local_41c = *local_414;
          local_414 = local_414 + 1;
          if ((int)local_41c < 0) {
            local_41c = (int *)0xffffffff;
          }
        }
        else {
          local_41c = (int *)((int)local_420 + (int)local_41c * 10 + -0x30);
          pbVar10 = local_410;
        }
        break;
      case 6:
        if (local_420 == (int *)0x49) {
          WVar2 = *local_40c;
          if ((WVar2 == L'6') && (pWVar3[2] == L'4')) {
            local_40c = pWVar3 + 3;
            uVar12 = uVar12 | 0x8000;
            local_418 = uVar12;
          }
          else if ((WVar2 == L'3') && (pWVar3[2] == L'2')) {
            local_40c = pWVar3 + 3;
            uVar12 = uVar12 & 0xffff7fff;
            local_418 = uVar12;
          }
          else if ((((WVar2 != L'd') && (WVar2 != L'i')) && (WVar2 != L'o')) &&
                  (((WVar2 != L'u' && (WVar2 != L'x')) && (WVar2 != L'X')))) {
            local_438 = 0;
            goto switchD_004314b2_caseD_0;
          }
        }
        else if (local_420 == (int *)0x68) {
          uVar12 = uVar12 | 0x20;
          local_418 = uVar12;
        }
        else if (local_420 == (int *)0x6c) {
          if (*local_40c == L'l') {
            local_40c = pWVar3 + 2;
            uVar12 = uVar12 | 0x1000;
            local_418 = uVar12;
          }
          else {
            uVar12 = uVar12 | 0x10;
            local_418 = uVar12;
          }
        }
        else if (local_420 == (int *)0x77) {
          uVar12 = uVar12 | 0x800;
          local_418 = uVar12;
        }
        break;
      case 7:
        if (local_420 < (int *)0x65) {
          if (local_420 == (int *)0x64) {
LAB_004319db:
            uVar12 = uVar12 | 0x40;
            local_418 = uVar12;
LAB_004319e4:
            local_420 = (int *)0xa;
LAB_004319ee:
            if (((uVar12 & 0x8000) == 0) && ((uVar12 & 0x1000) == 0)) {
              if ((uVar12 & 0x20) == 0) {
                if ((uVar12 & 0x40) == 0) {
                  piVar16 = *local_414;
                  piVar13 = (int *)0x0;
                  local_414 = local_414 + 1;
                  goto LAB_00431bd0;
                }
                piVar16 = *local_414;
              }
              else if ((uVar12 & 0x40) == 0) {
                piVar16 = (int *)(uint)*(ushort *)local_414;
              }
              else {
                piVar16 = (int *)(int)*(short *)local_414;
              }
              piVar13 = (int *)((int)piVar16 >> 0x1f);
              local_414 = local_414 + 1;
            }
            else {
              piVar16 = *local_414;
              piVar13 = local_414[1];
              local_414 = local_414 + 2;
            }
LAB_00431bd0:
            if ((((uVar12 & 0x40) != 0) && ((int)piVar13 < 1)) && (((int)piVar13 < 0 || (false)))) {
              bVar18 = piVar16 != (int *)0x0;
              piVar16 = (int *)-(int)piVar16;
              piVar13 = (int *)-(int)((int)piVar13 + (uint)bVar18);
              uVar12 = uVar12 | 0x100;
              local_418 = uVar12;
            }
            if ((uVar12 & 0x9000) == 0) {
              piVar13 = (int *)0x0;
            }
            lVar19 = CONCAT44(piVar13,piVar16);
            if ((int)local_41c < 0) {
              local_41c = (int *)0x1;
            }
            else {
              local_418 = uVar12 & 0xfffffff7;
              if (0x200 < (int)local_41c) {
                local_41c = (int *)0x200;
              }
            }
            if (((uint)piVar16 | (uint)piVar13) == 0) {
              local_428 = (uint)piVar16 | (uint)piVar13;
            }
            piVar16 = &local_209;
            while( true ) {
              piVar17 = (int *)((int)local_41c + -1);
              if (((int)local_41c < 1) && (lVar19 == 0)) break;
              local_41c = piVar17;
              lVar19 = __aulldvrm((uint)lVar19,(uint)((ulonglong)lVar19 >> 0x20),(uint)local_420,
                                  (int)local_420 >> 0x1f);
              local_410 = (byte *)lVar19;
              iVar7 = extraout_ECX + 0x30;
              if (0x39 < iVar7) {
                iVar7 = iVar7 + local_460;
              }
              *(char *)piVar16 = (char)iVar7;
              piVar16 = (int *)((int)piVar16 + -1);
            }
            pbVar10 = (byte *)((int)&local_209 + -(int)piVar16);
            piVar13 = (int *)((int)piVar16 + 1);
            uVar12 = local_418;
            local_41c = piVar17;
            local_410 = pbVar10;
            if (((local_418 & 0x200) != 0) &&
               ((pbVar10 == (byte *)0x0 || (*(char *)piVar13 != '0')))) {
              pbVar10 = (byte *)((int)&local_209 + -(int)piVar16 + 1);
              *(undefined *)piVar16 = 0x30;
              piVar13 = piVar16;
              local_410 = pbVar10;
            }
          }
          else if (local_420 < (int *)0x54) {
            if (local_420 == (int *)0x53) {
              if ((uVar12 & 0x830) == 0) {
                uVar12 = uVar12 | 0x20;
                local_418 = uVar12;
              }
              goto LAB_004317c5;
            }
            if (local_420 != (int *)0x41) {
              if (local_420 == (int *)0x43) {
                if ((uVar12 & 0x830) == 0) {
                  uVar12 = uVar12 | 0x20;
                  local_418 = uVar12;
                }
LAB_0043187a:
                WVar1 = *(WCHAR *)local_414;
                local_464 = (uint)(ushort)WVar1;
                local_414 = local_414 + 1;
                local_430 = 1;
                if ((uVar12 & 0x20) == 0) {
                  local_408[0]._0_2_ = WVar1;
                }
                else {
                  local_440 = (byte)WVar1;
                  local_43f = 0;
                  iVar7 = FUN_004384f4((LPWSTR)local_408,&local_440,local_454[0]->mb_cur_max,
                                       local_454);
                  if (iVar7 < 0) {
                    local_444 = 1;
                  }
                }
                pbVar10 = (byte *)0x1;
                piVar13 = local_408;
                local_410 = pbVar10;
                goto LAB_00431ce4;
              }
              if ((local_420 != (int *)0x45) && (local_420 != (int *)0x47)) goto LAB_00431ce4;
            }
            local_420 = local_420 + 8;
            local_45c = 1;
LAB_0043175f:
            uVar6 = uVar12 | 0x40;
            local_410 = (byte *)0x200;
            piVar16 = local_408;
            local_418 = uVar6;
            pbVar10 = local_410;
            if ((int)local_41c < 0) {
              local_41c = (int *)0x6;
            }
            else if (local_41c == (int *)0x0) {
              if ((short)local_420 == 0x67) {
                local_41c = (int *)0x1;
              }
            }
            else {
              if (0x200 < (int)local_41c) {
                local_41c = (int *)0x200;
              }
              if (0xa3 < (int)local_41c) {
                pbVar10 = (byte *)((int)local_41c + 0x15d);
                local_458 = (int *)FUN_00403c30(pbVar10);
                piVar16 = local_458;
                if (local_458 == (int *)0x0) {
                  local_41c = (int *)0xa3;
                  piVar16 = local_408;
                  pbVar10 = local_410;
                }
              }
            }
            local_410 = pbVar10;
            in_stack_fffffb74 = *local_414;
            local_414 = local_414 + 2;
            pptVar22 = local_454;
            iVar7 = (int)(char)local_420;
            puVar20 = &stack0xfffffb74;
            piVar13 = piVar16;
            pbVar10 = local_410;
            piVar17 = local_41c;
            uVar21 = local_45c;
            pcVar8 = (code *)DecodePointer(PTR_FUN_004482b8);
            (*pcVar8)(puVar20,piVar13,pbVar10,iVar7,piVar17,uVar21,pptVar22);
            if (((uVar12 & 0x80) != 0) && (local_41c == (int *)0x0)) {
              pptVar22 = local_454;
              piVar13 = piVar16;
              pcVar8 = (code *)DecodePointer(PTR_FUN_004482c4);
              (*pcVar8)(piVar13,pptVar22);
            }
            if (((short)local_420 == 0x67) && ((uVar12 & 0x80) == 0)) {
              pptVar22 = local_454;
              piVar13 = piVar16;
              pcVar8 = (code *)DecodePointer(PTR_FUN_004482c0);
              (*pcVar8)(piVar13,pptVar22);
            }
            ppiVar14 = local_414;
            if (*(byte *)piVar16 == 0x2d) {
              local_418 = uVar12 | 0x140;
              piVar16 = (int *)((int)piVar16 + 1);
              uVar6 = local_418;
            }
LAB_0043193f:
            local_414 = ppiVar14;
            pbVar10 = (byte *)_strlen((char *)piVar16);
            uVar12 = uVar6;
            piVar13 = piVar16;
            local_410 = pbVar10;
          }
          else {
            if (local_420 == (int *)0x58) goto LAB_00431b3d;
            if (local_420 == (int *)0x5a) {
              piVar17 = *local_414;
              ppiVar14 = local_414 + 1;
              uVar6 = uVar12;
              if ((piVar17 == (int *)0x0) || (piVar13 = (int *)piVar17[1], piVar13 == (int *)0x0))
              goto LAB_0043193f;
              if ((uVar12 & 0x800) != 0) {
                iVar7 = (int)*(short *)piVar17 - ((int)*(short *)piVar17 >> 0x1f);
                goto LAB_00431cdc;
              }
              local_430 = 0;
              pbVar10 = (byte *)(int)*(short *)piVar17;
              local_414 = ppiVar14;
              local_410 = pbVar10;
            }
            else {
              if (local_420 == (int *)0x61) goto LAB_0043175f;
              if (local_420 == (int *)0x63) goto LAB_0043187a;
            }
          }
LAB_00431ce4:
          if (local_444 == 0) {
            if ((uVar12 & 0x40) != 0) {
              if ((uVar12 & 0x100) == 0) {
                if ((uVar12 & 1) == 0) {
                  if ((uVar12 & 2) != 0) {
                    local_43c = L' ';
                    local_428 = 1;
                  }
                  goto LAB_00431d19;
                }
                local_43c = L'+';
              }
              else {
                local_43c = L'-';
              }
              local_428 = 1;
            }
LAB_00431d19:
            pbVar10 = (byte *)((int)local_434 + (-local_428 - (int)pbVar10));
            if ((uVar12 & 0xc) == 0) {
              _write_multi_char(L' ',(int)pbVar10,local_42c,&local_424);
            }
            FUN_00431fad(&local_43c,local_428,local_42c,&local_424,piVar5);
            if (((uVar12 & 8) != 0) && ((uVar12 & 4) == 0)) {
              _write_multi_char(L'0',(int)pbVar10,local_42c,&local_424);
            }
            if ((local_430 == 0) && (pbVar9 = local_410, piVar16 = piVar13, 0 < (int)local_410)) {
              do {
                pbVar9 = pbVar9 + -1;
                local_420 = piVar16;
                iVar7 = FUN_004384f4((LPWSTR)&local_464,(byte *)piVar16,local_454[0]->mb_cur_max,
                                     local_454);
                if (iVar7 < 1) {
                  local_424 = -1;
                  break;
                }
                _write_char((WCHAR)local_464,local_42c,&local_424);
                local_420 = (int *)((int)local_420 + iVar7);
                piVar16 = local_420;
              } while (0 < (int)pbVar9);
            }
            else {
              FUN_00431fad((WCHAR *)piVar13,(int)local_410,local_42c,&local_424,piVar5);
            }
            if ((-1 < local_424) && ((uVar12 & 4) != 0)) {
              _write_multi_char(L' ',(int)pbVar10,local_42c,&local_424);
            }
          }
        }
        else {
          if ((int *)0x70 < local_420) {
            if (local_420 == (int *)0x73) {
LAB_004317c5:
              piVar17 = (int *)0x7fffffff;
              if (local_41c != (int *)0xffffffff) {
                piVar17 = local_41c;
              }
              ppiVar14 = local_414 + 1;
              piVar15 = *local_414;
              if ((uVar12 & 0x20) == 0) {
                piVar13 = piVar15;
                if (piVar15 == (int *)0x0) {
                  piVar15 = (int *)PTR_DAT_00448284;
                  piVar13 = (int *)PTR_DAT_00448284;
                }
                for (; (piVar17 != (int *)0x0 &&
                       (piVar17 = (int *)((int)piVar17 + -1), *(short *)piVar15 != 0));
                    piVar15 = (int *)((int)piVar15 + 2)) {
                }
                iVar7 = (int)piVar15 - (int)piVar13;
LAB_00431cdc:
                local_414 = local_414 + 1;
                local_430 = 1;
                pbVar10 = (byte *)(iVar7 >> 1);
                local_410 = pbVar10;
              }
              else {
                if (piVar15 == (int *)0x0) {
                  piVar15 = piVar16;
                }
                local_410 = (byte *)0x0;
                local_420 = piVar15;
                pbVar10 = (byte *)0x0;
                piVar13 = piVar15;
                local_414 = ppiVar14;
                if (0 < (int)piVar17) {
                  do {
                    pbVar10 = local_410;
                    if (*(byte *)local_420 == 0) break;
                    uVar4 = FUN_00428fd5((uint)*(byte *)local_420,local_454);
                    if (CONCAT22(extraout_var_00,uVar4) != 0) {
                      local_420 = (int *)((int)local_420 + 1);
                    }
                    local_420 = (int *)((int)local_420 + 1);
                    pbVar10 = local_410 + 1;
                    local_410 = pbVar10;
                  } while ((int)pbVar10 < (int)piVar17);
                }
              }
              goto LAB_00431ce4;
            }
            if (local_420 == (int *)0x75) goto LAB_004319e4;
            if (local_420 != (int *)0x78) goto LAB_00431ce4;
            local_460 = 0x27;
LAB_00431b5d:
            local_420 = (int *)&DAT_00000010;
            if ((char)uVar12 < '\0') {
              local_43a = (short)local_460 + 0x51;
              local_43c = L'0';
              local_428 = 2;
            }
            goto LAB_004319ee;
          }
          if (local_420 == (int *)0x70) {
            local_41c = (int *)&DAT_00000008;
LAB_00431b3d:
            local_460 = 7;
            goto LAB_00431b5d;
          }
          if (local_420 < (int *)0x65) goto LAB_00431ce4;
          if (local_420 < (int *)0x68) goto LAB_0043175f;
          if (local_420 == (int *)0x69) goto LAB_004319db;
          if (local_420 != (int *)0x6e) {
            if (local_420 != (int *)0x6f) goto LAB_00431ce4;
            local_420 = (int *)&DAT_00000008;
            if ((char)uVar12 < '\0') {
              uVar12 = uVar12 | 0x200;
              local_418 = uVar12;
            }
            goto LAB_004319ee;
          }
          piVar16 = *local_414;
          local_414 = local_414 + 1;
          bVar18 = FUN_00427e6c();
          uVar23 = SUB41(in_stack_fffffb74,0);
          if (CONCAT31(extraout_var,bVar18) == 0) {
            piVar13 = __errno();
            *piVar13 = 0x16;
            FUN_00429bfe();
            uVar11 = extraout_DL_00;
            if (local_448 != '\0') {
              *(uint *)(local_44c + 0x70) = *(uint *)(local_44c + 0x70) & 0xfffffffd;
            }
            goto LAB_00431eee;
          }
          if ((uVar12 & 0x20) == 0) {
            *piVar16 = local_424;
          }
          else {
            *(short *)piVar16 = (short)local_424;
          }
          local_444 = 1;
        }
        pbVar10 = local_410;
        if (local_458 != (int *)0x0) {
          FUN_00403c10(local_458);
          local_458 = (int *)0x0;
          pbVar10 = local_410;
        }
      }
      uVar23 = SUB41(in_stack_fffffb74,0);
      piVar16 = (int *)PTR_DAT_00448280;
      pWVar3 = local_40c;
      WVar1 = *local_40c;
    }
    uVar11 = (undefined)WVar1;
    if (local_448 != '\0') {
      *(uint *)(local_44c + 0x70) = *(uint *)(local_44c + 0x70) & 0xfffffffd;
    }
  }
LAB_00431eee:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar11,uVar23);
  return;
}



// Library Function - Single Match
//  _write_char
// 
// Library: Visual Studio 2012 Release

void __cdecl _write_char(WCHAR param_1,FILE *param_2,int *param_3)

{
  short sVar1;
  
  if (((*(byte *)&param_2->_flag & 0x40) == 0) || (param_2->_base != (char *)0x0)) {
    sVar1 = FUN_00438601(param_1,param_2);
    if (sVar1 == -1) {
      *param_3 = -1;
      return;
    }
  }
  *param_3 = *param_3 + 1;
  return;
}



// Library Function - Single Match
//  _write_multi_char
// 
// Library: Visual Studio 2012 Release

void __cdecl _write_multi_char(WCHAR param_1,int param_2,FILE *param_3,int *param_4)

{
  if (0 < param_2) {
    do {
      param_2 = param_2 + -1;
      _write_char(param_1,param_3,param_4);
      if (*param_4 == -1) {
        return;
      }
    } while (0 < param_2);
  }
  return;
}



void __cdecl FUN_00431fad(WCHAR *param_1,int param_2,FILE *param_3,int *param_4,int *param_5)

{
  int iVar1;
  
  iVar1 = *param_5;
  if (((*(byte *)&param_3->_flag & 0x40) == 0) || (param_3->_base != (char *)0x0)) {
    *param_5 = 0;
    if (0 < param_2) {
      do {
        param_2 = param_2 + -1;
        _write_char(*param_1,param_3,param_4);
        param_1 = param_1 + 1;
        if (*param_4 == -1) {
          if (*param_5 != 0x2a) break;
          _write_char(L'?',param_3,param_4);
        }
      } while (0 < param_2);
      if (*param_5 != 0) {
        return;
      }
    }
    *param_5 = iVar1;
  }
  else {
    *param_4 = *param_4 + param_2;
  }
  return;
}



// Library Function - Single Match
//  _wcscpy_s
// 
// Library: Visual Studio 2012 Release

errno_t __cdecl _wcscpy_s(wchar_t *_Dst,rsize_t _SizeInWords,wchar_t *_Src)

{
  wchar_t wVar1;
  int *piVar2;
  int iVar3;
  
  if ((_Dst != (wchar_t *)0x0) && (_SizeInWords != 0)) {
    if (_Src != (wchar_t *)0x0) {
      iVar3 = (int)_Dst - (int)_Src;
      do {
        wVar1 = *_Src;
        *(wchar_t *)(iVar3 + (int)_Src) = wVar1;
        _Src = _Src + 1;
        if (wVar1 == L'\0') break;
        _SizeInWords = _SizeInWords - 1;
      } while (_SizeInWords != 0);
      if (_SizeInWords != 0) {
        return 0;
      }
      *_Dst = L'\0';
      piVar2 = __errno();
      iVar3 = 0x22;
      goto LAB_0043204b;
    }
    *_Dst = L'\0';
  }
  piVar2 = __errno();
  iVar3 = 0x16;
LAB_0043204b:
  *piVar2 = iVar3;
  FUN_00429bfe();
  return iVar3;
}



// Library Function - Single Match
//  _wcsnlen
// 
// Library: Visual Studio 2012 Release

size_t __cdecl _wcsnlen(wchar_t *_Src,size_t _MaxCount)

{
  uint uVar1;
  
  uVar1 = 0;
  if (_MaxCount != 0) {
    do {
      if (*_Src == L'\0') {
        return uVar1;
      }
      uVar1 = uVar1 + 1;
      _Src = _Src + 1;
    } while (uVar1 < _MaxCount);
  }
  return uVar1;
}



void __cdecl
FUN_004320a1(ushort *param_1,char **param_2,char *param_3,int param_4,int param_5,int param_6,
            int param_7,int *param_8)

{
  char cVar1;
  uint uVar2;
  bool bVar3;
  bool bVar4;
  bool bVar5;
  ushort uVar6;
  ushort uVar7;
  ushort uVar8;
  ushort uVar9;
  int iVar10;
  int *piVar11;
  uint uVar12;
  int iVar13;
  int iVar14;
  ushort uVar15;
  int *piVar16;
  undefined4 extraout_EDX;
  char *pcVar17;
  ushort *puVar18;
  undefined4 uVar19;
  ushort uVar20;
  int iVar21;
  uint uVar22;
  uint uVar23;
  ushort *puVar24;
  undefined4 uVar25;
  ushort uVar26;
  char *pcVar27;
  int iVar28;
  uint uVar29;
  int local_70;
  uint local_6c;
  int *local_68;
  char local_59;
  int local_58;
  char *local_54;
  uint local_50;
  undefined2 local_4c;
  undefined2 uStack74;
  undefined2 uStack72;
  undefined2 uStack70;
  int local_44;
  undefined4 local_40;
  ushort uStack60;
  undefined2 uStack58;
  ushort uStack56;
  ushort uStack54;
  byte local_30;
  undefined uStack47;
  ushort uStack46;
  ushort local_2c [4];
  char local_24 [23];
  char local_d;
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  local_70 = 1;
  iVar10 = 0;
  uVar6 = 0;
  pcVar27 = local_24;
  local_50 = 0;
  bVar3 = false;
  bVar5 = false;
  bVar4 = false;
  local_58 = 0;
  if (param_8 != (int *)0x0) {
    local_54 = param_3;
    for (; (((cVar1 = *param_3, cVar1 == ' ' || (cVar1 == '\t')) || (cVar1 == '\n')) ||
           (cVar1 == '\r')); param_3 = param_3 + 1) {
    }
LAB_00432121:
    pcVar17 = param_3;
    iVar21 = 0;
    local_59 = *pcVar17;
    param_3 = pcVar17 + 1;
    if (false) goto switchD_00432130_caseD_a;
    switch(iVar10) {
    case 0:
      if (8 < (byte)(local_59 - 0x31U)) {
        if (local_59 == ***(char ***)(*param_8 + 0x84)) {
LAB_00432155:
          iVar10 = 5;
        }
        else if (local_59 == '+') {
          iVar10 = 2;
          uVar6 = 0;
        }
        else if (local_59 == '-') {
          iVar10 = 2;
          uVar6 = 0x8000;
        }
        else {
          if (local_59 != '0') goto LAB_004323fd;
LAB_0043216f:
          iVar10 = 1;
        }
        goto LAB_00432121;
      }
      break;
    case 1:
      bVar3 = true;
      if (8 < (byte)(local_59 - 0x31U)) {
        if (local_59 == ***(char ***)(*param_8 + 0x84)) goto LAB_004321a7;
        if ((local_59 != '+') && (local_59 != '-')) {
          if (local_59 != '0') goto LAB_004321ba;
          goto LAB_0043216f;
        }
        goto LAB_004321db;
      }
      break;
    case 2:
      if (8 < (byte)(local_59 - 0x31U)) {
        if (local_59 == ***(char ***)(*param_8 + 0x84)) goto LAB_00432155;
        pcVar17 = local_54;
        if (local_59 == '0') goto LAB_0043216f;
        goto LAB_00432401;
      }
      break;
    case 3:
      while (('/' < local_59 && (local_59 < ':'))) {
        if (local_50 < 0x19) {
          local_50 = local_50 + 1;
          *pcVar27 = local_59 + -0x30;
          pcVar27 = pcVar27 + 1;
        }
        else {
          local_58 = local_58 + 1;
        }
        local_59 = *param_3;
        param_3 = param_3 + 1;
      }
      if (local_59 != ***(char ***)(*param_8 + 0x84)) {
        if ((local_59 == '+') || (local_59 == '-')) goto LAB_004321db;
LAB_004321ba:
        bVar3 = true;
        iVar21 = 0;
        if (('C' < local_59) && ((local_59 < 'F' || ((byte)(local_59 + 0x9cU) < 2))))
        goto LAB_004321d4;
        goto LAB_004323fd;
      }
LAB_004321a7:
      bVar3 = true;
      iVar10 = 4;
      goto LAB_00432121;
    case 4:
      bVar3 = true;
      bVar5 = true;
      if (local_50 == 0) {
        while (local_59 == '0') {
          local_58 = local_58 + -1;
          local_59 = *param_3;
          param_3 = param_3 + 1;
        }
      }
      while (('/' < local_59 && (local_59 < ':'))) {
        if (local_50 < 0x19) {
          local_50 = local_50 + 1;
          *pcVar27 = local_59 + -0x30;
          pcVar27 = pcVar27 + 1;
          local_58 = local_58 + -1;
        }
        local_59 = *param_3;
        param_3 = param_3 + 1;
      }
      iVar21 = 0;
      if ((local_59 == '+') || (local_59 == '-')) {
LAB_004321db:
        bVar3 = true;
        iVar10 = 0xb;
        param_3 = param_3 + -1;
      }
      else {
        if ((local_59 < 'D') || (('E' < local_59 && (1 < (byte)(local_59 + 0x9cU))))) {
          pcVar17 = param_3 + -1;
          goto LAB_00432401;
        }
LAB_004321d4:
        bVar3 = true;
        iVar10 = 6;
      }
      goto LAB_00432121;
    case 5:
      bVar5 = true;
      pcVar17 = local_54;
      if ((byte)(local_59 - 0x30U) < 10) {
        iVar10 = 4;
        goto LAB_00432140;
      }
      goto LAB_00432401;
    case 6:
      local_54 = pcVar17 + -1;
      if ((byte)(local_59 - 0x31U) < 9) goto LAB_0043231e;
      if (local_59 == '+') goto LAB_0043234f;
      if (local_59 == '-') {
        iVar10 = 7;
        local_70 = -1;
      }
      else {
LAB_00432334:
        pcVar17 = local_54;
        if (local_59 != '0') goto LAB_00432401;
        iVar10 = 8;
      }
      goto LAB_00432121;
    case 7:
      if (8 < (byte)(local_59 - 0x31U)) goto LAB_00432334;
      goto LAB_0043231e;
    case 8:
      bVar4 = true;
      while (local_59 == '0') {
        local_59 = *param_3;
        param_3 = param_3 + 1;
      }
      if ((byte)(local_59 - 0x31U) < 9) {
LAB_0043231e:
        iVar10 = 9;
        goto LAB_00432140;
      }
      goto LAB_004323fd;
    case 9:
      iVar21 = 0;
      bVar4 = true;
      goto LAB_004323df;
    default:
      goto switchD_00432130_caseD_a;
    case 0xb:
      if (param_7 != 0) {
        local_54 = pcVar17;
        if (local_59 == '+') {
LAB_0043234f:
          iVar10 = 7;
        }
        else {
          if (local_59 != '-') goto LAB_00432401;
          local_70 = -1;
          iVar10 = 7;
        }
        goto LAB_00432121;
      }
      iVar10 = 10;
      param_3 = pcVar17;
switchD_00432130_caseD_a:
      pcVar17 = param_3;
      if (iVar10 != 10) goto LAB_00432121;
      goto LAB_00432401;
    }
    iVar10 = 3;
LAB_00432140:
    param_3 = param_3 + -1;
    goto LAB_00432121;
  }
  piVar11 = __errno();
  *piVar11 = 0x16;
  FUN_00429bfe();
  uVar19 = extraout_EDX;
  goto LAB_00432808;
LAB_004323df:
  if ((local_59 < '0') || ('9' < local_59)) goto LAB_004323f8;
  iVar21 = local_59 + -0x30 + iVar21 * 10;
  if (iVar21 < 0x1451) {
    local_59 = *param_3;
    param_3 = param_3 + 1;
    goto LAB_004323df;
  }
  iVar21 = 0x1451;
LAB_004323f8:
  while (('/' < local_59 && (local_59 < ':'))) {
    local_59 = *param_3;
    param_3 = param_3 + 1;
  }
LAB_004323fd:
  pcVar17 = param_3 + -1;
LAB_00432401:
  *param_2 = pcVar17;
  if (bVar3) {
    if (0x18 < local_50) {
      if ('\x04' < local_d) {
        local_d = local_d + '\x01';
      }
      pcVar27 = pcVar27 + -1;
      local_58 = local_58 + 1;
      local_50 = 0x18;
    }
    if (local_50 == 0) {
      uVar15 = 0;
      uVar20 = 0;
      uVar25 = 0;
      uVar19 = 0;
    }
    else {
      pcVar27 = pcVar27 + -1;
      cVar1 = *pcVar27;
      while (cVar1 == '\0') {
        local_50 = local_50 - 1;
        local_58 = local_58 + 1;
        pcVar27 = pcVar27 + -1;
        cVar1 = *pcVar27;
      }
      FUN_00438787(local_24,local_50,&local_40);
      if (local_70 < 0) {
        iVar21 = -iVar21;
      }
      uVar22 = iVar21 + local_58;
      if (!bVar4) {
        uVar22 = uVar22 + param_5;
      }
      if (!bVar5) {
        uVar22 = uVar22 - param_6;
      }
      if (0x1450 < (int)uVar22) {
        uVar20 = 0x7fff;
        uVar25 = 0x80000000;
        goto LAB_004327ee;
      }
      if ((int)uVar22 < -0x1450) {
        uVar15 = 0;
        uVar20 = 0;
        uVar25 = 0;
        uVar19 = 0;
      }
      else {
        iVar10 = 0x448a38;
        if (uVar22 != 0) {
          if ((int)uVar22 < 0) {
            uVar22 = -uVar22;
            iVar10 = 0x448b98;
          }
          if (param_4 == 0) {
            local_40._0_2_ = 0;
          }
LAB_004327a7:
          do {
            iVar21 = 0;
            if (uVar22 == 0) break;
            iVar10 = iVar10 + 0x54;
            uVar23 = (int)uVar22 >> 3;
            uVar12 = uVar22 & 7;
            uVar22 = uVar23;
            if (uVar12 != 0) {
              piVar16 = (int *)(uVar12 * 0xc + iVar10);
              piVar11 = piVar16;
              if (0x7fff < *(ushort *)piVar16) {
                piVar11 = (int *)&local_4c;
                local_4c = (undefined2)*piVar16;
                uStack74 = (undefined2)((uint)*piVar16 >> 0x10);
                uStack72 = (undefined2)piVar16[1];
                uStack70 = (undefined2)((uint)piVar16[1] >> 0x10);
                local_44 = piVar16[2];
                iVar14 = CONCAT22(uStack72,uStack74) + -1;
                uStack74 = (undefined2)iVar14;
                uStack72 = (undefined2)((uint)iVar14 >> 0x10);
              }
              uVar15 = (*(ushort *)((int)piVar11 + 10) ^ uStack54) & 0x8000;
              local_30 = 0;
              uStack47 = 0;
              uStack46 = 0;
              uVar9 = uStack54 & 0x7fff;
              local_2c[0] = 0;
              uVar26 = *(ushort *)((int)piVar11 + 10) & 0x7fff;
              uVar20 = uVar26 + uVar9;
              local_2c[1] = uStack46;
              local_2c[2] = local_2c[0];
              local_2c[3] = uStack46;
              if (((uVar9 < 0x7fff) && (uVar26 < 0x7fff)) && (uVar20 < 0xbffe)) {
                uVar7 = local_2c[0];
                uVar8 = uStack46;
                if (0x3fbf < uVar20) {
                  if (((uVar9 == 0) &&
                      (uVar20 = uVar20 + 1, (CONCAT22(uStack54,uStack56) & 0x7fffffff) == 0)) &&
                     ((CONCAT22(uStack58,uStack60) == 0 &&
                      (CONCAT22(local_40._2_2_,(ushort)local_40) == 0)))) {
                    uStack54 = 0;
                    goto LAB_004327a7;
                  }
                  if (((uVar26 != 0) || (uVar20 = uVar20 + 1, (piVar11[2] & 0x7fffffffU) != 0)) ||
                     ((piVar11[1] != 0 || (uVar7 = local_2c[0], uVar8 = uStack46, *piVar11 != 0))))
                  {
                    puVar18 = local_2c;
                    local_6c = 5;
                    iVar14 = iVar21;
                    do {
                      if (0 < (int)local_6c) {
                        puVar24 = (ushort *)((int)&local_40 + iVar14 * 2);
                        local_68 = piVar11 + 2;
                        iVar28 = local_6c;
                        do {
                          uVar12 = (uint)*puVar24 * (uint)*(ushort *)local_68 +
                                   *(int *)(puVar18 + -2);
                          if ((uVar12 < *(uint *)(puVar18 + -2)) ||
                             (iVar13 = iVar21, uVar12 < (uint)*puVar24 * (uint)*(ushort *)local_68))
                          {
                            iVar13 = 1;
                          }
                          *(uint *)(puVar18 + -2) = uVar12;
                          if (iVar13 != 0) {
                            *puVar18 = *puVar18 + 1;
                          }
                          local_68 = (int *)((int)local_68 + -2);
                          puVar24 = puVar24 + 1;
                          iVar28 = iVar28 + -1;
                        } while (0 < iVar28);
                      }
                      puVar18 = puVar18 + 1;
                      iVar14 = iVar14 + 1;
                      local_6c = local_6c + -1;
                    } while (0 < (int)local_6c);
                    local_54 = (char *)CONCAT22(local_2c[3],local_2c[2]);
                    uVar20 = uVar20 + 0xc002;
                    uVar12 = CONCAT22(uStack46,CONCAT11(uStack47,local_30));
                    if ((short)uVar20 < 1) {
LAB_00432676:
                      uVar20 = uVar20 - 1;
                      if (-1 < (short)uVar20) goto LAB_004326df;
                      local_6c = (uint)(ushort)-uVar20;
                      uVar20 = 0;
                      uVar23 = (uint)local_54;
                      do {
                        if ((local_30 & 1) != 0) {
                          iVar21 = iVar21 + 1;
                        }
                        uVar2 = CONCAT22(local_2c[1],local_2c[0]);
                        local_2c[1] = local_2c[1] >> 1 | (ushort)((uVar23 << 0x1f) >> 0x10);
                        uVar29 = uVar12 >> 1;
                        local_54 = (char *)(uVar23 >> 1);
                        uVar12 = uVar29 | uVar2 << 0x1f;
                        local_6c = local_6c - 1;
                        local_2c[2] = (ushort)local_54;
                        local_2c[3] = (ushort)(uVar23 >> 0x11);
                        local_2c[0] = (ushort)(uVar2 >> 1);
                        local_30 = (byte)uVar29;
                        uStack47 = (undefined)(uVar29 >> 8);
                        uStack46 = (ushort)(uVar12 >> 0x10);
                        uVar23 = (uint)local_54;
                      } while (local_6c != 0);
                      if (iVar21 == 0) goto LAB_004326df;
                      uVar9 = (ushort)uVar29 | 1;
                      local_30 = (byte)uVar9;
                      uVar12 = uVar29 | 1;
                    }
                    else {
                      do {
                        if ((int)local_54 < 0) break;
                        iVar14 = CONCAT22(local_2c[1],local_2c[0]) * 2;
                        uVar9 = local_2c[1] >> 0xf;
                        local_2c[0] = (ushort)iVar14 | (ushort)(uVar12 >> 0x1f);
                        uVar12 = uVar12 * 2;
                        local_2c[1] = (ushort)((uint)iVar14 >> 0x10);
                        uVar23 = (int)local_54 * 2;
                        local_30 = (byte)uVar12;
                        uStack47 = (undefined)(uVar12 >> 8);
                        uStack46 = (ushort)(uVar12 >> 0x10);
                        local_54 = (char *)(uVar23 | uVar9);
                        uVar20 = uVar20 - 1;
                        local_2c[2] = (ushort)local_54;
                        local_2c[3] = (ushort)(uVar23 >> 0x10);
                      } while (0 < (short)uVar20);
                      if ((short)uVar20 < 1) goto LAB_00432676;
LAB_004326df:
                      uVar9 = CONCAT11(uStack47,local_30);
                    }
                    if ((0x8000 < uVar9) || ((uVar12 & 0x1ffff) == 0x18000)) {
                      if (CONCAT22(local_2c[0],uStack46) == -1) {
                        uStack46 = 0;
                        local_2c[0] = 0;
                        if (CONCAT22(local_2c[2],local_2c[1]) == -1) {
                          local_2c[1] = 0;
                          local_2c[2] = 0;
                          if (local_2c[3] == 0xffff) {
                            local_2c[3] = 0x8000;
                            uVar20 = uVar20 + 1;
                          }
                          else {
                            local_2c[3] = local_2c[3] + 1;
                          }
                        }
                        else {
                          iVar21 = CONCAT22(local_2c[2],local_2c[1]) + 1;
                          local_2c[1] = (ushort)iVar21;
                          local_2c[2] = (ushort)((uint)iVar21 >> 0x10);
                        }
                        local_54 = (char *)CONCAT22(local_2c[3],local_2c[2]);
                      }
                      else {
                        iVar21 = CONCAT22(local_2c[0],uStack46) + 1;
                        uStack46 = (ushort)iVar21;
                        local_2c[0] = (ushort)((uint)iVar21 >> 0x10);
                      }
                    }
                    if (uVar20 < 0x7fff) {
                      local_40._0_2_ = uStack46;
                      local_40._2_2_ = local_2c[0];
                      uStack60 = local_2c[1];
                      uStack58 = SUB42(local_54,0);
                      uStack56 = (ushort)((uint)local_54 >> 0x10);
                      uStack54 = uVar20 | uVar15;
                    }
                    else {
                      uStack60 = 0;
                      uStack58 = 0;
                      local_40._0_2_ = 0;
                      local_40._2_2_ = 0;
                      iVar21 = ((uVar15 == 0) - 1 & 0x80000000) + 0x7fff8000;
                      uStack56 = (ushort)iVar21;
                      uStack54 = (ushort)((uint)iVar21 >> 0x10);
                    }
                    goto LAB_004327a7;
                  }
                }
              }
              else {
                iVar21 = ((uVar15 == 0) - 1 & 0x80000000) + 0x7fff8000;
                uStack56 = (ushort)iVar21;
                uStack54 = (ushort)((uint)iVar21 >> 0x10);
                uVar7 = uStack56;
                uVar8 = uStack54;
              }
              uStack54 = uVar8;
              uStack56 = uVar7;
              uStack60 = 0;
              uStack58 = 0;
              local_40._0_2_ = 0;
              local_40._2_2_ = 0;
            }
          } while( true );
        }
        uVar19 = CONCAT22(uStack60,local_40._2_2_);
        uVar25 = CONCAT22(uStack56,uStack58);
        uVar20 = uStack54;
        uVar15 = (ushort)local_40;
      }
    }
  }
  else {
    uVar20 = 0;
    uVar25 = 0;
LAB_004327ee:
    uVar15 = 0;
    uVar19 = 0;
  }
  param_1[5] = uVar20 | uVar6;
  *param_1 = uVar15;
  *(undefined4 *)(param_1 + 1) = uVar19;
  *(undefined4 *)(param_1 + 3) = uVar25;
LAB_00432808:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,(char)uVar19,(char)param_1);
  return;
}



uint __cdecl FUN_00432849(WCHAR param_1,uint param_2)

{
  uint uVar1;
  BOOL BVar2;
  uint local_8;
  
  if (param_1 == L'\xffff') {
    uVar1 = 0;
  }
  else {
    if ((ushort)param_1 < 0x100) {
      uVar1 = (uint)*(ushort *)(PTR_DAT_00448a64 + (uint)(ushort)param_1 * 2);
    }
    else {
      BVar2 = GetStringTypeW(1,&param_1,1,(LPWORD)&local_8);
      uVar1 = -(uint)(BVar2 != 0) & local_8 & 0xffff;
    }
    uVar1 = uVar1 & param_2 & 0xffff;
  }
  return uVar1;
}



void __cdecl FUN_0043289f(uint *param_1,ushort *param_2,int *param_3)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  ushort *local_24;
  ushort *local_20;
  uint local_1c;
  uint local_18;
  ushort local_14 [6];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  uVar3 = 0;
  local_20 = param_2;
  uVar1 = FUN_00432948(local_14,&local_24,param_2,0,0,0,0,param_3);
  if ((uVar1 & 4) == 0) {
    iVar2 = FUN_004378c0(local_14,&local_1c);
    if (((uVar1 & 2) != 0) || (iVar2 == 1)) {
      uVar3 = 0x80;
    }
    if (((uVar1 & 1) != 0) || (iVar2 == 2)) {
      uVar3 = uVar3 | 0x100;
    }
  }
  else {
    uVar3 = 0x200;
    local_18 = 0;
    local_1c = 0;
  }
  *param_1 = uVar3;
  param_1[1] = (int)local_24 - (int)local_20 >> 1;
  param_1[4] = local_1c;
  param_1[5] = local_18;
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,(char)param_1,(char)param_1);
  return;
}



void __cdecl
FUN_00432948(ushort *param_1,ushort **param_2,ushort *param_3,int param_4,int param_5,int param_6,
            int param_7,int *param_8)

{
  char cVar1;
  uint uVar2;
  bool bVar3;
  bool bVar4;
  bool bVar5;
  ushort uVar6;
  ushort uVar7;
  ushort uVar8;
  ushort uVar9;
  int iVar10;
  int *piVar11;
  int iVar12;
  int iVar13;
  ushort uVar14;
  uint uVar15;
  int *piVar16;
  undefined4 extraout_EDX;
  ushort *puVar17;
  undefined4 uVar18;
  int iVar19;
  ushort uVar20;
  uint uVar21;
  uint uVar22;
  ushort *puVar23;
  undefined4 uVar24;
  ushort uVar25;
  char *pcVar26;
  int iVar27;
  uint uVar28;
  bool bVar29;
  int *local_74;
  int local_6c;
  int local_68;
  uint local_5c;
  uint local_58;
  int local_54;
  ushort *local_50;
  undefined2 local_4c;
  undefined2 uStack74;
  undefined2 uStack72;
  undefined2 uStack70;
  int local_44;
  undefined4 local_40;
  ushort uStack60;
  undefined2 uStack58;
  ushort uStack56;
  ushort uStack54;
  byte local_30;
  undefined uStack47;
  ushort uStack46;
  ushort local_2c [4];
  char local_24 [23];
  char local_d;
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  local_68 = 1;
  iVar10 = 0;
  uVar6 = 0;
  pcVar26 = local_24;
  local_58 = 0;
  bVar3 = false;
  bVar5 = false;
  bVar4 = false;
  local_54 = 0;
  if (param_8 == (int *)0x0) {
    piVar11 = __errno();
    *piVar11 = 0x16;
    FUN_00429bfe();
    uVar18 = extraout_EDX;
    goto LAB_00433157;
  }
  local_50 = param_3;
  for (; (((uVar20 = *param_3, uVar20 == 0x20 || (uVar20 == 9)) || (uVar20 == 10)) ||
         (uVar21 = 0, uVar20 == 0xd)); param_3 = param_3 + 1) {
  }
LAB_004329ee:
  puVar17 = param_3;
  uVar20 = *puVar17;
  uVar15 = (uint)uVar20;
  param_3 = puVar17 + 1;
  if (false) goto switchD_00432a00_caseD_a;
  switch(iVar10) {
  case 0:
    if (8 < (ushort)(uVar20 - 0x31)) {
      if (uVar15 == (int)***(char ***)(*param_8 + 0x84)) {
        iVar10 = 5;
      }
      else if (uVar15 == 0x2b) {
        iVar10 = 2;
        uVar6 = 0;
      }
      else if (uVar15 == 0x2d) {
        iVar10 = 2;
        uVar6 = 0x8000;
      }
      else {
        if (uVar15 != 0x30) goto LAB_00432c83;
LAB_00432a46:
        iVar10 = 1;
      }
      goto LAB_004329ee;
    }
    break;
  case 1:
    bVar3 = true;
    if (8 < (ushort)(uVar20 - 0x31)) {
      if (uVar15 == (int)***(char ***)(*param_8 + 0x84)) goto LAB_00432a86;
      if ((uVar15 != 0x2b) && (uVar15 != 0x2d)) {
        if (uVar15 == 0x30) goto LAB_00432a46;
        goto LAB_00432a9b;
      }
LAB_00432abe:
      bVar3 = true;
      iVar10 = 0xb;
      param_3 = param_3 + -1;
      goto LAB_004329ee;
    }
    break;
  case 2:
    if (8 < (ushort)(uVar20 - 0x31)) {
      uVar21 = local_58;
      if (uVar15 == (int)***(char ***)(*param_8 + 0x84)) {
        iVar10 = 5;
      }
      else {
        puVar17 = local_50;
        if (uVar20 != 0x30) goto LAB_00432c86;
        iVar10 = 1;
      }
      goto LAB_004329ee;
    }
    break;
  case 3:
    while ((0x2f < uVar20 && (local_58 = uVar21, (ushort)uVar15 < 0x3a))) {
      if (uVar21 < 0x19) {
        uVar21 = uVar21 + 1;
        *pcVar26 = (char)uVar15 + -0x30;
        pcVar26 = pcVar26 + 1;
      }
      else {
        local_54 = local_54 + 1;
      }
      uVar20 = *param_3;
      param_3 = param_3 + 1;
      local_58 = uVar21;
      uVar15 = (uint)uVar20;
    }
    if (uVar15 != (int)***(char ***)(*param_8 + 0x84)) {
      if ((uVar15 == 0x2b) || (uVar15 == 0x2d)) goto LAB_00432abe;
LAB_00432a9b:
      bVar3 = true;
      if (0x43 < uVar15) goto joined_r0x00432bf1;
      goto LAB_00432c83;
    }
LAB_00432a86:
    bVar3 = true;
    iVar10 = 4;
    goto LAB_004329ee;
  case 4:
    bVar3 = true;
    bVar5 = true;
    if (uVar21 == 0) {
      while (uVar20 == 0x30) {
        uVar20 = *param_3;
        uVar15 = (uint)uVar20;
        local_54 = local_54 + -1;
        param_3 = param_3 + 1;
      }
    }
    uVar20 = (ushort)uVar15;
    while ((0x2f < uVar20 && (local_58 = uVar21, (ushort)uVar15 < 0x3a))) {
      if (uVar21 < 0x19) {
        uVar21 = uVar21 + 1;
        *pcVar26 = (char)uVar15 + -0x30;
        pcVar26 = pcVar26 + 1;
        local_54 = local_54 + -1;
      }
      uVar20 = *param_3;
      param_3 = param_3 + 1;
      local_58 = uVar21;
      uVar15 = (uint)uVar20;
    }
    if ((uVar15 == 0x2b) || (uVar15 == 0x2d)) goto LAB_00432abe;
    if (uVar15 < 0x44) goto LAB_00432c83;
joined_r0x00432bf1:
    if ((uVar15 < 0x46) || (bVar3 = true, uVar15 - 100 < 2)) {
      bVar3 = true;
      iVar10 = 6;
      goto LAB_004329ee;
    }
    goto LAB_00432c83;
  case 5:
    bVar5 = true;
    puVar17 = local_50;
    if ((ushort)(uVar20 - 0x30) < 10) {
      iVar10 = 4;
      goto LAB_00432a12;
    }
    goto LAB_00432c86;
  case 6:
    local_50 = puVar17 + -1;
    if ((ushort)(uVar20 - 0x31) < 9) {
LAB_00432c2a:
      iVar10 = 9;
      goto LAB_00432a12;
    }
    if (uVar15 == 0x2b) goto LAB_00432c5b;
    if (uVar15 != 0x2d) {
      bVar29 = uVar15 == 0x30;
      goto LAB_00432c40;
    }
    iVar10 = 7;
    local_68 = -1;
    goto LAB_004329ee;
  case 7:
    if ((ushort)(uVar20 - 0x31) < 9) goto LAB_00432c2a;
    bVar29 = uVar20 == 0x30;
LAB_00432c40:
    puVar17 = local_50;
    if (!bVar29) goto LAB_00432c86;
    iVar10 = 8;
    goto LAB_004329ee;
  case 8:
    bVar4 = true;
    while ((short)uVar15 == 0x30) {
      uVar20 = *param_3;
      param_3 = param_3 + 1;
      uVar15 = (uint)uVar20;
    }
    if ((ushort)((short)uVar15 - 0x31U) < 9) goto LAB_00432c2a;
LAB_00432c83:
    puVar17 = param_3 + -1;
    goto LAB_00432c86;
  case 9:
    iVar10 = 0;
    bVar4 = true;
    goto LAB_00432d4d;
  default:
    goto switchD_00432a00_caseD_a;
  case 0xb:
    if (param_7 != 0) {
      local_50 = puVar17;
      if (uVar15 == 0x2b) {
LAB_00432c5b:
        iVar10 = 7;
      }
      else {
        if (uVar15 != 0x2d) goto LAB_00432c86;
        local_68 = -1;
        iVar10 = 7;
      }
      goto LAB_004329ee;
    }
    iVar10 = 10;
    param_3 = puVar17;
switchD_00432a00_caseD_a:
    puVar17 = param_3;
    if (iVar10 != 10) goto LAB_004329ee;
LAB_00432c86:
    iVar10 = 0;
    goto LAB_00432c88;
  }
  iVar10 = 3;
LAB_00432a12:
  param_3 = param_3 + -1;
  goto LAB_004329ee;
LAB_00432d4d:
  if (((ushort)uVar15 < 0x30) || (0x39 < (ushort)uVar15)) goto LAB_00432d70;
  iVar10 = (uVar15 - 0x30) + iVar10 * 10;
  if (iVar10 < 0x1451) {
    uVar15 = (uint)*param_3;
    param_3 = param_3 + 1;
    goto LAB_00432d4d;
  }
  iVar10 = 0x1451;
LAB_00432d70:
  while ((0x2f < (ushort)uVar15 && ((ushort)uVar15 < 0x3a))) {
    uVar20 = *param_3;
    param_3 = param_3 + 1;
    uVar15 = (uint)uVar20;
  }
  puVar17 = param_3 + -1;
LAB_00432c88:
  *param_2 = puVar17;
  if (bVar3) {
    if (0x18 < local_58) {
      if ('\x04' < local_d) {
        local_d = local_d + '\x01';
      }
      pcVar26 = pcVar26 + -1;
      local_54 = local_54 + 1;
      local_58 = 0x18;
    }
    if (local_58 == 0) {
      uVar14 = 0;
      uVar20 = 0;
      uVar24 = 0;
      uVar18 = 0;
    }
    else {
      pcVar26 = pcVar26 + -1;
      cVar1 = *pcVar26;
      while (cVar1 == '\0') {
        local_58 = local_58 - 1;
        local_54 = local_54 + 1;
        pcVar26 = pcVar26 + -1;
        cVar1 = *pcVar26;
      }
      FUN_00438787(local_24,local_58,&local_40);
      if (local_68 < 0) {
        iVar10 = -iVar10;
      }
      uVar21 = iVar10 + local_54;
      if (!bVar4) {
        uVar21 = uVar21 + param_5;
      }
      if (!bVar5) {
        uVar21 = uVar21 - param_6;
      }
      if (0x1450 < (int)uVar21) {
        uVar20 = 0x7fff;
        uVar24 = 0x80000000;
        goto LAB_0043313d;
      }
      if ((int)uVar21 < -0x1450) {
        uVar14 = 0;
        uVar20 = 0;
        uVar24 = 0;
        uVar18 = 0;
      }
      else {
        iVar10 = 0x448a38;
        if (uVar21 != 0) {
          if ((int)uVar21 < 0) {
            uVar21 = -uVar21;
            iVar10 = 0x448b98;
          }
          if (param_4 == 0) {
            local_40._0_2_ = 0;
          }
LAB_004330f8:
          do {
            iVar19 = 0;
            if (uVar21 == 0) break;
            iVar10 = iVar10 + 0x54;
            uVar22 = (int)uVar21 >> 3;
            uVar15 = uVar21 & 7;
            uVar21 = uVar22;
            if (uVar15 != 0) {
              piVar16 = (int *)(uVar15 * 0xc + iVar10);
              piVar11 = piVar16;
              if (0x7fff < *(ushort *)piVar16) {
                piVar11 = (int *)&local_4c;
                local_4c = (undefined2)*piVar16;
                uStack74 = (undefined2)((uint)*piVar16 >> 0x10);
                uStack72 = (undefined2)piVar16[1];
                uStack70 = (undefined2)((uint)piVar16[1] >> 0x10);
                local_44 = piVar16[2];
                iVar13 = CONCAT22(uStack72,uStack74) + -1;
                uStack74 = (undefined2)iVar13;
                uStack72 = (undefined2)((uint)iVar13 >> 0x10);
              }
              uVar14 = (*(ushort *)((int)piVar11 + 10) ^ uStack54) & 0x8000;
              local_30 = 0;
              uStack47 = 0;
              uStack46 = 0;
              uVar9 = uStack54 & 0x7fff;
              local_2c[0] = 0;
              uVar25 = *(ushort *)((int)piVar11 + 10) & 0x7fff;
              uVar20 = uVar25 + uVar9;
              local_2c[1] = uStack46;
              local_2c[2] = local_2c[0];
              local_2c[3] = uStack46;
              if (((uVar9 < 0x7fff) && (uVar25 < 0x7fff)) && (uVar20 < 0xbffe)) {
                uVar7 = local_2c[0];
                uVar8 = uStack46;
                if (0x3fbf < uVar20) {
                  if (((uVar9 == 0) &&
                      (uVar20 = uVar20 + 1, (CONCAT22(uStack54,uStack56) & 0x7fffffff) == 0)) &&
                     ((CONCAT22(uStack58,uStack60) == 0 &&
                      (CONCAT22(local_40._2_2_,(ushort)local_40) == 0)))) {
                    uStack54 = 0;
                    goto LAB_004330f8;
                  }
                  if (((uVar25 != 0) || (uVar20 = uVar20 + 1, (piVar11[2] & 0x7fffffffU) != 0)) ||
                     ((piVar11[1] != 0 || (uVar7 = local_2c[0], uVar8 = uStack46, *piVar11 != 0))))
                  {
                    puVar17 = local_2c;
                    local_6c = 5;
                    iVar13 = iVar19;
                    do {
                      if (0 < local_6c) {
                        puVar23 = (ushort *)((int)&local_40 + iVar13 * 2);
                        local_74 = piVar11 + 2;
                        iVar27 = local_6c;
                        do {
                          uVar15 = (uint)*puVar23 * (uint)*(ushort *)local_74 +
                                   *(int *)(puVar17 + -2);
                          if ((uVar15 < *(uint *)(puVar17 + -2)) ||
                             (iVar12 = iVar19, uVar15 < (uint)*puVar23 * (uint)*(ushort *)local_74))
                          {
                            iVar12 = 1;
                          }
                          *(uint *)(puVar17 + -2) = uVar15;
                          if (iVar12 != 0) {
                            *puVar17 = *puVar17 + 1;
                          }
                          local_74 = (int *)((int)local_74 + -2);
                          puVar23 = puVar23 + 1;
                          iVar27 = iVar27 + -1;
                        } while (0 < iVar27);
                      }
                      puVar17 = puVar17 + 1;
                      iVar13 = iVar13 + 1;
                      local_6c = local_6c + -1;
                    } while (0 < local_6c);
                    local_50 = (ushort *)CONCAT22(local_2c[3],local_2c[2]);
                    uVar20 = uVar20 + 0xc002;
                    uVar15 = CONCAT22(uStack46,CONCAT11(uStack47,local_30));
                    if ((short)uVar20 < 1) {
LAB_00432fc7:
                      uVar20 = uVar20 - 1;
                      if (-1 < (short)uVar20) goto LAB_00433030;
                      local_5c = (uint)(ushort)-uVar20;
                      uVar20 = 0;
                      uVar22 = (uint)local_50;
                      do {
                        if ((local_30 & 1) != 0) {
                          iVar19 = iVar19 + 1;
                        }
                        uVar2 = CONCAT22(local_2c[1],local_2c[0]);
                        local_2c[1] = local_2c[1] >> 1 | (ushort)((uVar22 << 0x1f) >> 0x10);
                        uVar28 = uVar15 >> 1;
                        local_50 = (ushort *)(uVar22 >> 1);
                        uVar15 = uVar28 | uVar2 << 0x1f;
                        local_5c = local_5c - 1;
                        local_2c[2] = (ushort)local_50;
                        local_2c[3] = (ushort)(uVar22 >> 0x11);
                        local_2c[0] = (ushort)(uVar2 >> 1);
                        local_30 = (byte)uVar28;
                        uStack47 = (undefined)(uVar28 >> 8);
                        uStack46 = (ushort)(uVar15 >> 0x10);
                        uVar22 = (uint)local_50;
                      } while (local_5c != 0);
                      if (iVar19 == 0) goto LAB_00433030;
                      uVar9 = (ushort)uVar28 | 1;
                      local_30 = (byte)uVar9;
                      uVar15 = uVar28 | 1;
                    }
                    else {
                      do {
                        if ((int)local_50 < 0) break;
                        iVar13 = CONCAT22(local_2c[1],local_2c[0]) * 2;
                        uVar9 = local_2c[1] >> 0xf;
                        local_2c[0] = (ushort)iVar13 | (ushort)(uVar15 >> 0x1f);
                        uVar15 = uVar15 * 2;
                        local_2c[1] = (ushort)((uint)iVar13 >> 0x10);
                        uVar22 = (int)local_50 * 2;
                        local_30 = (byte)uVar15;
                        uStack47 = (undefined)(uVar15 >> 8);
                        uStack46 = (ushort)(uVar15 >> 0x10);
                        local_50 = (ushort *)(uVar22 | uVar9);
                        uVar20 = uVar20 - 1;
                        local_2c[2] = (ushort)local_50;
                        local_2c[3] = (ushort)(uVar22 >> 0x10);
                      } while (0 < (short)uVar20);
                      if ((short)uVar20 < 1) goto LAB_00432fc7;
LAB_00433030:
                      uVar9 = CONCAT11(uStack47,local_30);
                    }
                    if ((0x8000 < uVar9) || ((uVar15 & 0x1ffff) == 0x18000)) {
                      if (CONCAT22(local_2c[0],uStack46) == -1) {
                        uStack46 = 0;
                        local_2c[0] = 0;
                        if (CONCAT22(local_2c[2],local_2c[1]) == -1) {
                          local_2c[1] = 0;
                          local_2c[2] = 0;
                          if (local_2c[3] == 0xffff) {
                            local_2c[3] = 0x8000;
                            uVar20 = uVar20 + 1;
                          }
                          else {
                            local_2c[3] = local_2c[3] + 1;
                          }
                        }
                        else {
                          iVar19 = CONCAT22(local_2c[2],local_2c[1]) + 1;
                          local_2c[1] = (ushort)iVar19;
                          local_2c[2] = (ushort)((uint)iVar19 >> 0x10);
                        }
                        local_50 = (ushort *)CONCAT22(local_2c[3],local_2c[2]);
                      }
                      else {
                        iVar19 = CONCAT22(local_2c[0],uStack46) + 1;
                        uStack46 = (ushort)iVar19;
                        local_2c[0] = (ushort)((uint)iVar19 >> 0x10);
                      }
                    }
                    if (uVar20 < 0x7fff) {
                      local_40._0_2_ = uStack46;
                      local_40._2_2_ = local_2c[0];
                      uStack60 = local_2c[1];
                      uStack58 = SUB42(local_50,0);
                      uStack56 = (ushort)((uint)local_50 >> 0x10);
                      uStack54 = uVar20 | uVar14;
                    }
                    else {
                      uStack60 = 0;
                      uStack58 = 0;
                      local_40._0_2_ = 0;
                      local_40._2_2_ = 0;
                      iVar19 = ((uVar14 == 0) - 1 & 0x80000000) + 0x7fff8000;
                      uStack56 = (ushort)iVar19;
                      uStack54 = (ushort)((uint)iVar19 >> 0x10);
                    }
                    goto LAB_004330f8;
                  }
                }
              }
              else {
                iVar19 = ((uVar14 == 0) - 1 & 0x80000000) + 0x7fff8000;
                uStack56 = (ushort)iVar19;
                uStack54 = (ushort)((uint)iVar19 >> 0x10);
                uVar7 = uStack56;
                uVar8 = uStack54;
              }
              uStack54 = uVar8;
              uStack56 = uVar7;
              uStack60 = 0;
              uStack58 = 0;
              local_40._0_2_ = 0;
              local_40._2_2_ = 0;
            }
          } while( true );
        }
        uVar18 = CONCAT22(uStack60,local_40._2_2_);
        uVar24 = CONCAT22(uStack56,uStack58);
        uVar20 = uStack54;
        uVar14 = (ushort)local_40;
      }
    }
  }
  else {
    uVar20 = 0;
    uVar24 = 0;
LAB_0043313d:
    uVar14 = 0;
    uVar18 = 0;
  }
  param_1[5] = uVar20 | uVar6;
  *param_1 = uVar14;
  *(undefined4 *)(param_1 + 1) = uVar18;
  *(undefined4 *)(param_1 + 3) = uVar24;
LAB_00433157:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,(char)uVar18,(char)param_1);
  return;
}



uint __cdecl FUN_00433198(WCHAR *param_1,WCHAR **param_2,uint param_3,uint param_4)

{
  WCHAR WVar1;
  WCHAR *pWVar2;
  int *piVar3;
  uint uVar4;
  int iVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  WCHAR *pWVar9;
  ushort uVar10;
  uint local_8;
  
  if (param_2 != (WCHAR **)0x0) {
    *param_2 = param_1;
  }
  if ((param_1 == (WCHAR *)0x0) || ((param_3 != 0 && (((int)param_3 < 2 || (0x24 < (int)param_3)))))
     ) {
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
    return 0;
  }
  WVar1 = *param_1;
  uVar8 = 0;
  pWVar2 = param_1;
  while( true ) {
    pWVar9 = pWVar2 + 1;
    uVar4 = FUN_00432849(WVar1,8);
    if (uVar4 == 0) break;
    WVar1 = *pWVar9;
    pWVar2 = pWVar9;
  }
  if (WVar1 == L'-') {
    param_4 = param_4 | 2;
LAB_0043320b:
    WVar1 = *pWVar9;
    pWVar9 = pWVar2 + 2;
  }
  else if (WVar1 == L'+') goto LAB_0043320b;
  uVar4 = (uint)(ushort)WVar1;
  if (param_3 == 0) {
    iVar5 = __wchartodigit(WVar1);
    if (iVar5 != 0) {
      param_3 = 10;
      goto LAB_0043327b;
    }
    if ((*pWVar9 != L'x') && (*pWVar9 != L'X')) {
      param_3 = 8;
      goto LAB_0043327b;
    }
    param_3 = 0x10;
  }
  if (((param_3 == 0x10) && (iVar5 = __wchartodigit(WVar1), iVar5 == 0)) &&
     ((*pWVar9 == L'x' || (*pWVar9 == L'X')))) {
    uVar4 = (uint)(ushort)pWVar9[1];
    pWVar9 = pWVar9 + 2;
  }
LAB_0043327b:
  uVar6 = (uint)(0xffffffff / (ulonglong)param_3);
  local_8 = param_4;
  do {
    uVar10 = (ushort)uVar4;
    uVar7 = __wchartodigit(uVar10);
    if (uVar7 == 0xffffffff) {
      if (((uVar10 < 0x41) || (0x5a < uVar10)) && (0x19 < (ushort)(uVar10 - 0x61))) {
LAB_004332b6:
        pWVar9 = pWVar9 + -1;
        if ((local_8 & 8) == 0) {
          if (param_2 != (WCHAR **)0x0) {
            pWVar9 = param_1;
          }
          uVar8 = 0;
        }
        else if (((local_8 & 4) != 0) ||
                (((local_8 & 1) == 0 &&
                 ((((local_8 & 2) != 0 && (0x80000000 < uVar8)) ||
                  (((local_8 & 2) == 0 && (0x7fffffff < uVar8)))))))) {
          piVar3 = __errno();
          *piVar3 = 0x22;
          if ((local_8 & 1) == 0) {
            uVar8 = ((local_8 & 2) != 0) + 0x7fffffff;
          }
          else {
            uVar8 = 0xffffffff;
          }
        }
        if (param_2 != (WCHAR **)0x0) {
          *param_2 = pWVar9;
        }
        if ((local_8 & 2) != 0) {
          uVar8 = -uVar8;
        }
        return uVar8;
      }
      if ((ushort)(uVar10 - 0x61) < 0x1a) {
        uVar4 = uVar4 - 0x20;
      }
      uVar7 = uVar4 - 0x37;
    }
    if (param_3 <= uVar7) goto LAB_004332b6;
    if ((uVar8 < uVar6) || ((uVar8 == uVar6 && (uVar7 <= (uint)(0xffffffff % (ulonglong)param_3)))))
    {
      uVar8 = uVar8 * param_3 + uVar7;
      local_8 = local_8 | 8;
    }
    else {
      local_8 = local_8 | 0xc;
      if (param_2 == (WCHAR **)0x0) goto LAB_004332b6;
    }
    uVar4 = (uint)(ushort)*pWVar9;
    pWVar9 = pWVar9 + 1;
  } while( true );
}



// Library Function - Single Match
//  _wcstol
// 
// Libraries: Visual Studio 2010 Release, Visual Studio 2012 Release

long __cdecl _wcstol(wchar_t *_Str,wchar_t **_EndPtr,int _Radix)

{
  uint uVar1;
  
  uVar1 = FUN_00433198(_Str,_EndPtr,_Radix,0);
  return uVar1;
}



undefined4 __cdecl
FUN_00433391(int param_1,int *param_2,uint **param_3,uint *param_4,undefined4 *param_5)

{
  int iVar1;
  uint *puVar2;
  undefined4 uVar3;
  
  iVar1 = *param_2;
  if (param_1 == iVar1) {
    if (*param_3 == param_4) {
      puVar2 = FUN_00403d40(iVar1,4);
      *param_3 = puVar2;
      if (puVar2 != (uint *)0x0) {
        *param_5 = 1;
        FID_conflict__memcpy(*param_3,param_4,*param_2 * 2);
LAB_004333ea:
        *param_2 = *param_2 << 1;
        goto LAB_004333ec;
      }
    }
    else {
      puVar2 = FUN_00403cc0(*param_3,iVar1,4);
      if (puVar2 != (uint *)0x0) {
        *param_3 = puVar2;
        goto LAB_004333ea;
      }
    }
    uVar3 = 0;
  }
  else {
LAB_004333ec:
    uVar3 = 1;
  }
  return uVar3;
}



// Library Function - Single Match
//  __hextodec
// 
// Library: Visual Studio 2012 Release

uint __cdecl __hextodec(uint param_1)

{
  uint in_EAX;
  ushort uVar1;
  
  uVar1 = (ushort)param_1;
  if ((param_1 & 0xff00) == 0) {
    in_EAX = _isdigit(param_1 & 0xff);
    if (in_EAX != 0) goto LAB_0043341d;
  }
  uVar1 = (uVar1 & 0xffdf) - 7;
LAB_0043341d:
  return in_EAX & 0xffff0000 | (uint)uVar1;
}



void __cdecl FUN_00433424(undefined4 param_1,FILE *param_2)

{
  if ((short)param_1 != -1) {
    FUN_00438cbf(param_1,param_2);
    return;
  }
  return;
}



// Library Function - Single Match
//  __whiteout
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2019 Release

uint __thiscall __whiteout(void *this,int *param_1,FILE *param_2)

{
  uint uVar1;
  uint uVar2;
  WCHAR WVar3;
  
  do {
    *param_1 = *param_1 + 1;
    uVar1 = FUN_00438b06(this,param_2);
    uVar2 = 0;
    WVar3 = (WCHAR)(uVar1 & 0xffff);
    if (WVar3 == L'\xffff') break;
    this = &DAT_00000008;
    uVar2 = FUN_00432849(WVar3,8);
  } while (uVar2 != 0);
  return uVar2 & 0xffff0000 | uVar1 & 0xffff;
}



void __cdecl FUN_0043346f(FILE *param_1,WCHAR *param_2,pthreadlocinfo *param_3,uint **param_4)

{
  byte *pbVar1;
  size_t _DstSizeInBytes;
  ushort uVar2;
  WCHAR WVar3;
  bool bVar4;
  FILE *pFVar5;
  int *piVar6;
  uint uVar7;
  int iVar8;
  WCHAR *pWVar9;
  uint uVar10;
  int iVar11;
  char *_Dst;
  errno_t eVar12;
  code *pcVar13;
  uint *puVar14;
  void *this;
  void *this_00;
  void *this_01;
  FILE *extraout_ECX;
  FILE *extraout_ECX_00;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined extraout_DL_04;
  undefined extraout_DL_05;
  undefined extraout_DL_06;
  undefined extraout_DL_07;
  undefined extraout_DL_08;
  undefined extraout_DL_09;
  undefined extraout_DL_10;
  undefined extraout_DL_11;
  undefined extraout_DL_12;
  undefined extraout_DL_13;
  undefined extraout_DL_14;
  undefined extraout_DL_15;
  undefined uVar15;
  char cVar17;
  uint **extraout_EDX;
  uint **extraout_EDX_00;
  uint **extraout_EDX_01;
  uint **extraout_EDX_02;
  uint **extraout_EDX_03;
  uint **ppuVar16;
  uint **extraout_EDX_04;
  uint **extraout_EDX_05;
  uint **extraout_EDX_06;
  uint **extraout_EDX_07;
  char cVar18;
  WCHAR WVar19;
  short sVar20;
  undefined *puVar21;
  int iVar22;
  uint uVar23;
  uint uVar24;
  FILE *pFVar25;
  uint **ppuVar26;
  bool bVar27;
  undefined8 uVar28;
  ulonglong uVar29;
  longlong lVar30;
  char *pcVar31;
  undefined *puVar32;
  undefined uVar33;
  int in_stack_fffffcb8;
  int local_340;
  char local_33c;
  uint local_338;
  uint **local_334;
  uint **local_32c;
  uint *local_328;
  int local_324;
  int local_320;
  int local_31c;
  uint local_318;
  byte local_311;
  uint local_310;
  int local_30c;
  uint *local_308;
  void *local_304;
  uint *local_300;
  uint local_2fc;
  byte local_2f5;
  uint *local_2f4;
  char local_2ed;
  uint local_2ec;
  char local_2e5;
  uint **local_2e4;
  FILE *local_2e0;
  char local_2d9;
  FILE *local_2d8;
  uint local_2d4;
  WCHAR *local_2d0;
  undefined *local_2cc;
  char local_2c7;
  char local_2c6;
  char local_2c5;
  uint local_2c4 [175];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  local_2f4 = local_2c4;
  local_32c = param_4;
  local_2e0 = param_1;
  local_2d0 = param_2;
  local_324 = 0x15e;
  local_320 = 0;
  local_328 = (uint *)0x0;
  bVar4 = false;
  local_310 = 0;
  local_304 = (void *)0x0;
  local_334 = (uint **)0x0;
  puVar21 = (undefined *)0x0;
  local_2cc = (undefined *)0x0;
  if ((param_2 == (WCHAR *)0x0) || (param_1 == (FILE *)0x0)) {
    piVar6 = __errno();
    uVar33 = (undefined)in_stack_fffffcb8;
    *piVar6 = 0x16;
    FUN_00429bfe();
    uVar15 = extraout_DL;
    goto LAB_004347c5;
  }
  FUN_00427078(&stack0xfffffcb8,param_3);
  uVar24 = 0;
  local_2c7 = '\0';
  local_2d4 = 0;
  WVar19 = *param_2;
  local_2ec = 0;
  local_31c = 0;
  uVar15 = extraout_DL_00;
  if (WVar19 != L'\0') {
LAB_0043353c:
    puVar32 = &DAT_00000008;
    uVar7 = FUN_00432849(WVar19,8);
    pFVar25 = local_2e0;
    if (uVar7 == 0) {
      if (*param_2 == L'%') {
        if (param_2[1] == L'%') {
          if ((true) && (param_2[1] == L'%')) {
            local_2d0 = param_2 + 1;
          }
          goto LAB_00434710;
        }
        iVar22 = 0;
        local_338 = 0;
        uVar24 = 0x100;
        local_318 = 0;
        puVar14 = (uint *)0x0;
        local_2fc = 0;
        local_30c = 0;
        pFVar25 = (FILE *)0x0;
        local_311 = 0;
        local_2ed = '\0';
        local_2c5 = '\0';
        local_2f5 = 0;
        local_2e5 = '\0';
        local_2c6 = '\0';
        local_2d9 = '\x01';
        local_300 = (uint *)0x0;
        local_2d0 = param_2;
        do {
          local_2d0 = local_2d0 + 1;
          uVar7 = (uint)(ushort)*local_2d0;
          if ((*local_2d0 & 0xff00U) == 0) {
            iVar8 = _isdigit(uVar7 & 0xff);
            uVar24 = (uint)local_2f5;
            puVar14 = local_300;
            if (iVar8 == 0) {
              uVar24 = (uint)CONCAT11(local_2d9,local_2f5);
              goto LAB_0043365a;
            }
            iVar22 = iVar22 + 1;
            pFVar25 = (FILE *)((int)pFVar25 * 10 + -0x30 + uVar7);
            local_30c = iVar22;
LAB_00433737:
            cVar18 = (char)uVar24;
            uVar7 = (uint)CONCAT11(local_2c6,local_2c5);
          }
          else {
LAB_0043365a:
            cVar18 = (char)uVar24;
            cVar17 = (char)(uVar24 >> 8);
            if (uVar7 < 0x4f) {
              if (uVar7 != 0x4e) {
                if (uVar7 == 0x2a) {
                  local_2c5 = local_2c5 + '\x01';
                }
                else if (uVar7 != 0x46) {
                  if (uVar7 == 0x49) {
                    WVar19 = local_2d0[1];
                    if ((WVar19 == L'6') && (local_2d0[2] == L'4')) {
                      pWVar9 = local_2d0 + 2;
                      puVar14 = local_300;
                      goto LAB_004336b5;
                    }
                    if ((WVar19 == L'3') && (local_2d0[2] == L'2')) {
                      local_2d0 = local_2d0 + 2;
                      puVar14 = local_300;
                    }
                    else {
                      puVar14 = local_300;
                      if (WVar19 != L'd') {
                        if (WVar19 == L'i') goto LAB_0043381c;
                        if (((WVar19 != L'o') && (WVar19 != L'x')) && (WVar19 != L'X'))
                        goto LAB_004337af;
                      }
                    }
                  }
                  else if (uVar7 == 0x4c) {
                    uVar24 = (uint)CONCAT11(cVar17 + '\x01',cVar18);
                    local_2d9 = (char)(uVar24 >> 8);
                  }
                  else {
LAB_004337af:
                    local_2f5 = cVar18 + 1;
                    uVar24 = (uint)local_2f5;
                    puVar14 = local_300;
                  }
                }
              }
              goto LAB_00433737;
            }
            if (uVar7 == 0x68) {
              uVar24 = (uint)CONCAT11(cVar17 + -1,cVar18);
              local_2c6 = local_2c6 + -1;
              local_2d9 = (char)(uVar24 >> 8);
LAB_0043381c:
              cVar18 = (char)uVar24;
              uVar7 = (uint)CONCAT11(local_2c6,local_2c5);
            }
            else {
              if (uVar7 == 0x6c) {
                pWVar9 = local_2d0 + 1;
                if (*pWVar9 == L'l') {
LAB_004336b5:
                  local_300 = (uint *)((int)puVar14 + 1);
                  local_310 = 0;
                  local_304 = (void *)0x0;
                  puVar14 = local_300;
                  local_2d0 = pWVar9;
                  goto LAB_00433737;
                }
                uVar24 = (uint)CONCAT11(cVar17 + '\x01',cVar18);
                local_2d9 = (char)(uVar24 >> 8);
              }
              else if (uVar7 != 0x77) goto LAB_004337af;
              cVar18 = (char)uVar24;
              local_2c6 = local_2c6 + '\x01';
              uVar7 = (uint)CONCAT11(local_2c6,local_2c5);
            }
          }
          uVar23 = local_318;
          uVar24 = (uint)CONCAT11(local_2d9,cVar18);
        } while (cVar18 == '\0');
        if ((char)uVar7 == '\0') {
          local_334 = local_32c;
          puVar14 = *local_32c;
          local_32c = local_32c + 1;
          local_308 = puVar14;
        }
        else {
          local_308 = (uint *)0x0;
        }
        uVar24 = uVar7 & 0xffffff00;
        if ((char)(uVar7 >> 8) == '\0') {
          if ((*local_2d0 == L'S') || (*local_2d0 == L'C')) {
            uVar24 = 0xff00;
          }
          else {
            uVar24 = 0x100;
          }
        }
        local_2e4 = (uint **)((ushort)*local_2d0 | 0x20);
        uVar7 = local_2d4;
        local_2d8 = pFVar25;
        if (local_2e4 != (uint **)0x6e) {
          if ((local_2e4 == (uint **)0x63) || (local_2e4 == (uint **)0x7b)) {
            uVar7 = local_2d4 + 1;
            local_2ec = uVar7;
            local_2d4 = uVar7;
            uVar10 = FUN_00438b06(puVar14,local_2e0);
            uVar15 = extraout_DL_03;
          }
          else {
            uVar10 = __whiteout(puVar14,(int *)&local_2ec,local_2e0);
            local_2d4 = local_2ec;
            uVar7 = local_2ec;
            uVar15 = extraout_DL_02;
          }
          local_2cc = (undefined *)(uVar10 & 0xffff);
          if ((short)local_2cc != -1) goto LAB_004338ce;
          goto LAB_00433c46;
        }
LAB_004338ce:
        pFVar25 = local_2e0;
        if ((local_30c != 0) && (local_2d8 == (FILE *)0x0)) goto LAB_0043479a;
        cVar18 = (char)(uVar24 >> 8);
        WVar19 = (WCHAR)local_2cc;
        puVar32 = local_2cc;
        ppuVar16 = local_2e4;
        if ((int)local_2e4 < 0x70) {
          if (local_2e4 == (uint **)0x6f) goto LAB_004343a6;
          if (local_2e4 == (uint **)0x63) {
            if (local_30c == 0) {
              local_2d8 = (FILE *)((int)&local_2d8->_ptr + 1);
              local_30c = 1;
            }
            goto LAB_00433e32;
          }
          if (local_2e4 == (uint **)0x64) goto LAB_004343a6;
          if ((int)local_2e4 < 0x65) {
LAB_00433f6f:
            if (*local_2d0 != WVar19) goto LAB_0043479a;
            local_2c7 = local_2c7 + -1;
            if (local_2c5 == '\0') {
              local_32c = local_334;
              ppuVar16 = local_334;
            }
            goto LAB_00433944;
          }
          if (0x67 < (int)local_2e4) {
            if (local_2e4 == (uint **)0x69) {
              local_2e4 = (uint **)0x64;
              goto LAB_004340f9;
            }
            if (local_2e4 != (uint **)0x6e) goto LAB_00433f6f;
            if (local_2c5 != '\0') goto LAB_00433944;
            goto LAB_004346ad;
          }
          iVar22 = 0;
          if (WVar19 == L'-') {
            iVar22 = 1;
            *(undefined2 *)local_2f4 = 0x2d;
            puVar14 = local_2f4;
LAB_0043399f:
            local_2d8 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3);
            uVar24 = local_2d4 + 1;
            local_2d4 = uVar24;
            uVar7 = FUN_00438b06(puVar14,local_2e0);
            local_2cc = (undefined *)(uVar7 & 0xffff);
          }
          else {
            puVar14 = (uint *)0x2b;
            uVar24 = local_2d4;
            if (WVar19 == L'+') goto LAB_0043399f;
          }
          if (local_30c == 0) {
            local_2d8 = (FILE *)0xffffffff;
          }
          while (((puVar32 = local_2cc, cVar18 = (char)local_2cc, ((uint)local_2cc & 0xff00) == 0 &&
                  (iVar8 = _isdigit((uint)local_2cc & 0xff), iVar8 != 0)) &&
                 (pFVar25 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3),
                 bVar27 = local_2d8 != (FILE *)0x0, local_2d8 = pFVar25, bVar27))) {
            local_2fc = local_2fc + 1;
            *(short *)((int)local_2f4 + iVar22 * 2) = (short)cVar18;
            iVar22 = iVar22 + 1;
            iVar8 = FUN_00433391(iVar22,&local_324,&local_2f4,local_2c4,&local_320);
            uVar15 = extraout_DL_04;
            if (iVar8 == 0) goto LAB_00433c46;
            uVar24 = uVar24 + 1;
            local_2d4 = uVar24;
            uVar7 = FUN_00438b06(this,local_2e0);
            local_2cc = (undefined *)(uVar7 & 0xffff);
          }
          uVar2 = **(ushort **)(*(int *)(in_stack_fffffcb8 + 0x84) + 0x30);
          if (((uint)uVar2 == (int)cVar18) &&
             (pFVar25 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3),
             bVar27 = local_2d8 != (FILE *)0x0, local_2d8 = pFVar25, bVar27)) {
            local_2d4 = local_2d4 + 1;
            uVar24 = FUN_00438b06(pFVar25,local_2e0);
            puVar32 = (undefined *)(uVar24 & 0xffff);
            *(ushort *)((int)local_2f4 + iVar22 * 2) = uVar2;
            iVar22 = iVar22 + 1;
            local_2cc = puVar32;
            iVar8 = FUN_00433391(iVar22,&local_324,&local_2f4,local_2c4,&local_320);
            uVar15 = extraout_DL_05;
            if (iVar8 == 0) goto LAB_00433c46;
            while (((((uint)puVar32 & 0xff00) == 0 &&
                    (iVar8 = _isdigit((uint)puVar32 & 0xff), iVar8 != 0)) &&
                   (pFVar25 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3),
                   bVar27 = local_2d8 != (FILE *)0x0, local_2d8 = pFVar25, bVar27))) {
              local_2fc = local_2fc + 1;
              *(short *)((int)local_2f4 + iVar22 * 2) = (short)puVar32;
              iVar22 = iVar22 + 1;
              iVar8 = FUN_00433391(iVar22,&local_324,&local_2f4,local_2c4,&local_320);
              uVar15 = extraout_DL_06;
              if (iVar8 == 0) goto LAB_00433c46;
              local_2d4 = local_2d4 + 1;
              uVar24 = FUN_00438b06(this_00,local_2e0);
              puVar32 = (undefined *)(uVar24 & 0xffff);
              local_2cc = puVar32;
            }
          }
          uVar24 = local_2d4;
          iVar8 = iVar22;
          if ((local_2fc == 0) ||
             ((((short)puVar32 != 0x65 && ((short)puVar32 != 0x45)) ||
              (pFVar25 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3),
              bVar27 = local_2d8 == (FILE *)0x0, local_2d8 = pFVar25, bVar27)))) {
LAB_00433d52:
            local_2ec = uVar24 - 1;
            local_2d4 = local_2ec;
            FUN_00433424(puVar32,local_2e0);
            uVar15 = SUB41(extraout_EDX,0);
            if (local_2fc == 0) goto LAB_00433c46;
            ppuVar16 = extraout_EDX;
            if (local_2c5 == '\0') {
              local_31c = local_31c + 1;
              *(undefined2 *)((int)local_2f4 + iVar8 * 2) = 0;
              iVar22 = local_324 * 2;
              _DstSizeInBytes = iVar22 + 2;
              _Dst = (char *)FUN_00403c30(_DstSizeInBytes);
              uVar15 = extraout_DL_12;
              if (_Dst == (char *)0x0) goto LAB_00433c46;
              eVar12 = _wcstombs_s((size_t *)0x0,_Dst,_DstSizeInBytes,(wchar_t *)local_2f4,
                                   iVar22 + 1);
              if ((eVar12 != 0) && ((eVar12 == 0x16 || (eVar12 == 0x22)))) {
LAB_004347d5:
                __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
                pcVar13 = (code *)swi(3);
                (*pcVar13)();
                return;
              }
              puVar21 = &stack0xfffffcb8;
              iVar22 = local_2d9 + -1;
              puVar14 = local_308;
              pcVar31 = _Dst;
              pcVar13 = (code *)DecodePointer(PTR_FUN_004482bc);
              (*pcVar13)(iVar22,puVar14,pcVar31,puVar21);
              FUN_00403c10(_Dst);
              ppuVar16 = extraout_EDX_00;
            }
            goto LAB_00433944;
          }
          *(undefined2 *)((int)local_2f4 + iVar22 * 2) = 0x65;
          iVar8 = iVar22 + 1;
          iVar11 = FUN_00433391(iVar8,&local_324,&local_2f4,local_2c4,&local_320);
          uVar15 = extraout_DL_07;
          if (iVar11 != 0) {
            uVar24 = local_2d4 + 1;
            uVar7 = FUN_00438b06(this_01,local_2e0);
            puVar32 = (undefined *)(uVar7 & 0xffff);
            local_2cc = puVar32;
            if ((short)puVar32 == 0x2d) {
              *(undefined2 *)((int)local_2f4 + iVar8 * 2) = 0x2d;
              iVar8 = iVar22 + 2;
              iVar22 = FUN_00433391(iVar8,&local_324,&local_2f4,local_2c4,&local_320);
              uVar15 = extraout_DL_08;
              if (iVar22 == 0) goto LAB_00433c46;
LAB_00433cb2:
              pFVar25 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3);
              pFVar5 = pFVar25;
              if (local_2d8 != (FILE *)0x0) goto LAB_00433d2c;
            }
            else if ((short)puVar32 == 0x2b) goto LAB_00433cb2;
            while (((((uint)puVar32 & 0xff00) == 0 &&
                    (iVar22 = _isdigit((uint)puVar32 & 0xff), iVar22 != 0)) &&
                   (pFVar25 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3),
                   bVar27 = local_2d8 != (FILE *)0x0, local_2d8 = pFVar25, bVar27))) {
              local_2fc = local_2fc + 1;
              *(short *)((int)local_2f4 + iVar8 * 2) = (short)puVar32;
              iVar8 = iVar8 + 1;
              iVar22 = FUN_00433391(iVar8,&local_324,&local_2f4,local_2c4,&local_320);
              pFVar25 = extraout_ECX;
              pFVar5 = local_2d8;
              uVar15 = extraout_DL_11;
              if (iVar22 == 0) goto LAB_00433c46;
LAB_00433d2c:
              local_2d8 = pFVar5;
              uVar24 = uVar24 + 1;
              uVar7 = FUN_00438b06(pFVar25,local_2e0);
              puVar32 = (undefined *)(uVar7 & 0xffff);
              local_2cc = puVar32;
            }
            goto LAB_00433d52;
          }
          goto LAB_00433c46;
        }
        if (local_2e4 == (uint **)0x70) {
          local_2d9 = '\x01';
LAB_004343a6:
          if (WVar19 == L'-') {
            local_2ed = '\x01';
          }
          else if (WVar19 != L'+') goto LAB_004341f6;
          local_2d8 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3);
          if ((local_2d8 == (FILE *)0x0) && (local_30c != 0)) {
            uVar24 = 1;
          }
          else {
            local_2ec = uVar7 + 1;
            local_2d4 = local_2ec;
            uVar7 = FUN_00438b06(local_2cc,local_2e0);
            local_2cc = (undefined *)(uVar7 & 0xffff);
          }
LAB_004341f6:
          cVar18 = (char)uVar24;
        }
        else {
          if (local_2e4 == (uint **)0x73) {
LAB_00433e32:
            pWVar9 = local_2d0;
            if ('\0' < cVar18) {
              local_2e5 = '\x01';
            }
            goto LAB_00433e3d;
          }
          if (local_2e4 == (uint **)0x75) goto LAB_004343a6;
          if (local_2e4 != (uint **)0x78) {
            if (local_2e4 != (uint **)0x7b) goto LAB_00433f6f;
            if ('\0' < cVar18) {
              local_2e5 = '\x01';
            }
            pWVar9 = local_2d0 + 1;
            if (*pWVar9 == L'^') {
              pWVar9 = local_2d0 + 2;
              local_311 = 0xff;
            }
            if (local_328 != (uint *)0x0) {
LAB_00433fff:
              FUN_00427870(local_328,0,0x2000);
              if (*pWVar9 == L']') {
                *(undefined *)((int)local_328 + 0xb) = 0x20;
                local_338 = 0x5d;
                pWVar9 = pWVar9 + 1;
              }
LAB_004340d1:
              do {
                uVar15 = 0x5d;
                WVar19 = *pWVar9;
                if (WVar19 == L']') goto code_r0x004340dd;
                if ((WVar19 == L'-') && ((WCHAR)local_338 != L'\0')) {
                  WVar3 = pWVar9[1];
                  if (WVar3 != L']') {
                    local_2d0 = pWVar9 + 2;
                    uVar24 = (uint)(ushort)WVar3;
                    local_318 = local_338;
                    if ((ushort)(WCHAR)local_338 < (ushort)WVar3) {
                      uVar24 = local_338;
                      local_318 = (uint)(ushort)WVar3;
                    }
                    if ((ushort)uVar24 < (ushort)local_318) {
                      uVar7 = local_318 - uVar24 & 0xffff;
                      do {
                        pbVar1 = (byte *)((uVar24 >> 3) + (int)local_328);
                        *pbVar1 = *pbVar1 | '\x01' << ((byte)uVar24 & 7);
                        uVar24 = uVar24 + 1;
                        uVar7 = uVar7 - 1;
                      } while (uVar7 != 0);
                    }
                    pbVar1 = (byte *)((local_318 >> 3) + (int)local_328);
                    *pbVar1 = *pbVar1 | '\x01' << ((byte)local_318 & 7);
                    local_338 = 0;
                    pWVar9 = local_2d0;
                    goto LAB_004340d1;
                  }
                }
                pbVar1 = (byte *)((uint)((ushort)WVar19 >> 3) + (int)local_328);
                *pbVar1 = *pbVar1 | '\x01' << ((byte)WVar19 & 7);
                local_338 = (uint)(ushort)WVar19;
                pWVar9 = pWVar9 + 1;
              } while( true );
            }
            local_328 = (uint *)FUN_00403c30(0x2000);
            uVar15 = extraout_DL_13;
            if (local_328 != (uint *)0x0) {
              bVar4 = true;
              goto LAB_00433fff;
            }
            goto LAB_00433c46;
          }
LAB_004340f9:
          ppuVar16 = local_2e4;
          if (WVar19 == L'-') {
            local_2ed = '\x01';
LAB_00434112:
            local_2d8 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3);
            if ((local_2d8 == (FILE *)0x0) && (local_30c != 0)) {
              uVar24 = 1;
            }
            else {
              local_2ec = local_2d4 + 1;
              local_2d4 = local_2ec;
              uVar7 = FUN_00438b06(local_2cc,local_2e0);
              local_2cc = (undefined *)(uVar7 & 0xffff);
            }
          }
          else if (WVar19 == L'+') goto LAB_00434112;
          cVar18 = (char)uVar24;
          if ((short)local_2cc != 0x30) goto LAB_004341f6;
          local_2ec = local_2d4 + 1;
          local_2d4 = local_2ec;
          uVar7 = FUN_00438b06(local_2cc,local_2e0);
          local_2cc = (undefined *)(uVar7 & 0xffff);
          if (((short)local_2cc == 0x78) || ((short)local_2cc == 0x58)) {
            local_2ec = local_2d4 + 1;
            local_2d4 = local_2ec;
            uVar24 = FUN_00438b06(local_2cc,local_2e0);
            local_2cc = (undefined *)(uVar24 & 0xffff);
            if ((local_30c != 0) &&
               (local_2d8 = (FILE *)((int)&local_2d8[-1]._tmpfname + 2), (int)local_2d8 < 1)) {
              cVar18 = cVar18 + '\x01';
            }
            local_2e4 = (uint **)0x78;
          }
          else {
            local_2fc = 1;
            if (ppuVar16 == (uint **)0x78) {
              local_2ec = local_2d4 - 1;
              local_2d4 = local_2ec;
              FUN_00433424(local_2cc,local_2e0);
              local_2cc = (undefined *)0x30;
              goto LAB_004341f6;
            }
            if ((local_30c != 0) &&
               (local_2d8 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3), local_2d8 == (FILE *)0x0))
            {
              cVar18 = cVar18 + '\x01';
            }
            local_2e4 = (uint **)0x6f;
          }
        }
        lVar30 = CONCAT44(local_304,local_310);
        ppuVar26 = local_2e4;
        ppuVar16 = local_2e4;
        if (local_300 == (uint *)0x0) {
          uVar24 = local_2d4;
          if (cVar18 == '\0') {
            while ((local_2e4 != (uint **)0x78 && (local_2e4 != (uint **)0x70))) {
              if ((((uint)local_2cc & 0xff00) != 0) ||
                 (iVar22 = _isdigit((uint)local_2cc & 0xff), iVar22 == 0)) goto LAB_00434659;
              ppuVar16 = extraout_EDX_05;
              if (local_2e4 == (uint **)0x6f) {
                if (0x37 < (ushort)local_2cc) goto LAB_00434659;
                uVar7 = uVar23 << 3;
              }
              else {
                uVar7 = uVar23 * 10;
              }
LAB_004345fe:
              local_2fc = local_2fc + 1;
              uVar23 = (uVar7 - 0x30) + ((uint)local_2cc & 0xffff);
              if ((local_30c != 0) &&
                 (local_2d8 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3), ppuVar26 = local_2e4,
                 local_2d8 == (FILE *)0x0)) goto LAB_0043467c;
              uVar24 = uVar24 + 1;
              local_2ec = uVar24;
              local_2d4 = uVar24;
              uVar7 = FUN_00438b06(local_2cc,local_2e0);
              local_2cc = (undefined *)(uVar7 & 0xffff);
            }
            if ((((uint)local_2cc & 0xff00) == 0) &&
               (iVar22 = _isxdigit((uint)local_2cc & 0xff), iVar22 != 0)) {
              local_318 = uVar23 << 4;
              uVar7 = __hextodec((uint)local_2cc);
              local_2cc = (undefined *)(uVar7 & 0xffff);
              ppuVar16 = extraout_EDX_06;
              uVar7 = local_318;
              goto LAB_004345fe;
            }
LAB_00434659:
            ppuVar26 = local_2e4;
            local_2ec = uVar24 - 1;
            local_2d4 = local_2ec;
            FUN_00433424(local_2cc,local_2e0);
            ppuVar16 = extraout_EDX_07;
          }
LAB_0043467c:
          uVar7 = uVar23;
          if (local_2ed != '\0') {
            uVar7 = -uVar23;
          }
        }
        else {
          uVar24 = local_2d4;
          pFVar25 = local_2e0;
          if (cVar18 == '\0') {
            while ((local_2e4 != (uint **)0x78 && (local_2e4 != (uint **)0x70))) {
              if (((uint)local_2cc & 0xff00) != 0) goto LAB_004344f6;
              iVar22 = _isdigit((uint)local_2cc & 0xff);
              ppuVar26 = local_2e4;
              local_304 = (void *)((ulonglong)lVar30 >> 0x20);
              local_310 = (uint)lVar30;
              if (iVar22 == 0) goto LAB_004344f6;
              if (local_2e4 == (uint **)0x6f) {
                if (0x37 < (ushort)local_2cc) goto LAB_004344f6;
                uVar29 = lVar30 << 3;
              }
              else {
                uVar29 = __allmul(local_310,(uint)local_304,10,0);
                local_304 = (void *)((ulonglong)lVar30 >> 0x20);
                local_310 = (uint)lVar30;
              }
LAB_00434483:
              pFVar25 = local_2e0;
              local_2fc = local_2fc + 1;
              iVar22 = ((uint)local_2cc & 0xffff) - 0x30;
              ppuVar16 = (uint **)(iVar22 >> 0x1f);
              lVar30 = uVar29 + (longlong)iVar22;
              local_304 = (void *)((ulonglong)lVar30 >> 0x20);
              if ((local_30c != 0) &&
                 (local_2d8 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3), uVar23 = local_318,
                 local_2d8 == (FILE *)0x0)) goto LAB_00434518;
              uVar24 = uVar24 + 1;
              local_2ec = uVar24;
              local_2d4 = uVar24;
              uVar7 = FUN_00438b06(local_304,local_2e0);
              local_304 = (void *)((ulonglong)lVar30 >> 0x20);
              local_310 = (uint)lVar30;
              local_2cc = (undefined *)(uVar7 & 0xffff);
            }
            if (((uint)local_2cc & 0xff00) == 0) {
              iVar22 = _isxdigit((uint)local_2cc & 0xff);
              local_304 = (void *)((ulonglong)lVar30 >> 0x20);
              local_310 = (uint)lVar30;
              if (iVar22 != 0) {
                uVar29 = lVar30 << 4;
                uVar7 = __hextodec((uint)local_2cc);
                local_304 = (void *)(uVar29 >> 0x20);
                local_310 = (uint)uVar29;
                local_2cc = (undefined *)(uVar7 & 0xffff);
                ppuVar26 = local_2e4;
                goto LAB_00434483;
              }
            }
LAB_004344f6:
            ppuVar26 = local_2e4;
            local_2ec = uVar24 - 1;
            local_2d4 = local_2ec;
            FUN_00433424(local_2cc,pFVar25);
            local_304 = (void *)((ulonglong)lVar30 >> 0x20);
            local_310 = (uint)lVar30;
            ppuVar16 = extraout_EDX_04;
            uVar23 = local_318;
          }
LAB_00434518:
          local_310 = (uint)lVar30;
          uVar7 = uVar23;
          if (local_2ed != '\0') {
            bVar27 = local_310 != 0;
            local_310 = -local_310;
            local_304 = (void *)-((int)((ulonglong)lVar30 >> 0x20) + (uint)bVar27);
          }
        }
        uVar15 = SUB41(ppuVar16,0);
        if ((-(uint)(ppuVar26 != (uint **)0x46) & local_2fc) == 0) goto LAB_00433c46;
        puVar32 = local_2cc;
        if (local_2c5 == '\0') {
          local_31c = local_31c + 1;
LAB_004346ad:
          puVar32 = local_2cc;
          if (local_300 == (uint *)0x0) {
            if (local_2d9 == '\0') {
              *(short *)local_308 = (short)uVar7;
            }
            else {
              *local_308 = uVar7;
            }
          }
          else {
            *local_308 = local_310;
            local_308[1] = (uint)local_304;
          }
        }
        goto LAB_00433944;
      }
LAB_00434710:
      uVar24 = uVar24 + 1;
      local_2ec = uVar24;
      local_2d4 = uVar24;
      uVar7 = FUN_00438b06((void *)0x25,local_2e0);
      puVar32 = (undefined *)(uVar7 & 0xffff);
      WVar19 = *local_2d0;
      local_2d0 = local_2d0 + 1;
      uVar15 = extraout_DL_14;
      local_2cc = puVar32;
      if (WVar19 != (WCHAR)puVar32) {
LAB_0043479a:
        FUN_00433424(local_2cc,pFVar25);
        uVar15 = extraout_DL_15;
        goto LAB_00433c46;
      }
      goto LAB_0043474a;
    }
    local_2ec = uVar24 - 1;
    uVar24 = __whiteout(puVar32,(int *)&local_2ec,local_2e0);
    FUN_00433424(uVar24 & 0xffff,pFVar25);
    do {
      param_2 = param_2 + 1;
      uVar24 = FUN_00432849(*param_2,8);
    } while (uVar24 != 0);
    local_2d4 = local_2ec;
    uVar24 = local_2ec;
    uVar15 = extraout_DL_01;
    local_2d0 = param_2;
    goto LAB_00434779;
  }
  goto LAB_004347af;
code_r0x004340dd:
  if (*pWVar9 != L'\0') {
LAB_00433e3d:
    local_2d0 = pWVar9;
    puVar32 = local_2cc;
    puVar14 = local_308;
    local_2ec = local_2d4 - 1;
    pFVar25 = local_2e0;
    local_2d4 = local_2ec;
    FUN_00433424(local_2cc,local_2e0);
    ppuVar26 = local_2e4;
    ppuVar16 = extraout_EDX_01;
LAB_00433e70:
    if ((local_30c != 0) &&
       (pFVar25 = (FILE *)((int)&local_2d8[-1]._tmpfname + 3), bVar27 = local_2d8 == (FILE *)0x0,
       local_2d8 = pFVar25, bVar27)) goto LAB_0043435c;
    local_2ec = local_2d4 + 1;
    pFVar5 = local_2e0;
    local_2d4 = local_2ec;
    uVar24 = FUN_00438b06(pFVar25,local_2e0);
    pFVar25 = pFVar5;
    puVar32 = (undefined *)(uVar24 & 0xffff);
    WVar19 = (WCHAR)puVar32;
    local_2cc = puVar32;
    if (WVar19 == L'\xffff') goto LAB_0043433b;
    ppuVar16 = extraout_EDX_02;
    if (ppuVar26 != (uint **)0x63) {
      if (ppuVar26 == (uint **)0x73) {
        if ((&DAT_00000008 < puVar32) && (puVar32 < (undefined *)0xe)) goto LAB_0043433b;
        if (WVar19 != L' ') goto LAB_00433f1a;
      }
      if (ppuVar26 != (uint **)0x7b) goto LAB_0043433b;
      ppuVar16 = (uint **)(1 << ((byte)puVar32 & 7));
      pFVar25 = (FILE *)(int)(char)(*(byte *)(((uint)puVar32 >> 3) + (int)local_328) ^ local_311);
      if (((uint)pFVar25 & (uint)ppuVar16) == 0) goto LAB_0043433b;
    }
LAB_00433f1a:
    if (local_2c5 == '\0') {
      if (local_2e5 == '\0') {
        local_318 = 0;
        uVar28 = FUN_00436865((int *)&local_318,local_308,5,WVar19);
        ppuVar16 = (uint **)((ulonglong)uVar28 >> 0x20);
        iVar22 = (int)uVar28;
        pFVar25 = extraout_ECX_00;
        if (iVar22 == 0) {
          local_308 = (uint *)((int)local_308 + local_318);
        }
        else if ((iVar22 == 0x16) || (iVar22 == 0x22)) goto LAB_004347d5;
      }
      else {
        *(WCHAR *)local_308 = WVar19;
        local_308 = (uint *)((int)local_308 + 2);
      }
    }
    else {
      puVar14 = (uint *)((int)puVar14 + 2);
    }
    goto LAB_00433e70;
  }
  goto LAB_00433c46;
LAB_0043433b:
  local_2ec = local_2d4 - 1;
  local_2d4 = local_2ec;
  FUN_00433424(puVar32,local_2e0);
  ppuVar16 = extraout_EDX_03;
LAB_0043435c:
  uVar15 = SUB41(ppuVar16,0);
  if (puVar14 != local_308) {
    if ((local_2c5 == '\0') && (local_31c = local_31c + 1, ppuVar26 != (uint **)0x63)) {
      if (local_2e5 == '\0') {
        *(undefined *)local_308 = 0;
      }
      else {
        *(undefined2 *)local_308 = 0;
      }
    }
LAB_00433944:
    uVar15 = SUB41(ppuVar16,0);
    local_2c7 = local_2c7 + '\x01';
    local_2d0 = local_2d0 + 1;
    uVar24 = local_2d4;
LAB_0043474a:
    sVar20 = (short)local_2cc;
    puVar21 = local_2cc;
    if (((short)puVar32 == -1) && ((*local_2d0 != L'%' || (local_2d0[1] != L'n'))))
    goto LAB_00433c4c;
LAB_00434779:
    sVar20 = (short)puVar21;
    WVar19 = *local_2d0;
    param_2 = local_2d0;
    if (WVar19 == L'\0') goto LAB_00433c4c;
    goto LAB_0043353c;
  }
LAB_00433c46:
  sVar20 = (short)local_2cc;
LAB_00433c4c:
  if (bVar4) {
    FUN_00403c10(local_328);
    uVar15 = extraout_DL_09;
  }
  if (local_320 == 1) {
    FUN_00403c10(local_2f4);
    uVar15 = extraout_DL_10;
  }
  uVar33 = (undefined)in_stack_fffffcb8;
  if (sVar20 != -1) {
LAB_004347af:
    uVar33 = (undefined)in_stack_fffffcb8;
  }
  if (local_33c != '\0') {
    *(uint *)(local_340 + 0x70) = *(uint *)(local_340 + 0x70) & 0xfffffffd;
  }
LAB_004347c5:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar15,uVar33);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  ___raise_securityfailure
// 
// Library: Visual Studio 2012 Release

void __cdecl ___raise_securityfailure(EXCEPTION_POINTERS *param_1)

{
  _DAT_004591a4 = IsDebuggerPresent();
  FUN_00434a98();
  ___crtUnhandledException(param_1);
  if (_DAT_004591a4 == 0) {
    FUN_00434a98();
  }
  ___crtTerminateProcess(0xc0000409);
  return;
}



// Library Function - Multiple Matches With Different Base Names
//  int __cdecl GetTableIndexFromLocaleName(wchar_t const *)
//  int __cdecl ATL::_AtlGetTableIndexFromLocaleName(wchar_t const *)
//  _GetTableIndexFromLocaleName
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release

undefined4 __cdecl FID_conflict_GetTableIndexFromLocaleName(wchar_t *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = 0;
  iVar2 = 0xe3;
  do {
    iVar3 = (iVar2 + iVar4) / 2;
    iVar1 = __wcsnicmp(param_1,*(wchar_t **)(&UNK_00440a28 + iVar3 * 8),0x55);
    if (iVar1 == 0) {
      return *(undefined4 *)(&UNK_00440a2c + iVar3 * 8);
    }
    if (iVar1 < 0) {
      iVar2 = iVar3 + -1;
    }
    else {
      iVar4 = iVar3 + 1;
    }
  } while (iVar4 <= iVar2);
  return 0xffffffff;
}



void __cdecl
FUN_00434968(wchar_t *param_1,DWORD param_2,PCNZWCH param_3,int param_4,PCNZWCH param_5,int param_6)

{
  LCID Locale;
  
  if ((code *)(DAT_00459274 ^ DAT_00447ff8) != (code *)0x0) {
    (*(code *)(DAT_00459274 ^ DAT_00447ff8))(param_1,param_2,param_3,param_4,param_5,param_6,0,0,0);
    return;
  }
  Locale = FID_conflict__AtlDownlevelLocaleNameToLCID(param_1);
  CompareStringW(Locale,param_2,param_3,param_4,param_5,param_6);
  return;
}



// Library Function - Multiple Matches With Different Base Names
//  unsigned long __cdecl ATL::_AtlDownlevelLocaleNameToLCID(wchar_t const *)
//  ___acrt_DownlevelLocaleNameToLCID
//  ___crtDownlevelLocaleNameToLCID
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release, Visual Studio 2019 Release

undefined4 __cdecl FID_conflict__AtlDownlevelLocaleNameToLCID(wchar_t *param_1)

{
  uint uVar1;
  
  if (param_1 != (wchar_t *)0x0) {
    uVar1 = FID_conflict_GetTableIndexFromLocaleName(param_1);
    if ((-1 < (int)uVar1) && (uVar1 < 0xe4)) {
      return *(undefined4 *)(&DAT_00440308 + uVar1 * 8);
    }
  }
  return 0;
}



void __cdecl
FUN_004349de(wchar_t *param_1,DWORD param_2,LPCWSTR param_3,int param_4,LPWSTR param_5,int param_6)

{
  LCID Locale;
  
  if ((code *)(DAT_00459290 ^ DAT_00447ff8) != (code *)0x0) {
    (*(code *)(DAT_00459290 ^ DAT_00447ff8))(param_1,param_2,param_3,param_4,param_5,param_6,0,0,0);
    return;
  }
  Locale = FID_conflict__AtlDownlevelLocaleNameToLCID(param_1);
  LCMapStringW(Locale,param_2,param_3,param_4,param_5,param_6);
  return;
}



// Library Function - Single Match
//  __wcsnicmp
// 
// Library: Visual Studio 2019 Release

int __cdecl __wcsnicmp(wchar_t *_Str1,wchar_t *_Str2,size_t _MaxCount)

{
  wchar_t wVar1;
  int iVar2;
  wchar_t wVar3;
  
  iVar2 = 0;
  if (_MaxCount != 0) {
    iVar2 = (int)_Str1 - (int)_Str2;
    do {
      wVar3 = *(wchar_t *)(iVar2 + (int)_Str2);
      if ((0x40 < (ushort)wVar3) && ((ushort)wVar3 < 0x5b)) {
        wVar3 = wVar3 + L' ';
      }
      wVar1 = *_Str2;
      if ((0x40 < (ushort)wVar1) && ((ushort)wVar1 < 0x5b)) {
        wVar1 = wVar1 + L' ';
      }
      _Str2 = _Str2 + 1;
      _MaxCount = _MaxCount - 1;
    } while (((_MaxCount != 0) && (wVar3 != L'\0')) && (wVar3 == wVar1));
    iVar2 = (uint)(ushort)wVar3 - (uint)(ushort)wVar1;
  }
  return iVar2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00434a98(void)

{
  _DAT_00459208 = 0;
  return;
}



int __cdecl FUN_00434aa0(byte *param_1,byte *param_2,uint param_3,pthreadlocinfo *param_4)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_4);
  if (param_3 == 0) {
    iVar3 = 0;
  }
  else if ((param_1 == (byte *)0x0) || (param_2 == (byte *)0x0)) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    iVar3 = 0x7fffffff;
  }
  else {
    iVar3 = 0x7fffffff;
    if (param_3 < 0x80000000) {
      if (local_14[0]->locale_name[1] == (wchar_t *)0x0) {
        iVar3 = FUN_0043922b((char *)param_1,param_2,param_3,local_14);
      }
      else {
        iVar2 = FUN_00434e09(local_14,local_14[0]->locale_name[1],0x1001,param_1,param_3,param_2,
                             param_3,local_14[0]->lc_collate_cp);
        if (iVar2 == 0) {
          piVar1 = __errno();
          *piVar1 = 0x16;
        }
        else {
          iVar3 = iVar2 + -2;
        }
      }
    }
    else {
      piVar1 = __errno();
      *piVar1 = 0x16;
      FUN_00429bfe();
    }
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return iVar3;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe

void __cdecl
FUN_00434b65(int *param_1,wchar_t *param_2,DWORD param_3,byte *param_4,int param_5,byte *param_6,
            int param_7,UINT param_8)

{
  uint uVar1;
  BOOL BVar2;
  BYTE *pBVar3;
  uint uVar4;
  int iVar5;
  uint uVar6;
  undefined4 *puVar7;
  byte in_DL;
  byte extraout_DL;
  byte extraout_DL_00;
  byte extraout_DL_01;
  byte extraout_DL_02;
  byte extraout_DL_03;
  uint extraout_EDX;
  undefined4 *lpWideCharStr;
  undefined4 *puVar8;
  undefined uVar9;
  _cpinfo local_1c;
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  if (param_5 < 1) {
    if (-2 < param_5) goto LAB_00434ba5;
  }
  else {
    param_5 = ___strncnt((char *)param_4,param_5);
    in_DL = extraout_DL;
LAB_00434ba5:
    if (param_7 < 1) {
      if (param_7 < -1) goto LAB_00434bbe;
    }
    else {
      param_7 = ___strncnt((char *)param_6,param_7);
      in_DL = extraout_DL_00;
    }
    lpWideCharStr = (undefined4 *)0x0;
    if (param_8 == 0) {
      param_8 = *(UINT *)(*param_1 + 4);
    }
    if ((param_5 == 0) || (param_7 == 0)) {
      if (param_5 == param_7) {
LAB_00434bf1:
        uVar9 = SUB41(param_2,0);
        goto LAB_00434dd5;
      }
      if (param_7 < 2) {
        if (param_5 < 2) {
          BVar2 = GetCPInfo(param_8,&local_1c);
          in_DL = (byte)extraout_EDX;
          if (BVar2 == 0) goto LAB_00434bbe;
          if (param_5 < 1) {
            if (param_7 < 1) goto LAB_00434c83;
            if (1 < local_1c.MaxCharSize) {
              pBVar3 = local_1c.LeadByte;
              uVar4 = extraout_EDX;
              while (local_1c.LeadByte[0] != 0) {
                in_DL = (byte)uVar4;
                if (pBVar3[1] == 0) break;
                in_DL = *param_6;
                uVar4 = (uint)in_DL;
                if ((*pBVar3 <= in_DL) && (in_DL <= pBVar3[1])) goto LAB_00434bf1;
                pBVar3 = pBVar3 + 2;
                local_1c.LeadByte[0] = *pBVar3;
              }
            }
            goto LAB_00434bfe;
          }
          if (1 < local_1c.MaxCharSize) {
            pBVar3 = local_1c.LeadByte;
            uVar4 = extraout_EDX;
            while (local_1c.LeadByte[0] != 0) {
              in_DL = (byte)uVar4;
              if (pBVar3[1] == 0) break;
              in_DL = *param_4;
              uVar4 = (uint)in_DL;
              if ((*pBVar3 <= in_DL) && (in_DL <= pBVar3[1])) goto LAB_00434bf1;
              pBVar3 = pBVar3 + 2;
              local_1c.LeadByte[0] = *pBVar3;
            }
          }
        }
        uVar9 = SUB41(param_2,0);
      }
      else {
LAB_00434bfe:
        uVar9 = SUB41(param_2,0);
      }
      goto LAB_00434dd5;
    }
LAB_00434c83:
    uVar4 = MultiByteToWideChar(param_8,9,(LPCSTR)param_4,param_5,(LPWSTR)0x0,0);
    in_DL = extraout_DL_01;
    if (uVar4 != 0) {
      if (((0 < (int)uVar4) && (in_DL = (byte)(0xffffffe0 % uVar4), 1 < 0xffffffe0 / uVar4)) &&
         (uVar4 * 2 < uVar4 * 2 + 8)) {
        uVar6 = uVar4 * 2 + 8;
        if (uVar6 < 0x401) {
          puVar7 = (undefined4 *)&stack0xffffffc4;
          lpWideCharStr = (undefined4 *)&stack0xffffffc4;
          if (&stack0x00000000 != (undefined *)0x3c) {
LAB_00434cef:
            lpWideCharStr = puVar7 + 2;
          }
        }
        else {
          puVar7 = (undefined4 *)FUN_00403c30(uVar6);
          lpWideCharStr = puVar7;
          in_DL = extraout_DL_02;
          if (puVar7 != (undefined4 *)0x0) {
            *puVar7 = 0xdddd;
            goto LAB_00434cef;
          }
        }
      }
      if (lpWideCharStr != (undefined4 *)0x0) {
        iVar5 = MultiByteToWideChar(param_8,1,(LPCSTR)param_4,param_5,(LPWSTR)lpWideCharStr,uVar4);
        if ((iVar5 != 0) &&
           (uVar6 = MultiByteToWideChar(param_8,9,(LPCSTR)param_6,param_7,(LPWSTR)0x0,0), uVar6 != 0
           )) {
          if (((int)uVar6 < 1) || ((0xffffffe0 / uVar6 < 2 || (uVar6 * 2 + 8 <= uVar6 * 2)))) {
            puVar7 = (undefined4 *)0x0;
          }
          else {
            uVar1 = uVar6 * 2 + 8;
            if (uVar1 < 0x401) {
              puVar8 = (undefined4 *)&stack0xffffffc4;
              puVar7 = (undefined4 *)&stack0xffffffc4;
              if (&stack0x00000000 != (undefined *)0x3c) {
LAB_00434d83:
                puVar7 = puVar8 + 2;
              }
            }
            else {
              puVar7 = (undefined4 *)FUN_00403c30(uVar1);
              if (puVar7 != (undefined4 *)0x0) {
                *puVar7 = 0xdddd;
                puVar8 = puVar7;
                goto LAB_00434d83;
              }
            }
          }
          if (puVar7 != (undefined4 *)0x0) {
            iVar5 = MultiByteToWideChar(param_8,1,(LPCSTR)param_6,param_7,(LPWSTR)puVar7,uVar6);
            if (iVar5 != 0) {
              FUN_00434968(param_2,param_3,(PCNZWCH)lpWideCharStr,uVar4,(PCNZWCH)puVar7,uVar6);
            }
            FUN_00427275((int)puVar7);
          }
        }
        uVar9 = SUB41(param_2,0);
        FUN_00427275((int)lpWideCharStr);
        in_DL = extraout_DL_03;
        goto LAB_00434dd5;
      }
    }
  }
LAB_00434bbe:
  uVar9 = SUB41(param_2,0);
LAB_00434dd5:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,in_DL,uVar9);
  return;
}



// Library Function - Single Match
//  ___strncnt
// 
// Library: Visual Studio 2019 Release

int __cdecl ___strncnt(char *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = param_2;
  if (param_2 != 0) {
    do {
      iVar1 = iVar1 + -1;
      if (*param_1 == '\0') goto LAB_00434e04;
      param_1 = param_1 + 1;
    } while (iVar1 != 0);
  }
  iVar1 = iVar1 + -1;
LAB_00434e04:
  return (param_2 - iVar1) + -1;
}



void __cdecl
FUN_00434e09(pthreadlocinfo *param_1,wchar_t *param_2,DWORD param_3,byte *param_4,int param_5,
            byte *param_6,int param_7,UINT param_8)

{
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_1);
  FUN_00434b65(local_14,param_2,param_3,param_4,param_5,param_6,param_7,param_8);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

ushort * __cdecl FUN_00434e4c(ushort *param_1,ushort param_2)

{
  int iVar1;
  undefined auVar2 [16];
  undefined auVar3 [16];
  ushort uVar4;
  ushort uVar5;
  
  if (_DAT_00458498 < 1) {
    for (; (*param_1 != 0 && (*param_1 != param_2)); param_1 = param_1 + 1) {
    }
  }
  else {
    auVar2 = pshuflw(ZEXT216(param_2),ZEXT216(param_2),0);
    while( true ) {
      for (; 0xff0 < ((uint)param_1 & 0xfff); param_1 = param_1 + 1) {
        if (*param_1 == param_2) {
          return param_1;
        }
        if (*param_1 == 0) {
          return (ushort *)0x0;
        }
      }
      uVar4 = SUB162(auVar2,0);
      uVar5 = SUB162(auVar2 >> 0x10,0);
      auVar3 = CONCAT214(-(ushort)(param_1[7] == 0),
                         CONCAT212(-(ushort)(param_1[6] == 0),
                                   CONCAT210(-(ushort)(param_1[5] == 0),
                                             CONCAT28(-(ushort)(param_1[4] == 0),
                                                      CONCAT26(-(ushort)(param_1[3] == 0),
                                                               CONCAT24(-(ushort)(param_1[2] == 0),
                                                                        CONCAT22(-(ushort)(param_1[1
                                                  ] == 0),-(ushort)(*param_1 == 0)))))))) |
               CONCAT214(-(ushort)(param_1[7] == uVar5),
                         CONCAT212(-(ushort)(param_1[6] == uVar4),
                                   CONCAT210(-(ushort)(param_1[5] == uVar5),
                                             CONCAT28(-(ushort)(param_1[4] == uVar4),
                                                      CONCAT26(-(ushort)(param_1[3] == uVar5),
                                                               CONCAT24(-(ushort)(param_1[2] ==
                                                                                 uVar4),
                                                                        CONCAT22(-(ushort)(param_1[1
                                                  ] == uVar5),-(ushort)(*param_1 == uVar4))))))));
      uVar4 = (ushort)(SUB161(auVar3 >> 7,0) & 1) | (ushort)(SUB161(auVar3 >> 0xf,0) & 1) << 1 |
              (ushort)(SUB161(auVar3 >> 0x17,0) & 1) << 2 |
              (ushort)(SUB161(auVar3 >> 0x1f,0) & 1) << 3 |
              (ushort)(SUB161(auVar3 >> 0x27,0) & 1) << 4 |
              (ushort)(SUB161(auVar3 >> 0x2f,0) & 1) << 5 |
              (ushort)(SUB161(auVar3 >> 0x37,0) & 1) << 6 |
              (ushort)(SUB161(auVar3 >> 0x3f,0) & 1) << 7 |
              (ushort)(SUB161(auVar3 >> 0x47,0) & 1) << 8 |
              (ushort)(SUB161(auVar3 >> 0x4f,0) & 1) << 9 |
              (ushort)(SUB161(auVar3 >> 0x57,0) & 1) << 10 |
              (ushort)(SUB161(auVar3 >> 0x5f,0) & 1) << 0xb |
              (ushort)(SUB161(auVar3 >> 0x67,0) & 1) << 0xc |
              (ushort)(SUB161(auVar3 >> 0x6f,0) & 1) << 0xd |
              (ushort)(SUB161(auVar3 >> 0x77,0) & 1) << 0xe |
              (ushort)SUB161(auVar3 >> 0x7f,0) << 0xf;
      if (uVar4 != 0) break;
      param_1 = param_1 + 8;
    }
    iVar1 = 0;
    if (uVar4 != 0) {
      for (; (uVar4 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {
      }
    }
    param_1 = (ushort *)((int)param_1 + iVar1);
  }
  return (ushort *)((*param_1 != param_2) - 1 & (uint)param_1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int __cdecl FUN_00434efa(LPCWSTR param_1,LPCWSTR param_2,uint param_3)

{
  WCHAR WVar1;
  int *piVar2;
  int iVar3;
  WCHAR WVar4;
  
  if (_DAT_0045871c == 0) {
    if ((param_1 == (LPCWSTR)0x0) || (param_2 == (LPCWSTR)0x0)) {
      piVar2 = __errno();
      *piVar2 = 0x16;
      FUN_00429bfe();
      iVar3 = 0x7fffffff;
    }
    else if (param_3 < 0x80000000) {
      iVar3 = (int)param_1 - (int)param_2;
      do {
        WVar4 = *(WCHAR *)(iVar3 + (int)param_2);
        if ((0x40 < (ushort)WVar4) && ((ushort)WVar4 < 0x5b)) {
          WVar4 = WVar4 + L' ';
        }
        WVar1 = *param_2;
        if ((0x40 < (ushort)WVar1) && ((ushort)WVar1 < 0x5b)) {
          WVar1 = WVar1 + L' ';
        }
        param_2 = param_2 + 1;
        param_3 = param_3 - 1;
      } while (((param_3 != 0) && (WVar4 != L'\0')) && (WVar4 == WVar1));
      iVar3 = (uint)(ushort)WVar4 - (uint)(ushort)WVar1;
    }
    else {
      piVar2 = __errno();
      *piVar2 = 0x16;
      FUN_00429bfe();
      iVar3 = 0x7fffffff;
    }
  }
  else {
    iVar3 = FUN_00434fc6(param_1,param_2,param_3,(pthreadlocinfo *)0x0);
  }
  return iVar3;
}



int __cdecl FUN_00434fc6(LPCWSTR param_1,LPCWSTR param_2,uint param_3,pthreadlocinfo *param_4)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  WCHAR WVar4;
  WCHAR WVar5;
  int local_14 [2];
  int local_c;
  char local_8;
  
  if (param_3 == 0) {
    iVar1 = 0;
  }
  else if (param_1 == (LPCWSTR)0x0) {
    piVar2 = __errno();
    *piVar2 = 0x16;
    FUN_00429bfe();
    iVar1 = 0x7fffffff;
  }
  else if (param_2 == (LPCWSTR)0x0) {
    piVar2 = __errno();
    *piVar2 = 0x16;
    FUN_00429bfe();
    iVar1 = 0x7fffffff;
  }
  else {
    iVar1 = 0x7fffffff;
    if (param_3 < 0x80000000) {
      FUN_00427078(local_14,param_4);
      if (*(LPCWSTR *)(local_14[0] + 0xa4) == (LPCWSTR)0x0) {
        iVar1 = (int)param_1 - (int)param_2;
        do {
          WVar4 = *(WCHAR *)(iVar1 + (int)param_2);
          if ((0x40 < (ushort)WVar4) && ((ushort)WVar4 < 0x5b)) {
            WVar4 = WVar4 + L' ';
          }
          WVar5 = *param_2;
          if ((0x40 < (ushort)WVar5) && ((ushort)WVar5 < 0x5b)) {
            WVar5 = WVar5 + L' ';
          }
          param_2 = param_2 + 1;
          param_3 = param_3 - 1;
        } while (((param_3 != 0) && (WVar4 != L'\0')) && (WVar4 == WVar5));
        iVar1 = (uint)(ushort)WVar4 - (uint)(ushort)WVar5;
      }
      else {
        iVar3 = ___crtCompareStringW
                          (*(LPCWSTR *)(local_14[0] + 0xa4),0x1001,param_1,param_3,param_2,param_3);
        if (iVar3 == 0) {
          piVar2 = __errno();
          *piVar2 = 0x16;
        }
        else {
          iVar1 = iVar3 + -2;
        }
      }
      if (local_8 != '\0') {
        *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
      }
    }
    else {
      piVar2 = __errno();
      *piVar2 = 0x16;
      FUN_00429bfe();
    }
  }
  return iVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_004350ec(void)

{
  rsize_t _SizeInWords;
  wchar_t wVar1;
  code *pcVar2;
  size_t sVar3;
  uint *_Dst;
  errno_t eVar4;
  undefined4 uVar5;
  wchar_t *pwVar6;
  int iVar7;
  uint **ppuVar8;
  
  iVar7 = 0;
  pwVar6 = DAT_00458484;
  if (DAT_00458484 != (wchar_t *)0x0) {
    for (; *pwVar6 != L'\0'; pwVar6 = pwVar6 + sVar3 + 1) {
      if (*pwVar6 != L'=') {
        iVar7 = iVar7 + 1;
      }
      sVar3 = _wcslen(pwVar6);
    }
    DAT_00458460 = (uint **)FUN_00403d40(iVar7 + 1,4);
    if (DAT_00458460 != (uint **)0x0) {
      wVar1 = *DAT_00458484;
      ppuVar8 = DAT_00458460;
      pwVar6 = DAT_00458484;
      do {
        if (wVar1 == L'\0') {
          FUN_00403c10(DAT_00458484);
          DAT_00458484 = (wchar_t *)0x0;
          *ppuVar8 = (uint *)0x0;
          _DAT_004592c0 = 1;
          return 0;
        }
        sVar3 = _wcslen(pwVar6);
        _SizeInWords = sVar3 + 1;
        if (*pwVar6 != L'=') {
          _Dst = FUN_00403d40(_SizeInWords,2);
          *ppuVar8 = _Dst;
          if (_Dst == (uint *)0x0) {
            FUN_00403c10(DAT_00458460);
            DAT_00458460 = (uint **)0x0;
            return 0xffffffff;
          }
          eVar4 = _wcscpy_s((wchar_t *)_Dst,_SizeInWords,pwVar6);
          if (eVar4 != 0) {
            __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
            pcVar2 = (code *)swi(3);
            uVar5 = (*pcVar2)();
            return uVar5;
          }
          ppuVar8 = ppuVar8 + 1;
        }
        pwVar6 = pwVar6 + _SizeInWords;
        wVar1 = *pwVar6;
      } while( true );
    }
  }
  return 0xffffffff;
}



undefined4 FUN_004351ce(void)

{
  int iVar1;
  LPCSTR *ppCVar2;
  uint *local_8;
  
  local_8 = (uint *)0x0;
  ppCVar2 = DAT_0045845c;
  while( true ) {
    if (*ppCVar2 == (LPCSTR)0x0) {
      return 0;
    }
    iVar1 = MultiByteToWideChar(0,0,*ppCVar2,-1,(LPWSTR)0x0,0);
    if (iVar1 == 0) {
      return 0xffffffff;
    }
    local_8 = FUN_00403d40(iVar1,2);
    if (local_8 == (uint *)0x0) {
      return 0xffffffff;
    }
    iVar1 = MultiByteToWideChar(0,0,*ppCVar2,-1,(LPWSTR)local_8,iVar1);
    if (iVar1 == 0) break;
    iVar1 = FUN_0042a510((LPCWSTR *)&local_8,0);
    if (iVar1 < 0) {
      if (local_8 == (uint *)0x0) {
        return 0xffffffff;
      }
      break;
    }
    ppCVar2 = ppCVar2 + 1;
  }
  FUN_00403c10(local_8);
  return 0xffffffff;
}



LPWCH FUN_0043524b(void)

{
  WCHAR WVar1;
  LPWCH _Src;
  LPWCH _Dst;
  LPWCH pWVar2;
  WCHAR *pWVar3;
  size_t _Size;
  WCHAR *pWVar4;
  
  _Src = GetEnvironmentStringsW();
  pWVar2 = _Src;
  if (_Src != (LPWCH)0x0) {
    WVar1 = *_Src;
    pWVar3 = _Src;
    while (WVar1 != L'\0') {
      do {
        pWVar4 = pWVar3;
        pWVar3 = pWVar4 + 1;
      } while (*pWVar3 != L'\0');
      pWVar3 = pWVar4 + 2;
      WVar1 = *pWVar3;
    }
    _Size = (int)pWVar3 + (2 - (int)_Src);
    _Dst = (LPWCH)FUN_00403c30(_Size);
    pWVar2 = (LPWCH)0x0;
    if (_Dst != (LPWCH)0x0) {
      FID_conflict__memcpy(_Dst,_Src,_Size);
      pWVar2 = _Dst;
    }
    FreeEnvironmentStringsW(_Src);
  }
  return pWVar2;
}



// Library Function - Single Match
//  _strcat_s
// 
// Library: Visual Studio 2012 Release

errno_t __cdecl _strcat_s(char *_Dst,rsize_t _SizeInBytes,char *_Src)

{
  char cVar1;
  int *piVar2;
  char *pcVar3;
  int iVar4;
  int iStack16;
  
  if ((_Dst != (char *)0x0) && (_SizeInBytes != 0)) {
    pcVar3 = _Dst;
    if (_Src != (char *)0x0) {
      do {
        if (*pcVar3 == '\0') break;
        pcVar3 = pcVar3 + 1;
        _SizeInBytes = _SizeInBytes - 1;
      } while (_SizeInBytes != 0);
      if (_SizeInBytes != 0) {
        iVar4 = (int)pcVar3 - (int)_Src;
        do {
          cVar1 = *_Src;
          _Src[iVar4] = cVar1;
          _Src = _Src + 1;
          if (cVar1 == '\0') break;
          _SizeInBytes = _SizeInBytes - 1;
        } while (_SizeInBytes != 0);
        if (_SizeInBytes != 0) {
          return 0;
        }
        *_Dst = '\0';
        piVar2 = __errno();
        iStack16 = 0x22;
        goto LAB_004352cc;
      }
    }
    *_Dst = '\0';
  }
  piVar2 = __errno();
  iStack16 = 0x16;
LAB_004352cc:
  *piVar2 = iStack16;
  FUN_00429bfe();
  return iStack16;
}



HANDLE __cdecl FUN_0043530b(uint param_1,LPCSTR param_2,char *param_3,LPVOID param_4)

{
  byte bVar1;
  code *pcVar2;
  uint uVar3;
  char *pcVar4;
  ulong *puVar5;
  BOOL BVar6;
  DWORD DVar7;
  int *piVar8;
  undefined4 *puVar9;
  int iVar10;
  uint uVar11;
  uint *puVar12;
  HANDLE pvVar13;
  uint uVar14;
  _STARTUPINFOA local_70;
  _PROCESS_INFORMATION local_2c;
  HANDLE local_1c;
  char *local_18;
  uint *local_14;
  DWORD local_10;
  undefined4 *local_c;
  char local_5;
  
  uVar3 = param_1;
  pvVar13 = (HANDLE)0x0;
  local_10 = 0;
  local_5 = '\0';
  if ((param_1 != 0) && (param_1 != 1)) {
    if ((int)param_1 < 2) {
LAB_0043533f:
      puVar5 = ___doserrno();
      *puVar5 = 0;
      piVar8 = __errno();
      *piVar8 = 0x16;
      FUN_00429bfe();
      return (HANDLE)0xffffffff;
    }
    if (3 < (int)param_1) {
      if (param_1 != 4) goto LAB_0043533f;
      local_5 = '\x01';
    }
  }
  local_18 = param_3;
  while (*param_3 != '\0') {
    do {
      pcVar4 = param_3;
      param_3 = pcVar4 + 1;
    } while (*param_3 != '\0');
    if (pcVar4[2] != '\0') {
      *param_3 = ' ';
      param_3 = pcVar4 + 2;
    }
  }
  FUN_00427870(&local_70.cb,0,0x44);
  local_70.cb = 0x44;
  uVar14 = DAT_004592a4;
  uVar11 = DAT_004592a4;
  while ((uVar14 != 0 &&
         (uVar11 = uVar11 - 1,
         *(char *)((&DAT_004585f8)[(int)uVar11 >> 5] + 4 + (uVar11 & 0x1f) * 0x40) == '\0'))) {
    uVar14 = uVar14 - 1;
  }
  if (((int)uVar14 < 0) || (0x3331 < uVar14)) {
LAB_00435507:
    piVar8 = __errno();
    *piVar8 = 0xc;
    return (HANDLE)0xffffffff;
  }
  local_70.cbReserved2 = (short)uVar14 * 5 + 4;
  local_70.lpReserved2 = (LPBYTE)FUN_00403d40((uint)local_70.cbReserved2,1);
  if ((uint *)local_70.lpReserved2 == (uint *)0x0) goto LAB_00435507;
  *(uint *)local_70.lpReserved2 = uVar14;
  uVar11 = 0;
  local_14 = (uint *)((int)local_70.lpReserved2 + 4);
  local_c = (undefined4 *)((int)local_70.lpReserved2 + uVar14 + 4);
  puVar12 = local_14;
  if (0 < (int)uVar14) {
    do {
      puVar9 = (undefined4 *)((uVar11 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)uVar11 >> 5]);
      bVar1 = *(byte *)(puVar9 + 1);
      if ((bVar1 & 0x10) == 0) {
        *(byte *)puVar12 = bVar1;
        *local_c = *puVar9;
      }
      else {
        *(byte *)puVar12 = 0;
        *local_c = 0xffffffff;
      }
      uVar11 = uVar11 + 1;
      local_c = local_c + 1;
      puVar12 = (uint *)((int)puVar12 + 1);
    } while ((int)uVar11 < (int)uVar14);
  }
  if (local_5 != '\0') {
    puVar12 = (uint *)((int)local_70.lpReserved2 + 4);
    iVar10 = 0;
    puVar9 = (undefined4 *)((int)local_70.lpReserved2 + uVar14 + 4);
    while( true ) {
      param_1 = uVar14;
      if (2 < (int)uVar14) {
        param_1 = 3;
      }
      if ((int)param_1 <= iVar10) break;
      *(undefined *)puVar12 = 0;
      *puVar9 = 0xffffffff;
      iVar10 = iVar10 + 1;
      puVar12 = (uint *)((int)puVar12 + 1);
      puVar9 = puVar9 + 1;
    }
    local_10 = 8;
  }
  puVar5 = ___doserrno();
  *puVar5 = 0;
  BVar6 = CreateProcessA(param_2,local_18,(LPSECURITY_ATTRIBUTES)0x0,(LPSECURITY_ATTRIBUTES)0x0,1,
                         local_10,param_4,(LPCSTR)0x0,&local_70,&local_2c);
  DVar7 = GetLastError();
  FUN_00403c10(local_70.lpReserved2);
  if (BVar6 == 0) {
    FID_conflict___dosmaperr(DVar7);
    return (HANDLE)0xffffffff;
  }
  if (uVar3 == 2) {
    __exit(0);
    pcVar2 = (code *)swi(3);
    pvVar13 = (HANDLE)(*pcVar2)();
    return pvVar13;
  }
  if (uVar3 == 0) {
    WaitForSingleObject(local_2c.hProcess,0xffffffff);
    GetExitCodeProcess(local_2c.hProcess,(LPDWORD)&local_1c);
    pvVar13 = local_1c;
  }
  else if (uVar3 != 4) goto LAB_004354fe;
  CloseHandle(local_2c.hProcess);
  local_2c.hProcess = pvVar13;
LAB_004354fe:
  CloseHandle(local_2c.hThread);
  return local_2c.hProcess;
}



void __cdecl FUN_00435523(char **param_1,byte **param_2,uint **param_3,uint **param_4)

{
  code *pcVar1;
  bool bVar2;
  uint **ppuVar3;
  size_t sVar4;
  uint *puVar5;
  int *piVar6;
  ulong *puVar7;
  int iVar8;
  byte *pbVar9;
  char *pcVar10;
  errno_t eVar11;
  char cVar12;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined extraout_DL_04;
  undefined extraout_DL_05;
  undefined uVar13;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  undefined4 extraout_EDX_05;
  undefined4 uVar14;
  rsize_t _SizeInBytes;
  byte **ppbVar15;
  rsize_t _SizeInBytes_00;
  undefined uVar16;
  byte **ppbVar17;
  int local_40;
  int local_38;
  int local_34;
  uint *local_2c;
  int local_28;
  undefined4 local_24;
  uint **local_20;
  char **local_1c;
  uint **local_18;
  undefined4 local_14;
  undefined4 uStack16;
  undefined2 uStack12;
  char cStack10;
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  pcVar10 = *param_1;
  local_14 = 0x74737953;
  local_40 = 0;
  uStack16 = 0x6f526d65;
  local_24 = 0;
  local_38 = 0;
  local_34 = 0;
  uStack12 = 0x746f;
  local_2c = (uint *)0x0;
  bVar2 = false;
  cStack10 = '\0';
  _SizeInBytes = 2;
  local_28 = 2;
  local_20 = param_3;
  local_18 = param_4;
  local_1c = param_1;
  while (pcVar10 != (char *)0x0) {
    sVar4 = _strlen(pcVar10);
    param_1 = param_1 + 1;
    _SizeInBytes = _SizeInBytes + sVar4 + 1;
    pcVar10 = *param_1;
  }
  ppbVar17 = param_2;
  puVar5 = FUN_00403d40(_SizeInBytes,1);
  *local_20 = puVar5;
  if (puVar5 == (uint *)0x0) {
    *local_18 = (uint *)0x0;
    piVar6 = __errno();
    uVar16 = SUB41(ppbVar17,0);
    *piVar6 = 0xc;
    puVar7 = ___doserrno();
    *puVar7 = 8;
    uVar13 = extraout_DL;
    goto LAB_004358cc;
  }
  iVar8 = FUN_00426034(&local_2c,(rsize_t *)0x0,(char *)&local_14);
  if (iVar8 == 0) {
    sVar4 = _strlen((char *)&local_14);
    _SizeInBytes_00 = sVar4 + 2;
    uVar14 = extraout_EDX;
    if (local_2c != (uint *)0x0) {
      sVar4 = _strlen((char *)local_2c);
      _SizeInBytes_00 = _SizeInBytes_00 + sVar4;
      uVar14 = extraout_EDX_00;
    }
    if (param_2 == (byte **)0x0) {
      *local_18 = (uint *)0x0;
LAB_0043576b:
      puVar5 = *local_20;
      if (*local_1c != (char *)0x0) {
        eVar11 = _strcpy_s((char *)puVar5,_SizeInBytes,*local_1c);
        if (eVar11 == 0) {
          sVar4 = _strlen(*local_1c);
          pcVar10 = (char *)((int)puVar5 + sVar4 + 1);
          uVar14 = extraout_EDX_02;
          goto LAB_004357db;
        }
LAB_004358dd:
        __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
        pcVar1 = (code *)swi(3);
        (*pcVar1)();
        return;
      }
      pcVar10 = (char *)((int)puVar5 + 1);
      while( true ) {
        uVar16 = SUB41(ppbVar17,0);
        uVar13 = (undefined)uVar14;
        if (*local_1c == (char *)0x0) break;
        eVar11 = _strcpy_s(pcVar10,(rsize_t)((int)*local_20 + (_SizeInBytes - (int)pcVar10)),
                           *local_1c);
        if (eVar11 != 0) goto LAB_004358dd;
        sVar4 = _strlen(*local_1c);
        pcVar10[sVar4] = ' ';
        pcVar10 = pcVar10 + sVar4 + 1;
        uVar14 = extraout_EDX_03;
LAB_004357db:
        local_1c = local_1c + 1;
      }
      *(undefined2 *)(pcVar10 + -1) = 0;
      puVar5 = *local_18;
      if (param_2 != (byte **)0x0) {
        FID_conflict__memcpy(puVar5,DAT_00458480 + local_38,local_34 - local_38);
        puVar5 = (uint *)((int)puVar5 + (local_34 - local_38));
        uVar14 = extraout_EDX_04;
        while( true ) {
          uVar16 = SUB41(ppbVar17,0);
          uVar13 = (undefined)uVar14;
          if (*param_2 == (byte *)0x0) break;
          eVar11 = _strcpy_s((char *)puVar5,(local_40 - (int)puVar5) + (int)*local_18,
                             (char *)*param_2);
          if (eVar11 != 0) goto LAB_004358dd;
          sVar4 = _strlen((char *)*param_2);
          puVar5 = (uint *)((int)puVar5 + sVar4 + 1);
          param_2 = param_2 + 1;
          uVar14 = extraout_EDX_05;
        }
        if (!bVar2) {
          eVar11 = _strcpy_s((char *)puVar5,_SizeInBytes_00,(char *)&local_14);
          if (((eVar11 != 0) ||
              (eVar11 = _strcat_s((char *)puVar5,_SizeInBytes_00,"="), eVar11 != 0)) ||
             ((uVar13 = extraout_DL_02, local_2c != (uint *)0x0 &&
              (eVar11 = _strcat_s((char *)puVar5,_SizeInBytes_00,(char *)local_2c),
              uVar13 = extraout_DL_03, eVar11 != 0)))) goto LAB_004358dd;
          puVar5 = (uint *)((int)puVar5 + _SizeInBytes_00);
        }
      }
      if (puVar5 != (uint *)0x0) {
        if (puVar5 == *local_18) {
          *(undefined *)puVar5 = 0;
          puVar5 = (uint *)((int)puVar5 + 1);
        }
        *(undefined *)puVar5 = 0;
      }
    }
    else {
      pbVar9 = *param_2;
      iVar8 = local_28;
      if (pbVar9 != (byte *)0x0) {
        iVar8 = 2;
        ppbVar15 = param_2;
        param_2 = ppbVar17;
        do {
          sVar4 = _strlen((char *)pbVar9);
          ppbVar15 = ppbVar15 + 1;
          iVar8 = iVar8 + sVar4 + 1;
          pbVar9 = *ppbVar15;
          ppbVar17 = param_2;
        } while (pbVar9 != (byte *)0x0);
      }
      local_28 = iVar8;
      if ((DAT_00458480 == (char *)0x0) &&
         (DAT_00458480 = FUN_0042fc98(), DAT_00458480 == (LPSTR)0x0)) goto LAB_00435655;
      iVar8 = 0;
      local_38 = 0;
      if (*DAT_00458480 != '\0') {
        cVar12 = *DAT_00458480;
        pcVar10 = DAT_00458480;
        do {
          local_38 = iVar8;
          if (cVar12 == '=') break;
          sVar4 = _strlen(pcVar10);
          iVar8 = iVar8 + sVar4 + 1;
          pcVar10 = DAT_00458480 + iVar8;
          cVar12 = *pcVar10;
          local_38 = iVar8;
        } while (cVar12 != '\0');
      }
      pcVar10 = DAT_00458480 + local_38;
      local_34 = local_38;
      while ((((*pcVar10 == '=' && (pcVar10[1] != '\0')) && (pcVar10[2] == ':')) &&
             (pcVar10[3] == '='))) {
        sVar4 = _strlen(pcVar10 + 4);
        local_34 = local_34 + 5 + sVar4;
        pcVar10 = DAT_00458480 + local_34;
      }
      local_40 = local_28 + (local_34 - local_38);
      pbVar9 = *param_2;
      local_28 = local_40;
      ppbVar15 = param_2;
      while (pbVar9 != (byte *)0x0) {
        sVar4 = _strlen((char *)&local_14);
        iVar8 = FUN_00439340(*ppbVar15,(byte *)&local_14,sVar4);
        if (iVar8 == 0) {
          bVar2 = true;
          iVar8 = local_28;
          goto LAB_0043571a;
        }
        ppbVar15 = ppbVar15 + 1;
        pbVar9 = *ppbVar15;
      }
      iVar8 = local_28 + _SizeInBytes_00;
LAB_0043571a:
      puVar5 = FUN_00403d40(iVar8,1);
      ppuVar3 = local_20;
      uVar16 = SUB41(ppbVar17,0);
      *local_18 = puVar5;
      uVar14 = extraout_EDX_01;
      if (puVar5 != (uint *)0x0) goto LAB_0043576b;
      FUN_00403c10(*local_20);
      *ppuVar3 = (uint *)0x0;
      piVar6 = __errno();
      *piVar6 = 0xc;
      puVar7 = ___doserrno();
      *puVar7 = 8;
      uVar13 = extraout_DL_01;
    }
  }
  else {
    if (iVar8 == 0x16) goto LAB_004358dd;
LAB_00435655:
    ppuVar3 = local_20;
    uVar16 = SUB41(ppbVar17,0);
    local_24 = 0xffffffff;
    FUN_00403c10(*local_20);
    *ppuVar3 = (uint *)0x0;
    *local_18 = (uint *)0x0;
    uVar13 = extraout_DL_00;
  }
  if (DAT_00458480 != (char *)0x0) {
    FUN_00403c10(DAT_00458480);
    uVar13 = extraout_DL_04;
  }
  DAT_00458480 = (char *)0x0;
  if (local_2c != (uint *)0x0) {
    FUN_00403c10(local_2c);
    uVar13 = extraout_DL_05;
  }
LAB_004358cc:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar13,uVar16);
  return;
}



void __cdecl FUN_004358ea(byte *param_1,uint param_2)

{
  FUN_004358ff(param_1,param_2,(pthreadlocinfo *)0x0);
  return;
}



byte * __cdecl FUN_004358ff(byte *param_1,uint param_2,pthreadlocinfo *param_3)

{
  byte bVar1;
  ushort uVar2;
  int *piVar3;
  byte *pbVar4;
  byte bVar5;
  byte *pbVar6;
  bool bVar7;
  undefined local_14 [4];
  int local_10;
  int local_c;
  char local_8;
  
  pbVar6 = (byte *)0x0;
  FUN_00427078(local_14,param_3);
  if (param_1 == (byte *)0x0) {
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
  }
  else if (*(int *)(local_10 + 8) == 0) {
    pbVar6 = (byte *)_strrchr((char *)param_1,param_2);
  }
  else {
    do {
      bVar5 = *param_1;
      if ((*(byte *)(bVar5 + 0x19 + local_10) & 4) == 0) {
        bVar7 = param_2 == bVar5;
LAB_00435971:
        pbVar4 = param_1;
        if (bVar7) {
          pbVar6 = param_1;
        }
      }
      else {
        pbVar4 = param_1 + 1;
        bVar1 = *pbVar4;
        if (bVar1 == 0) {
          bVar7 = pbVar6 == (byte *)0x0;
          param_1 = pbVar4;
          bVar5 = bVar1;
          goto LAB_00435971;
        }
        uVar2 = CONCAT11(bVar5,bVar1);
        bVar5 = bVar1;
        if (param_2 == uVar2) {
          pbVar6 = param_1;
        }
      }
      param_1 = pbVar4 + 1;
    } while (bVar5 != 0);
  }
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return pbVar6;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_00435990(uint param_1)

{
  int iVar1;
  
  iVar1 = (param_1 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)param_1 >> 5];
  if (*(int *)(iVar1 + 8) == 0) {
    __lock(10);
    if (*(int *)(iVar1 + 8) == 0) {
      FUN_0042ed07((LPCRITICAL_SECTION)(iVar1 + 0xc),4000,0);
      *(int *)(iVar1 + 8) = *(int *)(iVar1 + 8) + 1;
    }
    FUN_00435a15();
  }
  EnterCriticalSection
            ((LPCRITICAL_SECTION)
             ((&DAT_004585f8)[(int)param_1 >> 5] + 0xc + (param_1 & 0x1f) * 0x40));
  return 1;
}



void FUN_00435a15(void)

{
  FUN_00429e85(10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 __cdecl FUN_00435a1e(uint param_1)

{
  int *piVar1;
  ulong *puVar2;
  int iVar3;
  DWORD nStdHandle;
  
  if ((-1 < (int)param_1) && (param_1 < DAT_004592a4)) {
    iVar3 = (param_1 & 0x1f) * 0x40;
    if (((*(byte *)(iVar3 + 4 + (&DAT_004585f8)[(int)param_1 >> 5]) & 1) != 0) &&
       (*(int *)(iVar3 + (&DAT_004585f8)[(int)param_1 >> 5]) != -1)) {
      if (_DAT_00458720 == 1) {
        if (param_1 == 0) {
          nStdHandle = 0xfffffff6;
        }
        else if (param_1 == 1) {
          nStdHandle = 0xfffffff5;
        }
        else {
          if (param_1 != 2) goto LAB_00435a7b;
          nStdHandle = 0xfffffff4;
        }
        SetStdHandle(nStdHandle,(HANDLE)0x0);
      }
LAB_00435a7b:
      *(undefined4 *)(iVar3 + (&DAT_004585f8)[(int)param_1 >> 5]) = 0xffffffff;
      return 0;
    }
  }
  piVar1 = __errno();
  *piVar1 = 9;
  puVar2 = ___doserrno();
  *puVar2 = 0;
  return 0xffffffff;
}



undefined4 __cdecl FUN_00435aa4(uint param_1)

{
  ulong *puVar1;
  int *piVar2;
  int iVar3;
  
  if (param_1 == 0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    if ((-1 < (int)param_1) && (param_1 < DAT_004592a4)) {
      iVar3 = (param_1 & 0x1f) * 0x40;
      if ((*(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + iVar3) & 1) != 0) {
        return *(undefined4 *)((&DAT_004585f8)[(int)param_1 >> 5] + iVar3);
      }
    }
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
    FUN_00429bfe();
  }
  return 0xffffffff;
}



void __cdecl FUN_00435b0b(uint param_1)

{
  LeaveCriticalSection
            ((LPCRITICAL_SECTION)
             ((&DAT_004585f8)[(int)param_1 >> 5] + (param_1 & 0x1f) * 0x40 + 0xc));
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

DWORD __cdecl FUN_00435b31(uint param_1)

{
  int *piVar1;
  HANDLE hFile;
  BOOL BVar2;
  ulong *puVar3;
  int iVar4;
  DWORD DVar5;
  
  DVar5 = 0;
  if (param_1 == 0xfffffffe) {
    piVar1 = __errno();
    *piVar1 = 9;
  }
  else {
    if ((-1 < (int)param_1) && (param_1 < DAT_004592a4)) {
      iVar4 = (param_1 & 0x1f) * 0x40;
      if ((*(byte *)(iVar4 + 4 + (&DAT_004585f8)[(int)param_1 >> 5]) & 1) != 0) {
        FUN_00435990(param_1);
        if ((*(byte *)(iVar4 + 4 + (&DAT_004585f8)[(int)param_1 >> 5]) & 1) != 0) {
          hFile = (HANDLE)FUN_00435aa4(param_1);
          BVar2 = FlushFileBuffers(hFile);
          if (BVar2 == 0) {
            DVar5 = GetLastError();
          }
          if (DVar5 == 0) goto LAB_00435be3;
          puVar3 = ___doserrno();
          *puVar3 = DVar5;
        }
        piVar1 = __errno();
        *piVar1 = 9;
        DVar5 = 0xffffffff;
LAB_00435be3:
        FUN_00435bf9();
        return DVar5;
      }
    }
    piVar1 = __errno();
    *piVar1 = 9;
    FUN_00429bfe();
  }
  return 0xffffffff;
}



void FUN_00435bf9(void)

{
  uint unaff_EDI;
  
  FUN_00435b0b(unaff_EDI);
  return;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

undefined4 __cdecl FUN_00435c1a(WCHAR *param_1,WCHAR *param_2,uint param_3)

{
  ulong *puVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  
  if (param_1 == (WCHAR *)0xfffffffe) {
    puVar1 = ___doserrno();
    *puVar1 = 0;
    piVar2 = __errno();
    *piVar2 = 9;
  }
  else {
    if (((int)param_1 < 0) || (DAT_004592a4 <= param_1)) {
      puVar1 = ___doserrno();
      *puVar1 = 0;
    }
    else {
      iVar4 = ((uint)param_1 & 0x1f) * 0x40;
      if ((*(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + iVar4) & 1) != 0) {
        FUN_00435990((uint)param_1);
        if ((*(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + iVar4) & 1) == 0) {
          piVar2 = __errno();
          *piVar2 = 9;
          puVar1 = ___doserrno();
          *puVar1 = 0;
          uVar3 = 0xffffffff;
        }
        else {
          uVar3 = FUN_00435d09(param_1,param_2,param_3);
        }
        FUN_00435ce1();
        return uVar3;
      }
      puVar1 = ___doserrno();
      *puVar1 = 0;
    }
    piVar2 = __errno();
    *piVar2 = 9;
    FUN_00429bfe();
  }
  return 0xffffffff;
}



void FUN_00435ce1(void)

{
  uint unaff_ESI;
  
  FUN_00435b0b(unaff_ESI);
  return;
}



// WARNING: Function: __alloca_probe replaced with injection: alloca_probe

void __cdecl FUN_00435d09(WCHAR *param_1,WCHAR *param_2,uint param_3)

{
  char cVar1;
  WCHAR WVar2;
  byte bVar3;
  wint_t wVar4;
  ulong *puVar5;
  int *piVar6;
  undefined3 extraout_var;
  _ptiddata p_Var7;
  BOOL BVar8;
  int iVar9;
  uint uVar10;
  DWORD DVar11;
  undefined in_DL;
  undefined extraout_DL;
  WCHAR *extraout_EDX;
  WCHAR *pWVar12;
  WCHAR *extraout_EDX_00;
  WCHAR *extraout_EDX_01;
  WCHAR *extraout_EDX_02;
  WCHAR *extraout_EDX_03;
  WCHAR *extraout_EDX_04;
  WCHAR *extraout_EDX_05;
  WCHAR *extraout_EDX_06;
  WCHAR *extraout_EDX_07;
  WCHAR *extraout_EDX_08;
  WCHAR *extraout_EDX_09;
  WCHAR *extraout_EDX_10;
  WCHAR *extraout_EDX_11;
  char cVar13;
  WCHAR *pWVar14;
  WCHAR *pWVar15;
  DWORD DVar16;
  WCHAR *pWVar17;
  undefined8 uVar18;
  uint uVar19;
  undefined uVar20;
  UINT in_stack_ffffe50c;
  uint local_1aec;
  char local_1ae5;
  WCHAR *local_1ae4;
  WCHAR *local_1ae0;
  int local_1adc;
  WCHAR *local_1ad8;
  WCHAR *local_1ad4;
  DWORD local_1ad0;
  WCHAR *local_1acc;
  WCHAR *local_1ac8;
  WCHAR *local_1ac4;
  int local_1ac0;
  WCHAR local_1abc [854];
  WCHAR local_1410 [852];
  CHAR local_d68 [3416];
  char local_10;
  char local_f;
  uint local_8;
  
  uVar20 = (undefined)in_stack_ffffe50c;
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  local_1ac0 = 0;
  pWVar15 = (WCHAR *)0x0;
  local_1acc = param_1;
  DVar16 = 0;
  local_1ad4 = param_2;
  local_1ac4 = (WCHAR *)0x0;
  if (param_3 == 0) goto LAB_0043655e;
  if (param_2 == (WCHAR *)0x0) {
    puVar5 = ___doserrno();
    *puVar5 = 0;
    piVar6 = __errno();
    *piVar6 = 0x16;
    FUN_00429bfe();
    in_DL = extraout_DL;
    goto LAB_0043655e;
  }
  local_1adc = (int)param_1 >> 5;
  local_1ae0 = (WCHAR *)(((uint)param_1 & 0x1f) * 0x40);
  cVar13 = (char)(*(char *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc] + 0x24) * '\x02') >> 1;
  if (((cVar13 == '\x02') || (cVar13 == '\x01')) && ((~param_3 & 1) == 0)) {
    puVar5 = ___doserrno();
    *puVar5 = 0;
    piVar6 = __errno();
    *piVar6 = 0x16;
    FUN_00429bfe();
    pWVar12 = extraout_EDX;
  }
  else {
    if ((*(byte *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc] + 4) & 0x20) != 0) {
      FUN_0042bc34((uint)param_1,0,0,2);
    }
    bVar3 = FUN_004366ed((uint)local_1acc);
    if ((CONCAT31(extraout_var,bVar3) == 0) ||
       ((*(byte *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc] + 4) & 0x80) == 0)) {
LAB_0043614c:
      if ((*(byte *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc] + 4) & 0x80) == 0) {
        BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc]),local_1ad4,
                          param_3,(LPDWORD)&local_1ae4,(LPOVERLAPPED)0x0);
        if (BVar8 == 0) {
LAB_0043613f:
          DVar16 = GetLastError();
          pWVar12 = extraout_EDX_03;
        }
        else {
          pWVar12 = extraout_EDX_09;
          pWVar15 = local_1ae4;
          DVar16 = 0;
        }
        goto LAB_0043625c;
      }
      local_1ad0 = 0;
      if (cVar13 == '\0') {
        local_1acc = local_1ad4;
        if (param_3 == 0) goto LAB_0043651e;
        do {
          pWVar17 = local_1410;
          local_1ac8 = (WCHAR *)0x0;
          uVar19 = (int)local_1acc - (int)local_1ad4;
          do {
            if (param_3 <= uVar19) break;
            local_1ae5 = *(char *)local_1acc;
            local_1acc = (WCHAR *)((int)local_1acc + 1);
            uVar19 = uVar19 + 1;
            if (local_1ae5 == '\n') {
              local_1ac0 = local_1ac0 + 1;
              *(char *)pWVar17 = '\r';
              pWVar17 = (WCHAR *)((int)pWVar17 + 1);
              local_1ac8 = (WCHAR *)((int)local_1ac8 + 1);
            }
            *(char *)pWVar17 = local_1ae5;
            pWVar17 = (WCHAR *)((int)pWVar17 + 1);
            local_1ac8 = (WCHAR *)((int)local_1ac8 + 1);
          } while (local_1ac8 < (WCHAR *)0x13ff);
          BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc]),local_1410,
                            (int)pWVar17 - (int)local_1410,(LPDWORD)&local_1ae4,(LPOVERLAPPED)0x0);
          if (BVar8 == 0) goto LAB_0043613f;
          pWVar15 = (WCHAR *)((int)pWVar15 + (int)local_1ae4);
          pWVar12 = extraout_EDX_04;
          DVar16 = local_1ad0;
        } while (((int)pWVar17 - (int)local_1410 <= (int)local_1ae4) &&
                (pWVar12 = local_1acc, (uint)((int)local_1acc - (int)local_1ad4) < param_3));
        goto LAB_0043625c;
      }
      if (cVar13 == '\x02') {
        pWVar17 = local_1ad4;
        if (param_3 != 0) {
          do {
            local_1aec = 0;
            pWVar14 = local_1410;
            uVar10 = (int)pWVar17 - (int)local_1ad4;
            uVar19 = 0;
            do {
              if (param_3 <= uVar10) break;
              WVar2 = *pWVar17;
              uVar10 = uVar10 + 2;
              pWVar17 = pWVar17 + 1;
              if (WVar2 == L'\n') {
                local_1ac0 = local_1ac0 + 2;
                *pWVar14 = L'\r';
                pWVar14 = pWVar14 + 1;
                uVar19 = uVar19 + 2;
              }
              *pWVar14 = WVar2;
              uVar19 = uVar19 + 2;
              pWVar14 = pWVar14 + 1;
            } while (uVar19 < 0x13fe);
            local_1ac8 = pWVar17;
            BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc]),local_1410,
                              (int)pWVar14 - (int)local_1410,(LPDWORD)&local_1ae4,(LPOVERLAPPED)0x0)
            ;
            pWVar15 = local_1ac4;
            if (BVar8 == 0) goto LAB_0043613f;
            pWVar15 = (WCHAR *)((int)local_1ac4 + (int)local_1ae4);
            pWVar12 = extraout_EDX_06;
            DVar16 = local_1ad0;
            local_1ac4 = pWVar15;
          } while (((int)pWVar14 - (int)local_1410 <= (int)local_1ae4) &&
                  (pWVar17 = local_1ac8, pWVar12 = local_1ad4,
                  (uint)((int)local_1ac8 - (int)local_1ad4) < param_3));
          goto LAB_0043625c;
        }
      }
      else {
        local_1acc = local_1ad4;
        if (param_3 != 0) {
          do {
            local_1aec = 0;
            pWVar15 = local_1abc;
            uVar10 = (int)local_1acc - (int)local_1ad4;
            uVar19 = 0;
            do {
              if (param_3 <= uVar10) break;
              WVar2 = *local_1acc;
              uVar10 = uVar10 + 2;
              local_1acc = local_1acc + 1;
              if (WVar2 == L'\n') {
                *pWVar15 = L'\r';
                pWVar15 = pWVar15 + 1;
                uVar19 = uVar19 + 2;
              }
              *pWVar15 = WVar2;
              uVar19 = uVar19 + 2;
              pWVar15 = pWVar15 + 1;
            } while (uVar19 < 0x6a8);
            local_1ac8 = (WCHAR *)WideCharToMultiByte(0xfde9,0,local_1abc,
                                                      ((int)pWVar15 - (int)local_1abc) / 2,local_d68
                                                      ,0xd55,(LPCSTR)0x0,(LPBOOL)0x0);
            pWVar15 = local_1ac4;
            DVar16 = local_1ad0;
            if (local_1ac8 == (WCHAR *)0x0) goto LAB_0043613f;
            local_1ac4 = (WCHAR *)0x0;
            do {
              BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc]),
                                local_d68 + (int)local_1ac4,(int)local_1ac8 - (int)local_1ac4,
                                (LPDWORD)&local_1ae4,(LPOVERLAPPED)0x0);
              if (BVar8 == 0) {
                DVar16 = GetLastError();
                pWVar12 = extraout_EDX_08;
                local_1ad0 = DVar16;
                break;
              }
              local_1ac4 = (WCHAR *)((int)local_1ac4 + (int)local_1ae4);
              pWVar12 = extraout_EDX_07;
            } while ((int)local_1ac4 < (int)local_1ac8);
          } while (((int)local_1ac8 <= (int)local_1ac4) &&
                  (pWVar15 = (WCHAR *)((int)local_1acc - (int)local_1ad4), pWVar12 = local_1ad4,
                  local_1ac4 = pWVar15, pWVar15 < param_3));
          goto LAB_0043625c;
        }
      }
LAB_0043651e:
      uVar20 = (undefined)in_stack_ffffe50c;
      if (((*(byte *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc] + 4) & 0x40) == 0) ||
         (pWVar12 = local_1ad4, *(char *)local_1ad4 != '\x1a')) {
        piVar6 = __errno();
        *piVar6 = 0x1c;
        puVar5 = ___doserrno();
        *puVar5 = 0;
        pWVar12 = extraout_EDX_11;
      }
    }
    else {
      p_Var7 = __getptd();
      local_1ac8 = (WCHAR *)(uint)(p_Var7->ptlocinfo->locale_name[2] == (wchar_t *)0x0);
      BVar8 = GetConsoleMode(*(HANDLE *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc]),&local_1aec)
      ;
      if ((BVar8 == 0) || ((local_1ac8 != (WCHAR *)0x0 && (cVar13 == '\0')))) goto LAB_0043614c;
      in_stack_ffffe50c = GetConsoleCP();
      DVar11 = 0;
      local_1acc = (WCHAR *)0x0;
      local_1ad0 = 0;
      local_1ad8 = local_1ad4;
      if (param_3 == 0) goto LAB_0043651e;
      pWVar12 = (WCHAR *)0x0;
      local_1ac4 = (WCHAR *)0x0;
      pWVar17 = local_1ad4;
      pWVar14 = pWVar15;
      do {
        local_1ac8 = (WCHAR *)0x0;
        pWVar15 = pWVar14;
        if (cVar13 == '\0') {
          cVar1 = *(char *)pWVar17;
          local_1aec = (uint)(cVar1 == '\n');
          local_1ac8 = (WCHAR *)(&DAT_004585f8)[local_1adc];
          if (*(int *)((int)(local_1ae0 + 0x1c) + (int)local_1ac8) == 0) {
            iVar9 = FUN_0042900f((int)cVar1);
            if (iVar9 == 0) {
              uVar19 = 1;
              pWVar12 = local_1ad8;
              goto LAB_00435f68;
            }
            if ((char *)((int)local_1ad4 + (param_3 - (int)local_1ad8)) < (char *)0x2) {
              *(char *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc] + 0x34) = *(char *)local_1ad8;
              *(undefined4 *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc] + 0x38) = 1;
              pWVar12 = local_1ae0;
              pWVar15 = (WCHAR *)((int)pWVar14 + 1);
              break;
            }
            uVar18 = FUN_004385e9((LPWSTR)&local_1ad0,(byte *)local_1ad8,2);
            pWVar12 = (WCHAR *)((ulonglong)uVar18 >> 0x20);
            if ((int)uVar18 == -1) break;
            local_1ad8 = (WCHAR *)((int)local_1ad8 + 1);
            local_1ac4 = (WCHAR *)((int)local_1ac4 + 1);
          }
          else {
            local_10 = *(char *)((int)(local_1ae0 + 0x1a) + (int)local_1ac8);
            uVar19 = 2;
            *(undefined4 *)((int)(local_1ae0 + 0x1c) + (int)local_1ac8) = 0;
            pWVar12 = (WCHAR *)&local_10;
            local_f = cVar1;
LAB_00435f68:
            uVar18 = FUN_004385e9((LPWSTR)&local_1ad0,(byte *)pWVar12,uVar19);
            pWVar12 = (WCHAR *)((ulonglong)uVar18 >> 0x20);
            if ((int)uVar18 == -1) break;
          }
          local_1ad8 = (WCHAR *)((int)local_1ad8 + 1);
          local_1ac4 = (WCHAR *)((int)local_1ac4 + 1);
          local_1ac8 = (WCHAR *)WideCharToMultiByte(in_stack_ffffe50c,0,(LPCWSTR)&local_1ad0,1,
                                                    &local_10,5,(LPCSTR)0x0,(LPBOOL)0x0);
          pWVar12 = extraout_EDX_00;
          if (local_1ac8 == (WCHAR *)0x0) break;
          BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc]),&local_10,
                            (DWORD)local_1ac8,(LPDWORD)&local_1acc,(LPOVERLAPPED)0x0);
          if (BVar8 == 0) goto LAB_0043613f;
          pWVar15 = (WCHAR *)((int)local_1ac4 + local_1ac0);
          pWVar12 = extraout_EDX_01;
          if ((int)local_1acc < (int)local_1ac8) break;
          pWVar17 = local_1ad8;
          DVar11 = local_1ad0;
          pWVar12 = local_1ac4;
          if (local_1aec != 0) {
            local_10 = '\r';
            BVar8 = WriteFile(*(HANDLE *)((int)local_1ae0 + (&DAT_004585f8)[local_1adc]),&local_10,1
                              ,(LPDWORD)&local_1acc,(LPOVERLAPPED)0x0);
            if (BVar8 == 0) goto LAB_0043613f;
            pWVar12 = extraout_EDX_02;
            if ((int)local_1acc < 1) break;
            local_1ac0 = local_1ac0 + 1;
            pWVar15 = (WCHAR *)((int)pWVar15 + 1);
            pWVar17 = local_1ad8;
            DVar11 = local_1ad0;
            pWVar12 = local_1ac4;
          }
        }
        else {
          if ((cVar13 == '\x01') || (cVar13 == '\x02')) {
            DVar11 = (DWORD)(ushort)*pWVar17;
            local_1ac8 = (WCHAR *)(uint)(*pWVar17 == L'\n');
            pWVar17 = pWVar17 + 1;
            pWVar12 = local_1ac4 + 1;
            local_1ad8 = pWVar17;
            local_1ad0 = DVar11;
            local_1ac4 = pWVar12;
          }
          if ((cVar13 == '\x01') || (cVar13 == '\x02')) {
            wVar4 = __putwch_nolock((wchar_t)DVar11);
            if (wVar4 != (wint_t)local_1ad0) goto LAB_0043613f;
            pWVar15 = pWVar14 + 1;
            pWVar17 = local_1ad8;
            DVar11 = local_1ad0;
            pWVar12 = local_1ac4;
            if (local_1ac8 != (WCHAR *)0x0) {
              local_1ad0 = 0xd;
              wVar4 = __putwch_nolock(L'\r');
              if (wVar4 != (wint_t)local_1ad0) goto LAB_0043613f;
              pWVar15 = (WCHAR *)((int)pWVar14 + 3);
              local_1ac0 = local_1ac0 + 1;
              pWVar17 = local_1ad8;
              DVar11 = local_1ad0;
              pWVar12 = local_1ac4;
            }
          }
        }
        pWVar14 = pWVar15;
      } while (pWVar12 < param_3);
LAB_0043625c:
      uVar20 = (undefined)in_stack_ffffe50c;
      if (pWVar15 == (WCHAR *)0x0) {
        if (DVar16 == 0) goto LAB_0043651e;
        if (DVar16 == 5) {
          piVar6 = __errno();
          *piVar6 = 9;
          puVar5 = ___doserrno();
          *puVar5 = 5;
          pWVar12 = extraout_EDX_05;
        }
        else {
          FID_conflict___dosmaperr(DVar16);
          pWVar12 = extraout_EDX_10;
        }
      }
    }
  }
  in_DL = SUB41(pWVar12,0);
LAB_0043655e:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,in_DL,uVar20);
  return;
}



// Library Function - Single Match
//  __global_unwind2
// 
// Library: Visual Studio

void __cdecl __global_unwind2(PVOID param_1)

{
  RtlUnwind(param_1,(PVOID)0x436588,(PEXCEPTION_RECORD)0x0,(PVOID)0x0);
  return;
}



undefined4 __fastcall
FUN_00436590(undefined4 param_1,undefined param_2,int param_3,undefined4 param_4,undefined4 param_5,
            undefined4 *param_6,uint param_7)

{
  undefined4 uVar1;
  int iVar2;
  undefined1 unaff_retaddr;
  
  uVar1 = 1;
  if ((*(uint *)(param_3 + 4) & 6) != 0) {
    iVar2 = FUN_004298aa(*(uint *)(param_7 - 4) ^ param_7,param_2,unaff_retaddr);
    __local_unwind2(*(int *)(iVar2 + 0x24),*(uint *)(iVar2 + 0x28));
    *param_6 = param_4;
    uVar1 = 3;
  }
  return uVar1;
}



// Library Function - Single Match
//  __local_unwind2
// 
// Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual
// Studio 2019 Release

void __cdecl __local_unwind2(int param_1,uint param_2)

{
  uint uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 local_20;
  code *pcStack28;
  undefined4 local_18;
  int iStack20;
  
  iStack20 = param_1;
  pcStack28 = FUN_00436590;
  local_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &local_20;
  while( true ) {
    uVar1 = *(uint *)(param_1 + 0xc);
    if ((uVar1 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar1 <= param_2)))) break;
    local_18 = *(undefined4 *)(*(int *)(param_1 + 8) + uVar1 * 0xc);
    *(undefined4 *)(param_1 + 0xc) = local_18;
    if (*(int *)(*(int *)(param_1 + 8) + 4 + uVar1 * 0xc) == 0) {
      __NLG_Notify(0x101);
      FUN_004366a4();
    }
  }
  *in_FS_OFFSET = local_20;
  return;
}



// Library Function - Single Match
//  __NLG_Notify
// 
// Libraries: Visual Studio 2017 Debug, Visual Studio 2017 Release, Visual Studio 2019 Debug, Visual
// Studio 2019 Release

void __NLG_Notify(ulong param_1)

{
  undefined4 in_EAX;
  undefined4 unaff_EBP;
  
  DAT_00448a54 = in_EAX;
  DAT_00448a58 = param_1;
  DAT_00448a5c = unaff_EBP;
  return;
}



void FUN_004366a4(void)

{
  code *in_EAX;
  
  (*in_EAX)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __getbuf
// 
// Library: Visual Studio 2012 Release

void __cdecl __getbuf(FILE *_File)

{
  char *pcVar1;
  
  _DAT_00458448 = _DAT_00458448 + 1;
  pcVar1 = (char *)FUN_00403c30(0x1000);
  _File->_base = pcVar1;
  if (pcVar1 == (char *)0x0) {
    _File->_flag = _File->_flag | 4;
    _File->_base = (char *)&_File->_charbuf;
    _File->_bufsiz = 2;
  }
  else {
    _File->_flag = _File->_flag | 8;
    _File->_bufsiz = 0x1000;
  }
  _File->_cnt = 0;
  _File->_ptr = _File->_base;
  return;
}



byte __cdecl FUN_004366ed(uint param_1)

{
  int *piVar1;
  
  if (param_1 == 0xfffffffe) {
    piVar1 = __errno();
    *piVar1 = 9;
  }
  else {
    if ((-1 < (int)param_1) && (param_1 < DAT_004592a4)) {
      return *(byte *)((&DAT_004585f8)[(int)param_1 >> 5] + 4 + (param_1 & 0x1f) * 0x40) & 0x40;
    }
    piVar1 = __errno();
    *piVar1 = 9;
    FUN_00429bfe();
  }
  return 0;
}



int __cdecl
FUN_00436741(int *param_1,uint *param_2,uint param_3,WCHAR param_4,pthreadlocinfo *param_5)

{
  uint *lpMultiByteStr;
  uint cbMultiByte;
  int *piVar1;
  int iVar2;
  DWORD DVar3;
  int iVar4;
  int local_14 [2];
  int local_c;
  char local_8;
  
  cbMultiByte = param_3;
  lpMultiByteStr = param_2;
  if ((param_2 == (uint *)0x0) && (param_3 != 0)) {
    if (param_1 != (int *)0x0) {
      *param_1 = 0;
    }
    return 0;
  }
  if (param_1 != (int *)0x0) {
    *param_1 = -1;
  }
  if (0x7fffffff < param_3) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    return 0x16;
  }
  FUN_00427078(local_14,param_5);
  iVar4 = 0;
  if (*(int *)(local_14[0] + 0xa8) == 0) {
    if ((ushort)param_4 < 0x100) {
      if (lpMultiByteStr != (uint *)0x0) {
        if (cbMultiByte == 0) goto LAB_00436851;
        *(char *)lpMultiByteStr = (char)param_4;
      }
      if (param_1 != (int *)0x0) {
        *param_1 = 1;
      }
      goto LAB_004367d4;
    }
    if ((lpMultiByteStr != (uint *)0x0) && (cbMultiByte != 0)) {
      FUN_00427870(lpMultiByteStr,0,cbMultiByte);
    }
  }
  else {
    param_2 = (uint *)0x0;
    iVar2 = WideCharToMultiByte(*(UINT *)(local_14[0] + 4),0,&param_4,1,(LPSTR)lpMultiByteStr,
                                cbMultiByte,(LPCSTR)0x0,(LPBOOL)&param_2);
    if (iVar2 == 0) {
      DVar3 = GetLastError();
      if (DVar3 == 0x7a) {
        if ((lpMultiByteStr != (uint *)0x0) && (cbMultiByte != 0)) {
          FUN_00427870(lpMultiByteStr,0,cbMultiByte);
        }
LAB_00436851:
        piVar1 = __errno();
        iVar4 = 0x22;
        *piVar1 = 0x22;
        FUN_00429bfe();
        goto LAB_004367d4;
      }
    }
    else if (param_2 == (uint *)0x0) {
      if (param_1 != (int *)0x0) {
        *param_1 = iVar2;
      }
      goto LAB_004367d4;
    }
  }
  piVar1 = __errno();
  *piVar1 = 0x2a;
  piVar1 = __errno();
  iVar4 = *piVar1;
LAB_004367d4:
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return iVar4;
}



void __cdecl FUN_00436865(int *param_1,uint *param_2,uint param_3,WCHAR param_4)

{
  FUN_00436741(param_1,param_2,param_3,param_4,(pthreadlocinfo *)0x0);
  return;
}



float10 __fastcall
FUN_00436a50(undefined4 param_1,int param_2,ushort param_3,undefined4 param_4,undefined4 param_5,
            undefined4 param_6,undefined4 param_7,undefined4 param_8)

{
  float10 in_ST0;
  int local_24;
  undefined4 uStack32;
  undefined4 uStack28;
  undefined4 uStack24;
  undefined4 local_14;
  undefined4 local_10;
  double dStack12;
  
  local_14 = param_7;
  local_10 = param_8;
  dStack12 = (double)in_ST0;
  uStack28 = param_5;
  uStack24 = param_6;
  uStack32 = param_1;
  __87except(param_2,&local_24,&param_3);
  return (float10)dStack12;
}



// Library Function - Single Match
//  __startOneArgErrorHandling
// 
// Library: Visual Studio 2019 Release

float10 __fastcall
__startOneArgErrorHandling
          (undefined4 param_1,int param_2,ushort param_3,undefined4 param_4,undefined4 param_5,
          undefined4 param_6)

{
  float10 in_ST0;
  int local_24;
  undefined4 local_20;
  undefined4 local_1c;
  undefined4 local_18;
  double local_c;
  
  local_c = (double)in_ST0;
  local_1c = param_5;
  local_18 = param_6;
  local_20 = param_1;
  __87except(param_2,&local_24,&param_3);
  return (float10)local_c;
}



void FUN_00436ac5(undefined4 param_1)

{
  return;
}



undefined4 FUN_00436adc(void)

{
  uint in_EAX;
  
  if ((in_EAX & 0x80000) != 0) {
    return 7;
  }
  return 1;
}



uint __cdecl FUN_00436b38(undefined4 param_1,uint param_2)

{
  if ((param_2 & 0x7ff00000) != 0x7ff00000) {
    return param_2 & 0x7ff00000;
  }
  return param_2;
}



int __cdecl FUN_00436c3c(char *param_1,uint param_2,int param_3,int param_4)

{
  char *_Str;
  int *piVar1;
  char *pcVar2;
  size_t sVar3;
  char cVar4;
  char *pcVar5;
  int iVar6;
  
  pcVar5 = *(char **)(param_4 + 0xc);
  if ((param_1 == (char *)0x0) || (param_2 == 0)) {
    piVar1 = __errno();
    iVar6 = 0x16;
  }
  else {
    *param_1 = '\0';
    iVar6 = param_3;
    if (param_3 < 1) {
      iVar6 = 0;
    }
    if (iVar6 + 1U < param_2) {
      *param_1 = '0';
      _Str = param_1 + 1;
      pcVar2 = _Str;
      if (0 < param_3) {
        do {
          cVar4 = *pcVar5;
          if (cVar4 == '\0') {
            cVar4 = '0';
          }
          else {
            pcVar5 = pcVar5 + 1;
          }
          *pcVar2 = cVar4;
          pcVar2 = pcVar2 + 1;
          param_3 = param_3 + -1;
        } while (0 < param_3);
      }
      *pcVar2 = '\0';
      if ((-1 < param_3) && ('4' < *pcVar5)) {
        while (pcVar2 = pcVar2 + -1, *pcVar2 == '9') {
          *pcVar2 = '0';
        }
        *pcVar2 = *pcVar2 + '\x01';
      }
      if (*param_1 == '1') {
        *(int *)(param_4 + 4) = *(int *)(param_4 + 4) + 1;
      }
      else {
        sVar3 = _strlen(_Str);
        FID_conflict__memcpy(param_1,_Str,sVar3 + 1);
      }
      return 0;
    }
    piVar1 = __errno();
    iVar6 = 0x22;
  }
  *piVar1 = iVar6;
  FUN_00429bfe();
  return iVar6;
}



void __cdecl FUN_00436cec(uint *param_1,uint *param_2)

{
  uint uVar1;
  ushort uVar2;
  ushort uVar3;
  uint uVar4;
  uint uVar5;
  ushort uVar6;
  
  uVar4 = 0x80000000;
  uVar1 = *param_2;
  uVar6 = *(ushort *)((int)param_2 + 6) & 0x8000;
  uVar2 = *(ushort *)((int)param_2 + 6) >> 4;
  uVar3 = uVar2 & 0x7ff;
  if ((uVar2 & 0x7ff) == 0) {
    if (((param_2[1] & 0xfffff) == 0) && (uVar1 == 0)) {
      param_1[1] = 0;
      *param_1 = 0;
      *(ushort *)(param_1 + 2) = uVar6;
      return;
    }
    uVar3 = uVar3 + 0x3c01;
    uVar4 = 0;
  }
  else if (uVar3 == 0x7ff) {
    uVar3 = 0x7fff;
  }
  else {
    uVar3 = uVar3 + 0x3c00;
  }
  uVar5 = uVar1 >> 0x15 | (param_2[1] & 0xfffff) << 0xb | uVar4;
  param_1[1] = uVar5;
  *param_1 = uVar1 << 0xb;
  if (uVar4 == 0) {
    do {
      uVar3 = uVar3 - 1;
      uVar5 = uVar5 * 2 | *param_1 >> 0x1f;
      *param_1 = *param_1 * 2;
    } while (-1 < (int)uVar5);
    param_1[1] = uVar5;
  }
  *(ushort *)(param_1 + 2) = uVar6 | uVar3;
  return;
}



void __cdecl
FUN_00436db4(uint param_1,undefined4 param_2,int *param_3,char *param_4,rsize_t param_5)

{
  code *pcVar1;
  int *piVar2;
  char *_Dst;
  int iVar3;
  errno_t eVar4;
  undefined extraout_DL;
  undefined uVar5;
  uint in_stack_ffffffcc;
  uint uStack48;
  ushort uStack44;
  short local_24;
  char local_22;
  char local_20 [24];
  uint local_8;
  
  _Dst = param_4;
  piVar2 = param_3;
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  FUN_00436cec((uint *)&stack0xffffffcc,&param_1);
  iVar3 = FUN_004396c1(in_stack_ffffffcc,uStack48,uStack44,0x11,0,&local_24);
  uVar5 = (undefined)in_stack_ffffffcc;
  piVar2[2] = iVar3;
  *piVar2 = (int)local_22;
  piVar2[1] = (int)local_24;
  eVar4 = _strcpy_s(_Dst,param_5,local_20);
  if (eVar4 == 0) {
    piVar2[3] = (int)_Dst;
    FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,extraout_DL,uVar5);
    return;
  }
  __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
  pcVar1 = (code *)swi(3);
  (*pcVar1)();
  return;
}



// Library Function - Single Match
//  __alldvrm
// 
// Library: Visual Studio

undefined8 __alldvrm(uint param_1,uint param_2,uint param_3,uint param_4)

{
  ulonglong uVar1;
  longlong lVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  bool bVar10;
  char cVar11;
  uint uVar9;
  
  cVar11 = (int)param_2 < 0;
  if ((bool)cVar11) {
    bVar10 = param_1 != 0;
    param_1 = -param_1;
    param_2 = -(uint)bVar10 - param_2;
  }
  if ((int)param_4 < 0) {
    cVar11 = cVar11 + '\x01';
    bVar10 = param_3 != 0;
    param_3 = -param_3;
    param_4 = -(uint)bVar10 - param_4;
  }
  uVar3 = param_1;
  uVar5 = param_3;
  uVar6 = param_2;
  uVar9 = param_4;
  if (param_4 == 0) {
    uVar3 = param_2 / param_3;
    iVar4 = (int)(((ulonglong)param_2 % (ulonglong)param_3 << 0x20 | (ulonglong)param_1) /
                 (ulonglong)param_3);
  }
  else {
    do {
      uVar8 = uVar9 >> 1;
      uVar5 = uVar5 >> 1 | (uint)((uVar9 & 1) != 0) << 0x1f;
      uVar7 = uVar6 >> 1;
      uVar3 = uVar3 >> 1 | (uint)((uVar6 & 1) != 0) << 0x1f;
      uVar6 = uVar7;
      uVar9 = uVar8;
    } while (uVar8 != 0);
    uVar1 = CONCAT44(uVar7,uVar3) / (ulonglong)uVar5;
    iVar4 = (int)uVar1;
    lVar2 = (ulonglong)param_3 * (uVar1 & 0xffffffff);
    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);
    uVar5 = uVar3 + iVar4 * param_4;
    if (((CARRY4(uVar3,iVar4 * param_4)) || (param_2 < uVar5)) ||
       ((param_2 <= uVar5 && (param_1 < (uint)lVar2)))) {
      iVar4 = iVar4 + -1;
    }
    uVar3 = 0;
  }
  if (cVar11 == '\x01') {
    bVar10 = iVar4 != 0;
    iVar4 = -iVar4;
    uVar3 = -(uint)bVar10 - uVar3;
  }
  return CONCAT44(uVar3,iVar4);
}



// Library Function - Single Match
//  __controlfp_s
// 
// Library: Visual Studio 2012 Release

errno_t __cdecl __controlfp_s(uint *_CurrentState,uint _NewValue,uint _Mask)

{
  int *piVar1;
  uint uVar2;
  errno_t eVar3;
  
  uVar2 = _Mask & 0xfff7ffff;
  if ((_NewValue & uVar2 & 0xfcf0fce0) == 0) {
    if (_CurrentState == (uint *)0x0) {
      FUN_0043a13e(_NewValue,uVar2);
    }
    else {
      uVar2 = FUN_0043a13e(_NewValue,uVar2);
      *_CurrentState = uVar2;
    }
    eVar3 = 0;
  }
  else {
    if (_CurrentState != (uint *)0x0) {
      uVar2 = FUN_0043a13e(0,0);
      *_CurrentState = uVar2;
    }
    piVar1 = __errno();
    eVar3 = 0x16;
    *piVar1 = 0x16;
    FUN_00429bfe();
  }
  return eVar3;
}



void FUN_00436f8c(void)

{
  __amsg_exit(2);
  return;
}



// Library Function - Multiple Matches With Different Base Names
//  ___acrt_locale_free_monetary
//  ___free_lconv_mon
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

void __cdecl FID_conflict____acrt_locale_free_monetary(int param_1)

{
  if (param_1 != 0) {
    if (*(undefined **)(param_1 + 0xc) != PTR_DAT_00447df4) {
      FUN_00403c10(*(undefined **)(param_1 + 0xc));
    }
    if (*(undefined **)(param_1 + 0x10) != PTR_DAT_00447df8) {
      FUN_00403c10(*(undefined **)(param_1 + 0x10));
    }
    if (*(undefined **)(param_1 + 0x14) != PTR_DAT_00447dfc) {
      FUN_00403c10(*(undefined **)(param_1 + 0x14));
    }
    if (*(undefined **)(param_1 + 0x18) != PTR_DAT_00447e00) {
      FUN_00403c10(*(undefined **)(param_1 + 0x18));
    }
    if (*(undefined **)(param_1 + 0x1c) != PTR_DAT_00447e04) {
      FUN_00403c10(*(undefined **)(param_1 + 0x1c));
    }
    if (*(undefined **)(param_1 + 0x20) != PTR_DAT_00447e08) {
      FUN_00403c10(*(undefined **)(param_1 + 0x20));
    }
    if (*(undefined **)(param_1 + 0x24) != PTR_DAT_00447e0c) {
      FUN_00403c10(*(undefined **)(param_1 + 0x24));
    }
    if (*(undefined **)(param_1 + 0x38) != PTR_DAT_00447e20) {
      FUN_00403c10(*(undefined **)(param_1 + 0x38));
    }
    if (*(undefined **)(param_1 + 0x3c) != PTR_DAT_00447e24) {
      FUN_00403c10(*(undefined **)(param_1 + 0x3c));
    }
    if (*(undefined **)(param_1 + 0x40) != PTR_DAT_00447e28) {
      FUN_00403c10(*(undefined **)(param_1 + 0x40));
    }
    if (*(undefined **)(param_1 + 0x44) != PTR_DAT_00447e2c) {
      FUN_00403c10(*(undefined **)(param_1 + 0x44));
    }
    if (*(undefined **)(param_1 + 0x48) != PTR_DAT_00447e30) {
      FUN_00403c10(*(undefined **)(param_1 + 0x48));
    }
    if (*(undefined **)(param_1 + 0x4c) != PTR_DAT_00447e34) {
      FUN_00403c10(*(undefined **)(param_1 + 0x4c));
    }
  }
  return;
}



// Library Function - Multiple Matches With Different Base Names
//  ___acrt_locale_free_numeric
//  ___free_lconv_num
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2017 Release,
// Visual Studio 2019 Release

void __cdecl FID_conflict____free_lconv_num(int *param_1)

{
  if (param_1 != (int *)0x0) {
    if ((undefined *)*param_1 != PTR_DAT_00447de8) {
      FUN_00403c10((undefined *)*param_1);
    }
    if ((undefined *)param_1[1] != PTR_DAT_00447dec) {
      FUN_00403c10((undefined *)param_1[1]);
    }
    if ((undefined *)param_1[2] != PTR_DAT_00447df0) {
      FUN_00403c10((undefined *)param_1[2]);
    }
    if ((undefined *)param_1[0xc] != PTR_DAT_00447e18) {
      FUN_00403c10((undefined *)param_1[0xc]);
    }
    if ((undefined *)param_1[0xd] != PTR_DAT_00447e1c) {
      FUN_00403c10((undefined *)param_1[0xd]);
    }
  }
  return;
}



// Library Function - Single Match
//  ___free_lc_time
// 
// Library: Visual Studio 2012 Release

void __cdecl ___free_lc_time(undefined4 *param_1)

{
  if (param_1 != (undefined4 *)0x0) {
    FUN_00403c10(param_1[1]);
    FUN_00403c10(param_1[2]);
    FUN_00403c10(param_1[3]);
    FUN_00403c10(param_1[4]);
    FUN_00403c10(param_1[5]);
    FUN_00403c10(param_1[6]);
    FUN_00403c10(*param_1);
    FUN_00403c10(param_1[8]);
    FUN_00403c10(param_1[9]);
    FUN_00403c10(param_1[10]);
    FUN_00403c10(param_1[0xb]);
    FUN_00403c10(param_1[0xc]);
    FUN_00403c10(param_1[0xd]);
    FUN_00403c10(param_1[7]);
    FUN_00403c10(param_1[0xe]);
    FUN_00403c10(param_1[0xf]);
    FUN_00403c10(param_1[0x10]);
    FUN_00403c10(param_1[0x11]);
    FUN_00403c10(param_1[0x12]);
    FUN_00403c10(param_1[0x13]);
    FUN_00403c10(param_1[0x14]);
    FUN_00403c10(param_1[0x15]);
    FUN_00403c10(param_1[0x16]);
    FUN_00403c10(param_1[0x17]);
    FUN_00403c10(param_1[0x18]);
    FUN_00403c10(param_1[0x19]);
    FUN_00403c10(param_1[0x1a]);
    FUN_00403c10(param_1[0x1b]);
    FUN_00403c10(param_1[0x1c]);
    FUN_00403c10(param_1[0x1d]);
    FUN_00403c10(param_1[0x1e]);
    FUN_00403c10(param_1[0x1f]);
    FUN_00403c10(param_1[0x20]);
    FUN_00403c10(param_1[0x21]);
    FUN_00403c10(param_1[0x22]);
    FUN_00403c10(param_1[0x23]);
    FUN_00403c10(param_1[0x24]);
    FUN_00403c10(param_1[0x25]);
    FUN_00403c10(param_1[0x26]);
    FUN_00403c10(param_1[0x27]);
    FUN_00403c10(param_1[0x28]);
    FUN_00403c10(param_1[0x29]);
    FUN_00403c10(param_1[0x2a]);
    FUN_00403c10(param_1[0x2e]);
    FUN_00403c10(param_1[0x2f]);
    FUN_00403c10(param_1[0x30]);
    FUN_00403c10(param_1[0x31]);
    FUN_00403c10(param_1[0x32]);
    FUN_00403c10(param_1[0x33]);
    FUN_00403c10(param_1[0x2d]);
    FUN_00403c10(param_1[0x35]);
    FUN_00403c10(param_1[0x36]);
    FUN_00403c10(param_1[0x37]);
    FUN_00403c10(param_1[0x38]);
    FUN_00403c10(param_1[0x39]);
    FUN_00403c10(param_1[0x3a]);
    FUN_00403c10(param_1[0x34]);
    FUN_00403c10(param_1[0x3b]);
    FUN_00403c10(param_1[0x3c]);
    FUN_00403c10(param_1[0x3d]);
    FUN_00403c10(param_1[0x3e]);
    FUN_00403c10(param_1[0x3f]);
    FUN_00403c10(param_1[0x40]);
    FUN_00403c10(param_1[0x41]);
    FUN_00403c10(param_1[0x42]);
    FUN_00403c10(param_1[0x43]);
    FUN_00403c10(param_1[0x44]);
    FUN_00403c10(param_1[0x45]);
    FUN_00403c10(param_1[0x46]);
    FUN_00403c10(param_1[0x47]);
    FUN_00403c10(param_1[0x48]);
    FUN_00403c10(param_1[0x49]);
    FUN_00403c10(param_1[0x4a]);
    FUN_00403c10(param_1[0x4b]);
    FUN_00403c10(param_1[0x4c]);
    FUN_00403c10(param_1[0x4d]);
    FUN_00403c10(param_1[0x4e]);
    FUN_00403c10(param_1[0x4f]);
    FUN_00403c10(param_1[0x50]);
    FUN_00403c10(param_1[0x51]);
    FUN_00403c10(param_1[0x52]);
    FUN_00403c10(param_1[0x53]);
    FUN_00403c10(param_1[0x54]);
    FUN_00403c10(param_1[0x55]);
    FUN_00403c10(param_1[0x56]);
    FUN_00403c10(param_1[0x57]);
    FUN_00403c10(param_1[0x58]);
  }
  return;
}



// WARNING: Function: __alloca_probe_16 replaced with injection: alloca_probe

void __cdecl
FUN_00437478(int *param_1,DWORD param_2,LPCSTR param_3,int param_4,LPWORD param_5,UINT param_6,
            int param_7)

{
  uint uVar1;
  uint uVar2;
  uint cchWideChar;
  undefined4 *puVar3;
  int cchSrc;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined uVar4;
  undefined extraout_DL_01;
  uint *lpWideCharStr;
  
  uVar2 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  if (param_6 == 0) {
    param_6 = *(UINT *)(*param_1 + 4);
  }
  cchWideChar = MultiByteToWideChar(param_6,(uint)(param_7 != 0) * 8 + 1,param_3,param_4,(LPWSTR)0x0
                                    ,0);
  uVar4 = extraout_DL;
  if (cchWideChar == 0) goto LAB_0043755c;
  if ((((int)cchWideChar < 1) || (0x7ffffff0 < cchWideChar)) ||
     (cchWideChar * 2 + 8 <= cchWideChar * 2)) {
    lpWideCharStr = (uint *)0x0;
  }
  else {
    uVar1 = cchWideChar * 2 + 8;
    if (uVar1 < 0x401) {
      puVar3 = (undefined4 *)&stack0xffffffec;
      if (&stack0x00000000 == &DAT_00000014) goto LAB_0043755c;
    }
    else {
      puVar3 = (undefined4 *)FUN_00403c30(uVar1);
      uVar4 = extraout_DL_00;
      if (puVar3 == (undefined4 *)0x0) goto LAB_0043755c;
      *puVar3 = 0xdddd;
    }
    lpWideCharStr = puVar3 + 2;
  }
  if (lpWideCharStr != (uint *)0x0) {
    FUN_00427870(lpWideCharStr,0,cchWideChar * 2);
    cchSrc = MultiByteToWideChar(param_6,1,param_3,param_4,(LPWSTR)lpWideCharStr,cchWideChar);
    if (cchSrc != 0) {
      GetStringTypeW(param_2,(LPCWSTR)lpWideCharStr,cchSrc,param_5);
    }
    FUN_00427275((int)lpWideCharStr);
    uVar4 = extraout_DL_01;
  }
LAB_0043755c:
  FUN_004298aa(uVar2 ^ (uint)&stack0xfffffffc,uVar4,(char)uVar2);
  return;
}



void __cdecl
FUN_00437570(pthreadlocinfo *param_1,DWORD param_2,LPCSTR param_3,int param_4,LPWORD param_5,
            UINT param_6,int param_7)

{
  int local_14 [2];
  int local_c;
  char local_8;
  
  FUN_00427078(local_14,param_1);
  FUN_00437478(local_14,param_2,param_3,param_4,param_5,param_6,param_7);
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
  }
  return;
}



// Library Function - Single Match
//  _wcscat_s
// 
// Library: Visual Studio 2012 Release

errno_t __cdecl _wcscat_s(wchar_t *_Dst,rsize_t _SizeInWords,wchar_t *_Src)

{
  wchar_t wVar1;
  int *piVar2;
  wchar_t *pwVar3;
  int iVar4;
  int iStack16;
  
  if ((_Dst != (wchar_t *)0x0) && (_SizeInWords != 0)) {
    pwVar3 = _Dst;
    if (_Src != (wchar_t *)0x0) {
      do {
        if (*pwVar3 == L'\0') break;
        pwVar3 = pwVar3 + 1;
        _SizeInWords = _SizeInWords - 1;
      } while (_SizeInWords != 0);
      if (_SizeInWords != 0) {
        iVar4 = (int)pwVar3 - (int)_Src;
        do {
          wVar1 = *_Src;
          *(wchar_t *)(iVar4 + (int)_Src) = wVar1;
          _Src = _Src + 1;
          if (wVar1 == L'\0') break;
          _SizeInWords = _SizeInWords - 1;
        } while (_SizeInWords != 0);
        if (_SizeInWords != 0) {
          return 0;
        }
        *_Dst = L'\0';
        piVar2 = __errno();
        iStack16 = 0x22;
        goto LAB_004375d6;
      }
    }
    *_Dst = L'\0';
  }
  piVar2 = __errno();
  iStack16 = 0x16;
LAB_004375d6:
  *piVar2 = iStack16;
  FUN_00429bfe();
  return iStack16;
}



int __cdecl FUN_0043761c(short *param_1,int param_2,short *param_3,int param_4)

{
  short sVar1;
  int *piVar2;
  int iVar3;
  short *psVar4;
  int iVar5;
  
  if (param_4 == 0) {
    if (param_1 == (short *)0x0) {
      if (param_2 == 0) {
        return 0;
      }
    }
    else {
LAB_0043763b:
      if (param_2 != 0) {
        if (param_4 == 0) {
          *param_1 = 0;
          return 0;
        }
        if (param_3 != (short *)0x0) {
          iVar5 = param_2;
          if (param_4 == -1) {
            iVar3 = (int)param_1 - (int)param_3;
            do {
              sVar1 = *param_3;
              *(short *)(iVar3 + (int)param_3) = sVar1;
              param_3 = param_3 + 1;
              if (sVar1 == 0) break;
              iVar5 = iVar5 + -1;
            } while (iVar5 != 0);
          }
          else {
            psVar4 = param_1;
            do {
              sVar1 = *(short *)(((int)param_3 - (int)param_1) + (int)psVar4);
              *psVar4 = sVar1;
              psVar4 = psVar4 + 1;
              if ((sVar1 == 0) || (iVar5 = iVar5 + -1, iVar5 == 0)) break;
              param_4 = param_4 + -1;
            } while (param_4 != 0);
            if (param_4 == 0) {
              *psVar4 = 0;
            }
          }
          if (iVar5 != 0) {
            return 0;
          }
          if (param_4 == -1) {
            param_1[param_2 + -1] = 0;
            return 0x50;
          }
          *param_1 = 0;
          piVar2 = __errno();
          iVar5 = 0x22;
          goto LAB_00437660;
        }
        *param_1 = 0;
      }
    }
  }
  else if (param_1 != (short *)0x0) goto LAB_0043763b;
  piVar2 = __errno();
  iVar5 = 0x16;
LAB_00437660:
  *piVar2 = iVar5;
  FUN_00429bfe();
  return iVar5;
}



void __cdecl FUN_004376da(LPCWSTR param_1,undefined4 param_2,uint param_3)

{
  bool bVar1;
  PVOID pvVar2;
  undefined3 extraout_var;
  HMODULE hModule;
  DWORD DVar3;
  FARPROC pFVar4;
  BOOL BVar5;
  code *pcVar6;
  code *pcVar7;
  int iVar8;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined extraout_DL_04;
  undefined extraout_DL_05;
  undefined extraout_DL_06;
  undefined uVar9;
  int iVar10;
  undefined in_stack_ffffffd8;
  undefined local_14 [8];
  byte local_c;
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  iVar10 = 0;
  pvVar2 = EncodePointer((PVOID)0x0);
  bVar1 = FUN_0042ed35();
  if (DAT_004591f0 == (PVOID)0x0) {
    hModule = LoadLibraryExW(L"USER32.DLL",(HANDLE)0x0,0x800);
    if (((hModule == (HMODULE)0x0) &&
        ((DVar3 = GetLastError(), uVar9 = extraout_DL, DVar3 != 0x57 ||
         (hModule = LoadLibraryExW(L"USER32.DLL",(HANDLE)0x0,0), uVar9 = extraout_DL_00,
         hModule == (HMODULE)0x0)))) ||
       (pFVar4 = GetProcAddress(hModule,"MessageBoxW"), uVar9 = extraout_DL_01,
       pFVar4 == (FARPROC)0x0)) goto LAB_004378af;
    DAT_004591f0 = EncodePointer(pFVar4);
    pFVar4 = GetProcAddress(hModule,"GetActiveWindow");
    DAT_004591f4 = EncodePointer(pFVar4);
    pFVar4 = GetProcAddress(hModule,"GetLastActivePopup");
    DAT_004591f8 = EncodePointer(pFVar4);
    pFVar4 = GetProcAddress(hModule,"GetUserObjectInformationW");
    DAT_00459200 = EncodePointer(pFVar4);
    if (DAT_00459200 != (PVOID)0x0) {
      pFVar4 = GetProcAddress(hModule,"GetProcessWindowStation");
      DAT_004591fc = EncodePointer(pFVar4);
    }
  }
  BVar5 = IsDebuggerPresent();
  if (BVar5 == 0) {
    if (CONCAT31(extraout_var,bVar1) != 0) {
      DecodePointer(DAT_004591f0);
      uVar9 = extraout_DL_04;
      goto LAB_004378af;
    }
  }
  else {
    uVar9 = extraout_DL_02;
    if (param_1 != (LPCWSTR)0x0) {
      OutputDebugStringW(param_1);
      uVar9 = extraout_DL_03;
    }
    if (CONCAT31(extraout_var,bVar1) != 0) goto LAB_004378af;
  }
  if ((DAT_004591fc == pvVar2) || (DAT_00459200 == pvVar2)) {
LAB_00437865:
    if ((((DAT_004591f4 != pvVar2) &&
         (pcVar6 = (code *)DecodePointer(DAT_004591f4), pcVar6 != (code *)0x0)) &&
        (iVar10 = (*pcVar6)(), iVar10 != 0)) &&
       ((DAT_004591f8 != pvVar2 &&
        (pcVar6 = (code *)DecodePointer(DAT_004591f8), pcVar6 != (code *)0x0)))) {
      iVar10 = (*pcVar6)(iVar10);
    }
  }
  else {
    pcVar6 = (code *)DecodePointer(DAT_004591fc);
    pcVar7 = (code *)DecodePointer(DAT_00459200);
    if (((pcVar6 == (code *)0x0) || (pcVar7 == (code *)0x0)) ||
       (((iVar8 = (*pcVar6)(), iVar8 != 0 &&
         (iVar8 = (*pcVar7)(iVar8,1,local_14,0xc,&stack0xffffffd8), iVar8 != 0)) &&
        ((local_c & 1) != 0)))) goto LAB_00437865;
    param_3 = param_3 | 0x200000;
  }
  pcVar6 = (code *)DecodePointer(DAT_004591f0);
  uVar9 = extraout_DL_05;
  if (pcVar6 != (code *)0x0) {
    (*pcVar6)(iVar10,param_1,param_2,param_3);
    uVar9 = extraout_DL_06;
  }
LAB_004378af:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,uVar9,in_stack_ffffffd8);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_004378c0(ushort *param_1,uint *param_2)

{
  ushort uVar1;
  ushort uVar2;
  byte bVar3;
  bool bVar4;
  bool bVar5;
  int iVar6;
  uint uVar7;
  byte bVar8;
  uint uVar9;
  uint *puVar10;
  uint uVar11;
  uint *puVar12;
  int iVar13;
  int iVar14;
  int iVar15;
  uint uVar16;
  uint uVar17;
  int local_38;
  uint local_24;
  uint local_14 [4];
  
  local_14[3] = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  uVar1 = param_1[5];
  iVar14 = 0;
  uVar11 = uVar1 & 0x7fff;
  uVar16 = *(uint *)(param_1 + 3);
  puVar12 = (uint *)(uVar11 - 0x3fff);
  local_14[0] = uVar16;
  uVar17 = *(uint *)(param_1 + 1);
  local_14[1] = uVar17;
  uVar2 = *param_1;
  local_14[2] = (uint)uVar2 << 0x10;
  bVar3 = (byte)DAT_00448a74;
  if (puVar12 == (uint *)0xffffc001) {
    iVar15 = 0;
    iVar14 = 0;
    do {
      if (local_14[iVar14] != 0) {
        local_14[0] = 0;
        local_14[1] = 0;
        local_14[2] = 0;
        goto LAB_00437935;
      }
      iVar14 = iVar14 + 1;
    } while (iVar14 < 3);
  }
  else {
    iVar6 = DAT_00448a70 + -1;
    bVar5 = false;
    iVar15 = (int)((DAT_00448a70 >> 0x1f & 0x1fU) + DAT_00448a70) >> 5;
    bVar8 = 0x1f - ((byte)DAT_00448a70 & 0x1f);
    if ((local_14[iVar15] & 1 << (bVar8 & 0x1f)) != 0) {
      uVar7 = local_14[iVar15] & ~(-1 << (bVar8 & 0x1f));
      iVar13 = iVar15;
      while (uVar7 == 0) {
        iVar13 = iVar13 + 1;
        if (2 < iVar13) goto LAB_00437a35;
        uVar7 = local_14[iVar13];
      }
      iVar13 = (int)((iVar6 >> 0x1f & 0x1fU) + iVar6) >> 5;
      bVar5 = false;
      uVar7 = 1 << (0x1f - ((byte)iVar6 & 0x1f) & 0x1f);
      uVar9 = uVar7 + local_14[iVar13];
      bVar4 = false;
      if ((uVar9 < local_14[iVar13]) || (uVar9 < uVar7)) {
        bVar4 = true;
        bVar5 = true;
      }
      local_14[iVar13] = uVar9;
      while ((iVar13 = iVar13 + -1, -1 < iVar13 && (bVar4))) {
        bVar4 = false;
        bVar5 = false;
        uVar7 = local_14[iVar13] + 1;
        if ((uVar7 < local_14[iVar13]) || (uVar7 == 0)) {
          bVar4 = true;
          bVar5 = true;
        }
        local_14[iVar13] = uVar7;
      }
    }
LAB_00437a35:
    local_14[iVar15] = local_14[iVar15] & -1 << (bVar8 & 0x1f);
    iVar15 = iVar15 + 1;
    if (iVar15 < 3) {
      puVar10 = local_14 + iVar15;
      for (iVar13 = 3 - iVar15; iVar13 != 0; iVar13 = iVar13 + -1) {
        *puVar10 = 0;
        puVar10 = puVar10 + 1;
      }
    }
    puVar10 = puVar12;
    if (bVar5) {
      puVar10 = (uint *)(uVar11 - 0x3ffe);
    }
    if ((int)puVar10 < (int)DAT_00448a6c - DAT_00448a70) {
      local_14[0] = 0;
      local_14[1] = 0;
      local_14[2] = 0;
      puVar12 = DAT_00448a6c;
    }
    else {
      if ((int)DAT_00448a6c < (int)puVar10) {
        if ((int)puVar10 < _DAT_00448a68) {
          local_14[0] = local_14[0] & 0x7fffffff;
          iVar15 = DAT_00448a7c + (int)puVar10;
          iVar14 = (int)(DAT_00448a74 + (DAT_00448a74 >> 0x1f & 0x1fU)) >> 5;
          bVar8 = bVar3 & 0x1f;
          local_24 = 0;
          iVar6 = 0;
          do {
            uVar16 = local_14[iVar6] >> bVar8 | local_24;
            local_24 = (local_14[iVar6] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
            local_14[iVar6] = uVar16;
            iVar6 = iVar6 + 1;
          } while (iVar6 < 3);
          puVar12 = local_14 + (2 - iVar14);
          iVar6 = 2;
          do {
            if (iVar6 < iVar14) {
              local_14[iVar6] = 0;
            }
            else {
              local_14[iVar6] = *puVar12;
            }
            puVar12 = puVar12 + -1;
            iVar6 = iVar6 + -1;
          } while (-1 < iVar6);
        }
        else {
          local_14[1] = 0;
          local_14[2] = 0;
          local_14[0] = 0x80000000;
          iVar15 = (int)(DAT_00448a74 + (DAT_00448a74 >> 0x1f & 0x1fU)) >> 5;
          bVar8 = bVar3 & 0x1f;
          local_24 = 0;
          do {
            uVar16 = local_14[iVar14] >> bVar8 | local_24;
            local_24 = (local_14[iVar14] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
            local_14[iVar14] = uVar16;
            iVar14 = iVar14 + 1;
          } while (iVar14 < 3);
          puVar12 = local_14 + (2 - iVar15);
          iVar14 = 2;
          do {
            if (iVar14 < iVar15) {
              local_14[iVar14] = 0;
            }
            else {
              local_14[iVar14] = *puVar12;
            }
            puVar12 = puVar12 + -1;
            iVar14 = iVar14 + -1;
          } while (-1 < iVar14);
          iVar15 = DAT_00448a7c + _DAT_00448a68;
        }
        goto LAB_00437de6;
      }
      iVar13 = (int)DAT_00448a6c - (int)puVar12;
      local_14[0] = uVar16;
      iVar15 = (int)(iVar13 + (iVar13 >> 0x1f & 0x1fU)) >> 5;
      local_14[1] = uVar17;
      local_14[2] = (uint)uVar2 << 0x10;
      bVar8 = (byte)iVar13 & 0x1f;
      local_24 = 0;
      do {
        uVar16 = local_14[iVar14] >> bVar8 | local_24;
        local_24 = (local_14[iVar14] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
        local_14[iVar14] = uVar16;
        iVar14 = iVar14 + 1;
      } while (iVar14 < 3);
      puVar12 = local_14 + (2 - iVar15);
      iVar14 = 2;
      do {
        if (iVar14 < iVar15) {
          local_14[iVar14] = 0;
        }
        else {
          local_14[iVar14] = *puVar12;
        }
        puVar12 = puVar12 + -1;
        iVar14 = iVar14 + -1;
      } while (-1 < iVar14);
      iVar14 = (int)((DAT_00448a70 >> 0x1f & 0x1fU) + DAT_00448a70) >> 5;
      bVar8 = 0x1f - ((byte)DAT_00448a70 & 0x1f);
      if ((local_14[iVar14] & 1 << (bVar8 & 0x1f)) != 0) {
        uVar16 = local_14[iVar14] & ~(-1 << (bVar8 & 0x1f));
        iVar15 = iVar14;
        while (uVar16 == 0) {
          iVar15 = iVar15 + 1;
          if (2 < iVar15) goto LAB_00437bf0;
          uVar16 = local_14[iVar15];
        }
        iVar15 = (int)((iVar6 >> 0x1f & 0x1fU) + iVar6) >> 5;
        uVar16 = 1 << (0x1f - ((byte)iVar6 & 0x1f) & 0x1f);
        bVar5 = false;
        uVar17 = uVar16 + local_14[iVar15];
        if ((uVar17 < local_14[iVar15]) || (uVar17 < uVar16)) {
          bVar5 = true;
        }
        local_14[iVar15] = uVar17;
        while ((iVar15 = iVar15 + -1, -1 < iVar15 && (bVar5))) {
          bVar5 = false;
          uVar16 = local_14[iVar15] + 1;
          if ((uVar16 < local_14[iVar15]) || (uVar16 == 0)) {
            bVar5 = true;
          }
          local_14[iVar15] = uVar16;
        }
      }
LAB_00437bf0:
      local_14[iVar14] = local_14[iVar14] & -1 << (bVar8 & 0x1f);
      iVar14 = iVar14 + 1;
      if (iVar14 < 3) {
        puVar12 = local_14 + iVar14;
        for (iVar15 = 3 - iVar14; iVar15 != 0; iVar15 = iVar15 + -1) {
          *puVar12 = 0;
          puVar12 = puVar12 + 1;
        }
      }
      iVar15 = DAT_00448a74 + 1;
      iVar14 = (int)(iVar15 + (iVar15 >> 0x1f & 0x1fU)) >> 5;
      bVar8 = (byte)iVar15 & 0x1f;
      local_24 = 0;
      local_38 = 0;
      do {
        uVar16 = local_14[local_38];
        local_14[local_38] = uVar16 >> bVar8 | local_24;
        local_24 = (uVar16 & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
        local_38 = local_38 + 1;
      } while (local_38 < 3);
      puVar12 = local_14 + (2 - iVar14);
      iVar15 = 2;
      do {
        if (iVar15 < iVar14) {
          local_14[iVar15] = 0;
        }
        else {
          local_14[iVar15] = *puVar12;
        }
        puVar12 = puVar12 + -1;
        iVar15 = iVar15 + -1;
      } while (-1 < iVar15);
    }
LAB_00437935:
    iVar15 = 0;
  }
LAB_00437de6:
  uVar16 = iVar15 << (0x1f - bVar3 & 0x1f) | -(uint)((uVar1 & 0x8000) != 0) & 0x80000000 |
           local_14[0];
  if (DAT_00448a78 == 0x40) {
    param_2[1] = uVar16;
    *param_2 = local_14[1];
  }
  else if (DAT_00448a78 == 0x20) {
    *param_2 = uVar16;
  }
  FUN_004298aa(local_14[3] ^ (uint)&stack0xfffffffc,(char)puVar12,0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void __cdecl FUN_00437e32(ushort *param_1,uint *param_2)

{
  ushort uVar1;
  ushort uVar2;
  byte bVar3;
  bool bVar4;
  bool bVar5;
  int iVar6;
  uint uVar7;
  byte bVar8;
  uint uVar9;
  uint *puVar10;
  uint uVar11;
  uint *puVar12;
  int iVar13;
  int iVar14;
  int iVar15;
  uint uVar16;
  uint uVar17;
  int local_38;
  uint local_24;
  uint local_14 [4];
  
  local_14[3] = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  uVar1 = param_1[5];
  iVar14 = 0;
  uVar11 = uVar1 & 0x7fff;
  uVar16 = *(uint *)(param_1 + 3);
  puVar12 = (uint *)(uVar11 - 0x3fff);
  local_14[0] = uVar16;
  uVar17 = *(uint *)(param_1 + 1);
  local_14[1] = uVar17;
  uVar2 = *param_1;
  local_14[2] = (uint)uVar2 << 0x10;
  bVar3 = (byte)DAT_00448a8c;
  if (puVar12 == (uint *)0xffffc001) {
    iVar15 = 0;
    iVar14 = 0;
    do {
      if (local_14[iVar14] != 0) {
        local_14[0] = 0;
        local_14[1] = 0;
        local_14[2] = 0;
        goto LAB_00437ea7;
      }
      iVar14 = iVar14 + 1;
    } while (iVar14 < 3);
  }
  else {
    iVar6 = DAT_00448a88 + -1;
    bVar5 = false;
    iVar15 = (int)((DAT_00448a88 >> 0x1f & 0x1fU) + DAT_00448a88) >> 5;
    bVar8 = 0x1f - ((byte)DAT_00448a88 & 0x1f);
    if ((local_14[iVar15] & 1 << (bVar8 & 0x1f)) != 0) {
      uVar7 = local_14[iVar15] & ~(-1 << (bVar8 & 0x1f));
      iVar13 = iVar15;
      while (uVar7 == 0) {
        iVar13 = iVar13 + 1;
        if (2 < iVar13) goto LAB_00437fa7;
        uVar7 = local_14[iVar13];
      }
      iVar13 = (int)((iVar6 >> 0x1f & 0x1fU) + iVar6) >> 5;
      bVar5 = false;
      uVar7 = 1 << (0x1f - ((byte)iVar6 & 0x1f) & 0x1f);
      uVar9 = uVar7 + local_14[iVar13];
      bVar4 = false;
      if ((uVar9 < local_14[iVar13]) || (uVar9 < uVar7)) {
        bVar4 = true;
        bVar5 = true;
      }
      local_14[iVar13] = uVar9;
      while ((iVar13 = iVar13 + -1, -1 < iVar13 && (bVar4))) {
        bVar4 = false;
        bVar5 = false;
        uVar7 = local_14[iVar13] + 1;
        if ((uVar7 < local_14[iVar13]) || (uVar7 == 0)) {
          bVar4 = true;
          bVar5 = true;
        }
        local_14[iVar13] = uVar7;
      }
    }
LAB_00437fa7:
    local_14[iVar15] = local_14[iVar15] & -1 << (bVar8 & 0x1f);
    iVar15 = iVar15 + 1;
    if (iVar15 < 3) {
      puVar10 = local_14 + iVar15;
      for (iVar13 = 3 - iVar15; iVar13 != 0; iVar13 = iVar13 + -1) {
        *puVar10 = 0;
        puVar10 = puVar10 + 1;
      }
    }
    puVar10 = puVar12;
    if (bVar5) {
      puVar10 = (uint *)(uVar11 - 0x3ffe);
    }
    if ((int)puVar10 < (int)DAT_00448a84 - DAT_00448a88) {
      local_14[0] = 0;
      local_14[1] = 0;
      local_14[2] = 0;
      puVar12 = DAT_00448a84;
    }
    else {
      if ((int)DAT_00448a84 < (int)puVar10) {
        if ((int)puVar10 < _DAT_00448a80) {
          local_14[0] = local_14[0] & 0x7fffffff;
          iVar15 = DAT_00448a94 + (int)puVar10;
          iVar14 = (int)(DAT_00448a8c + (DAT_00448a8c >> 0x1f & 0x1fU)) >> 5;
          bVar8 = bVar3 & 0x1f;
          local_24 = 0;
          iVar6 = 0;
          do {
            uVar16 = local_14[iVar6] >> bVar8 | local_24;
            local_24 = (local_14[iVar6] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
            local_14[iVar6] = uVar16;
            iVar6 = iVar6 + 1;
          } while (iVar6 < 3);
          puVar12 = local_14 + (2 - iVar14);
          iVar6 = 2;
          do {
            if (iVar6 < iVar14) {
              local_14[iVar6] = 0;
            }
            else {
              local_14[iVar6] = *puVar12;
            }
            puVar12 = puVar12 + -1;
            iVar6 = iVar6 + -1;
          } while (-1 < iVar6);
        }
        else {
          local_14[1] = 0;
          local_14[2] = 0;
          local_14[0] = 0x80000000;
          iVar15 = (int)(DAT_00448a8c + (DAT_00448a8c >> 0x1f & 0x1fU)) >> 5;
          bVar8 = bVar3 & 0x1f;
          local_24 = 0;
          do {
            uVar16 = local_14[iVar14] >> bVar8 | local_24;
            local_24 = (local_14[iVar14] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
            local_14[iVar14] = uVar16;
            iVar14 = iVar14 + 1;
          } while (iVar14 < 3);
          puVar12 = local_14 + (2 - iVar15);
          iVar14 = 2;
          do {
            if (iVar14 < iVar15) {
              local_14[iVar14] = 0;
            }
            else {
              local_14[iVar14] = *puVar12;
            }
            puVar12 = puVar12 + -1;
            iVar14 = iVar14 + -1;
          } while (-1 < iVar14);
          iVar15 = DAT_00448a94 + _DAT_00448a80;
        }
        goto LAB_00438358;
      }
      iVar13 = (int)DAT_00448a84 - (int)puVar12;
      local_14[0] = uVar16;
      iVar15 = (int)(iVar13 + (iVar13 >> 0x1f & 0x1fU)) >> 5;
      local_14[1] = uVar17;
      local_14[2] = (uint)uVar2 << 0x10;
      bVar8 = (byte)iVar13 & 0x1f;
      local_24 = 0;
      do {
        uVar16 = local_14[iVar14] >> bVar8 | local_24;
        local_24 = (local_14[iVar14] & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
        local_14[iVar14] = uVar16;
        iVar14 = iVar14 + 1;
      } while (iVar14 < 3);
      puVar12 = local_14 + (2 - iVar15);
      iVar14 = 2;
      do {
        if (iVar14 < iVar15) {
          local_14[iVar14] = 0;
        }
        else {
          local_14[iVar14] = *puVar12;
        }
        puVar12 = puVar12 + -1;
        iVar14 = iVar14 + -1;
      } while (-1 < iVar14);
      iVar14 = (int)((DAT_00448a88 >> 0x1f & 0x1fU) + DAT_00448a88) >> 5;
      bVar8 = 0x1f - ((byte)DAT_00448a88 & 0x1f);
      if ((local_14[iVar14] & 1 << (bVar8 & 0x1f)) != 0) {
        uVar16 = local_14[iVar14] & ~(-1 << (bVar8 & 0x1f));
        iVar15 = iVar14;
        while (uVar16 == 0) {
          iVar15 = iVar15 + 1;
          if (2 < iVar15) goto LAB_00438162;
          uVar16 = local_14[iVar15];
        }
        iVar15 = (int)((iVar6 >> 0x1f & 0x1fU) + iVar6) >> 5;
        uVar16 = 1 << (0x1f - ((byte)iVar6 & 0x1f) & 0x1f);
        bVar5 = false;
        uVar17 = uVar16 + local_14[iVar15];
        if ((uVar17 < local_14[iVar15]) || (uVar17 < uVar16)) {
          bVar5 = true;
        }
        local_14[iVar15] = uVar17;
        while ((iVar15 = iVar15 + -1, -1 < iVar15 && (bVar5))) {
          bVar5 = false;
          uVar16 = local_14[iVar15] + 1;
          if ((uVar16 < local_14[iVar15]) || (uVar16 == 0)) {
            bVar5 = true;
          }
          local_14[iVar15] = uVar16;
        }
      }
LAB_00438162:
      local_14[iVar14] = local_14[iVar14] & -1 << (bVar8 & 0x1f);
      iVar14 = iVar14 + 1;
      if (iVar14 < 3) {
        puVar12 = local_14 + iVar14;
        for (iVar15 = 3 - iVar14; iVar15 != 0; iVar15 = iVar15 + -1) {
          *puVar12 = 0;
          puVar12 = puVar12 + 1;
        }
      }
      iVar15 = DAT_00448a8c + 1;
      iVar14 = (int)(iVar15 + (iVar15 >> 0x1f & 0x1fU)) >> 5;
      bVar8 = (byte)iVar15 & 0x1f;
      local_24 = 0;
      local_38 = 0;
      do {
        uVar16 = local_14[local_38];
        local_14[local_38] = uVar16 >> bVar8 | local_24;
        local_24 = (uVar16 & ~(-1 << bVar8)) << (0x20 - bVar8 & 0x1f);
        local_38 = local_38 + 1;
      } while (local_38 < 3);
      puVar12 = local_14 + (2 - iVar14);
      iVar15 = 2;
      do {
        if (iVar15 < iVar14) {
          local_14[iVar15] = 0;
        }
        else {
          local_14[iVar15] = *puVar12;
        }
        puVar12 = puVar12 + -1;
        iVar15 = iVar15 + -1;
      } while (-1 < iVar15);
    }
LAB_00437ea7:
    iVar15 = 0;
  }
LAB_00438358:
  uVar16 = iVar15 << (0x1f - bVar3 & 0x1f) | -(uint)((uVar1 & 0x8000) != 0) & 0x80000000 |
           local_14[0];
  if (DAT_00448a90 == 0x40) {
    param_2[1] = uVar16;
    *param_2 = local_14[1];
  }
  else if (DAT_00448a90 == 0x20) {
    *param_2 = uVar16;
  }
  FUN_004298aa(local_14[3] ^ (uint)&stack0xfffffffc,(char)puVar12,0);
  return;
}



uint __cdecl FUN_004383a4(uint param_1,FILE *param_2)

{
  char *pcVar1;
  uint uVar2;
  int *piVar3;
  undefined *puVar4;
  
  if ((*(byte *)&param_2->_flag & 0x40) == 0) {
    uVar2 = __fileno(param_2);
    if ((uVar2 == 0xffffffff) || (uVar2 == 0xfffffffe)) {
      puVar4 = &DAT_00448240;
    }
    else {
      puVar4 = (undefined *)((uVar2 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)uVar2 >> 5]);
    }
    if ((puVar4[0x24] & 0x7f) == 0) {
      if ((uVar2 == 0xffffffff) || (uVar2 == 0xfffffffe)) {
        puVar4 = &DAT_00448240;
      }
      else {
        puVar4 = (undefined *)((uVar2 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)uVar2 >> 5]);
      }
      if ((puVar4[0x24] & 0x80) == 0) goto LAB_00438425;
    }
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
  }
  else {
LAB_00438425:
    if ((param_1 != 0xffffffff) &&
       (((*(byte *)&param_2->_flag & 1) != 0 ||
        (((*(byte *)&param_2->_flag & 0x80) != 0 && ((*(byte *)&param_2->_flag & 2) == 0)))))) {
      if (param_2->_base == (char *)0x0) {
        __getbuf(param_2);
      }
      if (param_2->_ptr == param_2->_base) {
        if (param_2->_cnt != 0) {
          return 0xffffffff;
        }
        param_2->_ptr = param_2->_ptr + 1;
      }
      param_2->_ptr = param_2->_ptr + -1;
      pcVar1 = param_2->_ptr;
      if ((*(byte *)&param_2->_flag & 0x40) == 0) {
        *pcVar1 = (char)param_1;
      }
      else if (*pcVar1 != (char)param_1) {
        param_2->_ptr = pcVar1 + 1;
        return 0xffffffff;
      }
      param_2->_cnt = param_2->_cnt + 1;
      param_2->_flag = param_2->_flag & 0xffffffefU | 1;
      return param_1 & 0xff;
    }
  }
  return 0xffffffff;
}



// WARNING: Function: __SEH_prolog4 replaced with injection: SEH_prolog4
// WARNING: Function: __SEH_epilog4 replaced with injection: EH_epilog3

uint __cdecl FUN_00438484(uint param_1,FILE *param_2)

{
  int *piVar1;
  uint uVar2;
  
  if (param_2 == (FILE *)0x0) {
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    uVar2 = 0xffffffff;
  }
  else {
    __lock_file(param_2);
    uVar2 = FUN_004383a4(param_1,param_2);
    FUN_004384ec();
  }
  return uVar2;
}



void FUN_004384ec(void)

{
  FILE *unaff_ESI;
  
  __unlock_file(unaff_ESI);
  return;
}



undefined4 __cdecl FUN_004384f4(LPWSTR param_1,byte *param_2,uint param_3,pthreadlocinfo *param_4)

{
  uint uVar1;
  ushort uVar2;
  undefined2 extraout_var;
  int iVar3;
  int *piVar4;
  int iVar5;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  if ((param_2 == (byte *)0x0) || (param_3 == 0)) {
    return 0;
  }
  if (*param_2 == 0) {
    if (param_1 == (LPWSTR)0x0) {
      return 0;
    }
    *param_1 = L'\0';
    return 0;
  }
  FUN_00427078(local_14,param_4);
  if (local_14[0]->locale_name[2] == (wchar_t *)0x0) {
    if (param_1 != (LPWSTR)0x0) {
      *param_1 = (ushort)*param_2;
    }
    iVar5 = 1;
    goto LAB_004385d4;
  }
  uVar2 = FUN_00428fd5((uint)*param_2,local_14);
  if (CONCAT22(extraout_var,uVar2) == 0) {
    iVar5 = 1;
    iVar3 = MultiByteToWideChar(local_14[0]->lc_codepage,9,(LPCSTR)param_2,1,param_1,
                                (uint)(param_1 != (LPWSTR)0x0));
    if (iVar3 != 0) goto LAB_004385d4;
LAB_004385c6:
    piVar4 = __errno();
    iVar5 = -1;
    *piVar4 = 0x2a;
  }
  else {
    if (local_14[0]->mb_cur_max < 2) {
LAB_00438593:
      uVar1 = local_14[0]->mb_cur_max;
LAB_00438596:
      if ((param_3 < uVar1) || (param_2[1] == 0)) goto LAB_004385c6;
    }
    else {
      uVar1 = local_14[0]->mb_cur_max;
      if ((int)param_3 < local_14[0]->mb_cur_max) goto LAB_00438596;
      iVar5 = MultiByteToWideChar(local_14[0]->lc_codepage,9,(LPCSTR)param_2,local_14[0]->mb_cur_max
                                  ,param_1,(uint)(param_1 != (LPWSTR)0x0));
      if (iVar5 == 0) goto LAB_00438593;
    }
    iVar5 = local_14[0]->mb_cur_max;
  }
LAB_004385d4:
  if (local_8 != '\0') {
    *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
    return iVar5;
  }
  return iVar5;
}



void __cdecl FUN_004385e9(LPWSTR param_1,byte *param_2,uint param_3)

{
  FUN_004384f4(param_1,param_2,param_3,(pthreadlocinfo *)0x0);
  return;
}



void __cdecl FUN_00438601(WCHAR param_1,FILE *param_2)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  undefined *puVar4;
  undefined in_DL;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined extraout_DL_04;
  undefined extraout_DL_05;
  undefined extraout_DL_06;
  undefined extraout_DL_07;
  undefined extraout_DL_08;
  undefined extraout_DL_09;
  undefined extraout_DL_10;
  undefined *puVar5;
  undefined uVar6;
  int in_stack_ffffffec;
  uint local_10 [2];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  if ((*(byte *)&param_2->_flag & 0x40) == 0) {
    iVar2 = __fileno(param_2);
    puVar5 = &DAT_00448240;
    in_DL = extraout_DL;
    if (iVar2 == -1) {
LAB_00438660:
      puVar4 = &DAT_00448240;
    }
    else {
      iVar2 = __fileno(param_2);
      in_DL = extraout_DL_00;
      if (iVar2 == -2) goto LAB_00438660;
      iVar2 = __fileno(param_2);
      uVar3 = __fileno(param_2);
      puVar4 = (undefined *)((uVar3 & 0x1f) * 0x40 + (&DAT_004585f8)[iVar2 >> 5]);
      in_DL = extraout_DL_01;
    }
    if ((puVar4[0x24] & 0x7f) != 2) {
      iVar2 = __fileno(param_2);
      in_DL = extraout_DL_02;
      if (iVar2 == -1) {
LAB_004386a9:
        puVar4 = &DAT_00448240;
      }
      else {
        iVar2 = __fileno(param_2);
        in_DL = extraout_DL_03;
        if (iVar2 == -2) goto LAB_004386a9;
        iVar2 = __fileno(param_2);
        uVar3 = __fileno(param_2);
        puVar4 = (undefined *)((uVar3 & 0x1f) * 0x40 + (&DAT_004585f8)[iVar2 >> 5]);
        in_DL = extraout_DL_04;
      }
      if ((puVar4[0x24] & 0x7f) != 1) {
        iVar2 = __fileno(param_2);
        in_DL = extraout_DL_05;
        if (iVar2 != -1) {
          iVar2 = __fileno(param_2);
          in_DL = extraout_DL_06;
          if (iVar2 != -2) {
            iVar2 = __fileno(param_2);
            uVar3 = __fileno(param_2);
            puVar5 = (undefined *)((uVar3 & 0x1f) * 0x40 + (&DAT_004585f8)[iVar2 >> 5]);
            in_DL = extraout_DL_07;
          }
        }
        if ((puVar5[4] & 0x80) != 0) {
          iVar2 = FUN_00436865((int *)&stack0xffffffec,local_10,5,param_1);
          in_DL = extraout_DL_08;
          if (iVar2 == 0) {
            iVar2 = 0;
            if (0 < in_stack_ffffffec) {
              do {
                piVar1 = &param_2->_cnt;
                *piVar1 = *piVar1 + -1;
                if (*piVar1 < 0) {
                  uVar3 = FUN_0042bf5b((int)*(char *)((int)local_10 + iVar2),param_2);
                  in_DL = extraout_DL_09;
                }
                else {
                  *param_2->_ptr = *(char *)((int)local_10 + iVar2);
                  uVar3 = (uint)(byte)*param_2->_ptr;
                  param_2->_ptr = param_2->_ptr + 1;
                }
                if (uVar3 == 0xffffffff) goto LAB_00438711;
                iVar2 = iVar2 + 1;
              } while (iVar2 < in_stack_ffffffec);
            }
            uVar6 = (undefined)in_stack_ffffffec;
          }
          else {
LAB_00438711:
            uVar6 = (undefined)in_stack_ffffffec;
          }
          goto LAB_00438776;
        }
      }
    }
  }
  uVar6 = (undefined)in_stack_ffffffec;
  piVar1 = &param_2->_cnt;
  *piVar1 = *piVar1 + -2;
  if (*piVar1 < 0) {
    FUN_0043a4d7(param_1,param_2);
    in_DL = extraout_DL_10;
  }
  else {
    *(WCHAR *)param_2->_ptr = param_1;
    param_2->_ptr = param_2->_ptr + 2;
  }
LAB_00438776:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,in_DL,uVar6);
  return;
}



void __cdecl FUN_00438787(char *param_1,int param_2,uint *param_3)

{
  uint uVar1;
  bool bVar2;
  uint *puVar3;
  short sVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  uint *puVar9;
  uint uVar10;
  uint uVar11;
  uint local_10;
  uint local_c;
  
  puVar3 = param_3;
  *param_3 = 0;
  param_3[1] = 0;
  param_3[2] = 0;
  if (param_2 != 0) {
    param_3 = (uint *)0x0;
    local_10 = 0;
    local_c = 0;
    do {
      uVar7 = *puVar3;
      uVar6 = puVar3[1];
      uVar10 = puVar3[2];
      uVar1 = local_10 * 4;
      uVar8 = ((int)param_3 * 2 | local_10 >> 0x1f) * 2 | local_10 * 2 >> 0x1f;
      *puVar3 = uVar1;
      uVar11 = (local_c * 2 | (uint)param_3 >> 0x1f) * 2 | (uint)((int)param_3 * 2) >> 0x1f;
      puVar3[1] = uVar8;
      uVar5 = uVar7 + uVar1;
      puVar3[2] = uVar11;
      bVar2 = false;
      if ((uVar5 < uVar1) || (uVar5 < uVar7)) {
        bVar2 = true;
      }
      *puVar3 = uVar5;
      uVar7 = uVar8;
      if (bVar2) {
        bVar2 = false;
        uVar7 = uVar8 + 1;
        if ((uVar7 < uVar8) || (uVar7 == 0)) {
          bVar2 = true;
        }
        puVar3[1] = uVar7;
        if (bVar2) {
          uVar11 = uVar11 + 1;
          puVar3[2] = uVar11;
        }
      }
      bVar2 = false;
      uVar1 = uVar7 + uVar6;
      if ((uVar1 < uVar7) || (uVar1 < uVar6)) {
        bVar2 = true;
      }
      puVar3[1] = uVar1;
      if (bVar2) {
        uVar11 = uVar11 + 1;
        puVar3[2] = uVar11;
      }
      uVar7 = uVar5 * 2;
      puVar9 = (uint *)(uVar1 * 2 | uVar5 >> 0x1f);
      local_c = (uVar11 + uVar10) * 2 | uVar1 >> 0x1f;
      *puVar3 = uVar7;
      puVar3[1] = (uint)puVar9;
      puVar3[2] = local_c;
      local_10 = uVar7 + (int)*param_1;
      if ((local_10 < uVar7) || (local_10 < (uint)(int)*param_1)) {
        bVar2 = true;
      }
      else {
        bVar2 = false;
      }
      *puVar3 = local_10;
      param_3 = puVar9;
      if (bVar2) {
        bVar2 = false;
        param_3 = (uint *)((int)puVar9 + 1);
        if ((param_3 < puVar9) || (param_3 == (uint *)0x0)) {
          bVar2 = true;
        }
        puVar3[1] = (uint)param_3;
        if (bVar2) {
          local_c = local_c + 1;
          puVar3[2] = local_c;
        }
      }
      param_2 = param_2 + -1;
      puVar3[1] = (uint)param_3;
      param_1 = param_1 + 1;
      puVar3[2] = local_c;
    } while (param_2 != 0);
  }
  sVar4 = 0x404e;
  if (puVar3[2] == 0) {
    uVar7 = puVar3[1];
    sVar4 = 0x404e;
    do {
      uVar6 = uVar7 << 0x10 | *puVar3 >> 0x10;
      uVar10 = uVar7 >> 0x10;
      sVar4 = sVar4 + -0x10;
      *puVar3 = *puVar3 << 0x10;
      uVar7 = uVar6;
    } while (uVar10 == 0);
    puVar3[1] = uVar6;
    puVar3[2] = uVar10;
  }
  uVar7 = puVar3[2];
  if ((uVar7 & 0x8000) == 0) {
    uVar6 = *puVar3;
    uVar10 = puVar3[1];
    do {
      uVar5 = uVar10 * 2 | uVar6 >> 0x1f;
      uVar1 = uVar7 * 2;
      uVar7 = uVar1 | uVar10 >> 0x1f;
      sVar4 = sVar4 + -1;
      uVar6 = uVar6 * 2;
      uVar10 = uVar5;
    } while ((uVar1 & 0x8000) == 0);
    *puVar3 = uVar6;
    puVar3[1] = uVar5;
    puVar3[2] = uVar7;
  }
  *(short *)((int)puVar3 + 10) = sVar4;
  return;
}



// Library Function - Single Match
//  __wchartodigit
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2019 Release

int __cdecl __wchartodigit(ushort param_1)

{
  ushort uVar1;
  int iVar2;
  
  if (0x2f < param_1) {
    if (param_1 < 0x3a) {
      return param_1 - 0x30;
    }
    iVar2 = 0xff10;
    if (param_1 < 0xff10) {
      iVar2 = 0x660;
      if (param_1 < 0x660) {
        return -1;
      }
      if (param_1 < 0x66a) goto LAB_004389ab;
      iVar2 = 0x6f0;
      if (param_1 < 0x6f0) {
        return -1;
      }
      if (param_1 < 0x6fa) goto LAB_004389ab;
      iVar2 = 0x966;
      if (param_1 < 0x966) {
        return -1;
      }
      if (param_1 < 0x970) goto LAB_004389ab;
      iVar2 = 0x9e6;
      if (param_1 < 0x9e6) {
        return -1;
      }
      if (param_1 < 0x9f0) goto LAB_004389ab;
      iVar2 = 0xa66;
      if (param_1 < 0xa66) {
        return -1;
      }
      if (param_1 < 0xa70) goto LAB_004389ab;
      iVar2 = 0xae6;
      if (param_1 < 0xae6) {
        return -1;
      }
      if (param_1 < 0xaf0) goto LAB_004389ab;
      iVar2 = 0xb66;
      if (param_1 < 0xb66) {
        return -1;
      }
      if (param_1 < 0xb70) goto LAB_004389ab;
      iVar2 = 0xc66;
      if (param_1 < 0xc66) {
        return -1;
      }
      if (param_1 < 0xc70) goto LAB_004389ab;
      iVar2 = 0xce6;
      if (param_1 < 0xce6) {
        return -1;
      }
      if (param_1 < 0xcf0) goto LAB_004389ab;
      iVar2 = 0xd66;
      if (param_1 < 0xd66) {
        return -1;
      }
      if (param_1 < 0xd70) goto LAB_004389ab;
      iVar2 = 0xe50;
      if (param_1 < 0xe50) {
        return -1;
      }
      if (param_1 < 0xe5a) goto LAB_004389ab;
      iVar2 = 0xed0;
      if (param_1 < 0xed0) {
        return -1;
      }
      if (param_1 < 0xeda) goto LAB_004389ab;
      iVar2 = 0xf20;
      if (param_1 < 0xf20) {
        return -1;
      }
      if (param_1 < 0xf2a) goto LAB_004389ab;
      iVar2 = 0x1040;
      if (param_1 < 0x1040) {
        return -1;
      }
      if (param_1 < 0x104a) goto LAB_004389ab;
      iVar2 = 0x17e0;
      if (param_1 < 0x17e0) {
        return -1;
      }
      if (param_1 < 0x17ea) goto LAB_004389ab;
      iVar2 = 0x1810;
      if (param_1 < 0x1810) {
        return -1;
      }
      uVar1 = 0x181a;
    }
    else {
      uVar1 = 0xff1a;
    }
    if (param_1 < uVar1) {
LAB_004389ab:
      return (uint)param_1 - iVar2;
    }
  }
  return -1;
}



// WARNING: Could not reconcile some variable overlaps

uint __thiscall FUN_00438b06(void *this,FILE *param_1)

{
  byte bVar1;
  FILE *_File;
  undefined2 uVar2;
  int iVar3;
  uint uVar4;
  undefined *puVar5;
  byte *pbVar6;
  int *piVar7;
  undefined2 extraout_var;
  byte *pbVar8;
  uint uVar9;
  undefined *puVar10;
  void *local_8;
  
  _File = param_1;
  puVar10 = &DAT_00448240;
  local_8 = this;
  if ((*(byte *)&param_1->_flag & 0x40) == 0) {
    iVar3 = __fileno(param_1);
    if ((iVar3 == -1) || (iVar3 = __fileno(_File), iVar3 == -2)) {
      puVar5 = &DAT_00448240;
    }
    else {
      iVar3 = __fileno(_File);
      uVar4 = __fileno(_File);
      puVar5 = (undefined *)((uVar4 & 0x1f) * 0x40 + (&DAT_004585f8)[iVar3 >> 5]);
    }
    if ((puVar5[0x24] & 0x7f) != 0) {
      piVar7 = &_File->_cnt;
      *piVar7 = *piVar7 + -1;
      if (*piVar7 < 0) {
        uVar4 = FUN_0042b172(_File);
      }
      else {
        uVar4 = (uint)(byte)*_File->_ptr;
        _File->_ptr = _File->_ptr + 1;
      }
      if (uVar4 != 0xffffffff) {
        piVar7 = &_File->_cnt;
        *piVar7 = *piVar7 + -1;
        param_1 = (FILE *)((uint)param_1 & 0xffffff00 | uVar4 & 0xff);
        if (*piVar7 < 0) {
          pbVar6 = (byte *)FUN_0042b172(_File);
          pbVar8 = pbVar6;
        }
        else {
          bVar1 = *_File->_ptr;
          pbVar6 = (byte *)(_File->_ptr + 1);
          _File->_ptr = (char *)pbVar6;
          pbVar8 = (byte *)(uint)bVar1;
        }
        if (pbVar8 != (byte *)0xffffffff) {
          param_1 = (FILE *)(uint)CONCAT11((char)pbVar8,param_1._0_1_);
          goto LAB_00438bab;
        }
      }
      return 0xffff;
    }
    if ((*(byte *)&_File->_flag & 0x40) == 0) {
      iVar3 = __fileno(_File);
      if ((iVar3 != -1) && (iVar3 = __fileno(_File), iVar3 != -2)) {
        iVar3 = __fileno(_File);
        uVar4 = __fileno(_File);
        puVar10 = (undefined *)((uVar4 & 0x1f) * 0x40 + (&DAT_004585f8)[iVar3 >> 5]);
      }
      if ((puVar10[4] & 0x80) != 0) {
        uVar4 = 1;
        piVar7 = &_File->_cnt;
        *piVar7 = *piVar7 + -1;
        if (*piVar7 < 0) {
          uVar9 = FUN_0042b172(_File);
        }
        else {
          uVar9 = (uint)(byte)*_File->_ptr;
          _File->_ptr = _File->_ptr + 1;
        }
        if (uVar9 == 0xffffffff) {
          return 0xffff;
        }
        local_8 = (void *)((uint)local_8 & 0xffffff00 | uVar9 & 0xff);
        iVar3 = FUN_0042900f(uVar9 & 0xff);
        if (iVar3 != 0) {
          piVar7 = &_File->_cnt;
          *piVar7 = *piVar7 + -1;
          if (*piVar7 < 0) {
            uVar4 = FUN_0042b172(_File);
          }
          else {
            uVar4 = (uint)(byte)*_File->_ptr;
            _File->_ptr = _File->_ptr + 1;
          }
          if (uVar4 == 0xffffffff) {
            FUN_00438484((int)(char)local_8,_File);
            return 0xffff;
          }
          local_8._0_2_ = CONCAT11((char)uVar4,(char)local_8);
          local_8 = (void *)((uint)local_8 & 0xffff0000 | (uint)(ushort)local_8);
          uVar4 = 2;
        }
        pbVar6 = (byte *)FUN_004385e9((LPWSTR)&param_1,(byte *)&local_8,uVar4);
        if (pbVar6 == (byte *)0xffffffff) {
          piVar7 = __errno();
          *piVar7 = 0x2a;
          return 0xffff;
        }
LAB_00438bab:
        return (uint)pbVar6 & 0xffff0000 | (uint)param_1 & 0xffff;
      }
    }
  }
  if (_File->_cnt < 2) {
    uVar2 = FUN_0043a639(_File);
    uVar4 = CONCAT22(extraout_var,uVar2);
  }
  else {
    _File->_cnt = _File->_cnt + -2;
    uVar4 = (uint)*(ushort *)_File->_ptr;
    _File->_ptr = (char *)((int)_File->_ptr + 2);
  }
  return uVar4;
}



void __cdecl FUN_00438cbf(undefined4 param_1,FILE *param_2)

{
  WCHAR *pWVar1;
  int iVar2;
  uint uVar3;
  undefined *puVar4;
  undefined in_DL;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined extraout_DL_04;
  undefined extraout_DL_05;
  undefined extraout_DL_06;
  WCHAR WVar5;
  undefined uVar6;
  char cStack17;
  int in_stack_ffffffec;
  undefined4 local_10;
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  WVar5 = (WCHAR)param_1;
  if ((WVar5 == L'\xffff') ||
     (((*(byte *)&param_2->_flag & 1) == 0 &&
      (((*(byte *)&param_2->_flag & 0x80) == 0 || ((*(byte *)&param_2->_flag & 2) != 0)))))) {
LAB_00438e47:
    uVar6 = (undefined)in_stack_ffffffec;
  }
  else {
    if (param_2->_base == (char *)0x0) {
      __getbuf(param_2);
      in_DL = extraout_DL;
    }
    if ((*(byte *)&param_2->_flag & 0x40) == 0) {
      iVar2 = __fileno(param_2);
      in_DL = extraout_DL_00;
      if ((iVar2 == -1) || (iVar2 = __fileno(param_2), in_DL = extraout_DL_01, iVar2 == -2)) {
        puVar4 = &DAT_00448240;
      }
      else {
        iVar2 = __fileno(param_2);
        uVar3 = __fileno(param_2);
        puVar4 = (undefined *)((uVar3 & 0x1f) * 0x40 + (&DAT_004585f8)[iVar2 >> 5]);
        in_DL = extraout_DL_02;
      }
      if ((puVar4[4] & 0x80) == 0) goto LAB_00438e1a;
      iVar2 = __fileno(param_2);
      in_DL = extraout_DL_03;
      if ((iVar2 == -1) || (iVar2 = __fileno(param_2), in_DL = extraout_DL_04, iVar2 == -2)) {
        puVar4 = &DAT_00448240;
      }
      else {
        iVar2 = __fileno(param_2);
        uVar3 = __fileno(param_2);
        puVar4 = (undefined *)((uVar3 & 0x1f) * 0x40 + (&DAT_004585f8)[iVar2 >> 5]);
        in_DL = extraout_DL_05;
      }
      if ((puVar4[0x24] & 0x7f) == 0) {
        iVar2 = FUN_00436865((int *)&stack0xffffffec,&local_10,5,WVar5);
        in_DL = extraout_DL_06;
        if (iVar2 == 0) goto LAB_00438dd9;
LAB_00438dcf:
        uVar6 = (undefined)in_stack_ffffffec;
        goto LAB_00438e4a;
      }
      local_10._0_1_ = (char)param_1;
      local_10._1_1_ = (char)((uint)param_1 >> 8);
      in_stack_ffffffec = 2;
LAB_00438dd9:
      iVar2 = in_stack_ffffffec;
      if (param_2->_ptr < param_2->_base + in_stack_ffffffec) {
        if ((param_2->_cnt != 0) || (param_2->_bufsiz < in_stack_ffffffec)) goto LAB_00438dcf;
        param_2->_ptr = param_2->_base + in_stack_ffffffec;
      }
      while (iVar2 = iVar2 + -1, -1 < iVar2) {
        param_2->_ptr = param_2->_ptr + -1;
        *param_2->_ptr = *(char *)((int)&local_10 + iVar2);
      }
      in_DL = (undefined)iVar2;
      param_2->_cnt = param_2->_cnt + in_stack_ffffffec;
      param_2->_flag = param_2->_flag & 0xffffffefU | 1;
    }
    else {
LAB_00438e1a:
      if (param_2->_ptr < param_2->_base + 2) {
        if ((param_2->_cnt != 0) || ((uint)param_2->_bufsiz < 2)) goto LAB_00438e47;
        param_2->_ptr = param_2->_base + 2;
      }
      param_2->_ptr = param_2->_ptr + -2;
      pWVar1 = (WCHAR *)param_2->_ptr;
      if ((*(byte *)&param_2->_flag & 0x40) == 0) {
        *pWVar1 = WVar5;
      }
      else if (*pWVar1 != WVar5) {
        param_2->_ptr = (char *)(pWVar1 + 1);
        goto LAB_00438e47;
      }
      param_2->_cnt = param_2->_cnt + 2;
      param_2->_flag = param_2->_flag & 0xffffffefU | 1;
    }
    uVar6 = (undefined)in_stack_ffffffec;
  }
LAB_00438e4a:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,in_DL,uVar6);
  return;
}



void __cdecl FUN_00438e70(LPSTR param_1,WCHAR *param_2,uint param_3,pthreadlocinfo *param_4)

{
  char cVar1;
  WCHAR WVar2;
  int *piVar3;
  WCHAR *pWVar4;
  int iVar5;
  DWORD DVar6;
  undefined in_DL;
  undefined extraout_DL;
  uint extraout_EDX;
  uint uVar7;
  uint extraout_EDX_00;
  uint extraout_EDX_01;
  uint extraout_EDX_02;
  uint extraout_EDX_03;
  uint extraout_EDX_04;
  uint extraout_EDX_05;
  uint uVar8;
  int in_stack_ffffffd0;
  int local_28;
  char local_24;
  int local_20;
  LPCWSTR local_18;
  int local_14;
  CHAR local_10 [8];
  uint local_8;
  
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  uVar8 = 0;
  local_14 = 0;
  local_18 = param_2;
  if ((param_1 != (LPSTR)0x0) && (param_3 == 0)) goto LAB_004390c6;
  if (param_2 == (WCHAR *)0x0) {
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
    in_DL = extraout_DL;
    goto LAB_004390c6;
  }
  FUN_00427078(&stack0xffffffd0,param_4);
  uVar7 = extraout_EDX;
  if (param_1 == (LPSTR)0x0) {
    if (*(int *)(in_stack_ffffffd0 + 0xa8) == 0) {
      WVar2 = *param_2;
      if (WVar2 != L'\0') {
        uVar7 = 0xff;
        do {
          if (0xff < (ushort)WVar2) goto LAB_004390a9;
          param_2 = param_2 + 1;
          WVar2 = *param_2;
        } while (WVar2 != L'\0');
      }
    }
    else {
      iVar5 = WideCharToMultiByte(*(UINT *)(in_stack_ffffffd0 + 4),0,param_2,-1,(LPSTR)0x0,0,
                                  (LPCSTR)0x0,&local_14);
      if ((iVar5 == 0) || (uVar7 = extraout_EDX_04, local_14 != 0)) {
LAB_004390a9:
        piVar3 = __errno();
        *piVar3 = 0x2a;
        uVar7 = extraout_EDX_05;
      }
    }
  }
  else if (*(int *)(in_stack_ffffffd0 + 0xa8) == 0) {
    if (param_3 != 0) {
      uVar7 = 0xff;
      do {
        if (0xff < (ushort)*param_2) goto LAB_0043904d;
        param_1[uVar8] = *(CHAR *)param_2;
        WVar2 = *param_2;
        param_2 = param_2 + 1;
      } while ((WVar2 != L'\0') && (uVar8 = uVar8 + 1, uVar8 < param_3));
    }
  }
  else if (*(int *)(in_stack_ffffffd0 + 0x74) == 1) {
    pWVar4 = param_2;
    uVar8 = param_3;
    if (param_3 != 0) {
      do {
        if (*pWVar4 == L'\0') break;
        pWVar4 = pWVar4 + 1;
        uVar8 = uVar8 - 1;
      } while (uVar8 != 0);
      if ((uVar8 != 0) && (*pWVar4 == L'\0')) {
        param_3 = ((int)pWVar4 - (int)param_2 >> 1) + 1;
      }
    }
    iVar5 = WideCharToMultiByte(*(UINT *)(in_stack_ffffffd0 + 4),0,param_2,param_3,param_1,param_3,
                                (LPCSTR)0x0,&local_14);
    uVar7 = extraout_EDX_00;
    if (iVar5 != 0) {
joined_r0x00438f9b:
      if (local_14 == 0) goto LAB_004390b7;
    }
LAB_0043904d:
    piVar3 = __errno();
    *piVar3 = 0x2a;
    uVar7 = extraout_EDX_03;
  }
  else {
    uVar8 = WideCharToMultiByte(*(UINT *)(in_stack_ffffffd0 + 4),0,param_2,-1,param_1,param_3,
                                (LPCSTR)0x0,&local_14);
    uVar7 = extraout_EDX_01;
    if (uVar8 != 0) goto joined_r0x00438f9b;
    if ((local_14 != 0) || (DVar6 = GetLastError(), DVar6 != 0x7a)) goto LAB_0043904d;
    uVar7 = extraout_EDX_02;
    if (param_3 != 0) {
      do {
        uVar7 = WideCharToMultiByte(*(UINT *)(in_stack_ffffffd0 + 4),0,local_18,1,local_10,
                                    *(int *)(in_stack_ffffffd0 + 0x74),(LPCSTR)0x0,&local_14);
        if ((((uVar7 == 0) || (local_14 != 0)) || ((int)uVar7 < 0)) || (5 < uVar7))
        goto LAB_004390a9;
        if (param_3 < uVar7 + uVar8) break;
        local_20 = 0;
        if (0 < (int)uVar7) {
          do {
            cVar1 = local_10[local_20];
            param_1[uVar8] = cVar1;
            if (cVar1 == '\0') goto LAB_004390b7;
            local_20 = local_20 + 1;
            uVar8 = uVar8 + 1;
          } while (local_20 < (int)uVar7);
        }
        local_18 = local_18 + 1;
      } while (uVar8 < param_3);
    }
  }
LAB_004390b7:
  in_DL = (undefined)uVar7;
  if (local_24 != '\0') {
    *(uint *)(local_28 + 0x70) = *(uint *)(local_28 + 0x70) & 0xfffffffd;
  }
LAB_004390c6:
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,in_DL,(char)in_stack_ffffffd0);
  return;
}



// Library Function - Single Match
//  __wcstombs_s_l
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release

errno_t __cdecl
__wcstombs_s_l(size_t *_PtNumOfCharConverted,char *_Dst,size_t _DstSizeInBytes,wchar_t *_Src,
              size_t _MaxCountInBytes,_locale_t _Locale)

{
  int *piVar1;
  int iVar2;
  size_t sVar3;
  errno_t eVar4;
  
  if (_Dst == (char *)0x0) {
    if (_DstSizeInBytes != 0) goto LAB_0043911e;
  }
  else if (_DstSizeInBytes == 0) {
LAB_0043911e:
    piVar1 = __errno();
    *piVar1 = 0x16;
    FUN_00429bfe();
    return 0x16;
  }
  if (_Dst != (char *)0x0) {
    *_Dst = '\0';
  }
  if (_PtNumOfCharConverted != (size_t *)0x0) {
    *_PtNumOfCharConverted = 0;
  }
  sVar3 = _DstSizeInBytes;
  if (_MaxCountInBytes <= _DstSizeInBytes) {
    sVar3 = _MaxCountInBytes;
  }
  if (sVar3 < 0x80000000) {
    iVar2 = FUN_00438e70(_Dst,_Src,sVar3,&_Locale->locinfo);
    if (iVar2 == -1) {
      if (_Dst != (char *)0x0) {
        *_Dst = '\0';
      }
      piVar1 = __errno();
      return *piVar1;
    }
    sVar3 = iVar2 + 1;
    if (_Dst == (char *)0x0) {
      eVar4 = 0;
    }
    else {
      if (_DstSizeInBytes < sVar3) {
        if ((_MaxCountInBytes != 0xffffffff) && (*_Dst = '\0', _DstSizeInBytes <= sVar3)) {
          piVar1 = __errno();
          eVar4 = 0x22;
          goto LAB_00439173;
        }
        eVar4 = 0x50;
        sVar3 = _DstSizeInBytes;
      }
      else {
        eVar4 = 0;
      }
      _Dst[sVar3 - 1] = '\0';
    }
    if (_PtNumOfCharConverted != (size_t *)0x0) {
      *_PtNumOfCharConverted = sVar3;
    }
  }
  else {
    piVar1 = __errno();
    eVar4 = 0x16;
LAB_00439173:
    *piVar1 = eVar4;
    FUN_00429bfe();
  }
  return eVar4;
}



// Library Function - Single Match
//  _wcstombs_s
// 
// Libraries: Visual Studio 2015 Release, Visual Studio 2017 Release

errno_t __cdecl
_wcstombs_s(size_t *_PtNumOfCharConverted,char *_Dst,size_t _DstSizeInBytes,wchar_t *_Src,
           size_t _MaxCountInBytes)

{
  errno_t eVar1;
  
  eVar1 = __wcstombs_s_l(_PtNumOfCharConverted,_Dst,_DstSizeInBytes,_Src,_MaxCountInBytes,
                         (_locale_t)0x0);
  return eVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __strnicmp
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2017 Release, Visual Studio 2019 Release

int __cdecl __strnicmp(char *_Str1,char *_Str2,size_t _MaxCount)

{
  int *piVar1;
  int iVar2;
  
  if (_DAT_0045871c == 0) {
    if ((_Str1 == (char *)0x0) || (_Str2 == (char *)0x0)) {
      piVar1 = __errno();
      *piVar1 = 0x16;
      FUN_00429bfe();
      iVar2 = 0x7fffffff;
    }
    else {
      if (_MaxCount < 0x80000000) {
        iVar2 = ___ascii_strnicmp(_Str1,_Str2,_MaxCount);
        return iVar2;
      }
      piVar1 = __errno();
      *piVar1 = 0x16;
      FUN_00429bfe();
      iVar2 = 0x7fffffff;
    }
  }
  else {
    iVar2 = FUN_0043922b(_Str1,(byte *)_Str2,_MaxCount,(pthreadlocinfo *)0x0);
  }
  return iVar2;
}



int __cdecl FUN_0043922b(char *param_1,byte *param_2,uint param_3,pthreadlocinfo *param_4)

{
  int *piVar1;
  uint uVar2;
  uint uVar3;
  int iVar4;
  pthreadlocinfo local_14 [2];
  int local_c;
  char local_8;
  
  if (param_3 == 0) {
    iVar4 = 0;
  }
  else {
    FUN_00427078(local_14,param_4);
    iVar4 = 0x7fffffff;
    if (((param_1 == (char *)0x0) || (param_2 == (byte *)0x0)) || (0x7fffffff < param_3)) {
      piVar1 = __errno();
      *piVar1 = 0x16;
      FUN_00429bfe();
    }
    else if (local_14[0]->locale_name[2] == (wchar_t *)0x0) {
      iVar4 = ___ascii_strnicmp(param_1,(char *)param_2,param_3);
    }
    else {
      iVar4 = (int)param_1 - (int)param_2;
      do {
        uVar2 = FUN_00428e66((uint)param_2[iVar4],local_14);
        uVar3 = FUN_00428e66((uint)*param_2,local_14);
        param_2 = param_2 + 1;
        param_3 = param_3 - 1;
        if ((param_3 == 0) || (uVar2 == 0)) break;
      } while (uVar2 == uVar3);
      iVar4 = uVar2 - uVar3;
    }
    if (local_8 != '\0') {
      *(uint *)(local_c + 0x70) = *(uint *)(local_c + 0x70) & 0xfffffffd;
    }
  }
  return iVar4;
}



// Library Function - Single Match
//  ___crtCompareStringW
// 
// Library: Visual Studio 2012 Release

int __cdecl
___crtCompareStringW
          (LPCWSTR _LocaleName,DWORD _DwCmpFlags,LPCWSTR _LpString1,int _CchCount1,
          LPCWSTR _LpString2,int _CchCount2)

{
  int iVar1;
  
  if (0 < _CchCount1) {
    _CchCount1 = _wcsnlen(_LpString1,_CchCount1);
  }
  if (0 < _CchCount2) {
    _CchCount2 = _wcsnlen(_LpString2,_CchCount2);
  }
  if ((_CchCount1 == 0) || (_CchCount2 == 0)) {
    if (_CchCount1 == _CchCount2) {
      iVar1 = 2;
    }
    else {
      iVar1 = (uint)(-1 < _CchCount1 - _CchCount2) * 2 + 1;
    }
  }
  else {
    iVar1 = FUN_00434968(_LocaleName,_DwCmpFlags,_LpString1,_CchCount1,_LpString2,_CchCount2);
  }
  return iVar1;
}



void __cdecl FUN_00439340(byte *param_1,byte *param_2,size_t param_3)

{
  FUN_00439358(param_1,param_2,param_3,(pthreadlocinfo *)0x0);
  return;
}



int __cdecl FUN_00439358(byte *param_1,byte *param_2,size_t param_3,pthreadlocinfo *param_4)

{
  byte bVar1;
  ushort uVar2;
  byte *pbVar3;
  int iVar4;
  int *piVar5;
  uint uVar6;
  byte *pbVar7;
  undefined local_1c [4];
  int local_18;
  int local_14;
  char local_10;
  uint local_c;
  byte *local_8;
  
  if (param_3 == 0) {
    iVar4 = 0;
  }
  else {
    FUN_00427078(local_1c,param_4);
    if (*(int *)(local_18 + 8) == 0) {
      iVar4 = __strnicmp((char *)param_1,(char *)param_2,param_3);
    }
    else if ((param_1 == (byte *)0x0) || (local_8 = param_2, param_2 == (byte *)0x0)) {
      piVar5 = __errno();
      *piVar5 = 0x16;
      FUN_00429bfe();
      iVar4 = 0x7fffffff;
    }
    else {
      while( true ) {
        local_c = 0;
        bVar1 = *param_1;
        param_3 = param_3 - 1;
        pbVar7 = param_1 + 1;
        if ((*(byte *)(bVar1 + 0x19 + local_18) & 4) == 0) {
          param_3._0_2_ = (ushort)bVar1;
          if ((*(byte *)((ushort)param_3 + 0x19 + local_18) & 0x10) != 0) {
            param_3._0_2_ = (ushort)*(byte *)((ushort)param_3 + 0x119 + local_18);
          }
        }
        else if (*pbVar7 == 0) {
          param_3._0_2_ = 0;
        }
        else {
          param_3._0_2_ = CONCAT11(bVar1,*pbVar7);
          pbVar7 = param_1 + 2;
          if (((ushort)param_3 < *(ushort *)(local_18 + 0xc)) ||
             (*(ushort *)(local_18 + 0xe) <= (ushort)param_3 &&
              (ushort)param_3 != *(ushort *)(local_18 + 0xe))) {
            if ((*(ushort *)(local_18 + 0x12) <= (ushort)param_3) &&
               ((ushort)param_3 < *(ushort *)(local_18 + 0x14) ||
                (ushort)param_3 == *(ushort *)(local_18 + 0x14))) {
              param_3._0_2_ = (ushort)param_3 + *(short *)(local_18 + 0x16);
            }
          }
          else {
            param_3._0_2_ = (ushort)param_3 + *(short *)(local_18 + 0x10);
          }
        }
        pbVar3 = local_8 + 1;
        uVar6 = (uint)*local_8;
        if ((*(byte *)(uVar6 + 0x19 + local_18) & 4) == 0) {
          local_c = uVar6;
          if ((*(byte *)(uVar6 + 0x19 + local_18) & 0x10) != 0) {
            local_c = (uint)*(byte *)(uVar6 + 0x119 + local_18);
          }
        }
        else if (*pbVar3 != 0) {
          uVar2 = CONCAT11(*local_8,*pbVar3);
          local_c = (uint)uVar2;
          pbVar3 = local_8 + 2;
          if ((uVar2 < *(ushort *)(local_18 + 0xc)) ||
             (*(ushort *)(local_18 + 0xe) <= uVar2 && uVar2 != *(ushort *)(local_18 + 0xe))) {
            if ((*(ushort *)(local_18 + 0x12) <= uVar2) &&
               (uVar2 < *(ushort *)(local_18 + 0x14) || uVar2 == *(ushort *)(local_18 + 0x14))) {
              local_c = (uint)(ushort)(uVar2 + *(short *)(local_18 + 0x16));
            }
          }
          else {
            local_c = (uint)(ushort)(uVar2 + *(short *)(local_18 + 0x10));
          }
        }
        local_8 = pbVar3;
        iVar4 = 0;
        if ((ushort)local_c != (ushort)param_3) break;
        if (((ushort)param_3 == 0) || (param_1 = pbVar7, param_3 == 0)) goto LAB_004394da;
      }
      iVar4 = (-(uint)((ushort)local_c < (ushort)param_3) & 2) - 1;
    }
LAB_004394da:
    if (local_10 != '\0') {
      *(uint *)(local_14 + 0x70) = *(uint *)(local_14 + 0x70) & 0xfffffffd;
    }
  }
  return iVar4;
}



// Library Function - Single Match
//  __putwch_nolock
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release

wint_t __cdecl __putwch_nolock(wchar_t _WCh)

{
  BOOL BVar1;
  DWORD local_8;
  
  if (DAT_00448d60 == (HANDLE)0xfffffffe) {
    ___dcrt_lowio_initialize_console_output();
  }
  if ((DAT_00448d60 == (HANDLE)0xffffffff) ||
     (BVar1 = WriteConsoleW(DAT_00448d60,&_WCh,1,&local_8,(LPVOID)0x0), BVar1 == 0)) {
    _WCh = L'\xffff';
  }
  return _WCh;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// Library Function - Single Match
//  __87except
// 
// Library: Visual Studio 2019 Release

void __cdecl __87except(int param_1,int *param_2,ushort *param_3)

{
  bool bVar1;
  undefined3 extraout_var;
  int iVar2;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined uVar3;
  uint uVar4;
  undefined in_stack_ffffff68;
  uint local_94;
  uint local_90 [12];
  undefined8 local_60;
  uint local_50;
  uint local_14;
  
  local_14 = DAT_00447ff8 ^ (uint)&stack0xfffffff0;
  local_94 = (uint)*param_3;
  iVar2 = *param_2;
  if (iVar2 == 1) {
LAB_0043961e:
    uVar4 = 8;
  }
  else if (iVar2 == 2) {
    uVar4 = 4;
  }
  else if (iVar2 == 3) {
    uVar4 = 0x11;
  }
  else if (iVar2 == 4) {
    uVar4 = 0x12;
  }
  else {
    if (iVar2 == 5) goto LAB_0043961e;
    if (iVar2 == 7) {
      *param_2 = 1;
      goto LAB_00439680;
    }
    if (iVar2 != 8) goto LAB_00439680;
    uVar4 = 0x10;
  }
  bVar1 = __handle_exc(uVar4,(double *)(param_2 + 6),local_94);
  if (CONCAT31(extraout_var,bVar1) == 0) {
    if (((param_1 == 0x10) || (param_1 == 0x16)) || (param_1 == 0x1d)) {
      local_60 = *(undefined8 *)(param_2 + 4);
      local_50 = local_50 & 0xffffffe3 | 3;
    }
    else {
      local_50 = local_50 & 0xfffffffe;
    }
    __raise_exc(local_90,&local_94,uVar4,param_1,(undefined8 *)(param_2 + 2),
                (undefined8 *)(param_2 + 6));
  }
LAB_00439680:
  __ctrlfp(local_94,0xffff);
  if (((*param_2 == 8) || (_DAT_00447ff4 != 0)) ||
     (iVar2 = FUN_00408410(), uVar3 = extraout_DL, iVar2 == 0)) {
    __set_errno_from_matherr(*param_2);
    uVar3 = extraout_DL_00;
  }
  FUN_004298aa(local_14 ^ (uint)&stack0xfffffff0,uVar3,in_stack_ffffff68);
  return;
}



// WARNING: Could not reconcile some variable overlaps

void __cdecl
FUN_004396c1(int param_1,uint param_2,ushort param_3,int param_4,byte param_5,short *param_6)

{
  short *psVar1;
  code *pcVar2;
  ushort uVar3;
  errno_t eVar4;
  int iVar5;
  ushort *puVar6;
  uint uVar7;
  char cVar8;
  ushort uVar9;
  int *piVar10;
  int *piVar11;
  int iVar12;
  uint uVar13;
  ushort *puVar14;
  short *psVar15;
  short sVar16;
  uint uVar17;
  uint extraout_EDX;
  uint extraout_EDX_00;
  uint uVar18;
  int iVar19;
  uint uVar20;
  ushort uVar21;
  ushort uVar22;
  int iVar23;
  ushort *puVar24;
  int iVar25;
  uint uVar26;
  bool bVar27;
  char *pcVar28;
  undefined uVar29;
  ushort *in_stack_ffffff74;
  int local_7c;
  short *local_5c;
  int local_58;
  uint local_54;
  int local_50;
  int local_4c;
  uint local_48;
  uint local_44;
  ushort local_40;
  undefined2 uStack62;
  undefined2 uStack60;
  undefined2 uStack58;
  int local_38;
  undefined4 local_34;
  undefined4 local_30;
  ushort local_2c;
  undefined2 uStack42;
  ushort local_24;
  undefined4 uStack34;
  undefined4 uStack30;
  undefined local_1a;
  byte bStack25;
  byte local_14;
  undefined uStack19;
  ushort uStack18;
  ushort local_10 [4];
  uint local_8;
  
  uVar29 = SUB41(in_stack_ffffff74,0);
  local_8 = DAT_00447ff8 ^ (uint)&stack0xfffffffc;
  uVar17 = param_3 & 0x8000;
  local_34 = 0xcccccccc;
  uVar22 = param_3 & 0x7fff;
  local_30 = 0xcccccccc;
  local_2c = 0xcccc;
  uStack42 = 0x3ffb;
  sVar16 = (short)uVar17;
  if (sVar16 == 0) {
    *(undefined *)(param_6 + 1) = 0x20;
  }
  else {
    *(undefined *)(param_6 + 1) = 0x2d;
  }
  if (uVar22 == 0) {
    if ((param_2 == 0) && (param_1 == 0)) {
      *(undefined *)((int)param_6 + 3) = 1;
      *param_6 = 0;
      *(byte *)(param_6 + 1) = ((sVar16 != -0x8000) - 1U & 0xd) + 0x20;
      param_6[2] = 0x30;
      param_1 = CONCAT22(uStack34._2_2_,(ushort)uStack34);
      goto LAB_0043a03e;
    }
  }
  else if (uVar22 == 0x7fff) {
    *param_6 = 1;
    if (((param_2 == 0x80000000) && (param_1 == 0)) || ((param_2 & 0x40000000) != 0)) {
      if ((sVar16 == 0) || (param_2 != 0xc0000000)) {
        if ((param_2 != 0x80000000) || (param_1 != 0)) goto LAB_004397d1;
        pcVar28 = "1#INF";
      }
      else {
        if (param_1 != 0) {
LAB_004397d1:
          pcVar28 = "1#QNAN";
          goto LAB_004397d6;
        }
        pcVar28 = "1#IND";
      }
      eVar4 = _strcpy_s((char *)(param_6 + 2),0x16,pcVar28);
      if (eVar4 != 0) goto LAB_0043a088;
      *(undefined *)((int)param_6 + 3) = 5;
      uVar17 = extraout_EDX;
    }
    else {
      pcVar28 = "1#SNAN";
LAB_004397d6:
      eVar4 = _strcpy_s((char *)(param_6 + 2),0x16,pcVar28);
      if (eVar4 != 0) {
LAB_0043a088:
        __invoke_watson((wchar_t *)0x0,(wchar_t *)0x0,(wchar_t *)0x0,0,0);
        pcVar2 = (code *)swi(3);
        (*pcVar2)();
        return;
      }
      *(undefined *)((int)param_6 + 3) = 6;
      uVar17 = extraout_EDX_00;
    }
    param_1 = CONCAT22(uStack34._2_2_,(ushort)uStack34);
    goto LAB_0043a03e;
  }
  uStack30._0_2_ = (undefined2)param_2;
  uStack30._2_2_ = (ushort)(param_2 >> 0x10);
  iVar23 = 0x448a38;
  local_1a = (undefined)uVar22;
  bStack25 = (byte)(uVar22 >> 8);
  local_5c = (short *)0x5;
  local_4c._0_2_ =
       (short)((uint)uVar22 * 0x4d10 + -0x134312f4 +
               ((uint)(uVar22 >> 8) + (param_2 >> 0x18) * 2) * 0x4d >> 0x10);
  uStack34._0_2_ = (ushort)param_1;
  uStack34._2_2_ = (ushort)((uint)param_1 >> 0x10);
  local_24 = 0;
  uVar17 = (uint)(short)local_4c;
  bVar27 = -uVar17 == 0;
  if (bVar27) {
LAB_00439b91:
    uVar17 = CONCAT22((undefined2)uStack30,uStack34._2_2_);
    uVar20 = param_1 << 0x10;
  }
  else {
    local_48 = -uVar17;
    if (0 < (int)uVar17) {
      iVar23 = 0x448b98;
      bVar27 = uVar17 == 0;
      local_48 = uVar17;
    }
    if (bVar27) goto LAB_00439b91;
    uVar20 = param_1 << 0x10;
    uVar17 = CONCAT22((undefined2)uStack30,uStack34._2_2_);
    local_44 = uVar20;
    do {
      uStack30._2_2_ = (ushort)(param_2 >> 0x10);
      iVar25 = 0;
      uVar13 = (int)local_48 >> 3;
      iVar23 = iVar23 + 0x54;
      if ((local_48 & 7) != 0) {
        piVar10 = (int *)((local_48 & 7) * 0xc + iVar23);
        piVar11 = piVar10;
        if (0x7fff < *(ushort *)piVar10) {
          piVar11 = (int *)&local_40;
          local_40 = (ushort)*piVar10;
          uStack62 = (undefined2)((uint)*piVar10 >> 0x10);
          uStack60 = (undefined2)piVar10[1];
          uStack58 = (undefined2)((uint)piVar10[1] >> 0x10);
          local_38 = piVar10[2];
          iVar5 = CONCAT22(uStack60,uStack62) + -1;
          uStack62 = (undefined2)iVar5;
          uStack60 = (undefined2)((uint)iVar5 >> 0x10);
        }
        uVar21 = *(ushort *)((int)piVar11 + 10) & 0x7fff;
        uVar3 = CONCAT11(bStack25,local_1a) & 0x7fff;
        uVar22 = (*(ushort *)((int)piVar11 + 10) ^ CONCAT11(bStack25,local_1a)) & 0x8000;
        uVar9 = uVar3 + uVar21;
        local_14 = 0;
        uStack19 = 0;
        uStack18 = 0;
        local_10[0] = 0;
        local_10[1] = uStack18;
        local_10[2] = local_10[0];
        local_10[3] = uStack18;
        if (((uVar3 < 0x7fff) && (uVar21 < 0x7fff)) && (uVar9 < 0xbffe)) {
          if (uVar9 < 0x3fc0) {
LAB_00439924:
            local_1a = 0;
            bStack25 = 0;
            uStack30._2_2_ = local_10[0];
            goto LAB_00439b71;
          }
          if (((uVar3 == 0) &&
              (uVar9 = uVar9 + 1,
              (CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_)) & 0x7fffffff) == 0)) &&
             ((uVar17 == 0 && (local_44 == 0)))) {
            local_1a = 0;
            bStack25 = 0;
            uVar20 = local_44;
            goto LAB_00439b81;
          }
          if (((uVar21 == 0) && (uVar9 = uVar9 + 1, (piVar11[2] & 0x7fffffffU) == 0)) &&
             ((piVar11[1] == 0 && (*piVar11 == 0)))) goto LAB_00439924;
          puVar14 = local_10;
          local_54 = 5;
          iVar5 = iVar25;
          do {
            if (0 < (int)local_54) {
              in_stack_ffffff74 = &local_24 + iVar5;
              piVar10 = piVar11 + 2;
              iVar19 = local_54;
              do {
                uVar17 = *(uint *)(puVar14 + -2) +
                         (uint)*in_stack_ffffff74 * (uint)*(ushort *)piVar10;
                if ((uVar17 < *(uint *)(puVar14 + -2)) ||
                   (iVar12 = iVar25, uVar17 < (uint)*in_stack_ffffff74 * (uint)*(ushort *)piVar10))
                {
                  iVar12 = 1;
                }
                *(uint *)(puVar14 + -2) = uVar17;
                if (iVar12 != 0) {
                  *puVar14 = *puVar14 + 1;
                }
                in_stack_ffffff74 = in_stack_ffffff74 + 1;
                piVar10 = (int *)((int)piVar10 + -2);
                iVar19 = iVar19 + -1;
              } while (0 < iVar19);
            }
            puVar14 = puVar14 + 1;
            iVar5 = iVar5 + 1;
            local_54 = local_54 + -1;
          } while (0 < (int)local_54);
          local_44 = CONCAT22(local_10[3],local_10[2]);
          uVar9 = uVar9 + 0xc002;
          uVar17 = CONCAT22(uStack18,CONCAT11(uStack19,local_14));
          if ((short)uVar9 < 1) {
LAB_00439a60:
            uVar9 = uVar9 - 1;
            if (-1 < (short)uVar9) goto LAB_00439ad1;
            local_54 = (uint)(ushort)-uVar9;
            uVar9 = 0;
            uVar20 = local_44;
            do {
              if ((local_14 & 1) != 0) {
                iVar25 = iVar25 + 1;
              }
              uVar26 = CONCAT22(local_10[1],local_10[0]);
              local_10[1] = local_10[1] >> 1 | (ushort)((uVar20 << 0x1f) >> 0x10);
              uVar18 = uVar17 >> 1;
              local_44 = uVar20 >> 1;
              uVar17 = uVar18 | uVar26 << 0x1f;
              local_54 = local_54 - 1;
              local_10[2] = (ushort)local_44;
              local_10[3] = (ushort)(uVar20 >> 0x11);
              local_10[0] = (ushort)(uVar26 >> 1);
              local_14 = (byte)uVar18;
              uStack19 = (undefined)(uVar18 >> 8);
              uStack18 = (ushort)(uVar17 >> 0x10);
              uVar20 = local_44;
            } while (local_54 != 0);
            if (iVar25 == 0) goto LAB_00439ad1;
            uVar3 = (ushort)uVar18 | 1;
            local_14 = (byte)uVar3;
            uVar17 = uVar18 | 1;
          }
          else {
            do {
              if ((int)local_44 < 0) break;
              iVar5 = CONCAT22(local_10[1],local_10[0]) * 2;
              uVar3 = local_10[1] >> 0xf;
              local_10[0] = (ushort)iVar5 | (ushort)(uVar17 >> 0x1f);
              uVar17 = uVar17 * 2;
              local_10[1] = (ushort)((uint)iVar5 >> 0x10);
              uVar20 = local_44 * 2;
              local_14 = (byte)uVar17;
              uStack19 = (undefined)(uVar17 >> 8);
              uStack18 = (ushort)(uVar17 >> 0x10);
              local_44 = uVar20 | uVar3;
              uVar9 = uVar9 - 1;
              local_10[2] = (ushort)local_44;
              local_10[3] = (ushort)(uVar20 >> 0x10);
            } while (0 < (short)uVar9);
            if ((short)uVar9 < 1) goto LAB_00439a60;
LAB_00439ad1:
            uVar3 = CONCAT11(uStack19,local_14);
          }
          if ((0x8000 < uVar3) || ((uVar17 & 0x1ffff) == 0x18000)) {
            if (CONCAT22(local_10[0],uStack18) == -1) {
              uStack18 = 0;
              local_10[0] = 0;
              if (CONCAT22(local_10[2],local_10[1]) == -1) {
                local_10[1] = 0;
                local_10[2] = 0;
                if (local_10[3] == 0xffff) {
                  local_10[3] = 0x8000;
                  uVar9 = uVar9 + 1;
                }
                else {
                  local_10[3] = local_10[3] + 1;
                }
              }
              else {
                iVar25 = CONCAT22(local_10[2],local_10[1]) + 1;
                local_10[1] = (ushort)iVar25;
                local_10[2] = (ushort)((uint)iVar25 >> 0x10);
              }
              local_44 = CONCAT22(local_10[3],local_10[2]);
            }
            else {
              iVar25 = CONCAT22(local_10[0],uStack18) + 1;
              uStack18 = (ushort)iVar25;
              local_10[0] = (ushort)((uint)iVar25 >> 0x10);
            }
          }
          if (0x7ffe < uVar9) goto LAB_00439b5a;
          bStack25 = (byte)(uVar9 >> 8) | (byte)(uVar22 >> 8);
          local_24 = uStack18;
          uStack34._0_2_ = local_10[0];
          uStack34._2_2_ = local_10[1];
          uVar20 = CONCAT22(local_10[0],uStack18);
          uStack30._0_2_ = (undefined2)local_44;
          uStack30._2_2_ = (ushort)(local_44 >> 0x10);
          uVar17 = CONCAT22((undefined2)uStack30,local_10[1]);
          local_1a = (undefined)uVar9;
        }
        else {
LAB_00439b5a:
          iVar25 = ((uVar22 == 0) - 1 & 0x80000000) + 0x7fff8000;
          uStack30._2_2_ = (ushort)iVar25;
          local_1a = (undefined)((uint)iVar25 >> 0x10);
          bStack25 = (byte)((uint)iVar25 >> 0x18);
LAB_00439b71:
          uVar17 = 0;
          local_24 = 0;
          uStack34._0_2_ = 0;
          uStack34._2_2_ = 0;
          uStack30._0_2_ = 0;
          uVar20 = uVar17;
        }
        param_2 = CONCAT22(uStack30._2_2_,(undefined2)uStack30);
        param_1 = CONCAT22(uStack34._2_2_,(ushort)uStack34);
        local_44 = uVar20;
      }
LAB_00439b81:
      uVar29 = SUB41(in_stack_ffffff74,0);
      local_48 = uVar13;
    } while (uVar13 != 0);
  }
  uStack30._2_2_ = (ushort)(param_2 >> 0x10);
  uVar13 = CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_));
  uStack30 = param_2;
  if (0x3ffe < (ushort)(uVar13 >> 0x10)) {
    local_4c._0_2_ = (short)local_4c + 1;
    local_7c = 0;
    local_14 = 0;
    uStack19 = 0;
    uStack18 = 0;
    local_10[0] = 0;
    local_10[1] = 0;
    local_10[2] = 0;
    local_10[3] = 0;
    uVar13 = uVar13 >> 0x10 & 0x7fff;
    local_50 = uVar13 + 0x3ffb;
    if (((0x7ffe < (ushort)uVar13) || (false)) || (0xbffd < (ushort)local_50)) {
LAB_00439e2f:
      iVar23 = (((bStack25 & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;
      uStack30._2_2_ = (ushort)iVar23;
      local_1a = (undefined)((uint)iVar23 >> 0x10);
      bStack25 = (byte)((uint)iVar23 >> 0x18);
    }
    else {
      if (0x3fbf < (ushort)local_50) {
        if ((((ushort)uVar13 == 0) &&
            (local_50 = uVar13 + 0x3ffc,
            (CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_)) & 0x7fffffff) == 0)) &&
           ((uVar17 == 0 && (uVar20 == 0)))) {
          local_1a = 0;
          bStack25 = 0;
          goto LAB_00439e4a;
        }
        if (((false) && (local_50 = local_50 + 1, false)) && ((false && (false))))
        goto LAB_00439c0c;
        puVar14 = local_10;
        local_54 = 0;
        do {
          if (0 < (int)local_5c) {
            puVar6 = &local_2c;
            puVar24 = &local_24 + local_54;
            iVar23 = (int)local_5c;
            do {
              uVar17 = *(uint *)(puVar14 + -2) + (uint)*puVar6 * (uint)*puVar24;
              if ((uVar17 < *(uint *)(puVar14 + -2)) || (uVar17 < (uint)*puVar6 * (uint)*puVar24)) {
                bVar27 = true;
              }
              else {
                bVar27 = false;
              }
              *(uint *)(puVar14 + -2) = uVar17;
              if (bVar27) {
                *puVar14 = *puVar14 + 1;
              }
              puVar24 = puVar24 + 1;
              puVar6 = puVar6 + -1;
              iVar23 = iVar23 + -1;
            } while (0 < iVar23);
          }
          puVar14 = puVar14 + 1;
          local_54 = local_54 + 1;
          local_5c = (short *)((int)local_5c + -1);
        } while (0 < (int)local_5c);
        uStack30 = CONCAT22(local_10[3],local_10[2]);
        local_50 = local_50 + 0xc002;
        if ((short)local_50 < 1) {
          uVar17 = CONCAT22(uStack18,CONCAT11(uStack19,local_14));
LAB_00439d83:
          uVar22 = (ushort)(local_50 + 0xffff);
          if (-1 < (short)uVar22) goto LAB_00439d28;
          local_5c = (short *)(-(local_50 + 0xffff) & 0xffff);
          uVar22 = uVar22 + (short)local_5c;
          do {
            uVar20 = uStack30;
            if ((local_14 & 1) != 0) {
              local_7c = local_7c + 1;
            }
            uVar13 = CONCAT22(local_10[1],local_10[0]);
            uVar26 = uVar17 >> 1;
            local_10[1] = local_10[1] >> 1 | (ushort)((uVar20 << 0x1f) >> 0x10);
            uVar17 = uVar26 | uVar13 << 0x1f;
            uStack30 = uVar20 >> 1;
            local_5c = (short *)((int)local_5c - 1);
            local_10[0] = (ushort)(uVar13 >> 1);
            local_14 = (byte)uVar26;
            uStack19 = (undefined)(uVar26 >> 8);
            uStack18 = (ushort)(uVar17 >> 0x10);
          } while (local_5c != (short *)0x0);
          local_10[2] = (ushort)uStack30;
          local_10[3] = (ushort)(uVar20 >> 0x11);
          if (local_7c == 0) goto LAB_00439d28;
          uVar9 = (ushort)uVar26 | 1;
          local_14 = (byte)uVar9;
          uVar17 = uVar26 | 1;
        }
        else {
          uVar17 = CONCAT22(uStack18,CONCAT11(uStack19,local_14));
          do {
            if ((int)uStack30 < 0) break;
            iVar23 = CONCAT22(local_10[1],local_10[0]) * 2;
            uVar22 = local_10[1] >> 0xf;
            local_10[0] = (ushort)iVar23 | (ushort)(uVar17 >> 0x1f);
            uVar20 = uStack30 * 2;
            local_10[1] = (ushort)((uint)iVar23 >> 0x10);
            uVar17 = uVar17 * 2;
            local_14 = (byte)uVar17;
            uStack19 = (undefined)(uVar17 >> 8);
            uStack18 = (ushort)(uVar17 >> 0x10);
            uStack30 = uVar20 | uVar22;
            local_50 = local_50 + 0xffff;
            local_10[2] = (ushort)uStack30;
            local_10[3] = (ushort)(uVar20 >> 0x10);
          } while (0 < (short)local_50);
          uVar22 = (ushort)local_50;
          if ((short)uVar22 < 1) goto LAB_00439d83;
LAB_00439d28:
          uVar9 = CONCAT11(uStack19,local_14);
        }
        if ((0x8000 < uVar9) || ((uVar17 & 0x1ffff) == 0x18000)) {
          if (CONCAT22(local_10[0],uStack18) == -1) {
            uStack18 = 0;
            local_10[0] = 0;
            if (CONCAT22(local_10[2],local_10[1]) == -1) {
              local_10[1] = uStack18;
              local_10[2] = local_10[0];
              if (local_10[3] == 0xffff) {
                uVar22 = uVar22 + 1;
                local_10[3] = 0x8000;
              }
              else {
                local_10[3] = local_10[3] + 1;
              }
            }
            else {
              iVar23 = CONCAT22(local_10[2],local_10[1]) + 1;
              local_10[1] = (ushort)iVar23;
              local_10[2] = (ushort)((uint)iVar23 >> 0x10);
            }
            uStack30 = CONCAT22(local_10[3],local_10[2]);
          }
          else {
            iVar23 = CONCAT22(local_10[0],uStack18) + 1;
            uStack18 = (ushort)iVar23;
            local_10[0] = (ushort)((uint)iVar23 >> 0x10);
          }
        }
        if (uVar22 < 0x7fff) {
          bStack25 = (byte)(uVar22 >> 8) | bStack25 & 0x80;
          local_24 = uStack18;
          param_1 = CONCAT22(local_10[1],local_10[0]);
          uVar17 = CONCAT22((undefined2)uStack30,local_10[1]);
          uVar20 = CONCAT22(local_10[0],uStack18);
          local_1a = (undefined)uVar22;
          goto LAB_00439e4a;
        }
        goto LAB_00439e2f;
      }
LAB_00439c0c:
      uStack30._2_2_ = 0;
      local_1a = 0;
      bStack25 = 0;
    }
    uVar17 = 0;
    uVar20 = uVar17;
    uStack30 = param_2 & 0xffff | (uint)uStack30._2_2_ << 0x10;
  }
LAB_00439e4a:
  uStack30._2_2_ = (ushort)(uStack30 >> 0x10);
  *param_6 = (short)local_4c;
  if ((param_5 & 1) == 0) {
    local_4c = param_4;
LAB_00439e95:
    if (0x15 < local_4c) {
      local_4c = 0x15;
    }
    iVar23 = (CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_)) >> 0x10) - 0x3ffe;
    uVar13 = (uint)uStack30._2_2_;
    iVar25 = 8;
    do {
      uVar7 = uVar20 >> 0x1f;
      uVar26 = uVar17 * 2;
      uVar18 = uVar13 * 2;
      uVar20 = uVar20 * 2;
      uVar13 = uVar18 | uVar17 >> 0x1f;
      uVar17 = uVar26 | uVar7;
      local_24 = (ushort)uVar20;
      uStack34._0_2_ = (ushort)(uVar20 >> 0x10);
      uStack30._2_2_ = (ushort)uVar13;
      local_1a = (undefined)(uVar18 >> 0x10);
      bStack25 = (byte)(uVar18 >> 0x18);
      iVar25 = iVar25 + -1;
    } while (iVar25 != 0);
    uStack34._2_2_ = (ushort)uVar17;
    uStack30._0_2_ = (undefined2)(uVar26 >> 0x10);
    local_48 = uVar13;
    local_44 = uVar20;
    if ((iVar23 < 0) && (uVar26 = -iVar23 & 0xff, uVar26 != 0)) {
      do {
        uVar7 = uVar20 >> 1;
        uVar20 = uVar7 | uVar17 << 0x1f;
        uVar18 = uVar17 >> 1;
        local_48 = uVar13 >> 1;
        uVar17 = uVar18 | uVar13 << 0x1f;
        uVar26 = uVar26 - 1;
        uStack30._2_2_ = (ushort)local_48;
        local_1a = (undefined)(local_48 >> 0x10);
        bStack25 = (byte)(uVar13 >> 0x19);
        local_24 = (ushort)uVar7;
        uStack34._0_2_ = (ushort)(uVar20 >> 0x10);
        uVar13 = local_48;
      } while (0 < (int)uVar26);
      uStack34._2_2_ = (ushort)uVar18;
      uStack30._0_2_ = (undefined2)(uVar17 >> 0x10);
      local_44 = uVar20;
    }
    local_58 = local_4c + 1;
    psVar1 = param_6 + 2;
    local_5c = psVar1;
    if (0 < local_58) {
      while( true ) {
        local_40 = local_24;
        uStack62 = (ushort)uStack34;
        uStack60 = uStack34._2_2_;
        uStack58 = (undefined2)uStack30;
        local_38 = CONCAT13(bStack25,CONCAT12(local_1a,uStack30._2_2_));
        uVar20 = (uVar17 * 2 | local_44 >> 0x1f) * 2 | local_44 * 2 >> 0x1f;
        uVar13 = (local_48 * 2 | uVar17 >> 0x1f) * 2 | uVar17 * 2 >> 0x1f;
        uVar17 = CONCAT22((ushort)uStack34,local_24) + local_44 * 4;
        if ((uVar17 < local_44 * 4) ||
           (uVar26 = uVar20, uVar17 < CONCAT22((ushort)uStack34,local_24))) {
          uVar26 = uVar20 + 1;
          if ((uVar26 < uVar20) || (bVar27 = false, uVar26 == 0)) {
            bVar27 = true;
          }
          if (bVar27) {
            uVar13 = uVar13 + 1;
          }
        }
        uVar20 = CONCAT22((undefined2)uStack30,uStack34._2_2_) + uVar26;
        if ((uVar20 < uVar26) || (uVar20 < CONCAT22((undefined2)uStack30,uStack34._2_2_))) {
          uVar13 = uVar13 + 1;
        }
        local_44 = uVar17 * 2;
        local_24 = (ushort)local_44;
        uStack34._0_2_ = (ushort)(local_44 >> 0x10);
        uVar17 = uVar20 * 2 | uVar17 >> 0x1f;
        uVar13 = (uVar13 + local_38) * 2;
        uStack34._2_2_ = (ushort)uVar17;
        uStack30._0_2_ = (undefined2)(uVar20 * 2 >> 0x10);
        uStack30._2_2_ = (ushort)uVar13 | (ushort)(uVar20 >> 0x1f);
        local_1a = (undefined)(uVar13 >> 0x10);
        *(char *)local_5c = (char)(uVar13 >> 0x18) + '0';
        local_5c = (short *)((int)local_5c + 1);
        local_58 = local_58 + -1;
        bStack25 = 0;
        if (local_58 < 1) break;
        local_48 = uVar13 & 0xffffff | uVar20 >> 0x1f;
      }
    }
    param_1 = CONCAT22(uStack34._2_2_,(ushort)uStack34);
    psVar15 = local_5c + -1;
    if (*(char *)((int)local_5c + -1) < '5') {
      for (; (psVar1 <= psVar15 && (*(char *)psVar15 == '0'));
          psVar15 = (short *)((int)psVar15 + -1)) {
      }
      if (psVar15 < psVar1) {
        *param_6 = 0;
        *(byte *)(param_6 + 1) = ((sVar16 != -0x8000) - 1U & 0xd) + 0x20;
        *(undefined *)((int)param_6 + 3) = 1;
        *(char *)psVar1 = '0';
        goto LAB_00439e8a;
      }
    }
    else {
      for (; (psVar1 <= psVar15 && (*(char *)psVar15 == '9'));
          psVar15 = (short *)((int)psVar15 + -1)) {
        *(char *)psVar15 = '0';
      }
      if (psVar15 < psVar1) {
        psVar15 = (short *)((int)psVar15 + 1);
        *param_6 = *param_6 + 1;
      }
      *(char *)psVar15 = *(char *)psVar15 + '\x01';
    }
    cVar8 = ((char)psVar15 - (char)param_6) + -3;
    *(char *)((int)param_6 + 3) = cVar8;
    *(undefined *)(cVar8 + 4 + (int)param_6) = 0;
  }
  else {
    local_4c = param_4 + (short)local_4c;
    if (0 < local_4c) goto LAB_00439e95;
    *param_6 = 0;
    *(byte *)(param_6 + 1) = ((sVar16 != -0x8000) - 1U & 0xd) + 0x20;
    *(undefined *)((int)param_6 + 3) = 1;
    *(undefined *)(param_6 + 2) = 0x30;
LAB_00439e8a:
    *(undefined *)((int)param_6 + 5) = 0;
  }
LAB_0043a03e:
  uStack34 = param_1;
  FUN_004298aa(local_8 ^ (uint)&stack0xfffffffc,(char)uVar17,uVar29);
  return;
}



// Library Function - Single Match
//  ___hw_cw_sse2
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2019 Release

uint __cdecl ___hw_cw_sse2(uint param_1)

{
  uint uVar1;
  uint uVar2;
  
  uVar1 = 0;
  if ((param_1 & 0x10) != 0) {
    uVar1 = 0x80;
  }
  if ((param_1 & 8) != 0) {
    uVar1 = uVar1 | 0x200;
  }
  if ((param_1 & 4) != 0) {
    uVar1 = uVar1 | 0x400;
  }
  if ((param_1 & 2) != 0) {
    uVar1 = uVar1 | 0x800;
  }
  if ((param_1 & 1) != 0) {
    uVar1 = uVar1 | 0x1000;
  }
  if ((param_1 & 0x80000) != 0) {
    uVar1 = uVar1 | 0x100;
  }
  uVar2 = param_1 & 0x300;
  if (uVar2 != 0) {
    if (uVar2 == 0x100) {
      uVar1 = uVar1 | 0x2000;
    }
    else if (uVar2 == 0x200) {
      uVar1 = uVar1 | 0x4000;
    }
    else if (uVar2 == 0x300) {
      uVar1 = uVar1 | 0x6000;
    }
  }
  uVar2 = param_1 & 0x3000000;
  if (uVar2 == 0x1000000) {
    uVar1 = uVar1 | 0x8040;
  }
  else {
    if (uVar2 == 0x2000000) {
      return uVar1 | 0x40;
    }
    if (uVar2 == 0x3000000) {
      return uVar1 | 0x8000;
    }
  }
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint __cdecl FUN_0043a13e(uint param_1,uint param_2)

{
  uint uVar1;
  uint uVar2;
  ushort uVar3;
  uint uVar4;
  uint in_MXCSR;
  ushort in_FPUControlWord;
  
  uVar1 = 0;
  if ((in_FPUControlWord & 1) != 0) {
    uVar1 = 0x10;
  }
  if ((in_FPUControlWord & 4) != 0) {
    uVar1 = uVar1 | 8;
  }
  if ((in_FPUControlWord & 8) != 0) {
    uVar1 = uVar1 | 4;
  }
  if ((in_FPUControlWord & 0x10) != 0) {
    uVar1 = uVar1 | 2;
  }
  if ((in_FPUControlWord & 0x20) != 0) {
    uVar1 = uVar1 | 1;
  }
  if ((in_FPUControlWord & 2) != 0) {
    uVar1 = uVar1 | 0x80000;
  }
  uVar3 = in_FPUControlWord & 0xc00;
  if ((in_FPUControlWord & 0xc00) != 0) {
    if (uVar3 == 0x400) {
      uVar1 = uVar1 | 0x100;
    }
    else if (uVar3 == 0x800) {
      uVar1 = uVar1 | 0x200;
    }
    else if (uVar3 == 0xc00) {
      uVar1 = uVar1 | 0x300;
    }
  }
  if ((in_FPUControlWord & 0x300) == 0) {
    uVar1 = uVar1 | 0x20000;
  }
  else if ((in_FPUControlWord & 0x300) == 0x200) {
    uVar1 = uVar1 | 0x10000;
  }
  if ((in_FPUControlWord & 0x1000) != 0) {
    uVar1 = uVar1 | 0x40000;
  }
  uVar4 = ~param_2 & uVar1 | param_1 & param_2;
  if (uVar4 != uVar1) {
    uVar1 = __hw_cw(uVar4);
    uVar4 = 0;
    if ((uVar1 & 1) != 0) {
      uVar4 = 0x10;
    }
    if ((uVar1 & 4) != 0) {
      uVar4 = uVar4 | 8;
    }
    if ((uVar1 & 8) != 0) {
      uVar4 = uVar4 | 4;
    }
    if ((uVar1 & 0x10) != 0) {
      uVar4 = uVar4 | 2;
    }
    if ((uVar1 & 0x20) != 0) {
      uVar4 = uVar4 | 1;
    }
    if ((uVar1 & 2) != 0) {
      uVar4 = uVar4 | 0x80000;
    }
    uVar2 = uVar1 & 0xc00;
    if (uVar2 != 0) {
      if (uVar2 == 0x400) {
        uVar4 = uVar4 | 0x100;
      }
      else if (uVar2 == 0x800) {
        uVar4 = uVar4 | 0x200;
      }
      else if (uVar2 == 0xc00) {
        uVar4 = uVar4 | 0x300;
      }
    }
    if ((uVar1 & 0x300) == 0) {
      uVar4 = uVar4 | 0x20000;
    }
    else if ((uVar1 & 0x300) == 0x200) {
      uVar4 = uVar4 | 0x10000;
    }
    if ((uVar1 & 0x1000) != 0) {
      uVar4 = uVar4 | 0x40000;
    }
  }
  uVar1 = uVar4;
  if (0 < _DAT_00458498) {
    uVar2 = 0;
    if ((char)in_MXCSR < '\0') {
      uVar2 = 0x10;
    }
    if ((in_MXCSR & 0x200) != 0) {
      uVar2 = uVar2 | 8;
    }
    if ((in_MXCSR & 0x400) != 0) {
      uVar2 = uVar2 | 4;
    }
    if ((in_MXCSR & 0x800) != 0) {
      uVar2 = uVar2 | 2;
    }
    if ((in_MXCSR & 0x1000) != 0) {
      uVar2 = uVar2 | 1;
    }
    if ((in_MXCSR & 0x100) != 0) {
      uVar2 = uVar2 | 0x80000;
    }
    uVar1 = in_MXCSR & 0x6000;
    if (uVar1 != 0) {
      if (uVar1 == 0x2000) {
        uVar2 = uVar2 | 0x100;
      }
      else if (uVar1 == 0x4000) {
        uVar2 = uVar2 | 0x200;
      }
      else if (uVar1 == 0x6000) {
        uVar2 = uVar2 | 0x300;
      }
    }
    uVar1 = in_MXCSR & 0x8040;
    if (uVar1 == 0x40) {
      uVar2 = uVar2 | 0x2000000;
    }
    else if (uVar1 == 0x8000) {
      uVar2 = uVar2 | 0x3000000;
    }
    else if (uVar1 == 0x8040) {
      uVar2 = uVar2 | 0x1000000;
    }
    uVar1 = ~(param_2 & 0x308031f) & uVar2 | param_2 & 0x308031f & param_1;
    if (uVar1 != uVar2) {
      uVar1 = ___hw_cw_sse2(uVar1);
      ___set_fpsr_sse2(uVar1);
      uVar2 = 0;
      if ((char)in_MXCSR < '\0') {
        uVar2 = 0x10;
      }
      if ((in_MXCSR & 0x200) != 0) {
        uVar2 = uVar2 | 8;
      }
      if ((in_MXCSR & 0x400) != 0) {
        uVar2 = uVar2 | 4;
      }
      if ((in_MXCSR & 0x800) != 0) {
        uVar2 = uVar2 | 2;
      }
      if ((in_MXCSR & 0x1000) != 0) {
        uVar2 = uVar2 | 1;
      }
      if ((in_MXCSR & 0x100) != 0) {
        uVar2 = uVar2 | 0x80000;
      }
      uVar1 = in_MXCSR & 0x6000;
      if (uVar1 != 0) {
        if (uVar1 == 0x2000) {
          uVar2 = uVar2 | 0x100;
        }
        else if (uVar1 == 0x4000) {
          uVar2 = uVar2 | 0x200;
        }
        else if (uVar1 == 0x6000) {
          uVar2 = uVar2 | 0x300;
        }
      }
      uVar1 = in_MXCSR & 0x8040;
      if (uVar1 == 0x40) {
        uVar2 = uVar2 | 0x2000000;
      }
      else if (uVar1 == 0x8000) {
        uVar2 = uVar2 | 0x3000000;
      }
      else if (uVar1 == 0x8040) {
        uVar2 = uVar2 | 0x1000000;
      }
    }
    uVar1 = uVar2 | uVar4;
    if (((uVar2 ^ uVar4) & 0x8031f) != 0) {
      uVar1 = uVar1 | 0x80000000;
    }
  }
  return uVar1;
}



// Library Function - Single Match
//  __hw_cw
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2015 Release, Visual Studio 2019 Release

uint __cdecl __hw_cw(uint param_1)

{
  uint uVar1;
  uint uVar2;
  
  uVar1 = (uint)((param_1 & 0x10) != 0);
  if ((param_1 & 8) != 0) {
    uVar1 = uVar1 | 4;
  }
  if ((param_1 & 4) != 0) {
    uVar1 = uVar1 | 8;
  }
  if ((param_1 & 2) != 0) {
    uVar1 = uVar1 | 0x10;
  }
  if ((param_1 & 1) != 0) {
    uVar1 = uVar1 | 0x20;
  }
  if ((param_1 & 0x80000) != 0) {
    uVar1 = uVar1 | 2;
  }
  uVar2 = param_1 & 0x300;
  if (uVar2 != 0) {
    if (uVar2 == 0x100) {
      uVar1 = uVar1 | 0x400;
    }
    else if (uVar2 == 0x200) {
      uVar1 = uVar1 | 0x800;
    }
    else if (uVar2 == 0x300) {
      uVar1 = uVar1 | 0xc00;
    }
  }
  if ((param_1 & 0x30000) == 0) {
    uVar1 = uVar1 | 0x300;
  }
  else if ((param_1 & 0x30000) == 0x10000) {
    uVar1 = uVar1 | 0x200;
  }
  if ((param_1 & 0x40000) != 0) {
    uVar1 = uVar1 | 0x1000;
  }
  return uVar1;
}



ushort __cdecl FUN_0043a4d7(ushort param_1,FILE *param_2)

{
  uint uVar1;
  WCHAR *pWVar2;
  FILE *pFVar3;
  byte bVar4;
  WCHAR *pWVar5;
  int *piVar6;
  undefined **ppuVar7;
  undefined3 extraout_var;
  FILE *pFVar8;
  undefined *puVar9;
  FILE *pFVar10;
  longlong lVar11;
  undefined4 local_8;
  
  pFVar3 = param_2;
  pWVar5 = (WCHAR *)__fileno(param_2);
  uVar1 = param_2->_flag;
  if ((uVar1 & 0x82) == 0) {
    piVar6 = __errno();
    *piVar6 = 9;
LAB_0043a4fc:
    param_2->_flag = param_2->_flag | 0x20;
    return 0xffff;
  }
  if ((uVar1 & 0x40) != 0) {
    piVar6 = __errno();
    *piVar6 = 0x22;
    goto LAB_0043a4fc;
  }
  pFVar10 = (FILE *)0x0;
  if ((uVar1 & 1) != 0) {
    param_2->_cnt = 0;
    if ((uVar1 & 0x10) == 0) {
      param_2->_flag = uVar1 | 0x20;
      return 0xffff;
    }
    param_2->_ptr = param_2->_base;
    param_2->_flag = uVar1 & 0xfffffffe;
  }
  uVar1 = param_2->_flag;
  param_2->_cnt = 0;
  param_2->_flag = uVar1 & 0xffffffef | 2;
  if (((uVar1 & 0x10c) == 0) &&
     (((ppuVar7 = FUN_0042761d(), param_2 != (FILE *)(ppuVar7 + 8) &&
       (ppuVar7 = FUN_0042761d(), param_2 != (FILE *)(ppuVar7 + 0x10))) ||
      (bVar4 = FUN_004366ed((uint)pWVar5), CONCAT31(extraout_var,bVar4) == 0)))) {
    __getbuf(param_2);
  }
  if ((param_2->_flag & 0x108U) == 0) {
    local_8 = CONCAT22(local_8._2_2_,param_1);
    param_2 = (FILE *)0x2;
    pFVar10 = (FILE *)FUN_00435c1a(pWVar5,(WCHAR *)&local_8,2);
  }
  else {
    pWVar2 = (WCHAR *)param_2->_base;
    pFVar8 = (FILE *)(param_2->_ptr + -(int)pWVar2);
    param_2->_ptr = (char *)(pWVar2 + 1);
    param_2->_cnt = param_2->_bufsiz + -2;
    if ((int)pFVar8 < 1) {
      if ((pWVar5 == (WCHAR *)0xffffffff) || (pWVar5 == (WCHAR *)0xfffffffe)) {
        puVar9 = &DAT_00448240;
      }
      else {
        puVar9 = (undefined *)(((uint)pWVar5 & 0x1f) * 0x40 + (&DAT_004585f8)[(int)pWVar5 >> 5]);
      }
      if (((puVar9[4] & 0x20) != 0) && (lVar11 = FUN_0042bb38((uint)pWVar5,0,0,2), lVar11 == -1))
      goto LAB_0043a624;
    }
    else {
      pFVar10 = (FILE *)FUN_00435c1a(pWVar5,pWVar2,(uint)pFVar8);
    }
    *(ushort *)param_2->_base = param_1;
    param_2 = pFVar8;
  }
  if (pFVar10 == param_2) {
    return param_1;
  }
LAB_0043a624:
  pFVar3->_flag = pFVar3->_flag | 0x20;
  return 0xffff;
}



undefined2 __cdecl FUN_0043a639(FILE *param_1)

{
  char cVar1;
  undefined2 uVar2;
  int *piVar3;
  uint uVar4;
  uint uVar5;
  int iVar6;
  undefined *puVar7;
  bool bVar8;
  LPWSTR pWVar9;
  char local_5;
  
  bVar8 = false;
  local_5 = '\0';
  cVar1 = local_5;
  local_5 = '\0';
  if (param_1 == (FILE *)0x0) {
    piVar3 = __errno();
    *piVar3 = 0x16;
    FUN_00429bfe();
  }
  else {
    uVar5 = param_1->_flag;
    if (((uVar5 & 0x83) != 0) && ((uVar5 & 0x40) == 0)) {
      if ((uVar5 & 2) == 0) {
        param_1->_flag = uVar5 | 1;
        if ((uVar5 & 0x10c) == 0) {
          __getbuf(param_1);
        }
        else {
          bVar8 = param_1->_cnt == 1;
          local_5 = cVar1;
          if (bVar8) {
            local_5 = *param_1->_ptr;
          }
          param_1->_ptr = param_1->_base;
        }
        uVar5 = param_1->_bufsiz;
        pWVar9 = (LPWSTR)param_1->_base;
        uVar4 = __fileno(param_1);
        uVar5 = FUN_0042b293(uVar4,pWVar9,uVar5);
        param_1->_cnt = uVar5;
        if (((uVar5 != 0) && (uVar5 != 1)) && (uVar5 != 0xffffffff)) {
          if ((*(byte *)&param_1->_flag & 0x82) == 0) {
            iVar6 = __fileno(param_1);
            if ((iVar6 == -1) || (iVar6 = __fileno(param_1), iVar6 == -2)) {
              puVar7 = &DAT_00448240;
            }
            else {
              iVar6 = __fileno(param_1);
              uVar5 = __fileno(param_1);
              puVar7 = (undefined *)((uVar5 & 0x1f) * 0x40 + (&DAT_004585f8)[iVar6 >> 5]);
            }
            if ((puVar7[4] & 0x82) == 0x82) {
              param_1->_flag = param_1->_flag | 0x2000;
            }
          }
          if (((param_1->_bufsiz == 0x200) && ((*(byte *)&param_1->_flag & 8) != 0)) &&
             ((param_1->_flag & 0x400U) == 0)) {
            param_1->_bufsiz = 0x1000;
          }
          if (bVar8) {
            cVar1 = *param_1->_ptr;
            param_1->_cnt = param_1->_cnt + -1;
            param_1->_ptr = param_1->_ptr + 1;
            return CONCAT11(cVar1,local_5);
          }
          param_1->_cnt = param_1->_cnt + -2;
          uVar2 = *(undefined2 *)param_1->_ptr;
          param_1->_ptr = (char *)((int)param_1->_ptr + 2);
          return uVar2;
        }
        param_1->_flag = param_1->_flag | (-(uint)(uVar5 != 0) & 0x10) + 0x10;
        param_1->_cnt = 0;
      }
      else {
        param_1->_flag = uVar5 | 0x20;
      }
    }
  }
  return 0xffff;
}



// Library Function - Single Match
//  ___ascii_strnicmp
// 
// Libraries: Visual Studio 2012 Release, Visual Studio 2017 Release, Visual Studio 2019 Release

int __cdecl ___ascii_strnicmp(char *_Str1,char *_Str2,size_t _MaxCount)

{
  byte bVar1;
  byte bVar2;
  bool bVar3;
  
  if (_MaxCount != 0) {
    do {
      bVar2 = *_Str1;
      bVar1 = *_Str2;
      if ((bVar2 == 0) || (bVar1 == 0)) break;
      _Str1 = (char *)((byte *)_Str1 + 1);
      _Str2 = (char *)((byte *)_Str2 + 1);
      if ((0x40 < bVar2) && (bVar2 < 0x5b)) {
        bVar2 = bVar2 + 0x20;
      }
      if ((0x40 < bVar1) && (bVar1 < 0x5b)) {
        bVar1 = bVar1 + 0x20;
      }
      bVar3 = bVar2 < bVar1;
      if (bVar2 != bVar1) goto LAB_0043a801;
      _MaxCount = _MaxCount - 1;
    } while (_MaxCount != 0);
    _MaxCount = 0;
    bVar3 = bVar2 < bVar1;
    if (bVar2 != bVar1) {
LAB_0043a801:
      _MaxCount = 0xffffffff;
      if (!bVar3) {
        _MaxCount = 1;
      }
    }
  }
  return _MaxCount;
}



void FUN_0043a811(void)

{
  if ((DAT_00448d60 != (HANDLE)0xffffffff) && (DAT_00448d60 != (HANDLE)0xfffffffe)) {
    CloseHandle(DAT_00448d60);
  }
  return;
}



// Library Function - Single Match
//  ___dcrt_lowio_initialize_console_output
// 
// Libraries: Visual Studio 2015 Debug, Visual Studio 2015 Release

void ___dcrt_lowio_initialize_console_output(void)

{
  DAT_00448d60 = CreateFileW(L"CONOUT$",0x40000000,3,(LPSECURITY_ATTRIBUTES)0x0,3,0,(HANDLE)0x0);
  return;
}



BOOL IsProcessorFeaturePresent(DWORD ProcessorFeature)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0043a848. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = IsProcessorFeaturePresent(ProcessorFeature);
  return BVar1;
}



void RtlUnwind(PVOID TargetFrame,PVOID TargetIp,PEXCEPTION_RECORD ExceptionRecord,PVOID ReturnValue)

{
                    // WARNING: Could not recover jumptable at 0x0043a84e. Too many branches
                    // WARNING: Treating indirect jump as call
  RtlUnwind(TargetFrame,TargetIp,ExceptionRecord,ReturnValue);
  return;
}



void FUN_0043a860(void)

{
  if (DAT_0044a060 != '\0') {
                    // WARNING: Could not recover jumptable at 0x0043a872. Too many branches
                    // WARNING: Treating indirect jump as call
    (**(code **)(**(int **)g_pMemAlloc_exref + 0x48))();
    return;
  }
  return;
}



void FUN_0043a880(void)

{
  FUN_00401e20((int)&DAT_00449f10);
  return;
}



void FUN_0043a890(void)

{
  FUN_00403f30((int)&DAT_0044a5b8);
  return;
}



void FUN_0043a8a0(void)

{
  if (DAT_0044a670 == &PTR_vftable_00447014) {
    DAT_0044a670 = (undefined **)0x0;
  }
  PTR_vftable_00447014 = (undefined *)CTacIntEncryption::vftable;
  return;
}



void FUN_0043a8c0(void)

{
  PTR_vftable_00447078 = (undefined *)fixapi2_impl::CFixAppSystem::vftable;
  DAT_0044a6a8 = 0;
  FUN_0040af20((undefined4 *)&DAT_00447080);
  return;
}



void FUN_0043a8e0(void)

{
  PTR_vftable_00447178 = (undefined *)fixapi2_impl::CFixNetworkBandwidthMonitor::vftable;
  return;
}



void FUN_0043a8f0(void)

{
  PTR_vftable_0044729c = (undefined *)CFixAPI_JsonParser::vftable;
  if (DAT_004472c4 != 0) {
    FUN_0041b960(DAT_004472c4);
    DAT_004472c4 = 0;
  }
  return;
}



void FUN_0043a920(void)

{
  FUN_00424ac0((int **)&DAT_00456ea0);
  return;
}



void FUN_0043a930(void)

{
  PTR_vftable_004475a0 = (undefined *)ConVar::vftable;
  PTR_vftable_004475b8 = (undefined *)ConVar::vftable;
  if (DAT_004475c4 != 0) {
    FUN_00403c10(DAT_004475c4);
    DAT_004475c4 = 0;
  }
  FUN_0040a350((int *)&DAT_004475e4);
  PTR_vftable_004475a0 = (undefined *)ConCommandBase::vftable;
  return;
}



void FUN_0043a980(void)

{
  int iVar1;
  
  iVar1 = DAT_004583a8;
  if (DAT_004583a8 != 0) {
    FUN_00423f20(DAT_004583a8);
    FUN_0040a350((int *)(iVar1 + 0x24));
    FUN_004234f0(iVar1);
    FUN_00403c10(iVar1);
  }
  DAT_004583a8 = 0;
  return;
}


